{
  "packageName": "jdk.javadoc.doclet",
  "simpleName": "Option",
  "moduleName": "jdk.javadoc",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getArgumentCount",
      "comment": "Returns the number of arguments, this option will consume.",
      "annotations": [],
      "tagMap": {
        "return": [
          "number of consumed arguments"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDescription",
      "comment": "Returns the description of the option. For instance, the option \"group\", would return the synopsis of the option such as, \"groups the documents\".",
      "annotations": [],
      "tagMap": {
        "return": [
          "description if set, otherwise an empty String"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.javadoc.doclet.Doclet$Option$Kind",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getKind",
      "comment": "Returns the option kind.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the kind of this option"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNames",
      "comment": "Returns the list of names that may be used to identify the option. For instance, the list could be [\"-classpath\", \"--class-path\"] for the option \"-classpath\", with an alias \"--class-path\".",
      "annotations": [],
      "tagMap": {
        "return": [
          "the names of the option"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getParameters",
      "comment": "Returns the parameters of the option. For instance \"name \u003cp1\u003e:\u003cp2\u003e..\"",
      "annotations": [],
      "tagMap": {
        "return": [
          "parameters if set, otherwise an empty String"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "option",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "arguments",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "process",
      "comment": "Processes the option and arguments as needed. This method will be invoked if the given option name matches the option.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eoption\u003c/code\u003e - the option",
          "\u003ccode\u003earguments\u003c/code\u003e - a list encapsulating the arguments"
        ],
        "return": [
          "true if operation succeeded, false otherwise"
        ]
      }
    }
  ],
  "innerClasses": [
    "jdk.javadoc.doclet.Doclet$Option$Kind"
  ],
  "memberType": "JavaClass",
  "modifiers": 521,
  "name": "jdk.javadoc.doclet.Doclet$Option",
  "comment": "An encapsulation of option name, aliases, parameters and descriptions as used by the Doclet.",
  "tagMap": {}
}