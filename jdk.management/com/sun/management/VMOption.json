{
  "packageName": "com.sun.management",
  "simpleName": "VMOption",
  "moduleName": "jdk.management",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getName",
      "comment": "Returns the name of this VM option.",
      "tagMap": {
        "return": [
          "the name of this VM option."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getValue",
      "comment": "Returns the value of this VM option at the time when this VMOption was created. The value could have been changed.",
      "tagMap": {
        "return": [
          "the value of the VM option at the time when this \n\u003ccode\u003eVMOption\u003c/code\u003e was created."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.management.VMOption$Origin",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOrigin",
      "comment": "Returns the origin of the value of this VM option. That is, where the value of this VM option came from.",
      "tagMap": {
        "return": [
          "where the value of this VM option came from."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isWriteable",
      "comment": "Tests if this VM option is writeable. If this VM option is writeable, it can be set by the HotSpotDiagnosticMXBean.setVMOption method.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this VM option is writeable; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.management.VMOption",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.openmbean.CompositeData",
            "type": "Class"
          },
          "field": {
            "name": "cd"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "from",
      "comment": "Returns a VMOption object represented by the given CompositeData. The given CompositeData must contain the following attributes: description Attribute Name Type name java.lang.String value java.lang.String origin java.lang.String writeable java.lang.Boolean",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecd\u003c/code\u003e - \n\u003ccode\u003eCompositeData\u003c/code\u003e representing a \n\u003ccode\u003eVMOption\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ecd\u003c/code\u003e does not represent a \n\u003ccode\u003eVMOption\u003c/code\u003e with the attributes described above."
        ],
        "return": [
          "a \n\u003ccode\u003eVMOption\u003c/code\u003e object represented by \n\u003ccode\u003ecd\u003c/code\u003e if \n\u003ccode\u003ecd\u003c/code\u003e is not \n\u003ccode\u003enull\u003c/code\u003e; \n\u003ccode\u003enull\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "writeable"
          }
        },
        {
          "type": {
            "name": "com.sun.management.VMOption$Origin",
            "type": "Class"
          },
          "field": {
            "name": "origin"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a VMOption.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - Name of a VM option.",
          "\u003ccode\u003evalue\u003c/code\u003e - Value of a VM option.",
          "\u003ccode\u003ewriteable\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if a VM option can be set dynamically, or \n\u003ccode\u003efalse\u003c/code\u003e otherwise.",
          "\u003ccode\u003eorigin\u003c/code\u003e - where the value of a VM option came from."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the name or value is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    }
  ],
  "innerClasses": [
    "com.sun.management.VMOption$Origin"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "com.sun.management.VMOption",
  "comment": "Information about a VM option including its value and where the value came from which is referred as its \n\u003ca href\u003d\"VMOption.Origin.html\" title\u003d\"enum class in com.sun.management\"\u003e\u003ccode\u003e\u003ci\u003eorigin\u003c/i\u003e\u003c/code\u003e\u003c/a\u003e. \n\u003cp\u003e Each VM option has a default value. A VM option can be set at VM creation time typically as a command line argument to the launcher or an argument passed to the VM created using the JNI invocation interface. In addition, a VM option may be set via an environment variable or a configuration file. A VM option can also be set dynamically via a management interface after the VM was started. A \u003ccode\u003eVMOption\u003c/code\u003e contains the value of a VM option and the origin of that value at the time this \u003ccode\u003eVMOption\u003c/code\u003e object was constructed. The value of the VM option may be changed after the \u003ccode\u003eVMOption\u003c/code\u003e object was constructed,\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}