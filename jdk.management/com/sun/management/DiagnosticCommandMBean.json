{
  "packageName": "com.sun.management",
  "simpleName": "DiagnosticCommandMBean",
  "moduleName": "jdk.management",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.management.DynamicMBean",
    "type": "Class"
  },
  "members": [],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.management.DiagnosticCommandMBean",
  "comment": "Management interface for the diagnostic commands for the HotSpot Virtual Machine. \n\u003cp\u003eThe \u003ccode\u003eDiagnosticCommandMBean\u003c/code\u003e is registered to the \u003ca href\u003d\"../../../../java.management/java/lang/management/ManagementFactory.html#getPlatformMBeanServer()\"\u003eplatform MBeanServer\u003c/a\u003e as are other platform MBeans. \u003c/p\u003e\n\u003cp\u003eThe \u003ca href\u003d\"../../../../java.management/javax/management/ObjectName.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eObjectName\u003c/code\u003e\u003c/a\u003e for uniquely identifying the diagnostic MBean within an MBeanServer is: \u003c/p\u003e\n\u003cblockquote\u003e \n \u003ccode\u003ecom.sun.management:type\u003dDiagnosticCommand\u003c/code\u003e \n\u003c/blockquote\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eThis MBean is a \u003ca href\u003d\"../../../../java.management/javax/management/DynamicMBean.html\" title\u003d\"interface in javax.management\"\u003e\u003ccode\u003eDynamicMBean\u003c/code\u003e\u003c/a\u003e and also a \u003ca href\u003d\"../../../../java.management/javax/management/NotificationEmitter.html\" title\u003d\"interface in javax.management\"\u003e\u003ccode\u003eNotificationEmitter\u003c/code\u003e\u003c/a\u003e. The \u003ccode\u003eDiagnosticCommandMBean\u003c/code\u003e is generated at runtime and is subject to modifications during the lifetime of the Java virtual machine. A \u003cem\u003ediagnostic command\u003c/em\u003e is represented as an operation of the \u003ccode\u003eDiagnosticCommandMBean\u003c/code\u003e interface. Each diagnostic command has: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003ethe diagnostic command name which is the name being referenced in the HotSpot Virtual Machine\u003c/li\u003e \n \u003cli\u003ethe MBean operation name which is the \u003ca href\u003d\"../../../../java.management/javax/management/MBeanFeatureInfo.html#getName()\"\u003ename\u003c/a\u003e generated for the diagnostic command operation invocation. The MBean operation name is implementation dependent\u003c/li\u003e \n\u003c/ul\u003e The recommended way to transform a diagnostic command name into a MBean operation name is as follows: \n\u003cul\u003e \n \u003cli\u003eAll characters from the first one to the first dot are set to be lower-case characters\u003c/li\u003e \n \u003cli\u003eEvery dot or underline character is removed and the following character is set to be an upper-case character\u003c/li\u003e \n \u003cli\u003eAll other characters are copied without modification\u003c/li\u003e \n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eThe diagnostic command name is always provided with the meta-data on the operation in a field named \u003ccode\u003edcmd.name\u003c/code\u003e (see below). \u003c/p\u003e\n\u003cp\u003eA diagnostic command may or may not support options or arguments. All the operations return \u003ccode\u003eString\u003c/code\u003e and either take no parameter for operations that do not support any option or argument, or take a \u003ccode\u003eString[]\u003c/code\u003e parameter for operations that support at least one option or argument. Each option or argument must be stored in a single String. Options or arguments split across several String instances are not supported. \u003c/p\u003e\n\u003cp\u003eThe distinction between options and arguments: options are identified by the option name while arguments are identified by their position in the command line. Options and arguments are processed in the order of the array passed to the invocation method. \u003c/p\u003e\n\u003cp\u003eLike any operation of a dynamic MBean, each of these operations is described by \u003ca href\u003d\"../../../../java.management/javax/management/MBeanOperationInfo.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanOperationInfo\u003c/code\u003e\u003c/a\u003e instance. Here\u0027s the values returned by this object: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e\u003ca href\u003d\"../../../../java.management/javax/management/MBeanFeatureInfo.html#getName()\"\u003e\u003ccode\u003egetName()\u003c/code\u003e\u003c/a\u003e returns the operation name generated from the diagnostic command name\u003c/li\u003e \n \u003cli\u003e\u003ca href\u003d\"../../../../java.management/javax/management/MBeanFeatureInfo.html#getDescription()\"\u003e\u003ccode\u003egetDescription()\u003c/code\u003e\u003c/a\u003e returns the diagnostic command description (the same as the one return in the \u0027help\u0027 command)\u003c/li\u003e \n \u003cli\u003e\u003ca href\u003d\"../../../../java.management/javax/management/MBeanOperationInfo.html#getImpact()\"\u003e\u003ccode\u003egetImpact()\u003c/code\u003e\u003c/a\u003e returns \u003ccode\u003eACTION_INFO\u003c/code\u003e\u003c/li\u003e \n \u003cli\u003e\u003ca href\u003d\"../../../../java.management/javax/management/MBeanOperationInfo.html#getReturnType()\"\u003e\u003ccode\u003egetReturnType()\u003c/code\u003e\u003c/a\u003e returns \u003ccode\u003ejava.lang.String\u003c/code\u003e\u003c/li\u003e \n \u003cli\u003e\u003ca href\u003d\"../../../../java.management/javax/management/MBeanFeatureInfo.html#getDescriptor()\"\u003e\u003ccode\u003egetDescriptor()\u003c/code\u003e\u003c/a\u003e returns a Descriptor instance (see below)\u003c/li\u003e \n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eThe \u003ca href\u003d\"../../../../java.management/javax/management/Descriptor.html\" title\u003d\"interface in javax.management\"\u003e\u003ccode\u003eDescriptor\u003c/code\u003e\u003c/a\u003e is a collection of fields containing additional meta-data for a JMX element. A field is a name and an associated value. The additional meta-data provided for an operation associated with a diagnostic command are described in the table below: \u003c/p\u003e\n\u003ctable class\u003d\"striped\"\u003e\n \u003ccaption style\u003d\"display:none\"\u003e\n  description\n \u003c/caption\u003e \n \u003cthead\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"col\"\u003eName\u003c/th\u003e\n   \u003cth scope\u003d\"col\"\u003eType\u003c/th\u003e\n   \u003cth scope\u003d\"col\"\u003eDescription\u003c/th\u003e \n  \u003c/tr\u003e \n \u003c/thead\u003e \n \u003ctbody\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003edcmd.name\u003c/th\u003e\n   \u003ctd\u003eString\u003c/td\u003e \n   \u003ctd\u003eThe original diagnostic command name (not the operation name)\u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003edcmd.description\u003c/th\u003e\n   \u003ctd\u003eString\u003c/td\u003e \n   \u003ctd\u003eThe diagnostic command description\u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003edcmd.help\u003c/th\u003e\n   \u003ctd\u003eString\u003c/td\u003e \n   \u003ctd\u003eThe full help message for this diagnostic command (same output as the one produced by the \u0027help\u0027 command)\u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003edcmd.vmImpact\u003c/th\u003e\n   \u003ctd\u003eString\u003c/td\u003e \n   \u003ctd\u003eThe impact of the diagnostic command, this value is the same as the one printed in the \u0027impact\u0027 section of the help message of the diagnostic command, and it is different from the getImpact() of the MBeanOperationInfo\u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003edcmd.enabled\u003c/th\u003e\n   \u003ctd\u003eboolean\u003c/td\u003e \n   \u003ctd\u003eTrue if the diagnostic command is enabled, false otherwise\u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003edcmd.permissionClass\u003c/th\u003e\n   \u003ctd\u003eString\u003c/td\u003e \n   \u003ctd\u003eSome diagnostic command might require a specific permission to be executed, in addition to the MBeanPermission to invoke their associated MBean operation. This field returns the fully qualified name of the permission class or null if no permission is required \u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003edcmd.permissionName\u003c/th\u003e\n   \u003ctd\u003eString\u003c/td\u003e \n   \u003ctd\u003eThe fist argument of the permission required to execute this diagnostic command or null if no permission is required\u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003edcmd.permissionAction\u003c/th\u003e\n   \u003ctd\u003eString\u003c/td\u003e \n   \u003ctd\u003eThe second argument of the permission required to execute this diagnostic command or null if the permission constructor has only one argument (like the ManagementPermission) or if no permission is required\u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003edcmd.arguments\u003c/th\u003e\n   \u003ctd\u003eDescriptor\u003c/td\u003e \n   \u003ctd\u003eA Descriptor instance containing the descriptions of options and arguments supported by the diagnostic command (see below)\u003c/td\u003e \n  \u003c/tr\u003e \n \u003c/tbody\u003e \n\u003c/table\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eThe description of parameters (options or arguments) of a diagnostic command is provided within a Descriptor instance. In this Descriptor, each field name is a parameter name, and each field value is itself a Descriptor instance. The fields provided in this second Descriptor instance are described in the table below: \u003c/p\u003e\n\u003ctable class\u003d\"striped\"\u003e\n \u003ccaption style\u003d\"display:none\"\u003e\n  description\n \u003c/caption\u003e \n \u003cthead\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"col\"\u003eName\u003c/th\u003e\n   \u003cth scope\u003d\"col\"\u003eType\u003c/th\u003e\n   \u003cth scope\u003d\"col\"\u003eDescription\u003c/th\u003e \n  \u003c/tr\u003e \n \u003c/thead\u003e \n \u003ctbody\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003edcmd.arg.name\u003c/th\u003e\n   \u003ctd\u003eString\u003c/td\u003e \n   \u003ctd\u003eThe name of the parameter\u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003edcmd.arg.type\u003c/th\u003e\n   \u003ctd\u003eString\u003c/td\u003e \n   \u003ctd\u003eThe type of the parameter. The returned String is the name of a type recognized by the diagnostic command parser. These types are not Java types and are implementation dependent. \u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003edcmd.arg.description\u003c/th\u003e\n   \u003ctd\u003eString\u003c/td\u003e \n   \u003ctd\u003eThe parameter description\u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003edcmd.arg.isMandatory\u003c/th\u003e\n   \u003ctd\u003eboolean\u003c/td\u003e \n   \u003ctd\u003eTrue if the parameter is mandatory, false otherwise\u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003edcmd.arg.isOption\u003c/th\u003e\n   \u003ctd\u003eboolean\u003c/td\u003e \n   \u003ctd\u003eTrue if the parameter is an option, false if it is an argument\u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003edcmd.arg.isMultiple\u003c/th\u003e\n   \u003ctd\u003eboolean\u003c/td\u003e \n   \u003ctd\u003eTrue if the parameter can be specified several times, false otherwise\u003c/td\u003e \n  \u003c/tr\u003e \n \u003c/tbody\u003e \n\u003c/table\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eWhen the set of diagnostic commands currently supported by the Java Virtual Machine is modified, the \u003ccode\u003eDiagnosticCommandMBean\u003c/code\u003e emits a \u003ca href\u003d\"../../../../java.management/javax/management/Notification.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eNotification\u003c/code\u003e\u003c/a\u003e with a \u003ca href\u003d\"../../../../java.management/javax/management/Notification.html#getType()\"\u003etype\u003c/a\u003e of \u003ca href\u003d\"../../../../java.management/javax/management/MBeanInfo.html#info-changed\"\u003e \u003ccode\u003e\"jmx.mbean.info.changed\"\u003c/code\u003e\u003c/a\u003e and a \u003ca href\u003d\"../../../../java.management/javax/management/Notification.html#getUserData()\"\u003euserData\u003c/a\u003e that is the new \u003ccode\u003eMBeanInfo\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.8"
    ]
  }
}