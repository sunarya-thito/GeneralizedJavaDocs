{
  "packageName": "com.sun.management",
  "simpleName": "ThreadMXBean",
  "moduleName": "jdk.management",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.management.ThreadMXBean",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "long",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "ids"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getThreadCpuTime",
      "comment": "Returns the total CPU time for each thread whose ID is in the input array ids in nanoseconds. The returned values are of nanoseconds precision but not necessarily nanoseconds accuracy. This method is equivalent to calling the ThreadMXBean.getThreadCpuTime(long) method for each thread ID in the input array ids and setting the returned value in the corresponding element of the returned array.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/java/lang/management/ThreadMXBean.html#getThreadCpuTime(long)\"\u003e\u003ccode\u003eThreadMXBean.getThreadCpuTime(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.management/com/sun/management/ThreadMXBean.html#getThreadUserTime(long%5B%5D)\"\u003e\u003ccode\u003egetThreadUserTime(long[])\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/java/lang/management/ThreadMXBean.html#isThreadCpuTimeSupported()\"\u003e\u003ccode\u003eThreadMXBean.isThreadCpuTimeSupported()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/java/lang/management/ThreadMXBean.html#isThreadCpuTimeEnabled()\"\u003e\u003ccode\u003eThreadMXBean.isThreadCpuTimeEnabled()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/java/lang/management/ThreadMXBean.html#setThreadCpuTimeEnabled(boolean)\"\u003e\u003ccode\u003eThreadMXBean.setThreadCpuTimeEnabled(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eids\u003c/code\u003e - an array of thread IDs."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eids\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if any element in the input array \n\u003ccode\u003eids\u003c/code\u003e is \n\u003ccode\u003e\u0026lt;\u003d\u003c/code\u003e \n\u003ccode\u003e0\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the Java virtual machine implementation does not support CPU time measurement."
        ],
        "return": [
          "an array of long values, each of which is the amount of CPU time the thread whose ID is in the corresponding element of the input array of IDs has used, if the thread of a specified ID exists, the thread is alive, and CPU time measurement is enabled; \n\u003ccode\u003e-1\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "ids"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getThreadUserTime",
      "comment": "Returns the CPU time that each thread whose ID is in the input array ids has executed in user mode in nanoseconds. The returned values are of nanoseconds precision but not necessarily nanoseconds accuracy. This method is equivalent to calling the ThreadMXBean.getThreadUserTime(long) method for each thread ID in the input array ids and setting the returned value in the corresponding element of the returned array.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/java/lang/management/ThreadMXBean.html#getThreadUserTime(long)\"\u003e\u003ccode\u003eThreadMXBean.getThreadUserTime(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.management/com/sun/management/ThreadMXBean.html#getThreadCpuTime(long%5B%5D)\"\u003e\u003ccode\u003egetThreadCpuTime(long[])\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/java/lang/management/ThreadMXBean.html#isThreadCpuTimeSupported()\"\u003e\u003ccode\u003eThreadMXBean.isThreadCpuTimeSupported()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/java/lang/management/ThreadMXBean.html#isThreadCpuTimeEnabled()\"\u003e\u003ccode\u003eThreadMXBean.isThreadCpuTimeEnabled()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/java/lang/management/ThreadMXBean.html#setThreadCpuTimeEnabled(boolean)\"\u003e\u003ccode\u003eThreadMXBean.setThreadCpuTimeEnabled(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eids\u003c/code\u003e - an array of thread IDs."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eids\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if any element in the input array \n\u003ccode\u003eids\u003c/code\u003e is \n\u003ccode\u003e\u0026lt;\u003d\u003c/code\u003e \n\u003ccode\u003e0\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the Java virtual machine implementation does not support CPU time measurement."
        ],
        "return": [
          "an array of long values, each of which is the amount of user mode CPU time the thread whose ID is in the corresponding element of the input array of IDs has used, if the thread of a specified ID exists, the thread is alive, and CPU time measurement is enabled; \n\u003ccode\u003e-1\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCurrentThreadAllocatedBytes",
      "comment": "Returns an approximation of the total amount of memory, in bytes, allocated in heap memory for the current thread. The returned value is an approximation because some Java virtual machine implementations may use object allocation mechanisms that result in a delay between the time an object is allocated and the time its size is recorded. This is a convenience method for local management use and is equivalent to calling:    getThreadAllocatedBytes(Thread.currentThread().getId());",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.management/com/sun/management/ThreadMXBean.html#isThreadAllocatedMemorySupported()\"\u003e\u003ccode\u003eisThreadAllocatedMemorySupported()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.management/com/sun/management/ThreadMXBean.html#isThreadAllocatedMemoryEnabled()\"\u003e\u003ccode\u003eisThreadAllocatedMemoryEnabled()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.management/com/sun/management/ThreadMXBean.html#setThreadAllocatedMemoryEnabled(boolean)\"\u003e\u003ccode\u003esetThreadAllocatedMemoryEnabled(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the Java virtual machine implementation does not support thread memory allocation measurement."
        ],
        "return": [
          "an approximation of the total memory allocated, in bytes, in heap memory for the current thread if thread memory allocation measurement is enabled; \n\u003ccode\u003e-1\u003c/code\u003e otherwise."
        ],
        "since": [
          "14"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getThreadAllocatedBytes",
      "comment": "Returns an approximation of the total amount of memory, in bytes, allocated in heap memory for the thread with the specified ID. The returned value is an approximation because some Java virtual machine implementations may use object allocation mechanisms that result in a delay between the time an object is allocated and the time its size is recorded. If the thread with the specified ID is not alive or does not exist, this method returns -1. If thread memory allocation measurement is disabled, this method returns -1. A thread is alive if it has been started and has not yet died. If thread memory allocation measurement is enabled after the thread has started, the Java virtual machine implementation may choose any time up to and including the time that the capability is enabled as the point where thread memory allocation measurement starts.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.management/com/sun/management/ThreadMXBean.html#isThreadAllocatedMemorySupported()\"\u003e\u003ccode\u003eisThreadAllocatedMemorySupported()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.management/com/sun/management/ThreadMXBean.html#isThreadAllocatedMemoryEnabled()\"\u003e\u003ccode\u003eisThreadAllocatedMemoryEnabled()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.management/com/sun/management/ThreadMXBean.html#setThreadAllocatedMemoryEnabled(boolean)\"\u003e\u003ccode\u003esetThreadAllocatedMemoryEnabled(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eid\u003c/code\u003e - the thread ID of a thread"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eid\u003c/code\u003e \n\u003ccode\u003e\u0026lt;\u003d\u003c/code\u003e \n\u003ccode\u003e0\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the Java virtual machine implementation does not support thread memory allocation measurement."
        ],
        "return": [
          "an approximation of the total memory allocated, in bytes, in heap memory for the thread with the specified ID if the thread with the specified ID exists, the thread is alive, and thread memory allocation measurement is enabled; \n\u003ccode\u003e-1\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "ids"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getThreadAllocatedBytes",
      "comment": "Returns an approximation of the total amount of memory, in bytes, allocated in heap memory for each thread whose ID is in the input array ids. The returned values are approximations because some Java virtual machine implementations may use object allocation mechanisms that result in a delay between the time an object is allocated and the time its size is recorded. This method is equivalent to calling the getThreadAllocatedBytes(long) method for each thread ID in the input array ids and setting the returned value in the corresponding element of the returned array.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.management/com/sun/management/ThreadMXBean.html#getThreadAllocatedBytes(long)\"\u003e\u003ccode\u003egetThreadAllocatedBytes(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.management/com/sun/management/ThreadMXBean.html#isThreadAllocatedMemorySupported()\"\u003e\u003ccode\u003eisThreadAllocatedMemorySupported()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.management/com/sun/management/ThreadMXBean.html#isThreadAllocatedMemoryEnabled()\"\u003e\u003ccode\u003eisThreadAllocatedMemoryEnabled()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.management/com/sun/management/ThreadMXBean.html#setThreadAllocatedMemoryEnabled(boolean)\"\u003e\u003ccode\u003esetThreadAllocatedMemoryEnabled(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eids\u003c/code\u003e - an array of thread IDs."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eids\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if any element in the input array \n\u003ccode\u003eids\u003c/code\u003e is \n\u003ccode\u003e\u0026lt;\u003d\u003c/code\u003e \n\u003ccode\u003e0\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the Java virtual machine implementation does not support thread memory allocation measurement."
        ],
        "return": [
          "an array of long values, each of which is an approximation of the total memory allocated, in bytes, in heap memory for the thread whose ID is in the corresponding element of the input array of IDs."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isThreadAllocatedMemorySupported",
      "comment": "Tests if the Java virtual machine implementation supports thread memory allocation measurement.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the Java virtual machine implementation supports thread memory allocation measurement; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isThreadAllocatedMemoryEnabled",
      "comment": "Tests if thread memory allocation measurement is enabled.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.management/com/sun/management/ThreadMXBean.html#isThreadAllocatedMemorySupported()\"\u003e\u003ccode\u003eisThreadAllocatedMemorySupported()\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the Java virtual machine does not support thread memory allocation measurement."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if thread memory allocation measurement is enabled; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "enable"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setThreadAllocatedMemoryEnabled",
      "comment": "Enables or disables thread memory allocation measurement. The default is platform dependent.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.management/com/sun/management/ThreadMXBean.html#isThreadAllocatedMemorySupported()\"\u003e\u003ccode\u003eisThreadAllocatedMemorySupported()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eenable\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e to enable; \n\u003ccode\u003efalse\u003c/code\u003e to disable."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the Java virtual machine does not support thread memory allocation measurement.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and the caller does not have ManagementPermission(\"control\")."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.management.ThreadMXBean",
  "comment": "Platform-specific management interface for the thread system of the Java virtual machine. \n\u003cp\u003e This platform extension is only available to a thread implementation that supports this extension.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "6u25"
    ]
  }
}