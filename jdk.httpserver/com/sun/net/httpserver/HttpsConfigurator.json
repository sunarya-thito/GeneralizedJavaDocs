{
  "packageName": "com.sun.net.httpserver",
  "simpleName": "HttpsConfigurator",
  "moduleName": "jdk.httpserver",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.net.ssl.SSLContext",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSSLContext",
      "comment": "Returns the SSLContext for this HttpsConfigurator.",
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eSSLContext\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.net.httpserver.HttpsParameters",
            "type": "Class"
          },
          "field": {
            "name": "params"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "configure",
      "comment": "Called by the HttpsServer to configure the parameters for a https connection currently being established. The implementation of configure() must call HttpsParameters.setSSLParameters(SSLParameters) in order to set the SSL parameters for the connection. The default implementation of this method uses the SSLParameters returned from: getSSLContext().getDefaultSSLParameters() configure() may be overridden in order to modify this behavior. See example above.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eparams\u003c/code\u003e - the \n\u003ccode\u003eHttpsParameters\u003c/code\u003e to be configured"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.net.ssl.SSLContext",
            "type": "Class"
          },
          "field": {
            "name": "context"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a Https configuration, with the given SSLContext.",
      "tagMap": {
        "param": [
          "\u003ccode\u003econtext\u003c/code\u003e - the \n\u003ccode\u003eSSLContext\u003c/code\u003e to use for this configurator"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if no \n\u003ccode\u003eSSLContext\u003c/code\u003e supplied"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "com.sun.net.httpserver.HttpsConfigurator",
  "comment": "This class is used to configure the https parameters for each incoming https connection on a \n\u003ca href\u003d\"HttpsServer.html\" title\u003d\"class in com.sun.net.httpserver\"\u003e\u003ccode\u003eHttpsServer\u003c/code\u003e\u003c/a\u003e. Applications need to override the \n\u003ca href\u003d\"#configure(com.sun.net.httpserver.HttpsParameters)\"\u003e\u003ccode\u003econfigure(HttpsParameters)\u003c/code\u003e\u003c/a\u003e method in order to change the default configuration. \n\u003cp\u003e The following \u003ca id\u003d\"example\"\u003eexample\u003c/a\u003e shows how this may be done: \u003c/p\u003e\n\u003cblockquote\u003e\n \u003cpre\u003e SSLContext sslContext \u003d SSLContext.getInstance (....);\n HttpsServer server \u003d HttpsServer.create();\n\n server.setHttpsConfigurator (new HttpsConfigurator(sslContext) {\n     public void configure (HttpsParameters params) {\n\n         // get the remote address if needed\n         InetSocketAddress remote \u003d params.getClientAddress();\n\n         SSLContext c \u003d getSSLContext();\n\n         // get the default parameters\n         SSLParameters sslparams \u003d c.getDefaultSSLParameters();\n         if (remote.equals (...) ) {\n             // modify the default set for client x\n         }\n\n         params.setSSLParameters(sslparams);\n     }\n });\n \u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}