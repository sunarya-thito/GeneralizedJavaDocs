{
  "packageName": "com.sun.net.httpserver.spi",
  "simpleName": "HttpServerProvider",
  "moduleName": "jdk.httpserver",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "com.sun.net.httpserver.HttpServer",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.InetSocketAddress",
            "type": "Class"
          },
          "field": {
            "name": "addr"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "backlog"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createHttpServer",
      "comment": "creates a HttpServer from this provider",
      "tagMap": {
        "param": [
          "\u003ccode\u003eaddr\u003c/code\u003e - the address to bind to. May be \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003ebacklog\u003c/code\u003e - the socket backlog. A value of \n\u003ccode\u003ezero\u003c/code\u003e means the systems default"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs"
        ],
        "return": [
          "An instance of HttpServer"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.net.httpserver.HttpsServer",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.InetSocketAddress",
            "type": "Class"
          },
          "field": {
            "name": "addr"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "backlog"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createHttpsServer",
      "comment": "creates a HttpsServer from this provider",
      "tagMap": {
        "param": [
          "\u003ccode\u003eaddr\u003c/code\u003e - the address to bind to. May be \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003ebacklog\u003c/code\u003e - the socket backlog. A value of \n\u003ccode\u003ezero\u003c/code\u003e means the systems default"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs"
        ],
        "return": [
          "An instance of HttpServer"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.net.httpserver.spi.HttpServerProvider",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "provider",
      "comment": "Returns the system wide default HttpServerProvider for this invocation of the Java virtual machine. The first invocation of this method locates the default provider object as follows: If the system property com.sun.net.httpserver.HttpServerProvider is defined then it is taken to be the fully-qualified name of a concrete provider class. The class is loaded and instantiated; if this process fails then an unspecified unchecked error or exception is thrown. If a provider class has been installed in a jar file that is visible to the system class loader, and that jar file contains a provider-configuration file named com.sun.net.httpserver.HttpServerProvider in the resource directory META-INF/services, then the first class name specified in that file is taken. The class is loaded and instantiated; if this process fails then an unspecified unchecked error or exception is thrown. Finally, if no provider has been specified by any of the above means then the system-default provider class is instantiated and the result is returned. Subsequent invocations of this method return the provider that was returned by the first invocation.",
      "tagMap": {
        "return": [
          "The system-wide default HttpServerProvider"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Initializes a new instance of this class.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and it denies \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimePermission.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eRuntimePermission\u003c/code\u003e\u003c/a\u003e\n\u003ccode\u003e(\"httpServerProvider\")\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "com.sun.net.httpserver.spi.HttpServerProvider",
  "comment": "Service provider class for HttpServer. Sub-classes of HttpServerProvider provide an implementation of \n\u003ca href\u003d\"../HttpServer.html\" title\u003d\"class in com.sun.net.httpserver\"\u003e\u003ccode\u003eHttpServer\u003c/code\u003e\u003c/a\u003e and associated classes. Applications do not normally use this class. See \n\u003ca href\u003d\"#provider()\"\u003e\u003ccode\u003eprovider()\u003c/code\u003e\u003c/a\u003e for how providers are found and loaded.",
  "tagMap": {}
}