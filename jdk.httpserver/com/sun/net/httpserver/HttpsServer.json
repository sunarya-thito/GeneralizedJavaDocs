{
  "packageName": "com.sun.net.httpserver",
  "simpleName": "HttpsServer",
  "moduleName": "jdk.httpserver",
  "type": "CLASS",
  "superClass": {
    "name": "com.sun.net.httpserver.HttpServer",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "com.sun.net.httpserver.HttpsServer",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "create",
      "comment": "Creates a HttpsServer instance which is initially not bound to any local address/port. The HttpsServer is acquired from the currently installed HttpServerProvider. The server must be bound using HttpServer.bind(InetSocketAddress,int) before it can be used. The server must also have a HttpsConfigurator established with setHttpsConfigurator(HttpsConfigurator).",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.net.httpserver.HttpsServer",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.InetSocketAddress",
            "type": "Class"
          },
          "name": "addr",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "backlog",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "create",
      "comment": "Create a HttpsServer instance which will bind to the specified InetSocketAddress (IP address and port number). A maximum backlog can also be specified. This is the maximum number of queued incoming connections to allow on the listening socket. Queued TCP connections exceeding this limit may be rejected by the TCP implementation. The HttpsServer is acquired from the currently installed HttpServerProvider. The server must have a HttpsConfigurator established with setHttpsConfigurator(HttpsConfigurator).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eaddr\u003c/code\u003e - the address to listen on, if \n\u003ccode\u003enull\u003c/code\u003e then \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.httpserver/com/sun/net/httpserver/HttpServer.html#bind(java.net.InetSocketAddress,int)\"\u003e\u003ccode\u003eHttpServer.bind(InetSocketAddress,int)\u003c/code\u003e\u003c/a\u003e must be called to set the address",
          "\u003ccode\u003ebacklog\u003c/code\u003e - the socket backlog. If this value is less than or equal to zero, then a system default value is used."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/BindException.html\" title\u003d\"class in java.net\"\u003eBindException\u003c/a\u003e\u003c/code\u003e - if the server cannot bind to the requested address, or if the server is already bound",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.net.httpserver.HttpsConfigurator",
            "type": "Class"
          },
          "name": "config",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "setHttpsConfigurator",
      "comment": "Sets this server\u0027s HttpsConfigurator object.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003econfig\u003c/code\u003e - the \n\u003ccode\u003eHttpsConfigurator\u003c/code\u003e to set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if config is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.net.httpserver.HttpsConfigurator",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getHttpsConfigurator",
      "comment": "Gets this server\u0027s HttpsConfigurator object, if it has been set.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eHttpsConfigurator\u003c/code\u003e for this server, or \n\u003ccode\u003enull\u003c/code\u003e if not set"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for subclasses to call.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "com.sun.net.httpserver.HttpsServer",
  "annotations": [],
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}