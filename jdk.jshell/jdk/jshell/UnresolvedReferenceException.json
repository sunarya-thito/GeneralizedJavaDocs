{
  "packageName": "jdk.jshell",
  "simpleName": "UnresolvedReferenceException",
  "moduleName": "jdk.jshell",
  "type": "CLASS",
  "superClass": {
    "name": "jdk.jshell.JShellException",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "jdk.jshell.DeclarationSnippet",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSnippet",
      "comment": "Return the Snippet which has the unresolved reference(s).",
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eSnippet\u003c/code\u003e of the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jshell/jdk/jshell/Snippet.Status.html#RECOVERABLE_DEFINED\"\u003e\u003ccode\u003eRECOVERABLE_DEFINED\u003c/code\u003e\u003c/a\u003e definition snippet."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "jdk.jshell.UnresolvedReferenceException",
  "comment": "Exception reported on attempting to execute a \n\u003ca href\u003d\"Snippet.Status.html#RECOVERABLE_DEFINED\"\u003e\u003ccode\u003eRECOVERABLE_DEFINED\u003c/code\u003e\u003c/a\u003e snippet. \n\u003cp\u003e The stack can be queried by methods on \u003ccode\u003eException\u003c/code\u003e. Note that in stack trace frames representing JShell Snippets, \u003ccode\u003eStackTraceElement.getFileName()\u003c/code\u003e will return \"#\" followed by the Snippet id and for snippets without a method name (for example an expression) \u003ccode\u003eStackTraceElement.getName()\u003c/code\u003e will be the empty string.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#jdk.jshell.UnresolvedReferenceException\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "9"
    ]
  }
}