{
  "packageName": "jdk.jshell",
  "simpleName": "Snippet",
  "moduleName": "jdk.jshell",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "id",
      "comment": "The unique identifier for the snippet. No two active snippets will have the same id(). Value of id has no prescribed meaning. The details of how the id is generated and the mechanism to change it is documented in JShell.Builder.idGenerator(BiFunction).",
      "tagMap": {
        "return": [
          "the snippet id string."
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jshell.Snippet$Kind",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "kind",
      "comment": "The Snippet.Kind for the snippet. Indicates the subclass of Snippet.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jshell/jdk/jshell/Snippet.Kind.html\" title\u003d\"enum class in jdk.jshell\"\u003e\u003ccode\u003eSnippet.Kind\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the Kind of the snippet"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jshell.Snippet$SubKind",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "subKind",
      "comment": "Return the Snippet.SubKind of snippet. The SubKind is useful for feedback to users.",
      "tagMap": {
        "return": [
          "the SubKind corresponding to this snippet"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "source",
      "comment": "Return the source code of the snippet.",
      "tagMap": {
        "return": [
          "the source code corresponding to this snippet"
        ]
      }
    }
  ],
  "innerClasses": [
    "jdk.jshell.Snippet$SubKind",
    "jdk.jshell.Snippet$Kind",
    "jdk.jshell.Snippet$Status"
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "jdk.jshell.Snippet",
  "comment": "A Snippet represents a snippet of Java source code as passed to \n\u003ca href\u003d\"JShell.html#eval(java.lang.String)\"\u003e\u003ccode\u003eJShell.eval(java.lang.String)\u003c/code\u003e\u003c/a\u003e. It is associated only with the \n\u003ca href\u003d\"JShell.html\" title\u003d\"class in jdk.jshell\"\u003e\u003ccode\u003eJShell\u003c/code\u003e\u003c/a\u003e instance that created it. An instance of Snippet (including its subclasses) is immutable: an access to any of its methods will always return the same result. For information about the current state of the snippet within the JShell state engine, query \n\u003ccode\u003eJShell\u003c/code\u003e passing the Snippet. \n\u003cp\u003e Because it is immutable, \u003ccode\u003eSnippet\u003c/code\u003e (and subclasses) is thread-safe.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jshell/jdk/jshell/JShell.html#status(jdk.jshell.Snippet)\"\u003e\u003ccode\u003eJShell.status(jdk.jshell.Snippet)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "9"
    ]
  }
}