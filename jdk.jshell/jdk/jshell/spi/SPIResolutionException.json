{
  "packageName": "jdk.jshell.spi",
  "simpleName": "SPIResolutionException",
  "moduleName": "jdk.jshell",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.RuntimeException",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "id",
      "comment": "Retrieves the internal identifier of the unresolved identifier.",
      "tagMap": {
        "return": [
          "the internal identifier"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an SPI layer exception indicating that a DeclarationSnippet with unresolved references has been encountered. The throw of this exception is generated into the body of a RECOVERABLE_DEFINED method.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eid\u003c/code\u003e - An internal identifier of the specific method"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "jdk.jshell.spi.SPIResolutionException",
  "comment": "The construction and throw of this exception is embedded in code generated by the JShell core implementation in such a way that, upon executing a \n\u003ca href\u003d\"../Snippet.Status.html#RECOVERABLE_DEFINED\"\u003e\u003ccode\u003eRECOVERABLE_DEFINED\u003c/code\u003e\u003c/a\u003e user method, this exception is thrown. \n\u003cp\u003e This exception is seen by the execution engine, but not seen by the end user nor through the JShell API.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#jdk.jshell.spi.SPIResolutionException\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "9"
    ]
  }
}