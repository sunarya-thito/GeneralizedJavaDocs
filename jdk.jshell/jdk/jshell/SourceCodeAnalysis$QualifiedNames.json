{
  "packageName": "jdk.jshell",
  "simpleName": "QualifiedNames",
  "moduleName": "jdk.jshell",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNames",
      "comment": "Known qualified names for the given simple name in the original code.",
      "tagMap": {
        "return": [
          "known qualified names"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSimpleNameLength",
      "comment": "The length of the simple name in the original code for which the qualified names where gathered.",
      "tagMap": {
        "return": [
          "the length of the simple name; -1 if there is no name immediately left to the cursor for which the candidates could be computed"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isUpToDate",
      "comment": "Indicates whether the result is based on up-to-date data. The listQualifiedNames method may return before the classpath is fully inspected, in which case this method will return false. If the result is based on a fully inspected classpath, this method will return true.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the result is based on up-to-date data; otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isResolvable",
      "comment": "Indicates whether the given simple name in the original code refers to a resolvable element.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the given simple name in the original code refers to a resolvable element; otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 25,
  "name": "jdk.jshell.SourceCodeAnalysis$QualifiedNames",
  "comment": "List of possible qualified names.",
  "tagMap": {}
}