{
  "packageName": "jdk.jshell.tool",
  "simpleName": "JavaShellToolBuilder",
  "moduleName": "jdk.jshell",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "jdk.jshell.tool.JavaShellToolBuilder",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "builder",
      "comment": "Create a builder for launching the JDK jshell tool.",
      "annotations": [],
      "tagMap": {
        "return": [
          "a builder which can be used to configure and launch the jshell tool"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jshell.tool.JavaShellToolBuilder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "name": "cmdIn",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "name": "userIn",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "in",
      "comment": "Set the input channels.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "If this method is not called, the behavior should be equivalent to calling \n\u003ccode\u003ein(System.in, null)\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003ecmdIn\u003c/code\u003e - source of command input",
          "\u003ccode\u003euserIn\u003c/code\u003e - source of input for running user code, or \n\u003ccode\u003enull\u003c/code\u003e to extract user input from cmdIn"
        ],
        "return": [
          "the \n\u003ccode\u003eJavaShellToolBuilder\u003c/code\u003e instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jshell.tool.JavaShellToolBuilder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.PrintStream",
            "type": "Class"
          },
          "name": "output",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "out",
      "comment": "Set the output channels. Same as out(output, output, output).",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "If neither \n\u003ccode\u003eout\u003c/code\u003e method is called, the behavior should be equivalent to calling \n\u003ccode\u003eout(System.out)\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003eoutput\u003c/code\u003e - destination of command feedback, console interaction, and user code output"
        ],
        "return": [
          "the \n\u003ccode\u003eJavaShellToolBuilder\u003c/code\u003e instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jshell.tool.JavaShellToolBuilder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.PrintStream",
            "type": "Class"
          },
          "name": "cmdOut",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.io.PrintStream",
            "type": "Class"
          },
          "name": "console",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.io.PrintStream",
            "type": "Class"
          },
          "name": "userOut",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "out",
      "comment": "Set the output channels.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "If neither \n\u003ccode\u003eout\u003c/code\u003e method is called, the behavior should be equivalent to calling \n\u003ccode\u003eout(System.out, System.out, System.out)\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003ecmdOut\u003c/code\u003e - destination of command feedback including error messages for users",
          "\u003ccode\u003econsole\u003c/code\u003e - destination of console interaction",
          "\u003ccode\u003euserOut\u003c/code\u003e - destination of user code output. For example, user snippet \n\u003ccode\u003eSystem.out.println(\"Hello\")\u003c/code\u003e when executed \n\u003ccode\u003eHello\u003c/code\u003e goes to userOut."
        ],
        "return": [
          "the \n\u003ccode\u003eJavaShellToolBuilder\u003c/code\u003e instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jshell.tool.JavaShellToolBuilder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.PrintStream",
            "type": "Class"
          },
          "name": "error",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "err",
      "comment": "Set the error channels. Same as err(error, error).",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "If neither \n\u003ccode\u003eerr\u003c/code\u003e method is called, the behavior should be equivalent to calling \n\u003ccode\u003eerr(System.err)\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003eerror\u003c/code\u003e - destination of tool errors, and user code errors"
        ],
        "return": [
          "the \n\u003ccode\u003eJavaShellToolBuilder\u003c/code\u003e instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jshell.tool.JavaShellToolBuilder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.PrintStream",
            "type": "Class"
          },
          "name": "cmdErr",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.io.PrintStream",
            "type": "Class"
          },
          "name": "userErr",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "err",
      "comment": "Set the error channels.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "If neither \n\u003ccode\u003eerr\u003c/code\u003e method is called, the behavior should be equivalent to calling \n\u003ccode\u003eerr(System.err, System.err, System.err)\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003ecmdErr\u003c/code\u003e - destination of tool start-up and fatal errors",
          "\u003ccode\u003euserErr\u003c/code\u003e - destination of user code error output. For example, user snippet \n\u003ccode\u003eSystem.err.println(\"Oops\")\u003c/code\u003e when executed \n\u003ccode\u003eOops\u003c/code\u003e goes to userErr."
        ],
        "return": [
          "the \n\u003ccode\u003eJavaShellToolBuilder\u003c/code\u003e instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jshell.tool.JavaShellToolBuilder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.prefs.Preferences",
            "type": "Class"
          },
          "name": "prefs",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "persistence",
      "comment": "Set the storage mechanism for persistent information which includes input history and retained settings.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "If neither \n\u003ccode\u003epersistence\u003c/code\u003e method is called, the behavior should be to use the tool\u0027s standard persistence mechanism."
        ],
        "param": [
          "\u003ccode\u003eprefs\u003c/code\u003e - an instance of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.prefs/java/util/prefs/Preferences.html\" title\u003d\"class in java.util.prefs\"\u003e\u003ccode\u003ePreferences\u003c/code\u003e\u003c/a\u003e that is used to retrieve and store persistent information"
        ],
        "return": [
          "the \n\u003ccode\u003eJavaShellToolBuilder\u003c/code\u003e instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jshell.tool.JavaShellToolBuilder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "prefsMap",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "persistence",
      "comment": "Set the storage mechanism for persistent information which includes input history and retained settings.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "If neither \n\u003ccode\u003epersistence\u003c/code\u003e method is called, the behavior should be to use the tool\u0027s standard persistence mechanism."
        ],
        "param": [
          "\u003ccode\u003eprefsMap\u003c/code\u003e - an instance of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003e\u003ccode\u003eMap\u003c/code\u003e\u003c/a\u003e that is used to retrieve and store persistent information"
        ],
        "return": [
          "the \n\u003ccode\u003eJavaShellToolBuilder\u003c/code\u003e instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jshell.tool.JavaShellToolBuilder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "vars",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "env",
      "comment": "Set the source for environment variables.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "If this method is not called, the behavior should be equivalent to calling \n\u003ccode\u003eenv(System.getenv())\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003evars\u003c/code\u003e - the Map of environment variable names to values"
        ],
        "return": [
          "the \n\u003ccode\u003eJavaShellToolBuilder\u003c/code\u003e instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jshell.tool.JavaShellToolBuilder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "name": "locale",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "locale",
      "comment": "Set the locale.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "If this method is not called, the behavior should be equivalent to calling \n\u003ccode\u003elocale(Locale.getDefault())\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003elocale\u003c/code\u003e - the locale"
        ],
        "return": [
          "the \n\u003ccode\u003eJavaShellToolBuilder\u003c/code\u003e instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jshell.tool.JavaShellToolBuilder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "capture",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "promptCapture",
      "comment": "Set to enable a command capturing prompt override.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "If this method is not called, the behavior should be equivalent to calling \n\u003ccode\u003epromptCapture(false)\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003ecapture\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e, basic prompt is the \n\u003ccode\u003eENQ\u003c/code\u003e character and continuation prompt is the \n\u003ccode\u003eACK\u003c/code\u003e character. If false, prompts are as set with set-up or user \n\u003ccode\u003e/set\u003c/code\u003e commands."
        ],
        "return": [
          "the \n\u003ccode\u003eJavaShellToolBuilder\u003c/code\u003e instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.Exception",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "arguments",
          "varargs": true
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "run",
      "comment": "Run an instance of the Java shell tool as configured by the other methods in this interface. This call is not destructive, more than one call of this method may be made from a configured builder. The exit code from the Java shell tool is ignored.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003earguments\u003c/code\u003e - the command-line arguments (including options), if any"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Exception.html\" title\u003d\"class in java.lang\"\u003eException\u003c/a\u003e\u003c/code\u003e - an unexpected fatal exception"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.Exception",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "arguments",
          "varargs": true
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "start",
      "comment": "Run an instance of the Java shell tool as configured by the other methods in this interface. This call is not destructive, more than one call of this method may be made from a configured builder.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "The default implementation always returns zero. Implementations of this interface should override this method, returning the exit status."
        ],
        "param": [
          "\u003ccode\u003earguments\u003c/code\u003e - the command-line arguments (including options), if any"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Exception.html\" title\u003d\"class in java.lang\"\u003eException\u003c/a\u003e\u003c/code\u003e - an unexpected fatal exception"
        ],
        "return": [
          "the exit status with which the tool explicitly exited (if any), otherwise 0 for success or 1 for failure"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "jdk.jshell.tool.JavaShellToolBuilder",
  "annotations": [],
  "tagMap": {
    "since": [
      "9"
    ]
  }
}