{
  "packageName": "org.ietf.jgss",
  "simpleName": "GSSContext",
  "moduleName": "java.security.jgss",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "DEFAULT_LIFETIME",
      "comment": "A lifetime constant representing the default context lifetime. This value is set to 0.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.ietf.jgss.GSSContext.DEFAULT_LIFETIME\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "INDEFINITE_LIFETIME",
      "comment": "A lifetime constant representing indefinite context lifetime. This value must is set to the maximum integer value in Java - Integer.MAX_VALUE.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.ietf.jgss.GSSContext.INDEFINITE_LIFETIME\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": 1
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "inputBuf",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "offset",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "len",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "initSecContext",
      "comment": "Called by the context initiator to start the context creation phase and process any tokens generated by the peer\u0027s acceptSecContext method. This method may return an output token which the application will need to send to the peer for processing by its acceptSecContext method. The application can call isEstablished to determine if the context establishment phase is complete on this side of the context. A return value of false from isEstablished indicates that more tokens are expected to be supplied to initSecContext. Upon completion of the context establishment, the available context options may be queried through the get methods. Note that it is possible that the initSecContext method return a token for the peer, and isEstablished return true also. This indicates that the token needs to be sent to the peer, but the local end of the context is now fully established. Some mechanism providers might require that the caller be granted permission to initiate a security context. A failed permission check might cause a SecurityException to be thrown from this method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003einputBuf\u003c/code\u003e - token generated by the peer. This parameter is ignored on the first call since no token has been received from the peer.",
          "\u003ccode\u003eoffset\u003c/code\u003e - the offset within the inputBuf where the token begins.",
          "\u003ccode\u003elen\u003c/code\u003e - the length of the token."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#DEFECTIVE_TOKEN\"\u003e\u003ccode\u003eGSSException.DEFECTIVE_TOKEN\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_MIC\"\u003e\u003ccode\u003eGSSException.BAD_MIC\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#NO_CRED\"\u003e\u003ccode\u003eGSSException.NO_CRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#CREDENTIALS_EXPIRED\"\u003e\u003ccode\u003eGSSException.CREDENTIALS_EXPIRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_BINDINGS\"\u003e\u003ccode\u003eGSSException.BAD_BINDINGS\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#OLD_TOKEN\"\u003e\u003ccode\u003eGSSException.OLD_TOKEN\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#DUPLICATE_TOKEN\"\u003e\u003ccode\u003eGSSException.DUPLICATE_TOKEN\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_NAMETYPE\"\u003e\u003ccode\u003eGSSException.BAD_NAMETYPE\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_MECH\"\u003e\u003ccode\u003eGSSException.BAD_MECH\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a byte[] containing the token to be sent to the peer. \n\u003ccode\u003enull\u003c/code\u003e indicates that no token is generated."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "name": "inStream",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "name": "outStream",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "initSecContext",
      "comment": "Called by the context initiator to start the context creation phase and process any tokens generated by the peer\u0027s acceptSecContext method using streams. This method may write an output token to the OutpuStream, which the application will need to send to the peer for processing by its acceptSecContext call. Typically, the application would ensure this by calling the flush method on an OutputStream that encapsulates the connection between the two peers. The application can determine if a token is written to the OutputStream from the return value of this method. A return value of 0 indicates that no token was written. The application can call isEstablished to determine if the context establishment phase is complete on this side of the context. A return value of false from isEstablished indicates that more tokens are expected to be supplied to initSecContext. Upon completion of the context establishment, the available context options may be queried through the get methods. Note that it is possible that the initSecContext method return a token for the peer, and isEstablished return true also. This indicates that the token needs to be sent to the peer, but the local end of the context is now fully established. The GSS-API authentication tokens contain a definitive start and end. This method will attempt to read one of these tokens per invocation, and may block on the stream if only part of the token is available. In all other respects this method is equivalent to the byte array based initSecContext. Some mechanism providers might require that the caller be granted permission to initiate a security context. A failed permission check might cause a SecurityException to be thrown from this method. The following example code demonstrates how this method might be used:      InputStream is ...\n     OutputStream os ...\n     GSSContext context ...\n\n     // Loop while there is still a token to be processed\n\n     while (!context.isEstablished()) {\n\n         context.initSecContext(is, os);\n\n         // send output token if generated\n         os.flush();\n     }",
      "annotations": [
        {
          "type": {
            "name": "Deprecated",
            "type": "Class"
          },
          "values": [
            {
              "name": "since",
              "value": "11"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003einStream\u003c/code\u003e - an InputStream that contains the token generated by the peer. This parameter is ignored on the first call since no token has been or will be received from the peer at that point.",
          "\u003ccode\u003eoutStream\u003c/code\u003e - an OutputStream where the output token will be written. During the final stage of context establishment, there may be no bytes written."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#DEFECTIVE_TOKEN\"\u003e\u003ccode\u003eGSSException.DEFECTIVE_TOKEN\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_MIC\"\u003e\u003ccode\u003eGSSException.BAD_MIC\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#NO_CRED\"\u003e\u003ccode\u003eGSSException.NO_CRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#CREDENTIALS_EXPIRED\"\u003e\u003ccode\u003eGSSException.CREDENTIALS_EXPIRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_BINDINGS\"\u003e\u003ccode\u003eGSSException.BAD_BINDINGS\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#OLD_TOKEN\"\u003e\u003ccode\u003eGSSException.OLD_TOKEN\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#DUPLICATE_TOKEN\"\u003e\u003ccode\u003eGSSException.DUPLICATE_TOKEN\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_NAMETYPE\"\u003e\u003ccode\u003eGSSException.BAD_NAMETYPE\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_MECH\"\u003e\u003ccode\u003eGSSException.BAD_MECH\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the number of bytes written to the OutputStream as part of the token to be sent to the peer. A value of 0 indicates that no token needs to be sent."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": 1
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "inToken",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "offset",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "len",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "acceptSecContext",
      "comment": "Called by the context acceptor upon receiving a token from the peer. This method may return an output token which the application will need to send to the peer for further processing by its initSecContext call. The application can call isEstablished to determine if the context establishment phase is complete for this peer. A return value of false from isEstablished indicates that more tokens are expected to be supplied to this method. Upon completion of the context establishment, the available context options may be queried through the get methods. Note that it is possible that acceptSecContext return a token for the peer, and isEstablished return true also. This indicates that the token needs to be sent to the peer, but the local end of the context is now fully established. Some mechanism providers might require that the caller be granted permission to accept a security context. A failed permission check might cause a SecurityException to be thrown from this method. The following example code demonstrates how this method might be used:      byte[] inToken;\n     byte[] outToken;\n     GSSContext context ...\n\n     // Loop while there is still a token to be processed\n\n     while (!context.isEstablished()) {\n         inToken \u003d readToken();\n         outToken \u003d context.acceptSecContext(inToken, 0,\n                                             inToken.length);\n         // send output token if generated\n         if (outToken !\u003d null)\n             sendToken(outToken);\n     }",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003einToken\u003c/code\u003e - token generated by the peer.",
          "\u003ccode\u003eoffset\u003c/code\u003e - the offset within the inToken where the token begins.",
          "\u003ccode\u003elen\u003c/code\u003e - the length of the token."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#DEFECTIVE_TOKEN\"\u003e\u003ccode\u003eGSSException.DEFECTIVE_TOKEN\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_MIC\"\u003e\u003ccode\u003eGSSException.BAD_MIC\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#NO_CRED\"\u003e\u003ccode\u003eGSSException.NO_CRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#CREDENTIALS_EXPIRED\"\u003e\u003ccode\u003eGSSException.CREDENTIALS_EXPIRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_BINDINGS\"\u003e\u003ccode\u003eGSSException.BAD_BINDINGS\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#OLD_TOKEN\"\u003e\u003ccode\u003eGSSException.OLD_TOKEN\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#DUPLICATE_TOKEN\"\u003e\u003ccode\u003eGSSException.DUPLICATE_TOKEN\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_MECH\"\u003e\u003ccode\u003eGSSException.BAD_MECH\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a byte[] containing the token to be sent to the peer. \n\u003ccode\u003enull\u003c/code\u003e indicates that no token is generated."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "name": "inStream",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "name": "outStream",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "acceptSecContext",
      "comment": "Called by the context acceptor to process a token from the peer using streams. It may write an output token to the OutputStream, which the application will need to send to the peer for processing by its initSecContext method. Typically, the application would ensure this by calling the flush method on an OutputStream that encapsulates the connection between the two peers. The application can call isEstablished to determine if the context establishment phase is complete on this side of the context. A return value of false from isEstablished indicates that more tokens are expected to be supplied to acceptSecContext. Upon completion of the context establishment, the available context options may be queried through the get methods. Note that it is possible that acceptSecContext return a token for the peer, and isEstablished return true also. This indicates that the token needs to be sent to the peer, but the local end of the context is now fully established. The GSS-API authentication tokens contain a definitive start and end. This method will attempt to read one of these tokens per invocation, and may block on the stream if only part of the token is available. In all other respects this method is equivalent to the byte array based acceptSecContext. Some mechanism providers might require that the caller be granted permission to accept a security context. A failed permission check might cause a SecurityException to be thrown from this method. The following example code demonstrates how this method might be used:      InputStream is ...\n     OutputStream os ...\n     GSSContext context ...\n\n     // Loop while there is still a token to be processed\n\n     while (!context.isEstablished()) {\n\n         context.acceptSecContext(is, os);\n\n         // send output token if generated\n         os.flush();\n     }",
      "annotations": [
        {
          "type": {
            "name": "Deprecated",
            "type": "Class"
          },
          "values": [
            {
              "name": "since",
              "value": "11"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003einStream\u003c/code\u003e - an InputStream that contains the token generated by the peer.",
          "\u003ccode\u003eoutStream\u003c/code\u003e - an OutputStream where the output token will be written. During the final stage of context establishment, there may be no bytes written."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#DEFECTIVE_TOKEN\"\u003e\u003ccode\u003eGSSException.DEFECTIVE_TOKEN\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_MIC\"\u003e\u003ccode\u003eGSSException.BAD_MIC\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#NO_CRED\"\u003e\u003ccode\u003eGSSException.NO_CRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#CREDENTIALS_EXPIRED\"\u003e\u003ccode\u003eGSSException.CREDENTIALS_EXPIRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_BINDINGS\"\u003e\u003ccode\u003eGSSException.BAD_BINDINGS\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#OLD_TOKEN\"\u003e\u003ccode\u003eGSSException.OLD_TOKEN\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#DUPLICATE_TOKEN\"\u003e\u003ccode\u003eGSSException.DUPLICATE_TOKEN\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_MECH\"\u003e\u003ccode\u003eGSSException.BAD_MECH\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isEstablished",
      "comment": "Used during context establishment to determine the state of the context.",
      "annotations": [],
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this is a fully established context on the caller\u0027s side and no more tokens are needed from the peer."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "dispose",
      "comment": "Releases any system resources and cryptographic information stored in the context object and invalidates the context.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "qop",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "confReq",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "maxTokenSize",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getWrapSizeLimit",
      "comment": "Used to determine limits on the size of the message that can be passed to wrap. Returns the maximum message size that, if presented to the wrap method with the same confReq and qop parameters, will result in an output token containing no more than maxTokenSize bytes. This call is intended for use by applications that communicate over protocols that impose a maximum message size. It enables the application to fragment messages prior to applying protection. GSS-API implementations are recommended but not required to detect invalid QOP values when getWrapSizeLimit is called. This routine guarantees only a maximum message size, not the availability of specific QOP values for message protection.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eqop\u003c/code\u003e - the level of protection wrap will be asked to provide.",
          "\u003ccode\u003econfReq\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if wrap will be asked to provide privacy, \n\u003ccode\u003efalse\u003c/code\u003e otherwise.",
          "\u003ccode\u003emaxTokenSize\u003c/code\u003e - the desired maximum size of the token emitted by wrap."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#CONTEXT_EXPIRED\"\u003e\u003ccode\u003eGSSException.CONTEXT_EXPIRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_QOP\"\u003e\u003ccode\u003eGSSException.BAD_QOP\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the maximum size of the input token for the given output token size"
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": 1
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "inBuf",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "offset",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "len",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "org.ietf.jgss.MessageProp",
            "type": "Class"
          },
          "name": "msgProp",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "wrap",
      "comment": "Applies per-message security services over the established security context. The method will return a token with the application supplied data and a cryptographic MIC over it. The data may be encrypted if confidentiality (privacy) was requested. The MessageProp object is instantiated by the application and used to specify a QOP value which selects cryptographic algorithms, and a privacy service to optionally encrypt the message. The underlying mechanism that is used in the call may not be able to provide the privacy service. It sets the actual privacy service that it does provide in this MessageProp object which the caller should then query upon return. If the mechanism is not able to provide the requested QOP, it throws a GSSException with the BAD_QOP code. Since some application-level protocols may wish to use tokens emitted by wrap to provide \"secure framing\", implementations should support the wrapping of zero-length messages. The application will be responsible for sending the token to the peer.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003einBuf\u003c/code\u003e - application data to be protected.",
          "\u003ccode\u003eoffset\u003c/code\u003e - the offset within the inBuf where the data begins.",
          "\u003ccode\u003elen\u003c/code\u003e - the length of the data",
          "\u003ccode\u003emsgProp\u003c/code\u003e - instance of MessageProp that is used by the application to set the desired QOP and privacy state. Set the desired QOP to 0 to request the default QOP. Upon return from this method, this object will contain the actual privacy state that was applied to the message by the underlying mechanism."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#CONTEXT_EXPIRED\"\u003e\u003ccode\u003eGSSException.CONTEXT_EXPIRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_QOP\"\u003e\u003ccode\u003eGSSException.BAD_QOP\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a byte[] containing the token to be sent to the peer."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "name": "inStream",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "name": "outStream",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "org.ietf.jgss.MessageProp",
            "type": "Class"
          },
          "name": "msgProp",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "wrap",
      "comment": "Applies per-message security services over the established security context using streams. The method will return a token with the application supplied data and a cryptographic MIC over it. The data may be encrypted if confidentiality (privacy) was requested. This method is equivalent to the byte array based wrap method. The application will be responsible for sending the token to the peer. Typically, the application would ensure this by calling the flush method on an OutputStream that encapsulates the connection between the two peers. The MessageProp object is instantiated by the application and used to specify a QOP value which selects cryptographic algorithms, and a privacy service to optionally encrypt the message. The underlying mechanism that is used in the call may not be able to provide the privacy service. It sets the actual privacy service that it does provide in this MessageProp object which the caller should then query upon return. If the mechanism is not able to provide the requested QOP, it throws a GSSException with the BAD_QOP code. Since some application-level protocols may wish to use tokens emitted by wrap to provide \"secure framing\", implementations should support the wrapping of zero-length messages.",
      "annotations": [
        {
          "type": {
            "name": "Deprecated",
            "type": "Class"
          },
          "values": [
            {
              "name": "since",
              "value": "11"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003einStream\u003c/code\u003e - an InputStream containing the application data to be protected. All of the data that is available in inStream is used.",
          "\u003ccode\u003eoutStream\u003c/code\u003e - an OutputStream to write the protected message to.",
          "\u003ccode\u003emsgProp\u003c/code\u003e - instance of MessageProp that is used by the application to set the desired QOP and privacy state. Set the desired QOP to 0 to request the default QOP. Upon return from this method, this object will contain the actual privacy state that was applied to the message by the underlying mechanism."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#CONTEXT_EXPIRED\"\u003e\u003ccode\u003eGSSException.CONTEXT_EXPIRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_QOP\"\u003e\u003ccode\u003eGSSException.BAD_QOP\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": 1
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "inBuf",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "offset",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "len",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "org.ietf.jgss.MessageProp",
            "type": "Class"
          },
          "name": "msgProp",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "unwrap",
      "comment": "Used to process tokens generated by the wrap method on the other side of the context. The method will return the message supplied by the peer application to its wrap call, while at the same time verifying the embedded MIC for that message. The MessageProp object is instantiated by the application and is used by the underlying mechanism to return information to the caller such as the QOP, whether confidentiality was applied to the message, and other supplementary message state information. Since some application-level protocols may wish to use tokens emitted by wrap to provide \"secure framing\", implementations should support the wrapping and unwrapping of zero-length messages.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003einBuf\u003c/code\u003e - a byte array containing the wrap token received from peer.",
          "\u003ccode\u003eoffset\u003c/code\u003e - the offset where the token begins.",
          "\u003ccode\u003elen\u003c/code\u003e - the length of the token",
          "\u003ccode\u003emsgProp\u003c/code\u003e - upon return from the method, this object will contain the applied QOP, the privacy state of the message, and supplementary information stating if the token was a duplicate, old, out of sequence or arriving after a gap."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#DEFECTIVE_TOKEN\"\u003e\u003ccode\u003eGSSException.DEFECTIVE_TOKEN\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_MIC\"\u003e\u003ccode\u003eGSSException.BAD_MIC\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#CONTEXT_EXPIRED\"\u003e\u003ccode\u003eGSSException.CONTEXT_EXPIRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a byte[] containing the message unwrapped from the input token."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "name": "inStream",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "name": "outStream",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "org.ietf.jgss.MessageProp",
            "type": "Class"
          },
          "name": "msgProp",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "unwrap",
      "comment": "Uses streams to process tokens generated by the wrap method on the other side of the context. The method will return the message supplied by the peer application to its wrap call, while at the same time verifying the embedded MIC for that message. The MessageProp object is instantiated by the application and is used by the underlying mechanism to return information to the caller such as the QOP, whether confidentiality was applied to the message, and other supplementary message state information. Since some application-level protocols may wish to use tokens emitted by wrap to provide \"secure framing\", implementations should support the wrapping and unwrapping of zero-length messages. The format of the input token that this method reads is defined in the specification for the underlying mechanism that will be used. This method will attempt to read one of these tokens per invocation. If the mechanism token contains a definitive start and end this method may block on the InputStream if only part of the token is available. If the start and end of the token are not definitive then the method will attempt to treat all available bytes as part of the token. Other than the possible blocking behavior described above, this method is equivalent to the byte array based unwrap method.",
      "annotations": [
        {
          "type": {
            "name": "Deprecated",
            "type": "Class"
          },
          "values": [
            {
              "name": "since",
              "value": "11"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003einStream\u003c/code\u003e - an InputStream that contains the wrap token generated by the peer.",
          "\u003ccode\u003eoutStream\u003c/code\u003e - an OutputStream to write the application message to.",
          "\u003ccode\u003emsgProp\u003c/code\u003e - upon return from the method, this object will contain the applied QOP, the privacy state of the message, and supplementary information stating if the token was a duplicate, old, out of sequence or arriving after a gap."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#DEFECTIVE_TOKEN\"\u003e\u003ccode\u003eGSSException.DEFECTIVE_TOKEN\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_MIC\"\u003e\u003ccode\u003eGSSException.BAD_MIC\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#CONTEXT_EXPIRED\"\u003e\u003ccode\u003eGSSException.CONTEXT_EXPIRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": 1
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "inMsg",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "offset",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "len",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "org.ietf.jgss.MessageProp",
            "type": "Class"
          },
          "name": "msgProp",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMIC",
      "comment": "Returns a token containing a cryptographic Message Integrity Code (MIC) for the supplied message, for transfer to the peer application. Unlike wrap, which encapsulates the user message in the returned token, only the message MIC is returned in the output token. Note that privacy can only be applied through the wrap call. Since some application-level protocols may wish to use tokens emitted by getMIC to provide \"secure framing\", implementations should support derivation of MICs from zero-length messages.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003einMsg\u003c/code\u003e - the message to generate the MIC over.",
          "\u003ccode\u003eoffset\u003c/code\u003e - offset within the inMsg where the message begins.",
          "\u003ccode\u003elen\u003c/code\u003e - the length of the message",
          "\u003ccode\u003emsgProp\u003c/code\u003e - an instance of \n\u003ccode\u003eMessageProp\u003c/code\u003e that is used by the application to set the desired QOP. Set the desired QOP to \n\u003ccode\u003e0\u003c/code\u003e in \n\u003ccode\u003emsgProp\u003c/code\u003e to request the default QOP. Alternatively pass in \n\u003ccode\u003enull\u003c/code\u003e for \n\u003ccode\u003emsgProp\u003c/code\u003e to request the default QOP."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#CONTEXT_EXPIRED\"\u003e\u003ccode\u003eGSSException.CONTEXT_EXPIRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_QOP\"\u003e\u003ccode\u003eGSSException.BAD_QOP\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a byte[] containing the token to be sent to the peer."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "name": "inStream",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "name": "outStream",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "org.ietf.jgss.MessageProp",
            "type": "Class"
          },
          "name": "msgProp",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMIC",
      "comment": "Uses streams to produce a token containing a cryptographic MIC for the supplied message, for transfer to the peer application. Unlike wrap, which encapsulates the user message in the returned token, only the message MIC is produced in the output token. This method is equivalent to the byte array based getMIC method. Note that privacy can only be applied through the wrap call. Since some application-level protocols may wish to use tokens emitted by getMIC to provide \"secure framing\", implementations should support derivation of MICs from zero-length messages.",
      "annotations": [
        {
          "type": {
            "name": "Deprecated",
            "type": "Class"
          },
          "values": [
            {
              "name": "since",
              "value": "11"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003einStream\u003c/code\u003e - an InputStream containing the message to generate the MIC over. All of the data that is available in inStream is used.",
          "\u003ccode\u003eoutStream\u003c/code\u003e - an OutputStream to write the output token to.",
          "\u003ccode\u003emsgProp\u003c/code\u003e - an instance of \n\u003ccode\u003eMessageProp\u003c/code\u003e that is used by the application to set the desired QOP. Set the desired QOP to \n\u003ccode\u003e0\u003c/code\u003e in \n\u003ccode\u003emsgProp\u003c/code\u003e to request the default QOP. Alternatively pass in \n\u003ccode\u003enull\u003c/code\u003e for \n\u003ccode\u003emsgProp\u003c/code\u003e to request the default QOP."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#CONTEXT_EXPIRED\"\u003e\u003ccode\u003eGSSException.CONTEXT_EXPIRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_QOP\"\u003e\u003ccode\u003eGSSException.BAD_QOP\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "inToken",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "tokOffset",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "tokLen",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "inMsg",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "msgOffset",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "msgLen",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "org.ietf.jgss.MessageProp",
            "type": "Class"
          },
          "name": "msgProp",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "verifyMIC",
      "comment": "Verifies the cryptographic MIC, contained in the token parameter, over the supplied message. The MessageProp object is instantiated by the application and is used by the underlying mechanism to return information to the caller such as the QOP indicating the strength of protection that was applied to the message and other supplementary message state information. Since some application-level protocols may wish to use tokens emitted by getMIC to provide \"secure framing\", implementations should support the calculation and verification of MICs over zero-length messages.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003einToken\u003c/code\u003e - the token generated by peer\u0027s getMIC method.",
          "\u003ccode\u003etokOffset\u003c/code\u003e - the offset within the inToken where the token begins.",
          "\u003ccode\u003etokLen\u003c/code\u003e - the length of the token.",
          "\u003ccode\u003einMsg\u003c/code\u003e - the application message to verify the cryptographic MIC over.",
          "\u003ccode\u003emsgOffset\u003c/code\u003e - the offset in inMsg where the message begins.",
          "\u003ccode\u003emsgLen\u003c/code\u003e - the length of the message.",
          "\u003ccode\u003emsgProp\u003c/code\u003e - upon return from the method, this object will contain the applied QOP and supplementary information stating if the token was a duplicate, old, out of sequence or arriving after a gap."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#DEFECTIVE_TOKEN\"\u003e\u003ccode\u003eGSSException.DEFECTIVE_TOKEN\u003c/code\u003e\u003c/a\u003e \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_MIC\"\u003e\u003ccode\u003eGSSException.BAD_MIC\u003c/code\u003e\u003c/a\u003e \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#CONTEXT_EXPIRED\"\u003e\u003ccode\u003eGSSException.CONTEXT_EXPIRED\u003c/code\u003e\u003c/a\u003e \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "name": "tokStream",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "name": "msgStream",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "org.ietf.jgss.MessageProp",
            "type": "Class"
          },
          "name": "msgProp",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "verifyMIC",
      "comment": "Uses streams to verify the cryptographic MIC, contained in the token parameter, over the supplied message. This method is equivalent to the byte array based verifyMIC method. The MessageProp object is instantiated by the application and is used by the underlying mechanism to return information to the caller such as the QOP indicating the strength of protection that was applied to the message and other supplementary message state information. Since some application-level protocols may wish to use tokens emitted by getMIC to provide \"secure framing\", implementations should support the calculation and verification of MICs over zero-length messages. The format of the input token that this method reads is defined in the specification for the underlying mechanism that will be used. This method will attempt to read one of these tokens per invocation. If the mechanism token contains a definitive start and end this method may block on the InputStream if only part of the token is available. If the start and end of the token are not definitive then the method will attempt to treat all available bytes as part of the token. Other than the possible blocking behavior described above, this method is equivalent to the byte array based verifyMIC method.",
      "annotations": [
        {
          "type": {
            "name": "Deprecated",
            "type": "Class"
          },
          "values": [
            {
              "name": "since",
              "value": "11"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003etokStream\u003c/code\u003e - an InputStream containing the token generated by the peer\u0027s getMIC method.",
          "\u003ccode\u003emsgStream\u003c/code\u003e - an InputStream containing the application message to verify the cryptographic MIC over. All of the data that is available in msgStream is used.",
          "\u003ccode\u003emsgProp\u003c/code\u003e - upon return from the method, this object will contain the applied QOP and supplementary information stating if the token was a duplicate, old, out of sequence or arriving after a gap."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#DEFECTIVE_TOKEN\"\u003e\u003ccode\u003eGSSException.DEFECTIVE_TOKEN\u003c/code\u003e\u003c/a\u003e \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_MIC\"\u003e\u003ccode\u003eGSSException.BAD_MIC\u003c/code\u003e\u003c/a\u003e \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#CONTEXT_EXPIRED\"\u003e\u003ccode\u003eGSSException.CONTEXT_EXPIRED\u003c/code\u003e\u003c/a\u003e \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": 1
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "export",
      "comment": "Exports this context so that another process may import it.. Provided to support the sharing of work between multiple processes. This routine will typically be used by the context-acceptor, in an application where a single process receives incoming connection requests and accepts security contexts over them, then passes the established context to one or more other processes for message exchange. This method deactivates the security context and creates an interprocess token which, when passed to GSSManager.createContext in another process, will re-activate the context in the second process. Only a single instantiation of a given context may be active at any one time; a subsequent attempt by a context exporter to access the exported security context will fail. The implementation may constrain the set of processes by which the interprocess token may be imported, either as a function of local security policy, or as a result of implementation decisions. For example, some implementations may constrain contexts to be passed only between processes that run under the same account, or which are part of the same process group. The interprocess token may contain security-sensitive information (for example cryptographic keys). While mechanisms are encouraged to either avoid placing such sensitive information within interprocess tokens, or to encrypt the token before returning it to the application, in a typical GSS-API implementation this may not be possible. Thus the application must take care to protect the interprocess token, and ensure that any process to which the token is transferred is trustworthy. Implementations are not required to support the inter-process transfer of security contexts. Calling the isTransferable method will indicate if the context object is transferable. Calling this method on a context that is not exportable will result in this exception being thrown with the error code GSSException.UNAVAILABLE.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSManager.html#createContext(byte%5B%5D)\"\u003e\u003ccode\u003eGSSManager.createContext(byte[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#UNAVAILABLE\"\u003e\u003ccode\u003eGSSException.UNAVAILABLE\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#CONTEXT_EXPIRED\"\u003e\u003ccode\u003eGSSException.CONTEXT_EXPIRED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#NO_CONTEXT\"\u003e\u003ccode\u003eGSSException.NO_CONTEXT\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a byte[] containing the exported context"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "state",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "requestMutualAuth",
      "comment": "Requests that mutual authentication be done during context establishment. This request can only be made on the context initiator\u0027s side and it has to be done prior to the first call to initSecContext. Not all mechanisms support mutual authentication and some mechanisms might require mutual authentication even if the application doesn\u0027t. Therefore, the application should check to see if the request was honored with the getMutualAuthState method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#getMutualAuthState()\"\u003e\u003ccode\u003egetMutualAuthState()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estate\u003c/code\u003e - a boolean value indicating whether mutual authentication should be used or not."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "state",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "requestReplayDet",
      "comment": "Requests that replay detection be enabled for the per-message security services after context establishment. This request can only be made on the context initiator\u0027s side and it has to be done prior to the first call to initSecContext. During context establishment replay detection is not an option and is a function of the underlying mechanism\u0027s capabilities. Not all mechanisms support replay detection and some mechanisms might require replay detection even if the application doesn\u0027t. Therefore, the application should check to see if the request was honored with the getReplayDetState method. If replay detection is enabled then the MessageProp.isDuplicateToken and MessageProp.isOldToken methods will return valid results for the MessageProp object that is passed in to the unwrap method or the verifyMIC method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#getReplayDetState()\"\u003e\u003ccode\u003egetReplayDetState()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estate\u003c/code\u003e - a boolean value indicating whether replay detection should be enabled over the established context or not."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "state",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "requestSequenceDet",
      "comment": "Requests that sequence checking be enabled for the per-message security services after context establishment. This request can only be made on the context initiator\u0027s side and it has to be done prior to the first call to initSecContext. During context establishment sequence checking is not an option and is a function of the underlying mechanism\u0027s capabilities. Not all mechanisms support sequence checking and some mechanisms might require sequence checking even if the application doesn\u0027t. Therefore, the application should check to see if the request was honored with the getSequenceDetState method. If sequence checking is enabled then the MessageProp.isDuplicateToken, MessageProp.isOldToken, MessageProp.isUnseqToken, and MessageProp.isGapToken methods will return valid results for the MessageProp object that is passed in to the unwrap method or the verifyMIC method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#getSequenceDetState()\"\u003e\u003ccode\u003egetSequenceDetState()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estate\u003c/code\u003e - a boolean value indicating whether sequence checking should be enabled over the established context or not."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "state",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "requestCredDeleg",
      "comment": "Requests that the initiator\u0027s credentials be delegated to the acceptor during context establishment. This request can only be made on the context initiator\u0027s side and it has to be done prior to the first call to initSecContext. Not all mechanisms support credential delegation. Therefore, an application that desires delegation should check to see if the request was honored with the getCredDelegState method. If the application indicates that delegation must not be used, then the mechanism will honor the request and delegation will not occur. This is an exception to the general rule that a mechanism may enable a service even if it is not requested.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#getCredDelegState()\"\u003e\u003ccode\u003egetCredDelegState()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estate\u003c/code\u003e - a boolean value indicating whether the credentials should be delegated or not."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "state",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "requestAnonymity",
      "comment": "Requests that the initiator\u0027s identity not be disclosed to the acceptor. This request can only be made on the context initiator\u0027s side and it has to be done prior to the first call to initSecContext. Not all mechanisms support anonymity for the initiator. Therefore, the application should check to see if the request was honored with the getAnonymityState method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#getAnonymityState()\"\u003e\u003ccode\u003egetAnonymityState()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estate\u003c/code\u003e - a boolean value indicating if the initiator should be authenticated to the acceptor as an anonymous principal."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "state",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "requestConf",
      "comment": "Requests that data confidentiality be enabled for the wrap method. This request can only be made on the context initiator\u0027s side and it has to be done prior to the first call to initSecContext. Not all mechanisms support confidentiality and other mechanisms might enable it even if the application doesn\u0027t request it. The application may check to see if the request was honored with the getConfState method. If confidentiality is enabled, only then will the mechanism honor a request for privacy in the MessageProp object that is passed in to the wrap method. Enabling confidentiality will also automatically enable integrity.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#getConfState()\"\u003e\u003ccode\u003egetConfState()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#getIntegState()\"\u003e\u003ccode\u003egetIntegState()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#requestInteg(boolean)\"\u003e\u003ccode\u003erequestInteg(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/MessageProp.html\" title\u003d\"class in org.ietf.jgss\"\u003e\u003ccode\u003eMessageProp\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estate\u003c/code\u003e - a boolean value indicating whether confidentiality should be enabled or not."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "state",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "requestInteg",
      "comment": "Requests that data integrity be enabled for the wrap and getMICmethods. This request can only be made on the context initiator\u0027s side and it has to be done prior to the first call to initSecContext. Not all mechanisms support integrity and other mechanisms might enable it even if the application doesn\u0027t request it. The application may check to see if the request was honored with the getIntegState method. Disabling integrity will also automatically disable confidentiality.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#getIntegState()\"\u003e\u003ccode\u003egetIntegState()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estate\u003c/code\u003e - a boolean value indicating whether integrity should be enabled or not."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "lifetime",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "requestLifetime",
      "comment": "Requests a lifetime in seconds for the context. This method can only be called on the context initiator\u0027s side and it has to be done prior to the first call to initSecContext. The actual lifetime of the context will depend on the capabilities of the underlying mechanism and the application should call the getLifetime method to determine this.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#getLifetime()\"\u003e\u003ccode\u003egetLifetime()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elifetime\u003c/code\u003e - the desired context lifetime in seconds. Use \n\u003ccode\u003eINDEFINITE_LIFETIME\u003c/code\u003e to request an indefinite lifetime and \n\u003ccode\u003eDEFAULT_LIFETIME\u003c/code\u003e to request a default lifetime."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "org.ietf.jgss.ChannelBinding",
            "type": "Class"
          },
          "name": "cb",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setChannelBinding",
      "comment": "Sets the channel bindings to be used during context establishment. This method can be called on both the context initiator\u0027s and the context acceptor\u0027s side, but it must be called before context establishment begins. This means that an initiator must call it before the first call to initSecContext and the acceptor must call it before the first call to acceptSecContext.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecb\u003c/code\u003e - the channel bindings to use."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCredDelegState",
      "comment": "Determines if credential delegation is enabled on this context. It can be called by both the context initiator and the context acceptor. For a definitive answer this method must be called only after context establishment is complete. Note that if an initiator requests that delegation not be allowed the requestCredDeleg method will honor that request and this method will return false on the initiator\u0027s side from that point onwards.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#requestCredDeleg(boolean)\"\u003e\u003ccode\u003erequestCredDeleg(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "true if delegation is enabled, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMutualAuthState",
      "comment": "Determines if mutual authentication is enabled on this context. It can be called by both the context initiator and the context acceptor. For a definitive answer this method must be called only after context establishment is complete. An initiator that requests mutual authentication can call this method after context completion and dispose the context if its request was not honored.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#requestMutualAuth(boolean)\"\u003e\u003ccode\u003erequestMutualAuth(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "true if mutual authentication is enabled, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getReplayDetState",
      "comment": "Determines if replay detection is enabled for the per-message security services from this context. It can be called by both the context initiator and the context acceptor. For a definitive answer this method must be called only after context establishment is complete. An initiator that requests replay detection can call this method after context completion and dispose the context if its request was not honored.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#requestReplayDet(boolean)\"\u003e\u003ccode\u003erequestReplayDet(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "true if replay detection is enabled, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSequenceDetState",
      "comment": "Determines if sequence checking is enabled for the per-message security services from this context. It can be called by both the context initiator and the context acceptor. For a definitive answer this method must be called only after context establishment is complete. An initiator that requests sequence checking can call this method after context completion and dispose the context if its request was not honored.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#requestSequenceDet(boolean)\"\u003e\u003ccode\u003erequestSequenceDet(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "true if sequence checking is enabled, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAnonymityState",
      "comment": "Determines if the context initiator is anonymously authenticated to the context acceptor. It can be called by both the context initiator and the context acceptor, and at any time. On the initiator side, a call to this method determines if the identity of the initiator has been disclosed in any of the context establishment tokens that might have been generated thus far by initSecContext. An initiator that absolutely must be authenticated anonymously should call this method after each call to initSecContext to determine if the generated token should be sent to the peer or the context aborted. On the acceptor side, a call to this method determines if any of the tokens processed by acceptSecContext thus far have divulged the identity of the initiator.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#requestAnonymity(boolean)\"\u003e\u003ccode\u003erequestAnonymity(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "true if the context initiator is still anonymous, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isTransferable",
      "comment": "Determines if the context is transferable to other processes through the use of the export method. This call is only valid on fully established contexts.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "true if this context can be exported, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isProtReady",
      "comment": "Determines if the context is ready for per message operations to be used over it. Some mechanisms may allow the usage of the per-message operations before the context is fully established.",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if methods like \n\u003ccode\u003ewrap\u003c/code\u003e, \n\u003ccode\u003eunwrap\u003c/code\u003e, \n\u003ccode\u003egetMIC\u003c/code\u003e, and \n\u003ccode\u003everifyMIC\u003c/code\u003e can be used with this context at the current stage of context establishment, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getConfState",
      "comment": "Determines if data confidentiality is available over the context. This method can be called by both the context initiator and the context acceptor, but only after one of isProtReady or isEstablished return true. If this method returns true, so will getIntegState",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#requestConf(boolean)\"\u003e\u003ccode\u003erequestConf(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "true if confidentiality services are available, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getIntegState",
      "comment": "Determines if data integrity is available over the context. This method can be called by both the context initiator and the context acceptor, but only after one of isProtReady or isEstablished return true. This method will always return true if getConfState returns true.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#requestInteg(boolean)\"\u003e\u003ccode\u003erequestInteg(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "true if integrity services are available, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getLifetime",
      "comment": "Determines what the remaining lifetime for this context is. It can be called by both the context initiator and the context acceptor, but for a definitive answer it should be called only after isEstablished returns true.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#requestLifetime(int)\"\u003e\u003ccode\u003erequestLifetime(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the remaining lifetime in seconds"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.ietf.jgss.GSSName",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSrcName",
      "comment": "Returns the name of the context initiator. This call is valid only after one of isProtReady or isEstablished return true.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSName.html\" title\u003d\"interface in org.ietf.jgss\"\u003e\u003ccode\u003eGSSName\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a GSSName that is an MN containing the name of the context initiator."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.ietf.jgss.GSSName",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTargName",
      "comment": "Returns the name of the context acceptor. This call is valid only after one of isProtReady or isEstablished return true.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a GSSName that is an MN containing the name of the context acceptor."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.ietf.jgss.Oid",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMech",
      "comment": "Determines what mechanism is being used for this context. This method may be called before the context is fully established, but the mechanism returned may change on successive calls in the negotiated mechanism case.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the Oid of the mechanism being used"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.ietf.jgss.GSSCredential",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDelegCred",
      "comment": "Obtains the credentials delegated by the context initiator to the context acceptor. It should be called only on the context acceptor\u0027s side, and once the context is fully established. The caller can use the method getCredDelegState to determine if there are any delegated credentials.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a GSSCredential containing the initiator\u0027s delegated credentials, or \n\u003ccode\u003enull\u003c/code\u003e is no credentials were delegated."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isInitiator",
      "comment": "Determines if this is the context initiator. This can be called on both the context initiator\u0027s and context acceptor\u0027s side.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "true if this is the context initiator, false if it is the context acceptor."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.ietf.jgss.GSSContext",
  "annotations": [],
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}