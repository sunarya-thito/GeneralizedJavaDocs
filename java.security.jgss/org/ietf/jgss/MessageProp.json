{
  "packageName": "org.ietf.jgss",
  "simpleName": "MessageProp",
  "moduleName": "java.security.jgss",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getQOP",
      "comment": "Retrieves the QOP value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/MessageProp.html#setQOP(int)\"\u003e\u003ccode\u003esetQOP(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an int representing the QOP value"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPrivacy",
      "comment": "Retrieves the privacy state.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/MessageProp.html#setPrivacy(boolean)\"\u003e\u003ccode\u003esetPrivacy(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "true if the privacy (i.e., confidentiality) state is true, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "qop"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setQOP",
      "comment": "Sets the QOP value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/MessageProp.html#getQOP()\"\u003e\u003ccode\u003egetQOP()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eqop\u003c/code\u003e - the int value to set the QOP to"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "privState"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPrivacy",
      "comment": "Sets the privacy state.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/MessageProp.html#getPrivacy()\"\u003e\u003ccode\u003egetPrivacy()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eprivState\u003c/code\u003e - true is the privacy (i.e., confidentiality) state is true, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isDuplicateToken",
      "comment": "Tests if this is a duplicate of an earlier token.",
      "tagMap": {
        "return": [
          "true if this is a duplicate, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isOldToken",
      "comment": "Tests if this token\u0027s validity period has expired, i.e., the token is too old to be checked for duplication.",
      "tagMap": {
        "return": [
          "true if the token\u0027s validity period has expired, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isUnseqToken",
      "comment": "Tests if a later token had already been processed.",
      "tagMap": {
        "return": [
          "true if a later token had already been processed, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isGapToken",
      "comment": "Tests if an expected token was not received, i.e., one or more predecessor tokens have not yet been successfully processed.",
      "tagMap": {
        "return": [
          "true if an expected per-message token was not received, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMinorStatus",
      "comment": "Retrieves the minor status code that the underlying mechanism might have set for this per-message operation.",
      "tagMap": {
        "return": [
          "the int minor status"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMinorString",
      "comment": "Retrieves a string explaining the minor status code.",
      "tagMap": {
        "return": [
          "a String corresponding to the minor status code. \n\u003ccode\u003enull\u003c/code\u003e will be returned when no minor status code has been set."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "duplicate"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "old"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "unseq"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "gap"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "minorStatus"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "minorString"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSupplementaryStates",
      "comment": "This method sets the state for the supplementary information flags and the minor status in MessageProp. It is not used by the application but by the GSS implementation to return this information to the caller of a per-message context method.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eduplicate\u003c/code\u003e - true if the token was a duplicate of an earlier token, false otherwise",
          "\u003ccode\u003eold\u003c/code\u003e - true if the token\u0027s validity period has expired, false otherwise",
          "\u003ccode\u003eunseq\u003c/code\u003e - true if a later token has already been processed, false otherwise",
          "\u003ccode\u003egap\u003c/code\u003e - true if one or more predecessor tokens have not yet been successfully processed, false otherwise",
          "\u003ccode\u003eminorStatus\u003c/code\u003e - the int minor status code for the per-message operation",
          "\u003ccode\u003eminorString\u003c/code\u003e - the textual representation of the minorStatus value"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "privState"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor which sets the desired privacy state. The QOP value used is 0.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprivState\u003c/code\u003e - the privacy (i.e. confidentiality) state"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "qop"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "privState"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor which sets the values for the qop and privacy state.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eqop\u003c/code\u003e - the QOP value",
          "\u003ccode\u003eprivState\u003c/code\u003e - the privacy (i.e. confidentiality) state"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "org.ietf.jgss.MessageProp",
  "comment": "This is a utility class used within the per-message GSSContext methods to convey per-message properties.\n\u003cp\u003e When used with the GSSContext interface\u0027s wrap and getMIC methods, an instance of this class is used to indicate the desired Quality-of-Protection (QOP) and to request if confidentiality services are to be applied to caller supplied data (wrap only). To request default QOP, the value of 0 should be used for QOP.\u003c/p\u003e\n\u003cp\u003e When used with the unwrap and verifyMIC methods of the GSSContext interface, an instance of this class will be used to indicate the applied QOP and confidentiality services over the supplied message. In the case of verifyMIC, the confidentiality state will always be \u003ccode\u003efalse\u003c/code\u003e. Upon return from these methods, this object will also contain any supplementary status values applicable to the processed token. The supplementary status values can indicate old tokens, out of sequence tokens, gap tokens or duplicate tokens.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#wrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)\"\u003e\u003ccode\u003eGSSContext.wrap(byte[], int, int, org.ietf.jgss.MessageProp)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#unwrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)\"\u003e\u003ccode\u003eGSSContext.unwrap(byte[], int, int, org.ietf.jgss.MessageProp)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#getMIC(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)\"\u003e\u003ccode\u003eGSSContext.getMIC(byte[], int, int, org.ietf.jgss.MessageProp)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSContext.html#verifyMIC(byte%5B%5D,int,int,byte%5B%5D,int,int,org.ietf.jgss.MessageProp)\"\u003e\u003ccode\u003eGSSContext.verifyMIC(byte[], int, int, byte[], int, int, org.ietf.jgss.MessageProp)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}