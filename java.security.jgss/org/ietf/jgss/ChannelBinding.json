{
  "packageName": "org.ietf.jgss",
  "simpleName": "ChannelBinding",
  "moduleName": "java.security.jgss",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.net.InetAddress",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getInitiatorAddress",
      "comment": "Get the initiator\u0027s address for this channel binding.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the initiator\u0027s address. \n\u003ccode\u003enull\u003c/code\u003e is returned if the address has not been set."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.InetAddress",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAcceptorAddress",
      "comment": "Get the acceptor\u0027s address for this channel binding.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the acceptor\u0027s address. null is returned if the address has not been set."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getApplicationData",
      "comment": "Get the application specified data for this channel binding.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the application data being used as part of the ChannelBinding. \n\u003ccode\u003enull\u003c/code\u003e is returned if no application data has been specified for the channel binding."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares two instances of ChannelBinding.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - another ChannelBinding to compare this one with"
        ],
        "return": [
          "true if the two ChannelBinding\u0027s contain the same values for the initiator and acceptor addresses and the application data."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns a hashcode value for this ChannelBinding object.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hashCode value"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.InetAddress",
            "type": "Class"
          },
          "name": "initAddr",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.net.InetAddress",
            "type": "Class"
          },
          "name": "acceptAddr",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "appData",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create a ChannelBinding object with user supplied address information and data. null values can be used for any fields which the application does not want to specify.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003einitAddr\u003c/code\u003e - the address of the context initiator. \n\u003ccode\u003enull\u003c/code\u003e value can be supplied to indicate that the application does not want to set this value.",
          "\u003ccode\u003eacceptAddr\u003c/code\u003e - the address of the context acceptor. \n\u003ccode\u003enull\u003c/code\u003e value can be supplied to indicate that the application does not want to set this value.",
          "\u003ccode\u003eappData\u003c/code\u003e - application supplied data to be used as part of the channel bindings. \n\u003ccode\u003enull\u003c/code\u003e value can be supplied to indicate that the application does not want to set this value."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "appData",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a ChannelBinding object without any addressing information.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eappData\u003c/code\u003e - application supplied data to be used as part of the channel bindings."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "org.ietf.jgss.ChannelBinding",
  "comment": "This class encapsulates the concept of caller-provided channel binding information. Channel bindings are used to strengthen the quality with which peer entity authentication is provided during context establishment. They enable the GSS-API callers to bind the establishment of the security context to relevant characteristics like addresses or to application specific data.\n\u003cp\u003e The caller initiating the security context must determine the appropriate channel binding values to set in the GSSContext object. The acceptor must provide an identical binding in order to validate that received tokens possess correct channel-related characteristics.\u003c/p\u003e\n\u003cp\u003e Use of channel bindings is optional in GSS-API. ChannelBinding can be set for the \u003ca href\u003d\"GSSContext.html\" title\u003d\"interface in org.ietf.jgss\"\u003e\u003ccode\u003eGSSContext\u003c/code\u003e\u003c/a\u003e using the \u003ca href\u003d\"GSSContext.html#setChannelBinding(org.ietf.jgss.ChannelBinding)\"\u003e\u003ccode\u003esetChannelBinding\u003c/code\u003e\u003c/a\u003e method before the first call to \u003ca href\u003d\"GSSContext.html#initSecContext(byte%5B%5D,int,int)\"\u003e\u003ccode\u003einitSecContext\u003c/code\u003e\u003c/a\u003e or \u003ca href\u003d\"GSSContext.html#acceptSecContext(byte%5B%5D,int,int)\"\u003e\u003ccode\u003eacceptSecContext\u003c/code\u003e\u003c/a\u003e has been performed. Unless the \u003ccode\u003esetChannelBinding\u003c/code\u003e method has been used to set the ChannelBinding for a GSSContext object, \u003ccode\u003enull\u003c/code\u003e ChannelBinding will be assumed. \u003c/p\u003e\n\u003cp\u003e Conceptually, the GSS-API concatenates the initiator and acceptor address information, and the application supplied byte array to form an octet string. The mechanism calculates a MIC over this octet string and binds the MIC to the context establishment token emitted by \u003ccode\u003einitSecContext\u003c/code\u003e method of the \u003ccode\u003eGSSContext\u003c/code\u003e interface. The same bindings are set by the context acceptor for its \u003ccode\u003eGSSContext\u003c/code\u003e object and during processing of the \u003ccode\u003eacceptSecContext\u003c/code\u003e method a MIC is calculated in the same way. The calculated MIC is compared with that found in the token, and if the MICs differ, accept will throw a \u003ccode\u003eGSSException\u003c/code\u003e with the major code set to \u003ca href\u003d\"GSSException.html#BAD_BINDINGS\"\u003e\u003ccode\u003eBAD_BINDINGS\u003c/code\u003e\u003c/a\u003e, and the context will not be established. Some mechanisms may include the actual channel binding data in the token (rather than just a MIC); applications should therefore not use confidential data as channel-binding components.\u003c/p\u003e\n\u003cp\u003e Individual mechanisms may impose additional constraints on addresses that may appear in channel bindings. For example, a mechanism may verify that the initiator address field of the channel binding contains the correct network address of the host system. Portable applications should therefore ensure that they either provide correct information for the address fields, or omit setting of the addressing information.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}