{
  "packageName": "javax.security.auth.kerberos",
  "simpleName": "KeyTab",
  "moduleName": "java.security.jgss",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.security.auth.kerberos.KeyTab",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "field": {
            "name": "file"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getInstance",
      "comment": "Returns a KeyTab instance from a File object that is bound to an unknown service principal. The result of this method is never null. This method only associates the returned KeyTab object with the file and does not read it. Developers should call getInstance(KerberosPrincipal,File) when the bound service principal is known.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - the keytab \n\u003ccode\u003eFile\u003c/code\u003e object, must not be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003efile\u003c/code\u003e argument is null"
        ],
        "return": [
          "the keytab instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.security.auth.kerberos.KeyTab",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "field": {
            "name": "file"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getUnboundInstance",
      "comment": "Returns an unbound KeyTab instance from a File object. The result of this method is never null. This method only associates the returned KeyTab object with the file and does not read it.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - the keytab \n\u003ccode\u003eFile\u003c/code\u003e object, must not be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the file argument is null"
        ],
        "return": [
          "the keytab instance"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.security.auth.kerberos.KeyTab",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.security.auth.kerberos.KerberosPrincipal",
            "type": "Class"
          },
          "field": {
            "name": "princ"
          }
        },
        {
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "field": {
            "name": "file"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getInstance",
      "comment": "Returns a KeyTab instance from a File object that is bound to the specified service principal. The result of this method is never null. This method only associates the returned KeyTab object with the file and does not read it.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprinc\u003c/code\u003e - the bound service principal, must not be null",
          "\u003ccode\u003efile\u003c/code\u003e - the keytab \n\u003ccode\u003eFile\u003c/code\u003e object, must not be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if either of the arguments is null"
        ],
        "return": [
          "the keytab instance"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.security.auth.kerberos.KeyTab",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getInstance",
      "comment": "Returns the default KeyTab instance that is bound to an unknown service principal. The result of this method is never null. This method only associates the returned KeyTab object with the default keytab file and does not read it. Developers should call getInstance(KerberosPrincipal) when the bound service principal is known.",
      "tagMap": {
        "return": [
          "the default keytab instance."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.security.auth.kerberos.KeyTab",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getUnboundInstance",
      "comment": "Returns the default unbound KeyTab instance. The result of this method is never null. This method only associates the returned KeyTab object with the default keytab file and does not read it.",
      "tagMap": {
        "return": [
          "the default keytab instance"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.security.auth.kerberos.KeyTab",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.security.auth.kerberos.KerberosPrincipal",
            "type": "Class"
          },
          "field": {
            "name": "princ"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getInstance",
      "comment": "Returns the default KeyTab instance that is bound to the specified service principal. The result of this method is never null. This method only associates the returned KeyTab object with the default keytab file and does not read it.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprinc\u003c/code\u003e - the bound service principal, must not be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eprinc\u003c/code\u003e is null"
        ],
        "return": [
          "the default keytab instance"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.security.auth.kerberos.KerberosKey",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "javax.security.auth.kerberos.KerberosPrincipal",
            "type": "Class"
          },
          "field": {
            "name": "principal"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getKeys",
      "comment": "Returns fresh keys for the given Kerberos principal. Implementation of this method should make sure the returned keys match the latest content of the keytab file. The result is a newly created copy that can be modified by the caller without modifying the keytab object. The caller should destroy the result keys after they are used. Please note that the keytab file can be created after the KeyTab object is instantiated and its content may change over time. Therefore, an application should call this method only when it needs to use the keys. Any previous result from an earlier invocation could potentially be expired. If there is any error (say, I/O error or format error) during the reading process of the keytab file, a saved result should be returned. If there is no saved result (say, this is the first time this method is called, or, all previous read attempts failed), an empty array should be returned. This can make sure the result is not drastically changed during the (probably slow) update of the keytab file. Each time this method is called and the reading of the file succeeds with no exception (say, I/O error or file format error), the result should be saved for principal. The implementation can also save keys for other principals having keys in the same keytab object if convenient. Any unsupported key read from the keytab is ignored and not included in the result. If this keytab is bound to a specific principal, calling this method on another principal will return an empty array.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprincipal\u003c/code\u003e - the Kerberos principal, must not be null."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eprincipal\u003c/code\u003e argument is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and the read access to the keytab file is not permitted"
        ],
        "return": [
          "the keys (never null, may be empty)"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "exists",
      "comment": "Checks if the keytab file exists. Implementation of this method should make sure that the result matches the latest status of the keytab file.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and the read access to the keytab file is not permitted"
        ],
        "return": [
          "true if the keytab file exists; false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns an informative textual representation of this KeyTab.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an informative textual representation of this \n\u003ccode\u003eKeyTab\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns a hash code for this KeyTab.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code for this \n\u003ccode\u003eKeyTab\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "other"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares the specified object with this KeyTab for equality. Returns true if the given object is also a KeyTab and the two KeyTab instances are equivalent.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the object to compare to"
        ],
        "return": [
          "true if the specified object is equal to this \n\u003ccode\u003eKeyTab\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.security.auth.kerberos.KerberosPrincipal",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPrincipal",
      "comment": "Returns the service principal this KeyTab object is bound to. Returns null if it\u0027s not bound. Please note the deprecated constructors create a KeyTab object bound for some unknown principal. In this case, this method also returns null. User can call isBound() to verify this case.",
      "tagMap": {
        "return": [
          "the service principal"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isBound",
      "comment": "Returns if the keytab is bound to a principal",
      "tagMap": {
        "return": [
          "if the keytab is bound to a principal"
        ],
        "since": [
          "1.8"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "javax.security.auth.kerberos.KeyTab",
  "comment": "This class encapsulates a keytab file. \n\u003cp\u003e A Kerberos JAAS login module that obtains long term secret keys from a keytab file should use this class. The login module will store an instance of this class in the private credential set of a \u003ca href\u003d\"../../../../../java.base/javax/security/auth/Subject.html\" title\u003d\"class in javax.security.auth\"\u003e\u003ccode\u003eSubject\u003c/code\u003e\u003c/a\u003e during the commit phase of the authentication process. \u003c/p\u003e\n\u003cp\u003e If a \u003ccode\u003eKeyTab\u003c/code\u003e object is obtained from \u003ca href\u003d\"#getUnboundInstance()\"\u003e\u003ccode\u003egetUnboundInstance()\u003c/code\u003e\u003c/a\u003e or \u003ca href\u003d\"#getUnboundInstance(java.io.File)\"\u003e\u003ccode\u003egetUnboundInstance(java.io.File)\u003c/code\u003e\u003c/a\u003e, it is unbound and thus can be used by any service principal. Otherwise, if it\u0027s obtained from \u003ca href\u003d\"#getInstance(javax.security.auth.kerberos.KerberosPrincipal)\"\u003e\u003ccode\u003egetInstance(KerberosPrincipal)\u003c/code\u003e\u003c/a\u003e or \u003ca href\u003d\"#getInstance(javax.security.auth.kerberos.KerberosPrincipal,java.io.File)\"\u003e\u003ccode\u003egetInstance(KerberosPrincipal, java.io.File)\u003c/code\u003e\u003c/a\u003e, it is bound to the specific service principal and can only be used by it. \u003c/p\u003e\n\u003cp\u003e Please note the constructors \u003ca href\u003d\"#getInstance()\"\u003e\u003ccode\u003egetInstance()\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"#getInstance(java.io.File)\"\u003e\u003ccode\u003egetInstance(java.io.File)\u003c/code\u003e\u003c/a\u003e were created when there was no support for unbound keytabs. These methods should not be used anymore. An object created with either of these methods are considered to be bound to an unknown principal, which means, its \u003ca href\u003d\"#isBound()\"\u003e\u003ccode\u003eisBound()\u003c/code\u003e\u003c/a\u003e returns true and \u003ca href\u003d\"#getPrincipal()\"\u003e\u003ccode\u003egetPrincipal()\u003c/code\u003e\u003c/a\u003e returns null. \u003c/p\u003e\n\u003cp\u003e It might be necessary for the application to be granted a \u003ca href\u003d\"../../../../../java.base/javax/security/auth/PrivateCredentialPermission.html\" title\u003d\"class in javax.security.auth\"\u003e\u003ccode\u003ePrivateCredentialPermission\u003c/code\u003e\u003c/a\u003e if it needs to access the \u003ccode\u003eKeyTab\u003c/code\u003e instance from a \u003ccode\u003eSubject\u003c/code\u003e. This permission is not needed when the application depends on the default JGSS Kerberos mechanism to access the \u003ccode\u003eKeyTab\u003c/code\u003e. In that case, however, the application will need an appropriate \u003ca href\u003d\"ServicePermission.html\" title\u003d\"class in javax.security.auth.kerberos\"\u003e\u003ccode\u003eServicePermission\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e The keytab file format is described at \u003ca href\u003d\"http://www.ioplex.com/utilities/keytab.txt\"\u003e http://www.ioplex.com/utilities/keytab.txt\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.7"
    ]
  }
}