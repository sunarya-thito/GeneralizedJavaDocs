{
  "packageName": "com.sun.java.accessibility.util",
  "simpleName": "SwingEventMonitor",
  "moduleName": "jdk.accessibility",
  "type": "CLASS",
  "superClass": {
    "name": "com.sun.java.accessibility.util.AWTEventMonitor",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.swing.event.EventListenerList",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 28,
      "name": "listenerList",
      "comment": "The master list of all listeners registered by other classes. This can only be publicly modified by calling the add or remove listener methods in this class.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.AncestorListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addAncestorListener",
      "comment": "Adds the specified listener to receive all ANCESTOR events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeAncestorListener(javax.swing.event.AncestorListener)\"\u003e\u003ccode\u003eremoveAncestorListener(javax.swing.event.AncestorListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.AncestorListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeAncestorListener",
      "comment": "Removes the specified listener so it no longer receives ANCESTOR events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addAncestorListener(javax.swing.event.AncestorListener)\"\u003e\u003ccode\u003eaddAncestorListener(javax.swing.event.AncestorListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.CaretListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addCaretListener",
      "comment": "Adds the specified listener to receive all CARET events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeCaretListener(javax.swing.event.CaretListener)\"\u003e\u003ccode\u003eremoveCaretListener(javax.swing.event.CaretListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.CaretListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeCaretListener",
      "comment": "Removes the specified listener so it no longer receives CARET events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addCaretListener(javax.swing.event.CaretListener)\"\u003e\u003ccode\u003eaddCaretListener(javax.swing.event.CaretListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.CellEditorListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addCellEditorListener",
      "comment": "Adds the specified listener to receive all CELLEDITOR events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeCellEditorListener(javax.swing.event.CellEditorListener)\"\u003e\u003ccode\u003eremoveCellEditorListener(javax.swing.event.CellEditorListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.CellEditorListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeCellEditorListener",
      "comment": "Removes the specified listener so it no longer receives CELLEDITOR events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addCellEditorListener(javax.swing.event.CellEditorListener)\"\u003e\u003ccode\u003eaddCellEditorListener(javax.swing.event.CellEditorListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.ChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addChangeListener",
      "comment": "Adds the specified listener to receive all CHANGE events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeChangeListener(javax.swing.event.ChangeListener)\"\u003e\u003ccode\u003eremoveChangeListener(javax.swing.event.ChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.ChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeChangeListener",
      "comment": "Removes the specified listener so it no longer receives CHANGE events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addChangeListener(javax.swing.event.ChangeListener)\"\u003e\u003ccode\u003eaddChangeListener(javax.swing.event.ChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.TableColumnModelListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addColumnModelListener",
      "comment": "Adds the specified listener to receive all COLUMNMODEL events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeColumnModelListener(javax.swing.event.TableColumnModelListener)\"\u003e\u003ccode\u003eremoveColumnModelListener(javax.swing.event.TableColumnModelListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.TableColumnModelListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeColumnModelListener",
      "comment": "Removes the specified listener so it no longer receives COLUMNMODEL events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addColumnModelListener(javax.swing.event.TableColumnModelListener)\"\u003e\u003ccode\u003eaddColumnModelListener(javax.swing.event.TableColumnModelListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.DocumentListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addDocumentListener",
      "comment": "Adds the specified listener to receive all DOCUMENT events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeDocumentListener(javax.swing.event.DocumentListener)\"\u003e\u003ccode\u003eremoveDocumentListener(javax.swing.event.DocumentListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.DocumentListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeDocumentListener",
      "comment": "Removes the specified listener so it no longer receives DOCUMENT events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addDocumentListener(javax.swing.event.DocumentListener)\"\u003e\u003ccode\u003eaddDocumentListener(javax.swing.event.DocumentListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.ListDataListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addListDataListener",
      "comment": "Adds the specified listener to receive all LISTDATA events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeListDataListener(javax.swing.event.ListDataListener)\"\u003e\u003ccode\u003eremoveListDataListener(javax.swing.event.ListDataListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.ListDataListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeListDataListener",
      "comment": "Removes the specified listener so it no longer receives LISTDATA events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addListDataListener(javax.swing.event.ListDataListener)\"\u003e\u003ccode\u003eaddListDataListener(javax.swing.event.ListDataListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.ListSelectionListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addListSelectionListener",
      "comment": "Adds the specified listener to receive all LISTSELECTION events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeListSelectionListener(javax.swing.event.ListSelectionListener)\"\u003e\u003ccode\u003eremoveListSelectionListener(javax.swing.event.ListSelectionListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.ListSelectionListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeListSelectionListener",
      "comment": "Removes the specified listener so it no longer receives LISTSELECTION events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addListSelectionListener(javax.swing.event.ListSelectionListener)\"\u003e\u003ccode\u003eaddListSelectionListener(javax.swing.event.ListSelectionListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.MenuListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addMenuListener",
      "comment": "Adds the specified listener to receive all MENU events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeMenuListener(javax.swing.event.MenuListener)\"\u003e\u003ccode\u003eremoveMenuListener(javax.swing.event.MenuListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.MenuListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeMenuListener",
      "comment": "Removes the specified listener so it no longer receives MENU events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addMenuListener(javax.swing.event.MenuListener)\"\u003e\u003ccode\u003eaddMenuListener(javax.swing.event.MenuListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.PopupMenuListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addPopupMenuListener",
      "comment": "Adds the specified listener to receive all POPUPMENU events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removePopupMenuListener(javax.swing.event.PopupMenuListener)\"\u003e\u003ccode\u003eremovePopupMenuListener(javax.swing.event.PopupMenuListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.PopupMenuListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removePopupMenuListener",
      "comment": "Removes the specified listener so it no longer receives POPUPMENU events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addPopupMenuListener(javax.swing.event.PopupMenuListener)\"\u003e\u003ccode\u003eaddPopupMenuListener(javax.swing.event.PopupMenuListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.TableModelListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addTableModelListener",
      "comment": "Adds the specified listener to receive all TABLEMODEL events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeTableModelListener(javax.swing.event.TableModelListener)\"\u003e\u003ccode\u003eremoveTableModelListener(javax.swing.event.TableModelListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.TableModelListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeTableModelListener",
      "comment": "Removes the specified listener so it no longer receives TABLEMODEL events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addTableModelListener(javax.swing.event.TableModelListener)\"\u003e\u003ccode\u003eaddTableModelListener(javax.swing.event.TableModelListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.TreeExpansionListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addTreeExpansionListener",
      "comment": "Adds the specified listener to receive all TREEEXPANSION events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeTreeExpansionListener(javax.swing.event.TreeExpansionListener)\"\u003e\u003ccode\u003eremoveTreeExpansionListener(javax.swing.event.TreeExpansionListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.TreeExpansionListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeTreeExpansionListener",
      "comment": "Removes the specified listener so it no longer receives TREEEXPANSION events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addTreeExpansionListener(javax.swing.event.TreeExpansionListener)\"\u003e\u003ccode\u003eaddTreeExpansionListener(javax.swing.event.TreeExpansionListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.TreeModelListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addTreeModelListener",
      "comment": "Adds the specified listener to receive all TREEMODEL events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeTreeModelListener(javax.swing.event.TreeModelListener)\"\u003e\u003ccode\u003eremoveTreeModelListener(javax.swing.event.TreeModelListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.TreeModelListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeTreeModelListener",
      "comment": "Removes the specified listener so it no longer receives TREEMODEL events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addTreeModelListener(javax.swing.event.TreeModelListener)\"\u003e\u003ccode\u003eaddTreeModelListener(javax.swing.event.TreeModelListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.TreeSelectionListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addTreeSelectionListener",
      "comment": "Adds the specified listener to receive all TREESELECTION events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeTreeSelectionListener(javax.swing.event.TreeSelectionListener)\"\u003e\u003ccode\u003eremoveTreeSelectionListener(javax.swing.event.TreeSelectionListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.TreeSelectionListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeTreeSelectionListener",
      "comment": "Removes the specified listener so it no longer receives TREESELECTION events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addTreeSelectionListener(javax.swing.event.TreeSelectionListener)\"\u003e\u003ccode\u003eaddTreeSelectionListener(javax.swing.event.TreeSelectionListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.UndoableEditListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addUndoableEditListener",
      "comment": "Adds the specified listener to receive all UNDOABLEEDIT events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeUndoableEditListener(javax.swing.event.UndoableEditListener)\"\u003e\u003ccode\u003eremoveUndoableEditListener(javax.swing.event.UndoableEditListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.UndoableEditListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeUndoableEditListener",
      "comment": "Removes the specified listener so it no longer receives UNDOABLEEDIT events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addUndoableEditListener(javax.swing.event.UndoableEditListener)\"\u003e\u003ccode\u003eaddUndoableEditListener(javax.swing.event.UndoableEditListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.InternalFrameListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addInternalFrameListener",
      "comment": "Adds the specified listener to receive all INTERNALFRAME events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeInternalFrameListener(javax.swing.event.InternalFrameListener)\"\u003e\u003ccode\u003eremoveInternalFrameListener(javax.swing.event.InternalFrameListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.InternalFrameListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeInternalFrameListener",
      "comment": "Removes the specified listener so it no longer receives INTERNALFRAME events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addInternalFrameListener(javax.swing.event.InternalFrameListener)\"\u003e\u003ccode\u003eaddInternalFrameListener(javax.swing.event.InternalFrameListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.beans.PropertyChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addPropertyChangeListener",
      "comment": "Adds the specified listener to receive all PROPERTYCHANGE events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removePropertyChangeListener(java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eremovePropertyChangeListener(java.beans.PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.beans.PropertyChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removePropertyChangeListener",
      "comment": "Removes the specified listener so it no longer receives PROPERTYCHANGE events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addPropertyChangeListener(java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eaddPropertyChangeListener(java.beans.PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.beans.VetoableChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "addVetoableChangeListener",
      "comment": "Adds the specified listener to receive all VETOABLECHANGE events on each component instance in the Java Virtual Machine as they occur. Note: This listener is automatically added to all component instances created after this method is called. In addition, it is only added to component instances that support this listener type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#removeVetoableChangeListener(java.beans.VetoableChangeListener)\"\u003e\u003ccode\u003eremoveVetoableChangeListener(java.beans.VetoableChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.beans.VetoableChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "removeVetoableChangeListener",
      "comment": "Removes the specified listener so it no longer receives VETOABLECHANGE events when they occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/SwingEventMonitor.html#addVetoableChangeListener(java.beans.VetoableChangeListener)\"\u003e\u003ccode\u003eaddVetoableChangeListener(java.beans.VetoableChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a SwingEventMonitor.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "com.sun.java.accessibility.util.SwingEventMonitor",
  "comment": "\u003cp\u003e\u003ccode\u003eSwingEventMonitor\u003c/code\u003e extends \u003ca href\u003d\"AWTEventMonitor.html\" title\u003d\"class in com.sun.java.accessibility.util\"\u003e\u003ccode\u003eAWTEventMonitor\u003c/code\u003e\u003c/a\u003e by adding a suite of listeners conditionally installed on every Swing component instance in the Java Virtual Machine. The events captured by these listeners are made available through a unified set of listeners supported by \u003ccode\u003eSwingEventMonitor\u003c/code\u003e. With this, all the individual events on each of the AWT and Swing component instances are funneled into one set of listeners broken down by category (see \u003ca href\u003d\"EventID.html\" title\u003d\"class in com.sun.java.accessibility.util\"\u003e\u003ccode\u003eEventID\u003c/code\u003e\u003c/a\u003e for the categories). \u003c/p\u003e\n\u003cp\u003eThis class depends upon \u003ca href\u003d\"EventQueueMonitor.html\" title\u003d\"class in com.sun.java.accessibility.util\"\u003e\u003ccode\u003eEventQueueMonitor\u003c/code\u003e\u003c/a\u003e, which provides the base level support for capturing the top-level containers as they are created. \u003c/p\u003e\n\u003cp\u003eBecause this class extends \u003ccode\u003eAWTEventMonitor\u003c/code\u003e, it is not necessary to use this class and \u003ccode\u003eAWTEventMonitor\u003c/code\u003e at the same time. If you want to monitor both AWT and Swing components, you should use just this class.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.accessibility/com/sun/java/accessibility/util/AWTEventMonitor.html\" title\u003d\"class in com.sun.java.accessibility.util\"\u003e\u003ccode\u003eAWTEventMonitor\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}