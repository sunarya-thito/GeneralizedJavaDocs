{
  "packageName": "org.bukkit.event.entity",
  "simpleName": "EntityEvent",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "org.bukkit.event.Event",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "org.bukkit.entity.Entity",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "entity",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.entity.Entity",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getEntity",
      "comment": "Returns the Entity involved in this event",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "Entity who is involved in this event"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.entity.EntityType",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getEntityType",
      "comment": "Gets the EntityType of the Entity involved in this event.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "EntityType of the Entity involved in this event"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.entity.Entity",
            "type": "Class"
          },
          "field": {
            "name": "what"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "org.bukkit.event.entity.EntityEvent",
  "comment": "Represents an Entity-related event",
  "tagMap": {}
}