{
  "packageName": "org.bukkit.event.player",
  "simpleName": "PlayerHarvestBlockEvent",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "org.bukkit.event.player.PlayerEvent",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "org.bukkit.block.Block",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHarvestedBlock",
      "comment": "Gets the block that is being harvested.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The block that is being harvested"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "org.bukkit.inventory.ItemStack",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getItemsHarvested",
      "comment": "Gets a list of items that are being harvested from this block.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "A list of items that are being harvested from this block"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isCancelled",
      "comment": "Description copied from interface: Cancellable",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Cancellable.html#isCancelled()\"\u003eisCancelled\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Cancellable.html\" title\u003d\"interface in org.bukkit.event\"\u003eCancellable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if this event is cancelled"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setCancelled",
      "comment": "Description copied from interface: Cancellable",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Cancellable.html#setCancelled(boolean)\"\u003esetCancelled\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Cancellable.html\" title\u003d\"interface in org.bukkit.event\"\u003eCancellable\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecancel\u003c/code\u003e - true if you wish to cancel this event"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.event.HandlerList",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHandlers",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Event.html#getHandlers()\"\u003egetHandlers\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Event.html\" title\u003d\"class in org.bukkit.event\"\u003eEvent\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.event.HandlerList",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getHandlerList",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            },
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.entity.Player",
            "type": "Class"
          },
          "name": "player",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            },
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.block.Block",
            "type": "Class"
          },
          "name": "harvestedBlock",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            },
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "org.bukkit.inventory.ItemStack",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "itemsHarvested",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "org.bukkit.event.player.PlayerHarvestBlockEvent",
  "comment": "This event is called whenever a player harvests a block. \n\u003cbr\u003e A \u0027harvest\u0027 is when a block drops an item (usually some sort of crop) and changes state, but is not broken in order to drop the item. \n\u003cbr\u003e This event is not called for when a block is broken, to handle that, listen for \n\u003ca href\u003d\"../block/BlockBreakEvent.html\" title\u003d\"class in org.bukkit.event.block\"\u003e\u003ccode\u003eBlockBreakEvent\u003c/code\u003e\u003c/a\u003e and \n\u003ca href\u003d\"../block/BlockDropItemEvent.html\" title\u003d\"class in org.bukkit.event.block\"\u003e\u003ccode\u003eBlockDropItemEvent\u003c/code\u003e\u003c/a\u003e.",
  "tagMap": {}
}