{
  "packageName": "org.bukkit",
  "simpleName": "ChatColor",
  "moduleName": "ALL-UNNAMED",
  "type": "ENUM",
  "superClass": {
    "name": "java.lang.Enum",
    "parameters": [
      {
        "name": "org.bukkit.ChatColor",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "char",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "COLOR_CHAR",
      "comment": "The special character which prefixes all chat colour codes. Use this if you need to dynamically convert colour codes from your custom format.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/constant-values.html#org.bukkit.ChatColor.COLOR_CHAR\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.ChatColor",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "values",
      "comment": "Returns an array containing the constants of this enum class, in the order they are declared.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an array containing the constants of this enum class, in the order they are declared"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.ChatColor",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "valueOf",
      "comment": "Returns the enum constant of this class with the specified name. The string must match exactly an identifier used to declare an enum constant in this class. (Extraneous whitespace characters are not permitted.)",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the enum constant to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this enum class has no constant with the specified name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the argument is null"
        ],
        "return": [
          "the enum constant with the specified name"
        ]
      }
    },
    {
      "returnType": {
        "name": "net.md_5.bungee.api.ChatColor",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "asBungee",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getChar",
      "comment": "Gets the char value associated with this color",
      "annotations": [],
      "tagMap": {
        "return": [
          "A char value of this color code"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Enum.html#toString()\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Enum.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eEnum\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/ChatColor.html\" title\u003d\"enum class in org.bukkit\"\u003eChatColor\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isFormat",
      "comment": "Checks if this code is a format code as opposed to a color code.",
      "annotations": [],
      "tagMap": {
        "return": [
          "whether this ChatColor is a format code"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isColor",
      "comment": "Checks if this code is a color code as opposed to a format code.",
      "annotations": [],
      "tagMap": {
        "return": [
          "whether this ChatColor is a color code"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.ChatColor",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getByChar",
      "comment": "Gets the color represented by the specified color code",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecode\u003c/code\u003e - Code to check"
        ],
        "return": [
          "Associative \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/ChatColor.html\" title\u003d\"enum class in org.bukkit\"\u003e\u003ccode\u003eChatColor\u003c/code\u003e\u003c/a\u003e with the given code, or null if it doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.ChatColor",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getByChar",
      "comment": "Gets the color represented by the specified color code",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecode\u003c/code\u003e - Code to check"
        ],
        "return": [
          "Associative \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/ChatColor.html\" title\u003d\"enum class in org.bukkit\"\u003e\u003ccode\u003eChatColor\u003c/code\u003e\u003c/a\u003e with the given code, or null if it doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "stripColor",
      "comment": "Strips the given message of all color codes",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Contract",
            "type": "Class"
          },
          "values": [
            {
              "name": "value",
              "value": "!null -\u003e !null; null -\u003e null"
            }
          ]
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003einput\u003c/code\u003e - String to strip of color"
        ],
        "return": [
          "A copy of the input string, without any coloring"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "translateAlternateColorCodes",
      "comment": "Translates a string using an alternate color code character into a string that uses the internal ChatColor.COLOR_CODE color code character. The alternate color code character will only be replaced if it is immediately followed by 0-9, A-F, a-f, K-O, k-o, R or r.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ealtColorChar\u003c/code\u003e - The alternate color code character to replace. Ex: \u0026amp;",
          "\u003ccode\u003etextToTranslate\u003c/code\u003e - Text containing the alternate color code character."
        ],
        "return": [
          "Text containing the ChatColor.COLOR_CODE color code character."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getLastColors",
      "comment": "Gets the ChatColors used at the end of the given input string.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003einput\u003c/code\u003e - Input string to retrieve the colors from."
        ],
        "return": [
          "Any remaining ChatColors to pass onto the next line."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "org.bukkit.ChatColor",
  "comment": "All supported color values for chat",
  "tagMap": {}
}