{
  "packageName": "org.bukkit.map",
  "simpleName": "MapFont",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "malleable",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class"
          },
          "field": {
            "name": "ch"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.map.MapFont$CharacterSprite",
            "type": "Class"
          },
          "field": {
            "name": "sprite"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setChar",
      "comment": "Set the sprite for a given character.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ech\u003c/code\u003e - The character to set the sprite for.",
          "\u003ccode\u003esprite\u003c/code\u003e - The CharacterSprite to set."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalStateException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if this font is static."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.map.MapFont$CharacterSprite",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class"
          },
          "field": {
            "name": "ch"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getChar",
      "comment": "Get the sprite for a given character.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ech\u003c/code\u003e - The character to get the sprite for."
        ],
        "return": [
          "The CharacterSprite associated with the character, or null if there is none."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "text"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getWidth",
      "comment": "Get the width of the given text as it would be rendered using this font.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - The text."
        ],
        "return": [
          "The width in pixels."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHeight",
      "comment": "Get the height of this font.",
      "tagMap": {
        "return": [
          "The height of the font."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "text"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isValid",
      "comment": "Check whether the given text is valid.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - The text."
        ],
        "return": [
          "True if the string contains only defined characters, false otherwise."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "tagMap": {}
    }
  ],
  "innerClasses": [
    "org.bukkit.map.MapFont$CharacterSprite"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "org.bukkit.map.MapFont",
  "comment": "Represents a bitmap font drawable to a map.",
  "tagMap": {}
}