{
  "packageName": "org.bukkit.map",
  "simpleName": "MapView",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getId",
      "comment": "Get the ID of this map item for use with MapMeta.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The ID of the map."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isVirtual",
      "comment": "Check whether this map is virtual. A map is virtual if its lowermost MapRenderer is plugin-provided.",
      "annotations": [],
      "tagMap": {
        "return": [
          "Whether the map is virtual."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.map.MapView$Scale",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getScale",
      "comment": "Get the scale of this map.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The scale of the map."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setScale",
      "comment": "Set the scale of this map.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003escale\u003c/code\u003e - The scale to set."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCenterX",
      "comment": "Get the center X position of this map.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The center X position."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCenterZ",
      "comment": "Get the center Z position of this map.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The center Z position."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setCenterX",
      "comment": "Set the center X position of this map.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The center X position."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setCenterZ",
      "comment": "Set the center Z position of this map.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ez\u003c/code\u003e - The center Z position."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.World",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getWorld",
      "comment": "Get the world that this map is associated with. Primarily used by the internal renderer, but may be used by external renderers. May return null if the world the map is associated with is not loaded.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The World this map is associated with."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setWorld",
      "comment": "Set the world that this map is associated with. The world is used by the internal renderer, and may also be used by external renderers.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eworld\u003c/code\u003e - The World to associate this map with."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "org.bukkit.map.MapRenderer",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getRenderers",
      "comment": "Get a list of MapRenderers currently in effect.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "A \n\u003ccode\u003eList\u0026lt;MapRenderer\u0026gt;\u003c/code\u003e containing each map renderer."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addRenderer",
      "comment": "Add a renderer to this map.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erenderer\u003c/code\u003e - The MapRenderer to add."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeRenderer",
      "comment": "Remove a renderer from this map.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erenderer\u003c/code\u003e - The MapRenderer to remove."
        ],
        "return": [
          "True if the renderer was successfully removed."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isTrackingPosition",
      "comment": "Gets whether a position cursor should be shown when the map is near its center.",
      "annotations": [],
      "tagMap": {
        "return": [
          "tracking status"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setTrackingPosition",
      "comment": "Sets whether a position cursor should be shown when the map is near its center.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etrackingPosition\u003c/code\u003e - tracking status"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isUnlimitedTracking",
      "comment": "Whether the map will show a smaller position cursor (true), or no position cursor (false) when cursor is outside of map\u0027s range.",
      "annotations": [],
      "tagMap": {
        "return": [
          "unlimited tracking state"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setUnlimitedTracking",
      "comment": "Whether the map will show a smaller position cursor (true), or no position cursor (false) when cursor is outside of map\u0027s range.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eunlimited\u003c/code\u003e - tracking state"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isLocked",
      "comment": "Gets whether the map is locked or not. A locked map may not be explored further.",
      "annotations": [],
      "tagMap": {
        "return": [
          "lock status"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setLocked",
      "comment": "Gets whether the map is locked or not. A locked map may not be explored further.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elocked\u003c/code\u003e - status"
        ]
      }
    }
  ],
  "innerClasses": [
    "org.bukkit.map.MapView$Scale"
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.map.MapView",
  "comment": "Represents a map item.",
  "tagMap": {}
}