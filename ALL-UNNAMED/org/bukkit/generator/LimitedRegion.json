{
  "packageName": "org.bukkit.generator",
  "simpleName": "LimitedRegion",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.bukkit.RegionAccessor",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBuffer",
      "comment": "Gets the buffer around the central chunk which is accessible. The returned value is in normal world coordinate scale. For example: If the method returns 16 you have a working area of 48x48.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The buffer in X and Z direction"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isInRegion",
      "comment": "Checks if the given Location is in the region.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elocation\u003c/code\u003e - the location to check"
        ],
        "return": [
          "true if the location is in the region, otherwise false."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isInRegion",
      "comment": "Checks if the given coordinates are in the region.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X-coordinate to check",
          "\u003ccode\u003ey\u003c/code\u003e - Y-coordinate to check",
          "\u003ccode\u003ez\u003c/code\u003e - Z-coordinate to check"
        ],
        "return": [
          "true if the coordinates are in the region, otherwise false."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "org.bukkit.block.BlockState",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTileEntities",
      "comment": "Gets a list of all tile entities in the limited region including the buffer zone.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "a list of tile entities."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setBlockData",
      "comment": "Sets the block at a vector location to the provided BlockData.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003evector\u003c/code\u003e - \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/util/Vector.html\" title\u003d\"class in org.bukkit.util\"\u003e\u003ccode\u003eVector\u003c/code\u003e\u003c/a\u003e representing the position of the block to set.",
          "\u003ccode\u003edata\u003c/code\u003e - \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/block/data/BlockData.html\" title\u003d\"interface in org.bukkit.block.data\"\u003e\u003ccode\u003eBlockData\u003c/code\u003e\u003c/a\u003e to set the block at the provided coordinates to."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setBlockState",
      "comment": "Sets the BlockState at a location.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X coordinate.",
          "\u003ccode\u003ey\u003c/code\u003e - Y coordinate.",
          "\u003ccode\u003ez\u003c/code\u003e - Z coordinate.",
          "\u003ccode\u003estate\u003c/code\u003e - The block state."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setBlockState",
      "comment": "Sets the BlockState at a location.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elocation\u003c/code\u003e - Location to set block state.",
          "\u003ccode\u003estate\u003c/code\u003e - The block state."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.block.BlockState",
        "type": "Class"
      },
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBlockState",
      "comment": "Gets the BlockState at a location.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003elocation\u003c/code\u003e - Location to get block state from."
        ],
        "return": [
          "The block state."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "scheduleBlockUpdate",
      "comment": "Schedules a block update at (x, y, z).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Y coordinate",
          "\u003ccode\u003ez\u003c/code\u003e - Z coordinate"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "scheduleBlockUpdate",
      "comment": "Schedules a block update at a vector location.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elocation\u003c/code\u003e - \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/util/Vector.html\" title\u003d\"class in org.bukkit.util\"\u003e\u003ccode\u003eVector\u003c/code\u003e\u003c/a\u003e representing the position of the block to update."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "scheduleFluidUpdate",
      "comment": "Schedules a fluid update at (x, y, z).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Y coordinate",
          "\u003ccode\u003ez\u003c/code\u003e - Z coordinate"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "scheduleFluidUpdate",
      "comment": "Schedules a fluid update at a vector location.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elocation\u003c/code\u003e - \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/util/Vector.html\" title\u003d\"class in org.bukkit.util\"\u003e\u003ccode\u003eVector\u003c/code\u003e\u003c/a\u003e representing the position of the block to update."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.World",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getWorld",
      "comment": "Gets the World object this region represents. Do not attempt to read from/write to this world! Doing so during generation will cause a deadlock!",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/World.html\" title\u003d\"interface in org.bukkit\"\u003e\u003ccode\u003eWorld\u003c/code\u003e\u003c/a\u003e object that this region represents."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.block.data.BlockData",
        "type": "Class"
      },
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBlockData",
      "comment": "Gets the BlockData of the block at the provided coordinates.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003evector\u003c/code\u003e - \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/util/Vector.html\" title\u003d\"class in org.bukkit.util\"\u003e\u003ccode\u003eVector\u003c/code\u003e\u003c/a\u003e representing the position of the block to get."
        ],
        "return": [
          "\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/block/data/BlockData.html\" title\u003d\"interface in org.bukkit.block.data\"\u003e\u003ccode\u003eBlockData\u003c/code\u003e\u003c/a\u003e at the coordinates"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCenterChunkX",
      "comment": "Gets the X-coordinate of the chunk in the center of the region.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The center chunk\u0027s X coordinate."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCenterBlockX",
      "comment": "Gets the X-coordinate of the block in the center of the region.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The center chunk\u0027s X coordinate."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCenterChunkZ",
      "comment": "Gets the Z-coordinate of the chunk in the center of the region.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The center chunk\u0027s Z coordinate."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCenterBlockZ",
      "comment": "Gets the Z-coordinate of the block in the center of the region.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The center chunk\u0027s Z coordinate."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.generator.LimitedRegion",
  "tagMap": {}
}