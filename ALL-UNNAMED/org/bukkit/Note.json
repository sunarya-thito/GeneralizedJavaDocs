{
  "packageName": "org.bukkit",
  "simpleName": "Note",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "org.bukkit.Note",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "octave"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.Note$Tone",
            "type": "Class"
          },
          "field": {
            "name": "tone"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "flat",
      "comment": "Creates a new note for a flat tone, such as A-flat.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eoctave\u003c/code\u003e - The octave where the note is in. Has to be 0 - 1.",
          "\u003ccode\u003etone\u003c/code\u003e - The tone within the octave."
        ],
        "return": [
          "The new note."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Note",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "octave"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.Note$Tone",
            "type": "Class"
          },
          "field": {
            "name": "tone"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "sharp",
      "comment": "Creates a new note for a sharp tone, such as A-sharp.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eoctave\u003c/code\u003e - The octave where the note is in. Has to be 0 - 2.",
          "\u003ccode\u003etone\u003c/code\u003e - The tone within the octave. If the octave is 2 the note has to be F#."
        ],
        "return": [
          "The new note."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Note",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "octave"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.Note$Tone",
            "type": "Class"
          },
          "field": {
            "name": "tone"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "natural",
      "comment": "Creates a new note for a natural tone, such as A-natural.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eoctave\u003c/code\u003e - The octave where the note is in. Has to be 0 - 1.",
          "\u003ccode\u003etone\u003c/code\u003e - The tone within the octave."
        ],
        "return": [
          "The new note."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Note",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "sharped",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "The note a semitone above this one."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Note",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "flattened",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "The note a semitone below this one."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getId",
      "comment": "Returns the internal id of this note.",
      "annotations": [
        {
          "type": "java.lang.Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "the internal id of this note."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOctave",
      "comment": "Returns the octave of this note.",
      "tagMap": {
        "return": [
          "the octave of this note."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Note$Tone",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTone",
      "comment": "Returns the tone of this note.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "the tone of this note."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isSharped",
      "comment": "Returns if this note is sharped.",
      "tagMap": {
        "return": [
          "if this note is sharped."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode()\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals(java.lang.Object)\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString()\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "note"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new note.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enote\u003c/code\u003e - Internal note id. \n\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Note.html#getId()\"\u003e\u003ccode\u003egetId()\u003c/code\u003e\u003c/a\u003e always return this value. The value has to be in the interval [0;\u0026nbsp;24]."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "octave"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.Note$Tone",
            "type": "Class"
          },
          "field": {
            "name": "tone"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "sharped"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new note.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eoctave\u003c/code\u003e - The octave where the note is in. Has to be 0 - 2.",
          "\u003ccode\u003etone\u003c/code\u003e - The tone within the octave. If the octave is 2 the note has to be F#.",
          "\u003ccode\u003esharped\u003c/code\u003e - Set if the tone is sharped (e.g. for F#)."
        ]
      }
    }
  ],
  "innerClasses": [
    "org.bukkit.Note$Tone"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "org.bukkit.Note",
  "comment": "A note class to store a specific note.",
  "tagMap": {}
}