{
  "packageName": "org.bukkit.plugin",
  "simpleName": "PluginLoader",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "org.bukkit.plugin.Plugin",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "loadPlugin",
      "comment": "Loads the plugin contained in the specified file",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - File to attempt to load"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/plugin/InvalidPluginException.html\" title\u003d\"class in org.bukkit.plugin\"\u003eInvalidPluginException\u003c/a\u003e\u003c/code\u003e - Thrown when the specified file is not a plugin",
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/plugin/UnknownDependencyException.html\" title\u003d\"class in org.bukkit.plugin\"\u003eUnknownDependencyException\u003c/a\u003e\u003c/code\u003e - If a required dependency could not be found"
        ],
        "return": [
          "Plugin that was contained in the specified file, or null if unsuccessful"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.plugin.PluginDescriptionFile",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPluginDescription",
      "comment": "Loads a PluginDescriptionFile from the specified file",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - File to attempt to load from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/plugin/InvalidDescriptionException.html\" title\u003d\"class in org.bukkit.plugin\"\u003eInvalidDescriptionException\u003c/a\u003e\u003c/code\u003e - If the plugin description file could not be created"
        ],
        "return": [
          "A new PluginDescriptionFile loaded from the plugin.yml in the specified file"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.regex.Pattern",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPluginFileFilters",
      "comment": "Returns a list of all filename filters expected by this PluginLoader",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The filters"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map",
        "parameters": [
          {
            "name": "java.lang.Class",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "org.bukkit.event.Event",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "org.bukkit.plugin.RegisteredListener",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "createRegisteredListeners",
      "comment": "Creates and returns registered listeners for the event classes used in this listener",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003elistener\u003c/code\u003e - The object that will handle the eventual call back",
          "\u003ccode\u003eplugin\u003c/code\u003e - The plugin to use when creating registered listeners"
        ],
        "return": [
          "The registered listeners."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "enablePlugin",
      "comment": "Enables the specified plugin Attempting to enable a plugin that is already enabled will have no effect",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eplugin\u003c/code\u003e - Plugin to enable"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "disablePlugin",
      "comment": "Disables the specified plugin Attempting to disable a plugin that is not enabled will have no effect",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eplugin\u003c/code\u003e - Plugin to disable"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.plugin.PluginLoader",
  "comment": "Represents a plugin loader, which handles direct access to specific types of plugins",
  "tagMap": {}
}