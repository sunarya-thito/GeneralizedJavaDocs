{
  "packageName": "org.bukkit.plugin",
  "simpleName": "TimedRegisteredListener",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "org.bukkit.plugin.RegisteredListener",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "callEvent",
      "comment": "Description copied from class: RegisteredListener",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/plugin/RegisteredListener.html#callEvent(org.bukkit.event.Event)\"\u003ecallEvent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/plugin/RegisteredListener.html\" title\u003d\"class in org.bukkit.plugin\"\u003eRegisteredListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eevent\u003c/code\u003e - The event"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/event/EventException.html\" title\u003d\"class in org.bukkit.event\"\u003eEventException\u003c/a\u003e\u003c/code\u003e - If an event handler throws an exception."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "reset",
      "comment": "Resets the call count and total time for this listener",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCount",
      "comment": "Gets the total times this listener has been called",
      "annotations": [],
      "tagMap": {
        "return": [
          "Times this listener has been called"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTotalTime",
      "comment": "Gets the total time calls to this listener have taken",
      "annotations": [],
      "tagMap": {
        "return": [
          "Total time for all calls of this listener"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "org.bukkit.event.Event",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getEventClass",
      "comment": "Gets the class of the events this listener handled. If it handled multiple classes of event, the closest shared superclass will be returned, such that for any event this listener has handled, this.getEventClass().isAssignableFrom(event.getClass()) and no class this.getEventClass().isAssignableFrom(clazz) \u0026\u0026 this.getEventClass() !\u003d clazz \u0026\u0026 event.getClass().isAssignableFrom(clazz) for all handled events.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the event class handled by this RegisteredListener"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hasMultiple",
      "comment": "Gets whether this listener has handled multiple events, such that for some two events, eventA.getClass() !\u003d eventB.getClass().",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if this listener has handled multiple events"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.event.Listener",
            "type": "Class"
          },
          "name": "pluginListener",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.plugin.EventExecutor",
            "type": "Class"
          },
          "name": "eventExecutor",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.event.EventPriority",
            "type": "Class"
          },
          "name": "eventPriority",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.plugin.Plugin",
            "type": "Class"
          },
          "name": "registeredPlugin",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "listenCancelled",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "org.bukkit.plugin.TimedRegisteredListener",
  "comment": "Extends RegisteredListener to include timing information",
  "tagMap": {}
}