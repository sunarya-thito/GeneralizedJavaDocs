{
  "packageName": "org.bukkit",
  "simpleName": "WarningState",
  "moduleName": "ALL-UNNAMED",
  "type": "ENUM",
  "superClass": {
    "name": "java.lang.Enum",
    "parameters": [
      {
        "name": "org.bukkit.Warning$WarningState",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "org.bukkit.Warning$WarningState",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "values",
      "comment": "Returns an array containing the constants of this enum type, in the order they are declared.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an array containing the constants of this enum type, in the order they are declared"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Warning$WarningState",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "valueOf",
      "comment": "Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the enum constant to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this enum type has no constant with the specified name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/NullPointerException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the argument is null"
        ],
        "return": [
          "the enum constant with the specified name"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.Nullable",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "Warning",
            "type": "Class"
          },
          "name": "warning",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "printFor",
      "comment": "This method checks the provided warning should be printed for this state",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ewarning\u003c/code\u003e - The warning annotation added to a deprecated item"
        ],
        "return": [
          "\u003cul\u003e \n \u003cli\u003eON is always True \u003c/li\u003e\n \u003cli\u003eOFF is always false \u003c/li\u003e\n \u003cli\u003eDEFAULT is false if and only if annotation is not null and specifies false for \u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Warning.html#value()\"\u003e\u003ccode\u003eWarning.value()\u003c/code\u003e\u003c/a\u003e, true otherwise. \u003c/li\u003e\n\u003c/ul\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Warning$WarningState",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.Nullable",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "value",
      "comment": "This method returns the corresponding warning state for the given string value.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - The string value to check"
        ],
        "return": [
          "\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Warning.WarningState.html#DEFAULT\"\u003e\u003ccode\u003eDEFAULT\u003c/code\u003e\u003c/a\u003e if not found, or the respective WarningState"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 9,
  "name": "org.bukkit.Warning$WarningState",
  "comment": "This represents the states that server verbose for warnings may be.",
  "tagMap": {}
}