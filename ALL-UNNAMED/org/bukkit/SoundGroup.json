{
  "packageName": "org.bukkit",
  "simpleName": "SoundGroup",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getVolume",
      "comment": "Get the volume these sounds are played at. Note that this volume does not always represent the actual volume received by the client.",
      "annotations": [],
      "tagMap": {
        "return": [
          "volume"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPitch",
      "comment": "Gets the pitch these sounds are played at. Note that this pitch does not always represent the actual pitch received by the client.",
      "annotations": [],
      "tagMap": {
        "return": [
          "pitch"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Sound",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBreakSound",
      "comment": "Gets the corresponding breaking sound for this group.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the break sound"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Sound",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getStepSound",
      "comment": "Gets the corresponding step sound for this group.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the step sound"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Sound",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPlaceSound",
      "comment": "Gets the corresponding place sound for this group.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the place sound"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Sound",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getHitSound",
      "comment": "Gets the corresponding hit sound for this group.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the hit sound"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Sound",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getFallSound",
      "comment": "Gets the corresponding fall sound for this group.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the fall sound"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.SoundGroup",
  "annotations": [],
  "tagMap": {}
}