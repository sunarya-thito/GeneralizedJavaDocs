{
  "packageName": "org.bukkit.entity",
  "simpleName": "TNTPrimed",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.bukkit.entity.Explosive",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "fuseTicks"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setFuseTicks",
      "comment": "Set the number of ticks until the TNT blows up after being primed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efuseTicks\u003c/code\u003e - The fuse ticks"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getFuseTicks",
      "comment": "Retrieve the number of ticks until the explosion of this TNTPrimed entity",
      "tagMap": {
        "return": [
          "the number of ticks until this TNTPrimed explodes"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.entity.Entity",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSource",
      "comment": "Gets the source of this primed TNT. The source is the entity responsible for the creation of this primed TNT. (I.E. player ignites TNT with flint and steel.) Take note that this can be null if there is no suitable source. (created by the RegionAccessor.spawn(Location, Class) method, for example.) The source will become null if the chunk this primed TNT is in is unloaded then reloaded. The source entity may be invalid if for example it has since died or been unloaded. Callers should check Entity.isValid().",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        },
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "return": [
          "the source of this primed TNT"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            },
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "org.bukkit.entity.Entity",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setSource",
      "comment": "Sets the source of this primed TNT. The source is the entity responsible for the creation of this primed TNT. Must be instance of LivingEntity otherwise will be set to null. The parameter is typed Entity to be consistent with getSource() method.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the source of this primed TNT"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Location",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSourceLoc",
      "comment": "Gets the source block location of the TNTPrimed",
      "annotations": [
        {
          "type": "java.lang.Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "the source block location the TNTPrimed was spawned from"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.entity.TNTPrimed",
  "comment": "Represents a Primed TNT.",
  "tagMap": {}
}