{
  "packageName": "org.bukkit.entity",
  "simpleName": "Tameable",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.bukkit.entity.Animals",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isTamed",
      "comment": "Check if this is tamed If something is tamed then a player can not tame it through normal methods, even if it does not belong to anyone in particular.",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if this has been tamed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setTamed",
      "comment": "Sets if this has been tamed. Not necessary if the method setOwner has been used, as it tames automatically. If something is tamed then a player can not tame it through normal methods, even if it does not belong to anyone in particular.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etame\u003c/code\u003e - true if tame"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.UUID",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getOwnerUniqueId",
      "comment": "Gets the owners UUID",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the owners UUID, or null if not owned"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.entity.AnimalTamer",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getOwner",
      "comment": "Gets the current owning AnimalTamer",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/entity/Tameable.html#getOwnerUniqueId()\"\u003e\u003ccode\u003eRecommended to use UUID version instead of this for performance. This method will cause OfflinePlayer to be loaded from disk if the owner is not online.\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the owning AnimalTamer, or null if not owned"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setOwner",
      "comment": "Set this to be owned by given AnimalTamer. If the owner is not null, this will be tamed and will have any current path it is following removed. If the owner is set to null, this will be untamed, and the current owner removed.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etamer\u003c/code\u003e - the AnimalTamer who should own this"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.entity.Tameable",
  "tagMap": {}
}