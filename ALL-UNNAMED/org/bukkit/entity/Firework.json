{
  "packageName": "org.bukkit.entity",
  "simpleName": "Firework",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.bukkit.entity.Projectile",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "org.bukkit.inventory.meta.FireworkMeta",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getFireworkMeta",
      "comment": "Get a copy of the fireworks meta",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "A copy of the current Firework meta"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.inventory.meta.FireworkMeta",
            "type": "Class"
          },
          "field": {
            "name": "meta"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setFireworkMeta",
      "comment": "Apply the provided meta to the fireworks",
      "tagMap": {
        "param": [
          "\u003ccode\u003emeta\u003c/code\u003e - The FireworkMeta to apply"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "detonate",
      "comment": "Cause this firework to explode at earliest opportunity, as if it has no remaining fuse.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isShotAtAngle",
      "comment": "Gets if the firework was shot at an angle (i.e. from a crossbow). A firework which was not shot at an angle will fly straight upwards.",
      "tagMap": {
        "return": [
          "shot at angle status"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "shotAtAngle"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setShotAtAngle",
      "comment": "Sets if the firework was shot at an angle (i.e. from a crossbow). A firework which was not shot at an angle will fly straight upwards.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eshotAtAngle\u003c/code\u003e - the new shotAtAngle"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.UUID",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSpawningEntity",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.entity.LivingEntity",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBoostedEntity",
      "comment": "If this firework is boosting an entity, return it",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        },
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "return": [
          "The entity being boosted"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.entity.Firework",
  "tagMap": {}
}