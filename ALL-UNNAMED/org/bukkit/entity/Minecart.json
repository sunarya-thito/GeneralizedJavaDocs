{
  "packageName": "org.bukkit.entity",
  "simpleName": "Minecart",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.bukkit.entity.Vehicle",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDamage",
      "comment": "Sets a minecart\u0027s damage.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edamage\u003c/code\u003e - over 40 to \"kill\" a minecart"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDamage",
      "comment": "Gets a minecart\u0027s damage.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The damage"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxSpeed",
      "comment": "Gets the maximum speed of a minecart. The speed is unrelated to the velocity.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The max speed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setMaxSpeed",
      "comment": "Sets the maximum speed of a minecart. Must be nonnegative. Default is 0.4D.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003espeed\u003c/code\u003e - The max speed"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isSlowWhenEmpty",
      "comment": "Returns whether this minecart will slow down faster without a passenger occupying it",
      "annotations": [],
      "tagMap": {
        "return": [
          "Whether it decelerates faster"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setSlowWhenEmpty",
      "comment": "Sets whether this minecart will slow down faster without a passenger occupying it",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eslow\u003c/code\u003e - Whether it will decelerate faster"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.util.Vector",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getFlyingVelocityMod",
      "comment": "Gets the flying velocity modifier. Used for minecarts that are in mid-air. A flying minecart\u0027s velocity is multiplied by this factor each tick.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The vector factor"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setFlyingVelocityMod",
      "comment": "Sets the flying velocity modifier. Used for minecarts that are in mid-air. A flying minecart\u0027s velocity is multiplied by this factor each tick.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eflying\u003c/code\u003e - velocity modifier vector"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.util.Vector",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDerailedVelocityMod",
      "comment": "Gets the derailed velocity modifier. Used for minecarts that are on the ground, but not on rails. A derailed minecart\u0027s velocity is multiplied by this factor each tick.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "derailed visible speed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDerailedVelocityMod",
      "comment": "Sets the derailed velocity modifier. Used for minecarts that are on the ground, but not on rails. A derailed minecart\u0027s velocity is multiplied by this factor each tick.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ederailed\u003c/code\u003e - visible speed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDisplayBlock",
      "comment": "Sets the display block for this minecart. Passing a null value will set the minecart to have no display block.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ematerial\u003c/code\u003e - the material to set as display block."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.material.MaterialData",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDisplayBlock",
      "comment": "Gets the display block for this minecart. This function will return the type AIR if none is set.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the block displayed by this minecart."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDisplayBlockData",
      "comment": "Sets the display block for this minecart. Passing a null value will set the minecart to have no display block.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eblockData\u003c/code\u003e - the material to set as display block."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.block.data.BlockData",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDisplayBlockData",
      "comment": "Gets the display block for this minecart. This function will return the type AIR if none is set.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the block displayed by this minecart."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDisplayBlockOffset",
      "comment": "Sets the offset of the display block.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eoffset\u003c/code\u003e - the block offset to set for this minecart."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDisplayBlockOffset",
      "comment": "Gets the offset of the display block.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the current block offset for this minecart."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Material",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMinecartMaterial",
      "comment": "Gets the Material that represents this Minecart type.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the minecart material."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.entity.Minecart",
  "tagMap": {}
}