{
  "packageName": "org.bukkit.entity",
  "simpleName": "AreaEffectCloud",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.bukkit.entity.Entity",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDuration",
      "comment": "Gets the duration which this cloud will exist for (in ticks).",
      "tagMap": {
        "return": [
          "cloud duration"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "duration"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDuration",
      "comment": "Sets the duration which this cloud will exist for (in ticks).",
      "tagMap": {
        "param": [
          "\u003ccode\u003eduration\u003c/code\u003e - cloud duration"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getWaitTime",
      "comment": "Gets the time which an entity has to be exposed to the cloud before the effect is applied.",
      "tagMap": {
        "return": [
          "wait time"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "waitTime"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setWaitTime",
      "comment": "Sets the time which an entity has to be exposed to the cloud before the effect is applied.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ewaitTime\u003c/code\u003e - wait time"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getReapplicationDelay",
      "comment": "Gets the time that an entity will be immune from subsequent exposure.",
      "tagMap": {
        "return": [
          "reapplication delay"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "delay"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setReapplicationDelay",
      "comment": "Sets the time that an entity will be immune from subsequent exposure.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edelay\u003c/code\u003e - reapplication delay"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDurationOnUse",
      "comment": "Gets the amount that the duration of this cloud will decrease by when it applies an effect to an entity.",
      "tagMap": {
        "return": [
          "duration on use delta"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "duration"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDurationOnUse",
      "comment": "Sets the amount that the duration of this cloud will decrease by when it applies an effect to an entity.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eduration\u003c/code\u003e - duration on use delta"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getRadius",
      "comment": "Gets the initial radius of the cloud.",
      "tagMap": {
        "return": [
          "radius"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "radius"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setRadius",
      "comment": "Sets the initial radius of the cloud.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eradius\u003c/code\u003e - radius"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getRadiusOnUse",
      "comment": "Gets the amount that the radius of this cloud will decrease by when it applies an effect to an entity.",
      "tagMap": {
        "return": [
          "radius on use delta"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "radius"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setRadiusOnUse",
      "comment": "Sets the amount that the radius of this cloud will decrease by when it applies an effect to an entity.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eradius\u003c/code\u003e - radius on use delta"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getRadiusPerTick",
      "comment": "Gets the amount that the radius of this cloud will decrease by each tick.",
      "tagMap": {
        "return": [
          "radius per tick delta"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "radius"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setRadiusPerTick",
      "comment": "Gets the amount that the radius of this cloud will decrease by each tick.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eradius\u003c/code\u003e - per tick delta"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Particle",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getParticle",
      "comment": "Gets the particle which this cloud will be composed of",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "particle the set particle type"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.Particle",
            "type": "Class"
          },
          "field": {
            "name": "particle"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setParticle",
      "comment": "Sets the particle which this cloud will be composed of",
      "tagMap": {
        "param": [
          "\u003ccode\u003eparticle\u003c/code\u003e - the new particle type"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.Particle",
            "type": "Class"
          },
          "field": {
            "name": "particle"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "T",
            "type": "Class"
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setParticle",
      "comment": "Sets the particle which this cloud will be composed of",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - type of particle data (see \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/Particle.html#getDataType()\"\u003e\u003ccode\u003eParticle.getDataType()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparticle\u003c/code\u003e - the new particle type",
          "\u003ccode\u003edata\u003c/code\u003e - the data to use for the particle or null, the type of this depends on \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/Particle.html#getDataType()\"\u003e\u003ccode\u003eParticle.getDataType()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.potion.PotionData",
            "type": "Class"
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setBasePotionData",
      "comment": "Sets the underlying potion data",
      "tagMap": {
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - PotionData to set the base potion state to"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.potion.PotionData",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBasePotionData",
      "comment": "Returns the potion data about the base potion",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "a PotionData object"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasCustomEffects",
      "comment": "Checks for the presence of custom potion effects.",
      "tagMap": {
        "return": [
          "true if custom potion effects are applied"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "org.bukkit.potion.PotionEffect",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCustomEffects",
      "comment": "Gets an immutable list containing all custom potion effects applied to this cloud. Plugins should check that hasCustomEffects() returns true before calling this method.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "the immutable list of custom potion effects"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.potion.PotionEffect",
            "type": "Class"
          },
          "field": {
            "name": "effect"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "overwrite"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addCustomEffect",
      "comment": "Adds a custom potion effect to this cloud.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eeffect\u003c/code\u003e - the potion effect to add",
          "\u003ccode\u003eoverwrite\u003c/code\u003e - true if any existing effect of the same type should be overwritten"
        ],
        "return": [
          "true if the effect was added as a result of this call"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.potion.PotionEffectType",
            "type": "Class"
          },
          "field": {
            "name": "type"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeCustomEffect",
      "comment": "Removes a custom potion effect from this cloud.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the potion effect type to remove"
        ],
        "return": [
          "true if the an effect was removed as a result of this call"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            },
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "org.bukkit.potion.PotionEffectType",
            "type": "Class"
          },
          "field": {
            "name": "type"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasCustomEffect",
      "comment": "Checks for a specific custom potion effect type on this cloud.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the potion effect type to check for"
        ],
        "return": [
          "true if the potion has this effect"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clearCustomEffects",
      "comment": "Removes all custom potion effects from this cloud.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.Color",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getColor",
      "comment": "Gets the color of this cloud. Will be applied as a tint to its particles.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "cloud color"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.Color",
            "type": "Class"
          },
          "field": {
            "name": "color"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setColor",
      "comment": "Sets the color of this cloud. Will be applied as a tint to its particles.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecolor\u003c/code\u003e - cloud color"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.projectiles.ProjectileSource",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSource",
      "comment": "Retrieve the original source of this cloud.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        },
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "return": [
          "the \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/projectiles/ProjectileSource.html\" title\u003d\"interface in org.bukkit.projectiles\"\u003e\u003ccode\u003eProjectileSource\u003c/code\u003e\u003c/a\u003e that threw the LingeringPotion"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            },
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "org.bukkit.projectiles.ProjectileSource",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setSource",
      "comment": "Set the original source of this cloud.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/projectiles/ProjectileSource.html\" title\u003d\"interface in org.bukkit.projectiles\"\u003e\u003ccode\u003eProjectileSource\u003c/code\u003e\u003c/a\u003e that threw the LingeringPotion"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.entity.AreaEffectCloud",
  "comment": "Represents an area effect cloud which will imbue a potion effect onto entities which enter it.",
  "tagMap": {}
}