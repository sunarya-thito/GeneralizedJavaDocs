{
  "packageName": "org.bukkit.entity",
  "simpleName": "Mob",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "interfaces": [
    {
      "name": "org.bukkit.entity.LivingEntity",
      "type": "Class"
    },
    {
      "name": "org.bukkit.loot.Lootable",
      "type": "Class"
    }
  ],
  "members": [
    {
      "returnType": {
        "name": "com.destroystokyo.paper.entity.Pathfinder",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPathfinder",
      "comment": "Enables access to control the pathing of an Entity",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "Pathfinding Manager for this entity"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isInDaylight",
      "comment": "Check if this mob is exposed to daylight",
      "tagMap": {
        "return": [
          "True if mob is exposed to daylight"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.Location",
            "type": "Class"
          },
          "field": {
            "name": "location"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "lookAt",
      "comment": "Instruct this Mob to look at a specific Location Useful when implementing custom mob goals",
      "tagMap": {
        "param": [
          "\u003ccode\u003elocation\u003c/code\u003e - location to look at"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.Location",
            "type": "Class"
          },
          "field": {
            "name": "location"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "headRotationSpeed"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "maxHeadPitch"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "lookAt",
      "comment": "Instruct this Mob to look at a specific Location Useful when implementing custom mob goals",
      "tagMap": {
        "param": [
          "\u003ccode\u003elocation\u003c/code\u003e - location to look at",
          "\u003ccode\u003eheadRotationSpeed\u003c/code\u003e - head rotation speed",
          "\u003ccode\u003emaxHeadPitch\u003c/code\u003e - max head pitch rotation"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.entity.Entity",
            "type": "Class"
          },
          "field": {
            "name": "entity"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "lookAt",
      "comment": "Instruct this Mob to look at a specific Entity If a LivingEntity, look at eye location Useful when implementing custom mob goals",
      "tagMap": {
        "param": [
          "\u003ccode\u003eentity\u003c/code\u003e - entity to look at"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.entity.Entity",
            "type": "Class"
          },
          "field": {
            "name": "entity"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "headRotationSpeed"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "maxHeadPitch"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "lookAt",
      "comment": "Instruct this Mob to look at a specific Entity If a LivingEntity, look at eye location Useful when implementing custom mob goals",
      "tagMap": {
        "param": [
          "\u003ccode\u003eentity\u003c/code\u003e - entity to look at",
          "\u003ccode\u003eheadRotationSpeed\u003c/code\u003e - head rotation speed",
          "\u003ccode\u003emaxHeadPitch\u003c/code\u003e - max head pitch rotation"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "z"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "lookAt",
      "comment": "Instruct this Mob to look at a specific position Useful when implementing custom mob goals",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - x coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - y coordinate",
          "\u003ccode\u003ez\u003c/code\u003e - z coordinate"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "z"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "headRotationSpeed"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "maxHeadPitch"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "lookAt",
      "comment": "Instruct this Mob to look at a specific position Useful when implementing custom mob goals",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - x coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - y coordinate",
          "\u003ccode\u003ez\u003c/code\u003e - z coordinate",
          "\u003ccode\u003eheadRotationSpeed\u003c/code\u003e - head rotation speed",
          "\u003ccode\u003emaxHeadPitch\u003c/code\u003e - max head pitch rotation"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getHeadRotationSpeed",
      "comment": "Gets the head rotation speed",
      "tagMap": {
        "return": [
          "the head rotation speed"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxHeadPitch",
      "comment": "Gets the max head pitch rotation",
      "tagMap": {
        "return": [
          "the max head pitch rotation"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            },
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "org.bukkit.entity.LivingEntity",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setTarget",
      "comment": "Instructs this Mob to set the specified LivingEntity as its target. Hostile creatures may attack their target, and friendly creatures may follow their target.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - New LivingEntity to target, or null to clear the target"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.entity.LivingEntity",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTarget",
      "comment": "Gets the current target of this Mob",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        },
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "return": [
          "Current target of this creature, or null if none exists"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "aware"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setAware",
      "comment": "Sets whether this mob is aware of its surroundings. Unaware mobs will still move if pushed, attacked, etc. but will not move or perform any actions on their own. Unaware mobs may also have other unspecified behaviours disabled, such as drowning.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eaware\u003c/code\u003e - whether the mob is aware"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isAware",
      "comment": "Gets whether this mob is aware of its surroundings. Unaware mobs will still move if pushed, attacked, etc. but will not move or perform any actions on their own. Unaware mobs may also have other unspecified behaviours disabled, such as drowning.",
      "tagMap": {
        "return": [
          "whether the mob is aware"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.entity.Mob",
  "comment": "Represents a Mob. Mobs are living entities with simple AI.",
  "tagMap": {}
}