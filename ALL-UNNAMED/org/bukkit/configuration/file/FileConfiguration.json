{
  "packageName": "org.bukkit.configuration.file",
  "simpleName": "FileConfiguration",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "org.bukkit.configuration.MemoryConfiguration",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "field": {
            "name": "file"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "save",
      "comment": "Saves this FileConfiguration to the specified location. If the file does not exist, it will be created. If already exists, it will be overwritten. If it cannot be overwritten or created, an exception will be thrown. This method will save using the system default encoding, or possibly using UTF8.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - File to save to."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\" title\u003d\"class or interface in java.io\" class\u003d\"external-link\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - Thrown when the given file cannot be written to for any reason.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - Thrown when file is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "file"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "save",
      "comment": "Saves this FileConfiguration to the specified location. If the file does not exist, it will be created. If already exists, it will be overwritten. If it cannot be overwritten or created, an exception will be thrown. This method will save using the system default encoding, or possibly using UTF8.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - File to save to."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\" title\u003d\"class or interface in java.io\" class\u003d\"external-link\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - Thrown when the given file cannot be written to for any reason.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - Thrown when file is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "saveToString",
      "comment": "Saves this FileConfiguration to a string, and returns it.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "String containing this configuration."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.FileNotFoundException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        },
        {
          "name": "org.bukkit.configuration.InvalidConfigurationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "field": {
            "name": "file"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "load",
      "comment": "Loads this FileConfiguration from the specified location. All the values contained within this configuration will be removed, leaving only settings and defaults, and the new values will be loaded from the given file. If the file cannot be loaded for any reason, an exception will be thrown.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - File to load from."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/io/FileNotFoundException.html\" title\u003d\"class or interface in java.io\" class\u003d\"external-link\"\u003eFileNotFoundException\u003c/a\u003e\u003c/code\u003e - Thrown when the given file cannot be opened.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\" title\u003d\"class or interface in java.io\" class\u003d\"external-link\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - Thrown when the given file cannot be read.",
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/configuration/InvalidConfigurationException.html\" title\u003d\"class in org.bukkit.configuration\"\u003eInvalidConfigurationException\u003c/a\u003e\u003c/code\u003e - Thrown when the given file is not a valid Configuration.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - Thrown when file is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        },
        {
          "name": "org.bukkit.configuration.InvalidConfigurationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.io.Reader",
            "type": "Class"
          },
          "field": {
            "name": "reader"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "load",
      "comment": "Loads this FileConfiguration from the specified reader. All the values contained within this configuration will be removed, leaving only settings and defaults, and the new values will be loaded from the given stream.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ereader\u003c/code\u003e - the reader to load from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\" title\u003d\"class or interface in java.io\" class\u003d\"external-link\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - thrown when underlying reader throws an IOException",
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/configuration/InvalidConfigurationException.html\" title\u003d\"class in org.bukkit.configuration\"\u003eInvalidConfigurationException\u003c/a\u003e\u003c/code\u003e - thrown when the reader does not represent a valid Configuration",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - thrown when reader is null"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.FileNotFoundException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        },
        {
          "name": "org.bukkit.configuration.InvalidConfigurationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "file"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "load",
      "comment": "Loads this FileConfiguration from the specified location. All the values contained within this configuration will be removed, leaving only settings and defaults, and the new values will be loaded from the given file. If the file cannot be loaded for any reason, an exception will be thrown.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - File to load from."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/io/FileNotFoundException.html\" title\u003d\"class or interface in java.io\" class\u003d\"external-link\"\u003eFileNotFoundException\u003c/a\u003e\u003c/code\u003e - Thrown when the given file cannot be opened.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\" title\u003d\"class or interface in java.io\" class\u003d\"external-link\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - Thrown when the given file cannot be read.",
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/configuration/InvalidConfigurationException.html\" title\u003d\"class in org.bukkit.configuration\"\u003eInvalidConfigurationException\u003c/a\u003e\u003c/code\u003e - Thrown when the given file is not a valid Configuration.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - Thrown when file is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.bukkit.configuration.InvalidConfigurationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "contents"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "loadFromString",
      "comment": "Loads this FileConfiguration from the specified string, as opposed to from file. All the values contained within this configuration will be removed, leaving only settings and defaults, and the new values will be loaded from the given string. If the string is invalid in any way, an exception will be thrown.",
      "tagMap": {
        "param": [
          "\u003ccode\u003econtents\u003c/code\u003e - Contents of a Configuration to load."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/configuration/InvalidConfigurationException.html\" title\u003d\"class in org.bukkit.configuration\"\u003eInvalidConfigurationException\u003c/a\u003e\u003c/code\u003e - Thrown if the specified string is invalid.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - Thrown if contents is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1028,
      "name": "buildHeader",
      "comment": "Compiles the header for this FileConfiguration and returns the result. This will use the header from options() -\u003e FileConfigurationOptions.header(), respecting the rules of FileConfigurationOptions.copyHeader() if set.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "Compiled header"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.configuration.file.FileConfigurationOptions",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "options",
      "comment": "Description copied from interface: Configuration",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/configuration/MemoryConfiguration.html#options()\"\u003eoptions\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/configuration/MemoryConfiguration.html\" title\u003d\"class in org.bukkit.configuration\"\u003eMemoryConfiguration\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/configuration/Configuration.html#options()\"\u003eoptions\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/configuration/Configuration.html\" title\u003d\"interface in org.bukkit.configuration\"\u003eConfiguration\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "Options for this configuration"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an empty FileConfiguration with no default values.",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "org.bukkit.configuration.Configuration",
            "type": "Class"
          },
          "field": {
            "name": "defaults"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an empty FileConfiguration using the specified Configuration as a source for all default values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edefaults\u003c/code\u003e - Default value provider"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "org.bukkit.configuration.file.FileConfiguration",
  "comment": "This is a base class for all File based implementations of \n\u003ca href\u003d\"../Configuration.html\" title\u003d\"interface in org.bukkit.configuration\"\u003e\u003ccode\u003eConfiguration\u003c/code\u003e\u003c/a\u003e",
  "tagMap": {}
}