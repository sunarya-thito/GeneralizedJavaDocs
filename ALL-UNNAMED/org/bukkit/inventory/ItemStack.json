{
  "packageName": "org.bukkit.inventory",
  "simpleName": "ItemStack",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "org.bukkit.Material",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getType",
      "comment": "Gets the type of this item",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "Type of the items in this stack"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setType",
      "comment": "Sets the type of this item Note that in doing so you will reset the MaterialData for this stack. IMPORTANT: An ItemStack is only designed to contain items. Do not use this class to encapsulate Materials for which Material.isItem() returns false.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - New type to set the items in this stack to"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAmount",
      "comment": "Gets the amount of items in this stack",
      "annotations": [],
      "tagMap": {
        "return": [
          "Amount of items in this stack"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setAmount",
      "comment": "Sets the amount of items in this stack",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eamount\u003c/code\u003e - New amount of items in this stack"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.material.MaterialData",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getData",
      "comment": "Gets the MaterialData for this stack of items",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "MaterialData for this item"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setData",
      "comment": "Sets the MaterialData for this stack of items",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - New MaterialData for this item"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDurability",
      "comment": "Sets the durability of this item",
      "annotations": [
        {
          "type": {
            "name": "java.lang.Deprecated",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003edurability\u003c/code\u003e - Durability of this item"
        ]
      }
    },
    {
      "returnType": {
        "name": "short",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDurability",
      "comment": "Gets the durability of this item",
      "annotations": [
        {
          "type": {
            "name": "java.lang.Deprecated",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "Durability of this item"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMaxStackSize",
      "comment": "Get the maximum stacksize for the material hold in this ItemStack. (Returns -1 if it has no idea)",
      "annotations": [],
      "tagMap": {
        "return": [
          "The maximum you can stack this material to."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isSimilar",
      "comment": "This method is the same as equals, but does not consider stack size (amount).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003estack\u003c/code\u003e - the item stack to compare to"
        ],
        "return": [
          "true if the two stacks are equal, ignoring the amount"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#clone()\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "containsEnchantment",
      "comment": "Checks if this ItemStack contains the given Enchantment",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eench\u003c/code\u003e - Enchantment to test"
        ],
        "return": [
          "True if this has the given enchantment"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getEnchantmentLevel",
      "comment": "Gets the level of the specified enchantment on this item stack",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eench\u003c/code\u003e - Enchantment to check"
        ],
        "return": [
          "Level of the enchantment, or 0"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map",
        "parameters": [
          {
            "name": "org.bukkit.enchantments.Enchantment",
            "type": "Class"
          },
          {
            "name": "java.lang.Integer",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getEnchantments",
      "comment": "Gets a map containing all enchantments and their levels on this item.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "Map of enchantments."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addEnchantments",
      "comment": "Adds the specified enchantments to this item stack. This method is the same as calling addEnchantment(org.bukkit.enchantments.Enchantment, int) for each element of the map.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eenchantments\u003c/code\u003e - Enchantments to add"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified enchantments is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if any specific enchantment or level is null. \n\u003cb\u003eWarning\u003c/b\u003e: Some enchantments may be added before this exception is thrown."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addEnchantment",
      "comment": "Adds the specified Enchantment to this item stack. If this item stack already contained the given enchantment (at any level), it will be replaced.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eench\u003c/code\u003e - Enchantment to add",
          "\u003ccode\u003elevel\u003c/code\u003e - Level of the enchantment"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if enchantment null, or enchantment is not applicable"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addUnsafeEnchantments",
      "comment": "Adds the specified enchantments to this item stack in an unsafe manner. This method is the same as calling addUnsafeEnchantment(org.bukkit.enchantments.Enchantment, int) for each element of the map.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eenchantments\u003c/code\u003e - Enchantments to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addUnsafeEnchantment",
      "comment": "Adds the specified Enchantment to this item stack. If this item stack already contained the given enchantment (at any level), it will be replaced. This method is unsafe and will ignore level restrictions or item type. Use at your own discretion.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eench\u003c/code\u003e - Enchantment to add",
          "\u003ccode\u003elevel\u003c/code\u003e - Level of the enchantment"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeEnchantment",
      "comment": "Removes the specified Enchantment if it exists on this ItemStack",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eench\u003c/code\u003e - Enchantment to remove"
        ],
        "return": [
          "Previous level, or 0"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          },
          {
            "name": "java.lang.Object",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "serialize",
      "comment": "Description copied from interface: ConfigurationSerializable",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/configuration/serialization/ConfigurationSerializable.html#serialize()\"\u003eserialize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/configuration/serialization/ConfigurationSerializable.html\" title\u003d\"interface in org.bukkit.configuration.serialization\"\u003eConfigurationSerializable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "Map containing the current state of this class"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "deserialize",
      "comment": "Required method for configuration serialization",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/configuration/serialization/ConfigurationSerializable.html\" title\u003d\"interface in org.bukkit.configuration.serialization\"\u003e\u003ccode\u003eConfigurationSerializable\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eargs\u003c/code\u003e - map to deserialize"
        ],
        "return": [
          "deserialized item stack"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "editMeta",
      "comment": "Edits the ItemMeta of this stack. The Consumer must only interact with this stack\u0027s ItemMeta through the provided ItemMeta instance. Calling this method or any other meta-related method of the ItemStack class (such as getItemMeta(), addItemFlags(ItemFlag...), lore(), etc.) from inside the consumer is disallowed and will produce undefined results or exceptions.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003econsumer\u003c/code\u003e - the meta consumer"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the edit was successful, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.meta.ItemMeta",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getItemMeta",
      "comment": "Get a copy of this ItemStack\u0027s ItemMeta.",
      "annotations": [],
      "tagMap": {
        "return": [
          "a copy of the current ItemStack\u0027s ItemData"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hasItemMeta",
      "comment": "Checks to see if any meta data has been defined.",
      "annotations": [],
      "tagMap": {
        "return": [
          "Returns true if some meta data has been set for this item"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setItemMeta",
      "comment": "Set the ItemMeta of this ItemStack.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eitemMeta\u003c/code\u003e - new ItemMeta, or null to indicate meta data be cleared."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the item meta was not created by the \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/inventory/ItemFactory.html\" title\u003d\"interface in org.bukkit.inventory\"\u003e\u003ccode\u003eItemFactory\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "True if successfully applied ItemMeta, see \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/inventory/ItemFactory.html#isApplicable(org.bukkit.inventory.meta.ItemMeta,org.bukkit.inventory.ItemStack)\"\u003e\u003ccode\u003eItemFactory.isApplicable(ItemMeta, ItemStack)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "net.kyori.adventure.text.event.HoverEvent",
        "parameters": [
          {
            "name": "net.kyori.adventure.text.event.HoverEvent$ShowItem",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "asHoverEvent",
      "comment": "Description copied from interface: net.kyori.adventure.text.event.HoverEventSource",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://jd.adventure.kyori.net/api/4.8.1/net/kyori/adventure/text/event/HoverEventSource.html#asHoverEvent(java.util.function.UnaryOperator)\" title\u003d\"class or interface in net.kyori.adventure.text.event\" class\u003d\"external-link\"\u003easHoverEvent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://jd.adventure.kyori.net/api/4.8.1/net/kyori/adventure/text/event/HoverEventSource.html\" title\u003d\"class or interface in net.kyori.adventure.text.event\" class\u003d\"external-link\"\u003eHoverEventSource\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://jd.adventure.kyori.net/api/4.8.1/net/kyori/adventure/text/event/HoverEvent.ShowItem.html\" title\u003d\"class or interface in net.kyori.adventure.text.event\" class\u003d\"external-link\"\u003eHoverEvent.ShowItem\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eop\u003c/code\u003e - transformation on value"
        ],
        "return": [
          "a hover event"
        ]
      }
    },
    {
      "returnType": {
        "name": "net.kyori.adventure.text.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "displayName",
      "comment": "Get the formatted display name of the ItemStack.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "display name of the \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/inventory/ItemStack.html\" title\u003d\"class in org.bukkit.inventory\"\u003e\u003ccode\u003eItemStack\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "ensureServerConversions",
      "comment": "Minecraft updates are converting simple item stacks into more complex NBT oriented Item Stacks. Use this method to to ensure any desired data conversions are processed. The input itemstack will not be the same as the returned itemstack.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "A potentially Data Converted ItemStack"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "deserializeBytes",
      "comment": "Deserializes this itemstack from raw NBT bytes. NBT is safer for data migrations as it will use the built in data converter instead of bukkits dangerous serialization system. This expects that the DataVersion was stored on the root of the Compound, as saved from the serializeAsBytes() API returned.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ebytes\u003c/code\u003e - bytes representing an item in NBT"
        ],
        "return": [
          "ItemStack migrated to this version of Minecraft if needed."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "serializeAsBytes",
      "comment": "Serializes this itemstack to raw bytes in NBT. NBT is safer for data migrations as it will use the built in data converter instead of bukkits dangerous serialization system.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "bytes representing this item in NBT."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getI18NDisplayName",
      "comment": "Gets the Display name as seen in the Client. Currently the server only supports the English language. To override this, You must replace the language file embedded in the server jar.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "Display name of Item"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMaxItemUseDuration",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "asOne",
      "comment": "Clones the itemstack and returns it a single quantity.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The new itemstack with 1 quantity"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "asQuantity",
      "comment": "Clones the itemstack and returns it as the specified quantity",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eqty\u003c/code\u003e - The quantity of the cloned item"
        ],
        "return": [
          "The new itemstack with specified quantity"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds 1 to this itemstack. Will not go over the items max stack size.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The same item (not a clone)"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds quantity to this itemstack. Will not go over the items max stack size.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eqty\u003c/code\u003e - The amount to add"
        ],
        "return": [
          "The same item (not a clone)"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "subtract",
      "comment": "Subtracts 1 to this itemstack. Going to 0 or less will invalidate the item.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The same item (not a clone)"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "subtract",
      "comment": "Subtracts quantity to this itemstack. Going to 0 or less will invalidate the item.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eqty\u003c/code\u003e - The amount to add"
        ],
        "return": [
          "The same item (not a clone)"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLore",
      "comment": "If the item has lore, returns it, else it will return null",
      "annotations": [
        {
          "type": {
            "name": "java.lang.Deprecated",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The lore, or null"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "net.kyori.adventure.text.Component",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "lore",
      "comment": "If the item has lore, returns it, else it will return null",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The lore, or null"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLore",
      "comment": "Sets the lore for this item. Removes lore when given null.",
      "annotations": [
        {
          "type": {
            "name": "java.lang.Deprecated",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003elore\u003c/code\u003e - the lore that will be set"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "lore",
      "comment": "Sets the lore for this item. Removes lore when given null.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elore\u003c/code\u003e - the lore that will be set"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addItemFlags",
      "comment": "Set itemflags which should be ignored when rendering a ItemStack in the Client. This Method does silently ignore double set itemFlags.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eitemFlags\u003c/code\u003e - The hideflags which shouldn\u0027t be rendered"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeItemFlags",
      "comment": "Remove specific set of itemFlags. This tells the Client it should render it again. This Method does silently ignore double removed itemFlags.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eitemFlags\u003c/code\u003e - Hideflags which should be removed"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "org.bukkit.inventory.ItemFlag",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getItemFlags",
      "comment": "Get current set itemFlags. The collection returned is unmodifiable.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "A set of all itemFlags set"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hasItemFlag",
      "comment": "Check if the specified flag is present on this item.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eflag\u003c/code\u003e - the flag to check"
        ],
        "return": [
          "if it is present"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTranslationKey",
      "comment": "Gets the translation key for this itemstack. This is not the same as getting the translation key for the material of this itemstack.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "java.lang.Deprecated",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the translation key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "translationKey",
      "comment": "Gets the translation key. This is not the same as getting the translation key for the material of this itemstack.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://jd.adventure.kyori.net/api/4.8.1/net/kyori/adventure/translation/Translatable.html#translationKey()\" title\u003d\"class or interface in net.kyori.adventure.translation\" class\u003d\"external-link\"\u003etranslationKey\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://jd.adventure.kyori.net/api/4.8.1/net/kyori/adventure/translation/Translatable.html\" title\u003d\"class or interface in net.kyori.adventure.translation\" class\u003d\"external-link\"\u003eTranslatable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the translation key"
        ]
      }
    },
    {
      "returnType": {
        "name": "io.papermc.paper.inventory.ItemRarity",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRarity",
      "comment": "Gets the item rarity of the itemstack. The rarity can change based on enchantements.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the itemstack rarity"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isRepairableBy",
      "comment": "Checks if an itemstack can repair this itemstack. Returns false if this or repairMaterial\u0027s type is not an item (Material.isItem()).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erepairMaterial\u003c/code\u003e - the repair material"
        ],
        "return": [
          "true if it is repairable by, false if not"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "canRepair",
      "comment": "Checks if this itemstack can repair another. Returns false if this or toBeRepaired\u0027s type is not an item (Material.isItem()).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etoBeRepaired\u003c/code\u003e - the itemstack to be repaired"
        ],
        "return": [
          "true if it can repair, false if not"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            },
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.Material",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Defaults stack size to 1, with no extra data. IMPORTANT: An ItemStack is only designed to contain items. Do not use this class to encapsulate Materials for which Material.isItem() returns false.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - item material"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            },
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.Material",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "amount",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "An item stack with no extra data. IMPORTANT: An ItemStack is only designed to contain items. Do not use this class to encapsulate Materials for which Material.isItem() returns false.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - item material",
          "\u003ccode\u003eamount\u003c/code\u003e - stack size"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            },
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.Material",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "amount",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "short",
            "type": "Class"
          },
          "name": "damage",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "An item stack with the specified damage / durability",
      "annotations": [
        {
          "type": {
            "name": "java.lang.Deprecated",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - item material",
          "\u003ccode\u003eamount\u003c/code\u003e - stack size",
          "\u003ccode\u003edamage\u003c/code\u003e - durability / damage"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            },
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.Material",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "amount",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "short",
            "type": "Class"
          },
          "name": "damage",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.Nullable",
                "type": "Class"
              }
            },
            {
              "type": {
                "name": "org.jetbrains.annotations.Nullable",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "java.lang.Byte",
            "type": "Class"
          },
          "name": "data",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "annotations": [
        {
          "type": {
            "name": "java.lang.Deprecated",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the type",
          "\u003ccode\u003eamount\u003c/code\u003e - the amount in the stack",
          "\u003ccode\u003edamage\u003c/code\u003e - the damage value of the item",
          "\u003ccode\u003edata\u003c/code\u003e - the data value or null"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            },
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.inventory.ItemStack",
            "type": "Class"
          },
          "name": "stack",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new item stack derived from the specified stack",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003estack\u003c/code\u003e - the stack to copy"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified stack is null or returns an item meta not created by the item factory"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "org.bukkit.inventory.ItemStack",
  "tagMap": {}
}