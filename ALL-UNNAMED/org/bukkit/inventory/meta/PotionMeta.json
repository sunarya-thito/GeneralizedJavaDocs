{
  "packageName": "org.bukkit.inventory.meta",
  "simpleName": "PotionMeta",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.bukkit.inventory.meta.ItemMeta",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setBasePotionData",
      "comment": "Sets the underlying potion data",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - PotionData to set the base potion state to"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.potion.PotionData",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBasePotionData",
      "comment": "Returns the potion data about the base potion",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "a PotionData object"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasCustomEffects",
      "comment": "Checks for the presence of custom potion effects.",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if custom potion effects are applied"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "org.bukkit.potion.PotionEffect",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCustomEffects",
      "comment": "Gets an immutable list containing all custom potion effects applied to this potion. Plugins should check that hasCustomEffects() returns true before calling this method.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the immutable list of custom potion effects"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addCustomEffect",
      "comment": "Adds a custom potion effect to this potion.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eeffect\u003c/code\u003e - the potion effect to add",
          "\u003ccode\u003eoverwrite\u003c/code\u003e - true if any existing effect of the same type should be overwritten"
        ],
        "return": [
          "true if the potion meta changed as a result of this call"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeCustomEffect",
      "comment": "Removes a custom potion effect from this potion.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the potion effect type to remove"
        ],
        "return": [
          "true if the potion meta changed as a result of this call"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasCustomEffect",
      "comment": "Checks for a specific custom potion effect type on this potion.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the potion effect type to check for"
        ],
        "return": [
          "true if the potion has this effect"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setMainEffect",
      "comment": "Moves a potion effect to the top of the potion effect list. This causes the client to display the potion effect in the potion\u0027s name.",
      "annotations": [
        {
          "type": {
            "name": "java.lang.Deprecated",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the potion effect type to move"
        ],
        "return": [
          "true if the potion meta changed as a result of this call"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clearCustomEffects",
      "comment": "Removes all custom potion effects from this potion.",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if the potion meta changed as a result of this call"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasColor",
      "comment": "Checks for existence of a potion color.",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if this has a custom potion color"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Color",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getColor",
      "comment": "Gets the potion color that is set. A custom potion color will alter the display of the potion in an inventory slot. Plugins should check that hasColor() returns true before calling this method.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the potion color that is set"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setColor",
      "comment": "Sets the potion color. A custom potion color will alter the display of the potion in an inventory slot.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecolor\u003c/code\u003e - the color to set"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.meta.PotionMeta",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clone",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/inventory/meta/ItemMeta.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/inventory/meta/ItemMeta.html\" title\u003d\"interface in org.bukkit.inventory.meta\"\u003eItemMeta\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.inventory.meta.PotionMeta",
  "comment": "Represents a potion or item that can have custom effects.",
  "tagMap": {}
}