{
  "packageName": "org.bukkit.inventory.meta",
  "simpleName": "Repairable",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasRepairCost",
      "comment": "Checks to see if this has a repair penalty",
      "tagMap": {
        "return": [
          "true if this has a repair penalty"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getRepairCost",
      "comment": "Gets the repair penalty",
      "tagMap": {
        "return": [
          "the repair penalty"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "cost"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setRepairCost",
      "comment": "Sets the repair penalty",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecost\u003c/code\u003e - repair penalty"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.meta.Repairable",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clone",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.inventory.meta.Repairable",
  "comment": "Represents an item that can be repaired at an anvil.",
  "tagMap": {}
}