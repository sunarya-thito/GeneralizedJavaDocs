{
  "packageName": "org.bukkit.inventory.meta",
  "simpleName": "EnchantmentStorageMeta",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.bukkit.inventory.meta.ItemMeta",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasStoredEnchants",
      "comment": "Checks for the existence of any stored enchantments.",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if an enchantment exists on this meta"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasStoredEnchant",
      "comment": "Checks for storage of the specified enchantment.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eench\u003c/code\u003e - enchantment to check"
        ],
        "return": [
          "true if this enchantment is stored in this meta"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getStoredEnchantLevel",
      "comment": "Checks for the level of the stored enchantment.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eench\u003c/code\u003e - enchantment to check"
        ],
        "return": [
          "The level that the specified stored enchantment has, or 0 if none"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map",
        "parameters": [
          {
            "name": "org.bukkit.enchantments.Enchantment",
            "type": "Class"
          },
          {
            "name": "java.lang.Integer",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getStoredEnchants",
      "comment": "Gets a copy the stored enchantments in this ItemMeta.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "An immutable copy of the stored enchantments"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addStoredEnchant",
      "comment": "Stores the specified enchantment in this item meta.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eench\u003c/code\u003e - Enchantment to store",
          "\u003ccode\u003elevel\u003c/code\u003e - Level for the enchantment",
          "\u003ccode\u003eignoreLevelRestriction\u003c/code\u003e - this indicates the enchantment should be applied, ignoring the level limit"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if enchantment is null"
        ],
        "return": [
          "true if the item meta changed as a result of this call, false otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeStoredEnchant",
      "comment": "Remove the specified stored enchantment from this item meta.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eench\u003c/code\u003e - Enchantment to remove"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if enchantment is null"
        ],
        "return": [
          "true if the item meta changed as a result of this call, false otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasConflictingStoredEnchant",
      "comment": "Checks if the specified enchantment conflicts with any enchantments in this ItemMeta.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eench\u003c/code\u003e - enchantment to test"
        ],
        "return": [
          "true if the enchantment conflicts, false otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.meta.EnchantmentStorageMeta",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clone",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/inventory/meta/ItemMeta.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/inventory/meta/ItemMeta.html\" title\u003d\"interface in org.bukkit.inventory.meta\"\u003eItemMeta\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.inventory.meta.EnchantmentStorageMeta",
  "tagMap": {}
}