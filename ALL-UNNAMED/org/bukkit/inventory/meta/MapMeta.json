{
  "packageName": "org.bukkit.inventory.meta",
  "simpleName": "MapMeta",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.bukkit.inventory.meta.ItemMeta",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasMapId",
      "comment": "Checks for existence of a map ID number.",
      "annotations": [
        {
          "type": "java.lang.Deprecated"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/inventory/meta/MapMeta.html#hasMapView()\"\u003e\u003ccode\u003ehasMapView()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "true if this has a map ID number."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMapId",
      "comment": "Gets the map ID that is set. This is used to determine what map is displayed. Plugins should check that hasMapId() returns true before calling this method.",
      "annotations": [
        {
          "type": "java.lang.Deprecated"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/inventory/meta/MapMeta.html#getMapView()\"\u003e\u003ccode\u003egetMapView()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the map ID that is set"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setMapId",
      "comment": "Sets the map ID. This is used to determine what map is displayed.",
      "annotations": [
        {
          "type": "java.lang.Deprecated"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/inventory/meta/MapMeta.html#setMapView(org.bukkit.map.MapView)\"\u003e\u003ccode\u003esetMapView(org.bukkit.map.MapView)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eid\u003c/code\u003e - the map id to set"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasMapView",
      "comment": "Checks for existence of an associated map.",
      "tagMap": {
        "return": [
          "true if this item has an associated map"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.map.MapView",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMapView",
      "comment": "Gets the map view that is associated with this map item. Plugins should check that hasMapView() returns true before calling this method.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "return": [
          "the map view, or null if the item hasMapView(), but this map does not exist on the server"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.map.MapView",
            "type": "Class"
          },
          "field": {
            "name": "map"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setMapView",
      "comment": "Sets the associated map. This is used to determine what map is displayed. The implementation may allow null to clear the associated map, but this is not required and is liable to generate a new (undefined) map when the item is first used.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emap\u003c/code\u003e - the map to set"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isScaling",
      "comment": "Checks to see if this map is scaling.",
      "tagMap": {
        "return": [
          "true if this map is scaling"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setScaling",
      "comment": "Sets if this map is scaling or not.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - true to scale"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasLocationName",
      "comment": "Checks for existence of a location name.",
      "tagMap": {
        "return": [
          "true if this has a location name"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getLocationName",
      "comment": "Gets the location name that is set. Plugins should check that hasLocationName() returns true before calling this method.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "return": [
          "the location name that is set"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setLocationName",
      "comment": "Sets the location name. A custom map color will alter the display of the map in an inventory slot.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name to set"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasColor",
      "comment": "Checks for existence of a map color.",
      "tagMap": {
        "return": [
          "true if this has a custom map color"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Color",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getColor",
      "comment": "Gets the map color that is set. A custom map color will alter the display of the map in an inventory slot. Plugins should check that hasColor() returns true before calling this method.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "return": [
          "the map color that is set"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "org.bukkit.Color",
            "type": "Class"
          },
          "field": {
            "name": "color"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setColor",
      "comment": "Sets the map color. A custom map color will alter the display of the map in an inventory slot.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecolor\u003c/code\u003e - the color to set"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.meta.MapMeta",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clone",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/inventory/meta/ItemMeta.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/inventory/meta/ItemMeta.html\" title\u003d\"interface in org.bukkit.inventory.meta\"\u003eItemMeta\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.inventory.meta.MapMeta",
  "comment": "Represents a map that can be scalable.",
  "tagMap": {}
}