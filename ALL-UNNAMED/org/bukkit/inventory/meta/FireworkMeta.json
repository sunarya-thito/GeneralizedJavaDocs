{
  "packageName": "org.bukkit.inventory.meta",
  "simpleName": "FireworkMeta",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.bukkit.inventory.meta.ItemMeta",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.FireworkEffect",
            "type": "Class"
          },
          "field": {
            "name": "effect"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addEffect",
      "comment": "Add another effect to this firework.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eeffect\u003c/code\u003e - The firework effect to add"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If effect is null"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.FireworkEffect",
            "type": "Class"
          },
          "field": {
            "name": "effects"
          },
          "varArgs": {}
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addEffects",
      "comment": "Add several effects to this firework.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eeffects\u003c/code\u003e - The firework effects to add"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If effects is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If any effect is null (may be thrown after changes have occurred)"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "name": "org.bukkit.FireworkEffect",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "effects"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addEffects",
      "comment": "Add several firework effects to this firework.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eeffects\u003c/code\u003e - An iterable object whose iterator yields the desired firework effects"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If effects is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If any effect is null (may be thrown after changes have occurred)"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "org.bukkit.FireworkEffect",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEffects",
      "comment": "Get the effects in this firework.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "An immutable list of the firework effects"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEffectsSize",
      "comment": "Get the number of effects in this firework.",
      "tagMap": {
        "return": [
          "The number of effects"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IndexOutOfBoundsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeEffect",
      "comment": "Remove an effect from this firework.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - The index of the effect to remove"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - If index \u0026lt; 0 or index \u0026gt; \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/inventory/meta/FireworkMeta.html#getEffectsSize()\"\u003e\u003ccode\u003egetEffectsSize()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clearEffects",
      "comment": "Remove all effects from this firework.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasEffects",
      "comment": "Get whether this firework has any effects.",
      "tagMap": {
        "return": [
          "true if it has effects, false if there are no effects"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPower",
      "comment": "Gets the approximate height the firework will fly.",
      "tagMap": {
        "return": [
          "approximate flight height of the firework."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "power"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setPower",
      "comment": "Sets the approximate power of the firework. Each level of power is half a second of flight time.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epower\u003c/code\u003e - the power of the firework, from 0-128"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if height\u0026lt;0 or height\u0026gt;128"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.meta.FireworkMeta",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clone",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/inventory/meta/ItemMeta.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/inventory/meta/ItemMeta.html\" title\u003d\"interface in org.bukkit.inventory.meta\"\u003eItemMeta\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.inventory.meta.FireworkMeta",
  "comment": "Represents a \n\u003ca href\u003d\"../../Material.html#FIREWORK_ROCKET\"\u003e\u003ccode\u003eMaterial.FIREWORK_ROCKET\u003c/code\u003e\u003c/a\u003e and its effects.",
  "tagMap": {}
}