{
  "packageName": "org.bukkit.inventory.meta.tags",
  "simpleName": "ItemTagType",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "org.bukkit.inventory.meta.tags.ItemTagType",
        "parameters": [
          {
            "name": "java.lang.Byte",
            "type": "Class"
          },
          {
            "name": "java.lang.Byte",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "BYTE",
      "tagMap": {}
    },
    {
      "type": {
        "name": "org.bukkit.inventory.meta.tags.ItemTagType",
        "parameters": [
          {
            "name": "java.lang.Short",
            "type": "Class"
          },
          {
            "name": "java.lang.Short",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SHORT",
      "tagMap": {}
    },
    {
      "type": {
        "name": "org.bukkit.inventory.meta.tags.ItemTagType",
        "parameters": [
          {
            "name": "java.lang.Integer",
            "type": "Class"
          },
          {
            "name": "java.lang.Integer",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "INTEGER",
      "tagMap": {}
    },
    {
      "type": {
        "name": "org.bukkit.inventory.meta.tags.ItemTagType",
        "parameters": [
          {
            "name": "java.lang.Long",
            "type": "Class"
          },
          {
            "name": "java.lang.Long",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "LONG",
      "tagMap": {}
    },
    {
      "type": {
        "name": "org.bukkit.inventory.meta.tags.ItemTagType",
        "parameters": [
          {
            "name": "java.lang.Float",
            "type": "Class"
          },
          {
            "name": "java.lang.Float",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "FLOAT",
      "tagMap": {}
    },
    {
      "type": {
        "name": "org.bukkit.inventory.meta.tags.ItemTagType",
        "parameters": [
          {
            "name": "java.lang.Double",
            "type": "Class"
          },
          {
            "name": "java.lang.Double",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "DOUBLE",
      "tagMap": {}
    },
    {
      "type": {
        "name": "org.bukkit.inventory.meta.tags.ItemTagType",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          },
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "STRING",
      "tagMap": {}
    },
    {
      "type": {
        "name": "org.bukkit.inventory.meta.tags.ItemTagType",
        "parameters": [
          {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "BYTE_ARRAY",
      "tagMap": {}
    },
    {
      "type": {
        "name": "org.bukkit.inventory.meta.tags.ItemTagType",
        "parameters": [
          {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "INTEGER_ARRAY",
      "tagMap": {}
    },
    {
      "type": {
        "name": "org.bukkit.inventory.meta.tags.ItemTagType",
        "parameters": [
          {
            "name": "long",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          {
            "name": "long",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "LONG_ARRAY",
      "tagMap": {}
    },
    {
      "type": {
        "name": "org.bukkit.inventory.meta.tags.ItemTagType",
        "parameters": [
          {
            "name": "org.bukkit.inventory.meta.tags.CustomItemTagContainer",
            "type": "Class"
          },
          {
            "name": "org.bukkit.inventory.meta.tags.CustomItemTagContainer",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TAG_CONTAINER",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "owner": "org.bukkit.inventory.meta.tags.ItemTagType",
            "name": "T",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPrimitiveType",
      "comment": "Returns the primitive data type of this tag.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "the class"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "owner": "org.bukkit.inventory.meta.tags.ItemTagType",
            "name": "Z",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getComplexType",
      "comment": "Returns the complex object type the primitive value resembles.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "the class type"
        ]
      }
    },
    {
      "returnType": {
        "owner": "org.bukkit.inventory.meta.tags.ItemTagType",
        "name": "T",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "owner": "org.bukkit.inventory.meta.tags.ItemTagType",
            "name": "Z",
            "type": "Variable"
          },
          "field": {
            "name": "complex"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.inventory.meta.tags.ItemTagAdapterContext",
            "type": "Class"
          },
          "field": {
            "name": "context"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "toPrimitive",
      "comment": "Returns the primitive data that resembles the complex object passed to this method.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecomplex\u003c/code\u003e - the complex object instance",
          "\u003ccode\u003econtext\u003c/code\u003e - the context this operation is running in"
        ],
        "return": [
          "the primitive value"
        ]
      }
    },
    {
      "returnType": {
        "owner": "org.bukkit.inventory.meta.tags.ItemTagType",
        "name": "Z",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "owner": "org.bukkit.inventory.meta.tags.ItemTagType",
            "name": "T",
            "type": "Variable"
          },
          "field": {
            "name": "primitive"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.inventory.meta.tags.ItemTagAdapterContext",
            "type": "Class"
          },
          "field": {
            "name": "context"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "fromPrimitive",
      "comment": "Creates a complex object based of the passed primitive value",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eprimitive\u003c/code\u003e - the primitive value",
          "\u003ccode\u003econtext\u003c/code\u003e - the context this operation is running in"
        ],
        "return": [
          "the complex object instance"
        ]
      }
    }
  ],
  "innerClasses": [
    "org.bukkit.inventory.meta.tags.ItemTagType$PrimitiveTagType"
  ],
  "genericParameters": [
    {
      "name": "T",
      "type": "Variable"
    },
    {
      "name": "Z",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.inventory.meta.tags.ItemTagType",
  "comment": "This class represents an enum with a generic content type. It defines the types a custom item tag can have. \n\u003cp\u003e This interface can be used to create your own custom \u003ca href\u003d\"ItemTagType.html\" title\u003d\"interface in org.bukkit.inventory.meta.tags\"\u003e\u003ccode\u003eItemTagType\u003c/code\u003e\u003c/a\u003e with different complex types. This may be useful for the likes of a UUIDItemTagType: \u003c/p\u003e\n\u003cpre\u003e \u003ccode\u003e\n public class UUIDItemTagType implements ItemTagType\u0026lt;byte[], UUID\u0026gt; {\n\n         {@literal @Override}\n         public Class\u0026lt;byte[]\u0026gt; getPrimitiveType() {\n             return byte[].class;\n         }\n\n         {@literal @Override}\n         public Class\u0026lt;UUID\u0026gt; getComplexType() {\n             return UUID.class;\n         }\n\n         {@literal @Override}\n         public byte[] toPrimitive(UUID complex, ItemTagAdapterContext context) {\n             ByteBuffer bb \u003d ByteBuffer.wrap(new byte[16]);\n             bb.putLong(complex.getMostSignificantBits());\n             bb.putLong(complex.getLeastSignificantBits());\n             return bb.array();\n         }\n\n         {@literal @Override}\n         public UUID fromPrimitive(byte[] primitive, ItemTagAdapterContext context) {\n             ByteBuffer bb \u003d ByteBuffer.wrap(primitive);\n             long firstLong \u003d bb.getLong();\n             long secondLong \u003d bb.getLong();\n             return new UUID(firstLong, secondLong);\n         }\n     }\u003c/code\u003e\u003c/pre\u003e",
  "tagMap": {}
}