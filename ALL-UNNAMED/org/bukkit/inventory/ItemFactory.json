{
  "packageName": "org.bukkit.inventory",
  "simpleName": "ItemFactory",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "org.bukkit.inventory.meta.ItemMeta",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getItemMeta",
      "comment": "This creates a new item meta for the material.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ematerial\u003c/code\u003e - The material to consider as base for the meta"
        ],
        "return": [
          "a new ItemMeta that could be applied to an item stack of the specified material"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isApplicable",
      "comment": "This method checks the item meta to confirm that it is applicable (no data lost if applied) to the specified ItemStack. A SkullMeta would not be valid for a sword, but a normal ItemMeta from an enchanted dirt block would.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emeta\u003c/code\u003e - Meta to check",
          "\u003ccode\u003estack\u003c/code\u003e - Item that meta will be applied to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the meta was not created by this factory"
        ],
        "return": [
          "true if the meta can be applied without losing data, false otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isApplicable",
      "comment": "This method checks the item meta to confirm that it is applicable (no data lost if applied) to the specified Material. A SkullMeta would not be valid for a sword, but a normal ItemMeta from an enchanted dirt block would.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emeta\u003c/code\u003e - Meta to check",
          "\u003ccode\u003ematerial\u003c/code\u003e - Material that meta will be applied to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the meta was not created by this factory"
        ],
        "return": [
          "true if the meta can be applied without losing data, false otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "equals",
      "comment": "This method is used to compare two item meta data objects.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emeta1\u003c/code\u003e - First meta to compare, and may be null to indicate no data",
          "\u003ccode\u003emeta2\u003c/code\u003e - Second meta to compare, and may be null to indicate no data"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if either meta was not created by this factory"
        ],
        "return": [
          "false if one of the meta has data the other does not, otherwise true"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.meta.ItemMeta",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "asMetaFor",
      "comment": "Returns an appropriate item meta for the specified stack. The item meta returned will always be a valid meta for a given ItemStack of the specified material. It may be a more or less specific meta, and could also be the same meta or meta type as the parameter. The item meta returned will also always be the most appropriate meta. Example, if a SkullMeta is being applied to a book, this method would return a BookMeta containing all information in the specified meta that is applicable to an ItemMeta, the highest common interface.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003emeta\u003c/code\u003e - the meta to convert",
          "\u003ccode\u003estack\u003c/code\u003e - the stack to convert the meta for"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified meta was not created by this factory"
        ],
        "return": [
          "An appropriate item meta for the specified item stack. No guarantees are made as to if a copy is returned. This will be null for a stack of air."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.meta.ItemMeta",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "asMetaFor",
      "comment": "Returns an appropriate item meta for the specified material. The item meta returned will always be a valid meta for a given ItemStack of the specified material. It may be a more or less specific meta, and could also be the same meta or meta type as the parameter. The item meta returned will also always be the most appropriate meta. Example, if a SkullMeta is being applied to a book, this method would return a BookMeta containing all information in the specified meta that is applicable to an ItemMeta, the highest common interface.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003emeta\u003c/code\u003e - the meta to convert",
          "\u003ccode\u003ematerial\u003c/code\u003e - the material to convert the meta for"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified meta was not created by this factory"
        ],
        "return": [
          "An appropriate item meta for the specified item material. No guarantees are made as to if a copy is returned. This will be null for air."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Color",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDefaultLeatherColor",
      "comment": "Returns the default color for all leather armor.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the default color for leather armor"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Material",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "updateMaterial",
      "comment": "Apply a material change for an item meta. Do not use under any circumstances.",
      "annotations": [
        {
          "type": {
            "name": "java.lang.Deprecated",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003emeta\u003c/code\u003e - meta",
          "\u003ccode\u003ematerial\u003c/code\u003e - material"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if bad material or data"
        ],
        "return": [
          "updated material"
        ]
      }
    },
    {
      "returnType": {
        "name": "net.kyori.adventure.text.event.HoverEvent",
        "parameters": [
          {
            "name": "net.kyori.adventure.text.event.HoverEvent$ShowItem",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "asHoverEvent",
      "comment": "Creates a hover event for the given item.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eitem\u003c/code\u003e - The item"
        ],
        "return": [
          "A hover event"
        ]
      }
    },
    {
      "returnType": {
        "name": "net.kyori.adventure.text.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "displayName",
      "comment": "Get the formatted display name of the ItemStack.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eitemStack\u003c/code\u003e - the \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/inventory/ItemStack.html\" title\u003d\"class in org.bukkit.inventory\"\u003e\u003ccode\u003eItemStack\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "display name of the \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/inventory/ItemStack.html\" title\u003d\"class in org.bukkit.inventory\"\u003e\u003ccode\u003eItemStack\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getI18NDisplayName",
      "comment": "Gets the Display name as seen in the Client. Currently the server only supports the English language. To override this, You must replace the language file embedded in the server jar.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eitem\u003c/code\u003e - Item to return Display name of"
        ],
        "return": [
          "Display name of Item"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "ensureServerConversions",
      "comment": "Minecraft updates are converting simple item stacks into more complex NBT oriented Item Stacks. Use this method to to ensure any desired data conversions are processed. The input itemstack will not be the same as the returned itemstack.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eitem\u003c/code\u003e - The item to process conversions on"
        ],
        "return": [
          "A potentially Data Converted ItemStack"
        ]
      }
    },
    {
      "returnType": {
        "name": "net.md_5.bungee.api.chat.hover.content.Content",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hoverContentOf",
      "comment": "Creates a Content of that ItemStack for displaying.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eitemStack\u003c/code\u003e -"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://javadoc.io/doc/net.md-5/bungeecord-chat/1.16-R0.4/net/md_5/bungee/api/chat/hover/content/Content.html\" title\u003d\"class or interface in net.md_5.bungee.api.chat.hover.content\" class\u003d\"external-link\"\u003e\u003ccode\u003eContent\u003c/code\u003e\u003c/a\u003e of that ItemStack"
        ]
      }
    },
    {
      "returnType": {
        "name": "net.md_5.bungee.api.chat.hover.content.Content",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hoverContentOf",
      "comment": "Creates a Content of that Entity for displaying. Uses the display name of the entity, if present.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "java.lang.Deprecated",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eentity\u003c/code\u003e - Entity to create the HoverEvent for"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://javadoc.io/doc/net.md-5/bungeecord-chat/1.16-R0.4/net/md_5/bungee/api/chat/hover/content/Content.html\" title\u003d\"class or interface in net.md_5.bungee.api.chat.hover.content\" class\u003d\"external-link\"\u003e\u003ccode\u003eContent\u003c/code\u003e\u003c/a\u003e of that \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/entity/Entity.html\" title\u003d\"interface in org.bukkit.entity\"\u003e\u003ccode\u003eEntity\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "net.md_5.bungee.api.chat.hover.content.Content",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hoverContentOf",
      "comment": "Creates a Content of that Entity for displaying.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "java.lang.Deprecated",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eentity\u003c/code\u003e - Entity to create the HoverEvent for",
          "\u003ccode\u003ecustomName\u003c/code\u003e - a custom name that should be displayed, if not passed entity name will be displayed"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://javadoc.io/doc/net.md-5/bungeecord-chat/1.16-R0.4/net/md_5/bungee/api/chat/hover/content/Content.html\" title\u003d\"class or interface in net.md_5.bungee.api.chat.hover.content\" class\u003d\"external-link\"\u003e\u003ccode\u003eContent\u003c/code\u003e\u003c/a\u003e of that \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/entity/Entity.html\" title\u003d\"interface in org.bukkit.entity\"\u003e\u003ccode\u003eEntity\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "net.md_5.bungee.api.chat.hover.content.Content",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hoverContentOf",
      "comment": "Creates a Content of that Entity for displaying.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "java.lang.Deprecated",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eentity\u003c/code\u003e - Entity to create the HoverEvent for",
          "\u003ccode\u003ecustomName\u003c/code\u003e - a custom name that should be displayed, if not passed entity name will be displayed"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://javadoc.io/doc/net.md-5/bungeecord-chat/1.16-R0.4/net/md_5/bungee/api/chat/hover/content/Content.html\" title\u003d\"class or interface in net.md_5.bungee.api.chat.hover.content\" class\u003d\"external-link\"\u003e\u003ccode\u003eContent\u003c/code\u003e\u003c/a\u003e of that \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/entity/Entity.html\" title\u003d\"interface in org.bukkit.entity\"\u003e\u003ccode\u003eEntity\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "net.md_5.bungee.api.chat.hover.content.Content",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hoverContentOf",
      "comment": "Creates a Content of that Entity for displaying.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "java.lang.Deprecated",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eentity\u003c/code\u003e - Entity to create the HoverEvent for",
          "\u003ccode\u003ecustomName\u003c/code\u003e - a custom name that should be displayed, if not passed entity name will be displayed"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://javadoc.io/doc/net.md-5/bungeecord-chat/1.16-R0.4/net/md_5/bungee/api/chat/hover/content/Content.html\" title\u003d\"class or interface in net.md_5.bungee.api.chat.hover.content\" class\u003d\"external-link\"\u003e\u003ccode\u003eContent\u003c/code\u003e\u003c/a\u003e of that \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/entity/Entity.html\" title\u003d\"interface in org.bukkit.entity\"\u003e\u003ccode\u003eEntity\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.inventory.ItemFactory",
  "comment": "An instance of the ItemFactory can be obtained with \n\u003ca href\u003d\"../Server.html#getItemFactory()\"\u003e\u003ccode\u003eServer.getItemFactory()\u003c/code\u003e\u003c/a\u003e. \n\u003cp\u003e The ItemFactory is solely responsible for creating item meta containers to apply on item stacks.\u003c/p\u003e",
  "tagMap": {}
}