{
  "packageName": "org.bukkit.inventory",
  "simpleName": "InventoryView",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "OUTSIDE",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/constant-values.html#org.bukkit.inventory.InventoryView.OUTSIDE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.Inventory",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getTopInventory",
      "comment": "Get the upper inventory involved in this transaction.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the inventory"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.Inventory",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getBottomInventory",
      "comment": "Get the lower inventory involved in this transaction.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the inventory"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.entity.HumanEntity",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getPlayer",
      "comment": "Get the player viewing.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the player"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.event.inventory.InventoryType",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getType",
      "comment": "Determine the type of inventory involved in the transaction. This indicates the window style being shown. It will never return PLAYER, since that is common to all windows.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the inventory type"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "slot",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.Nullable",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.inventory.ItemStack",
            "type": "Class"
          },
          "name": "item",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setItem",
      "comment": "Sets one item in this inventory view by its raw slot ID. Note: If slot ID -999 is chosen, it may be expected that the item is dropped on the ground. This is not required behaviour, however.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eslot\u003c/code\u003e - The ID as returned by InventoryClickEvent.getRawSlot()",
          "\u003ccode\u003eitem\u003c/code\u003e - The new item to put in the slot, or null to clear it."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "slot",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getItem",
      "comment": "Gets one item in this inventory view by its raw slot ID.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eslot\u003c/code\u003e - The ID as returned by InventoryClickEvent.getRawSlot()"
        ],
        "return": [
          "The item currently in the slot."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.Nullable",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.inventory.ItemStack",
            "type": "Class"
          },
          "name": "item",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "setCursor",
      "comment": "Sets the item on the cursor of one of the viewing players.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eitem\u003c/code\u003e - The item to put on the cursor, or null to remove the item on their cursor."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getCursor",
      "comment": "Get the item on the cursor of one of the viewing players.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The item on the player\u0027s cursor, or null if they aren\u0027t holding one."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.Inventory",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "rawSlot",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getInventory",
      "comment": "Gets the inventory corresponding to the given raw slot ID. If the slot ID is OUTSIDE null will be returned, otherwise behaviour for illegal and negative slot IDs is undefined. May be used with convertSlot(int) to directly index an underlying inventory.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003erawSlot\u003c/code\u003e - The raw slot ID."
        ],
        "return": [
          "corresponding inventory, or null"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "rawSlot",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "convertSlot",
      "comment": "Converts a raw slot ID into its local slot ID into whichever of the two inventories the slot points to. If the raw slot refers to the upper inventory, it will be returned unchanged and thus be suitable for getTopInventory().getItem(); if it refers to the lower inventory, the output will differ from the input and be suitable for getBottomInventory().getItem().",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erawSlot\u003c/code\u003e - The raw slot ID."
        ],
        "return": [
          "The converted slot ID."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.event.inventory.InventoryType$SlotType",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "slot",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getSlotType",
      "comment": "Determine the type of the slot by its raw slot ID. If the type of the slot is unknown, then InventoryType.SlotType.CONTAINER will be returned.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eslot\u003c/code\u003e - The raw slot ID"
        ],
        "return": [
          "the slot type"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "close",
      "comment": "Closes the inventory view.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "countSlots",
      "comment": "Check the total number of slots in this view, combining the upper and lower inventories. Note though that it\u0027s possible for this to be greater than the sum of the two inventories if for example some slots are not being used.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The total size"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.inventory.InventoryView$Property",
            "type": "Class"
          },
          "name": "prop",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "setProperty",
      "comment": "Sets an extra property of this inventory if supported by that inventory, for example the state of a progress bar.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eprop\u003c/code\u003e - the window property to update",
          "\u003ccode\u003evalue\u003c/code\u003e - the new value for the window property"
        ],
        "return": [
          "true if the property was updated successfully, false if the property is not supported by that inventory"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getTitle",
      "comment": "Get the title of this inventory window.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The title."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "annotations": [],
      "tagMap": {}
    }
  ],
  "innerClasses": [
    "org.bukkit.inventory.InventoryView$Property"
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "org.bukkit.inventory.InventoryView",
  "comment": "Represents a view linking two inventories and a single player (whose inventory may or may not be one of the two). \n\u003cp\u003e Note: If you implement this interface but fail to satisfy the expected contracts of certain methods, there\u0027s no guarantee that the game will work as it should.\u003c/p\u003e",
  "tagMap": {}
}