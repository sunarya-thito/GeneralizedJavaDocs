{
  "packageName": "org.bukkit",
  "simpleName": "UnsafeValues",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "net.kyori.adventure.text.flattener.ComponentFlattener",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "componentFlattener",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "net.kyori.adventure.text.serializer.plain.PlainComponentSerializer",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "plainComponentSerializer",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "net.kyori.adventure.text.serializer.gson.GsonComponentSerializer",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "gsonComponentSerializer",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "net.kyori.adventure.text.serializer.gson.GsonComponentSerializer",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "colorDownsamplingGsonComponentSerializer",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "legacyComponentSerializer",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "reportTimings",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.Material",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.Material",
            "type": "Class"
          },
          "field": {
            "name": "material"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "toLegacy",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.Material",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.Material",
            "type": "Class"
          },
          "field": {
            "name": "material"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "fromLegacy",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.Material",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.material.MaterialData",
            "type": "Class"
          },
          "field": {
            "name": "material"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "fromLegacy",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.Material",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.material.MaterialData",
            "type": "Class"
          },
          "field": {
            "name": "material"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "itemPriority"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "fromLegacy",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.block.data.BlockData",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.Material",
            "type": "Class"
          },
          "field": {
            "name": "material"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class"
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "fromLegacy",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.Material",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "material"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "version"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaterial",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDataVersion",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.inventory.ItemStack",
            "type": "Class"
          },
          "field": {
            "name": "stack"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "arguments"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "modifyItemStack",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.bukkit.plugin.InvalidPluginException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.plugin.PluginDescriptionFile",
            "type": "Class"
          },
          "field": {
            "name": "pdf"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "checkSupported",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/plugin/InvalidPluginException.html\" title\u003d\"class in org.bukkit.plugin\"\u003eInvalidPluginException\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.plugin.PluginDescriptionFile",
            "type": "Class"
          },
          "field": {
            "name": "pdf"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "path"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "clazz"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "processClass",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.advancement.Advancement",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.NamespacedKey",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "advancement"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "loadAdvancement",
      "comment": "Load an advancement represented by the specified string into the server. The advancement format is governed by Minecraft and has no specified layout. It is currently a JSON object, as described by the Minecraft Wiki: http://minecraft.gamepedia.com/Advancements Loaded advancements will be stored and persisted across server restarts and reloads. Callers should be prepared for Exception to be thrown.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the unique advancement key",
          "\u003ccode\u003eadvancement\u003c/code\u003e - representation of the advancement"
        ],
        "return": [
          "the loaded advancement or null if an error occurred"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.NamespacedKey",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeAdvancement",
      "comment": "Delete an advancement which was loaded and saved by loadAdvancement(org.bukkit.NamespacedKey, java.lang.String). This method will only remove advancement from persistent storage. It should be accompanied by a call to Server.reloadData() in order to fully remove it from the running instance.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the unique advancement key"
        ],
        "return": [
          "true if a file matching this key was found and deleted"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTimingsServerName",
      "comment": "Server name to report to timings v2",
      "tagMap": {
        "return": [
          "name"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.destroystokyo.paper.util.VersionFetcher",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getVersionFetcher",
      "comment": "Called once by the version command on first use, then cached.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "apiVersion"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isSupportedApiVersion",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.plugin.Plugin",
            "type": "Class"
          },
          "field": {
            "name": "plugin"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "isLegacyPlugin",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.inventory.ItemStack",
            "type": "Class"
          },
          "field": {
            "name": "item"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "serializeItem",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "deserializeItem",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.Material",
            "type": "Class"
          },
          "field": {
            "name": "mat"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTranslationKey",
      "comment": "Return the translation key for the Material, so the client can translate it into the active locale when using a TranslatableComponent.",
      "tagMap": {
        "return": [
          "the translation key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.block.Block",
            "type": "Class"
          },
          "field": {
            "name": "block"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTranslationKey",
      "comment": "Return the translation key for the Block, so the client can translate it into the active locale when using a TranslatableComponent.",
      "tagMap": {
        "return": [
          "the translation key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.entity.EntityType",
            "type": "Class"
          },
          "field": {
            "name": "type"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTranslationKey",
      "comment": "Return the translation key for the EntityType, so the client can translate it into the active locale when using a TranslatableComponent. This is null, when the EntityType isn\u0027t known to NMS (custom entities)",
      "tagMap": {
        "return": [
          "the translation key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.inventory.ItemStack",
            "type": "Class"
          },
          "field": {
            "name": "itemStack"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTranslationKey",
      "comment": "Return the translation key for the ItemStack, so the client can translate it into the active locale when using a TranslatableComponent.",
      "tagMap": {
        "return": [
          "the translation key"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "nextEntityId",
      "comment": "Creates and returns the next EntityId available. Use this when sending custom packets, so that there are no collisions on the client or server.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "io.papermc.paper.inventory.ItemRarity",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.Material",
            "type": "Class"
          },
          "field": {
            "name": "material"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getItemRarity",
      "comment": "Gets the item rarity of a material. The material MUST be an item. Use Material.isItem() before this.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ematerial\u003c/code\u003e - the material to get the rarity of"
        ],
        "return": [
          "the item rarity"
        ]
      }
    },
    {
      "returnType": {
        "name": "io.papermc.paper.inventory.ItemRarity",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.bukkit.inventory.ItemStack",
            "type": "Class"
          },
          "field": {
            "name": "itemStack"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getItemStackRarity",
      "comment": "Gets the item rarity of the itemstack. The rarity can change based on enchantements.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eitemStack\u003c/code\u003e - the itemstack to get the rarity of"
        ],
        "return": [
          "the itemstack rarity"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.inventory.ItemStack",
            "type": "Class"
          },
          "field": {
            "name": "itemToBeRepaired"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.inventory.ItemStack",
            "type": "Class"
          },
          "field": {
            "name": "repairMaterial"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isValidRepairItemStack",
      "comment": "Checks if an itemstack can be repaired with another itemstack. Returns false if either argument\u0027s type is not an item (Material.isItem()).",
      "tagMap": {
        "param": [
          "\u003ccode\u003eitemToBeRepaired\u003c/code\u003e - the itemstack to be repaired",
          "\u003ccode\u003erepairMaterial\u003c/code\u003e - the repair material"
        ],
        "return": [
          "true if valid repair, false if not"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.google.common.collect.Multimap",
        "parameters": [
          {
            "name": "org.bukkit.attribute.Attribute",
            "type": "Class"
          },
          {
            "name": "org.bukkit.attribute.AttributeModifier",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.Material",
            "type": "Class"
          },
          "field": {
            "name": "material"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.inventory.EquipmentSlot",
            "type": "Class"
          },
          "field": {
            "name": "equipmentSlot"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getItemAttributes",
      "comment": "Returns an immutable multimap of attributes for the material and slot. Material.isItem() must be true for this material.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ematerial\u003c/code\u003e - the material",
          "\u003ccode\u003eequipmentSlot\u003c/code\u003e - the slot to get the attributes for"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/Material.html#isItem()\"\u003e\u003ccode\u003eMaterial.isItem()\u003c/code\u003e\u003c/a\u003e is false"
        ],
        "return": [
          "an immutable multimap of attributes"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getProtocolVersion",
      "comment": "Returns the server\u0027s protocol version.",
      "tagMap": {
        "return": [
          "the server\u0027s protocol version"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.UnsafeValues",
  "comment": "This interface provides value conversions that may be specific to a runtime, or have arbitrary meaning (read: magic values). \n\u003cp\u003e Their existence and behavior is not guaranteed across future versions. They may be poorly named, throw exceptions, have misleading parameters, or any other bad programming practice.\u003c/p\u003e",
  "tagMap": {}
}