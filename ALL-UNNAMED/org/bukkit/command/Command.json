{
  "packageName": "org.bukkit.command",
  "simpleName": "Command",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "description",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "usageMessage",
      "tagMap": {}
    },
    {
      "type": {
        "name": "org.spigotmc.CustomTimingsHandler",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "timings",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.command.CommandSender",
            "type": "Class"
          },
          "field": {
            "name": "sender"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "commandLabel"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "args"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "execute",
      "comment": "Executes the command, returning its success",
      "tagMap": {
        "param": [
          "\u003ccode\u003esender\u003c/code\u003e - Source object which is executing this command",
          "\u003ccode\u003ecommandLabel\u003c/code\u003e - The alias of the command used",
          "\u003ccode\u003eargs\u003c/code\u003e - All arguments passed to the command, split via \u0027 \u0027"
        ],
        "return": [
          "true if the command was successful, otherwise false"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.command.CommandSender",
            "type": "Class"
          },
          "field": {
            "name": "sender"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "alias"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "args"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "tabComplete",
      "comment": "Executed on tab completion for this command, returning a list of options the player can tab through.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003esender\u003c/code\u003e - Source object which is executing this command",
          "\u003ccode\u003ealias\u003c/code\u003e - the alias being used",
          "\u003ccode\u003eargs\u003c/code\u003e - All arguments passed to the command, split via \u0027 \u0027"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if sender, alias, or args is null"
        ],
        "return": [
          "a list of tab-completions for the specified arguments. This will never be null. List may be immutable."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.command.CommandSender",
            "type": "Class"
          },
          "field": {
            "name": "sender"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "alias"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "args"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "org.bukkit.Location",
            "type": "Class"
          },
          "field": {
            "name": "location"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "tabComplete",
      "comment": "Executed on tab completion for this command, returning a list of options the player can tab through.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003esender\u003c/code\u003e - Source object which is executing this command",
          "\u003ccode\u003ealias\u003c/code\u003e - the alias being used",
          "\u003ccode\u003eargs\u003c/code\u003e - All arguments passed to the command, split via \u0027 \u0027",
          "\u003ccode\u003elocation\u003c/code\u003e - The position looked at by the sender, or null if none"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if sender, alias, or args is null"
        ],
        "return": [
          "a list of tab-completions for the specified arguments. This will never be null. List may be immutable."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getName",
      "comment": "Returns the name of this command",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "Name of this command"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setName",
      "comment": "Sets the name of this command. May only be used before registering the command. Will return true if the new name is set, and false if the command has already been registered.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - New command name"
        ],
        "return": [
          "returns true if the name change happened instantly or false if the command was already registered"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPermission",
      "comment": "Gets the permission required by users to be able to perform this command",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "return": [
          "Permission name, or null if none"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "permission"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPermission",
      "comment": "Sets the permission required by users to be able to perform this command",
      "tagMap": {
        "param": [
          "\u003ccode\u003epermission\u003c/code\u003e - Permission name or null"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.command.CommandSender",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "testPermission",
      "comment": "Tests the given CommandSender to see if they can perform this command. If they do not have permission, they will be informed that they cannot do this.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - User to test"
        ],
        "return": [
          "true if they can use it, otherwise false"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.command.CommandSender",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "testPermissionSilent",
      "comment": "Tests the given CommandSender to see if they can perform this command. No error is sent to the sender.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - User to test"
        ],
        "return": [
          "true if they can use it, otherwise false"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLabel",
      "comment": "Returns the label for this command",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "Label of this command"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLabel",
      "comment": "Sets the label of this command. May only be used before registering the command. Will return true if the new name is set, and false if the command has already been registered.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The command\u0027s name"
        ],
        "return": [
          "returns true if the name change happened instantly or false if the command was already registered"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.command.CommandMap",
            "type": "Class"
          },
          "field": {
            "name": "commandMap"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "register",
      "comment": "Registers this command to a CommandMap. Once called it only allows changes the registered CommandMap",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecommandMap\u003c/code\u003e - the CommandMap to register this command to"
        ],
        "return": [
          "true if the registration was successful (the current registered CommandMap was the passed CommandMap or null) false otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.command.CommandMap",
            "type": "Class"
          },
          "field": {
            "name": "commandMap"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "unregister",
      "comment": "Unregisters this command from the passed CommandMap applying any outstanding changes",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecommandMap\u003c/code\u003e - the CommandMap to unregister"
        ],
        "return": [
          "true if the unregistration was successful (the current registered CommandMap was the passed CommandMap or null) false otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isRegistered",
      "comment": "Returns the current registered state of this command",
      "tagMap": {
        "return": [
          "true if this command is currently registered false otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAliases",
      "comment": "Returns a list of active aliases of this command",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "List of aliases"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPermissionMessage",
      "comment": "Returns a message to be displayed on a failed permission check for this command",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "return": [
          "Permission check failed message"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDescription",
      "comment": "Gets a brief description of this command",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "Description of this command"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUsage",
      "comment": "Gets an example usage of this command",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "One or more example usages"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.command.Command",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "aliases"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setAliases",
      "comment": "Sets the list of aliases to request on registration for this command. This is not effective outside of defining aliases in the PluginDescriptionFile.getCommands() (under the `aliases\u0027 node) is equivalent to this method.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ealiases\u003c/code\u003e - aliases to register to this command"
        ],
        "return": [
          "this command object, for chaining"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.command.Command",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDescription",
      "comment": "Sets a brief description of this command. Defining a description in the PluginDescriptionFile.getCommands() (under the `description\u0027 node) is equivalent to this method.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003edescription\u003c/code\u003e - new command description"
        ],
        "return": [
          "this command object, for chaining"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.command.Command",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "permissionMessage"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPermissionMessage",
      "comment": "Sets the message sent when a permission check fails",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003epermissionMessage\u003c/code\u003e - new permission message, null to indicate default message, or an empty string to indicate no message"
        ],
        "return": [
          "this command object, for chaining"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.command.Command",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "usage"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setUsage",
      "comment": "Sets the example usage of this command",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eusage\u003c/code\u003e - new example usage"
        ],
        "return": [
          "this command object, for chaining"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.command.CommandSender",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "message"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "broadcastCommandMessage",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.command.CommandSender",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "message"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "sendToSource"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "broadcastCommandMessage",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString()\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "usageMessage"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "aliases"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "org.bukkit.command.Command",
  "comment": "Represents a Command, which executes various tasks upon user input",
  "tagMap": {}
}