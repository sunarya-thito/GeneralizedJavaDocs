{
  "packageName": "org.bukkit.command.defaults",
  "simpleName": "HelpCommand",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "org.bukkit.command.defaults.BukkitCommand",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.command.CommandSender",
            "type": "Class"
          },
          "name": "sender",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "currentAlias",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "args",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "execute",
      "comment": "Description copied from class: Command",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/command/Command.html#execute(org.bukkit.command.CommandSender,java.lang.String,java.lang.String%5B%5D)\"\u003eexecute\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/command/Command.html\" title\u003d\"class in org.bukkit.command\"\u003eCommand\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esender\u003c/code\u003e - Source object which is executing this command",
          "\u003ccode\u003ecurrentAlias\u003c/code\u003e - The alias of the command used",
          "\u003ccode\u003eargs\u003c/code\u003e - All arguments passed to the command, split via \u0027 \u0027"
        ],
        "return": [
          "true if the command was successful, otherwise false"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.command.CommandSender",
            "type": "Class"
          },
          "name": "sender",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "alias",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "args",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "tabComplete",
      "comment": "Description copied from class: Command",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/command/Command.html#tabComplete(org.bukkit.command.CommandSender,java.lang.String,java.lang.String%5B%5D)\"\u003etabComplete\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/command/Command.html\" title\u003d\"class in org.bukkit.command\"\u003eCommand\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esender\u003c/code\u003e - Source object which is executing this command",
          "\u003ccode\u003ealias\u003c/code\u003e - the alias being used",
          "\u003ccode\u003eargs\u003c/code\u003e - All arguments passed to the command, split via \u0027 \u0027"
        ],
        "return": [
          "a list of tab-completions for the specified arguments. This will never be null. List may be immutable."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.help.HelpTopic",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "searchString",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "findPossibleMatches",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.Nullable",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "s1",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.Nullable",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "s2",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 12,
      "name": "damerauLevenshteinDistance",
      "comment": "Computes the Dameraur-Levenshtein Distance between two strings. Adapted from the algorithm at Wikipedia: Damerauâ€“Levenshtein distance",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003es1\u003c/code\u003e - The first string being compared.",
          "\u003ccode\u003es2\u003c/code\u003e - The second string being compared."
        ],
        "return": [
          "The number of substitutions, deletions, insertions, and transpositions required to get from s1 to s2."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "org.bukkit.command.defaults.HelpCommand",
  "annotations": [],
  "tagMap": {}
}