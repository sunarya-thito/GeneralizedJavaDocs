{
  "packageName": "org.bukkit.util.noise",
  "simpleName": "SimplexOctaveGenerator",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "org.bukkit.util.noise.OctaveGenerator",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setScale",
      "comment": "Description copied from class: OctaveGenerator",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/util/noise/OctaveGenerator.html#setScale(double)\"\u003esetScale\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/util/noise/OctaveGenerator.html\" title\u003d\"class in org.bukkit.util.noise\"\u003eOctaveGenerator\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003escale\u003c/code\u003e - New value to scale each coordinate by"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getWScale",
      "comment": "Gets the scale used for each W-coordinates passed",
      "annotations": [],
      "tagMap": {
        "return": [
          "W scale"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setWScale",
      "comment": "Sets the scale used for each W-coordinates passed",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003escale\u003c/code\u003e - New W scale"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Generates noise for the 3D coordinates using the specified number of octaves and parameters",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X-coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Y-coordinate",
          "\u003ccode\u003ez\u003c/code\u003e - Z-coordinate",
          "\u003ccode\u003ew\u003c/code\u003e - W-coordinate",
          "\u003ccode\u003efrequency\u003c/code\u003e - How much to alter the frequency by each octave",
          "\u003ccode\u003eamplitude\u003c/code\u003e - How much to alter the amplitude by each octave"
        ],
        "return": [
          "Resulting noise"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Generates noise for the 3D coordinates using the specified number of octaves and parameters",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X-coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Y-coordinate",
          "\u003ccode\u003ez\u003c/code\u003e - Z-coordinate",
          "\u003ccode\u003ew\u003c/code\u003e - W-coordinate",
          "\u003ccode\u003efrequency\u003c/code\u003e - How much to alter the frequency by each octave",
          "\u003ccode\u003eamplitude\u003c/code\u003e - How much to alter the amplitude by each octave",
          "\u003ccode\u003enormalized\u003c/code\u003e - If true, normalize the value to [-1, 1]"
        ],
        "return": [
          "Resulting noise"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            },
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.World",
            "type": "Class"
          },
          "name": "world",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "octaves",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a simplex octave generator for the given world",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eworld\u003c/code\u003e - World to construct this generator for",
          "\u003ccode\u003eoctaves\u003c/code\u003e - Amount of octaves to create"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "seed",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "octaves",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a simplex octave generator for the given world",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eseed\u003c/code\u003e - Seed to construct this generator for",
          "\u003ccode\u003eoctaves\u003c/code\u003e - Amount of octaves to create"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            },
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "java.util.Random",
            "type": "Class"
          },
          "name": "rand",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "octaves",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a simplex octave generator for the given Random",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erand\u003c/code\u003e - Random object to construct this generator for",
          "\u003ccode\u003eoctaves\u003c/code\u003e - Amount of octaves to create"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "org.bukkit.util.noise.SimplexOctaveGenerator",
  "comment": "Creates simplex noise through unbiased octaves",
  "tagMap": {}
}