{
  "packageName": "org.bukkit.util.noise",
  "simpleName": "OctaveGenerator",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "org.bukkit.util.noise.NoiseGenerator",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "memberType": "JavaField",
      "modifiers": 20,
      "name": "octaves",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {}
    },
    {
      "type": {
        "name": "double",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "xScale",
      "tagMap": {}
    },
    {
      "type": {
        "name": "double",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "yScale",
      "tagMap": {}
    },
    {
      "type": {
        "name": "double",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "zScale",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "scale"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setScale",
      "comment": "Sets the scale used for all coordinates passed to this generator. This is the equivalent to setting each coordinate to the specified value.",
      "tagMap": {
        "param": [
          "\u003ccode\u003escale\u003c/code\u003e - New value to scale each coordinate by"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getXScale",
      "comment": "Gets the scale used for each X-coordinates passed",
      "tagMap": {
        "return": [
          "X scale"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "scale"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setXScale",
      "comment": "Sets the scale used for each X-coordinates passed",
      "tagMap": {
        "param": [
          "\u003ccode\u003escale\u003c/code\u003e - New X scale"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getYScale",
      "comment": "Gets the scale used for each Y-coordinates passed",
      "tagMap": {
        "return": [
          "Y scale"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "scale"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setYScale",
      "comment": "Sets the scale used for each Y-coordinates passed",
      "tagMap": {
        "param": [
          "\u003ccode\u003escale\u003c/code\u003e - New Y scale"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getZScale",
      "comment": "Gets the scale used for each Z-coordinates passed",
      "tagMap": {
        "return": [
          "Z scale"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "scale"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setZScale",
      "comment": "Sets the scale used for each Z-coordinates passed",
      "tagMap": {
        "param": [
          "\u003ccode\u003escale\u003c/code\u003e - New Z scale"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.util.noise.NoiseGenerator",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOctaves",
      "comment": "Gets a clone of the individual octaves used within this generator",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "Clone of the individual octaves"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "frequency"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "amplitude"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Generates noise for the 1D coordinates using the specified number of octaves and parameters",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X-coordinate",
          "\u003ccode\u003efrequency\u003c/code\u003e - How much to alter the frequency by each octave",
          "\u003ccode\u003eamplitude\u003c/code\u003e - How much to alter the amplitude by each octave"
        ],
        "return": [
          "Resulting noise"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "frequency"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "amplitude"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "normalized"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Generates noise for the 1D coordinates using the specified number of octaves and parameters",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X-coordinate",
          "\u003ccode\u003efrequency\u003c/code\u003e - How much to alter the frequency by each octave",
          "\u003ccode\u003eamplitude\u003c/code\u003e - How much to alter the amplitude by each octave",
          "\u003ccode\u003enormalized\u003c/code\u003e - If true, normalize the value to [-1, 1]"
        ],
        "return": [
          "Resulting noise"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "frequency"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "amplitude"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Generates noise for the 2D coordinates using the specified number of octaves and parameters",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X-coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Y-coordinate",
          "\u003ccode\u003efrequency\u003c/code\u003e - How much to alter the frequency by each octave",
          "\u003ccode\u003eamplitude\u003c/code\u003e - How much to alter the amplitude by each octave"
        ],
        "return": [
          "Resulting noise"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "frequency"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "amplitude"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "normalized"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Generates noise for the 2D coordinates using the specified number of octaves and parameters",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X-coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Y-coordinate",
          "\u003ccode\u003efrequency\u003c/code\u003e - How much to alter the frequency by each octave",
          "\u003ccode\u003eamplitude\u003c/code\u003e - How much to alter the amplitude by each octave",
          "\u003ccode\u003enormalized\u003c/code\u003e - If true, normalize the value to [-1, 1]"
        ],
        "return": [
          "Resulting noise"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "z"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "frequency"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "amplitude"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Generates noise for the 3D coordinates using the specified number of octaves and parameters",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X-coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Y-coordinate",
          "\u003ccode\u003ez\u003c/code\u003e - Z-coordinate",
          "\u003ccode\u003efrequency\u003c/code\u003e - How much to alter the frequency by each octave",
          "\u003ccode\u003eamplitude\u003c/code\u003e - How much to alter the amplitude by each octave"
        ],
        "return": [
          "Resulting noise"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "z"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "frequency"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "amplitude"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "normalized"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Generates noise for the 3D coordinates using the specified number of octaves and parameters",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X-coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Y-coordinate",
          "\u003ccode\u003ez\u003c/code\u003e - Z-coordinate",
          "\u003ccode\u003efrequency\u003c/code\u003e - How much to alter the frequency by each octave",
          "\u003ccode\u003eamplitude\u003c/code\u003e - How much to alter the amplitude by each octave",
          "\u003ccode\u003enormalized\u003c/code\u003e - If true, normalize the value to [-1, 1]"
        ],
        "return": [
          "Resulting noise"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.util.noise.NoiseGenerator",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "octaves"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "org.bukkit.util.noise.OctaveGenerator",
  "comment": "Creates noise using unbiased octaves",
  "tagMap": {}
}