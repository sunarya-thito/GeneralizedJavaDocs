{
  "packageName": "org.bukkit.util.noise",
  "simpleName": "NoiseGenerator",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class",
        "arrayDimensions": 1
      },
      "memberType": "JavaField",
      "modifiers": 20,
      "name": "perm",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "double",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "offsetX",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "double",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "offsetY",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "double",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "offsetZ",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "floor",
      "comment": "Speedy floor, faster than (int)Math.floor(x)",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - Value to floor"
        ],
        "return": [
          "Floored value"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 12,
      "name": "fade",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 12,
      "name": "lerp",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 12,
      "name": "grad",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Computes and returns the 1D noise for the given coordinate in 1D space",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X coordinate"
        ],
        "return": [
          "Noise at given location, from range -1 to 1"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Computes and returns the 2D noise for the given coordinates in 2D space",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Y coordinate"
        ],
        "return": [
          "Noise at given location, from range -1 to 1"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "noise",
      "comment": "Computes and returns the 3D noise for the given coordinates in 3D space",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Y coordinate",
          "\u003ccode\u003ez\u003c/code\u003e - Z coordinate"
        ],
        "return": [
          "Noise at given location, from range -1 to 1"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Generates noise for the 1D coordinates using the specified number of octaves and parameters",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X-coordinate",
          "\u003ccode\u003eoctaves\u003c/code\u003e - Number of octaves to use",
          "\u003ccode\u003efrequency\u003c/code\u003e - How much to alter the frequency by each octave",
          "\u003ccode\u003eamplitude\u003c/code\u003e - How much to alter the amplitude by each octave"
        ],
        "return": [
          "Resulting noise"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Generates noise for the 1D coordinates using the specified number of octaves and parameters",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X-coordinate",
          "\u003ccode\u003eoctaves\u003c/code\u003e - Number of octaves to use",
          "\u003ccode\u003efrequency\u003c/code\u003e - How much to alter the frequency by each octave",
          "\u003ccode\u003eamplitude\u003c/code\u003e - How much to alter the amplitude by each octave",
          "\u003ccode\u003enormalized\u003c/code\u003e - If true, normalize the value to [-1, 1]"
        ],
        "return": [
          "Resulting noise"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Generates noise for the 2D coordinates using the specified number of octaves and parameters",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X-coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Y-coordinate",
          "\u003ccode\u003eoctaves\u003c/code\u003e - Number of octaves to use",
          "\u003ccode\u003efrequency\u003c/code\u003e - How much to alter the frequency by each octave",
          "\u003ccode\u003eamplitude\u003c/code\u003e - How much to alter the amplitude by each octave"
        ],
        "return": [
          "Resulting noise"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Generates noise for the 2D coordinates using the specified number of octaves and parameters",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X-coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Y-coordinate",
          "\u003ccode\u003eoctaves\u003c/code\u003e - Number of octaves to use",
          "\u003ccode\u003efrequency\u003c/code\u003e - How much to alter the frequency by each octave",
          "\u003ccode\u003eamplitude\u003c/code\u003e - How much to alter the amplitude by each octave",
          "\u003ccode\u003enormalized\u003c/code\u003e - If true, normalize the value to [-1, 1]"
        ],
        "return": [
          "Resulting noise"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Generates noise for the 3D coordinates using the specified number of octaves and parameters",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X-coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Y-coordinate",
          "\u003ccode\u003ez\u003c/code\u003e - Z-coordinate",
          "\u003ccode\u003eoctaves\u003c/code\u003e - Number of octaves to use",
          "\u003ccode\u003efrequency\u003c/code\u003e - How much to alter the frequency by each octave",
          "\u003ccode\u003eamplitude\u003c/code\u003e - How much to alter the amplitude by each octave"
        ],
        "return": [
          "Resulting noise"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "noise",
      "comment": "Generates noise for the 3D coordinates using the specified number of octaves and parameters",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - X-coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Y-coordinate",
          "\u003ccode\u003ez\u003c/code\u003e - Z-coordinate",
          "\u003ccode\u003eoctaves\u003c/code\u003e - Number of octaves to use",
          "\u003ccode\u003efrequency\u003c/code\u003e - How much to alter the frequency by each octave",
          "\u003ccode\u003eamplitude\u003c/code\u003e - How much to alter the amplitude by each octave",
          "\u003ccode\u003enormalized\u003c/code\u003e - If true, normalize the value to [-1, 1]"
        ],
        "return": [
          "Resulting noise"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "org.bukkit.util.noise.NoiseGenerator",
  "comment": "Base class for all noise generators",
  "tagMap": {}
}