{
  "packageName": "org.bukkit.block",
  "simpleName": "EndGateway",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.bukkit.block.TileState",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "org.bukkit.Location",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getExitLocation",
      "comment": "Gets the location that entities are teleported to when entering the gateway portal. If this block state is not placed the location\u0027s world will be null.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the gateway exit location"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setExitLocation",
      "comment": "Sets the exit location that entities are teleported to when they enter the gateway portal. If this block state is not placed the location\u0027s world has to be null.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elocation\u003c/code\u003e - the new exit location"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - for differing worlds"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isExactTeleport",
      "comment": "Gets whether this gateway will teleport entities directly to the exit location instead of finding a nearby location.",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if the gateway is teleporting to the exact location"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setExactTeleport",
      "comment": "Sets whether this gateway will teleport entities directly to the exit location instead of finding a nearby location.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eexact\u003c/code\u003e - whether to teleport to the exact location"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAge",
      "comment": "Gets the age in ticks of the gateway. If the age is less than 200 ticks a magenta beam will be emitted, whilst if it is a multiple of 2400 ticks a purple beam will be emitted.",
      "annotations": [],
      "tagMap": {
        "return": [
          "age in ticks"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setAge",
      "comment": "Sets the age in ticks of the gateway. If the age is less than 200 ticks a magenta beam will be emitted, whilst if it is a multiple of 2400 ticks a purple beam will be emitted.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eage\u003c/code\u003e - new age in ticks"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.block.EndGateway",
  "tagMap": {}
}