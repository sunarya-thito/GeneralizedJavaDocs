{
  "packageName": "org.bukkit.block.data",
  "simpleName": "MultipleFacing",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.bukkit.block.data.BlockData",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.block.BlockFace",
            "type": "Class"
          },
          "field": {
            "name": "face"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasFace",
      "comment": "Checks if this block has the specified face enabled.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eface\u003c/code\u003e - to check"
        ],
        "return": [
          "if face is enabled"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.block.BlockFace",
            "type": "Class"
          },
          "field": {
            "name": "face"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "has"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setFace",
      "comment": "Set whether this block has the specified face enabled.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eface\u003c/code\u003e - to set",
          "\u003ccode\u003ehas\u003c/code\u003e - the face"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "org.bukkit.block.BlockFace",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getFaces",
      "comment": "Get all of the faces which are enabled on this block.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "all faces enabled"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "org.bukkit.block.BlockFace",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAllowedFaces",
      "comment": "Gets all of this faces which may be set on this block.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "all allowed faces"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.block.data.MultipleFacing",
  "comment": "This class encompasses the \u0027north\u0027, \u0027east\u0027, \u0027south\u0027, \u0027west\u0027, \u0027up\u0027, \u0027down\u0027 boolean flags which are used to set which faces of the block textures are displayed on. \n\u003cbr\u003e Some blocks may not be able to have faces on all directions, use \n\u003ca href\u003d\"#getAllowedFaces()\"\u003e\u003ccode\u003egetAllowedFaces()\u003c/code\u003e\u003c/a\u003e to get all possible faces for this block. It is not valid to call any methods on non-allowed faces.",
  "tagMap": {}
}