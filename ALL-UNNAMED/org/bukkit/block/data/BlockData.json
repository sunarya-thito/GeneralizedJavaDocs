{
  "packageName": "org.bukkit.block.data",
  "simpleName": "BlockData",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Cloneable",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "org.bukkit.Material",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaterial",
      "comment": "Get the Material represented by this block data.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the material"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAsString",
      "comment": "Gets a string, which when passed into a method such as Server.createBlockData(java.lang.String) will unambiguously recreate this instance.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "serialized data string for this block"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAsString",
      "comment": "Gets a string, which when passed into a method such as Server.createBlockData(java.lang.String) will recreate this or a similar instance where unspecified states (if any) may be optionally omitted. If this instance was parsed and states are omitted, this exact instance will be creatable when parsed again, else their equality cannot be guaranteed. This method will only take effect for BlockData instances created by methods such as Server.createBlockData(String) or any similar method whereby states are optionally defined. If otherwise, the result of getAsString() will be returned. The following behaviour would be expected: \n String dataString \u003d \"minecraft:chest[waterlogged\u003dtrue]\"\n BlockData data \u003d Bukkit.createBlockData(dataString);\n dataString.equals(data.getAsString(true)); // This would return true\n dataString.equals(data.getAsString(false)); // This would return false as all states are present\n dataString.equals(data.getAsString()); // This is equivalent to the above, \"getAsString(false)\"",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ehideUnspecified\u003c/code\u003e - true if unspecified states should be omitted, false if they are to be shown as performed by \n\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/block/data/BlockData.html#getAsString()\"\u003e\u003ccode\u003egetAsString()\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "serialized data string for this block"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.block.data.BlockData",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "merge",
      "comment": "Merges all explicitly set states from the given data with this BlockData. Note that the given data MUST have been created from one of the String parse methods, e.g. Server.createBlockData(java.lang.String) and not have been subsequently modified. Note also that the block types must match identically.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - the data to merge from"
        ],
        "return": [
          "a new instance of this blockdata with the merged data"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "matches",
      "comment": "Checks if the specified BlockData matches this block data. The semantics of this method are such that for manually created or modified BlockData it has the same effect as Object.equals(java.lang.Object), whilst for parsed data (that to which merge(org.bukkit.block.data.BlockData) applies, it will return true when the type and all explicitly set states match. Note that these semantics mean that a.matches(b) may not be the same as b.matches(a)",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - the data to match against (normally a parsed constant)"
        ],
        "return": [
          "if there is a match"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.block.data.BlockData",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clone",
      "comment": "Returns a copy of this BlockData.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "a copy of the block data"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.SoundGroup",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSoundGroup",
      "comment": "Gets the block\u0027s SoundGroup which can be used to get its step sound, hit sound, and others.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the sound effect group"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.block.data.BlockData",
  "tagMap": {}
}