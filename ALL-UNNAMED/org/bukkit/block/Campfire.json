{
  "packageName": "org.bukkit.block",
  "simpleName": "Campfire",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.bukkit.block.TileState",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSize",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/inventory/Inventory.html#getSize()\"\u003e\u003ccode\u003eInventory.getSize()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "The size of the inventory"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.inventory.ItemStack",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getItem",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/inventory/Inventory.html#getItem(int)\"\u003e\u003ccode\u003eInventory.getItem(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - The index of the Slot\u0027s ItemStack to return"
        ],
        "return": [
          "The ItemStack in the slot"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setItem",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/inventory/Inventory.html#setItem(int,org.bukkit.inventory.ItemStack)\"\u003e\u003ccode\u003eInventory.setItem(int, org.bukkit.inventory.ItemStack)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - The index where to put the ItemStack",
          "\u003ccode\u003eitem\u003c/code\u003e - The ItemStack to set"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCookTime",
      "comment": "Get cook time. This is the amount of time the item has been cooking for.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - item slot index"
        ],
        "return": [
          "Cook time"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setCookTime",
      "comment": "Set cook time. This is the amount of time the item has been cooking for.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - item slot index",
          "\u003ccode\u003ecookTime\u003c/code\u003e - Cook time"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCookTimeTotal",
      "comment": "Get cook time total. This is the amount of time the item is required to cook for.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - item slot index"
        ],
        "return": [
          "Cook time total"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setCookTimeTotal",
      "comment": "Set cook time. This is the amount of time the item is required to cook for.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - item slot index",
          "\u003ccode\u003ecookTimeTotal\u003c/code\u003e - Cook time total"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.block.Campfire",
  "comment": "Represents a captured state of a campfire.",
  "tagMap": {}
}