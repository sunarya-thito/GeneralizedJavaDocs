{
  "packageName": "org.bukkit.conversations",
  "simpleName": "Conversation",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "org.bukkit.conversations.Prompt",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "currentPrompt",
      "tagMap": {}
    },
    {
      "type": {
        "name": "org.bukkit.conversations.ConversationContext",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "context",
      "tagMap": {}
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "modal",
      "tagMap": {}
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "localEchoEnabled",
      "tagMap": {}
    },
    {
      "type": {
        "name": "org.bukkit.conversations.ConversationPrefix",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "prefix",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "org.bukkit.conversations.ConversationCanceller",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "cancellers",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "org.bukkit.conversations.ConversationAbandonedListener",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "abandonedListeners",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.conversations.Conversable",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getForWhom",
      "comment": "Gets the entity for whom this conversation is mediating.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "The entity."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isModal",
      "comment": "Gets the modality of this conversation. If a conversation is modal, all messages directed to the player are suppressed for the duration of the conversation.",
      "tagMap": {
        "return": [
          "The conversation modality."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isLocalEchoEnabled",
      "comment": "Gets the status of local echo for this conversation. If local echo is enabled, any text submitted to a conversation gets echoed back into the submitter\u0027s chat window.",
      "tagMap": {
        "return": [
          "The status of local echo."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "localEchoEnabled"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLocalEchoEnabled",
      "comment": "Sets the status of local echo for this conversation. If local echo is enabled, any text submitted to a conversation gets echoed back into the submitter\u0027s chat window.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elocalEchoEnabled\u003c/code\u003e - The status of local echo."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.conversations.ConversationPrefix",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPrefix",
      "comment": "Gets the ConversationPrefix that prepends all output from this conversation.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "The ConversationPrefix in use."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "org.bukkit.conversations.ConversationCanceller",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCancellers",
      "comment": "Gets the list of ConversationCancellers",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "The list."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.conversations.ConversationContext",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getContext",
      "comment": "Returns the Conversation\u0027s ConversationContext.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "The ConversationContext."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "begin",
      "comment": "Displays the first prompt of this conversation and begins redirecting the user\u0027s chat responses.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.conversations.Conversation$ConversationState",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getState",
      "comment": "Returns Returns the current state of the conversation.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "The current state of the conversation."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "input"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "acceptInput",
      "comment": "Passes player input into the current prompt. The next prompt (as determined by the current prompt) is then displayed to the user.",
      "tagMap": {
        "param": [
          "\u003ccode\u003einput\u003c/code\u003e - The user\u0027s chat text."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.conversations.ConversationAbandonedListener",
            "type": "Class"
          },
          "field": {
            "name": "listener"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addConversationAbandonedListener",
      "comment": "Adds a ConversationAbandonedListener.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elistener\u003c/code\u003e - The listener to add."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.conversations.ConversationAbandonedListener",
            "type": "Class"
          },
          "field": {
            "name": "listener"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeConversationAbandonedListener",
      "comment": "Removes a ConversationAbandonedListener.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elistener\u003c/code\u003e - The listener to remove."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "abandon",
      "comment": "Abandons and resets the current conversation. Restores the user\u0027s normal chat behavior.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.conversations.ConversationAbandonedEvent",
            "type": "Class"
          },
          "field": {
            "name": "details"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "abandon",
      "comment": "Abandons and resets the current conversation. Restores the user\u0027s normal chat behavior.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edetails\u003c/code\u003e - Details about why the conversation was abandoned"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "outputNextPrompt",
      "comment": "Displays the next user prompt and abandons the conversation if the next prompt is null.",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "org.bukkit.plugin.Plugin",
            "type": "Class"
          },
          "field": {
            "name": "plugin"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.conversations.Conversable",
            "type": "Class"
          },
          "field": {
            "name": "forWhom"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "org.bukkit.conversations.Prompt",
            "type": "Class"
          },
          "field": {
            "name": "firstPrompt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Initializes a new Conversation.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eplugin\u003c/code\u003e - The plugin that owns this conversation.",
          "\u003ccode\u003eforWhom\u003c/code\u003e - The entity for whom this conversation is mediating.",
          "\u003ccode\u003efirstPrompt\u003c/code\u003e - The first prompt in the conversation graph."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "org.bukkit.plugin.Plugin",
            "type": "Class"
          },
          "field": {
            "name": "plugin"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.conversations.Conversable",
            "type": "Class"
          },
          "field": {
            "name": "forWhom"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "org.bukkit.conversations.Prompt",
            "type": "Class"
          },
          "field": {
            "name": "firstPrompt"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.Object",
                "type": "Class"
              },
              {
                "name": "java.lang.Object",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "initialSessionData"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Initializes a new Conversation.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eplugin\u003c/code\u003e - The plugin that owns this conversation.",
          "\u003ccode\u003eforWhom\u003c/code\u003e - The entity for whom this conversation is mediating.",
          "\u003ccode\u003efirstPrompt\u003c/code\u003e - The first prompt in the conversation graph.",
          "\u003ccode\u003einitialSessionData\u003c/code\u003e - Any initial values to put in the conversation context sessionData map."
        ]
      }
    }
  ],
  "innerClasses": [
    "org.bukkit.conversations.Conversation$ConversationState"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "org.bukkit.conversations.Conversation",
  "comment": "The Conversation class is responsible for tracking the current state of a conversation, displaying prompts to the user, and dispatching the user\u0027s response to the appropriate place. Conversation objects are not typically instantiated directly. Instead a \n\u003ca href\u003d\"ConversationFactory.html\" title\u003d\"class in org.bukkit.conversations\"\u003e\u003ccode\u003eConversationFactory\u003c/code\u003e\u003c/a\u003e is used to construct identical conversations on demand. \n\u003cp\u003e Conversation flow consists of a directed graph of \u003ca href\u003d\"Prompt.html\" title\u003d\"interface in org.bukkit.conversations\"\u003e\u003ccode\u003ePrompt\u003c/code\u003e\u003c/a\u003e objects. Each time a prompt gets input from the user, it must return the next prompt in the graph. Since each Prompt chooses the next Prompt, complex conversation trees can be implemented where the nature of the player\u0027s response directs the flow of the conversation. \u003c/p\u003e\n\u003cp\u003e Each conversation has a \u003ca href\u003d\"ConversationPrefix.html\" title\u003d\"interface in org.bukkit.conversations\"\u003e\u003ccode\u003eConversationPrefix\u003c/code\u003e\u003c/a\u003e that prepends all output from the conversation to the player. The ConversationPrefix can be used to display the plugin name or conversation status as the conversation evolves. \u003c/p\u003e\n\u003cp\u003e Each conversation has a timeout measured in the number of inactive seconds to wait before abandoning the conversation. If the inactivity timeout is reached, the conversation is abandoned and the user\u0027s incoming and outgoing chat is returned to normal. \u003c/p\u003e\n\u003cp\u003e You should not construct a conversation manually. Instead, use the \u003ca href\u003d\"ConversationFactory.html\" title\u003d\"class in org.bukkit.conversations\"\u003e\u003ccode\u003eConversationFactory\u003c/code\u003e\u003c/a\u003e for access to all available options.\u003c/p\u003e",
  "tagMap": {}
}