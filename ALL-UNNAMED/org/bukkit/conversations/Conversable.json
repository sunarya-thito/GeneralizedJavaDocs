{
  "packageName": "org.bukkit.conversations",
  "simpleName": "Conversable",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isConversing",
      "comment": "Tests to see of a Conversable object is actively engaged in a conversation.",
      "tagMap": {
        "return": [
          "True if a conversation is in progress"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "input"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "acceptConversationInput",
      "comment": "Accepts input into the active conversation. If no conversation is in progress, this method does nothing.",
      "tagMap": {
        "param": [
          "\u003ccode\u003einput\u003c/code\u003e - The input message into the conversation"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.conversations.Conversation",
            "type": "Class"
          },
          "field": {
            "name": "conversation"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "beginConversation",
      "comment": "Enters into a dialog with a Conversation object.",
      "tagMap": {
        "param": [
          "\u003ccode\u003econversation\u003c/code\u003e - The conversation to begin"
        ],
        "return": [
          "True if the conversation should proceed, false if it has been enqueued"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.conversations.Conversation",
            "type": "Class"
          },
          "field": {
            "name": "conversation"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "abandonConversation",
      "comment": "Abandons an active conversation.",
      "tagMap": {
        "param": [
          "\u003ccode\u003econversation\u003c/code\u003e - The conversation to abandon"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.conversations.Conversation",
            "type": "Class"
          },
          "field": {
            "name": "conversation"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.conversations.ConversationAbandonedEvent",
            "type": "Class"
          },
          "field": {
            "name": "details"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "abandonConversation",
      "comment": "Abandons an active conversation.",
      "tagMap": {
        "param": [
          "\u003ccode\u003econversation\u003c/code\u003e - The conversation to abandon",
          "\u003ccode\u003edetails\u003c/code\u003e - Details about why the conversation was abandoned"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "message"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "sendRawMessage",
      "comment": "Sends this sender a message raw",
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - Message to be displayed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "java.util.UUID",
            "type": "Class"
          },
          "field": {
            "name": "sender"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "message"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "sendRawMessage",
      "comment": "Sends this sender a message raw",
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - Message to be displayed",
          "\u003ccode\u003esender\u003c/code\u003e - The sender of this message"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.conversations.Conversable",
  "comment": "The Conversable interface is used to indicate objects that can have conversations.",
  "tagMap": {}
}