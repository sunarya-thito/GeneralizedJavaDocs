{
  "packageName": "org.bukkit",
  "simpleName": "Tone",
  "moduleName": "ALL-UNNAMED",
  "type": "ENUM",
  "superClass": {
    "name": "java.lang.Enum",
    "parameters": [
      {
        "name": "org.bukkit.Note$Tone",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "byte",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TONES_COUNT",
      "comment": "The number of tones including sharped tones.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/constant-values.html#org.bukkit.Note.Tone.TONES_COUNT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Note$Tone",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "values",
      "comment": "Returns an array containing the constants of this enum type, in the order they are declared.",
      "tagMap": {
        "return": [
          "an array containing the constants of this enum type, in the order they are declared"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Note$Tone",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "valueOf",
      "comment": "Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the enum constant to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this enum type has no constant with the specified name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/NullPointerException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the argument is null"
        ],
        "return": [
          "the enum constant with the specified name"
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getId",
      "comment": "Returns the not sharped id of this tone.",
      "annotations": [
        {
          "type": "java.lang.Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "the not sharped id of this tone."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "sharped"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getId",
      "comment": "Returns the id of this tone. These method allows to return the sharped id of the tone. If the tone couldn\u0027t be sharped it always return the not sharped id of this tone.",
      "annotations": [
        {
          "type": "java.lang.Deprecated"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003esharped\u003c/code\u003e - Set to true to return the sharped id."
        ],
        "return": [
          "the id of this tone."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isSharpable",
      "comment": "Returns if this tone could be sharped.",
      "tagMap": {
        "return": [
          "if this tone could be sharped."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isSharped",
      "comment": "Returns if this tone id is the sharped id of the tone.",
      "annotations": [
        {
          "type": "java.lang.Deprecated"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eid\u003c/code\u003e - the id of the tone."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if neither the tone nor the semitone have the id."
        ],
        "return": [
          "if the tone id is the sharped id of the tone."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Note$Tone",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getById",
      "comment": "Returns the tone to id. Also returning the semitones.",
      "annotations": [
        {
          "type": "java.lang.Deprecated"
        },
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eid\u003c/code\u003e - the id of the tone."
        ],
        "return": [
          "the tone to id."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 9,
  "name": "org.bukkit.Note$Tone",
  "comment": "An enum holding tones.",
  "tagMap": {}
}