{
  "packageName": "org.bukkit",
  "simpleName": "Statistic",
  "moduleName": "ALL-UNNAMED",
  "type": "ENUM",
  "superClass": {
    "name": "java.lang.Enum",
    "parameters": [
      {
        "name": "org.bukkit.Statistic",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "org.bukkit.Statistic",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "values",
      "comment": "Returns an array containing the constants of this enum type, in the order they are declared.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an array containing the constants of this enum type, in the order they are declared"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Statistic",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "valueOf",
      "comment": "Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the enum constant to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this enum type has no constant with the specified name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/javase/8/docs/api/java/lang/NullPointerException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the argument is null"
        ],
        "return": [
          "the enum constant with the specified name"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Statistic$Type",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getType",
      "comment": "Gets the type of this statistic.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the type of this statistic"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isSubstatistic",
      "comment": "Checks if this is a substatistic. A substatistic exists en masse for each block, item, or entitytype, depending on getType(). This is a redundant method and equivalent to checking getType() !\u003d Type.UNTYPED",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if this is a substatistic"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isBlock",
      "comment": "Checks if this is a substatistic dealing with blocks. This is a redundant method and equivalent to checking getType() \u003d\u003d Type.BLOCK",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if this deals with blocks"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.NamespacedKey",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getKey",
      "comment": "Description copied from interface: Keyed",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Keyed.html#getKey()\"\u003egetKey\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Keyed.html\" title\u003d\"interface in org.bukkit\"\u003eKeyed\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "this object\u0027s key"
        ]
      }
    }
  ],
  "innerClasses": [
    "org.bukkit.Statistic$Type"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "org.bukkit.Statistic",
  "comment": "Represents a countable statistic, which is tracked by the server.",
  "tagMap": {}
}