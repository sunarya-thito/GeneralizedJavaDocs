{
  "packageName": "org.bukkit.scoreboard",
  "simpleName": "Score",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "org.bukkit.OfflinePlayer",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPlayer",
      "comment": "Gets the OfflinePlayer being tracked by this Score",
      "annotations": [
        {
          "type": {
            "name": "java.lang.Deprecated",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/scoreboard/Score.html#getEntry()\"\u003e\u003ccode\u003egetEntry()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "this Score\u0027s tracked player"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEntry",
      "comment": "Gets the entry being tracked by this Score",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "this Score\u0027s tracked entry"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.scoreboard.Objective",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getObjective",
      "comment": "Gets the Objective being tracked by this Score",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "this Score\u0027s tracked objective"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getScore",
      "comment": "Gets the current score",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the associated objective has been unregistered"
        ],
        "return": [
          "the current score"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setScore",
      "comment": "Sets the current score.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003escore\u003c/code\u003e - New score"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the associated objective has been unregistered"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isScoreSet",
      "comment": "Shows if this score has been set at any point in time.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the associated objective has been unregistered"
        ],
        "return": [
          "if this score has been set before"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.scoreboard.Scoreboard",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getScoreboard",
      "comment": "Gets the scoreboard for the associated objective.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the owning objective\u0027s scoreboard, or null if it has been \n\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/scoreboard/Objective.html#unregister()\"\u003e\u003ccode\u003eunregistered\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.scoreboard.Score",
  "comment": "A score entry for an \n\u003ca href\u003d\"#getEntry()\"\u003e\u003ccode\u003eentry\u003c/code\u003e\u003c/a\u003e on an \n\u003ca href\u003d\"#getObjective()\"\u003e\u003ccode\u003eobjective\u003c/code\u003e\u003c/a\u003e. Changing this will not affect any other objective or scoreboard.",
  "tagMap": {}
}