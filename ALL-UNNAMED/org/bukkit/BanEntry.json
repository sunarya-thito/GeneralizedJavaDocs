{
  "packageName": "org.bukkit",
  "simpleName": "BanEntry",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTarget",
      "comment": "Gets the target involved. This may be in the form of an IP or a player name.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the target name or IP address"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Date",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCreated",
      "comment": "Gets the date this ban entry was created.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the creation date"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setCreated",
      "comment": "Sets the date this ban entry was created.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/BanEntry.html#save()\"\u003e\u003ccode\u003esaving changes\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecreated\u003c/code\u003e - the new created date, cannot be null"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSource",
      "comment": "Gets the source of this ban. Note: A source is considered any String, although this is generally a player name.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the source of the ban"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setSource",
      "comment": "Sets the source of this ban. Note: A source is considered any String, although this is generally a player name.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/BanEntry.html#save()\"\u003e\u003ccode\u003esaving changes\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the new source where null values become empty strings"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Date",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getExpiration",
      "comment": "Gets the date this ban expires on, or null for no defined end date.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the expiration date"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setExpiration",
      "comment": "Sets the date this ban expires on. Null values are considered \"infinite\" bans.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/BanEntry.html#save()\"\u003e\u003ccode\u003esaving changes\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eexpiration\u003c/code\u003e - the new expiration date, or null to indicate an eternity"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getReason",
      "comment": "Gets the reason for this ban.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the ban reason, or null if not set"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setReason",
      "comment": "Sets the reason for this ban. Reasons must not be null.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/BanEntry.html#save()\"\u003e\u003ccode\u003esaving changes\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ereason\u003c/code\u003e - the new reason, null values assume the implementation default"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "save",
      "comment": "Saves the ban entry, overwriting any previous data in the ban list. Saving the ban entry of an unbanned player will cause the player to be banned once again.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.BanEntry",
  "comment": "A single entry from a ban list. This may represent either a player ban or an IP ban. \n\u003cp\u003e Ban entries include the following properties: \u003c/p\u003e\n\u003ctable border\u003d\"1\"\u003e \n \u003ccaption\u003e\n  Property information\n \u003c/caption\u003e \n \u003ctbody\u003e\n  \u003ctr\u003e \n   \u003cth\u003eProperty\u003c/th\u003e \n   \u003cth\u003eDescription\u003c/th\u003e \n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003ctd\u003eTarget Name / IP Address\u003c/td\u003e \n   \u003ctd\u003eThe target name or IP address\u003c/td\u003e \n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003ctd\u003eCreation Date\u003c/td\u003e \n   \u003ctd\u003eThe creation date of the ban\u003c/td\u003e \n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003ctd\u003eSource\u003c/td\u003e \n   \u003ctd\u003eThe source of the ban, such as a player, console, plugin, etc\u003c/td\u003e \n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003ctd\u003eExpiration Date\u003c/td\u003e \n   \u003ctd\u003eThe expiration date of the ban\u003c/td\u003e \n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003ctd\u003eReason\u003c/td\u003e \n   \u003ctd\u003eThe reason for the ban\u003c/td\u003e \n  \u003c/tr\u003e \n \u003c/tbody\u003e\n\u003c/table\u003e \n\u003cp\u003e Unsaved information is not automatically written to the implementation\u0027s ban list, instead, the \u003ca href\u003d\"#save()\"\u003e\u003ccode\u003esave()\u003c/code\u003e\u003c/a\u003e method must be called to write the changes to the ban list. If this ban entry has expired (such as from an unban) and is no longer found in the list, the \u003ca href\u003d\"#save()\"\u003e\u003ccode\u003esave()\u003c/code\u003e\u003c/a\u003e call will re-add it to the list, therefore banning the victim specified. \u003c/p\u003e\n\u003cp\u003e Likewise, changes to the associated \u003ca href\u003d\"BanList.html\" title\u003d\"interface in org.bukkit\"\u003e\u003ccode\u003eBanList\u003c/code\u003e\u003c/a\u003e or other entries may or may not be reflected in this entry.\u003c/p\u003e",
  "tagMap": {}
}