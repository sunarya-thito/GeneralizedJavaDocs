{
  "packageName": "io.papermc.paper.text",
  "simpleName": "PaperComponents",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "net.kyori.adventure.text.flattener.ComponentFlattener",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "flattener",
      "comment": "Return a component flattener that can use game data to resolve extra information about components.",
      "annotations": [
        {
          "type": {
            "name": "NonNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "a component flattener"
        ]
      }
    },
    {
      "returnType": {
        "name": "net.kyori.adventure.text.serializer.plain.PlainComponentSerializer",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "plainSerializer",
      "comment": "Get a serializer for Components that will convert components to a plain-text string. Implementations may provide a serializer capable of processing any information that requires access to implementation details.",
      "annotations": [
        {
          "type": {
            "name": "NonNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "a serializer to plain text"
        ]
      }
    },
    {
      "returnType": {
        "name": "net.kyori.adventure.text.serializer.gson.GsonComponentSerializer",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "gsonSerializer",
      "comment": "Get a serializer for Components that will convert to and from the standard JSON serialization format using Gson. Implementations may provide a serializer capable of processing any information that requires implementation details, such as legacy (pre-1.16) hover events.",
      "annotations": [
        {
          "type": {
            "name": "NonNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "a json component serializer"
        ]
      }
    },
    {
      "returnType": {
        "name": "net.kyori.adventure.text.serializer.gson.GsonComponentSerializer",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "colorDownsamplingGsonSerializer",
      "comment": "Get a serializer for Components that will convert to and from the standard JSON serialization format using Gson, downsampling any RGB colors to their nearest NamedTextColor counterpart. Implementations may provide a serializer capable of processing any information that requires implementation details, such as legacy (pre-1.16) hover events.",
      "annotations": [
        {
          "type": {
            "name": "NonNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "a json component serializer"
        ]
      }
    },
    {
      "returnType": {
        "name": "net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "legacySectionSerializer",
      "comment": "Get a serializer for Components that will convert to and from the legacy component format used by Bukkit. This serializer uses the LegacyComponentSerializer.Builder.useUnusualXRepeatedCharacterHexFormat() option to match upstream behavior. This legacy serializer uses the standard section symbol to mark formatting characters. Implementations may provide a serializer capable of processing any information that requires access to implementation details.",
      "annotations": [
        {
          "type": {
            "name": "NonNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "a section serializer"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "io.papermc.paper.text.PaperComponents",
  "comment": "Paper API-specific methods for working with \n\u003ca href\u003d\"https://jd.adventure.kyori.net/api/4.8.1/net/kyori/adventure/text/Component.html\" title\u003d\"class or interface in net.kyori.adventure.text\" class\u003d\"external-link\"\u003e\u003ccode\u003eComponent\u003c/code\u003e\u003c/a\u003es and related.",
  "tagMap": {}
}