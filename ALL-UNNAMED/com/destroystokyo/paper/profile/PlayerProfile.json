{
  "packageName": "com.destroystokyo.paper.profile",
  "simpleName": "PlayerProfile",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getName",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The players name, if set"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setName",
      "comment": "Sets this profiles Name",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The new Name"
        ],
        "return": [
          "The previous Name"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.UUID",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getId",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The players unique identifier, if set"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.UUID",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setId",
      "comment": "Sets this profiles UUID",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.Nullable",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003euuid\u003c/code\u003e - The new UUID"
        ],
        "return": [
          "The previous UUID"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "com.destroystokyo.paper.profile.ProfileProperty",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getProperties",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "A Mutable set of this players properties, such as textures. Values specified here are subject to implementation details."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasProperty",
      "comment": "Check if the Profile has the specified property",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eproperty\u003c/code\u003e - Property name to check"
        ],
        "return": [
          "If the property is set"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setProperty",
      "comment": "Sets a property. If the property already exists, the previous one will be replaced",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eproperty\u003c/code\u003e - Property to set."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setProperties",
      "comment": "Sets multiple properties. If any of the set properties already exist, it will be replaced",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eproperties\u003c/code\u003e - The properties to set"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeProperty",
      "comment": "Removes a specific property from this profile",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eproperty\u003c/code\u003e - The property to remove"
        ],
        "return": [
          "If a property was removed"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeProperty",
      "comment": "Removes a specific property from this profile",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eproperty\u003c/code\u003e - The property to remove"
        ],
        "return": [
          "If a property was removed"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeProperties",
      "comment": "Removes all properties in the collection",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eproperties\u003c/code\u003e - The properties to remove"
        ],
        "return": [
          "If any property was removed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clearProperties",
      "comment": "Clears all properties on this profile",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isComplete",
      "annotations": [],
      "tagMap": {
        "return": [
          "If the profile is now complete (has UUID and Name)"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "completeFromCache",
      "comment": "Like complete(boolean) but will try only from cache, and not make network calls Does not account for textures.",
      "annotations": [],
      "tagMap": {
        "return": [
          "If the profile is now complete (has UUID and Name)"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "completeFromCache",
      "comment": "Like complete(boolean) but will try only from cache, and not make network calls Does not account for textures.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eonlineMode\u003c/code\u003e - Treat this as online mode or not"
        ],
        "return": [
          "If the profile is now complete (has UUID and Name)"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "completeFromCache",
      "comment": "Like complete(boolean) but will try only from cache, and not make network calls Does not account for textures.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elookupUUID\u003c/code\u003e - If only name is supplied, should we do a UUID lookup",
          "\u003ccode\u003eonlineMode\u003c/code\u003e - Treat this as online mode or not"
        ],
        "return": [
          "If the profile is now complete (has UUID and Name)"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "complete",
      "comment": "If this profile is not complete, then make the API call to complete it. This is a blocking operation and should be done asynchronously. This will also complete textures. If you do not want to load textures, use {complete(boolean)}",
      "annotations": [],
      "tagMap": {
        "return": [
          "If the profile is now complete (has UUID and Name) (if you get rate limited, this operation may fail)"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "complete",
      "comment": "If this profile is not complete, then make the API call to complete it. This is a blocking operation and should be done asynchronously. Optionally will also fill textures. Online mode will be automatically determined",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etextures\u003c/code\u003e - controls if we should fill the profile with texture properties"
        ],
        "return": [
          "If the profile is now complete (has UUID and Name) (if you get rate limited, this operation may fail)"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "complete",
      "comment": "If this profile is not complete, then make the API call to complete it. This is a blocking operation and should be done asynchronously. Optionally will also fill textures.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etextures\u003c/code\u003e - controls if we should fill the profile with texture properties",
          "\u003ccode\u003eonlineMode\u003c/code\u003e - Treat this server as online mode or not"
        ],
        "return": [
          "If the profile is now complete (has UUID and Name) (if you get rate limited, this operation may fail)"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasTextures",
      "comment": "Whether or not this Profile has textures associated to it",
      "annotations": [],
      "tagMap": {
        "return": [
          "If has a textures property"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.destroystokyo.paper.profile.PlayerProfile",
  "comment": "Represents a players profile for the game, such as UUID, Name, and textures.",
  "tagMap": {}
}