{
  "packageName": "com.destroystokyo.paper.entity",
  "simpleName": "Pathfinder",
  "moduleName": "ALL-UNNAMED",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "org.bukkit.entity.Mob",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEntity",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "The entity that is controlled by this pathfinder"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "stopPathfinding",
      "comment": "Instructs the Entity to stop trying to navigate to its current desired location",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasPath",
      "comment": "If the entity is currently trying to navigate to a destination, this will return true",
      "tagMap": {
        "return": [
          "true if the entity is navigating to a destination"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.destroystokyo.paper.entity.Pathfinder$PathResult",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCurrentPath",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        },
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "return": [
          "The location the entity is trying to navigate to, or null if there is no destination"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.destroystokyo.paper.entity.Pathfinder$PathResult",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.Location",
            "type": "Class"
          },
          "field": {
            "name": "loc"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "findPath",
      "comment": "Calculates a destination for the Entity to navigate to, but does not set it as the current target. Useful for calculating what would happen before setting it.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        },
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eloc\u003c/code\u003e - Location to navigate to"
        ],
        "return": [
          "The closest Location the Entity can get to for this navigation, or null if no path could be calculated"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.destroystokyo.paper.entity.Pathfinder$PathResult",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.entity.LivingEntity",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "findPath",
      "comment": "Calculates a destination for the Entity to navigate to to reach the target entity, but does not set it as the current target. Useful for calculating what would happen before setting it. The behavior of this PathResult is subject to the games pathfinding rules, and may result in the pathfinding automatically updating to follow the target Entity. However, this behavior is not guaranteed, and is subject to the games behavior.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        },
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the Entity to navigate to"
        ],
        "return": [
          "The closest Location the Entity can get to for this navigation, or null if no path could be calculated"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.Location",
            "type": "Class"
          },
          "field": {
            "name": "loc"
          }
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "moveTo",
      "comment": "Calculates a destination for the Entity to navigate to, and sets it with default speed as the current target.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eloc\u003c/code\u003e - Location to navigate to"
        ],
        "return": [
          "If the pathfinding was successfully started"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.Location",
            "type": "Class"
          },
          "field": {
            "name": "loc"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "speed"
          }
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "moveTo",
      "comment": "Calculates a destination for the Entity to navigate to, with desired speed as the current target.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eloc\u003c/code\u003e - Location to navigate to",
          "\u003ccode\u003espeed\u003c/code\u003e - Speed multiplier to navigate at, where 1 is \u0027normal\u0027"
        ],
        "return": [
          "If the pathfinding was successfully started"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.entity.LivingEntity",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "moveTo",
      "comment": "Calculates a destination for the Entity to navigate to to reach the target entity, and sets it with default speed. The behavior of this PathResult is subject to the games pathfinding rules, and may result in the pathfinding automatically updating to follow the target Entity. However, this behavior is not guaranteed, and is subject to the games behavior.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the Entity to navigate to"
        ],
        "return": [
          "If the pathfinding was successfully started"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "org.bukkit.entity.LivingEntity",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "speed"
          }
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "moveTo",
      "comment": "Calculates a destination for the Entity to navigate to to reach the target entity, and sets it with specified speed. The behavior of this PathResult is subject to the games pathfinding rules, and may result in the pathfinding automatically updating to follow the target Entity. However, this behavior is not guaranteed, and is subject to the games behavior.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the Entity to navigate to",
          "\u003ccode\u003espeed\u003c/code\u003e - Speed multiplier to navigate at, where 1 is \u0027normal\u0027"
        ],
        "return": [
          "If the pathfinding was successfully started"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "com.destroystokyo.paper.entity.Pathfinder$PathResult",
            "type": "Class"
          },
          "field": {
            "name": "path"
          }
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "moveTo",
      "comment": "Takes the result of a previous pathfinding calculation and sets it as the active pathfinding with default speed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epath\u003c/code\u003e - The Path to start following"
        ],
        "return": [
          "If the pathfinding was successfully started"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "com.destroystokyo.paper.entity.Pathfinder$PathResult",
            "type": "Class"
          },
          "field": {
            "name": "path"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "speed"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "moveTo",
      "comment": "Takes the result of a previous pathfinding calculation and sets it as the active pathfinding,",
      "tagMap": {
        "param": [
          "\u003ccode\u003epath\u003c/code\u003e - The Path to start following",
          "\u003ccode\u003espeed\u003c/code\u003e - Speed multiplier to navigate at, where 1 is \u0027normal\u0027"
        ],
        "return": [
          "If the pathfinding was successfully started"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canOpenDoors",
      "comment": "Checks if this pathfinder allows passing through closed doors.",
      "tagMap": {
        "return": [
          "if this pathfinder allows passing through closed doors"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "canOpenDoors"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setCanOpenDoors",
      "comment": "Allows this pathfinder to pass through closed doors, or not",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecanOpenDoors\u003c/code\u003e - if the mob can pass through closed doors, or not"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canPassDoors",
      "comment": "Checks if this pathfinder allows passing through open doors.",
      "tagMap": {
        "return": [
          "if this pathfinder allows passing through open doors"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "canPassDoors"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setCanPassDoors",
      "comment": "Allows this pathfinder to pass through open doors, or not",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecanPassDoors\u003c/code\u003e - if the mob can pass through open doors, or not"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canFloat",
      "comment": "Checks if this pathfinder assumes that the mob can float",
      "tagMap": {
        "return": [
          "if this pathfinder assumes that the mob can float"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "canFloat"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setCanFloat",
      "comment": "Makes this pathfinder assume that the mob can float, or not",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecanFloat\u003c/code\u003e - if the mob can float, or not"
        ]
      }
    }
  ],
  "innerClasses": [
    "com.destroystokyo.paper.entity.Pathfinder$PathResult"
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.destroystokyo.paper.entity.Pathfinder",
  "comment": "Handles pathfinding operations for an Entity",
  "tagMap": {}
}