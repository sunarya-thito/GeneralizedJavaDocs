{
  "packageName": "com.destroystokyo.paper.event.player",
  "simpleName": "PlayerJumpEvent",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "org.bukkit.event.player.PlayerEvent",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isCancelled",
      "comment": "Gets the cancellation state of this event. A cancelled event will not be executed in the server, but will still pass to other plugins If a jump event is cancelled, the player will be moved or teleported back to the Location as defined by getFrom(). This will not fire an event",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Cancellable.html#isCancelled()\"\u003eisCancelled\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Cancellable.html\" title\u003d\"interface in org.bukkit.event\"\u003eCancellable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if this event is cancelled"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setCancelled",
      "comment": "Sets the cancellation state of this event. A cancelled event will not be executed in the server, but will still pass to other plugins If a jump event is cancelled, the player will be moved or teleported back to the Location as defined by getFrom(). This will not fire an event",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Cancellable.html#setCancelled(boolean)\"\u003esetCancelled\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Cancellable.html\" title\u003d\"interface in org.bukkit.event\"\u003eCancellable\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecancel\u003c/code\u003e - true if you wish to cancel this event"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Location",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getFrom",
      "comment": "Gets the location this player jumped from",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "Location the player jumped from"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setFrom",
      "comment": "Sets the location to mark as where the player jumped from",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efrom\u003c/code\u003e - New location to mark as the players previous location"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.Location",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTo",
      "comment": "Gets the location this player jumped to This information is based on what the client sends, it typically has little relation to the arc of the jump at any given point.",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "Location the player jumped to"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.event.HandlerList",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHandlers",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Event.html#getHandlers()\"\u003egetHandlers\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Event.html\" title\u003d\"class in org.bukkit.event\"\u003eEvent\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.event.HandlerList",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getHandlerList",
      "annotations": [
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        },
        {
          "type": {
            "name": "org.jetbrains.annotations.NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            },
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.entity.Player",
            "type": "Class"
          },
          "name": "player",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            },
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.Location",
            "type": "Class"
          },
          "name": "from",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            },
            {
              "type": {
                "name": "org.jetbrains.annotations.NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.Location",
            "type": "Class"
          },
          "name": "to",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "com.destroystokyo.paper.event.player.PlayerJumpEvent",
  "comment": "Called when the server detects the player is jumping. \n\u003cp\u003e Added to avoid the overhead and special case logic that many plugins use when checking for jumps via PlayerMoveEvent, this event is fired whenever the server detects that the player is jumping.\u003c/p\u003e",
  "tagMap": {}
}