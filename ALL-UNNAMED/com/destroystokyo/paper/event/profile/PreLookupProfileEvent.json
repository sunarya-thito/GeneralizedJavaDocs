{
  "packageName": "com.destroystokyo.paper.event.profile",
  "simpleName": "PreLookupProfileEvent",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "org.bukkit.event.Event",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getName",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "Name of the profile"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.UUID",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUUID",
      "comment": "If this value is left null by the completion of the event call, then the server will trigger a call to the Mojang API to look up the UUID (Network Request), and subsequently, fire a LookupProfileEvent",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        },
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "return": [
          "The UUID of the profile if it has already been provided by a plugin"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            },
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "java.util.UUID",
            "type": "Class"
          },
          "field": {
            "name": "uuid"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setUUID",
      "comment": "Sets the UUID for this player name. This will skip the initial API call to find the players UUID. However, if Profile Properties are needed by the server, you must also set them or else an API call might still be made.",
      "tagMap": {
        "param": [
          "\u003ccode\u003euuid\u003c/code\u003e - the UUID to set for the profile or null to reset"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "com.destroystokyo.paper.profile.ProfileProperty",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getProfileProperties",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "The currently pending prepopulated properties. Any property in this Set will be automatically prefilled on this Profile"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "com.destroystokyo.paper.profile.ProfileProperty",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "properties"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setProfileProperties",
      "comment": "Clears any existing prepopulated properties and uses the supplied properties Any property in this Set will be automatically prefilled on this Profile",
      "tagMap": {
        "param": [
          "\u003ccode\u003eproperties\u003c/code\u003e - The properties to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "com.destroystokyo.paper.profile.ProfileProperty",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "properties"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addProfileProperties",
      "comment": "Adds any properties currently missing to the prepopulated properties set, replacing any that already were set. Any property in this Set will be automatically prefilled on this Profile",
      "tagMap": {
        "param": [
          "\u003ccode\u003eproperties\u003c/code\u003e - The properties to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.event.HandlerList",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHandlers",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Event.html#getHandlers()\"\u003egetHandlers\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Event.html\" title\u003d\"class in org.bukkit.event\"\u003eEvent\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.event.HandlerList",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getHandlerList",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "com.destroystokyo.paper.event.profile.PreLookupProfileEvent",
  "comment": "Allows a plugin to intercept a Profile Lookup for a Profile by name At the point of event fire, the UUID and properties are unset. If a plugin sets the UUID, and optionally the properties, the API call to look up the profile may be skipped. No guarantees are made about thread execution context for this event. If you need to know, check event.isAsync()",
  "tagMap": {}
}