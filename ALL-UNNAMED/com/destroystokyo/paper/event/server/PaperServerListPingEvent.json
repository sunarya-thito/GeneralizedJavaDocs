{
  "packageName": "com.destroystokyo.paper.event.server",
  "simpleName": "PaperServerListPingEvent",
  "moduleName": "ALL-UNNAMED",
  "type": "CLASS",
  "superClass": {
    "name": "org.bukkit.event.server.ServerListPingEvent",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "com.destroystokyo.paper.network.StatusClient",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getClient",
      "comment": "Returns the StatusClient pinging the server.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "The client"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNumPlayers",
      "comment": "Get the number of players sent. Returns -1 if players are hidden using shouldHidePlayers().",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/server/ServerListPingEvent.html#getNumPlayers()\"\u003egetNumPlayers\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/server/ServerListPingEvent.html\" title\u003d\"class in org.bukkit.event.server\"\u003eServerListPingEvent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the number of players"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "numPlayers"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setNumPlayers",
      "comment": "Sets the number of players displayed in the server list. Note that this won\u0027t have any effect if shouldHidePlayers() is enabled.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enumPlayers\u003c/code\u003e - The number of online players"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMaxPlayers",
      "comment": "Get the maximum number of players sent. Returns -1 if players are hidden using shouldHidePlayers().",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/server/ServerListPingEvent.html#getMaxPlayers()\"\u003egetMaxPlayers\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/server/ServerListPingEvent.html\" title\u003d\"class in org.bukkit.event.server\"\u003eServerListPingEvent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the maximum number of players"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "shouldHidePlayers",
      "comment": "Returns whether all player related information is hidden in the server list. This will cause getNumPlayers(), getMaxPlayers() and getPlayerSample() to be skipped in the response. The Vanilla Minecraft client will display the player count as ??? when this option is enabled.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the player count is hidden"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "hidePlayers"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setHidePlayers",
      "comment": "Sets whether all player related information is hidden in the server list. This will cause getNumPlayers(), getMaxPlayers() and getPlayerSample() to be skipped in the response. The Vanilla Minecraft client will display the player count as ??? when this option is enabled.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ehidePlayers\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the player count should be hidden"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "com.destroystokyo.paper.profile.PlayerProfile",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPlayerSample",
      "comment": "Returns a mutable list of PlayerProfile that will be displayed as online players on the client. The Vanilla Minecraft client will display them when hovering the player count with the mouse.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "The mutable player sample list"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getVersion",
      "comment": "Returns the version that will be sent as server version on the client.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "return": [
          "The server version"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "version"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setVersion",
      "comment": "Sets the version that will be sent as server version to the client.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eversion\u003c/code\u003e - The server version"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getProtocolVersion",
      "comment": "Returns the protocol version that will be sent as the protocol version of the server to the client.",
      "tagMap": {
        "return": [
          "The protocol version of the server, or \n\u003ccode\u003e-1\u003c/code\u003e if the server has not finished initialization yet"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "protocolVersion"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setProtocolVersion",
      "comment": "Sets the protocol version that will be sent as the protocol version of the server to the client.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprotocolVersion\u003c/code\u003e - The protocol version of the server"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.util.CachedServerIcon",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getServerIcon",
      "comment": "Gets the server icon sent to the client.",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.Nullable"
        },
        {
          "type": "org.jetbrains.annotations.Nullable"
        }
      ],
      "tagMap": {
        "return": [
          "The icon to send to the client, or \n\u003ccode\u003enull\u003c/code\u003e for none"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            },
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "org.bukkit.util.CachedServerIcon",
            "type": "Class"
          },
          "field": {
            "name": "icon"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setServerIcon",
      "comment": "Sets the server icon sent to the client.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/server/ServerListPingEvent.html#setServerIcon(org.bukkit.util.CachedServerIcon)\"\u003esetServerIcon\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/server/ServerListPingEvent.html\" title\u003d\"class in org.bukkit.event.server\"\u003eServerListPingEvent\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eicon\u003c/code\u003e - The icon to send to the client, or \n\u003ccode\u003enull\u003c/code\u003e for none"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isCancelled",
      "comment": "Gets the cancellation state of this event. A cancelled event will not be executed in the server, but will still pass to other plugins Cancelling this event will cause the connection to be closed immediately, without sending a response to the client.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Cancellable.html#isCancelled()\"\u003eisCancelled\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Cancellable.html\" title\u003d\"interface in org.bukkit.event\"\u003eCancellable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if this event is cancelled"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "cancel"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setCancelled",
      "comment": "Sets the cancellation state of this event. A cancelled event will not be executed in the server, but will still pass to other plugins. Cancelling this event will cause the connection to be closed immediately, without sending a response to the client.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Cancellable.html#setCancelled(boolean)\"\u003esetCancelled\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/Cancellable.html\" title\u003d\"interface in org.bukkit.event\"\u003eCancellable\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecancel\u003c/code\u003e - true if you wish to cancel this event"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Iterator",
        "parameters": [
          {
            "name": "org.bukkit.entity.Player",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "iterator",
      "comment": "Calling the Iterator.remove() method will force that particular player to not be displayed on the player list, decrease the size returned by ServerListPingEvent.getNumPlayers(), and will not be returned again by any new iterator. Note: For compatibility reasons, this method will return all online players, not just the ones referenced in getPlayerSample(). Removing a player will: Decrement the online player count (if and only if) the player count wasn\u0027t changed by another plugin before. Remove all entries from getPlayerSample() that refer to the removed player (based on their UUID).",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/server/ServerListPingEvent.html#iterator()\"\u003eiterator\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/event/server/ServerListPingEvent.html\" title\u003d\"class in org.bukkit.event.server\"\u003eServerListPingEvent\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Iterable.html#iterator()\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eiterator\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Iterable.html\" title\u003d\"class or interface in java.lang\" class\u003d\"external-link\"\u003eIterable\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://papermc.io/javadocs/paper/1.17/org/bukkit/entity/Player.html\" title\u003d\"interface in org.bukkit.entity\"\u003ePlayer\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getOnlinePlayers",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.bukkit.entity.Player",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "player"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getBukkitPlayer",
      "annotations": [
        {
          "type": "org.jetbrains.annotations.NotNull"
        },
        {
          "type": "org.jetbrains.annotations.NotNull"
        }
      ],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "com.destroystokyo.paper.network.StatusClient",
            "type": "Class"
          },
          "field": {
            "name": "client"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "motd"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "numPlayers"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "maxPlayers"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "version"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "protocolVersion"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            },
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "org.bukkit.util.CachedServerIcon",
            "type": "Class"
          },
          "field": {
            "name": "favicon"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "annotations": [
        {
          "type": "java.lang.Deprecated"
        }
      ],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "com.destroystokyo.paper.network.StatusClient",
            "type": "Class"
          },
          "field": {
            "name": "client"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "net.kyori.adventure.text.Component",
            "type": "Class"
          },
          "field": {
            "name": "motd"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "numPlayers"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "maxPlayers"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.NotNull"
            },
            {
              "type": "org.jetbrains.annotations.NotNull"
            }
          ],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "version"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "protocolVersion"
          }
        },
        {
          "annotations": [
            {
              "type": "org.jetbrains.annotations.Nullable"
            },
            {
              "type": "org.jetbrains.annotations.Nullable"
            }
          ],
          "type": {
            "name": "org.bukkit.util.CachedServerIcon",
            "type": "Class"
          },
          "field": {
            "name": "favicon"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "com.destroystokyo.paper.event.server.PaperServerListPingEvent",
  "comment": "Extended version of \n\u003ca href\u003d\"../../../../../org/bukkit/event/server/ServerListPingEvent.html\" title\u003d\"class in org.bukkit.event.server\"\u003e\u003ccode\u003eServerListPingEvent\u003c/code\u003e\u003c/a\u003e that allows full control of the response sent to the client.",
  "tagMap": {}
}