{
  "packageName": "org.w3c.dom",
  "simpleName": "DOMConfiguration",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.w3c.dom.DOMException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setParameter",
      "comment": "Set the value of a parameter.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the parameter to set.",
          "\u003ccode\u003evalue\u003c/code\u003e - The new value or \n\u003ccode\u003enull\u003c/code\u003e if the user wishes to unset the parameter. While the type of the value parameter is defined as \n\u003ccode\u003eDOMUserData\u003c/code\u003e, the object type must match the type defined by the definition of the parameter. For example, if the parameter is \"error-handler\", the value must be of type \n\u003ccode\u003eDOMErrorHandler\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/w3c/dom/DOMException.html\" title\u003d\"class in org.w3c.dom\"\u003eDOMException\u003c/a\u003e\u003c/code\u003e - NOT_FOUND_ERR: Raised when the parameter name is not recognized. \n\u003cbr\u003e NOT_SUPPORTED_ERR: Raised when the parameter name is recognized but the requested value cannot be set. \n\u003cbr\u003e TYPE_MISMATCH_ERR: Raised if the value type for this parameter name is incompatible with the expected value type."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.w3c.dom.DOMException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getParameter",
      "comment": "Return the value of a parameter if known.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the parameter."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/w3c/dom/DOMException.html\" title\u003d\"class in org.w3c.dom\"\u003eDOMException\u003c/a\u003e\u003c/code\u003e - NOT_FOUND_ERR: Raised when the parameter name is not recognized."
        ],
        "return": [
          "The current object associated with the specified parameter or \n\u003ccode\u003enull\u003c/code\u003e if no object has been associated or if the parameter is not supported."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canSetParameter",
      "comment": "Check if setting a parameter to a specific value is supported.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the parameter to check.",
          "\u003ccode\u003evalue\u003c/code\u003e - An object. if \n\u003ccode\u003enull\u003c/code\u003e, the returned value is \n\u003ccode\u003etrue\u003c/code\u003e."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the parameter could be successfully set to the specified value, or \n\u003ccode\u003efalse\u003c/code\u003e if the parameter is not recognized or the requested value is not supported. This does not change the current value of the parameter itself."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.w3c.dom.DOMStringList",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getParameterNames",
      "comment": "The list of the parameters supported by this DOMConfiguration object and for which at least one value can be set by the application. Note that this list can also contain parameter names defined outside this specification.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.w3c.dom.DOMConfiguration",
  "annotations": [],
  "tagMap": {
    "since": [
      "1.5, DOM Level 3"
    ]
  }
}