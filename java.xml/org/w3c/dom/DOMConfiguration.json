{
  "packageName": "org.w3c.dom",
  "simpleName": "DOMConfiguration",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.w3c.dom.DOMException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setParameter",
      "comment": "Set the value of a parameter.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the parameter to set.",
          "\u003ccode\u003evalue\u003c/code\u003e - The new value or \n\u003ccode\u003enull\u003c/code\u003e if the user wishes to unset the parameter. While the type of the value parameter is defined as \n\u003ccode\u003eDOMUserData\u003c/code\u003e, the object type must match the type defined by the definition of the parameter. For example, if the parameter is \"error-handler\", the value must be of type \n\u003ccode\u003eDOMErrorHandler\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/w3c/dom/DOMException.html\" title\u003d\"class in org.w3c.dom\"\u003eDOMException\u003c/a\u003e\u003c/code\u003e - NOT_FOUND_ERR: Raised when the parameter name is not recognized. \n\u003cbr\u003e NOT_SUPPORTED_ERR: Raised when the parameter name is recognized but the requested value cannot be set. \n\u003cbr\u003e TYPE_MISMATCH_ERR: Raised if the value type for this parameter name is incompatible with the expected value type."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.w3c.dom.DOMException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getParameter",
      "comment": "Return the value of a parameter if known.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the parameter."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/w3c/dom/DOMException.html\" title\u003d\"class in org.w3c.dom\"\u003eDOMException\u003c/a\u003e\u003c/code\u003e - NOT_FOUND_ERR: Raised when the parameter name is not recognized."
        ],
        "return": [
          "The current object associated with the specified parameter or \n\u003ccode\u003enull\u003c/code\u003e if no object has been associated or if the parameter is not supported."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canSetParameter",
      "comment": "Check if setting a parameter to a specific value is supported.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the parameter to check.",
          "\u003ccode\u003evalue\u003c/code\u003e - An object. if \n\u003ccode\u003enull\u003c/code\u003e, the returned value is \n\u003ccode\u003etrue\u003c/code\u003e."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the parameter could be successfully set to the specified value, or \n\u003ccode\u003efalse\u003c/code\u003e if the parameter is not recognized or the requested value is not supported. This does not change the current value of the parameter itself."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.w3c.dom.DOMStringList",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getParameterNames",
      "comment": "The list of the parameters supported by this DOMConfiguration object and for which at least one value can be set by the application. Note that this list can also contain parameter names defined outside this specification.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.w3c.dom.DOMConfiguration",
  "comment": "The \n\u003ccode\u003eDOMConfiguration\u003c/code\u003e interface represents the configuration of a document and maintains a table of recognized parameters. Using the configuration, it is possible to change \n\u003ccode\u003eDocument.normalizeDocument()\u003c/code\u003e behavior, such as replacing the \n\u003ccode\u003eCDATASection\u003c/code\u003e nodes with \n\u003ccode\u003eText\u003c/code\u003e nodes or specifying the type of the schema that must be used when the validation of the \n\u003ccode\u003eDocument\u003c/code\u003e is requested. \n\u003ccode\u003eDOMConfiguration\u003c/code\u003e objects are also used in [\n\u003ca href\u003d\"http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407\"\u003eDOM Level 3 Load and Save\u003c/a\u003e] in the \n\u003ccode\u003eDOMParser\u003c/code\u003e and \n\u003ccode\u003eDOMSerializer\u003c/code\u003e interfaces. \n\u003cp\u003e The parameter names used by the \u003ccode\u003eDOMConfiguration\u003c/code\u003e object are defined throughout the DOM Level 3 specifications. Names are case-insensitive. To avoid possible conflicts, as a convention, names referring to parameters defined outside the DOM specification should be made unique. Because parameters are exposed as properties in names are recommended to follow the section 5.16 Identifiers of [Unicode] with the addition of the character \u0027-\u0027 (HYPHEN-MINUS) but it is not enforced by the DOM implementation. DOM Level 3 Core Implementations are required to recognize all parameters defined in this specification. Some parameter values may also be required to be supported by the implementation. Refer to the definition of the parameter to know if a value must be supported or not. \u003c/p\u003e\n\u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e Parameters are similar to features and properties used in SAX2 [\u003ca href\u003d\"http://www.saxproject.org/\"\u003eSAX\u003c/a\u003e]. \u003c/p\u003e\n\u003cp\u003e The following list of parameters defined in the DOM: \u003c/p\u003e\n\u003cdl\u003e \n \u003cdt\u003e \n  \u003ccode\u003e\"canonical-form\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e \n  \u003cdl\u003e \n   \u003cdt\u003e\n    \u003ccode\u003etrue\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003eoptional\u003c/em\u003e] Canonicalize the document according to the rules specified in [\n    \u003ca href\u003d\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\"\u003eCanonical XML\u003c/a\u003e], such as removing the \n    \u003ccode\u003eDocumentType\u003c/code\u003e node (if any) from the tree, or removing superfluous namespace declarations from each element. Note that this is limited to what can be represented in the DOM; in particular, there is no way to specify the order of the attributes in the DOM. In addition, Setting this parameter to \n    \u003ccode\u003etrue\u003c/code\u003e will also set the state of the parameters listed below. Later changes to the state of one of those parameters will revert \"canonical-form\" back to \n    \u003ccode\u003efalse\u003c/code\u003e. Parameters set to \n    \u003ccode\u003efalse\u003c/code\u003e: \"entities\", \" normalize-characters\", \"cdata-sections\". Parameters set to \n    \u003ccode\u003etrue\u003c/code\u003e: \"namespaces\", \"namespace-declarations\", \"well-formed\", \"element-content-whitespace\". Other parameters are not changed unless explicitly specified in the description of the parameters.\n   \u003c/dd\u003e \n   \u003cdt\u003e \n    \u003ccode\u003efalse\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e] (\n    \u003cem\u003edefault\u003c/em\u003e)Do not canonicalize the document.\n   \u003c/dd\u003e \n  \u003c/dl\u003e\n \u003c/dd\u003e \n \u003cdt\u003e\n  \u003ccode\u003e\"cdata-sections\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e \n  \u003cdl\u003e \n   \u003cdt\u003e \n    \u003ccode\u003etrue\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e] (\n    \u003cem\u003edefault\u003c/em\u003e)Keep \n    \u003ccode\u003eCDATASection\u003c/code\u003e nodes in the document.\n   \u003c/dd\u003e \n   \u003cdt\u003e\n    \u003ccode\u003efalse\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e]Transform \n    \u003ccode\u003eCDATASection\u003c/code\u003e nodes in the document into \n    \u003ccode\u003eText\u003c/code\u003e nodes. The new \n    \u003ccode\u003eText\u003c/code\u003e node is then combined with any adjacent \n    \u003ccode\u003eText\u003c/code\u003e node.\n   \u003c/dd\u003e \n  \u003c/dl\u003e\n \u003c/dd\u003e \n \u003cdt\u003e \n  \u003ccode\u003e\"check-character-normalization\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e \n  \u003cdl\u003e \n   \u003cdt\u003e\n    \u003ccode\u003etrue\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003eoptional\u003c/em\u003e] Check if the characters in the document are \n    \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-xml11-20040204/#dt-fullnorm\"\u003efully normalized\u003c/a\u003e, as defined in appendix B of [\n    \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-xml11-20040204/\"\u003eXML 1.1\u003c/a\u003e]. When a sequence of characters is encountered that fails normalization checking, an error with the \n    \u003ccode\u003eDOMError.type\u003c/code\u003e equals to \"check-character-normalization-failure\" is issued. \n   \u003c/dd\u003e \n   \u003cdt\u003e\n    \u003ccode\u003efalse\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e] (\n    \u003cem\u003edefault\u003c/em\u003e)Do not check if characters are normalized.\n   \u003c/dd\u003e \n  \u003c/dl\u003e\n \u003c/dd\u003e \n \u003cdt\u003e\n  \u003ccode\u003e\"comments\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e \n  \u003cdl\u003e \n   \u003cdt\u003e \n    \u003ccode\u003etrue\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e] (\n    \u003cem\u003edefault\u003c/em\u003e)Keep \n    \u003ccode\u003eComment\u003c/code\u003e nodes in the document.\n   \u003c/dd\u003e \n   \u003cdt\u003e\n    \u003ccode\u003efalse\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e]Discard \n    \u003ccode\u003eComment\u003c/code\u003e nodes in the document.\n   \u003c/dd\u003e \n  \u003c/dl\u003e\n \u003c/dd\u003e \n \u003cdt\u003e \n  \u003ccode\u003e\"datatype-normalization\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e \n  \u003cdl\u003e \n   \u003cdt\u003e\n    \u003ccode\u003etrue\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003eoptional\u003c/em\u003e] Expose schema normalized values in the tree, such as \n    \u003ca href\u003d\"http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#key-nv\"\u003eXML Schema normalized values\u003c/a\u003e in the case of XML Schema. Since this parameter requires to have schema information, the \"validate\" parameter will also be set to \n    \u003ccode\u003etrue\u003c/code\u003e. Having this parameter activated when \"validate\" is \n    \u003ccode\u003efalse\u003c/code\u003e has no effect and no schema-normalization will happen. \n    \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e Since the document contains the result of the XML 1.0 processing, this parameter does not apply to attribute value normalization as defined in section 3.3.3 of [\u003ca href\u003d\"http://www.w3.org/TR/2004/REC-xml-20040204\"\u003eXML 1.0\u003c/a\u003e] and is only meant for schema languages other than Document Type Definition (DTD). \u003c/p\u003e\n   \u003c/dd\u003e \n   \u003cdt\u003e \n    \u003ccode\u003efalse\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e] (\n    \u003cem\u003edefault\u003c/em\u003e) Do not perform schema normalization on the tree. \n   \u003c/dd\u003e \n  \u003c/dl\u003e\n \u003c/dd\u003e \n \u003cdt\u003e \n  \u003ccode\u003e\"element-content-whitespace\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e \n  \u003cdl\u003e \n   \u003cdt\u003e\n    \u003ccode\u003etrue\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e] (\n    \u003cem\u003edefault\u003c/em\u003e)Keep all whitespaces in the document.\n   \u003c/dd\u003e \n   \u003cdt\u003e\n    \u003ccode\u003efalse\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003eoptional\u003c/em\u003e] Discard all \n    \u003ccode\u003eText\u003c/code\u003e nodes that contain whitespaces in element content, as described in \n    \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-xml-infoset-20040204#infoitem.character\"\u003e [element content whitespace]\u003c/a\u003e. The implementation is expected to use the attribute \n    \u003ccode\u003eText.isElementContentWhitespace\u003c/code\u003e to determine if a \n    \u003ccode\u003eText\u003c/code\u003e node should be discarded or not.\n   \u003c/dd\u003e \n  \u003c/dl\u003e\n \u003c/dd\u003e \n \u003cdt\u003e\n  \u003ccode\u003e\"entities\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e \n  \u003cdl\u003e \n   \u003cdt\u003e \n    \u003ccode\u003etrue\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e] (\n    \u003cem\u003edefault\u003c/em\u003e)Keep \n    \u003ccode\u003eEntityReference\u003c/code\u003e nodes in the document.\n   \u003c/dd\u003e \n   \u003cdt\u003e \n    \u003ccode\u003efalse\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e] Remove all \n    \u003ccode\u003eEntityReference\u003c/code\u003e nodes from the document, putting the entity expansions directly in their place. \n    \u003ccode\u003eText\u003c/code\u003e nodes are normalized, as defined in \n    \u003ccode\u003eNode.normalize\u003c/code\u003e. Only \n    \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-xml-infoset-20040204/#infoitem.rse\"\u003e unexpanded entity references\u003c/a\u003e are kept in the document. \n   \u003c/dd\u003e \n  \u003c/dl\u003e \n  \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e This parameter does not affect \u003ccode\u003eEntity\u003c/code\u003e nodes. \u003c/p\u003e\n \u003c/dd\u003e \n \u003cdt\u003e \n  \u003ccode\u003e\"error-handler\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e\n  [\n  \u003cem\u003erequired\u003c/em\u003e] Contains a \n  \u003ccode\u003eDOMErrorHandler\u003c/code\u003e object. If an error is encountered in the document, the implementation will call back the \n  \u003ccode\u003eDOMErrorHandler\u003c/code\u003e registered using this parameter. The implementation may provide a default \n  \u003ccode\u003eDOMErrorHandler\u003c/code\u003e object. When called, \n  \u003ccode\u003eDOMError.relatedData\u003c/code\u003e will contain the closest node to where the error occurred. If the implementation is unable to determine the node where the error occurs, \n  \u003ccode\u003eDOMError.relatedData\u003c/code\u003e will contain the \n  \u003ccode\u003eDocument\u003c/code\u003e node. Mutations to the document from within an error handler will result in implementation dependent behavior. \n \u003c/dd\u003e \n \u003cdt\u003e\n  \u003ccode\u003e\"infoset\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e \n  \u003cdl\u003e \n   \u003cdt\u003e \n    \u003ccode\u003etrue\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e]Keep in the document the information defined in the XML Information Set [\n    \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-xml-infoset-20040204/\"\u003eXML Information Set\u003c/a\u003e] .This forces the following parameters to \n    \u003ccode\u003efalse\u003c/code\u003e: \" validate-if-schema\", \"entities\", \"datatype-normalization\", \"cdata-sections \".This forces the following parameters to \n    \u003ccode\u003etrue\u003c/code\u003e: \" namespace-declarations\", \"well-formed\", \"element-content-whitespace\", \" comments\", \"namespaces\".Other parameters are not changed unless explicitly specified in the description of the parameters. Note that querying this parameter with \n    \u003ccode\u003egetParameter\u003c/code\u003e returns \n    \u003ccode\u003etrue\u003c/code\u003e only if the individual parameters specified above are appropriately set.\n   \u003c/dd\u003e \n   \u003cdt\u003e\n    \u003ccode\u003efalse\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    Setting \n    \u003ccode\u003einfoset\u003c/code\u003e to \n    \u003ccode\u003efalse\u003c/code\u003e has no effect.\n   \u003c/dd\u003e \n  \u003c/dl\u003e\n \u003c/dd\u003e \n \u003cdt\u003e\n  \u003ccode\u003e\"namespaces\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e \n  \u003cdl\u003e \n   \u003cdt\u003e \n    \u003ccode\u003etrue\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e] (\n    \u003cem\u003edefault\u003c/em\u003e) Perform the namespace processing as defined in . \n   \u003c/dd\u003e \n   \u003cdt\u003e\n    \u003ccode\u003efalse\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003eoptional\u003c/em\u003e] Do not perform the namespace processing. \n   \u003c/dd\u003e \n  \u003c/dl\u003e\n \u003c/dd\u003e \n \u003cdt\u003e \n  \u003ccode\u003e\"namespace-declarations\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e\n   This parameter has no effect if the parameter \"namespaces\" is set to \n  \u003ccode\u003efalse\u003c/code\u003e. \n  \u003cdl\u003e \n   \u003cdt\u003e\n    \u003ccode\u003etrue\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e] (\n    \u003cem\u003edefault\u003c/em\u003e) Include namespace declaration attributes, specified or defaulted from the schema, in the document. See also the sections \"Declaring Namespaces\" in [\n    \u003ca href\u003d\"http://www.w3.org/TR/1999/REC-xml-names-19990114/\"\u003eXML Namespaces\u003c/a\u003e] and [\n    \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-xml-names11-20040204/\"\u003eXML Namespaces 1.1\u003c/a\u003e] .\n   \u003c/dd\u003e \n   \u003cdt\u003e\n    \u003ccode\u003efalse\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e]Discard all namespace declaration attributes. The namespace prefixes ( \n    \u003ccode\u003eNode.prefix\u003c/code\u003e) are retained even if this parameter is set to \n    \u003ccode\u003efalse\u003c/code\u003e.\n   \u003c/dd\u003e \n  \u003c/dl\u003e\n \u003c/dd\u003e \n \u003cdt\u003e\n  \u003ccode\u003e\"normalize-characters\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e \n  \u003cdl\u003e \n   \u003cdt\u003e\n    \u003ccode\u003etrue\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003eoptional\u003c/em\u003e] \n    \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-xml11-20040204/#dt-fullnorm\"\u003eFully normalized\u003c/a\u003e the characters in the document as defined in appendix B of [\n    \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-xml11-20040204/\"\u003eXML 1.1\u003c/a\u003e]. \n   \u003c/dd\u003e \n   \u003cdt\u003e \n    \u003ccode\u003efalse\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e] (\n    \u003cem\u003edefault\u003c/em\u003e)Do not perform character normalization.\n   \u003c/dd\u003e \n  \u003c/dl\u003e\n \u003c/dd\u003e \n \u003cdt\u003e\n  \u003ccode\u003e\"schema-location\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e\n  [\n  \u003cem\u003eoptional\u003c/em\u003e] Represent a \n  \u003ccode\u003eDOMString\u003c/code\u003e object containing a list of URIs, separated by whitespaces (characters matching the \n  \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-xml-20040204#NT-S\"\u003enonterminal production S\u003c/a\u003e defined in section 2.3 [\n  \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-xml-20040204\"\u003eXML 1.0\u003c/a\u003e]), that represents the schemas against which validation should occur, i.e. the current schema. The types of schemas referenced in this list must match the type specified with \n  \u003ccode\u003eschema-type\u003c/code\u003e, otherwise the behavior of an implementation is undefined. The schemas specified using this property take precedence to the schema information specified in the document itself. For namespace aware schema, if a schema specified using this property and a schema specified in the document instance (i.e. using the \n  \u003ccode\u003eschemaLocation\u003c/code\u003e attribute) in a schema document (i.e. using schema \n  \u003ccode\u003eimport\u003c/code\u003e mechanisms) share the same \n  \u003ccode\u003etargetNamespace\u003c/code\u003e, the schema specified by the user using this property will be used. If two schemas specified using this property share the same \n  \u003ccode\u003etargetNamespace\u003c/code\u003e or have no namespace, the behavior is implementation dependent. If no location has been provided, this parameter is \n  \u003ccode\u003enull\u003c/code\u003e. \n  \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e The \u003ccode\u003e\"schema-location\"\u003c/code\u003e parameter is ignored unless the \"schema-type\" parameter value is set. It is strongly recommended that \u003ccode\u003eDocument.documentURI\u003c/code\u003e will be set so that an implementation can successfully resolve any external entities referenced. \u003c/p\u003e\n \u003c/dd\u003e \n \u003cdt\u003e \n  \u003ccode\u003e\"schema-type\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e\n  [\n  \u003cem\u003eoptional\u003c/em\u003e] Represent a \n  \u003ccode\u003eDOMString\u003c/code\u003e object containing an absolute URI and representing the type of the schema language used to validate a document against. Note that no lexical checking is done on the absolute URI. If this parameter is not set, a default value may be provided by the implementation, based on the schema languages supported and on the schema language used at load time. If no value is provided, this parameter is \n  \u003ccode\u003enull\u003c/code\u003e. \n  \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e For XML Schema [\u003ca href\u003d\"http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/\"\u003eXML Schema Part 1\u003c/a\u003e] , applications must use the value \u003ccode\u003e\"http://www.w3.org/2001/XMLSchema\"\u003c/code\u003e. For XML DTD [\u003ca href\u003d\"http://www.w3.org/TR/2004/REC-xml-20040204\"\u003eXML 1.0\u003c/a\u003e], applications must use the value \u003ccode\u003e\"http://www.w3.org/TR/REC-xml\"\u003c/code\u003e. Other schema languages are outside the scope of the W3C and therefore should recommend an absolute URI in order to use this method. \u003c/p\u003e\n \u003c/dd\u003e \n \u003cdt\u003e\n  \u003ccode\u003e\"split-cdata-sections\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e \n  \u003cdl\u003e \n   \u003cdt\u003e \n    \u003ccode\u003etrue\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e] (\n    \u003cem\u003edefault\u003c/em\u003e)Split CDATA sections containing the CDATA section termination marker \u0027]]\u0026gt;\u0027. When a CDATA section is split a warning is issued with a \n    \u003ccode\u003eDOMError.type\u003c/code\u003e equals to \n    \u003ccode\u003e\"cdata-sections-splitted\"\u003c/code\u003e and \n    \u003ccode\u003eDOMError.relatedData\u003c/code\u003e equals to the first \n    \u003ccode\u003eCDATASection\u003c/code\u003e node in document order resulting from the split.\n   \u003c/dd\u003e \n   \u003cdt\u003e \n    \u003ccode\u003efalse\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e]Signal an error if a \n    \u003ccode\u003eCDATASection\u003c/code\u003e contains an unrepresentable character.\n   \u003c/dd\u003e \n  \u003c/dl\u003e\n \u003c/dd\u003e \n \u003cdt\u003e\n  \u003ccode\u003e\"validate\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e \n  \u003cdl\u003e \n   \u003cdt\u003e\n    \u003ccode\u003etrue\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003eoptional\u003c/em\u003e] Require the validation against a schema (i.e. XML schema, DTD, any other type or representation of schema) of the document as it is being normalized as defined by [\n    \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-xml-20040204\"\u003eXML 1.0\u003c/a\u003e]. If validation errors are found, or no schema was found, the error handler is notified. Schema-normalized values will not be exposed according to the schema in used unless the parameter \"datatype-normalization\" is \n    \u003ccode\u003etrue\u003c/code\u003e. This parameter will reevaluate: \n    \u003cul\u003e \n     \u003cli\u003e Attribute nodes with \u003ccode\u003eAttr.specified\u003c/code\u003e equals to \u003ccode\u003efalse\u003c/code\u003e, as specified in the description of the \u003ccode\u003eAttr\u003c/code\u003e interface; \u003c/li\u003e \n     \u003cli\u003e The value of the attribute \u003ccode\u003eText.isElementContentWhitespace\u003c/code\u003e for all \u003ccode\u003eText\u003c/code\u003e nodes; \u003c/li\u003e \n     \u003cli\u003e The value of the attribute \u003ccode\u003eAttr.isId\u003c/code\u003e for all \u003ccode\u003eAttr\u003c/code\u003e nodes; \u003c/li\u003e \n     \u003cli\u003e The attributes \u003ccode\u003eElement.schemaTypeInfo\u003c/code\u003e and \u003ccode\u003eAttr.schemaTypeInfo\u003c/code\u003e. \u003c/li\u003e \n    \u003c/ul\u003e \n    \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e \"validate-if-schema\" and \"validate\" are mutually exclusive, setting one of them to \u003ccode\u003etrue\u003c/code\u003e will set the other one to \u003ccode\u003efalse\u003c/code\u003e. Applications should also consider setting the parameter \"well-formed\" to \u003ccode\u003etrue\u003c/code\u003e, which is the default for that option, when validating the document. \u003c/p\u003e\n   \u003c/dd\u003e \n   \u003cdt\u003e\n    \u003ccode\u003efalse\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e] (\n    \u003cem\u003edefault\u003c/em\u003e) Do not accomplish schema processing, including the internal subset processing. Default attribute values information are kept. Note that validation might still happen if \"validate-if-schema\" is \n    \u003ccode\u003etrue\u003c/code\u003e . \n   \u003c/dd\u003e \n  \u003c/dl\u003e\n \u003c/dd\u003e \n \u003cdt\u003e\n  \u003ccode\u003e\"validate-if-schema\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e \n  \u003cdl\u003e \n   \u003cdt\u003e\n    \u003ccode\u003etrue\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003eoptional\u003c/em\u003e]Enable validation only if a declaration for the document element can be found in a schema (independently of where it is found, i.e. XML schema, DTD, or any other type or representation of schema). If validation is enabled, this parameter has the same behavior as the parameter \"validate\" set to \n    \u003ccode\u003etrue\u003c/code\u003e. \n    \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e \"validate-if-schema\" and \"validate\" are mutually exclusive, setting one of them to \u003ccode\u003etrue\u003c/code\u003e will set the other one to \u003ccode\u003efalse\u003c/code\u003e. \u003c/p\u003e\n   \u003c/dd\u003e \n   \u003cdt\u003e\n    \u003ccode\u003efalse\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e] (\n    \u003cem\u003edefault\u003c/em\u003e) No schema processing should be performed if the document has a schema, including internal subset processing. Default attribute values information are kept. Note that validation must still happen if \"validate \" is \n    \u003ccode\u003etrue\u003c/code\u003e. \n   \u003c/dd\u003e \n  \u003c/dl\u003e\n \u003c/dd\u003e \n \u003cdt\u003e\n  \u003ccode\u003e\"well-formed\"\u003c/code\u003e\n \u003c/dt\u003e \n \u003cdd\u003e \n  \u003cdl\u003e \n   \u003cdt\u003e\n    \u003ccode\u003etrue\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003erequired\u003c/em\u003e] (\n    \u003cem\u003edefault\u003c/em\u003e) Check if all nodes are XML well formed according to the XML version in use in \n    \u003ccode\u003eDocument.xmlVersion\u003c/code\u003e: \n    \u003cul\u003e \n     \u003cli\u003e check if the attribute \u003ccode\u003eNode.nodeName\u003c/code\u003e contains invalid characters according to its node type and generate a \u003ccode\u003eDOMError\u003c/code\u003e of type \u003ccode\u003e\"wf-invalid-character-in-node-name\"\u003c/code\u003e, with a \u003ccode\u003eDOMError.SEVERITY_ERROR\u003c/code\u003e severity, if necessary; \u003c/li\u003e \n     \u003cli\u003e check if the text content inside \u003ccode\u003eAttr\u003c/code\u003e, \u003ccode\u003eElement\u003c/code\u003e, \u003ccode\u003eComment\u003c/code\u003e, \u003ccode\u003eText\u003c/code\u003e, \u003ccode\u003eCDATASection\u003c/code\u003e nodes for invalid characters and generate a \u003ccode\u003eDOMError\u003c/code\u003e of type \u003ccode\u003e\"wf-invalid-character\"\u003c/code\u003e, with a \u003ccode\u003eDOMError.SEVERITY_ERROR\u003c/code\u003e severity, if necessary; \u003c/li\u003e \n     \u003cli\u003e check if the data inside \u003ccode\u003eProcessingInstruction\u003c/code\u003e nodes for invalid characters and generate a \u003ccode\u003eDOMError\u003c/code\u003e of type \u003ccode\u003e\"wf-invalid-character\"\u003c/code\u003e, with a \u003ccode\u003eDOMError.SEVERITY_ERROR\u003c/code\u003e severity, if necessary; \u003c/li\u003e \n    \u003c/ul\u003e\n   \u003c/dd\u003e \n   \u003cdt\u003e \n    \u003ccode\u003efalse\u003c/code\u003e\n   \u003c/dt\u003e \n   \u003cdd\u003e\n    [\n    \u003cem\u003eoptional\u003c/em\u003e] Do not check for XML well-formedness. \n   \u003c/dd\u003e \n  \u003c/dl\u003e\n \u003c/dd\u003e \n\u003c/dl\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The resolution of the system identifiers associated with entities is done using \u003ccode\u003eDocument.documentURI\u003c/code\u003e. However, when the feature \"LS\" defined in [\u003ca href\u003d\"http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407\"\u003eDOM Level 3 Load and Save\u003c/a\u003e] is supported by the DOM implementation, the parameter \"resource-resolver\" can also be used on \u003ccode\u003eDOMConfiguration\u003c/code\u003e objects attached to \u003ccode\u003eDocument\u003c/code\u003e nodes. If this parameter is set, \u003ccode\u003eDocument.normalizeDocument()\u003c/code\u003e will invoke the resource resolver instead of using \u003ccode\u003eDocument.documentURI\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003eSee also the \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407\"\u003eDocument Object Model (DOM) Level 3 Core Specification\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5, DOM Level 3"
    ]
  }
}