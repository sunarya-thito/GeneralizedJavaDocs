{
  "packageName": "org.w3c.dom.bootstrap",
  "simpleName": "DOMImplementationRegistry",
  "moduleName": "java.xml",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PROPERTY",
      "comment": "The system property to specify the DOMImplementationSource class names.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.bootstrap.DOMImplementationRegistry.PROPERTY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.w3c.dom.bootstrap.DOMImplementationRegistry",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.ClassNotFoundException",
          "type": "Class"
        },
        {
          "name": "java.lang.InstantiationException",
          "type": "Class"
        },
        {
          "name": "java.lang.IllegalAccessException",
          "type": "Class"
        },
        {
          "name": "java.lang.ClassCastException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newInstance",
      "comment": "Obtain a new instance of a DOMImplementationRegistry. The DOMImplementationRegistry is initialized by the application or the implementation, depending on the context, by first checking the value of the Java system property org.w3c.dom.DOMImplementationSourceList and the service provider whose contents are at \"META_INF/services/org.w3c.dom.DOMImplementationSourceList\". The value of this property is a white-space separated list of names of availables classes implementing the DOMImplementationSource interface. Each class listed in the class name list is instantiated and any exceptions encountered are thrown to the application.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassNotFoundException.html\" title\u003d\"class in java.lang\"\u003eClassNotFoundException\u003c/a\u003e\u003c/code\u003e - If any specified class can not be found",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InstantiationException.html\" title\u003d\"class in java.lang\"\u003eInstantiationException\u003c/a\u003e\u003c/code\u003e - If any specified class is an interface or abstract class",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalAccessException.html\" title\u003d\"class in java.lang\"\u003eIllegalAccessException\u003c/a\u003e\u003c/code\u003e - If the default constructor of a specified class is not accessible",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - If any specified class does not implement \n\u003ccode\u003eDOMImplementationSource\u003c/code\u003e"
        ],
        "return": [
          "an initialized instance of DOMImplementationRegistry"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.w3c.dom.DOMImplementation",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "features",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDOMImplementation",
      "comment": "Return the first implementation that has the desired features, or null if none is found.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efeatures\u003c/code\u003e - A string that specifies which features are required. This is a space separated list in which each feature is specified by its name optionally followed by a space and a version number. This is something like: \"XML 1.0 Traversal +Events 2.0\""
        ],
        "return": [
          "An implementation that has the desired features, or \n\u003ccode\u003enull\u003c/code\u003e if none found."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.w3c.dom.DOMImplementationList",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "features",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDOMImplementationList",
      "comment": "Return a list of implementations that support the desired features.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efeatures\u003c/code\u003e - A string that specifies which features are required. This is a space separated list in which each feature is specified by its name optionally followed by a space and a version number. This is something like: \"XML 1.0 Traversal +Events 2.0\""
        ],
        "return": [
          "A list of DOMImplementations that support the desired features."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "org.w3c.dom.DOMImplementationSource",
            "type": "Class"
          },
          "name": "s",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addSource",
      "comment": "Register an implementation.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - The source to be registered, may not be \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "org.w3c.dom.bootstrap.DOMImplementationRegistry",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/w3c/dom/DOMImplementation.html\" title\u003d\"interface in org.w3c.dom\"\u003e\u003ccode\u003eDOMImplementation\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/w3c/dom/DOMImplementationSource.html\" title\u003d\"interface in org.w3c.dom\"\u003e\u003ccode\u003eDOMImplementationSource\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.5, DOM Level 3"
    ]
  }
}