{
  "packageName": "org.w3c.dom.ls",
  "simpleName": "LSOutput",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.io.Writer",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCharacterStream",
      "comment": "An attribute of a language and binding dependent type that represents a writable stream to which 16-bit units can be output.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.io.Writer",
            "type": "Class"
          },
          "field": {
            "name": "characterStream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setCharacterStream",
      "comment": "An attribute of a language and binding dependent type that represents a writable stream to which 16-bit units can be output.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.io.OutputStream",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getByteStream",
      "comment": "An attribute of a language and binding dependent type that represents a writable stream of bytes.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "byteStream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setByteStream",
      "comment": "An attribute of a language and binding dependent type that represents a writable stream of bytes.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSystemId",
      "comment": "The system identifier, a URI reference [IETF RFC 2396], for this output destination. If the system ID is a relative URI reference (see section 5 in [IETF RFC 2396]), the behavior is implementation dependent.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "systemId"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setSystemId",
      "comment": "The system identifier, a URI reference [IETF RFC 2396], for this output destination. If the system ID is a relative URI reference (see section 5 in [IETF RFC 2396]), the behavior is implementation dependent.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEncoding",
      "comment": "The character encoding to use for the output. The encoding must be a string acceptable for an XML encoding declaration ([XML 1.0] section 4.3.3 \"Character Encoding in Entities\"), it is recommended that character encodings registered (as charsets) with the Internet Assigned Numbers Authority [IANA-CHARSETS] should be referred to using their registered names.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "encoding"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setEncoding",
      "comment": "The character encoding to use for the output. The encoding must be a string acceptable for an XML encoding declaration ([XML 1.0] section 4.3.3 \"Character Encoding in Entities\"), it is recommended that character encodings registered (as charsets) with the Internet Assigned Numbers Authority [IANA-CHARSETS] should be referred to using their registered names.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.w3c.dom.ls.LSOutput",
  "comment": "This interface represents an output destination for data. \n\u003cp\u003e This interface allows an application to encapsulate information about an output destination in a single object, which may include a URI, a byte stream (possibly with a specified encoding), a base URI, and/or a character stream. \u003c/p\u003e\n\u003cp\u003e The exact definitions of a byte stream and a character stream are binding dependent. \u003c/p\u003e\n\u003cp\u003e The application is expected to provide objects that implement this interface whenever such objects are needed. The application can either provide its own objects that implement this interface, or it can use the generic factory method \u003ccode\u003eDOMImplementationLS.createLSOutput()\u003c/code\u003e to create objects that implement this interface. \u003c/p\u003e\n\u003cp\u003e The \u003ccode\u003eLSSerializer\u003c/code\u003e will use the \u003ccode\u003eLSOutput\u003c/code\u003e object to determine where to serialize the output to. The \u003ccode\u003eLSSerializer\u003c/code\u003e will look at the different outputs specified in the \u003ccode\u003eLSOutput\u003c/code\u003e in the following order to know which one to output to, the first one that is not null and not an empty string will be used: \u003c/p\u003e\n\u003col\u003e \n \u003cli\u003e \u003ccode\u003eLSOutput.characterStream\u003c/code\u003e \u003c/li\u003e \n \u003cli\u003e \u003ccode\u003eLSOutput.byteStream\u003c/code\u003e \u003c/li\u003e \n \u003cli\u003e \u003ccode\u003eLSOutput.systemId\u003c/code\u003e \u003c/li\u003e \n\u003c/ol\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e \u003ccode\u003eLSOutput\u003c/code\u003e objects belong to the application. The DOM implementation will never modify them (though it may make copies and modify the copies, if necessary). \u003c/p\u003e\n\u003cp\u003eSee also the \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407\"\u003eDocument Object Model (DOM) Level 3 Load and Save Specification\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}