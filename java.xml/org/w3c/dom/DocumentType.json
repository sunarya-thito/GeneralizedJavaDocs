{
  "packageName": "org.w3c.dom",
  "simpleName": "DocumentType",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.w3c.dom.Node",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getName",
      "comment": "The name of DTD; i.e., the name immediately following the DOCTYPE keyword.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.w3c.dom.NamedNodeMap",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEntities",
      "comment": "A NamedNodeMap containing the general entities, both external and internal, declared in the DTD. Parameter entities are not contained. Duplicates are discarded. For example in: \u003c!DOCTYPE\n ex SYSTEM \"ex.dtd\" [ \u003c!ENTITY foo \"foo\"\u003e \u003c!ENTITY bar\n \"bar\"\u003e \u003c!ENTITY bar \"bar2\"\u003e \u003c!ENTITY % baz \"baz\"\u003e\n ]\u003e \u003cex/\u003e the interface provides access to foo and the first declaration of bar but not the second declaration of bar or baz. Every node in this map also implements the Entity interface. The DOM Level 2 does not support editing entities, therefore entities cannot be altered in any way.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.w3c.dom.NamedNodeMap",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNotations",
      "comment": "A NamedNodeMap containing the notations declared in the DTD. Duplicates are discarded. Every node in this map also implements the Notation interface. The DOM Level 2 does not support editing notations, therefore notations cannot be altered in any way.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPublicId",
      "comment": "The public identifier of the external subset.",
      "annotations": [],
      "tagMap": {
        "since": [
          "1.4, DOM Level 2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSystemId",
      "comment": "The system identifier of the external subset. This may be an absolute URI or not.",
      "annotations": [],
      "tagMap": {
        "since": [
          "1.4, DOM Level 2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getInternalSubset",
      "comment": "The internal subset as a string, or null if there is none. This is does not contain the delimiting square brackets. Note: The actual content returned depends on how much information is available to the implementation. This may vary depending on various parameters, including the XML processor used to build the document.",
      "annotations": [],
      "tagMap": {
        "since": [
          "1.4, DOM Level 2"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.w3c.dom.DocumentType",
  "comment": "Each \n\u003ccode\u003eDocument\u003c/code\u003e has a \n\u003ccode\u003edoctype\u003c/code\u003e attribute whose value is either \n\u003ccode\u003enull\u003c/code\u003e or a \n\u003ccode\u003eDocumentType\u003c/code\u003e object. The \n\u003ccode\u003eDocumentType\u003c/code\u003e interface in the DOM Core provides an interface to the list of entities that are defined for the document, and little else because the effect of namespaces and the various XML schema efforts on DTD representation are not clearly understood as of this writing. \n\u003cp\u003eDOM Level 3 doesn\u0027t support editing \u003ccode\u003eDocumentType\u003c/code\u003e nodes. \u003ccode\u003eDocumentType\u003c/code\u003e nodes are read-only. \u003c/p\u003e\n\u003cp\u003eSee also the \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407\"\u003eDocument Object Model (DOM) Level 3 Core Specification\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {}
}