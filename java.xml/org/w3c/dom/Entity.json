{
  "packageName": "org.w3c.dom",
  "simpleName": "Entity",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.w3c.dom.Node",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPublicId",
      "comment": "The public identifier associated with the entity if specified, and null otherwise.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSystemId",
      "comment": "The system identifier associated with the entity if specified, and null otherwise. This may be an absolute URI or not.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNotationName",
      "comment": "For unparsed entities, the name of the notation for the entity. For parsed entities, this is null.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getInputEncoding",
      "comment": "An attribute specifying the encoding used for this entity at the time of parsing, when it is an external parsed entity. This is null if it an entity from the internal subset or if it is not known.",
      "annotations": [],
      "tagMap": {
        "since": [
          "1.5, DOM Level 3"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getXmlEncoding",
      "comment": "An attribute specifying, as part of the text declaration, the encoding of this entity, when it is an external parsed entity. This is null otherwise.",
      "annotations": [],
      "tagMap": {
        "since": [
          "1.5, DOM Level 3"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getXmlVersion",
      "comment": "An attribute specifying, as part of the text declaration, the version number of this entity, when it is an external parsed entity. This is null otherwise.",
      "annotations": [],
      "tagMap": {
        "since": [
          "1.5, DOM Level 3"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.w3c.dom.Entity",
  "comment": "This interface represents a known entity, either parsed or unparsed, in an XML document. Note that this models the entity itself \n\u003cem\u003enot\u003c/em\u003e the entity declaration. \n\u003cp\u003eThe \u003ccode\u003enodeName\u003c/code\u003e attribute that is inherited from \u003ccode\u003eNode\u003c/code\u003e contains the name of the entity. \u003c/p\u003e\n\u003cp\u003eAn XML processor may choose to completely expand entities before the structure model is passed to the DOM; in this case there will be no \u003ccode\u003eEntityReference\u003c/code\u003e nodes in the document tree. \u003c/p\u003e\n\u003cp\u003eXML does not mandate that a non-validating XML processor read and process entity declarations made in the external subset or declared in parameter entities. This means that parsed entities declared in the external subset need not be expanded by some classes of applications, and that the replacement text of the entity may not be available. When the \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-xml-20040204#intern-replacement\"\u003e replacement text\u003c/a\u003e is available, the corresponding \u003ccode\u003eEntity\u003c/code\u003e node\u0027s child list represents the structure of that replacement value. Otherwise, the child list is empty. \u003c/p\u003e\n\u003cp\u003eDOM Level 3 does not support editing \u003ccode\u003eEntity\u003c/code\u003e nodes; if a user wants to make changes to the contents of an \u003ccode\u003eEntity\u003c/code\u003e, every related \u003ccode\u003eEntityReference\u003c/code\u003e node has to be replaced in the structure model by a clone of the \u003ccode\u003eEntity\u003c/code\u003e\u0027s contents, and then the desired changes must be made to each of those clones instead. \u003ccode\u003eEntity\u003c/code\u003e nodes and all their descendants are readonly. \u003c/p\u003e\n\u003cp\u003eAn \u003ccode\u003eEntity\u003c/code\u003e node does not have any parent. \u003c/p\u003e\n\u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e If the entity contains an unbound namespace prefix, the \u003ccode\u003enamespaceURI\u003c/code\u003e of the corresponding node in the \u003ccode\u003eEntity\u003c/code\u003e node subtree is \u003ccode\u003enull\u003c/code\u003e. The same is true for \u003ccode\u003eEntityReference\u003c/code\u003e nodes that refer to this entity, when they are created using the \u003ccode\u003ecreateEntityReference\u003c/code\u003e method of the \u003ccode\u003eDocument\u003c/code\u003e interface. \u003c/p\u003e\n\u003cp\u003eSee also the \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407\"\u003eDocument Object Model (DOM) Level 3 Core Specification\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {}
}