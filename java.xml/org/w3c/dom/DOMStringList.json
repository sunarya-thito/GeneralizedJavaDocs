{
  "packageName": "org.w3c.dom",
  "simpleName": "DOMStringList",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "item",
      "comment": "Returns the indexth item in the collection. If index is greater than or equal to the number of DOMStrings in the list, this returns null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - Index into the collection."
        ],
        "return": [
          "The \n\u003ccode\u003eDOMString\u003c/code\u003e at the \n\u003ccode\u003eindex\u003c/code\u003eth position in the \n\u003ccode\u003eDOMStringList\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if that is not a valid index."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getLength",
      "comment": "The number of DOMStrings in the list. The range of valid child node indices is 0 to length-1 inclusive.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "str"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "contains",
      "comment": "Test if a string is part of this DOMStringList.",
      "tagMap": {
        "param": [
          "\u003ccode\u003estr\u003c/code\u003e - The string to look for."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the string has been found, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.w3c.dom.DOMStringList",
  "comment": "The \n\u003ccode\u003eDOMStringList\u003c/code\u003e interface provides the abstraction of an ordered collection of \n\u003ccode\u003eDOMString\u003c/code\u003e values, without defining or constraining how this collection is implemented. The items in the \n\u003ccode\u003eDOMStringList\u003c/code\u003e are accessible via an integral index, starting from 0. \n\u003cp\u003eSee also the \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407\"\u003eDocument Object Model (DOM) Level 3 Core Specification\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5, DOM Level 3"
    ]
  }
}