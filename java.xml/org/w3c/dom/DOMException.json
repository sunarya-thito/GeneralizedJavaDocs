{
  "packageName": "org.w3c.dom",
  "simpleName": "DOMException",
  "moduleName": "java.xml",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.RuntimeException",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "code",
      "tagMap": {}
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "INDEX_SIZE_ERR",
      "comment": "If index or size is negative, or greater than the allowed value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.INDEX_SIZE_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DOMSTRING_SIZE_ERR",
      "comment": "If the specified range of text does not fit into a DOMString.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.DOMSTRING_SIZE_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "HIERARCHY_REQUEST_ERR",
      "comment": "If any Node is inserted somewhere it doesn\u0027t belong.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.HIERARCHY_REQUEST_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WRONG_DOCUMENT_ERR",
      "comment": "If a Node is used in a different document than the one that created it (that doesn\u0027t support it).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.WRONG_DOCUMENT_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "INVALID_CHARACTER_ERR",
      "comment": "If an invalid or illegal character is specified, such as in an XML name.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.INVALID_CHARACTER_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "NO_DATA_ALLOWED_ERR",
      "comment": "If data is specified for a Node which does not support data.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.NO_DATA_ALLOWED_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "NO_MODIFICATION_ALLOWED_ERR",
      "comment": "If an attempt is made to modify an object where modifications are not allowed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.NO_MODIFICATION_ALLOWED_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "NOT_FOUND_ERR",
      "comment": "If an attempt is made to reference a Node in a context where it does not exist.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.NOT_FOUND_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "NOT_SUPPORTED_ERR",
      "comment": "If the implementation does not support the requested type of object or operation.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.NOT_SUPPORTED_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "INUSE_ATTRIBUTE_ERR",
      "comment": "If an attempt is made to add an attribute that is already in use elsewhere.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.INUSE_ATTRIBUTE_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "INVALID_STATE_ERR",
      "comment": "If an attempt is made to use an object that is not, or is no longer, usable.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.INVALID_STATE_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4, DOM Level 2"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SYNTAX_ERR",
      "comment": "If an invalid or illegal string is specified.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.SYNTAX_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4, DOM Level 2"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "INVALID_MODIFICATION_ERR",
      "comment": "If an attempt is made to modify the type of the underlying object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.INVALID_MODIFICATION_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4, DOM Level 2"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "NAMESPACE_ERR",
      "comment": "If an attempt is made to create or change an object in a way which is incorrect with regard to namespaces.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.NAMESPACE_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4, DOM Level 2"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "INVALID_ACCESS_ERR",
      "comment": "If a parameter or an operation is not supported by the underlying object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.INVALID_ACCESS_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4, DOM Level 2"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "VALIDATION_ERR",
      "comment": "If a call to a method such as insertBefore or removeChild would make the Node invalid with respect to \"partial validity\", this exception would be raised and the operation would not be done. This code is used in [DOM Level 3 Validation] . Refer to this specification for further information.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.VALIDATION_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.5, DOM Level 3"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TYPE_MISMATCH_ERR",
      "comment": "If the type of an object is incompatible with the expected type of the parameter associated to the object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.DOMException.TYPE_MISMATCH_ERR\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.5, DOM Level 3"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "short",
            "type": "Class"
          },
          "field": {
            "name": "code"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "message"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "org.w3c.dom.DOMException",
  "comment": "DOM operations only raise exceptions in \"exceptional\" circumstances, i.e., when an operation is impossible to perform (either for logical reasons, because data is lost, or because the implementation has become unstable). In general, DOM methods return specific error values in ordinary processing situations, such as out-of-bound errors when using \n\u003ccode\u003eNodeList\u003c/code\u003e. \n\u003cp\u003eImplementations should raise other exceptions under other circumstances. For example, implementations should raise an implementation-dependent exception if a \u003ccode\u003enull\u003c/code\u003e argument is passed when \u003ccode\u003enull\u003c/code\u003e was not expected. \u003c/p\u003e\n\u003cp\u003eSome languages and object systems do not support the concept of exceptions. For such systems, error conditions may be indicated using native error reporting mechanisms. For some bindings, for example, methods may return error codes similar to those listed in the corresponding method descriptions. \u003c/p\u003e\n\u003cp\u003eSee also the \u003ca href\u003d\"http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407\"\u003eDocument Object Model (DOM) Level 3 Core Specification\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#org.w3c.dom.DOMException\"\u003eSerialized Form\u003c/a\u003e"
    ]
  }
}