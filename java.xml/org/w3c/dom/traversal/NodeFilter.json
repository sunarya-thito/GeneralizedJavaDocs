{
  "packageName": "org.w3c.dom.traversal",
  "simpleName": "NodeFilter",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "FILTER_ACCEPT",
      "comment": "Accept the node. Navigation methods defined for NodeIterator or TreeWalker will return this node.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.FILTER_ACCEPT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "FILTER_REJECT",
      "comment": "Reject the node. Navigation methods defined for NodeIterator or TreeWalker will not return this node. For TreeWalker, the children of this node will also be rejected. NodeIterators treat this as a synonym for FILTER_SKIP.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.FILTER_REJECT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "FILTER_SKIP",
      "comment": "Skip this single node. Navigation methods defined for NodeIterator or TreeWalker will not return this node. For both NodeIterator and TreeWalker, the children of this node will still be considered.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.FILTER_SKIP\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SHOW_ALL",
      "comment": "Show all Nodes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.SHOW_ALL\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SHOW_ELEMENT",
      "comment": "Show Element nodes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.SHOW_ELEMENT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SHOW_ATTRIBUTE",
      "comment": "Show Attr nodes. This is meaningful only when creating an NodeIterator or TreeWalker with an attribute node as its root; in this case, it means that the attribute node will appear in the first position of the iteration or traversal. Since attributes are never children of other nodes, they do not appear when traversing over the document tree.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.SHOW_ATTRIBUTE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SHOW_TEXT",
      "comment": "Show Text nodes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.SHOW_TEXT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SHOW_CDATA_SECTION",
      "comment": "Show CDATASection nodes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.SHOW_CDATA_SECTION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SHOW_ENTITY_REFERENCE",
      "comment": "Show EntityReference nodes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.SHOW_ENTITY_REFERENCE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SHOW_ENTITY",
      "comment": "Show Entity nodes. This is meaningful only when creating an NodeIterator or TreeWalker with an Entity node as its root; in this case, it means that the Entity node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.SHOW_ENTITY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SHOW_PROCESSING_INSTRUCTION",
      "comment": "Show ProcessingInstruction nodes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.SHOW_PROCESSING_INSTRUCTION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SHOW_COMMENT",
      "comment": "Show Comment nodes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.SHOW_COMMENT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SHOW_DOCUMENT",
      "comment": "Show Document nodes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.SHOW_DOCUMENT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SHOW_DOCUMENT_TYPE",
      "comment": "Show DocumentType nodes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.SHOW_DOCUMENT_TYPE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SHOW_DOCUMENT_FRAGMENT",
      "comment": "Show DocumentFragment nodes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.SHOW_DOCUMENT_FRAGMENT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SHOW_NOTATION",
      "comment": "Show Notation nodes. This is meaningful only when creating an NodeIterator or TreeWalker with a Notation node as its root; in this case, it means that the Notation node will appear in the first position of the traversal. Since notations are not part of the document tree, they do not appear when traversing over the document tree.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#org.w3c.dom.traversal.NodeFilter.SHOW_NOTATION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "short",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.w3c.dom.Node",
            "type": "Class"
          },
          "field": {
            "name": "n"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "acceptNode",
      "comment": "Test whether a specified node is visible in the logical view of a TreeWalker or NodeIterator. This function will be called by the implementation of TreeWalker and NodeIterator; it is not normally called directly from user code. (Though you could do so if you wanted to use the same filter to guide your own application logic.)",
      "tagMap": {
        "param": [
          "\u003ccode\u003en\u003c/code\u003e - The node to check to see if it passes the filter or not."
        ],
        "return": [
          "A constant to determine whether the node is accepted, rejected, or skipped, as defined above."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.w3c.dom.traversal.NodeFilter",
  "comment": "Filters are objects that know how to \"filter out\" nodes. If a \n\u003ccode\u003eNodeIterator\u003c/code\u003e or \n\u003ccode\u003eTreeWalker\u003c/code\u003e is given a \n\u003ccode\u003eNodeFilter\u003c/code\u003e, it applies the filter before it returns the next node. If the filter says to accept the node, the traversal logic returns it; otherwise, traversal looks for the next node and pretends that the node that was rejected was not there. \n\u003cp\u003eThe DOM does not provide any filters. \u003ccode\u003eNodeFilter\u003c/code\u003e is just an interface that users can implement to provide their own filters. \u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eNodeFilters\u003c/code\u003e do not need to know how to traverse from node to node, nor do they need to know anything about the data structure that is being traversed. This makes it very easy to write filters, since the only thing they have to know how to do is evaluate a single node. One filter may be used with a number of different kinds of traversals, encouraging code reuse. \u003c/p\u003e\n\u003cp\u003eSee also the \u003ca href\u003d\"http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113\"\u003eDocument Object Model (DOM) Level 2 Traversal and Range Specification\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "9, DOM Level 2"
    ]
  }
}