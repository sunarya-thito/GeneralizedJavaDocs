{
  "packageName": "org.w3c.dom.events",
  "simpleName": "DocumentEvent",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "org.w3c.dom.events.Event",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.w3c.dom.DOMException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "eventType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "createEvent",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eeventType\u003c/code\u003e - The \n\u003ccode\u003eeventType\u003c/code\u003e parameter specifies the type of \n\u003ccode\u003eEvent\u003c/code\u003e interface to be created. If the \n\u003ccode\u003eEvent\u003c/code\u003e interface specified is supported by the implementation this method will return a new \n\u003ccode\u003eEvent\u003c/code\u003e of the interface type requested. If the \n\u003ccode\u003eEvent\u003c/code\u003e is to be dispatched via the \n\u003ccode\u003edispatchEvent\u003c/code\u003e method the appropriate event init method must be called after creation in order to initialize the \n\u003ccode\u003eEvent\u003c/code\u003e\u0027s values. As an example, a user wishing to synthesize some kind of \n\u003ccode\u003eUIEvent\u003c/code\u003e would call \n\u003ccode\u003ecreateEvent\u003c/code\u003e with the parameter \"UIEvents\". The \n\u003ccode\u003einitUIEvent\u003c/code\u003e method could then be called on the newly created \n\u003ccode\u003eUIEvent\u003c/code\u003e to set the specific type of UIEvent to be dispatched and set its context information.The \n\u003ccode\u003ecreateEvent\u003c/code\u003e method is used in creating \n\u003ccode\u003eEvent\u003c/code\u003es when it is either inconvenient or unnecessary for the user to create an \n\u003ccode\u003eEvent\u003c/code\u003e themselves. In cases where the implementation provided \n\u003ccode\u003eEvent\u003c/code\u003e is insufficient, users may supply their own \n\u003ccode\u003eEvent\u003c/code\u003e implementations for use with the \n\u003ccode\u003edispatchEvent\u003c/code\u003e method."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/w3c/dom/DOMException.html\" title\u003d\"class in org.w3c.dom\"\u003eDOMException\u003c/a\u003e\u003c/code\u003e - NOT_SUPPORTED_ERR: Raised if the implementation does not support the type of \n\u003ccode\u003eEvent\u003c/code\u003e interface requested"
        ],
        "return": [
          "The newly created \n\u003ccode\u003eEvent\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.w3c.dom.events.DocumentEvent",
  "annotations": [],
  "tagMap": {
    "since": [
      "1.5, DOM Level 2"
    ]
  }
}