{
  "packageName": "org.xml.sax",
  "simpleName": "XMLReader",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.xml.sax.SAXNotRecognizedException",
          "type": "Class"
        },
        {
          "name": "org.xml.sax.SAXNotSupportedException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getFeature",
      "comment": "Look up the value of a feature flag. The feature name is any fully-qualified URI. It is possible for an XMLReader to recognize a feature name but temporarily be unable to return its value. Some feature values may be available only in specific contexts, such as before, during, or after a parse. Also, some feature values may not be programmatically accessible. (In the case of an adapter for SAX1 Parser, there is no implementation-independent way to expose whether the underlying parser is performing validation, expanding external entities, and so forth.) All XMLReaders are required to recognize the http://xml.org/sax/features/namespaces and the http://xml.org/sax/features/namespace-prefixes feature names. Typical usage is something like this:  XMLReader r \u003d new MySAXDriver();\n\n                         // try to activate validation\n try {\n   r.setFeature(\"http://xml.org/sax/features/validation\", true);\n } catch (SAXException e) {\n   System.err.println(\"Cannot activate validation.\");\n }\n\n                         // register event handlers\n r.setContentHandler(new MyContentHandler());\n r.setErrorHandler(new MyErrorHandler());\n\n                         // parse the first document\n try {\n   r.parse(\"http://www.foo.com/mydoc.xml\");\n } catch (IOException e) {\n   System.err.println(\"I/O exception reading XML document\");\n } catch (SAXException e) {\n   System.err.println(\"XML exception reading document.\");\n }\n Implementors are free (and encouraged) to invent their own features, using names built on their own URIs.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#setFeature(java.lang.String,boolean)\"\u003e\u003ccode\u003esetFeature(java.lang.String, boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The feature name, which is a fully-qualified URI."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXNotRecognizedException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXNotRecognizedException\u003c/a\u003e\u003c/code\u003e - If the feature value can\u0027t be assigned or retrieved.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXNotSupportedException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXNotSupportedException\u003c/a\u003e\u003c/code\u003e - When the XMLReader recognizes the feature name but cannot determine its value at this time."
        ],
        "return": [
          "The current value of the feature (true or false)."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.xml.sax.SAXNotRecognizedException",
          "type": "Class"
        },
        {
          "name": "org.xml.sax.SAXNotSupportedException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setFeature",
      "comment": "Set the value of a feature flag. The feature name is any fully-qualified URI. It is possible for an XMLReader to expose a feature value but to be unable to change the current value. Some feature values may be immutable or mutable only in specific contexts, such as before, during, or after a parse. All XMLReaders are required to support setting http://xml.org/sax/features/namespaces to true and http://xml.org/sax/features/namespace-prefixes to false.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#getFeature(java.lang.String)\"\u003e\u003ccode\u003egetFeature(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The feature name, which is a fully-qualified URI.",
          "\u003ccode\u003evalue\u003c/code\u003e - The requested value of the feature (true or false)."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXNotRecognizedException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXNotRecognizedException\u003c/a\u003e\u003c/code\u003e - If the feature value can\u0027t be assigned or retrieved.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXNotSupportedException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXNotSupportedException\u003c/a\u003e\u003c/code\u003e - When the XMLReader recognizes the feature name but cannot set the requested value."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.xml.sax.SAXNotRecognizedException",
          "type": "Class"
        },
        {
          "name": "org.xml.sax.SAXNotSupportedException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getProperty",
      "comment": "Look up the value of a property. The property name is any fully-qualified URI. It is possible for an XMLReader to recognize a property name but temporarily be unable to return its value. Some property values may be available only in specific contexts, such as before, during, or after a parse. XMLReaders are not required to recognize any specific property names, though an initial core set is documented for SAX2. Implementors are free (and encouraged) to invent their own properties, using names built on their own URIs.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#setProperty(java.lang.String,java.lang.Object)\"\u003e\u003ccode\u003esetProperty(java.lang.String, java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The property name, which is a fully-qualified URI."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXNotRecognizedException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXNotRecognizedException\u003c/a\u003e\u003c/code\u003e - If the property value can\u0027t be assigned or retrieved.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXNotSupportedException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXNotSupportedException\u003c/a\u003e\u003c/code\u003e - When the XMLReader recognizes the property name but cannot determine its value at this time."
        ],
        "return": [
          "The current value of the property."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.xml.sax.SAXNotRecognizedException",
          "type": "Class"
        },
        {
          "name": "org.xml.sax.SAXNotSupportedException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setProperty",
      "comment": "Set the value of a property. The property name is any fully-qualified URI. It is possible for an XMLReader to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a parse. XMLReaders are not required to recognize setting any specific property names, though a core set is defined by SAX2. This method is also the standard mechanism for setting extended handlers.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The property name, which is a fully-qualified URI.",
          "\u003ccode\u003evalue\u003c/code\u003e - The requested value for the property."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXNotRecognizedException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXNotRecognizedException\u003c/a\u003e\u003c/code\u003e - If the property value can\u0027t be assigned or retrieved.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXNotSupportedException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXNotSupportedException\u003c/a\u003e\u003c/code\u003e - When the XMLReader recognizes the property name but cannot set the requested value."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.EntityResolver",
            "type": "Class"
          },
          "field": {
            "name": "resolver"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setEntityResolver",
      "comment": "Allow an application to register an entity resolver. If the application does not register an entity resolver, the XMLReader will perform its own default resolution. Applications may register a new or different resolver in the middle of a parse, and the SAX parser must begin using the new resolver immediately.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#getEntityResolver()\"\u003e\u003ccode\u003egetEntityResolver()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eresolver\u003c/code\u003e - The entity resolver."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.xml.sax.EntityResolver",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEntityResolver",
      "comment": "Return the current entity resolver.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#setEntityResolver(org.xml.sax.EntityResolver)\"\u003e\u003ccode\u003esetEntityResolver(org.xml.sax.EntityResolver)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "The current entity resolver, or null if none has been registered."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.DTDHandler",
            "type": "Class"
          },
          "field": {
            "name": "handler"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDTDHandler",
      "comment": "Allow an application to register a DTD event handler. If the application does not register a DTD handler, all DTD events reported by the SAX parser will be silently ignored. Applications may register a new or different handler in the middle of a parse, and the SAX parser must begin using the new handler immediately.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#getDTDHandler()\"\u003e\u003ccode\u003egetDTDHandler()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ehandler\u003c/code\u003e - The DTD handler."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.xml.sax.DTDHandler",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDTDHandler",
      "comment": "Return the current DTD handler.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#setDTDHandler(org.xml.sax.DTDHandler)\"\u003e\u003ccode\u003esetDTDHandler(org.xml.sax.DTDHandler)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "The current DTD handler, or null if none has been registered."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.ContentHandler",
            "type": "Class"
          },
          "field": {
            "name": "handler"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setContentHandler",
      "comment": "Allow an application to register a content event handler. If the application does not register a content handler, all content events reported by the SAX parser will be silently ignored. Applications may register a new or different handler in the middle of a parse, and the SAX parser must begin using the new handler immediately.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#getContentHandler()\"\u003e\u003ccode\u003egetContentHandler()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ehandler\u003c/code\u003e - The content handler."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.xml.sax.ContentHandler",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getContentHandler",
      "comment": "Return the current content handler.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#setContentHandler(org.xml.sax.ContentHandler)\"\u003e\u003ccode\u003esetContentHandler(org.xml.sax.ContentHandler)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "The current content handler, or null if none has been registered."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.ErrorHandler",
            "type": "Class"
          },
          "field": {
            "name": "handler"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setErrorHandler",
      "comment": "Allow an application to register an error event handler. If the application does not register an error handler, all error events reported by the SAX parser will be silently ignored; however, normal processing may not continue. It is highly recommended that all SAX applications implement an error handler to avoid unexpected bugs. Applications may register a new or different handler in the middle of a parse, and the SAX parser must begin using the new handler immediately.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#getErrorHandler()\"\u003e\u003ccode\u003egetErrorHandler()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ehandler\u003c/code\u003e - The error handler."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.xml.sax.ErrorHandler",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getErrorHandler",
      "comment": "Return the current error handler.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#setErrorHandler(org.xml.sax.ErrorHandler)\"\u003e\u003ccode\u003esetErrorHandler(org.xml.sax.ErrorHandler)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "The current error handler, or null if none has been registered."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        },
        {
          "name": "org.xml.sax.SAXException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.InputSource",
            "type": "Class"
          },
          "field": {
            "name": "input"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "parse",
      "comment": "Parse an XML document. The application can use this method to instruct the XML reader to begin parsing an XML document from any valid input source (a character stream, a byte stream, or a URI). Applications may not invoke this method while a parse is in progress (they should create a new XMLReader instead for each nested XML document). Once a parse is complete, an application may reuse the same XMLReader object, possibly with a different input source. Configuration of the XMLReader object (such as handler bindings and values established for feature flags and properties) is unchanged by completion of a parse, unless the definition of that aspect of the configuration explicitly specifies other behavior. (For example, feature flags or properties exposing characteristics of the document being parsed.) During the parse, the XMLReader will provide information about the XML document through the registered event handlers. This method is synchronous: it will not return until parsing has ended. If a client application wants to terminate parsing early, it should throw an exception.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/InputSource.html\" title\u003d\"class in org.xml.sax\"\u003e\u003ccode\u003eInputSource\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#parse(java.lang.String)\"\u003e\u003ccode\u003eparse(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#setEntityResolver(org.xml.sax.EntityResolver)\"\u003e\u003ccode\u003esetEntityResolver(org.xml.sax.EntityResolver)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#setDTDHandler(org.xml.sax.DTDHandler)\"\u003e\u003ccode\u003esetDTDHandler(org.xml.sax.DTDHandler)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#setContentHandler(org.xml.sax.ContentHandler)\"\u003e\u003ccode\u003esetContentHandler(org.xml.sax.ContentHandler)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#setErrorHandler(org.xml.sax.ErrorHandler)\"\u003e\u003ccode\u003esetErrorHandler(org.xml.sax.ErrorHandler)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003einput\u003c/code\u003e - The input source for the top-level of the XML document."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXException\u003c/a\u003e\u003c/code\u003e - Any SAX exception, possibly wrapping another exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - An IO exception from the parser, possibly from a byte stream or character stream supplied by the application."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        },
        {
          "name": "org.xml.sax.SAXException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "systemId"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "parse",
      "comment": "Parse an XML document from a system identifier (URI). This method is a shortcut for the common case of reading a document from a system identifier. It is the exact equivalent of the following:  parse(new InputSource(systemId));\n If the system identifier is a URL, it must be fully resolved by the application before it is passed to the parser.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#parse(org.xml.sax.InputSource)\"\u003e\u003ccode\u003eparse(org.xml.sax.InputSource)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esystemId\u003c/code\u003e - The system identifier (URI)."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXException\u003c/a\u003e\u003c/code\u003e - Any SAX exception, possibly wrapping another exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - An IO exception from the parser, possibly from a byte stream or character stream supplied by the application."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.xml.sax.XMLReader",
  "comment": "Interface for reading an XML document using callbacks. \n\u003cp\u003eXMLReader is the interface that an XML parser\u0027s SAX2 driver must implement. This interface allows an application to set and query features and properties in the parser, to register event handlers for document processing, and to initiate a document parse.\u003c/p\u003e \n\u003cp\u003eAll SAX interfaces are assumed to be synchronous: the \u003ca href\u003d\"#parse(org.xml.sax.InputSource)\"\u003e\u003ccode\u003eparse\u003c/code\u003e\u003c/a\u003e methods must not return until parsing is complete, and readers must wait for an event-handler callback to return before reporting the next event.\u003c/p\u003e \n\u003cp\u003eThis interface replaces the (now deprecated) SAX 1.0 \u003ca href\u003d\"Parser.html\" title\u003d\"interface in org.xml.sax\"\u003e\u003ccode\u003eParser\u003c/code\u003e\u003c/a\u003e interface. The XMLReader interface contains two important enhancements over the old Parser interface (as well as some minor ones):\u003c/p\u003e \n\u003col\u003e \n \u003cli\u003eit adds a standard way to query and set features and properties; and\u003c/li\u003e \n \u003cli\u003eit adds Namespace support, which is required for many higher-level XML standards.\u003c/li\u003e \n\u003c/ol\u003e \n\u003cp\u003eThere are adapters available to convert a SAX1 Parser to a SAX2 XMLReader and vice-versa.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLFilter.html\" title\u003d\"interface in org.xml.sax\"\u003e\u003ccode\u003eXMLFilter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/helpers/ParserAdapter.html\" title\u003d\"class in org.xml.sax.helpers\"\u003e\u003ccode\u003eParserAdapter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/helpers/XMLReaderAdapter.html\" title\u003d\"class in org.xml.sax.helpers\"\u003e\u003ccode\u003eXMLReaderAdapter\u003c/code\u003e\u003c/a\u003e"
    ],
    "apiNote": [
      "Despite its name, this interface does \n\u003cem\u003enot\u003c/em\u003e extend the standard Java \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Reader.html\" title\u003d\"class in java.io\"\u003e\u003ccode\u003eReader\u003c/code\u003e\u003c/a\u003e interface, because reading XML is a fundamentally different activity than reading character data."
    ],
    "since": [
      "1.4, SAX 2.0"
    ]
  }
}