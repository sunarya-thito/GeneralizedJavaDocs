{
  "packageName": "org.xml.sax",
  "simpleName": "Locator",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPublicId",
      "comment": "Return the public identifier for the current document event. The return value is the public identifier of the document entity or of the external parsed entity in which the markup triggering the event appears.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/Locator.html#getSystemId()\"\u003e\u003ccode\u003egetSystemId()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "A string containing the public identifier, or null if none is available."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSystemId",
      "comment": "Return the system identifier for the current document event. The return value is the system identifier of the document entity or of the external parsed entity in which the markup triggering the event appears. If the system identifier is a URL, the parser must resolve it fully before passing it to the application. For example, a file name must always be provided as a file:... URL, and other kinds of relative URI are also resolved against their bases.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/Locator.html#getPublicId()\"\u003e\u003ccode\u003egetPublicId()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "A string containing the system identifier, or null if none is available."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getLineNumber",
      "comment": "Return the line number where the current document event ends. Lines are delimited by line ends, which are defined in the XML specification. Warning: The return value from the method is intended only as an approximation for the sake of diagnostics; it is not intended to provide sufficient information to edit the character content of the original XML document. In some cases, these \"line\" numbers match what would be displayed as columns, and in others they may not match the source text due to internal entity expansion. The return value is an approximation of the line number in the document entity or external parsed entity where the markup triggering the event appears. If possible, the SAX driver should provide the line position of the first character after the text associated with the document event. The first line is line 1.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/Locator.html#getColumnNumber()\"\u003e\u003ccode\u003egetColumnNumber()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "The line number, or -1 if none is available."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getColumnNumber",
      "comment": "Return the column number where the current document event ends. This is one-based number of Java char values since the last line end. Warning: The return value from the method is intended only as an approximation for the sake of diagnostics; it is not intended to provide sufficient information to edit the character content of the original XML document. For example, when lines contain combining character sequences, wide characters, surrogate pairs, or bi-directional text, the value may not correspond to the column in a text editor\u0027s display. The return value is an approximation of the column number in the document entity or external parsed entity where the markup triggering the event appears. If possible, the SAX driver should provide the line position of the first character after the text associated with the document event. The first column in each line is column 1.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/Locator.html#getLineNumber()\"\u003e\u003ccode\u003egetLineNumber()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "The column number, or -1 if none is available."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.xml.sax.Locator",
  "comment": "Interface for associating a SAX event with a document location. \n\u003cp\u003eIf a SAX parser provides location information to the SAX application, it does so by implementing this interface and then passing an instance to the application using the content handler\u0027s \u003ca href\u003d\"ContentHandler.html#setDocumentLocator(org.xml.sax.Locator)\"\u003e\u003ccode\u003esetDocumentLocator\u003c/code\u003e\u003c/a\u003e method. The application can use the object to obtain the location of any other SAX event in the XML source document.\u003c/p\u003e \n\u003cp\u003eNote that the results returned by the object will be valid only during the scope of each callback method: the application will receive unpredictable results if it attempts to use the locator at any other time, or after parsing completes.\u003c/p\u003e \n\u003cp\u003eSAX parsers are not required to supply a locator, but they are very strongly encouraged to do so. If the parser supplies a locator, it must do so before reporting any other document events. If no locator has been set by the time the application receives the \u003ca href\u003d\"ContentHandler.html#startDocument()\"\u003e\u003ccode\u003estartDocument\u003c/code\u003e\u003c/a\u003e event, the application should assume that a locator is not available.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/ContentHandler.html#setDocumentLocator(org.xml.sax.Locator)\"\u003e\u003ccode\u003eContentHandler.setDocumentLocator(org.xml.sax.Locator)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4, SAX 1.0"
    ]
  }
}