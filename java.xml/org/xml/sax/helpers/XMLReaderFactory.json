{
  "packageName": "org.xml.sax.helpers",
  "simpleName": "XMLReaderFactory",
  "moduleName": "java.xml",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "org.xml.sax.XMLReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.xml.sax.SAXException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createXMLReader",
      "comment": "Obtains a new instance of a XMLReader. This method uses the following ordered lookup procedure to find and load the XMLReader implementation class: If the system property org.xml.sax.driver has a value, that is used as an XMLReader class name. Use the service-provider loading facility, defined by the ServiceLoader class, to attempt to locate and load an implementation of the service XMLReader by using the current thread\u0027s context class loader. If the context class loader is null, the system class loader will be used. Deprecated. Look for a class name in the META-INF/services/org.xml.sax.driver file in a jar file available to the runtime. Otherwise, the system-default implementation is returned.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/helpers/XMLReaderFactory.html#createXMLReader(java.lang.String)\"\u003e\u003ccode\u003ecreateXMLReader(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "apiNote": [
          "The process that looks for a class name in the \n\u003ccode\u003eMETA-INF/services/org.xml.sax.driver\u003c/code\u003e file in a jar file does not conform to the specification of the service-provider loading facility as defined in \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ServiceLoader.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eServiceLoader\u003c/code\u003e\u003c/a\u003e and therefore does not support modularization. It is deprecated as of Java SE 9 and subject to removal in a future release."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXException\u003c/a\u003e\u003c/code\u003e - If no default XMLReader class can be identified and instantiated."
        ],
        "return": [
          "a new XMLReader."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.xml.sax.XMLReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.xml.sax.SAXException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "className"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createXMLReader",
      "comment": "Attempt to create an XML reader from a class name. Given a class name, this method attempts to load and instantiate the class as an XML reader. Note that this method will not be usable in environments where the caller (perhaps an applet) is not permitted to load classes dynamically.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/helpers/XMLReaderFactory.html#createXMLReader()\"\u003e\u003ccode\u003ecreateXMLReader()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eclassName\u003c/code\u003e - a class name"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXException\u003c/a\u003e\u003c/code\u003e - If the class cannot be loaded, instantiated, and cast to XMLReader."
        ],
        "return": [
          "A new XML reader."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "org.xml.sax.helpers.XMLReaderFactory",
  "comment": "Factory for creating an XML reader. \n\u003cp\u003eThis class contains static methods for creating an XML reader from an explicit class name, or based on runtime defaults: \u003c/p\u003e\n\u003cpre\u003e try {\n   XMLReader myReader \u003d XMLReaderFactory.createXMLReader();\n } catch (SAXException e) {\n   System.err.println(e.getMessage());\n }\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNote to Distributions bundled with parsers:\u003c/strong\u003e You should modify the implementation of the no-arguments \u003cem\u003ecreateXMLReader\u003c/em\u003e to handle cases where the external configuration mechanisms aren\u0027t set up. That method should do its best to return a parser when one is in the class path, even when nothing bound its class name to \u003ccode\u003eorg.xml.sax.driver\u003c/code\u003e so those configuration mechanisms would see it.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4, SAX 2.0"
    ]
  }
}