{
  "packageName": "org.xml.sax",
  "simpleName": "Parser",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.xml.sax.SAXException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "locale"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setLocale",
      "comment": "Allow an application to request a locale for errors and warnings. SAX parsers are not required to provide localisation for errors and warnings; if they cannot support the requested locale, however, they must throw a SAX exception. Applications may not request a locale change in the middle of a parse.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXException.html\" title\u003d\"class in org.xml.sax\"\u003e\u003ccode\u003eSAXException\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXParseException.html\" title\u003d\"class in org.xml.sax\"\u003e\u003ccode\u003eSAXParseException\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elocale\u003c/code\u003e - A Java Locale object."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXException\u003c/a\u003e\u003c/code\u003e - Throws an exception (using the previous or default locale) if the requested locale is not supported."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.EntityResolver",
            "type": "Class"
          },
          "field": {
            "name": "resolver"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setEntityResolver",
      "comment": "Allow an application to register a custom entity resolver. If the application does not register an entity resolver, the SAX parser will resolve system identifiers and open connections to entities itself (this is the default behaviour implemented in HandlerBase). Applications may register a new or different entity resolver in the middle of a parse, and the SAX parser must begin using the new resolver immediately.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/EntityResolver.html\" title\u003d\"interface in org.xml.sax\"\u003e\u003ccode\u003eEntityResolver\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/HandlerBase.html\" title\u003d\"class in org.xml.sax\"\u003e\u003ccode\u003eHandlerBase\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eresolver\u003c/code\u003e - The object for resolving entities."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.DTDHandler",
            "type": "Class"
          },
          "field": {
            "name": "handler"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDTDHandler",
      "comment": "Allow an application to register a DTD event handler. If the application does not register a DTD handler, all DTD events reported by the SAX parser will be silently ignored (this is the default behaviour implemented by HandlerBase). Applications may register a new or different handler in the middle of a parse, and the SAX parser must begin using the new handler immediately.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/DTDHandler.html\" title\u003d\"interface in org.xml.sax\"\u003e\u003ccode\u003eDTDHandler\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/HandlerBase.html\" title\u003d\"class in org.xml.sax\"\u003e\u003ccode\u003eHandlerBase\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ehandler\u003c/code\u003e - The DTD handler."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.DocumentHandler",
            "type": "Class"
          },
          "field": {
            "name": "handler"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDocumentHandler",
      "comment": "Allow an application to register a document event handler. If the application does not register a document handler, all document events reported by the SAX parser will be silently ignored (this is the default behaviour implemented by HandlerBase). Applications may register a new or different handler in the middle of a parse, and the SAX parser must begin using the new handler immediately.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/DocumentHandler.html\" title\u003d\"interface in org.xml.sax\"\u003e\u003ccode\u003eDocumentHandler\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/HandlerBase.html\" title\u003d\"class in org.xml.sax\"\u003e\u003ccode\u003eHandlerBase\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ehandler\u003c/code\u003e - The document handler."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.ErrorHandler",
            "type": "Class"
          },
          "field": {
            "name": "handler"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setErrorHandler",
      "comment": "Allow an application to register an error event handler. If the application does not register an error event handler, all error events reported by the SAX parser will be silently ignored, except for fatalError, which will throw a SAXException (this is the default behaviour implemented by HandlerBase). Applications may register a new or different handler in the middle of a parse, and the SAX parser must begin using the new handler immediately.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/ErrorHandler.html\" title\u003d\"interface in org.xml.sax\"\u003e\u003ccode\u003eErrorHandler\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXException.html\" title\u003d\"class in org.xml.sax\"\u003e\u003ccode\u003eSAXException\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/HandlerBase.html\" title\u003d\"class in org.xml.sax\"\u003e\u003ccode\u003eHandlerBase\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ehandler\u003c/code\u003e - The error handler."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.xml.sax.SAXException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.InputSource",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "parse",
      "comment": "Parse an XML document. The application can use this method to instruct the SAX parser to begin parsing an XML document from any valid input source (a character stream, a byte stream, or a URI). Applications may not invoke this method while a parse is in progress (they should create a new Parser instead for each additional XML document). Once a parse is complete, an application may reuse the same Parser object, possibly with a different input source.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/InputSource.html\" title\u003d\"class in org.xml.sax\"\u003e\u003ccode\u003eInputSource\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/Parser.html#parse(java.lang.String)\"\u003e\u003ccode\u003eparse(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/Parser.html#setEntityResolver(org.xml.sax.EntityResolver)\"\u003e\u003ccode\u003esetEntityResolver(org.xml.sax.EntityResolver)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/Parser.html#setDTDHandler(org.xml.sax.DTDHandler)\"\u003e\u003ccode\u003esetDTDHandler(org.xml.sax.DTDHandler)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/Parser.html#setDocumentHandler(org.xml.sax.DocumentHandler)\"\u003e\u003ccode\u003esetDocumentHandler(org.xml.sax.DocumentHandler)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/Parser.html#setErrorHandler(org.xml.sax.ErrorHandler)\"\u003e\u003ccode\u003esetErrorHandler(org.xml.sax.ErrorHandler)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - The input source for the top-level of the XML document."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXException\u003c/a\u003e\u003c/code\u003e - Any SAX exception, possibly wrapping another exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - An IO exception from the parser, possibly from a byte stream or character stream supplied by the application."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.xml.sax.SAXException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "systemId"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "parse",
      "comment": "Parse an XML document from a system identifier (URI). This method is a shortcut for the common case of reading a document from a system identifier. It is the exact equivalent of the following:  parse(new InputSource(systemId));\n If the system identifier is a URL, it must be fully resolved by the application before it is passed to the parser.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/Parser.html#parse(org.xml.sax.InputSource)\"\u003e\u003ccode\u003eparse(org.xml.sax.InputSource)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esystemId\u003c/code\u003e - The system identifier (URI)."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXException\u003c/a\u003e\u003c/code\u003e - Any SAX exception, possibly wrapping another exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - An IO exception from the parser, possibly from a byte stream or character stream supplied by the application."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.xml.sax.Parser",
  "comment": "Basic interface for SAX (Simple API for XML) parsers. \n\u003cp\u003eThis was the main event supplier interface for SAX1; it has been replaced in SAX2 by \u003ca href\u003d\"XMLReader.html\" title\u003d\"interface in org.xml.sax\"\u003e\u003ccode\u003eXMLReader\u003c/code\u003e\u003c/a\u003e, which includes Namespace support and sophisticated configurability and extensibility.\u003c/p\u003e \n\u003cp\u003eAll SAX1 parsers must implement this basic interface: it allows applications to register handlers for different types of events and to initiate a parse from a URI, or a character stream.\u003c/p\u003e \n\u003cp\u003eAll SAX1 parsers must also implement a zero-argument constructor (though other constructors are also allowed).\u003c/p\u003e \n\u003cp\u003eSAX1 parsers are reusable but not re-entrant: the application may reuse a parser object (possibly with a different input source) once the first parse has completed successfully, but it may not invoke the parse() methods recursively within a parse.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/EntityResolver.html\" title\u003d\"interface in org.xml.sax\"\u003e\u003ccode\u003eEntityResolver\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/DTDHandler.html\" title\u003d\"interface in org.xml.sax\"\u003e\u003ccode\u003eDTDHandler\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/DocumentHandler.html\" title\u003d\"interface in org.xml.sax\"\u003e\u003ccode\u003eDocumentHandler\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/ErrorHandler.html\" title\u003d\"interface in org.xml.sax\"\u003e\u003ccode\u003eErrorHandler\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/HandlerBase.html\" title\u003d\"class in org.xml.sax\"\u003e\u003ccode\u003eHandlerBase\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/InputSource.html\" title\u003d\"class in org.xml.sax\"\u003e\u003ccode\u003eInputSource\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4, SAX 1.0"
    ]
  }
}