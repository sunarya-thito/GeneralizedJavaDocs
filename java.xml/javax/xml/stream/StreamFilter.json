{
  "packageName": "javax.xml.stream",
  "simpleName": "StreamFilter",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.xml.stream.XMLStreamReader",
            "type": "Class"
          },
          "field": {
            "name": "reader"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "accept",
      "comment": "Tests whether the current state is part of this stream. This method will return true if this filter accepts this event and false otherwise. The method should not change the state of the reader when accepting a state.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ereader\u003c/code\u003e - the event to test"
        ],
        "return": [
          "true if this filter accepts this event, false otherwise"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.xml.stream.StreamFilter",
  "comment": "This interface declares a simple filter interface that one can create to filter XMLStreamReaders",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}