{
  "packageName": "javax.xml.stream",
  "simpleName": "XMLStreamWriter",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "localName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeStartElement",
      "comment": "Writes a start tag to the output. All writeStartElement methods open a new scope in the internal namespace context. Writing the corresponding EndElement causes the scope to be closed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elocalName\u003c/code\u003e - local name of the tag, may not be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "namespaceURI"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "localName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeStartElement",
      "comment": "Writes a start tag to the output",
      "tagMap": {
        "param": [
          "\u003ccode\u003enamespaceURI\u003c/code\u003e - the namespaceURI of the prefix to use, may not be null",
          "\u003ccode\u003elocalName\u003c/code\u003e - local name of the tag, may not be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if the namespace URI has not been bound to a prefix and javax.xml.stream.isRepairingNamespaces has not been set to true"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "prefix"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "localName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "namespaceURI"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeStartElement",
      "comment": "Writes a start tag to the output",
      "tagMap": {
        "param": [
          "\u003ccode\u003elocalName\u003c/code\u003e - local name of the tag, may not be null",
          "\u003ccode\u003eprefix\u003c/code\u003e - the prefix of the tag, may not be null",
          "\u003ccode\u003enamespaceURI\u003c/code\u003e - the uri to bind the prefix to, may not be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "namespaceURI"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "localName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeEmptyElement",
      "comment": "Writes an empty element tag to the output",
      "tagMap": {
        "param": [
          "\u003ccode\u003enamespaceURI\u003c/code\u003e - the uri to bind the tag to, may not be null",
          "\u003ccode\u003elocalName\u003c/code\u003e - local name of the tag, may not be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if the namespace URI has not been bound to a prefix and javax.xml.stream.isRepairingNamespaces has not been set to true"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "prefix"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "localName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "namespaceURI"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeEmptyElement",
      "comment": "Writes an empty element tag to the output",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprefix\u003c/code\u003e - the prefix of the tag, may not be null",
          "\u003ccode\u003elocalName\u003c/code\u003e - local name of the tag, may not be null",
          "\u003ccode\u003enamespaceURI\u003c/code\u003e - the uri to bind the tag to, may not be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "localName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeEmptyElement",
      "comment": "Writes an empty element tag to the output",
      "tagMap": {
        "param": [
          "\u003ccode\u003elocalName\u003c/code\u003e - local name of the tag, may not be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeEndElement",
      "comment": "Writes an end tag to the output relying on the internal state of the writer to determine the prefix and local name of the event.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeEndDocument",
      "comment": "Closes any start tags and writes corresponding end tags.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "close",
      "comment": "Close this writer and free any resources associated with the writer. This must not close the underlying output stream.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "flush",
      "comment": "Write any cached data to the underlying output mechanism.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "localName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeAttribute",
      "comment": "Writes an attribute to the output stream without a prefix.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elocalName\u003c/code\u003e - the local name of the attribute",
          "\u003ccode\u003evalue\u003c/code\u003e - the value of the attribute"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the current state does not allow Attribute writing",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "prefix"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "namespaceURI"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "localName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeAttribute",
      "comment": "Writes an attribute to the output stream",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprefix\u003c/code\u003e - the prefix for this attribute",
          "\u003ccode\u003enamespaceURI\u003c/code\u003e - the uri of the prefix for this attribute",
          "\u003ccode\u003elocalName\u003c/code\u003e - the local name of the attribute",
          "\u003ccode\u003evalue\u003c/code\u003e - the value of the attribute"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the current state does not allow Attribute writing",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if the namespace URI has not been bound to a prefix and javax.xml.stream.isRepairingNamespaces has not been set to true"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "namespaceURI"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "localName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeAttribute",
      "comment": "Writes an attribute to the output stream",
      "tagMap": {
        "param": [
          "\u003ccode\u003enamespaceURI\u003c/code\u003e - the uri of the prefix for this attribute",
          "\u003ccode\u003elocalName\u003c/code\u003e - the local name of the attribute",
          "\u003ccode\u003evalue\u003c/code\u003e - the value of the attribute"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the current state does not allow Attribute writing",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if the namespace URI has not been bound to a prefix and javax.xml.stream.isRepairingNamespaces has not been set to true"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "prefix"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "namespaceURI"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeNamespace",
      "comment": "Writes a namespace to the output stream If the prefix argument to this method is the empty string, \"xmlns\", or null this method will delegate to writeDefaultNamespace",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprefix\u003c/code\u003e - the prefix to bind this namespace to",
          "\u003ccode\u003enamespaceURI\u003c/code\u003e - the uri to bind the prefix to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the current state does not allow Namespace writing",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "namespaceURI"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeDefaultNamespace",
      "comment": "Writes the default namespace to the stream",
      "tagMap": {
        "param": [
          "\u003ccode\u003enamespaceURI\u003c/code\u003e - the uri to bind the default namespace to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the current state does not allow Namespace writing",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeComment",
      "comment": "Writes an xml comment with the data enclosed",
      "tagMap": {
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - the data contained in the comment, may be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeProcessingInstruction",
      "comment": "Writes a processing instruction",
      "tagMap": {
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the target of the processing instruction, may not be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeProcessingInstruction",
      "comment": "Writes a processing instruction",
      "tagMap": {
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the target of the processing instruction, may not be null",
          "\u003ccode\u003edata\u003c/code\u003e - the data contained in the processing instruction, may not be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeCData",
      "comment": "Writes a CData section",
      "tagMap": {
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - the data contained in the CData Section, may not be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "dtd"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeDTD",
      "comment": "Write a DTD section. This string represents the entire doctypedecl production from the XML 1.0 specification.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edtd\u003c/code\u003e - the DTD to be written"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeEntityRef",
      "comment": "Writes an entity reference",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the entity"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeStartDocument",
      "comment": "Write the XML Declaration. Defaults the XML version to 1.0, and the encoding to utf-8",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "version"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeStartDocument",
      "comment": "Write the XML Declaration. Defaults the XML version to 1.0",
      "tagMap": {
        "param": [
          "\u003ccode\u003eversion\u003c/code\u003e - version of the xml document"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "encoding"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "version"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeStartDocument",
      "comment": "Write the XML Declaration. Note that the encoding parameter does not set the actual encoding of the underlying output. That must be set when the instance of the XMLStreamWriter is created using the XMLOutputFactory",
      "tagMap": {
        "param": [
          "\u003ccode\u003eencoding\u003c/code\u003e - encoding of the xml declaration",
          "\u003ccode\u003eversion\u003c/code\u003e - version of the xml document"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - If given encoding does not match encoding of the underlying stream"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "text"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeCharacters",
      "comment": "Write text to the output",
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the value to write"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "text"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "start"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "len"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "writeCharacters",
      "comment": "Write text to the output",
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the value to write",
          "\u003ccode\u003estart\u003c/code\u003e - the starting position in the array",
          "\u003ccode\u003elen\u003c/code\u003e - the number of characters to write"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "uri"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPrefix",
      "comment": "Gets the prefix the uri is bound to.",
      "tagMap": {
        "param": [
          "\u003ccode\u003euri\u003c/code\u003e - the uri the prefix is bound to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "the prefix or null"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "prefix"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "uri"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setPrefix",
      "comment": "Sets the prefix the uri is bound to. This prefix is bound in the scope of the current START_ELEMENT / END_ELEMENT pair. If this method is called before a START_ELEMENT has been written the prefix is bound in the root scope.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprefix\u003c/code\u003e - the prefix to bind to the uri, may not be null",
          "\u003ccode\u003euri\u003c/code\u003e - the uri to bind to the prefix, may be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "uri"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDefaultNamespace",
      "comment": "Binds a URI to the default namespace This URI is bound in the scope of the current START_ELEMENT / END_ELEMENT pair. If this method is called before a START_ELEMENT has been written the uri is bound in the root scope.",
      "tagMap": {
        "param": [
          "\u003ccode\u003euri\u003c/code\u003e - the uri to bind to the default namespace, may be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.namespace.NamespaceContext",
            "type": "Class"
          },
          "field": {
            "name": "context"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setNamespaceContext",
      "comment": "Sets the current namespace context for prefix and uri bindings. This context becomes the root namespace context for writing and will replace the current root namespace context. Subsequent calls to setPrefix and setDefaultNamespace will bind namespaces using the context passed to the method as the root context for resolving namespaces. This method may only be called once at the start of the document. It does not cause the namespaces to be declared. If a namespace URI to prefix mapping is found in the namespace context it is treated as declared and the prefix may be used by the StreamWriter.",
      "tagMap": {
        "param": [
          "\u003ccode\u003econtext\u003c/code\u003e - the namespace context to use for this writer, may not be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.namespace.NamespaceContext",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNamespaceContext",
      "comment": "Returns the current namespace context.",
      "tagMap": {
        "return": [
          "the current NamespaceContext"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getProperty",
      "comment": "Get the value of a feature/property from the underlying implementation",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the property, may not be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the property is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the name is null"
        ],
        "return": [
          "The value of the property"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.xml.stream.XMLStreamWriter",
  "comment": "The XMLStreamWriter interface specifies how to write XML. The XMLStreamWriter does not perform well formedness checking on its input. However the writeCharacters method is required to escape \u0026amp;, \u0026lt; and \u0026gt; For attribute values the writeAttribute method will escape the above characters plus \" to ensure that all character content and attribute values are well formed. Each NAMESPACE and ATTRIBUTE must be individually written. \n\u003ctable class\u003d\"striped\"\u003e \n \u003ccaption\u003e\n  XML Namespaces, \n  \u003ccode\u003ejavax.xml.stream.isRepairingNamespaces\u003c/code\u003e and write method behaviour\n \u003c/caption\u003e \n \u003cthead\u003e \n  \u003ctr style\u003d\"border-bottom: 1px solid black\"\u003e \n   \u003cth scope\u003d\"col\" rowspan\u003d\"2\"\u003eMethod\u003c/th\u003e \n   \u003c!-- method --\u003e \n   \u003cth scope\u003d\"col\" colspan\u003d\"2\"\u003e\u003ccode\u003eisRepairingNamespaces\u003c/code\u003e \u003d\u003d true\u003c/th\u003e \n   \u003cth scope\u003d\"col\" colspan\u003d\"2\"\u003e\u003ccode\u003eisRepairingNamespaces\u003c/code\u003e \u003d\u003d false\u003c/th\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003c!-- method --\u003e \n   \u003cth scope\u003d\"col\"\u003enamespaceURI bound\u003c/th\u003e \n   \u003cth scope\u003d\"col\"\u003enamespaceURI unbound\u003c/th\u003e \n   \u003cth scope\u003d\"col\"\u003enamespaceURI bound\u003c/th\u003e \n   \u003cth scope\u003d\"col\"\u003enamespaceURI unbound\u003c/th\u003e \n  \u003c/tr\u003e \n \u003c/thead\u003e \n \u003ctbody\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003ewriteAttribute(namespaceURI, localName, value)\u003c/code\u003e\u003c/th\u003e \n   \u003c!-- isRepairingNamespaces \u003d\u003d true --\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI bound --\u003e prefix:localName\u003d\"value\"\u0026nbsp;\u003csup\u003e[1]\u003c/sup\u003e \u003c/td\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI unbound --\u003e xmlns:{generated}\u003d\"namespaceURI\" {generated}:localName\u003d\"value\" \u003c/td\u003e \n   \u003c!-- isRepairingNamespaces \u003d\u003d false --\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI bound --\u003e prefix:localName\u003d\"value\"\u0026nbsp;\u003csup\u003e[1]\u003c/sup\u003e \u003c/td\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI unbound --\u003e \u003ccode\u003eXMLStreamException\u003c/code\u003e \u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003ewriteAttribute(prefix, namespaceURI, localName, value)\u003c/code\u003e\u003c/th\u003e \n   \u003c!-- isRepairingNamespaces \u003d\u003d true --\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI bound --\u003e bound to same prefix:\u003cbr\u003e prefix:localName\u003d\"value\"\u0026nbsp;\u003csup\u003e[1]\u003c/sup\u003e\u003cbr\u003e \u003cbr\u003e bound to different prefix:\u003cbr\u003e xmlns:{generated}\u003d\"namespaceURI\" {generated}:localName\u003d\"value\" \u003c/td\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI unbound --\u003e xmlns:prefix\u003d\"namespaceURI\" prefix:localName\u003d\"value\"\u0026nbsp;\u003csup\u003e[3]\u003c/sup\u003e \u003c/td\u003e \n   \u003c!-- isRepairingNamespaces \u003d\u003d false --\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI bound --\u003e bound to same prefix:\u003cbr\u003e prefix:localName\u003d\"value\"\u0026nbsp;\u003csup\u003e[1][2]\u003c/sup\u003e\u003cbr\u003e \u003cbr\u003e bound to different prefix:\u003cbr\u003e \u003ccode\u003eXMLStreamException\u003c/code\u003e\u003csup\u003e[2]\u003c/sup\u003e \u003c/td\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI unbound --\u003e xmlns:prefix\u003d\"namespaceURI\" prefix:localName\u003d\"value\"\u0026nbsp;\u003csup\u003e[2][5]\u003c/sup\u003e \u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003ewriteStartElement(namespaceURI, localName)\u003c/code\u003e\u003cbr\u003e \u003cbr\u003e \u003ccode\u003ewriteEmptyElement(namespaceURI, localName)\u003c/code\u003e\u003c/th\u003e \n   \u003c!-- isRepairingNamespaces \u003d\u003d true --\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI bound --\u003e \u003ccode\u003e\u0026lt;prefix:localName\u0026gt;\u003c/code\u003e\u0026nbsp;\u003csup\u003e[1]\u003c/sup\u003e \u003c/td\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI unbound --\u003e \u003ccode\u003e\u0026lt;{generated}:localName xmlns:{generated}\u003d\"namespaceURI\"\u0026gt;\u003c/code\u003e \u003c/td\u003e \n   \u003c!-- isRepairingNamespaces \u003d\u003d false --\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI bound --\u003e \u003ccode\u003eprefix:localName\u0026gt;\u003c/code\u003e\u0026nbsp;\u003csup\u003e[1]\u003c/sup\u003e \u003c/td\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI unbound --\u003e \u003ccode\u003eXMLStreamException\u003c/code\u003e \u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003ewriteStartElement(prefix, localName, namespaceURI)\u003c/code\u003e\u003cbr\u003e \u003cbr\u003e \u003ccode\u003ewriteEmptyElement(prefix, localName, namespaceURI)\u003c/code\u003e\u003c/th\u003e \n   \u003c!-- isRepairingNamespaces \u003d\u003d true --\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI bound --\u003e bound to same prefix:\u003cbr\u003e \u003ccode\u003e\u0026lt;prefix:localName\u0026gt;\u003c/code\u003e\u0026nbsp;\u003csup\u003e[1]\u003c/sup\u003e\u003cbr\u003e \u003cbr\u003e bound to different prefix:\u003cbr\u003e \u003ccode\u003e\u0026lt;{generated}:localName xmlns:{generated}\u003d\"namespaceURI\"\u0026gt;\u003c/code\u003e \u003c/td\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI unbound --\u003e \u003ccode\u003e\u0026lt;prefix:localName xmlns:prefix\u003d\"namespaceURI\"\u0026gt;\u003c/code\u003e\u0026nbsp;\u003csup\u003e[4]\u003c/sup\u003e \u003c/td\u003e \n   \u003c!-- isRepairingNamespaces \u003d\u003d false --\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI bound --\u003e bound to same prefix:\u003cbr\u003e \u003ccode\u003e\u0026lt;prefix:localName\u0026gt;\u003c/code\u003e\u0026nbsp;\u003csup\u003e[1]\u003c/sup\u003e\u003cbr\u003e \u003cbr\u003e bound to different prefix:\u003cbr\u003e \u003ccode\u003eXMLStreamException\u003c/code\u003e \u003c/td\u003e \n   \u003ctd\u003e \n    \u003c!-- namespaceURI unbound --\u003e \u003ccode\u003e\u0026lt;prefix:localName\u0026gt;\u003c/code\u003e\u0026nbsp; \u003c/td\u003e \n  \u003c/tr\u003e \n \u003c/tbody\u003e \n\u003c/table\u003e Notes: \n\u003cul\u003e \n \u003cli\u003e[1] if namespaceURI \u003d\u003d default Namespace URI, then no prefix is written\u003c/li\u003e \n \u003cli\u003e[2] if prefix \u003d\u003d \"\" || null \u0026amp;\u0026amp; namespaceURI \u003d\u003d \"\", then no prefix or Namespace declaration is generated or written\u003c/li\u003e \n \u003cli\u003e[3] if prefix \u003d\u003d \"\" || null, then a prefix is randomly generated\u003c/li\u003e \n \u003cli\u003e[4] if prefix \u003d\u003d \"\" || null, then it is treated as the default Namespace and no prefix is generated or written, an xmlns declaration is generated and written if the namespaceURI is unbound\u003c/li\u003e \n \u003cli\u003e[5] if prefix \u003d\u003d \"\" || null, then it is treated as an invalid attempt to define the default Namespace and an XMLStreamException is thrown\u003c/li\u003e \n\u003c/ul\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLOutputFactory.html\" title\u003d\"class in javax.xml.stream\"\u003e\u003ccode\u003eXMLOutputFactory\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamReader.html\" title\u003d\"interface in javax.xml.stream\"\u003e\u003ccode\u003eXMLStreamReader\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}