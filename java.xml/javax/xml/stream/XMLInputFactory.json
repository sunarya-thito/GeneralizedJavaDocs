{
  "packageName": "javax.xml.stream",
  "simpleName": "XMLInputFactory",
  "moduleName": "java.xml",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "IS_NAMESPACE_AWARE",
      "comment": "The property used to turn on/off namespace support, this is to support XML 1.0 documents, only the true setting must be supported",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.stream.XMLInputFactory.IS_NAMESPACE_AWARE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "IS_VALIDATING",
      "comment": "The property used to turn on/off implementation specific validation",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.stream.XMLInputFactory.IS_VALIDATING\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "IS_COALESCING",
      "comment": "The property that requires the parser to coalesce adjacent character data sections",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.stream.XMLInputFactory.IS_COALESCING\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "IS_REPLACING_ENTITY_REFERENCES",
      "comment": "Requires the parser to replace internal entity references with their replacement text and report them as characters",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.stream.XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "IS_SUPPORTING_EXTERNAL_ENTITIES",
      "comment": "The property that requires the parser to resolve external parsed entities",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.stream.XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SUPPORT_DTD",
      "comment": "The property that requires the parser to support DTDs",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.stream.XMLInputFactory.SUPPORT_DTD\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "REPORTER",
      "comment": "The property used to set/get the implementation of the XMLReporter interface",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.stream.XMLInputFactory.REPORTER\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "RESOLVER",
      "comment": "The property used to set/get the implementation of the XMLResolver",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.stream.XMLInputFactory.RESOLVER\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ALLOCATOR",
      "comment": "The property used to set/get the implementation of the allocator",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.stream.XMLInputFactory.ALLOCATOR\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLInputFactory",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newDefaultFactory",
      "comment": "Creates a new instance of the XMLInputFactory builtin system-default implementation.",
      "tagMap": {
        "return": [
          "A new instance of the \n\u003ccode\u003eXMLInputFactory\u003c/code\u003e builtin system-default implementation."
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLInputFactory",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.FactoryConfigurationError",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newInstance",
      "comment": "Creates a new instance of the factory in exactly the same manner as the newFactory() method.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/FactoryConfigurationError.html\" title\u003d\"class in javax.xml.stream\"\u003eFactoryConfigurationError\u003c/a\u003e\u003c/code\u003e - if an instance of this factory cannot be loaded"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLInputFactory\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLInputFactory",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.FactoryConfigurationError",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newFactory",
      "comment": "Create a new instance of the factory. This static method creates a new factory instance. This method uses the following ordered lookup procedure to determine the XMLInputFactory implementation class to load: Use the javax.xml.stream.XMLInputFactory system property. Use the configuration file \"stax.properties\". The file is in standard Properties format and typically located in the conf directory of the Java installation. It contains the fully qualified name of the implementation class with the key being the system property defined above. The stax.properties file is read only once by the implementation and its values are then cached for future use. If the file does not exist when the first attempt is made to read from it, no further attempts are made to check for its existence. It is not possible to change the value of any property in stax.properties after it has been read for the first time. Use the jaxp configuration file \"jaxp.properties\". The file is in the same format as stax.properties and will only be read if stax.properties does not exist. Use the service-provider loading facility, defined by the ServiceLoader class, to attempt to locate and load an implementation of the service using the default loading mechanism: the service-provider loading facility will use the current thread\u0027s context class loader to attempt to load the service. If the context class loader is null, the system class loader will be used. Otherwise, the system-default implementation is returned. Once an application has obtained a reference to a XMLInputFactory it can use the factory to configure and obtain stream instances.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/FactoryConfigurationError.html\" title\u003d\"class in javax.xml.stream\"\u003eFactoryConfigurationError\u003c/a\u003e\u003c/code\u003e - in case of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ServiceConfigurationError.html\" title\u003d\"class in java.util\"\u003eservice configuration error\u003c/a\u003e or if the implementation is not available or cannot be instantiated."
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLInputFactory\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLInputFactory",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.FactoryConfigurationError",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "factoryId"
          }
        },
        {
          "type": {
            "name": "java.lang.ClassLoader",
            "type": "Class"
          },
          "field": {
            "name": "classLoader"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newInstance",
      "comment": "Create a new instance of the factory.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "1.7"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003efactoryId\u003c/code\u003e - Name of the factory to find, same as a property name",
          "\u003ccode\u003eclassLoader\u003c/code\u003e - classLoader to use"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/FactoryConfigurationError.html\" title\u003d\"class in javax.xml.stream\"\u003eFactoryConfigurationError\u003c/a\u003e\u003c/code\u003e - if an instance of this factory cannot be loaded"
        ],
        "return": [
          "the factory implementation"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLInputFactory",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.FactoryConfigurationError",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "factoryId"
          }
        },
        {
          "type": {
            "name": "java.lang.ClassLoader",
            "type": "Class"
          },
          "field": {
            "name": "classLoader"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newFactory",
      "comment": "Create a new instance of the factory. If the classLoader argument is null, then the ContextClassLoader is used. This method uses the following ordered lookup procedure to determine the XMLInputFactory implementation class to load: Use the value of the system property identified by factoryId. Use the configuration file \"stax.properties\". The file is in standard Properties format and typically located in the conf directory of the Java installation. It contains the fully qualified name of the implementation class with the key being the system property defined above. The stax.properties file is read only once by the implementation and its values are then cached for future use. If the file does not exist when the first attempt is made to read from it, no further attempts are made to check for its existence. It is not possible to change the value of any property in stax.properties after it has been read for the first time. Use the jaxp configuration file \"jaxp.properties\". The file is in the same format as stax.properties and will only be read if stax.properties does not exist. If factoryId is \"javax.xml.stream.XMLInputFactory\", use the service-provider loading facility, defined by the ServiceLoader class, to attempt to locate and load an implementation of the service using the specified ClassLoader. If classLoader is null, the default loading mechanism will apply: That is, the service-provider loading facility will use the current thread\u0027s context class loader to attempt to load the service. If the context class loader is null, the system class loader will be used. Otherwise, throws a FactoryConfigurationError. Note that this is a new method that replaces the deprecated newInstance(String factoryId, ClassLoader classLoader) method. No changes in behavior are defined by this replacement method relative to the deprecated method.",
      "tagMap": {
        "apiNote": [
          "The parameter factoryId defined here is inconsistent with that of other JAXP factories where the first parameter is fully qualified factory class name that provides implementation of the factory."
        ],
        "param": [
          "\u003ccode\u003efactoryId\u003c/code\u003e - Name of the factory to find, same as a property name",
          "\u003ccode\u003eclassLoader\u003c/code\u003e - classLoader to use"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/FactoryConfigurationError.html\" title\u003d\"class in javax.xml.stream\"\u003eFactoryConfigurationError\u003c/a\u003e\u003c/code\u003e - in case of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ServiceConfigurationError.html\" title\u003d\"class in java.util\"\u003eservice configuration error\u003c/a\u003e or if the implementation is not available or cannot be instantiated.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/FactoryConfigurationError.html\" title\u003d\"class in javax.xml.stream\"\u003eFactoryConfigurationError\u003c/a\u003e\u003c/code\u003e - if an instance of this factory cannot be loaded"
        ],
        "return": [
          "the factory implementation"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLStreamReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.Reader",
            "type": "Class"
          },
          "field": {
            "name": "reader"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLStreamReader",
      "comment": "Create a new XMLStreamReader from a reader.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ereader\u003c/code\u003e - the XML data to read from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLStreamReader\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLStreamReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.transform.Source",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLStreamReader",
      "comment": "Create a new XMLStreamReader from a JAXP source. This method is optional.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the source to read from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if this method is not supported by this XMLInputFactory",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLStreamReader\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLStreamReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLStreamReader",
      "comment": "Create a new XMLStreamReader from a java.io.InputStream.",
      "tagMap": {
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the InputStream to read from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLStreamReader\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLStreamReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "encoding"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLStreamReader",
      "comment": "Create a new XMLStreamReader from a java.io.InputStream.",
      "tagMap": {
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the InputStream to read from",
          "\u003ccode\u003eencoding\u003c/code\u003e - the character encoding of the stream"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLStreamReader\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLStreamReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "systemId"
          }
        },
        {
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLStreamReader",
      "comment": "Create a new XMLStreamReader from a java.io.InputStream.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esystemId\u003c/code\u003e - the system ID of the stream",
          "\u003ccode\u003estream\u003c/code\u003e - the InputStream to read from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLStreamReader\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLStreamReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "systemId"
          }
        },
        {
          "type": {
            "name": "java.io.Reader",
            "type": "Class"
          },
          "field": {
            "name": "reader"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLStreamReader",
      "comment": "Create a new XMLStreamReader from a java.io.InputStream.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esystemId\u003c/code\u003e - the system ID of the stream",
          "\u003ccode\u003ereader\u003c/code\u003e - the InputStream to read from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLStreamReader\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLEventReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.Reader",
            "type": "Class"
          },
          "field": {
            "name": "reader"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLEventReader",
      "comment": "Create a new XMLEventReader from a reader.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ereader\u003c/code\u003e - the XML data to read from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLEventReader\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLEventReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "systemId"
          }
        },
        {
          "type": {
            "name": "java.io.Reader",
            "type": "Class"
          },
          "field": {
            "name": "reader"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLEventReader",
      "comment": "Create a new XMLEventReader from a reader.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esystemId\u003c/code\u003e - the system ID of the input",
          "\u003ccode\u003ereader\u003c/code\u003e - the XML data to read from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLEventReader\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLEventReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.stream.XMLStreamReader",
            "type": "Class"
          },
          "field": {
            "name": "reader"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLEventReader",
      "comment": "Create a new XMLEventReader from an XMLStreamReader. After being used to construct the XMLEventReader instance returned from this method the XMLStreamReader must not be used.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ereader\u003c/code\u003e - the XMLStreamReader to read from (may not be modified)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "a new XMLEventReader"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLEventReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.transform.Source",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLEventReader",
      "comment": "Create a new XMLEventReader from a JAXP source. Support of this method is optional.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the source to read from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if this method is not supported by this XMLInputFactory"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLEventReader\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLEventReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLEventReader",
      "comment": "Create a new XMLEventReader from a java.io.InputStream",
      "tagMap": {
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the InputStream to read from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLEventReader\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLEventReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "encoding"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLEventReader",
      "comment": "Create a new XMLEventReader from a java.io.InputStream",
      "tagMap": {
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the InputStream to read from",
          "\u003ccode\u003eencoding\u003c/code\u003e - the character encoding of the stream"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLEventReader\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLEventReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "systemId"
          }
        },
        {
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLEventReader",
      "comment": "Create a new XMLEventReader from a java.io.InputStream",
      "tagMap": {
        "param": [
          "\u003ccode\u003esystemId\u003c/code\u003e - the system ID of the stream",
          "\u003ccode\u003estream\u003c/code\u003e - the InputStream to read from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLEventReader\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLStreamReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.stream.XMLStreamReader",
            "type": "Class"
          },
          "field": {
            "name": "reader"
          }
        },
        {
          "type": {
            "name": "javax.xml.stream.StreamFilter",
            "type": "Class"
          },
          "field": {
            "name": "filter"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createFilteredReader",
      "comment": "Create a filtered reader that wraps the filter around the reader",
      "tagMap": {
        "param": [
          "\u003ccode\u003ereader\u003c/code\u003e - the reader to filter",
          "\u003ccode\u003efilter\u003c/code\u003e - the filter to apply to the reader"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLEventReader\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLEventReader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.stream.XMLEventReader",
            "type": "Class"
          },
          "field": {
            "name": "reader"
          }
        },
        {
          "type": {
            "name": "javax.xml.stream.EventFilter",
            "type": "Class"
          },
          "field": {
            "name": "filter"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createFilteredReader",
      "comment": "Create a filtered event reader that wraps the filter around the event reader",
      "tagMap": {
        "param": [
          "\u003ccode\u003ereader\u003c/code\u003e - the event reader to wrap",
          "\u003ccode\u003efilter\u003c/code\u003e - the filter to apply to the event reader"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLEventReader\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLResolver",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getXMLResolver",
      "comment": "The resolver that will be set on any XMLStreamReader or XMLEventReader created by this factory instance.",
      "tagMap": {
        "return": [
          "an instance of the \n\u003ccode\u003eXMLResolver\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.xml.stream.XMLResolver",
            "type": "Class"
          },
          "field": {
            "name": "resolver"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "setXMLResolver",
      "comment": "The resolver that will be set on any XMLStreamReader or XMLEventReader created by this factory instance.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eresolver\u003c/code\u003e - the resolver to use to resolve references"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLReporter",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getXMLReporter",
      "comment": "The reporter that will be set on any XMLStreamReader or XMLEventReader created by this factory instance.",
      "tagMap": {
        "return": [
          "an instance of the \n\u003ccode\u003eXMLReporter\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.xml.stream.XMLReporter",
            "type": "Class"
          },
          "field": {
            "name": "reporter"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "setXMLReporter",
      "comment": "The reporter that will be set on any XMLStreamReader or XMLEventReader created by this factory instance.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ereporter\u003c/code\u003e - the resolver to use to report non fatal errors"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "setProperty",
      "comment": "Allows the user to set specific feature/property on the underlying implementation. The underlying implementation is not required to support every setting of every property in the specification and may use IllegalArgumentException to signal that an unsupported property may not be set with the specified value. All implementations that implement JAXP 1.5 or newer are required to support the XMLConstants.ACCESS_EXTERNAL_DTD property. Access to external DTDs, external Entity References is restricted to the protocols specified by the property. If access is denied during parsing due to the restriction of this property, XMLStreamException will be thrown by the XMLStreamReader.next() or XMLEventReader.nextEvent() method.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the property (may not be null)",
          "\u003ccode\u003evalue\u003c/code\u003e - The value of the property"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the property is not supported"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getProperty",
      "comment": "Get the value of a feature/property from the underlying implementation",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the property (may not be null)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the property is not supported"
        ],
        "return": [
          "The value of the property"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "isPropertySupported",
      "comment": "Query the set of properties that this factory supports.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the property (may not be null)"
        ],
        "return": [
          "true if the property is supported and false otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.xml.stream.util.XMLEventAllocator",
            "type": "Class"
          },
          "field": {
            "name": "allocator"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "setEventAllocator",
      "comment": "Set a user defined event allocator for events",
      "tagMap": {
        "param": [
          "\u003ccode\u003eallocator\u003c/code\u003e - the user defined allocator"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.util.XMLEventAllocator",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getEventAllocator",
      "comment": "Gets the allocator used by streams created with this factory",
      "tagMap": {
        "return": [
          "an instance of the \n\u003ccode\u003eXMLEventAllocator\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Protected constructor to prevent instantiation. Use newFactory() instead.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.xml.stream.XMLInputFactory",
  "comment": "Defines an abstract implementation of a factory for getting streams. The following table defines the standard properties of this specification. Each property varies in the level of support required by each implementation. The level of support required is described in the \u0027Required\u0027 column. \n\u003ctable class\u003d\"striped\"\u003e \n \u003ccaption\u003e\n  Configuration Parameters\n \u003c/caption\u003e \n \u003cthead\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"col\"\u003eProperty Name\u003c/th\u003e \n   \u003cth scope\u003d\"col\"\u003eBehavior\u003c/th\u003e \n   \u003cth scope\u003d\"col\"\u003eReturn type\u003c/th\u003e \n   \u003cth scope\u003d\"col\"\u003eDefault Value\u003c/th\u003e \n   \u003cth scope\u003d\"col\"\u003eRequired\u003c/th\u003e \n  \u003c/tr\u003e \n \u003c/thead\u003e \n \u003ctbody\u003e \n  \u003ctr\u003e\n   \u003cth scope\u003d\"row\"\u003ejavax.xml.stream.isValidating\u003c/th\u003e\n   \u003ctd\u003eTurns on/off implementation specific DTD validation\u003c/td\u003e\n   \u003ctd\u003eBoolean\u003c/td\u003e\n   \u003ctd\u003eFalse\u003c/td\u003e\n   \u003ctd\u003eNo\u003c/td\u003e\n  \u003c/tr\u003e \n  \u003ctr\u003e\n   \u003cth scope\u003d\"row\"\u003ejavax.xml.stream.isNamespaceAware\u003c/th\u003e\n   \u003ctd\u003eTurns on/off namespace processing for XML 1.0 support\u003c/td\u003e\n   \u003ctd\u003eBoolean\u003c/td\u003e\n   \u003ctd\u003eTrue\u003c/td\u003e\n   \u003ctd\u003eTrue (required) / False (optional)\u003c/td\u003e\n  \u003c/tr\u003e \n  \u003ctr\u003e\n   \u003cth scope\u003d\"row\"\u003ejavax.xml.stream.isCoalescing\u003c/th\u003e\n   \u003ctd\u003eRequires the processor to coalesce adjacent character data\u003c/td\u003e\n   \u003ctd\u003eBoolean\u003c/td\u003e\n   \u003ctd\u003eFalse\u003c/td\u003e\n   \u003ctd\u003eYes\u003c/td\u003e\n  \u003c/tr\u003e \n  \u003ctr\u003e\n   \u003cth scope\u003d\"row\"\u003ejavax.xml.stream.isReplacingEntityReferences\u003c/th\u003e\n   \u003ctd\u003ereplace internal entity references with their replacement text and report them as characters\u003c/td\u003e\n   \u003ctd\u003eBoolean\u003c/td\u003e\n   \u003ctd\u003eTrue\u003c/td\u003e\n   \u003ctd\u003eYes\u003c/td\u003e\n  \u003c/tr\u003e \n  \u003ctr\u003e\n   \u003cth scope\u003d\"row\"\u003ejavax.xml.stream.isSupportingExternalEntities\u003c/th\u003e\n   \u003ctd\u003eResolve external parsed entities\u003c/td\u003e\n   \u003ctd\u003eBoolean\u003c/td\u003e\n   \u003ctd\u003eUnspecified\u003c/td\u003e\n   \u003ctd\u003eYes\u003c/td\u003e\n  \u003c/tr\u003e \n  \u003ctr\u003e\n   \u003cth scope\u003d\"row\"\u003ejavax.xml.stream.supportDTD\u003c/th\u003e\n   \u003ctd\u003eUse this property to request processors that do not support DTDs\u003c/td\u003e\n   \u003ctd\u003eBoolean\u003c/td\u003e\n   \u003ctd\u003eTrue\u003c/td\u003e\n   \u003ctd\u003eYes\u003c/td\u003e\n  \u003c/tr\u003e \n  \u003ctr\u003e\n   \u003cth scope\u003d\"row\"\u003ejavax.xml.stream.reporter\u003c/th\u003e\n   \u003ctd\u003esets/gets the impl of the XMLReporter \u003c/td\u003e\n   \u003ctd\u003ejavax.xml.stream.XMLReporter\u003c/td\u003e\n   \u003ctd\u003eNull\u003c/td\u003e\n   \u003ctd\u003eYes\u003c/td\u003e\n  \u003c/tr\u003e \n  \u003ctr\u003e\n   \u003cth scope\u003d\"row\"\u003ejavax.xml.stream.resolver\u003c/th\u003e\n   \u003ctd\u003esets/gets the impl of the XMLResolver interface\u003c/td\u003e\n   \u003ctd\u003ejavax.xml.stream.XMLResolver\u003c/td\u003e\n   \u003ctd\u003eNull\u003c/td\u003e\n   \u003ctd\u003eYes\u003c/td\u003e\n  \u003c/tr\u003e \n  \u003ctr\u003e\n   \u003cth scope\u003d\"row\"\u003ejavax.xml.stream.allocator\u003c/th\u003e\n   \u003ctd\u003esets/gets the impl of the XMLEventAllocator interface\u003c/td\u003e\n   \u003ctd\u003ejavax.xml.stream.util.XMLEventAllocator\u003c/td\u003e\n   \u003ctd\u003eNull\u003c/td\u003e\n   \u003ctd\u003eYes\u003c/td\u003e\n  \u003c/tr\u003e \n \u003c/tbody\u003e \n\u003c/table\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLOutputFactory.html\" title\u003d\"class in javax.xml.stream\"\u003e\u003ccode\u003eXMLOutputFactory\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLEventReader.html\" title\u003d\"interface in javax.xml.stream\"\u003e\u003ccode\u003eXMLEventReader\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamReader.html\" title\u003d\"interface in javax.xml.stream\"\u003e\u003ccode\u003eXMLStreamReader\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/EventFilter.html\" title\u003d\"interface in javax.xml.stream\"\u003e\u003ccode\u003eEventFilter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLReporter.html\" title\u003d\"interface in javax.xml.stream\"\u003e\u003ccode\u003eXMLReporter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLResolver.html\" title\u003d\"interface in javax.xml.stream\"\u003e\u003ccode\u003eXMLResolver\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/util/XMLEventAllocator.html\" title\u003d\"interface in javax.xml.stream.util\"\u003e\u003ccode\u003eXMLEventAllocator\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}