{
  "packageName": "javax.xml.stream.events",
  "simpleName": "EntityReference",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.xml.stream.events.XMLEvent",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.xml.stream.events.EntityDeclaration",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDeclaration",
      "comment": "Return the declaration of this entity.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the declaration"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getName",
      "comment": "The name of the entity",
      "annotations": [],
      "tagMap": {
        "return": [
          "the entity\u0027s name, may not be null"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.xml.stream.events.EntityReference",
  "comment": "An interface for handling Entity events. This event reports entities that have not been resolved and reports their replacement text unprocessed (if available). This event will be reported if javax.xml.stream.isReplacingEntityReferences is set to false. If javax.xml.stream.isReplacingEntityReferences is set to true entity references will be resolved transparently. Entities are handled in two possible ways: (1) If javax.xml.stream.isReplacingEntityReferences is set to true all entity references are resolved and reported as markup transparently. (2) If javax.xml.stream.isReplacingEntityReferences is set to false Entity references are reported as an EntityReference Event.",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}