{
  "packageName": "javax.xml.stream.events",
  "simpleName": "EntityDeclaration",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.xml.stream.events.XMLEvent",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPublicId",
      "comment": "The entity\u0027s public identifier, or null if none was given",
      "tagMap": {
        "return": [
          "the public ID for this declaration or null"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSystemId",
      "comment": "The entity\u0027s system identifier.",
      "tagMap": {
        "return": [
          "the system ID for this declaration or null"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getName",
      "comment": "The entity\u0027s name",
      "tagMap": {
        "return": [
          "the name, may not be null"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNotationName",
      "comment": "The name of the associated notation.",
      "tagMap": {
        "return": [
          "the notation name"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getReplacementText",
      "comment": "The replacement text of the entity. This method will only return non-null if this is an internal entity.",
      "tagMap": {
        "return": [
          "null or the replacment text"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBaseURI",
      "comment": "Get the base URI for this reference or null if this information is not available",
      "tagMap": {
        "return": [
          "the base URI or null"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.xml.stream.events.EntityDeclaration",
  "comment": "An interface for handling Entity Declarations This interface is used to record and report unparsed entity declarations.",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}