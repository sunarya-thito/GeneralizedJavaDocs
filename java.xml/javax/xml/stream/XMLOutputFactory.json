{
  "packageName": "javax.xml.stream",
  "simpleName": "XMLOutputFactory",
  "moduleName": "java.xml",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "IS_REPAIRING_NAMESPACES",
      "comment": "Property used to set prefix defaulting on the output side",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.stream.XMLOutputFactory.IS_REPAIRING_NAMESPACES\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLOutputFactory",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newDefaultFactory",
      "comment": "Creates a new instance of the XMLOutputFactory builtin system-default implementation.",
      "tagMap": {
        "return": [
          "A new instance of the \n\u003ccode\u003eXMLOutputFactory\u003c/code\u003e builtin system-default implementation."
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLOutputFactory",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.FactoryConfigurationError",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newInstance",
      "comment": "Creates a new instance of the factory in exactly the same manner as the newFactory() method.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/FactoryConfigurationError.html\" title\u003d\"class in javax.xml.stream\"\u003eFactoryConfigurationError\u003c/a\u003e\u003c/code\u003e - if an instance of this factory cannot be loaded"
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLOutputFactory\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLOutputFactory",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.FactoryConfigurationError",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newFactory",
      "comment": "Create a new instance of the factory. This static method creates a new factory instance. This method uses the following ordered lookup procedure to determine the XMLOutputFactory implementation class to load: Use the javax.xml.stream.XMLOutputFactory system property. Use the configuration file \"stax.properties\". The file is in standard Properties format and typically located in the conf directory of the Java installation. It contains the fully qualified name of the implementation class with the key being the system property defined above. The stax.properties file is read only once by the implementation and its values are then cached for future use. If the file does not exist when the first attempt is made to read from it, no further attempts are made to check for its existence. It is not possible to change the value of any property in stax.properties after it has been read for the first time. Use the jaxp configuration file \"jaxp.properties\". The file is in the same format as stax.properties and will only be read if stax.properties does not exist. Use the service-provider loading facility, defined by the ServiceLoader class, to attempt to locate and load an implementation of the service using the default loading mechanism: the service-provider loading facility will use the current thread\u0027s context class loader to attempt to load the service. If the context class loader is null, the system class loader will be used. Otherwise, the system-default implementation is returned. Once an application has obtained a reference to a XMLOutputFactory it can use the factory to configure and obtain stream instances.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/FactoryConfigurationError.html\" title\u003d\"class in javax.xml.stream\"\u003eFactoryConfigurationError\u003c/a\u003e\u003c/code\u003e - in case of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ServiceConfigurationError.html\" title\u003d\"class in java.util\"\u003eservice configuration error\u003c/a\u003e or if the implementation is not available or cannot be instantiated."
        ],
        "return": [
          "an instance of the \n\u003ccode\u003eXMLOutputFactory\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLInputFactory",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.FactoryConfigurationError",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "factoryId"
          }
        },
        {
          "type": {
            "name": "java.lang.ClassLoader",
            "type": "Class"
          },
          "field": {
            "name": "classLoader"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newInstance",
      "comment": "Create a new instance of the factory.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "1.7"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003efactoryId\u003c/code\u003e - Name of the factory to find, same as a property name",
          "\u003ccode\u003eclassLoader\u003c/code\u003e - classLoader to use"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/FactoryConfigurationError.html\" title\u003d\"class in javax.xml.stream\"\u003eFactoryConfigurationError\u003c/a\u003e\u003c/code\u003e - if an instance of this factory cannot be loaded"
        ],
        "return": [
          "the factory implementation"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLOutputFactory",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.FactoryConfigurationError",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "factoryId"
          }
        },
        {
          "type": {
            "name": "java.lang.ClassLoader",
            "type": "Class"
          },
          "field": {
            "name": "classLoader"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newFactory",
      "comment": "Create a new instance of the factory. If the classLoader argument is null, then the ContextClassLoader is used. This method uses the following ordered lookup procedure to determine the XMLOutputFactory implementation class to load: Use the value of the system property identified by factoryId. Use the configuration file \"stax.properties\". The file is in standard Properties format and typically located in the conf directory of the Java installation. It contains the fully qualified name of the implementation class with the key being the system property defined above. The stax.properties file is read only once by the implementation and its values are then cached for future use. If the file does not exist when the first attempt is made to read from it, no further attempts are made to check for its existence. It is not possible to change the value of any property in stax.properties after it has been read for the first time. Use the jaxp configuration file \"jaxp.properties\". The file is in the same format as stax.properties and will only be read if stax.properties does not exist. If factoryId is \"javax.xml.stream.XMLOutputFactory\", use the service-provider loading facility, defined by the ServiceLoader class, to attempt to locate and load an implementation of the service using the specified ClassLoader. If classLoader is null, the default loading mechanism will apply: That is, the service-provider loading facility will use the current thread\u0027s context class loader to attempt to load the service. If the context class loader is null, the system class loader will be used. Otherwise, throws a FactoryConfigurationError.",
      "tagMap": {
        "apiNote": [
          "The parameter factoryId defined here is inconsistent with that of other JAXP factories where the first parameter is fully qualified factory class name that provides implementation of the factory. \n\u003cp\u003e Note that this is a new method that replaces the deprecated \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLOutputFactory.html#newInstance(java.lang.String,java.lang.ClassLoader)\"\u003e\u003ccode\u003enewInstance(String factoryId, ClassLoader classLoader)\u003c/code\u003e\u003c/a\u003e method. The original method was incorrectly defined to return XMLInputFactory.\u003c/p\u003e"
        ],
        "param": [
          "\u003ccode\u003efactoryId\u003c/code\u003e - Name of the factory to find, same as a property name",
          "\u003ccode\u003eclassLoader\u003c/code\u003e - classLoader to use"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/FactoryConfigurationError.html\" title\u003d\"class in javax.xml.stream\"\u003eFactoryConfigurationError\u003c/a\u003e\u003c/code\u003e - in case of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ServiceConfigurationError.html\" title\u003d\"class in java.util\"\u003eservice configuration error\u003c/a\u003e or if the implementation is not available or cannot be instantiated."
        ],
        "return": [
          "the factory implementation"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLStreamWriter",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.Writer",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLStreamWriter",
      "comment": "Create a new XMLStreamWriter that writes to a writer",
      "tagMap": {
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the writer to write to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "instance of the \n\u003ccode\u003eXMLStreamWriter\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLStreamWriter",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLStreamWriter",
      "comment": "Create a new XMLStreamWriter that writes to a stream",
      "tagMap": {
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the stream to write to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "instance of the \n\u003ccode\u003eXMLStreamWriter\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLStreamWriter",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "encoding"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLStreamWriter",
      "comment": "Create a new XMLStreamWriter that writes to a stream",
      "tagMap": {
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the stream to write to",
          "\u003ccode\u003eencoding\u003c/code\u003e - the encoding to use"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "instance of the \n\u003ccode\u003eXMLStreamWriter\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLStreamWriter",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.transform.Result",
            "type": "Class"
          },
          "field": {
            "name": "result"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLStreamWriter",
      "comment": "Create a new XMLStreamWriter that writes to a JAXP result. This method is optional.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eresult\u003c/code\u003e - the result to write to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if this method is not supported by this XMLOutputFactory",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "instance of the \n\u003ccode\u003eXMLStreamWriter\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLEventWriter",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.transform.Result",
            "type": "Class"
          },
          "field": {
            "name": "result"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLEventWriter",
      "comment": "Create a new XMLEventWriter that writes to a JAXP result. This method is optional.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eresult\u003c/code\u003e - the result to write to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if this method is not supported by this XMLOutputFactory",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "instance of the \n\u003ccode\u003eXMLEventWriter\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLEventWriter",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLEventWriter",
      "comment": "Create a new XMLEventWriter that writes to a stream",
      "tagMap": {
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the stream to write to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "instance of the \n\u003ccode\u003eXMLEventWriter\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLEventWriter",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "encoding"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLEventWriter",
      "comment": "Create a new XMLEventWriter that writes to a stream",
      "tagMap": {
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the stream to write to",
          "\u003ccode\u003eencoding\u003c/code\u003e - the encoding to use"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "instance of the \n\u003ccode\u003eXMLEventWriter\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.stream.XMLEventWriter",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.stream.XMLStreamException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.Writer",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createXMLEventWriter",
      "comment": "Create a new XMLEventWriter that writes to a writer",
      "tagMap": {
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the stream to write to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamException.html\" title\u003d\"class in javax.xml.stream\"\u003eXMLStreamException\u003c/a\u003e\u003c/code\u003e - if an error occurs"
        ],
        "return": [
          "instance of the \n\u003ccode\u003eXMLEventWriter\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "setProperty",
      "comment": "Allows the user to set specific features/properties on the underlying implementation.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the property",
          "\u003ccode\u003evalue\u003c/code\u003e - The value of the property"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the property is not supported"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getProperty",
      "comment": "Get a feature/property on the underlying implementation",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the property"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the property is not supported"
        ],
        "return": [
          "The value of the property"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "isPropertySupported",
      "comment": "Query the set of properties that this factory supports.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the property (may not be null)"
        ],
        "return": [
          "true if the property is supported and false otherwise"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Protected constructor to prevent instantiation. Use newFactory() instead.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.xml.stream.XMLOutputFactory",
  "comment": "Defines an abstract implementation of a factory for getting XMLEventWriters and XMLStreamWriters. The following table defines the standard properties of this specification. Each property varies in the level of support required by each implementation. The level of support required is described in the \u0027Required\u0027 column. \n\u003ctable class\u003d\"striped\"\u003e \n \u003ccaption\u003e\n  Configuration Parameters\n \u003c/caption\u003e \n \u003cthead\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"col\"\u003eProperty Name\u003c/th\u003e \n   \u003cth scope\u003d\"col\"\u003eBehavior\u003c/th\u003e \n   \u003cth scope\u003d\"col\"\u003eReturn type\u003c/th\u003e \n   \u003cth scope\u003d\"col\"\u003eDefault Value\u003c/th\u003e \n   \u003cth scope\u003d\"col\"\u003eRequired\u003c/th\u003e \n  \u003c/tr\u003e \n \u003c/thead\u003e \n \u003ctbody\u003e \n  \u003ctr\u003e\n   \u003cth scope\u003d\"row\"\u003ejavax.xml.stream.isRepairingNamespaces\u003c/th\u003e\n   \u003ctd\u003edefaults prefixes on the output side\u003c/td\u003e\n   \u003ctd\u003eBoolean\u003c/td\u003e\n   \u003ctd\u003eFalse\u003c/td\u003e\n   \u003ctd\u003eYes\u003c/td\u003e\n  \u003c/tr\u003e \n \u003c/tbody\u003e \n\u003c/table\u003e \n\u003cp\u003eThe following paragraphs describe the namespace and prefix repair algorithm: \u003c/p\u003e\n\u003cp\u003eThe property can be set with the following code line: \u003ccode\u003esetProperty(\"javax.xml.stream.isRepairingNamespaces\", new Boolean(true|false));\u003c/code\u003e \u003c/p\u003e\n\u003cp\u003eThis property specifies that the writer default namespace prefix declarations. The default value is false. \u003c/p\u003e\n\u003cp\u003eIf a writer isRepairingNamespaces it will create a namespace declaration on the current StartElement for any attribute that does not currently have a namespace declaration in scope. If the StartElement has a uri but no prefix specified a prefix will be assigned, if the prefix has not been declared in a parent of the current StartElement it will be declared on the current StartElement. If the defaultNamespace is bound and in scope and the default namespace matches the URI of the attribute or StartElement QName no prefix will be assigned. \u003c/p\u003e\n\u003cp\u003eIf an element or attribute name has a prefix, but is not bound to any namespace URI, then the prefix will be removed during serialization. \u003c/p\u003e\n\u003cp\u003eIf element and/or attribute names in the same start or empty-element tag are bound to different namespace URIs and are using the same prefix then the element or the first occurring attribute retains the original prefix and the following attributes have their prefixes replaced with a new prefix that is bound to the namespace URIs of those attributes. \u003c/p\u003e\n\u003cp\u003eIf an element or attribute name uses a prefix that is bound to a different URI than that inherited from the namespace context of the parent of that element and there is no namespace declaration in the context of the current element then such a namespace declaration is added. \u003c/p\u003e\n\u003cp\u003eIf an element or attribute name is bound to a prefix and there is a namespace declaration that binds that prefix to a different URI then that namespace declaration is either removed if the correct mapping is inherited from the parent context of that element, or changed to the namespace URI of the element or attribute using that prefix.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLInputFactory.html\" title\u003d\"class in javax.xml.stream\"\u003e\u003ccode\u003eXMLInputFactory\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLEventWriter.html\" title\u003d\"interface in javax.xml.stream\"\u003e\u003ccode\u003eXMLEventWriter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/stream/XMLStreamWriter.html\" title\u003d\"interface in javax.xml.stream\"\u003e\u003ccode\u003eXMLStreamWriter\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}