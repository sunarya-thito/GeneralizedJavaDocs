{
  "packageName": "javax.xml.transform.stream",
  "simpleName": "StreamResult",
  "moduleName": "java.xml",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "FEATURE",
      "comment": "If TransformerFactory.getFeature(java.lang.String) returns true when passed this value as an argument, the Transformer supports Result output of this type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.transform.stream.StreamResult.FEATURE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "outputStream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOutputStream",
      "comment": "Set the ByteStream that is to be written to. Normally, a stream should be used rather than a reader, so that the transformer may use instructions contained in the transformation instructions to control the encoding.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eoutputStream\u003c/code\u003e - A valid OutputStream reference."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.OutputStream",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOutputStream",
      "comment": "Get the byte stream that was set with setOutputStream.",
      "tagMap": {
        "return": [
          "The byte stream that was set with setOutputStream, or null if setOutputStream or the ByteStream constructor was not called."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.io.Writer",
            "type": "Class"
          },
          "field": {
            "name": "writer"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setWriter",
      "comment": "Set the writer that is to receive the result. Normally, a stream should be used rather than a writer, so that the transformer may use instructions contained in the transformation instructions to control the encoding. However, there are times when it is useful to write to a writer, such as when using a StringWriter.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ewriter\u003c/code\u003e - A valid Writer reference."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.Writer",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getWriter",
      "comment": "Get the character stream that was set with setWriter.",
      "tagMap": {
        "return": [
          "The character stream that was set with setWriter, or null if setWriter or the Writer constructor was not called."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "systemId"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSystemId",
      "comment": "Set the systemID that may be used in association with the byte or character stream, or, if neither is set, use this value as a writeable URI (probably a file name).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/Result.html#setSystemId(java.lang.String)\"\u003esetSystemId\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/Result.html\" title\u003d\"interface in javax.xml.transform\"\u003eResult\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esystemId\u003c/code\u003e - The system identifier as a URI string."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "field": {
            "name": "f"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSystemId",
      "comment": "Set the system ID from a File reference.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - Must a non-null File reference."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSystemId",
      "comment": "Get the system identifier that was set with setSystemId.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/Result.html#getSystemId()\"\u003egetSystemId\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/Result.html\" title\u003d\"interface in javax.xml.transform\"\u003eResult\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "The system identifier that was set with setSystemId, or null if setSystemId was not called."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Zero-argument default constructor.",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "outputStream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a StreamResult from a byte stream. Normally, a stream should be used rather than a reader, so that the transformer may use instructions contained in the transformation instructions to control the encoding.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eoutputStream\u003c/code\u003e - A valid OutputStream reference."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.io.Writer",
            "type": "Class"
          },
          "field": {
            "name": "writer"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a StreamResult from a character stream. Normally, a stream should be used rather than a reader, so that the transformer may use instructions contained in the transformation instructions to control the encoding. However, there are times when it is useful to write to a character stream, such as when using a StringWriter.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ewriter\u003c/code\u003e - A valid Writer reference."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "systemId"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a StreamResult from a URL.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esystemId\u003c/code\u003e - Must be a String that conforms to the URI syntax."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "field": {
            "name": "f"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a StreamResult from a File.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - Must a non-null File reference."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.xml.transform.stream.StreamResult",
  "comment": "\u003cp\u003eActs as an holder for a transformation result, which may be XML, plain Text, HTML, or some other form of markup.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}