{
  "packageName": "javax.xml.transform",
  "simpleName": "Result",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "PI_DISABLE_OUTPUT_ESCAPING",
      "comment": "The name of the processing instruction that is sent if the result tree disables output escaping. Normally, result tree serialization escapes\u0026 and \u003c (and possibly other characters) when outputting text nodes. This ensures that the output is well-formed XML. However, it is sometimes convenient to be able to produce output that is almost, but not quite well-formed XML; for example, the output may include ill-formed sections that will be transformed into well-formed XML by a subsequent non-XML aware process. If a processing instruction is sent with this name, serialization should be output without any escaping. Result DOM trees may also have PI_DISABLE_OUTPUT_ESCAPING and PI_ENABLE_OUTPUT_ESCAPING inserted into the tree.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"http://www.w3.org/TR/xslt#disable-output-escaping\"\u003edisable-output-escaping in XSLT Specification\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.transform.Result.PI_DISABLE_OUTPUT_ESCAPING\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "PI_ENABLE_OUTPUT_ESCAPING",
      "comment": "The name of the processing instruction that is sent if the result tree enables output escaping at some point after having received a PI_DISABLE_OUTPUT_ESCAPING processing instruction.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"http://www.w3.org/TR/xslt#disable-output-escaping\"\u003edisable-output-escaping in XSLT Specification\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.transform.Result.PI_ENABLE_OUTPUT_ESCAPING\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "systemId"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setSystemId",
      "comment": "Set the system identifier for this Result. If the Result is not to be written to a file, the system identifier is optional. The application may still want to provide one, however, for use in error messages and warnings, or to resolve relative output identifiers.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esystemId\u003c/code\u003e - The system identifier as a URI string."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSystemId",
      "comment": "Get the system identifier that was set with setSystemId.",
      "tagMap": {
        "return": [
          "The system identifier that was set with setSystemId, or null if setSystemId was not called."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.xml.transform.Result",
  "comment": "\u003cp\u003eAn object that implements this interface contains the information needed to build a transformation result tree.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}