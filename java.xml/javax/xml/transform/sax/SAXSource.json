{
  "packageName": "javax.xml.transform.sax",
  "simpleName": "SAXSource",
  "moduleName": "java.xml",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "FEATURE",
      "comment": "If TransformerFactory.getFeature(java.lang.String) returns true when passed this value as an argument, the Transformer supports Source input of this type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.transform.sax.SAXSource.FEATURE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.XMLReader",
            "type": "Class"
          },
          "field": {
            "name": "reader"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setXMLReader",
      "comment": "Set the XMLReader to be used for the Source.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ereader\u003c/code\u003e - A valid XMLReader or XMLFilter reference."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.xml.sax.XMLReader",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getXMLReader",
      "comment": "Get the XMLReader to be used for the Source.",
      "tagMap": {
        "return": [
          "A valid XMLReader or XMLFilter reference, or null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.InputSource",
            "type": "Class"
          },
          "field": {
            "name": "inputSource"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setInputSource",
      "comment": "Set the SAX InputSource to be used for the Source.",
      "tagMap": {
        "param": [
          "\u003ccode\u003einputSource\u003c/code\u003e - A valid InputSource reference."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.xml.sax.InputSource",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getInputSource",
      "comment": "Get the SAX InputSource to be used for the Source.",
      "tagMap": {
        "return": [
          "A valid InputSource reference, or null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "systemId"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSystemId",
      "comment": "Set the system identifier for this Source. If an input source has already been set, it will set the system ID or that input source, otherwise it will create a new input source. The system identifier is optional if there is a byte stream or a character stream, but it is still useful to provide one, since the application can use it to resolve relative URIs and can include it in error messages and warnings (the parser will attempt to open a connection to the URI only if no byte stream or character stream is specified).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/Source.html#setSystemId(java.lang.String)\"\u003esetSystemId\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/Source.html\" title\u003d\"interface in javax.xml.transform\"\u003eSource\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esystemId\u003c/code\u003e - The system identifier as a URI string."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSystemId",
      "comment": "Get the base ID (URI or system ID) from where URIs will be resolved.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/Source.html#getSystemId()\"\u003egetSystemId\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/Source.html\" title\u003d\"interface in javax.xml.transform\"\u003eSource\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "Base URL for the \n\u003ccode\u003eSource\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.xml.sax.InputSource",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.xml.transform.Source",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "sourceToInputSource",
      "comment": "Attempt to obtain a SAX InputSource object from a Source object.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - Must be a non-null Source reference."
        ],
        "return": [
          "An InputSource, or null if Source can not be converted."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isEmpty",
      "comment": "Indicates whether the SAXSource object is empty. Empty is defined as follows: if the system identifier and InputSource are null; if the system identifier is null, and the InputSource is empty.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/Source.html#isEmpty()\"\u003eisEmpty\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/Source.html\" title\u003d\"interface in javax.xml.transform\"\u003eSource\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if the \n\u003ccode\u003eSAXSource\u003c/code\u003e object is empty, false otherwise"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Zero-argument default constructor. If this constructor is used, and no SAX source is set using setInputSource(InputSource inputSource) , then the Transformer will create an empty source InputSource using new InputSource().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/Transformer.html#transform(javax.xml.transform.Source,javax.xml.transform.Result)\"\u003e\u003ccode\u003eTransformer.transform(Source xmlSource, Result outputTarget)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.XMLReader",
            "type": "Class"
          },
          "field": {
            "name": "reader"
          }
        },
        {
          "type": {
            "name": "org.xml.sax.InputSource",
            "type": "Class"
          },
          "field": {
            "name": "inputSource"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create a SAXSource, using an XMLReader and a SAX InputSource. The Transformer or SAXTransformerFactory will set itself to be the reader\u0027s ContentHandler, and then will call reader.parse(inputSource).",
      "tagMap": {
        "param": [
          "\u003ccode\u003ereader\u003c/code\u003e - An XMLReader to be used for the parse.",
          "\u003ccode\u003einputSource\u003c/code\u003e - A SAX input source reference that must be non-null and that will be passed to the reader parse method."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.InputSource",
            "type": "Class"
          },
          "field": {
            "name": "inputSource"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create a SAXSource, using a SAX InputSource. The Transformer or SAXTransformerFactory creates a reader (if setXMLReader is not used), sets itself as the reader\u0027s ContentHandler, and calls reader.parse(inputSource).",
      "tagMap": {
        "param": [
          "\u003ccode\u003einputSource\u003c/code\u003e - An input source reference that must be non-null and that will be passed to the parse method of the reader."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.xml.transform.sax.SAXSource",
  "comment": "\u003cp\u003eActs as an holder for SAX-style Source.\u003c/p\u003e \n\u003cp\u003eNote that XSLT requires namespace support. Attempting to transform an input source that is not generated with a namespace-aware parser may result in errors. Parsers can be made namespace aware by calling the \u003ca href\u003d\"../../parsers/SAXParserFactory.html#setNamespaceAware(boolean)\"\u003e\u003ccode\u003eSAXParserFactory.setNamespaceAware(boolean awareness)\u003c/code\u003e\u003c/a\u003e method.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}