{
  "packageName": "javax.xml.transform",
  "simpleName": "ErrorListener",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.transform.TransformerException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.transform.TransformerException",
            "type": "Class"
          },
          "field": {
            "name": "exception"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "warning",
      "comment": "Receive notification of a warning. Transformer can use this method to report conditions that are not errors or fatal errors. The default behaviour is to take no action. After invoking this method, the Transformer must continue with the transformation. It should still be possible for the application to process the document through to the end.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/TransformerException.html\" title\u003d\"class in javax.xml.transform\"\u003e\u003ccode\u003eTransformerException\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eexception\u003c/code\u003e - The warning information encapsulated in a transformer exception."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/TransformerException.html\" title\u003d\"class in javax.xml.transform\"\u003eTransformerException\u003c/a\u003e\u003c/code\u003e - if the application chooses to discontinue the transformation."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.transform.TransformerException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.transform.TransformerException",
            "type": "Class"
          },
          "field": {
            "name": "exception"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "error",
      "comment": "Receive notification of a recoverable error. The transformer must continue to try and provide normal transformation after invoking this method. It should still be possible for the application to process the document through to the end if no other errors are encountered.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/TransformerException.html\" title\u003d\"class in javax.xml.transform\"\u003e\u003ccode\u003eTransformerException\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eexception\u003c/code\u003e - The error information encapsulated in a transformer exception."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/TransformerException.html\" title\u003d\"class in javax.xml.transform\"\u003eTransformerException\u003c/a\u003e\u003c/code\u003e - if the application chooses to discontinue the transformation."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.transform.TransformerException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.transform.TransformerException",
            "type": "Class"
          },
          "field": {
            "name": "exception"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "fatalError",
      "comment": "Receive notification of a non-recoverable error. The processor may choose to continue, but will not normally proceed to a successful completion. The method should throw an exception if it is unable to process the error, or if it wishes execution to terminate immediately. The processor will not necessarily honor this request.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/TransformerException.html\" title\u003d\"class in javax.xml.transform\"\u003e\u003ccode\u003eTransformerException\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eexception\u003c/code\u003e - The error information encapsulated in a \n\u003ccode\u003eTransformerException\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/transform/TransformerException.html\" title\u003d\"class in javax.xml.transform\"\u003eTransformerException\u003c/a\u003e\u003c/code\u003e - if the application chooses to discontinue the transformation."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.xml.transform.ErrorListener",
  "comment": "The listener interface used by a \n\u003ca href\u003d\"TransformerFactory.html\" title\u003d\"class in javax.xml.transform\"\u003e\u003ccode\u003eTransformerFactory\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"Transformer.html\" title\u003d\"class in javax.xml.transform\"\u003e\u003ccode\u003eTransformer\u003c/code\u003e\u003c/a\u003e to notify callers of error messages that occur during a transformation process. An ErrorListener receives three levels of messages: warnings, errors and fatal errors as classified by their severity. Each of them is handled as described in their respective method. \n\u003cp\u003e An ErrorListener instance can be registered to a \u003ca href\u003d\"TransformerFactory.html\" title\u003d\"class in javax.xml.transform\"\u003e\u003ccode\u003eTransformerFactory\u003c/code\u003e\u003c/a\u003e or \u003ca href\u003d\"Transformer.html\" title\u003d\"class in javax.xml.transform\"\u003e\u003ccode\u003eTransformer\u003c/code\u003e\u003c/a\u003e through the \u003ca href\u003d\"TransformerFactory.html#setErrorListener(javax.xml.transform.ErrorListener)\"\u003e\u003ccode\u003eTransformerFactory.setErrorListener(ErrorListener)\u003c/code\u003e\u003c/a\u003e or \u003ca href\u003d\"Transformer.html#setErrorListener(javax.xml.transform.ErrorListener)\"\u003e\u003ccode\u003eTransformer.setErrorListener(ErrorListener)\u003c/code\u003e\u003c/a\u003e method to receive errors and warnings reported by the TransformerFactory or Transformer. \u003c/p\u003e\n\u003cp\u003e When a listener is registered, the \u003ca href\u003d\"TransformerFactory.html\" title\u003d\"class in javax.xml.transform\"\u003e\u003ccode\u003eTransformerFactory\u003c/code\u003e\u003c/a\u003e or \u003ca href\u003d\"Transformer.html\" title\u003d\"class in javax.xml.transform\"\u003e\u003ccode\u003eTransformer\u003c/code\u003e\u003c/a\u003e must use this interface to pass on all warnings and errors to the listener and let the application decide how to handle them. Note that the \u003ccode\u003eTransformerFactory\u003c/code\u003e or \u003ccode\u003eTransformer\u003c/code\u003e is not required to continue with the transformation after a call to \u003ca href\u003d\"#fatalError(javax.xml.transform.TransformerException)\"\u003e\u003ccode\u003efatalError(TransformerException exception)\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e If an application does not provide a listener, the \u003ca href\u003d\"TransformerFactory.html\" title\u003d\"class in javax.xml.transform\"\u003e\u003ccode\u003eTransformerFactory\u003c/code\u003e\u003c/a\u003e or \u003ca href\u003d\"Transformer.html\" title\u003d\"class in javax.xml.transform\"\u003e\u003ccode\u003eTransformer\u003c/code\u003e\u003c/a\u003e shall create one on its own. The default \u003ccode\u003eErrorListener\u003c/code\u003e may take no action for warnings and recoverable errors, and allow the transformation to continue. However, the \u003ccode\u003eTransformerFactory\u003c/code\u003e or \u003ccode\u003eTransformer\u003c/code\u003e may still throw \u003ccode\u003eTransformerException\u003c/code\u003e when it decides it can not continue processing.\u003c/p\u003e",
  "tagMap": {
    "apiNote": [
      "It is recommended that applications register and use their own \n\u003ccode\u003eErrorListener\u003c/code\u003e to override the default behavior in order to ensure proper handling of warnings and errors."
    ],
    "since": [
      "1.4"
    ]
  }
}