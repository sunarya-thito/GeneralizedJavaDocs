{
  "packageName": "javax.xml.namespace",
  "simpleName": "QName",
  "moduleName": "java.xml",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNamespaceURI",
      "comment": "Get the Namespace URI of this QName.",
      "tagMap": {
        "return": [
          "Namespace URI of this \n\u003ccode\u003eQName\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLocalPart",
      "comment": "Get the local part of this QName.",
      "tagMap": {
        "return": [
          "local part of this \n\u003ccode\u003eQName\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPrefix",
      "comment": "Get the prefix of this QName. The prefix assigned to a QName might NOT be valid in a different context. For example, a QName may be assigned a prefix in the context of parsing a document but that prefix may be invalid in the context of a different document.",
      "tagMap": {
        "return": [
          "prefix of this \n\u003ccode\u003eQName\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "objectToTest"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "equals",
      "comment": "Test this QName for equality with another Object. If the Object to be tested is not a QName or is null, then this method returns false. Two QNames are considered equal if and only if both the Namespace URI and local part are equal. This method uses String.equals() to check equality of the Namespace URI and local part. The prefix is NOT used to determine equality. This method satisfies the general contract of Object.equals(Object)",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobjectToTest\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to test for equality with this \n\u003ccode\u003eQName\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the given \n\u003ccode\u003eObject\u003c/code\u003e is equal to this \n\u003ccode\u003eQName\u003c/code\u003e else \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "hashCode",
      "comment": "Generate the hash code for this QName. The hash code is calculated using both the Namespace URI and the local part of the QName. The prefix is NOT used to calculate the hash code. This method satisfies the general contract of Object.hashCode().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "hash code for this \n\u003ccode\u003eQName\u003c/code\u003e \n\u003ccode\u003eObject\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "String representation of this QName. The commonly accepted way of representing a QName as a String was defined by James Clark. Although this is not a standard specification, it is in common use, e.g. Transformer.setParameter(String name, Object value). This implementation represents a QName as: \"{\" + Namespace URI + \"}\" + local part. If the Namespace URI .equals(XMLConstants.NULL_NS_URI), only the local part is returned. An appropriate use of this method is for debugging or logging for human consumption. Note the prefix value is NOT returned as part of the String representation. This method satisfies the general contract of Object.toString().",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003eString\u003c/code\u003e representation of this \n\u003ccode\u003eQName\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.namespace.QName",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "qNameAsString"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "valueOf",
      "comment": "QName derived from parsing the formatted String. If the String is null or does not conform to QName.toString() formatting, an IllegalArgumentException is thrown. The String MUST be in the form returned by QName.toString(). The commonly accepted way of representing a QName as a String was defined by James Clark. Although this is not a standard specification, it is in common use, e.g. Transformer.setParameter(String name, Object value). This implementation parses a String formatted as: \"{\" + Namespace URI + \"}\" + local part. If the Namespace URI .equals(XMLConstants.NULL_NS_URI), only the local part should be provided. The prefix value CANNOT be represented in the String and will be set to XMLConstants.DEFAULT_NS_PREFIX. This method does not do full validation of the resulting QName. The Namespace URI is not validated as a URI reference. The local part is not validated as a NCName as specified in Namespaces in XML.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/namespace/QName.html#toString()\"\u003e\u003ccode\u003eQName.toString()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eqNameAsString\u003c/code\u003e - \n\u003ccode\u003eString\u003c/code\u003e representation of the \n\u003ccode\u003eQName\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - When \n\u003ccode\u003eqNameAsString\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or malformed"
        ],
        "return": [
          "\u003ccode\u003eQName\u003c/code\u003e corresponding to the given \n\u003ccode\u003eString\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "namespaceURI"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "localPart"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "QName constructor specifying the Namespace URI and local part. If the Namespace URI is null, it is set to XMLConstants.NULL_NS_URI. This value represents no explicitly defined Namespace as defined by the Namespaces in XML specification. This action preserves compatible behavior with QName 1.0. Explicitly providing the XMLConstants.NULL_NS_URI value is the preferred coding style. If the local part is null an IllegalArgumentException is thrown. A local part of \"\" is allowed to preserve compatible behavior with QName 1.0. When using this constructor, the prefix is set to XMLConstants.DEFAULT_NS_PREFIX. The Namespace URI is not validated as a URI reference. The local part is not validated as a NCName as specified in Namespaces in XML.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/namespace/QName.html#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)\"\u003e\u003ccode\u003eQName(String namespaceURI, String localPart, String prefix)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enamespaceURI\u003c/code\u003e - Namespace URI of the \n\u003ccode\u003eQName\u003c/code\u003e",
          "\u003ccode\u003elocalPart\u003c/code\u003e - local part of the \n\u003ccode\u003eQName\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - When \n\u003ccode\u003elocalPart\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "namespaceURI"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "localPart"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "prefix"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "QName constructor specifying the Namespace URI, local part and prefix. If the Namespace URI is null, it is set to XMLConstants.NULL_NS_URI. This value represents no explicitly defined Namespace as defined by the Namespaces in XML specification. This action preserves compatible behavior with QName 1.0. Explicitly providing the XMLConstants.NULL_NS_URI value is the preferred coding style. If the local part is null an IllegalArgumentException is thrown. A local part of \"\" is allowed to preserve compatible behavior with QName 1.0. If the prefix is null, an IllegalArgumentException is thrown. Use XMLConstants.DEFAULT_NS_PREFIX to explicitly indicate that no prefix is present or the prefix is not relevant. The Namespace URI is not validated as a URI reference. The local part and prefix are not validated as a NCName as specified in Namespaces in XML.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enamespaceURI\u003c/code\u003e - Namespace URI of the \n\u003ccode\u003eQName\u003c/code\u003e",
          "\u003ccode\u003elocalPart\u003c/code\u003e - local part of the \n\u003ccode\u003eQName\u003c/code\u003e",
          "\u003ccode\u003eprefix\u003c/code\u003e - prefix of the \n\u003ccode\u003eQName\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - When \n\u003ccode\u003elocalPart\u003c/code\u003e or \n\u003ccode\u003eprefix\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "localPart"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "QName constructor specifying the local part. If the local part is null an IllegalArgumentException is thrown. A local part of \"\" is allowed to preserve compatible behavior with QName 1.0. When using this constructor, the Namespace URI is set to XMLConstants.NULL_NS_URI and the prefix is set to XMLConstants.DEFAULT_NS_PREFIX. In an XML context, all Element and Attribute names exist in the context of a Namespace. Making this explicit during the construction of a QName helps prevent hard to diagnosis XML validity errors. The constructors QName(String namespaceURI, String localPart) and QName(String namespaceURI, String localPart, String prefix) are preferred. The local part is not validated as a NCName as specified in Namespaces in XML.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/namespace/QName.html#%3Cinit%3E(java.lang.String,java.lang.String)\"\u003e\u003ccode\u003eQName(String namespaceURI, String localPart)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/namespace/QName.html#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)\"\u003e\u003ccode\u003eQName(String namespaceURI, String localPart, String prefix)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elocalPart\u003c/code\u003e - local part of the \n\u003ccode\u003eQName\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - When \n\u003ccode\u003elocalPart\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.xml.namespace.QName",
  "comment": "\u003cp\u003e\u003ccode\u003eQName\u003c/code\u003e represents a \u003cstrong\u003equalified name\u003c/strong\u003e as defined in the XML specifications: \u003ca href\u003d\"http://www.w3.org/TR/xmlschema-2/#QName\"\u003eXML Schema Part2: Datatypes specification\u003c/a\u003e, \u003ca href\u003d\"http://www.w3.org/TR/REC-xml-names/#ns-qualnames\"\u003eNamespaces in XML\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003eThe value of a \u003ccode\u003eQName\u003c/code\u003e contains a \u003cstrong\u003eNamespace URI\u003c/strong\u003e, \u003cstrong\u003elocal part\u003c/strong\u003e and \u003cstrong\u003eprefix\u003c/strong\u003e.\u003c/p\u003e \n\u003cp\u003eThe prefix is included in \u003ccode\u003eQName\u003c/code\u003e to retain lexical information \u003cstrong\u003e\u003cem\u003ewhen present\u003c/em\u003e\u003c/strong\u003e in an \u003ca href\u003d\"../transform/Source.html\" title\u003d\"interface in javax.xml.transform\"\u003e\u003ccode\u003eXML input source\u003c/code\u003e\u003c/a\u003e. The prefix is \u003cstrong\u003e\u003cem\u003eNOT\u003c/em\u003e\u003c/strong\u003e used in \u003ca href\u003d\"#equals(java.lang.Object)\"\u003e\u003ccode\u003eQName.equals(Object)\u003c/code\u003e\u003c/a\u003e or to compute the \u003ca href\u003d\"#hashCode()\"\u003e\u003ccode\u003eQName.hashCode()\u003c/code\u003e\u003c/a\u003e. Equality and the hash code are defined using \u003cstrong\u003e\u003cem\u003eonly\u003c/em\u003e\u003c/strong\u003e the Namespace URI and local part.\u003c/p\u003e \n\u003cp\u003eIf not specified, the Namespace URI is set to \u003ca href\u003d\"../XMLConstants.html#NULL_NS_URI\"\u003e\u003ccode\u003eXMLConstants.NULL_NS_URI\u003c/code\u003e\u003c/a\u003e. If not specified, the prefix is set to \u003ca href\u003d\"../XMLConstants.html#DEFAULT_NS_PREFIX\"\u003e\u003ccode\u003eXMLConstants.DEFAULT_NS_PREFIX\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e \n\u003cp\u003e\u003ccode\u003eQName\u003c/code\u003e is immutable.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"http://www.w3.org/TR/xmlschema-2/#QName\"\u003e XML Schema Part2: Datatypes specification\u003c/a\u003e, \n\u003ca href\u003d\"http://www.w3.org/TR/REC-xml-names/#ns-qualnames\"\u003e Namespaces in XML\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.xml.namespace.QName\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}