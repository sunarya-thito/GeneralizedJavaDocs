{
  "packageName": "javax.xml.namespace",
  "simpleName": "NamespaceContext",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "prefix"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNamespaceURI",
      "comment": "Get Namespace URI bound to a prefix in the current scope. When requesting a Namespace URI by prefix, the following table describes the returned Namespace URI value for all possible prefix values: Return value for specified prefixes prefix parameter Namespace URI return value DEFAULT_NS_PREFIX (\"\") default Namespace URI in the current scope or XMLConstants.NULL_NS_URI(\"\") when there is no default Namespace URI in the current scope bound prefix Namespace URI bound to prefix in current scope unbound prefix XMLConstants.NULL_NS_URI(\"\") XMLConstants.XML_NS_PREFIX (\"xml\") XMLConstants.XML_NS_URI (\"http://www.w3.org/XML/1998/namespace\") XMLConstants.XMLNS_ATTRIBUTE (\"xmlns\") XMLConstants.XMLNS_ATTRIBUTE_NS_URI (\"http://www.w3.org/2000/xmlns/\") null IllegalArgumentException is thrown",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprefix\u003c/code\u003e - prefix to look up"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - When \n\u003ccode\u003eprefix\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "Namespace URI bound to prefix in the current scope"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "namespaceURI"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPrefix",
      "comment": "Get prefix bound to Namespace URI in the current scope. To get all prefixes bound to a Namespace URI in the current scope, use getPrefixes(String namespaceURI). When requesting a prefix by Namespace URI, the following table describes the returned prefix value for all Namespace URI values: Return value for specified Namespace URIs Namespace URI parameter prefix value returned \u003cdefault Namespace URI\u003e XMLConstants.DEFAULT_NS_PREFIX (\"\") bound Namespace URI prefix bound to Namespace URI in the current scope, if multiple prefixes are bound to the Namespace URI in the current scope, a single arbitrary prefix, whose choice is implementation dependent, is returned unbound Namespace URI null XMLConstants.XML_NS_URI (\"http://www.w3.org/XML/1998/namespace\") XMLConstants.XML_NS_PREFIX (\"xml\") XMLConstants.XMLNS_ATTRIBUTE_NS_URI (\"http://www.w3.org/2000/xmlns/\") XMLConstants.XMLNS_ATTRIBUTE (\"xmlns\") null IllegalArgumentException is thrown",
      "tagMap": {
        "param": [
          "\u003ccode\u003enamespaceURI\u003c/code\u003e - URI of Namespace to lookup"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - When \n\u003ccode\u003enamespaceURI\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "prefix bound to Namespace URI in current context"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Iterator",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "namespaceURI"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPrefixes",
      "comment": "Get all prefixes bound to a Namespace URI in the current scope. An Iterator over String elements is returned in an arbitrary, implementation dependent, order. The Iterator is not modifiable. e.g. the remove() method will throw UnsupportedOperationException. When requesting prefixes by Namespace URI, the following table describes the returned prefixes value for all Namespace URI values: Return value for specified Namespace URIs Namespace URI parameter prefixes value returned bound Namespace URI, including the \u003cdefault Namespace URI\u003e Iterator over prefixes bound to Namespace URI in the current scope in an arbitrary, implementation dependent, order unbound Namespace URI empty Iterator XMLConstants.XML_NS_URI (\"http://www.w3.org/XML/1998/namespace\") Iterator with one element set to XMLConstants.XML_NS_PREFIX (\"xml\") XMLConstants.XMLNS_ATTRIBUTE_NS_URI (\"http://www.w3.org/2000/xmlns/\") Iterator with one element set to XMLConstants.XMLNS_ATTRIBUTE (\"xmlns\") null IllegalArgumentException is thrown",
      "tagMap": {
        "param": [
          "\u003ccode\u003enamespaceURI\u003c/code\u003e - URI of Namespace to lookup"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - When \n\u003ccode\u003enamespaceURI\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003eIterator\u003c/code\u003e for all prefixes bound to the Namespace URI in the current scope"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.xml.namespace.NamespaceContext",
  "comment": "Interface for read only XML Namespace context processing. \n\u003cp\u003eAn XML Namespace has the properties: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003eNamespace URI: Namespace name expressed as a URI to which the prefix is bound\u003c/li\u003e \n \u003cli\u003eprefix: syntactically, this is the part of the attribute name following the \u003ccode\u003eXMLConstants.XMLNS_ATTRIBUTE\u003c/code\u003e (\"xmlns\") in the Namespace declaration\u003c/li\u003e \n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eexample: \u003ccode\u003e\u0026lt;element xmlns:prefix\u003d\"http://Namespace-name-URI\"\u0026gt;\u003c/code\u003e \u003c/p\u003e\n\u003cp\u003eAll \u003ccode\u003eget*(*)\u003c/code\u003e methods operate in the current scope for Namespace URI and prefix resolution. \u003c/p\u003e\n\u003cp\u003eNote that a Namespace URI can be bound to \u003cstrong\u003emultiple\u003c/strong\u003e prefixes in the current scope. This can occur when multiple \u003ccode\u003eXMLConstants.XMLNS_ATTRIBUTE\u003c/code\u003e (\"xmlns\") Namespace declarations occur in the same Start-Tag and refer to the same Namespace URI. e.g.\u003cbr\u003e \u003c/p\u003e\n\u003cpre\u003e \u003ccode\u003e\n \u0026lt;element xmlns:prefix1\u003d\"http://Namespace-name-URI\"\n          xmlns:prefix2\u003d\"http://Namespace-name-URI\"\u0026gt; \u003c/code\u003e\n \u003c/pre\u003e This can also occur when the same Namespace URI is used in multiple \n\u003ccode\u003eXMLConstants.XMLNS_ATTRIBUTE\u003c/code\u003e (\"xmlns\") Namespace declarations in the logical parent element hierarchy. e.g.\n\u003cbr\u003e \n\u003cpre\u003e \u003ccode\u003e\n \u0026lt;parent xmlns:prefix1\u003d\"http://Namespace-name-URI\"\u0026gt;\n   \u0026lt;child xmlns:prefix2\u003d\"http://Namespace-name-URI\"\u0026gt;\n     ...\n   \u0026lt;/child\u0026gt;\n \u0026lt;/parent\u0026gt; \u003c/code\u003e\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eA prefix can only be bound to a \u003cstrong\u003esingle\u003c/strong\u003e Namespace URI in the current scope.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/XMLConstants.html\" title\u003d\"class in javax.xml\"\u003e\u003ccode\u003ejavax.xml.XMLConstants for declarations of common XML values\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"http://www.w3.org/TR/xmlschema-2/#QName\"\u003e XML Schema Part2: Datatypes\u003c/a\u003e, \n\u003ca href\u003d\"http://www.w3.org/TR/REC-xml-names/\"\u003e Namespaces in XML\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}