{
  "packageName": "javax.xml.xpath",
  "simpleName": "XPathExpression",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.xpath.XPathExpressionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "item"
          }
        },
        {
          "type": {
            "name": "javax.xml.namespace.QName",
            "type": "Class"
          },
          "field": {
            "name": "returnType"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "evaluate",
      "comment": "Evaluate the compiled XPath expression in the specified context and return the result as the specified type. See Evaluation of XPath Expressions for context item evaluation, variable, function and QName resolution and return type conversion. The parameter item represents the context the XPath expression will be operated on. The type of the context is implementation-dependent. If the value is null, the operation must have no dependency on the context, otherwise an XPathExpressionException will be thrown.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eitem\u003c/code\u003e - The context the XPath expression will be evaluated in.",
          "\u003ccode\u003ereturnType\u003c/code\u003e - The result type expected to be returned by the XPath expression."
        ],
        "implNote": [
          "The type of the context is usually \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/w3c/dom/Node.html\" title\u003d\"interface in org.w3c.dom\"\u003e\u003ccode\u003eNode\u003c/code\u003e\u003c/a\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathExpressionException.html\" title\u003d\"class in javax.xml.xpath\"\u003eXPathExpressionException\u003c/a\u003e\u003c/code\u003e - If the expression cannot be evaluated.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003ereturnType\u003c/code\u003e is not one of the types defined in \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathConstants.html\" title\u003d\"class in javax.xml.xpath\"\u003e\u003ccode\u003eXPathConstants\u003c/code\u003e\u003c/a\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003ereturnType\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "return": [
          "The \n\u003ccode\u003eObject\u003c/code\u003e that is the result of evaluating the expression and converting the result to \n\u003ccode\u003ereturnType\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.xpath.XPathExpressionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "item"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "evaluate",
      "comment": "Evaluate the compiled XPath expression in the specified context and return the result as a String. This method calls evaluate(Object item, QName returnType) with a returnType of XPathConstants.STRING. See Evaluation of XPath Expressions for context item evaluation, variable, function and QName resolution and return type conversion. The parameter item represents the context the XPath expression will be operated on. The type of the context is implementation-dependent. If the value is null, the operation must have no dependency on the context, otherwise an XPathExpressionException will be thrown.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eitem\u003c/code\u003e - The context the XPath expression will be evaluated in."
        ],
        "implNote": [
          "The type of the context is usually \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/w3c/dom/Node.html\" title\u003d\"interface in org.w3c.dom\"\u003e\u003ccode\u003eNode\u003c/code\u003e\u003c/a\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathExpressionException.html\" title\u003d\"class in javax.xml.xpath\"\u003eXPathExpressionException\u003c/a\u003e\u003c/code\u003e - If the expression cannot be evaluated."
        ],
        "return": [
          "The result of evaluating an XPath expression as a \n\u003ccode\u003eString\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.xpath.XPathExpressionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.InputSource",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "javax.xml.namespace.QName",
            "type": "Class"
          },
          "field": {
            "name": "returnType"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "evaluate",
      "comment": "Evaluate the compiled XPath expression in the context of the specified InputSource and return the result as the specified type. This method builds a data model for the InputSource and calls evaluate(Object item, QName returnType) on the resulting document object. See Evaluation of XPath Expressions for context item evaluation, variable, function and QName resolution and return type conversion. If returnType is not one of the types defined in XPathConstants, then an IllegalArgumentException is thrown. If source or returnType is null, then a NullPointerException is thrown.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - The \n\u003ccode\u003eInputSource\u003c/code\u003e of the document to evaluate over.",
          "\u003ccode\u003ereturnType\u003c/code\u003e - The desired return type."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathExpressionException.html\" title\u003d\"class in javax.xml.xpath\"\u003eXPathExpressionException\u003c/a\u003e\u003c/code\u003e - If the expression cannot be evaluated.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003ereturnType\u003c/code\u003e is not one of the types defined in \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathConstants.html\" title\u003d\"class in javax.xml.xpath\"\u003e\u003ccode\u003eXPathConstants\u003c/code\u003e\u003c/a\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003esource or returnType\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "return": [
          "The \n\u003ccode\u003eObject\u003c/code\u003e that is the result of evaluating the expression and converting the result to \n\u003ccode\u003ereturnType\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.xpath.XPathExpressionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.InputSource",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "evaluate",
      "comment": "Evaluate the compiled XPath expression in the context of the specified InputSource and return the result as a String. This method calls evaluate(InputSource source, QName returnType) with a returnType of XPathConstants.STRING. See Evaluation of XPath Expressions for context item evaluation, variable, function and QName resolution and return type conversion. If source is null, then a NullPointerException is thrown.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - The \n\u003ccode\u003eInputSource\u003c/code\u003e of the document to evaluate over."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathExpressionException.html\" title\u003d\"class in javax.xml.xpath\"\u003eXPathExpressionException\u003c/a\u003e\u003c/code\u003e - If the expression cannot be evaluated.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003esource\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "return": [
          "The \n\u003ccode\u003eString\u003c/code\u003e that is the result of evaluating the expression and converting the result to a \n\u003ccode\u003eString\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.xpath.XPathExpressionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "item"
          }
        },
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "type"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "evaluateExpression",
      "comment": "Evaluate the compiled XPath expression in the specified context, and return the result with the type specified through the class type. The parameter item represents the context the XPath expression will be operated on. The type of the context is implementation-dependent. If the value is null, the operation must have no dependency on the context, otherwise an XPathExpressionException will be thrown.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - The class type that will be returned by the XPath expression."
        ],
        "implSpec": [
          "The default implementation in the XPath API is equivalent to: \n\u003cpre\u003e \u003ccode\u003e\n     (T)evaluate(item, XPathEvaluationResult.XPathResultType.getQNameType(type));\n \u003c/code\u003e\u003c/pre\u003e Since the \n\u003ccode\u003eevaluate\u003c/code\u003e method does not support the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathEvaluationResult.XPathResultType.html#ANY\"\u003e\u003ccode\u003eANY\u003c/code\u003e\u003c/a\u003e type, specifying XPathEvaluationResult as the type will result in IllegalArgumentException. Any implementation supporting the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathEvaluationResult.XPathResultType.html#ANY\"\u003e\u003ccode\u003eANY\u003c/code\u003e\u003c/a\u003e type must override this method."
        ],
        "param": [
          "\u003ccode\u003eitem\u003c/code\u003e - The context the XPath expression will be evaluated in.",
          "\u003ccode\u003etype\u003c/code\u003e - The class type expected to be returned by the XPath expression."
        ],
        "implNote": [
          "The type of the context is usually \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/w3c/dom/Node.html\" title\u003d\"interface in org.w3c.dom\"\u003e\u003ccode\u003eNode\u003c/code\u003e\u003c/a\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathExpressionException.html\" title\u003d\"class in javax.xml.xpath\"\u003eXPathExpressionException\u003c/a\u003e\u003c/code\u003e - If the expression cannot be evaluated.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003etype\u003c/code\u003e is not of the types corresponding to the types defined in the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathEvaluationResult.XPathResultType.html\" title\u003d\"enum class in javax.xml.xpath\"\u003e\u003ccode\u003eXPathResultType\u003c/code\u003e\u003c/a\u003e, or XPathEvaluationResult is specified as the type but an implementation supporting the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathEvaluationResult.XPathResultType.html#ANY\"\u003e\u003ccode\u003eANY\u003c/code\u003e\u003c/a\u003e type is not available.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003etype\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "return": [
          "The result of evaluating the expression."
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.xpath.XPathEvaluationResult",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.xpath.XPathExpressionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "item"
          }
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "evaluateExpression",
      "comment": "Evaluate the compiled XPath expression in the specified context. This is equivalent to calling evaluateExpression(Object item, Class type) with type XPathEvaluationResult:  \n     evaluateExpression(item, XPathEvaluationResult.class);\n The parameter item represents the context the XPath expression will be operated on. The type of the context is implementation-dependent. If the value is null, the operation must have no dependency on the context, otherwise an XPathExpressionException will be thrown.",
      "tagMap": {
        "implSpec": [
          "The default implementation in the XPath API is equivalent to: \n\u003cpre\u003e \u003ccode\u003e\n     evaluateExpression(item, XPathEvaluationResult.class);\n \u003c/code\u003e\u003c/pre\u003e Since the \n\u003ccode\u003eevaluate\u003c/code\u003e method does not support the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathEvaluationResult.XPathResultType.html#ANY\"\u003e\u003ccode\u003eANY\u003c/code\u003e\u003c/a\u003e type, the default implementation of this method will always throw an IllegalArgumentException. Any implementation supporting the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathEvaluationResult.XPathResultType.html#ANY\"\u003e\u003ccode\u003eANY\u003c/code\u003e\u003c/a\u003e type must therefore override this method."
        ],
        "param": [
          "\u003ccode\u003eitem\u003c/code\u003e - The context the XPath expression will be evaluated in."
        ],
        "implNote": [
          "The type of the context is usually \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/w3c/dom/Node.html\" title\u003d\"interface in org.w3c.dom\"\u003e\u003ccode\u003eNode\u003c/code\u003e\u003c/a\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathExpressionException.html\" title\u003d\"class in javax.xml.xpath\"\u003eXPathExpressionException\u003c/a\u003e\u003c/code\u003e - If the expression cannot be evaluated.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the implementation of this method does not support the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathEvaluationResult.XPathResultType.html#ANY\"\u003e\u003ccode\u003eANY\u003c/code\u003e\u003c/a\u003e type."
        ],
        "return": [
          "The result of evaluating the expression."
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.xpath.XPathExpressionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.InputSource",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "type"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "evaluateExpression",
      "comment": "Evaluate the compiled XPath expression in the specified context, and return the result with the type specified through the class type This method builds a data model for the InputSource and calls evaluateExpression(Object item, Class type) on the resulting document object. By default, the JDK\u0027s data model is Document.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - The class type that will be returned by the XPath expression."
        ],
        "implSpec": [
          "The default implementation in the XPath API is equivalent to: \n\u003cpre\u003e \u003ccode\u003e\n           (T)evaluate(source, XPathEvaluationResult.XPathResultType.getQNameType(type));\n \u003c/code\u003e\u003c/pre\u003e Since the \n\u003ccode\u003eevaluate\u003c/code\u003e method does not support the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathEvaluationResult.XPathResultType.html#ANY\"\u003e\u003ccode\u003eANY\u003c/code\u003e\u003c/a\u003e type, specifying XPathEvaluationResult as the type will result in IllegalArgumentException. Any implementation supporting the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathEvaluationResult.XPathResultType.html#ANY\"\u003e\u003ccode\u003eANY\u003c/code\u003e\u003c/a\u003e type must override this method."
        ],
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - The \n\u003ccode\u003eInputSource\u003c/code\u003e of the document to evaluate over.",
          "\u003ccode\u003etype\u003c/code\u003e - The class type expected to be returned by the XPath expression."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathExpressionException.html\" title\u003d\"class in javax.xml.xpath\"\u003eXPathExpressionException\u003c/a\u003e\u003c/code\u003e - If the expression cannot be evaluated.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003etype\u003c/code\u003e is not of the types corresponding to the types defined in the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathEvaluationResult.XPathResultType.html\" title\u003d\"enum class in javax.xml.xpath\"\u003e\u003ccode\u003eXPathResultType\u003c/code\u003e\u003c/a\u003e, or XPathEvaluationResult is specified as the type but an implementation supporting the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathEvaluationResult.XPathResultType.html#ANY\"\u003e\u003ccode\u003eANY\u003c/code\u003e\u003c/a\u003e type is not available.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003esource or type\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "return": [
          "The result of evaluating the expression."
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.xpath.XPathEvaluationResult",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.xpath.XPathExpressionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "org.xml.sax.InputSource",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "evaluateExpression",
      "comment": "Evaluate the compiled XPath expression in the specified context. This is equivalent to calling evaluateExpression(InputSource source, Class type) with type XPathEvaluationResult:  \n     evaluateExpression(source, XPathEvaluationResult.class);",
      "tagMap": {
        "implSpec": [
          "The default implementation in the XPath API is equivalent to: \n\u003cpre\u003e \u003ccode\u003e\n     (XPathEvaluationResult)evaluateExpression(source, XPathEvaluationResult.class);\n \u003c/code\u003e\u003c/pre\u003e Since the \n\u003ccode\u003eevaluate\u003c/code\u003e method does not support the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathEvaluationResult.XPathResultType.html#ANY\"\u003e\u003ccode\u003eANY\u003c/code\u003e\u003c/a\u003e type, the default implementation of this method will always throw an IllegalArgumentException. Any implementation supporting the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathEvaluationResult.XPathResultType.html#ANY\"\u003e\u003ccode\u003eANY\u003c/code\u003e\u003c/a\u003e type must therefore override this method."
        ],
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - The \n\u003ccode\u003eInputSource\u003c/code\u003e of the document to evaluate over."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathExpressionException.html\" title\u003d\"class in javax.xml.xpath\"\u003eXPathExpressionException\u003c/a\u003e\u003c/code\u003e - If the expression cannot be evaluated.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the implementation of this method does not support the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/xpath/XPathEvaluationResult.XPathResultType.html#ANY\"\u003e\u003ccode\u003eANY\u003c/code\u003e\u003c/a\u003e type.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003esource\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "return": [
          "The result of evaluating the expression."
        ],
        "since": [
          "9"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.xml.xpath.XPathExpression",
  "comment": "\u003ccode\u003eXPathExpression\u003c/code\u003e provides access to compiled XPath expressions. The XPath evaluation is affected by the factors described in the following table. \n\u003ca id\u003d\"XPathExpression-evaluation\"\u003e\u003c/a\u003e \n\u003ctable class\u003d\"striped\"\u003e \n \u003ccaption\u003e\n  Evaluation of XPath Expressions\n \u003c/caption\u003e \n \u003cthead\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"col\"\u003eFactor\u003c/th\u003e \n   \u003cth scope\u003d\"col\"\u003eBehavior\u003c/th\u003e \n  \u003c/tr\u003e \n \u003c/thead\u003e \n \u003ctbody\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003econtext\u003c/th\u003e \n   \u003ctd\u003e The type of the context is implementation-dependent. If the value is null, the operation must have no dependency on the context, otherwise an XPathExpressionException will be thrown. For the purposes of evaluating XPath expressions, a DocumentFragment is treated like a Document node. \u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003evariables\u003c/th\u003e \n   \u003ctd\u003e If the expression contains a variable reference, its value will be found through the \u003ca href\u003d\"XPathVariableResolver.html\" title\u003d\"interface in javax.xml.xpath\"\u003e\u003ccode\u003eXPathVariableResolver\u003c/code\u003e\u003c/a\u003e. An \u003ca href\u003d\"XPathExpressionException.html\" title\u003d\"class in javax.xml.xpath\"\u003e\u003ccode\u003eXPathExpressionException\u003c/code\u003e\u003c/a\u003e is raised if the variable resolver is undefined or the resolver returns \u003ccode\u003enull\u003c/code\u003e for the variable. The value of a variable must be immutable through the course of any single evaluation. \u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003efunctions\u003c/th\u003e \n   \u003ctd\u003e If the expression contains a function reference, the function will be found through the \u003ca href\u003d\"XPathFunctionResolver.html\" title\u003d\"interface in javax.xml.xpath\"\u003e\u003ccode\u003eXPathFunctionResolver\u003c/code\u003e\u003c/a\u003e. An \u003ca href\u003d\"XPathExpressionException.html\" title\u003d\"class in javax.xml.xpath\"\u003e\u003ccode\u003eXPathExpressionException\u003c/code\u003e\u003c/a\u003e is raised if the function resolver is undefined or the function resolver returns \u003ccode\u003enull\u003c/code\u003e for the function. \u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003eQNames\u003c/th\u003e \n   \u003ctd\u003e QNames in the expression are resolved against the XPath namespace context. \u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003eresult\u003c/th\u003e \n   \u003ctd\u003e This result of evaluating an expression is converted to an instance of the desired return type. Valid return types are defined in \u003ca href\u003d\"XPathConstants.html\" title\u003d\"class in javax.xml.xpath\"\u003e\u003ccode\u003eXPathConstants\u003c/code\u003e\u003c/a\u003e. Conversion to the return type follows XPath conversion rules. \u003c/td\u003e \n  \u003c/tr\u003e \n \u003c/tbody\u003e \n\u003c/table\u003e \n\u003cp\u003eAn XPath expression is not thread-safe and not reentrant. In other words, it is the application\u0027s responsibility to make sure that one \u003ca href\u003d\"XPathExpression.html\" title\u003d\"interface in javax.xml.xpath\"\u003e\u003ccode\u003eXPathExpression\u003c/code\u003e\u003c/a\u003e object is not used from more than one thread at any given time, and while the \u003ccode\u003eevaluate\u003c/code\u003e method is invoked, applications may not recursively call the \u003ccode\u003eevaluate\u003c/code\u003e method.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"http://www.w3.org/TR/xpath#section-Expressions\"\u003eXML Path Language (XPath) Version 1.0, Expressions\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}