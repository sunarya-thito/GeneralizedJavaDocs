{
  "packageName": "javax.xml.xpath",
  "simpleName": "XPathVariableResolver",
  "moduleName": "java.xml",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.xml.namespace.QName",
            "type": "Class"
          },
          "field": {
            "name": "variableName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "resolveVariable",
      "comment": "Find a variable in the set of available variables. If variableName is null, then a NullPointerException is thrown.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evariableName\u003c/code\u003e - The \n\u003ccode\u003eQName\u003c/code\u003e of the variable name."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003evariableName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "return": [
          "The variables value, or \n\u003ccode\u003enull\u003c/code\u003e if no variable named \n\u003ccode\u003evariableName\u003c/code\u003e exists. The value returned must be of a type appropriate for the underlying object model."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.xml.xpath.XPathVariableResolver",
  "comment": "\u003cp\u003e\u003ccode\u003eXPathVariableResolver\u003c/code\u003e provides access to the set of user defined XPath variables.\u003c/p\u003e \n\u003cp\u003eThe \u003ccode\u003eXPathVariableResolver\u003c/code\u003e and the XPath evaluator must adhere to a contract that cannot be directly enforced by the API. Although variables may be mutable, that is, an application may wish to evaluate the same XPath expression more than once with different variable values, in the course of evaluating any single XPath expression, a variable\u0027s value \u003cstrong\u003e\u003cem\u003emust\u003c/em\u003e\u003c/strong\u003e not change.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}