{
  "packageName": "javax.xml.parsers",
  "simpleName": "SAXParserFactory",
  "moduleName": "java.xml",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.xml.parsers.SAXParserFactory",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newDefaultNSInstance",
      "comment": "Creates a new NamespaceAware instance of the SAXParserFactory builtin system-default implementation. Parsers produced by the factory instance provides support for XML namespaces by default.",
      "tagMap": {
        "implSpec": [
          "In addition to creating a factory instance using the same process as \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/parsers/SAXParserFactory.html#newDefaultInstance()\"\u003e\u003ccode\u003enewDefaultInstance()\u003c/code\u003e\u003c/a\u003e, this method must set NamespaceAware to true."
        ],
        "return": [
          "a new instance of the \n\u003ccode\u003eSAXParserFactory\u003c/code\u003e builtin system-default implementation."
        ],
        "since": [
          "13"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.parsers.SAXParserFactory",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newNSInstance",
      "comment": "Creates a new NamespaceAware instance of a SAXParserFactory. Parsers produced by the factory instance provides support for XML namespaces by default.",
      "tagMap": {
        "implSpec": [
          "In addition to creating a factory instance using the same process as \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/parsers/SAXParserFactory.html#newInstance()\"\u003e\u003ccode\u003enewInstance()\u003c/code\u003e\u003c/a\u003e, this method must set NamespaceAware to true."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/parsers/FactoryConfigurationError.html\" title\u003d\"class in javax.xml.parsers\"\u003eFactoryConfigurationError\u003c/a\u003e\u003c/code\u003e - in case of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ServiceConfigurationError.html\" title\u003d\"class in java.util\"\u003eservice configuration error\u003c/a\u003e or if the implementation is not available or cannot be instantiated."
        ],
        "return": [
          "a new instance of the \n\u003ccode\u003eSAXParserFactory\u003c/code\u003e"
        ],
        "since": [
          "13"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.parsers.SAXParserFactory",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "factoryClassName"
          }
        },
        {
          "type": {
            "name": "java.lang.ClassLoader",
            "type": "Class"
          },
          "field": {
            "name": "classLoader"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newNSInstance",
      "comment": "Creates a new NamespaceAware instance of a SAXParserFactory from the class name. Parsers produced by the factory instance provides support for XML namespaces by default.",
      "tagMap": {
        "implSpec": [
          "In addition to creating a factory instance using the same process as \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/parsers/SAXParserFactory.html#newInstance(java.lang.String,java.lang.ClassLoader)\"\u003e\u003ccode\u003enewInstance(java.lang.String, java.lang.ClassLoader)\u003c/code\u003e\u003c/a\u003e, this method must set NamespaceAware to true."
        ],
        "param": [
          "\u003ccode\u003efactoryClassName\u003c/code\u003e - a fully qualified factory class name that provides implementation of \n\u003ccode\u003ejavax.xml.parsers.SAXParserFactory\u003c/code\u003e.",
          "\u003ccode\u003eclassLoader\u003c/code\u003e - the \n\u003ccode\u003eClassLoader\u003c/code\u003e used to load the factory class. If it is \n\u003ccode\u003enull\u003c/code\u003e, the current \n\u003ccode\u003eThread\u003c/code\u003e\u0027s context classLoader is used to load the factory class."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/parsers/FactoryConfigurationError.html\" title\u003d\"class in javax.xml.parsers\"\u003eFactoryConfigurationError\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efactoryClassName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or the factory class cannot be loaded, instantiated."
        ],
        "return": [
          "a new instance of the \n\u003ccode\u003eSAXParserFactory\u003c/code\u003e"
        ],
        "since": [
          "13"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.parsers.SAXParserFactory",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newDefaultInstance",
      "comment": "Creates a new instance of the SAXParserFactory builtin system-default implementation.",
      "tagMap": {
        "return": [
          "A new instance of the \n\u003ccode\u003eSAXParserFactory\u003c/code\u003e builtin system-default implementation."
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.parsers.SAXParserFactory",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newInstance",
      "comment": "Obtain a new instance of a SAXParserFactory. This static method creates a new factory instance This method uses the following ordered lookup procedure to determine the SAXParserFactory implementation class to load: Use the javax.xml.parsers.SAXParserFactory system property. Use the configuration file \"jaxp.properties\". The file is in standard Properties format and typically located in the conf directory of the Java installation. It contains the fully qualified name of the implementation class with the key being the system property defined above. The jaxp.properties file is read only once by the JAXP implementation and its values are then cached for future use. If the file does not exist when the first attempt is made to read from it, no further attempts are made to check for its existence. It is not possible to change the value of any property in jaxp.properties after it has been read for the first time. Use the service-provider loading facility, defined by the ServiceLoader class, to attempt to locate and load an implementation of the service using the default loading mechanism: the service-provider loading facility will use the current thread\u0027s context class loader to attempt to load the service. If the context class loader is null, the system class loader will be used. Otherwise, the system-default implementation is returned. Once an application has obtained a reference to a SAXParserFactory it can use the factory to configure and obtain parser instances. Tip for Trouble-shooting Setting the jaxp.debug system property will cause this method to print a lot of debug messages to System.err about what it is doing and where it is looking at. If you have problems loading SAXParsers, try:  java -Djaxp.debug\u003d1 YourProgram ....",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/parsers/FactoryConfigurationError.html\" title\u003d\"class in javax.xml.parsers\"\u003eFactoryConfigurationError\u003c/a\u003e\u003c/code\u003e - in case of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ServiceConfigurationError.html\" title\u003d\"class in java.util\"\u003eservice configuration error\u003c/a\u003e or if the implementation is not available or cannot be instantiated."
        ],
        "return": [
          "A new instance of a SAXParserFactory."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.parsers.SAXParserFactory",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "factoryClassName"
          }
        },
        {
          "type": {
            "name": "java.lang.ClassLoader",
            "type": "Class"
          },
          "field": {
            "name": "classLoader"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newInstance",
      "comment": "Obtain a new instance of a SAXParserFactory from class name. This function is useful when there are multiple providers in the classpath. It gives more control to the application as it can specify which provider should be loaded. Once an application has obtained a reference to a SAXParserFactory it can use the factory to configure and obtain parser instances. Tip for Trouble-shooting Setting the jaxp.debug system property will cause this method to print a lot of debug messages to System.err about what it is doing and where it is looking at. If you have problems, try:  java -Djaxp.debug\u003d1 YourProgram ....",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/parsers/SAXParserFactory.html#newInstance()\"\u003e\u003ccode\u003enewInstance()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003efactoryClassName\u003c/code\u003e - fully qualified factory class name that provides implementation of \n\u003ccode\u003ejavax.xml.parsers.SAXParserFactory\u003c/code\u003e.",
          "\u003ccode\u003eclassLoader\u003c/code\u003e - \n\u003ccode\u003eClassLoader\u003c/code\u003e used to load the factory class. If \n\u003ccode\u003enull\u003c/code\u003e current \n\u003ccode\u003eThread\u003c/code\u003e\u0027s context classLoader is used to load the factory class."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/parsers/FactoryConfigurationError.html\" title\u003d\"class in javax.xml.parsers\"\u003eFactoryConfigurationError\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efactoryClassName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or the factory class cannot be loaded, instantiated."
        ],
        "return": [
          "New instance of a \n\u003ccode\u003eSAXParserFactory\u003c/code\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.parsers.SAXParser",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.parsers.ParserConfigurationException",
          "type": "Class"
        },
        {
          "name": "org.xml.sax.SAXException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newSAXParser",
      "comment": "Creates a new instance of a SAXParser using the currently configured factory parameters.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/parsers/ParserConfigurationException.html\" title\u003d\"class in javax.xml.parsers\"\u003eParserConfigurationException\u003c/a\u003e\u003c/code\u003e - if a parser cannot be created which satisfies the requested configuration.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXException\u003c/a\u003e\u003c/code\u003e - for SAX errors."
        ],
        "return": [
          "A new instance of a SAXParser."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "awareness"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setNamespaceAware",
      "comment": "Specifies that the parser produced by this code will provide support for XML namespaces. By default the value of this is set to false.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eawareness\u003c/code\u003e - true if the parser produced by this code will provide support for XML namespaces; false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "validating"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setValidating",
      "comment": "Specifies that the parser produced by this code will validate documents as they are parsed. By default the value of this is set to false. Note that \"the validation\" here means a validating parser as defined in the XML recommendation. In other words, it essentially just controls the DTD validation. (except the legacy two properties defined in JAXP 1.2.) To use modern schema languages such as W3C XML Schema or RELAX NG instead of DTD, you can configure your parser to be a non-validating parser by leaving the setValidating(boolean) method false, then use the setSchema(Schema) method to associate a schema to a parser.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalidating\u003c/code\u003e - true if the parser produced by this code will validate documents as they are parsed; false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isNamespaceAware",
      "comment": "Indicates whether or not the factory is configured to produce parsers which are namespace aware.",
      "tagMap": {
        "return": [
          "true if the factory is configured to produce parsers which are namespace aware; false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isValidating",
      "comment": "Indicates whether or not the factory is configured to produce parsers which validate the XML content during parse.",
      "tagMap": {
        "return": [
          "true if the factory is configured to produce parsers which validate the XML content during parse; false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.parsers.ParserConfigurationException",
          "type": "Class"
        },
        {
          "name": "org.xml.sax.SAXNotRecognizedException",
          "type": "Class"
        },
        {
          "name": "org.xml.sax.SAXNotSupportedException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "setFeature",
      "comment": "Sets the particular feature in the underlying implementation of org.xml.sax.XMLReader. A list of the core features and properties can be found at http://www.saxproject.org/ All implementations are required to support the XMLConstants.FEATURE_SECURE_PROCESSING feature. When the feature is true: the implementation will limit XML processing to conform to implementation limits. Examples include entity expansion limits and XML Schema constructs that would consume large amounts of resources. If XML processing is limited for security reasons, it will be reported via a call to the registered ErrorHandler.fatalError(SAXParseException exception). See SAXParser parse methods for handler specification. When the feature is false, the implementation will processing XML according to the XML specifications without regard to possible implementation limits.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#setFeature(java.lang.String,boolean)\"\u003e\u003ccode\u003eXMLReader.setFeature(java.lang.String, boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the feature to be set.",
          "\u003ccode\u003evalue\u003c/code\u003e - The value of the feature to be set."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/parsers/ParserConfigurationException.html\" title\u003d\"class in javax.xml.parsers\"\u003eParserConfigurationException\u003c/a\u003e\u003c/code\u003e - if a parser cannot be created which satisfies the requested configuration.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXNotRecognizedException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXNotRecognizedException\u003c/a\u003e\u003c/code\u003e - When the underlying XMLReader does not recognize the property name.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXNotSupportedException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXNotSupportedException\u003c/a\u003e\u003c/code\u003e - When the underlying XMLReader recognizes the property name but doesn\u0027t support the property.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - If the \n\u003ccode\u003ename\u003c/code\u003e parameter is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.parsers.ParserConfigurationException",
          "type": "Class"
        },
        {
          "name": "org.xml.sax.SAXNotRecognizedException",
          "type": "Class"
        },
        {
          "name": "org.xml.sax.SAXNotSupportedException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getFeature",
      "comment": "Returns the particular property requested for in the underlying implementation of org.xml.sax.XMLReader.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/XMLReader.html#getProperty(java.lang.String)\"\u003e\u003ccode\u003eXMLReader.getProperty(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the property to be retrieved."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/parsers/ParserConfigurationException.html\" title\u003d\"class in javax.xml.parsers\"\u003eParserConfigurationException\u003c/a\u003e\u003c/code\u003e - if a parser cannot be created which satisfies the requested configuration.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXNotRecognizedException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXNotRecognizedException\u003c/a\u003e\u003c/code\u003e - When the underlying XMLReader does not recognize the property name.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/org/xml/sax/SAXNotSupportedException.html\" title\u003d\"class in org.xml.sax\"\u003eSAXNotSupportedException\u003c/a\u003e\u003c/code\u003e - When the underlying XMLReader recognizes the property name but doesn\u0027t support the property."
        ],
        "return": [
          "Value of the requested property."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.validation.Schema",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSchema",
      "comment": "Gets the Schema object specified through the setSchema(Schema schema) method.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - When implementation does not override this method"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/validation/Schema.html\" title\u003d\"class in javax.xml.validation\"\u003e\u003ccode\u003eSchema\u003c/code\u003e\u003c/a\u003e object that was last set through the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/parsers/SAXParserFactory.html#setSchema(javax.xml.validation.Schema)\"\u003e\u003ccode\u003esetSchema(Schema)\u003c/code\u003e\u003c/a\u003e method, or null if the method was not invoked since a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/parsers/SAXParserFactory.html\" title\u003d\"class in javax.xml.parsers\"\u003e\u003ccode\u003eSAXParserFactory\u003c/code\u003e\u003c/a\u003e is created."
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.xml.validation.Schema",
            "type": "Class"
          },
          "field": {
            "name": "schema"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSchema",
      "comment": "Set the Schema to be used by parsers created from this factory. When a Schema is non-null, a parser will use a validator created from it to validate documents before it passes information down to the application. When warnings/errors/fatal errors are found by the validator, the parser must handle them as if those errors were found by the parser itself. In other words, if the user-specified ErrorHandler is set, it must receive those errors, and if not, they must be treated according to the implementation specific default error handling rules. A validator may modify the SAX event stream (for example by adding default values that were missing in documents), and a parser is responsible to make sure that the application will receive those modified event stream. Initially, null is set as the Schema. This processing will take effect even if the isValidating() method returns false. It is an error to use the http://java.sun.com/xml/jaxp/properties/schemaSource property and/or the http://java.sun.com/xml/jaxp/properties/schemaLanguage property in conjunction with a non-null Schema object. Such configuration will cause a SAXException exception when those properties are set on a SAXParser. Note for implementors A parser must be able to work with any Schema implementation. However, parsers and schemas are allowed to use implementation-specific custom mechanisms as long as they yield the result described in the specification.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eschema\u003c/code\u003e - \n\u003ccode\u003eSchema\u003c/code\u003e to use, \n\u003ccode\u003enull\u003c/code\u003e to remove a schema."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - When implementation does not override this method"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "state"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setXIncludeAware",
      "comment": "Set state of XInclude processing. If XInclude markup is found in the document instance, should it be processed as specified in XML Inclusions (XInclude) Version 1.0. XInclude processing defaults to false.",
      "tagMap": {
        "param": [
          "\u003ccode\u003estate\u003c/code\u003e - Set XInclude processing to \n\u003ccode\u003etrue\u003c/code\u003e or \n\u003ccode\u003efalse\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - When implementation does not override this method"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isXIncludeAware",
      "comment": "Get state of XInclude processing.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - When implementation does not override this method"
        ],
        "return": [
          "current state of XInclude processing"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Protected constructor to force use of newInstance().",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.xml.parsers.SAXParserFactory",
  "comment": "Defines a factory API that enables applications to configure and obtain a SAX based parser to parse XML documents.",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}