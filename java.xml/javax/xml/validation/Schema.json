{
  "packageName": "javax.xml.validation",
  "simpleName": "Schema",
  "moduleName": "java.xml",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.xml.validation.Validator",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newValidator",
      "comment": "Creates a new Validator for this Schema. A validator enforces/checks the set of constraints this object represents. Implementors should assure that the properties set on the SchemaFactory that created this Schema are also set on the Validator constructed.",
      "tagMap": {
        "return": [
          "Always return a non-null valid object."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.validation.ValidatorHandler",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newValidatorHandler",
      "comment": "Creates a new ValidatorHandler for this Schema. Implementors should assure that the properties set on the SchemaFactory that created this Schema are also set on the ValidatorHandler constructed.",
      "tagMap": {
        "return": [
          "Always return a non-null valid object."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for the derived class. The constructor does nothing.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.xml.validation.Schema",
  "comment": "Immutable in-memory representation of grammar. \n\u003cp\u003e This object represents a set of constraints that can be checked/ enforced against an XML document. \u003c/p\u003e\n\u003cp\u003e A \u003ca href\u003d\"Schema.html\" title\u003d\"class in javax.xml.validation\"\u003e\u003ccode\u003eSchema\u003c/code\u003e\u003c/a\u003e object is thread safe and applications are encouraged to share it across many parsers in many threads. \u003c/p\u003e\n\u003cp\u003e A \u003ca href\u003d\"Schema.html\" title\u003d\"class in javax.xml.validation\"\u003e\u003ccode\u003eSchema\u003c/code\u003e\u003c/a\u003e object is immutable in the sense that it shouldn\u0027t change the set of constraints once it is created. In other words, if an application validates the same document twice against the same \u003ca href\u003d\"Schema.html\" title\u003d\"class in javax.xml.validation\"\u003e\u003ccode\u003eSchema\u003c/code\u003e\u003c/a\u003e, it must always produce the same result. \u003c/p\u003e\n\u003cp\u003e A \u003ca href\u003d\"Schema.html\" title\u003d\"class in javax.xml.validation\"\u003e\u003ccode\u003eSchema\u003c/code\u003e\u003c/a\u003e object is usually created from \u003ca href\u003d\"SchemaFactory.html\" title\u003d\"class in javax.xml.validation\"\u003e\u003ccode\u003eSchemaFactory\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e Two kinds of validators can be created from a \u003ca href\u003d\"Schema.html\" title\u003d\"class in javax.xml.validation\"\u003e\u003ccode\u003eSchema\u003c/code\u003e\u003c/a\u003e object. One is \u003ca href\u003d\"Validator.html\" title\u003d\"class in javax.xml.validation\"\u003e\u003ccode\u003eValidator\u003c/code\u003e\u003c/a\u003e, which provides highly-level validation operations that cover typical use cases. The other is \u003ca href\u003d\"ValidatorHandler.html\" title\u003d\"class in javax.xml.validation\"\u003e\u003ccode\u003eValidatorHandler\u003c/code\u003e\u003c/a\u003e, which works on top of SAX for better modularity. \u003c/p\u003e\n\u003cp\u003e This specification does not refine the \u003ca href\u003d\"../../../../java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e method. In other words, if you parse the same schema twice, you may still get \u003ccode\u003e!schemaA.equals(schemaB)\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"http://www.w3.org/TR/xmlschema-1/\"\u003eXML Schema Part 1: Structures\u003c/a\u003e, \n\u003ca href\u003d\"http://www.w3.org/TR/xml11/\"\u003eExtensible Markup Language (XML) 1.1\u003c/a\u003e, \n\u003ca href\u003d\"http://www.w3.org/TR/REC-xml\"\u003eExtensible Markup Language (XML) 1.0 (Second Edition)\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}