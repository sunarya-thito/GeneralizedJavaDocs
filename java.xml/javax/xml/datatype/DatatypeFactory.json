{
  "packageName": "javax.xml.datatype",
  "simpleName": "DatatypeFactory",
  "moduleName": "java.xml",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DATATYPEFACTORY_PROPERTY",
      "comment": "Default property name as defined in JSR 206: Java(TM) API for XML Processing (JAXP) 1.3. Default value is javax.xml.datatype.DatatypeFactory.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.datatype.DatatypeFactory.DATATYPEFACTORY_PROPERTY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DATATYPEFACTORY_IMPLEMENTATION_CLASS",
      "comment": "Default implementation class name as defined in JSR 206: Java(TM) API for XML Processing (JAXP) 1.3. Implementers should specify the name of an appropriate class to be instantiated if no other implementation resolution mechanism succeeds. Users should not refer to this field; it is intended only to document a factory implementation detail.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.DatatypeFactory",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newDefaultInstance",
      "comment": "Creates a new instance of the DatatypeFactory builtin system-default implementation.",
      "annotations": [],
      "tagMap": {
        "return": [
          "A new instance of the \n\u003ccode\u003eDatatypeFactory\u003c/code\u003e builtin system-default implementation."
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.DatatypeFactory",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.datatype.DatatypeConfigurationException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newInstance",
      "comment": "Obtain a new instance of a DatatypeFactory. The implementation resolution mechanisms are defined in this Class\u0027s documentation.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/DatatypeFactory.html#newInstance(java.lang.String,java.lang.ClassLoader)\"\u003e\u003ccode\u003enewInstance(String factoryClassName, ClassLoader classLoader)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/DatatypeConfigurationException.html\" title\u003d\"class in javax.xml.datatype\"\u003eDatatypeConfigurationException\u003c/a\u003e\u003c/code\u003e - If the implementation is not available or cannot be instantiated."
        ],
        "return": [
          "New instance of a \n\u003ccode\u003eDatatypeFactory\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.DatatypeFactory",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.datatype.DatatypeConfigurationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "factoryClassName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.ClassLoader",
            "type": "Class"
          },
          "name": "classLoader",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newInstance",
      "comment": "Obtain a new instance of a DatatypeFactory from class name. This function is useful when there are multiple providers in the classpath. It gives more control to the application as it can specify which provider should be loaded. Once an application has obtained a reference to a DatatypeFactory it can use the factory to configure and obtain datatype instances. Tip for Trouble-shooting Setting the jaxp.debug system property will cause this method to print a lot of debug messages to System.err about what it is doing and where it is looking at. If you have problems try:  java -Djaxp.debug\u003d1 YourProgram ....",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/DatatypeFactory.html#newInstance()\"\u003e\u003ccode\u003enewInstance()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003efactoryClassName\u003c/code\u003e - fully qualified factory class name that provides implementation of \n\u003ccode\u003ejavax.xml.datatype.DatatypeFactory\u003c/code\u003e.",
          "\u003ccode\u003eclassLoader\u003c/code\u003e - \n\u003ccode\u003eClassLoader\u003c/code\u003e used to load the factory class. If \n\u003ccode\u003enull\u003c/code\u003e current \n\u003ccode\u003eThread\u003c/code\u003e\u0027s context classLoader is used to load the factory class."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/DatatypeConfigurationException.html\" title\u003d\"class in javax.xml.datatype\"\u003eDatatypeConfigurationException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efactoryClassName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or the factory class cannot be loaded, instantiated."
        ],
        "return": [
          "New instance of a \n\u003ccode\u003eDatatypeFactory\u003c/code\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.Duration",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "lexicalRepresentation",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newDuration",
      "comment": "Obtain a new instance of a Duration specifying the Duration as its string representation, \"PnYnMnDTnHnMnS\", as defined in XML Schema 1.0 section 3.2.6.1. XML Schema Part 2: Datatypes, 3.2.6 duration, defines duration as: duration represents a duration of time. The value space of duration is a six-dimensional space where the coordinates designate the Gregorian year, month, day, hour, minute, and second components defined in Section 5.5.3.2 of [ISO 8601], respectively. These components are ordered in their significance by their order of appearance i.e. as year, month, day, hour, minute, and second. All six values are set and available from the created Duration The XML Schema specification states that values can be of an arbitrary size. Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values. An UnsupportedOperationException will be thrown with a message indicating implementation limits if implementation capacities are exceeded.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elexicalRepresentation\u003c/code\u003e - \n\u003ccode\u003eString\u003c/code\u003e representation of a \n\u003ccode\u003eDuration\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003elexicalRepresentation\u003c/code\u003e is not a valid representation of a \n\u003ccode\u003eDuration\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If implementation cannot support requested values.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elexicalRepresentation\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "return": [
          "New \n\u003ccode\u003eDuration\u003c/code\u003e created from parsing the \n\u003ccode\u003elexicalRepresentation\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.Duration",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "durationInMilliSeconds",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newDuration",
      "comment": "Obtain a new instance of a Duration specifying the Duration as milliseconds. XML Schema Part 2: Datatypes, 3.2.6 duration, defines duration as: duration represents a duration of time. The value space of duration is a six-dimensional space where the coordinates designate the Gregorian year, month, day, hour, minute, and second components defined in Section 5.5.3.2 of [ISO 8601], respectively. These components are ordered in their significance by their order of appearance i.e. as year, month, day, hour, minute, and second. All six values are set by computing their values from the specified milliseconds and are available using the get methods of the created Duration. The values conform to and are defined by: ISO 8601:2000(E) Section 5.5.3.2 Alternative format W3C XML Schema 1.0 Part 2, Appendix D, ISO 8601 Date and Time Formats XMLGregorianCalendar Date/Time Datatype Field Mapping Between XML Schema 1.0 and Java Representation The default start instance is defined by GregorianCalendar\u0027s use of the start of the epoch: i.e., Calendar.YEAR \u003d 1970, Calendar.MONTH \u003d Calendar.JANUARY, Calendar.DATE \u003d 1, etc. This is important as there are variations in the Gregorian Calendar, e.g. leap years have different days in the month \u003d Calendar.FEBRUARY so the result of Duration.getMonths() and Duration.getDays() can be influenced.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edurationInMilliSeconds\u003c/code\u003e - Duration in milliseconds to create."
        ],
        "return": [
          "New \n\u003ccode\u003eDuration\u003c/code\u003e representing \n\u003ccode\u003edurationInMilliSeconds\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.Duration",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "isPositive",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "years",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "months",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "days",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "hours",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "minutes",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigDecimal",
            "type": "Class"
          },
          "name": "seconds",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newDuration",
      "comment": "Obtain a new instance of a Duration specifying the Duration as isPositive, years, months, days, hours, minutes, seconds. The XML Schema specification states that values can be of an arbitrary size. Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values. An UnsupportedOperationException will be thrown with a message indicating implementation limits if implementation capacities are exceeded. A null value indicates that field is not set.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eisPositive\u003c/code\u003e - Set to \n\u003ccode\u003efalse\u003c/code\u003e to create a negative duration. When the length of the duration is zero, this parameter will be ignored.",
          "\u003ccode\u003eyears\u003c/code\u003e - of this \n\u003ccode\u003eDuration\u003c/code\u003e",
          "\u003ccode\u003emonths\u003c/code\u003e - of this \n\u003ccode\u003eDuration\u003c/code\u003e",
          "\u003ccode\u003edays\u003c/code\u003e - of this \n\u003ccode\u003eDuration\u003c/code\u003e",
          "\u003ccode\u003ehours\u003c/code\u003e - of this \n\u003ccode\u003eDuration\u003c/code\u003e",
          "\u003ccode\u003eminutes\u003c/code\u003e - of this \n\u003ccode\u003eDuration\u003c/code\u003e",
          "\u003ccode\u003eseconds\u003c/code\u003e - of this \n\u003ccode\u003eDuration\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the values are not a valid representation of a \n\u003ccode\u003eDuration\u003c/code\u003e: if all the fields (years, months, ...) are null or if any of the fields is negative.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If implementation cannot support requested values."
        ],
        "return": [
          "New \n\u003ccode\u003eDuration\u003c/code\u003e created from the specified values."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.Duration",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "isPositive",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "years",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "months",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "days",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "hours",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "minutes",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "seconds",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newDuration",
      "comment": "Obtain a new instance of a Duration specifying the Duration as isPositive, years, months, days, hours, minutes, seconds. A DatatypeConstants.FIELD_UNDEFINED value indicates that field is not set.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/DatatypeFactory.html#newDuration(boolean,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigDecimal)\"\u003e\u003ccode\u003enewDuration( boolean isPositive, BigInteger years, BigInteger months, BigInteger days, BigInteger hours, BigInteger minutes, BigDecimal seconds)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eisPositive\u003c/code\u003e - Set to \n\u003ccode\u003efalse\u003c/code\u003e to create a negative duration. When the length of the duration is zero, this parameter will be ignored.",
          "\u003ccode\u003eyears\u003c/code\u003e - of this \n\u003ccode\u003eDuration\u003c/code\u003e",
          "\u003ccode\u003emonths\u003c/code\u003e - of this \n\u003ccode\u003eDuration\u003c/code\u003e",
          "\u003ccode\u003edays\u003c/code\u003e - of this \n\u003ccode\u003eDuration\u003c/code\u003e",
          "\u003ccode\u003ehours\u003c/code\u003e - of this \n\u003ccode\u003eDuration\u003c/code\u003e",
          "\u003ccode\u003eminutes\u003c/code\u003e - of this \n\u003ccode\u003eDuration\u003c/code\u003e",
          "\u003ccode\u003eseconds\u003c/code\u003e - of this \n\u003ccode\u003eDuration\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the values are not a valid representation of a \n\u003ccode\u003eDuration\u003c/code\u003e: if any of the fields is negative."
        ],
        "return": [
          "New \n\u003ccode\u003eDuration\u003c/code\u003e created from the specified values."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.Duration",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "lexicalRepresentation",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newDurationDayTime",
      "comment": "Create a Duration of type xdt:dayTimeDuration by parsing its String representation, \"PnDTnHnMnS\", XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration. The datatype xdt:dayTimeDuration is a subtype of xs:duration whose lexical representation contains only day, hour, minute, and second components. This datatype resides in the namespace http://www.w3.org/2003/11/xpath-datatypes. All four values are set and available from the created Duration The XML Schema specification states that values can be of an arbitrary size. Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values. An UnsupportedOperationException will be thrown with a message indicating implementation limits if implementation capacities are exceeded.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elexicalRepresentation\u003c/code\u003e - Lexical representation of a duration."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003elexicalRepresentation\u003c/code\u003e is not a valid representation of a \n\u003ccode\u003eDuration\u003c/code\u003e expressed only in terms of days and time.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If implementation cannot support requested values.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003elexicalRepresentation\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "return": [
          "New \n\u003ccode\u003eDuration\u003c/code\u003e created using the specified \n\u003ccode\u003elexicalRepresentation\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.Duration",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "durationInMilliseconds",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newDurationDayTime",
      "comment": "Create a Duration of type xdt:dayTimeDuration using the specified milliseconds as defined in XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration. The datatype xdt:dayTimeDuration is a subtype of xs:duration whose lexical representation contains only day, hour, minute, and second components. This datatype resides in the namespace http://www.w3.org/2003/11/xpath-datatypes. All four values are set by computing their values from the specified milliseconds and are available using the get methods of the created Duration. The values conform to and are defined by: ISO 8601:2000(E) Section 5.5.3.2 Alternative format W3C XML Schema 1.0 Part 2, Appendix D, ISO 8601 Date and Time Formats XMLGregorianCalendar Date/Time Datatype Field Mapping Between XML Schema 1.0 and Java Representation The default start instance is defined by GregorianCalendar\u0027s use of the start of the epoch: i.e., Calendar.YEAR \u003d 1970, Calendar.MONTH \u003d Calendar.JANUARY, Calendar.DATE \u003d 1, etc. This is important as there are variations in the Gregorian Calendar, e.g. leap years have different days in the month \u003d Calendar.FEBRUARY so the result of Duration.getDays() can be influenced. Any remaining milliseconds after determining the day, hour, minute and second are discarded.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"http://www.w3.org/TR/xpath-datamodel#dayTimeDuration\"\u003e XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edurationInMilliseconds\u003c/code\u003e - Milliseconds of \n\u003ccode\u003eDuration\u003c/code\u003e to create."
        ],
        "return": [
          "New \n\u003ccode\u003eDuration\u003c/code\u003e created with the specified \n\u003ccode\u003edurationInMilliseconds\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.Duration",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "isPositive",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "day",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "hour",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "minute",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "second",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newDurationDayTime",
      "comment": "Create a Duration of type xdt:dayTimeDuration using the specified day, hour, minute and second as defined in XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration. The datatype xdt:dayTimeDuration is a subtype of xs:duration whose lexical representation contains only day, hour, minute, and second components. This datatype resides in the namespace http://www.w3.org/2003/11/xpath-datatypes. The XML Schema specification states that values can be of an arbitrary size. Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values. An UnsupportedOperationException will be thrown with a message indicating implementation limits if implementation capacities are exceeded. A null value indicates that field is not set.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eisPositive\u003c/code\u003e - Set to \n\u003ccode\u003efalse\u003c/code\u003e to create a negative duration. When the length of the duration is zero, this parameter will be ignored.",
          "\u003ccode\u003eday\u003c/code\u003e - Day of \n\u003ccode\u003eDuration\u003c/code\u003e.",
          "\u003ccode\u003ehour\u003c/code\u003e - Hour of \n\u003ccode\u003eDuration\u003c/code\u003e.",
          "\u003ccode\u003eminute\u003c/code\u003e - Minute of \n\u003ccode\u003eDuration\u003c/code\u003e.",
          "\u003ccode\u003esecond\u003c/code\u003e - Second of \n\u003ccode\u003eDuration\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the values are not a valid representation of a \n\u003ccode\u003eDuration\u003c/code\u003e: if all the fields (day, hour, ...) are null or if any of the fields is negative.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If implementation cannot support requested values."
        ],
        "return": [
          "New \n\u003ccode\u003eDuration\u003c/code\u003e created with the specified \n\u003ccode\u003eday\u003c/code\u003e, \n\u003ccode\u003ehour\u003c/code\u003e, \n\u003ccode\u003eminute\u003c/code\u003e and \n\u003ccode\u003esecond\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.Duration",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "isPositive",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "day",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "hour",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "minute",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "second",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newDurationDayTime",
      "comment": "Create a Duration of type xdt:dayTimeDuration using the specified day, hour, minute and second as defined in XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration. The datatype xdt:dayTimeDuration is a subtype of xs:duration whose lexical representation contains only day, hour, minute, and second components. This datatype resides in the namespace http://www.w3.org/2003/11/xpath-datatypes. A DatatypeConstants.FIELD_UNDEFINED value indicates that field is not set.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eisPositive\u003c/code\u003e - Set to \n\u003ccode\u003efalse\u003c/code\u003e to create a negative duration. When the length of the duration is zero, this parameter will be ignored.",
          "\u003ccode\u003eday\u003c/code\u003e - Day of \n\u003ccode\u003eDuration\u003c/code\u003e.",
          "\u003ccode\u003ehour\u003c/code\u003e - Hour of \n\u003ccode\u003eDuration\u003c/code\u003e.",
          "\u003ccode\u003eminute\u003c/code\u003e - Minute of \n\u003ccode\u003eDuration\u003c/code\u003e.",
          "\u003ccode\u003esecond\u003c/code\u003e - Second of \n\u003ccode\u003eDuration\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the values are not a valid representation of a \n\u003ccode\u003eDuration\u003c/code\u003e: if any of the fields (day, hour, ...) is negative."
        ],
        "return": [
          "New \n\u003ccode\u003eDuration\u003c/code\u003e created with the specified \n\u003ccode\u003eday\u003c/code\u003e, \n\u003ccode\u003ehour\u003c/code\u003e, \n\u003ccode\u003eminute\u003c/code\u003e and \n\u003ccode\u003esecond\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.Duration",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "lexicalRepresentation",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newDurationYearMonth",
      "comment": "Create a Duration of type xdt:yearMonthDuration by parsing its String representation, \"PnYnM\", XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration. The datatype xdt:yearMonthDuration is a subtype of xs:duration whose lexical representation contains only year and month components. This datatype resides in the namespace XMLConstants.W3C_XPATH_DATATYPE_NS_URI. Both values are set and available from the created Duration The XML Schema specification states that values can be of an arbitrary size. Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values. An UnsupportedOperationException will be thrown with a message indicating implementation limits if implementation capacities are exceeded.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elexicalRepresentation\u003c/code\u003e - Lexical representation of a duration."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003elexicalRepresentation\u003c/code\u003e is not a valid representation of a \n\u003ccode\u003eDuration\u003c/code\u003e expressed only in terms of years and months.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If implementation cannot support requested values.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003elexicalRepresentation\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "return": [
          "New \n\u003ccode\u003eDuration\u003c/code\u003e created using the specified \n\u003ccode\u003elexicalRepresentation\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.Duration",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "durationInMilliseconds",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newDurationYearMonth",
      "comment": "Create a Duration of type xdt:yearMonthDuration using the specified milliseconds as defined in XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration. The datatype xdt:yearMonthDuration is a subtype of xs:duration whose lexical representation contains only year and month components. This datatype resides in the namespace XMLConstants.W3C_XPATH_DATATYPE_NS_URI. Both values are set by computing their values from the specified milliseconds and are available using the get methods of the created Duration. The values conform to and are defined by: ISO 8601:2000(E) Section 5.5.3.2 Alternative format W3C XML Schema 1.0 Part 2, Appendix D, ISO 8601 Date and Time Formats XMLGregorianCalendar Date/Time Datatype Field Mapping Between XML Schema 1.0 and Java Representation The default start instance is defined by GregorianCalendar\u0027s use of the start of the epoch: i.e., Calendar.YEAR \u003d 1970, Calendar.MONTH \u003d Calendar.JANUARY, Calendar.DATE \u003d 1, etc. This is important as there are variations in the Gregorian Calendar, e.g. leap years have different days in the month \u003d Calendar.FEBRUARY so the result of Duration.getMonths() can be influenced. Any remaining milliseconds after determining the year and month are discarded.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edurationInMilliseconds\u003c/code\u003e - Milliseconds of \n\u003ccode\u003eDuration\u003c/code\u003e to create."
        ],
        "return": [
          "New \n\u003ccode\u003eDuration\u003c/code\u003e created using the specified \n\u003ccode\u003edurationInMilliseconds\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.Duration",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "isPositive",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "year",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "month",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newDurationYearMonth",
      "comment": "Create a Duration of type xdt:yearMonthDuration using the specified year and month as defined in XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration. The XML Schema specification states that values can be of an arbitrary size. Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values. An UnsupportedOperationException will be thrown with a message indicating implementation limits if implementation capacities are exceeded. A null value indicates that field is not set.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eisPositive\u003c/code\u003e - Set to \n\u003ccode\u003efalse\u003c/code\u003e to create a negative duration. When the length of the duration is zero, this parameter will be ignored.",
          "\u003ccode\u003eyear\u003c/code\u003e - Year of \n\u003ccode\u003eDuration\u003c/code\u003e.",
          "\u003ccode\u003emonth\u003c/code\u003e - Month of \n\u003ccode\u003eDuration\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the values are not a valid representation of a \n\u003ccode\u003eDuration\u003c/code\u003e: if all of the fields (year, month) are null or if any of the fields is negative.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If implementation cannot support requested values."
        ],
        "return": [
          "New \n\u003ccode\u003eDuration\u003c/code\u003e created using the specified \n\u003ccode\u003eyear\u003c/code\u003e and \n\u003ccode\u003emonth\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.Duration",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "isPositive",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "year",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "month",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newDurationYearMonth",
      "comment": "Create a Duration of type xdt:yearMonthDuration using the specified year and month as defined in XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration. A DatatypeConstants.FIELD_UNDEFINED value indicates that field is not set.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eisPositive\u003c/code\u003e - Set to \n\u003ccode\u003efalse\u003c/code\u003e to create a negative duration. When the length of the duration is zero, this parameter will be ignored.",
          "\u003ccode\u003eyear\u003c/code\u003e - Year of \n\u003ccode\u003eDuration\u003c/code\u003e.",
          "\u003ccode\u003emonth\u003c/code\u003e - Month of \n\u003ccode\u003eDuration\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the values are not a valid representation of a \n\u003ccode\u003eDuration\u003c/code\u003e: if any of the fields (year, month) is negative."
        ],
        "return": [
          "New \n\u003ccode\u003eDuration\u003c/code\u003e created using the specified \n\u003ccode\u003eyear\u003c/code\u003e and \n\u003ccode\u003emonth\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.XMLGregorianCalendar",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newXMLGregorianCalendar",
      "comment": "Create a new instance of an XMLGregorianCalendar. All date/time datatype fields set to DatatypeConstants.FIELD_UNDEFINED or null.",
      "annotations": [],
      "tagMap": {
        "return": [
          "New \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e with all date/time datatype fields set to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/DatatypeConstants.html#FIELD_UNDEFINED\"\u003e\u003ccode\u003eDatatypeConstants.FIELD_UNDEFINED\u003c/code\u003e\u003c/a\u003e or null."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.XMLGregorianCalendar",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "lexicalRepresentation",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newXMLGregorianCalendar",
      "comment": "Create a new XMLGregorianCalendar by parsing the String as a lexical representation. Parsing the lexical string representation is defined in XML Schema 1.0 Part 2, Section 3.2.[7-14].1, Lexical Representation. The string representation may not have any leading and trailing whitespaces. The parsing is done field by field so that the following holds for any lexically correct String x:  newXMLGregorianCalendar(x).toXMLFormat().equals(x)\n Except for the noted lexical/canonical representation mismatches listed in XML Schema 1.0 errata, Section 3.2.7.2.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elexicalRepresentation\u003c/code\u003e - Lexical representation of one the eight XML Schema date/time datatypes."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the \n\u003ccode\u003elexicalRepresentation\u003c/code\u003e is not a valid \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003elexicalRepresentation\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "return": [
          "\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e created from the \n\u003ccode\u003elexicalRepresentation\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.XMLGregorianCalendar",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.GregorianCalendar",
            "type": "Class"
          },
          "name": "cal",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newXMLGregorianCalendar",
      "comment": "Create an XMLGregorianCalendar from a GregorianCalendar. Field by Field Conversion from GregorianCalendar to an XMLGregorianCalendar java.util.GregorianCalendar field javax.xml.datatype.XMLGregorianCalendar field ERA \u003d\u003d GregorianCalendar.BC ? -YEAR : YEAR XMLGregorianCalendar.setYear(int year) MONTH + 1 XMLGregorianCalendar.setMonth(int month) DAY_OF_MONTH XMLGregorianCalendar.setDay(int day) HOUR_OF_DAY, MINUTE, SECOND, MILLISECOND XMLGregorianCalendar.setTime(int hour, int minute, int second, BigDecimal fractional) (ZONE_OFFSET + DST_OFFSET) / (60*1000) (in minutes) XMLGregorianCalendar.setTimezone(int offset)* *conversion loss of information. It is not possible to represent a java.util.GregorianCalendar daylight savings timezone id in the XML Schema 1.0 date/time datatype representation. To compute the return value\u0027s TimeZone field, when this.getTimezone() !\u003d FIELD_UNDEFINED, create a java.util.TimeZone with a custom timezone id using the this.getTimezone(). else use the GregorianCalendar default timezone value for the host is defined as specified by java.util.TimeZone.getDefault().",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecal\u003c/code\u003e - \n\u003ccode\u003ejava.util.GregorianCalendar\u003c/code\u003e used to create \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003ecal\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "return": [
          "\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e created from \n\u003ccode\u003ejava.util.GregorianCalendar\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.XMLGregorianCalendar",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "year",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "month",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "day",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "hour",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "minute",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "second",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigDecimal",
            "type": "Class"
          },
          "name": "fractionalSecond",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "timezone",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newXMLGregorianCalendar",
      "comment": "Constructor allowing for complete value spaces allowed by W3C XML Schema 1.0 recommendation for xsd:dateTime and related builtin datatypes. Note that year parameter supports arbitrarily large numbers and fractionalSecond has infinite precision. A null value indicates that field is not set.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eyear\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003emonth\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003eday\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003ehour\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003eminute\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003esecond\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003efractionalSecond\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003etimezone\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If any individual parameter\u0027s value is outside the maximum value constraint for the field as determined by the Date/Time Data Mapping table in \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/XMLGregorianCalendar.html\" title\u003d\"class in javax.xml.datatype\"\u003e\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e\u003c/a\u003e or if the composite values constitute an invalid \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e instance as determined by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/XMLGregorianCalendar.html#isValid()\"\u003e\u003ccode\u003eXMLGregorianCalendar.isValid()\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e created from specified values."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.XMLGregorianCalendar",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "year",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "month",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "day",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "hour",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "minute",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "second",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "millisecond",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "timezone",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newXMLGregorianCalendar",
      "comment": "Constructor of value spaces that a java.util.GregorianCalendar instance would need to convert to an XMLGregorianCalendar instance. XMLGregorianCalendar eon and fractionalSecond are set to null A DatatypeConstants.FIELD_UNDEFINED value indicates that field is not set.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eyear\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003emonth\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003eday\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003ehour\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003eminute\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003esecond\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003emillisecond\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003etimezone\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If any individual parameter\u0027s value is outside the maximum value constraint for the field as determined by the Date/Time Data Mapping table in \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/XMLGregorianCalendar.html\" title\u003d\"class in javax.xml.datatype\"\u003e\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e\u003c/a\u003e or if the composite values constitute an invalid \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e instance as determined by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/XMLGregorianCalendar.html#isValid()\"\u003e\u003ccode\u003eXMLGregorianCalendar.isValid()\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e created from specified values."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.XMLGregorianCalendar",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "year",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "month",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "day",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "timezone",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newXMLGregorianCalendarDate",
      "comment": "Create a Java representation of XML Schema builtin datatype date or g*. For example, an instance of gYear can be created invoking this factory with month and day parameters set to DatatypeConstants.FIELD_UNDEFINED. A DatatypeConstants.FIELD_UNDEFINED value indicates that field is not set.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/DatatypeConstants.html#FIELD_UNDEFINED\"\u003e\u003ccode\u003eDatatypeConstants.FIELD_UNDEFINED\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eyear\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003emonth\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003eday\u003c/code\u003e - of \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e to be created.",
          "\u003ccode\u003etimezone\u003c/code\u003e - offset in minutes. \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/DatatypeConstants.html#FIELD_UNDEFINED\"\u003e\u003ccode\u003eDatatypeConstants.FIELD_UNDEFINED\u003c/code\u003e\u003c/a\u003e indicates optional field is not set."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If any individual parameter\u0027s value is outside the maximum value constraint for the field as determined by the Date/Time Data Mapping table in \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/XMLGregorianCalendar.html\" title\u003d\"class in javax.xml.datatype\"\u003e\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e\u003c/a\u003e or if the composite values constitute an invalid \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e instance as determined by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/XMLGregorianCalendar.html#isValid()\"\u003e\u003ccode\u003eXMLGregorianCalendar.isValid()\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e created from parameter values."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.XMLGregorianCalendar",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "hours",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "minutes",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "seconds",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "timezone",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newXMLGregorianCalendarTime",
      "comment": "Create a Java instance of XML Schema builtin datatype time. A DatatypeConstants.FIELD_UNDEFINED value indicates that field is not set.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/DatatypeConstants.html#FIELD_UNDEFINED\"\u003e\u003ccode\u003eDatatypeConstants.FIELD_UNDEFINED\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ehours\u003c/code\u003e - number of hours",
          "\u003ccode\u003eminutes\u003c/code\u003e - number of minutes",
          "\u003ccode\u003eseconds\u003c/code\u003e - number of seconds",
          "\u003ccode\u003etimezone\u003c/code\u003e - offset in minutes. \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/DatatypeConstants.html#FIELD_UNDEFINED\"\u003e\u003ccode\u003eDatatypeConstants.FIELD_UNDEFINED\u003c/code\u003e\u003c/a\u003e indicates optional field is not set."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If any individual parameter\u0027s value is outside the maximum value constraint for the field as determined by the Date/Time Data Mapping table in \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/XMLGregorianCalendar.html\" title\u003d\"class in javax.xml.datatype\"\u003e\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e\u003c/a\u003e or if the composite values constitute an invalid \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e instance as determined by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/XMLGregorianCalendar.html#isValid()\"\u003e\u003ccode\u003eXMLGregorianCalendar.isValid()\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e created from parameter values."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.XMLGregorianCalendar",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "hours",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "minutes",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "seconds",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigDecimal",
            "type": "Class"
          },
          "name": "fractionalSecond",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "timezone",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newXMLGregorianCalendarTime",
      "comment": "Create a Java instance of XML Schema builtin datatype time. A null value indicates that field is not set. A DatatypeConstants.FIELD_UNDEFINED value indicates that field is not set.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/DatatypeConstants.html#FIELD_UNDEFINED\"\u003e\u003ccode\u003eDatatypeConstants.FIELD_UNDEFINED\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ehours\u003c/code\u003e - number of hours",
          "\u003ccode\u003eminutes\u003c/code\u003e - number of minutes",
          "\u003ccode\u003eseconds\u003c/code\u003e - number of seconds",
          "\u003ccode\u003efractionalSecond\u003c/code\u003e - value of \n\u003ccode\u003enull\u003c/code\u003e indicates that this optional field is not set.",
          "\u003ccode\u003etimezone\u003c/code\u003e - offset in minutes. \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/DatatypeConstants.html#FIELD_UNDEFINED\"\u003e\u003ccode\u003eDatatypeConstants.FIELD_UNDEFINED\u003c/code\u003e\u003c/a\u003e indicates optional field is not set."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If any individual parameter\u0027s value is outside the maximum value constraint for the field as determined by the Date/Time Data Mapping table in \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/XMLGregorianCalendar.html\" title\u003d\"class in javax.xml.datatype\"\u003e\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e\u003c/a\u003e or if the composite values constitute an invalid \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e instance as determined by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/XMLGregorianCalendar.html#isValid()\"\u003e\u003ccode\u003eXMLGregorianCalendar.isValid()\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e created from parameter values."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.datatype.XMLGregorianCalendar",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "hours",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "minutes",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "seconds",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "milliseconds",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "timezone",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newXMLGregorianCalendarTime",
      "comment": "Create a Java instance of XML Schema builtin datatype time. A DatatypeConstants.FIELD_UNDEFINED value indicates that field is not set.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/DatatypeConstants.html#FIELD_UNDEFINED\"\u003e\u003ccode\u003eDatatypeConstants.FIELD_UNDEFINED\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ehours\u003c/code\u003e - number of hours",
          "\u003ccode\u003eminutes\u003c/code\u003e - number of minutes",
          "\u003ccode\u003eseconds\u003c/code\u003e - number of seconds",
          "\u003ccode\u003emilliseconds\u003c/code\u003e - number of milliseconds",
          "\u003ccode\u003etimezone\u003c/code\u003e - offset in minutes. \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/DatatypeConstants.html#FIELD_UNDEFINED\"\u003e\u003ccode\u003eDatatypeConstants.FIELD_UNDEFINED\u003c/code\u003e\u003c/a\u003e indicates optional field is not set."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If any individual parameter\u0027s value is outside the maximum value constraint for the field as determined by the Date/Time Data Mapping table in \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/XMLGregorianCalendar.html\" title\u003d\"class in javax.xml.datatype\"\u003e\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e\u003c/a\u003e or if the composite values constitute an invalid \n\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e instance as determined by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml/javax/xml/datatype/XMLGregorianCalendar.html#isValid()\"\u003e\u003ccode\u003eXMLGregorianCalendar.isValid()\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "\u003ccode\u003eXMLGregorianCalendar\u003c/code\u003e created from parameter values."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Protected constructor to prevent instantiation outside of package. Use newInstance() to create a DatatypeFactory.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.xml.datatype.DatatypeFactory",
  "annotations": [],
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}