{
  "packageName": "java.lang.management",
  "simpleName": "BufferPoolMXBean",
  "moduleName": "java.management",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.management.PlatformManagedObject",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getName",
      "comment": "Returns the name representing this buffer pool.",
      "tagMap": {
        "return": [
          "The name of this buffer pool."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCount",
      "comment": "Returns an estimate of the number of buffers in the pool.",
      "tagMap": {
        "return": [
          "An estimate of the number of buffers in this pool"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTotalCapacity",
      "comment": "Returns an estimate of the total capacity of the buffers in this pool. A buffer\u0027s capacity is the number of elements it contains and the value returned by this method is an estimate of the total capacity of buffers in the pool in bytes.",
      "tagMap": {
        "return": [
          "An estimate of the total capacity of the buffers in this pool in bytes"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMemoryUsed",
      "comment": "Returns an estimate of the memory that the Java virtual machine is using for this buffer pool. The value returned by this method may differ from the estimate of the total capacity of the buffers in this pool. This difference is explained by alignment, memory allocator, and other implementation specific reasons.",
      "tagMap": {
        "return": [
          "An estimate of the memory that the Java virtual machine is using for this buffer pool in bytes, or \n\u003ccode\u003e-1L\u003c/code\u003e if an estimate of the memory usage is not available"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.lang.management.BufferPoolMXBean",
  "comment": "The management interface for a buffer pool, for example a pool of \n\u003ca href\u003d\"../../../../java.base/java/nio/ByteBuffer.html#allocateDirect(int)\"\u003e\u003ccode\u003edirect\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"../../../../java.base/java/nio/MappedByteBuffer.html\" title\u003d\"class in java.nio\"\u003e\u003ccode\u003emapped\u003c/code\u003e\u003c/a\u003e buffers. \n\u003cp\u003e A class implementing this interface is an \u003ca href\u003d\"../../../javax/management/MXBean.html\" title\u003d\"annotation in javax.management\"\u003e\u003ccode\u003eMXBean\u003c/code\u003e\u003c/a\u003e. A Java virtual machine has one or more implementations of this interface. The \u003ca href\u003d\"ManagementFactory.html#getPlatformMXBeans(java.lang.Class)\"\u003e\u003ccode\u003egetPlatformMXBeans\u003c/code\u003e\u003c/a\u003e method can be used to obtain the list of \u003ccode\u003eBufferPoolMXBean\u003c/code\u003e objects representing the management interfaces for pools of buffers as follows: \u003c/p\u003e\n\u003cpre\u003e     List\u0026lt;BufferPoolMXBean\u0026gt; pools \u003d ManagementFactory.getPlatformMXBeans(BufferPoolMXBean.class);\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The management interfaces are also registered with the platform \u003ca href\u003d\"../../../javax/management/MBeanServer.html\" title\u003d\"interface in javax.management\"\u003e\u003ccode\u003eMBeanServer\u003c/code\u003e\u003c/a\u003e. The \u003ca href\u003d\"../../../javax/management/ObjectName.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eObjectName\u003c/code\u003e\u003c/a\u003e that uniquely identifies the management interface within the \u003ccode\u003eMBeanServer\u003c/code\u003e takes the form: \u003c/p\u003e\n\u003cpre\u003e     java.nio:type\u003dBufferPool,name\u003d\u003ci\u003epool name\u003c/i\u003e\n \u003c/pre\u003e where \n\u003cem\u003epool name\u003c/em\u003e is the \n\u003ca href\u003d\"#getName()\"\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/a\u003e of the buffer pool.\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.7"
    ]
  }
}