{
  "packageName": "javax.management.remote",
  "simpleName": "JMXAuthenticator",
  "moduleName": "java.management",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.security.auth.Subject",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "authenticate",
      "comment": "Authenticates the MBeanServerConnection client with the given client credentials.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecredentials\u003c/code\u003e - the user-defined credentials to be passed into the server in order to authenticate the user before creating the \n\u003ccode\u003eMBeanServerConnection\u003c/code\u003e. The actual type of this parameter, and whether it can be null, depends on the connector."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if the server cannot authenticate the user with the provided credentials."
        ],
        "return": [
          "the authenticated subject containing its associated principals."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.management.remote.JMXAuthenticator",
  "comment": "\u003cp\u003eInterface to define how remote credentials are converted into a JAAS Subject. This interface is used by the RMI Connector Server, and can be used by other connector servers.\u003c/p\u003e \n\u003cp\u003eThe user-defined authenticator instance is passed to the connector server in the environment map as the value of the attribute \u003ca href\u003d\"JMXConnectorServer.html#AUTHENTICATOR\"\u003e\u003ccode\u003eJMXConnectorServer.AUTHENTICATOR\u003c/code\u003e\u003c/a\u003e. For connector servers that use only this authentication system, if this attribute is not present or its value is \u003ccode\u003enull\u003c/code\u003e then no user authentication will be performed and full access to the methods exported by the \u003ccode\u003eMBeanServerConnection\u003c/code\u003e object will be allowed.\u003c/p\u003e \n\u003cp\u003eIf authentication is successful then an authenticated \u003ca href\u003d\"../../../../java.base/javax/security/auth/Subject.html\" title\u003d\"class in javax.security.auth\"\u003e\u003ccode\u003esubject\u003c/code\u003e\u003c/a\u003e filled in with its associated \u003ca href\u003d\"../../../../java.base/java/security/Principal.html\" title\u003d\"interface in java.security\"\u003e\u003ccode\u003eprincipals\u003c/code\u003e\u003c/a\u003e is returned. Authorization checks will be then performed based on the given set of principals.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}