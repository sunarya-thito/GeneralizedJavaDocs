{
  "packageName": "javax.management",
  "simpleName": "Query",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "GT",
      "comment": "A code representing the gt(javax.management.ValueExp, javax.management.ValueExp) query. This is chiefly of interest for the serialized form of queries.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.Query.GT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "LT",
      "comment": "A code representing the lt(javax.management.ValueExp, javax.management.ValueExp) query. This is chiefly of interest for the serialized form of queries.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.Query.LT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "GE",
      "comment": "A code representing the geq(javax.management.ValueExp, javax.management.ValueExp) query. This is chiefly of interest for the serialized form of queries.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.Query.GE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "LE",
      "comment": "A code representing the leq(javax.management.ValueExp, javax.management.ValueExp) query. This is chiefly of interest for the serialized form of queries.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.Query.LE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "EQ",
      "comment": "A code representing the eq(javax.management.ValueExp, javax.management.ValueExp) query. This is chiefly of interest for the serialized form of queries.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.Query.EQ\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PLUS",
      "comment": "A code representing the plus(javax.management.ValueExp, javax.management.ValueExp) expression. This is chiefly of interest for the serialized form of queries.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.Query.PLUS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "MINUS",
      "comment": "A code representing the minus(javax.management.ValueExp, javax.management.ValueExp) expression. This is chiefly of interest for the serialized form of queries.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.Query.MINUS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TIMES",
      "comment": "A code representing the times(javax.management.ValueExp, javax.management.ValueExp) expression. This is chiefly of interest for the serialized form of queries.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.Query.TIMES\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DIV",
      "comment": "A code representing the div(javax.management.ValueExp, javax.management.ValueExp) expression. This is chiefly of interest for the serialized form of queries.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.Query.DIV\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.QueryExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.QueryExp",
            "type": "Class"
          },
          "field": {
            "name": "q1"
          }
        },
        {
          "type": {
            "name": "javax.management.QueryExp",
            "type": "Class"
          },
          "field": {
            "name": "q2"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "and",
      "comment": "Returns a query expression that is the conjunction of two other query expressions.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eq1\u003c/code\u003e - A query expression.",
          "\u003ccode\u003eq2\u003c/code\u003e - Another query expression."
        ],
        "return": [
          "The conjunction of the two arguments. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.AndQueryExp\"\u003e javax.management.AndQueryExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.QueryExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.QueryExp",
            "type": "Class"
          },
          "field": {
            "name": "q1"
          }
        },
        {
          "type": {
            "name": "javax.management.QueryExp",
            "type": "Class"
          },
          "field": {
            "name": "q2"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "or",
      "comment": "Returns a query expression that is the disjunction of two other query expressions.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eq1\u003c/code\u003e - A query expression.",
          "\u003ccode\u003eq2\u003c/code\u003e - Another query expression."
        ],
        "return": [
          "The disjunction of the two arguments. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.OrQueryExp\"\u003e javax.management.OrQueryExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.QueryExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "v1"
          }
        },
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "v2"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "gt",
      "comment": "Returns a query expression that represents a \"greater than\" constraint on two values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ev1\u003c/code\u003e - A value expression.",
          "\u003ccode\u003ev2\u003c/code\u003e - Another value expression."
        ],
        "return": [
          "A \"greater than\" constraint on the arguments. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.BinaryRelQueryExp\"\u003e javax.management.BinaryRelQueryExp\u003c/a\u003e with a \n\u003ccode\u003erelOp\u003c/code\u003e equal to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Query.html#GT\"\u003e\u003ccode\u003eGT\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.QueryExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "v1"
          }
        },
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "v2"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "geq",
      "comment": "Returns a query expression that represents a \"greater than or equal to\" constraint on two values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ev1\u003c/code\u003e - A value expression.",
          "\u003ccode\u003ev2\u003c/code\u003e - Another value expression."
        ],
        "return": [
          "A \"greater than or equal to\" constraint on the arguments. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.BinaryRelQueryExp\"\u003e javax.management.BinaryRelQueryExp\u003c/a\u003e with a \n\u003ccode\u003erelOp\u003c/code\u003e equal to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Query.html#GE\"\u003e\u003ccode\u003eGE\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.QueryExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "v1"
          }
        },
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "v2"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "leq",
      "comment": "Returns a query expression that represents a \"less than or equal to\" constraint on two values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ev1\u003c/code\u003e - A value expression.",
          "\u003ccode\u003ev2\u003c/code\u003e - Another value expression."
        ],
        "return": [
          "A \"less than or equal to\" constraint on the arguments. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.BinaryRelQueryExp\"\u003e javax.management.BinaryRelQueryExp\u003c/a\u003e with a \n\u003ccode\u003erelOp\u003c/code\u003e equal to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Query.html#LE\"\u003e\u003ccode\u003eLE\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.QueryExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "v1"
          }
        },
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "v2"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "lt",
      "comment": "Returns a query expression that represents a \"less than\" constraint on two values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ev1\u003c/code\u003e - A value expression.",
          "\u003ccode\u003ev2\u003c/code\u003e - Another value expression."
        ],
        "return": [
          "A \"less than\" constraint on the arguments. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.BinaryRelQueryExp\"\u003e javax.management.BinaryRelQueryExp\u003c/a\u003e with a \n\u003ccode\u003erelOp\u003c/code\u003e equal to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Query.html#LT\"\u003e\u003ccode\u003eLT\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.QueryExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "v1"
          }
        },
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "v2"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "eq",
      "comment": "Returns a query expression that represents an equality constraint on two values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ev1\u003c/code\u003e - A value expression.",
          "\u003ccode\u003ev2\u003c/code\u003e - Another value expression."
        ],
        "return": [
          "A \"equal to\" constraint on the arguments. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.BinaryRelQueryExp\"\u003e javax.management.BinaryRelQueryExp\u003c/a\u003e with a \n\u003ccode\u003erelOp\u003c/code\u003e equal to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Query.html#EQ\"\u003e\u003ccode\u003eEQ\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.QueryExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "v1"
          }
        },
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "v2"
          }
        },
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "v3"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "between",
      "comment": "Returns a query expression that represents the constraint that one value is between two other values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ev1\u003c/code\u003e - A value expression that is \"between\" v2 and v3.",
          "\u003ccode\u003ev2\u003c/code\u003e - Value expression that represents a boundary of the constraint.",
          "\u003ccode\u003ev3\u003c/code\u003e - Value expression that represents a boundary of the constraint."
        ],
        "return": [
          "The constraint that v1 lies between v2 and v3. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.BetweenQueryExp\"\u003e javax.management.BetweenQueryExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.QueryExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.AttributeValueExp",
            "type": "Class"
          },
          "field": {
            "name": "a"
          }
        },
        {
          "type": {
            "name": "javax.management.StringValueExp",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "match",
      "comment": "Returns a query expression that represents a matching constraint on a string argument. The matching syntax is consistent with file globbing: supports \"?\", \"*\", \"[\", each of which may be escaped with \"\\\"; character classes may use \"!\" for negation and \"-\" for range. (* for any character sequence, ? for a single arbitrary character, [...] for a character sequence). For example: a*b?c would match a string starting with the character a, followed by any number of characters, followed by a b, any single character, and a c.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ea\u003c/code\u003e - An attribute expression",
          "\u003ccode\u003es\u003c/code\u003e - A string value expression representing a matching constraint"
        ],
        "return": [
          "A query expression that represents the matching constraint on the string argument. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.MatchQueryExp\"\u003e javax.management.MatchQueryExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.AttributeValueExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "attr",
      "comment": "Returns a new attribute expression. See AttributeValueExp for a detailed description of the semantics of the expression. Evaluating this expression for a given objectName includes performing MBeanServer.getAttribute(objectName, name).",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the attribute."
        ],
        "return": [
          "An attribute expression for the attribute named \n\u003ccode\u003ename\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.AttributeValueExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "className"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "attr",
      "comment": "Returns a new qualified attribute expression. Evaluating this expression for a given objectName includes performing MBeanServer.getObjectInstance(objectName) and MBeanServer.getAttribute(objectName, name).",
      "tagMap": {
        "param": [
          "\u003ccode\u003eclassName\u003c/code\u003e - The name of the class possessing the attribute.",
          "\u003ccode\u003ename\u003c/code\u003e - The name of the attribute."
        ],
        "return": [
          "An attribute expression for the attribute named name. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.QualifiedAttributeValueExp\"\u003e javax.management.QualifiedAttributeValueExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.AttributeValueExp",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "classattr",
      "comment": "Returns a new class attribute expression which can be used in any Query call that expects a ValueExp. Evaluating this expression for a given objectName includes performing MBeanServer.getObjectInstance(objectName).",
      "tagMap": {
        "return": [
          "A class attribute expression. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.ClassAttributeValueExp\"\u003e javax.management.ClassAttributeValueExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.QueryExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.QueryExp",
            "type": "Class"
          },
          "field": {
            "name": "queryExp"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "not",
      "comment": "Returns a constraint that is the negation of its argument.",
      "tagMap": {
        "param": [
          "\u003ccode\u003equeryExp\u003c/code\u003e - The constraint to negate."
        ],
        "return": [
          "A negated constraint. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.NotQueryExp\"\u003e javax.management.NotQueryExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.QueryExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        },
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "valueList"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "in",
      "comment": "Returns an expression constraining a value to be one of an explicit list.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eval\u003c/code\u003e - A value to be constrained.",
          "\u003ccode\u003evalueList\u003c/code\u003e - An array of ValueExps."
        ],
        "return": [
          "A QueryExp that represents the constraint. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.InQueryExp\"\u003e javax.management.InQueryExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.StringValueExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "value",
      "comment": "Returns a new string expression.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eval\u003c/code\u003e - The string value."
        ],
        "return": [
          "A ValueExp object containing the string argument."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.ValueExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Number",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "value",
      "comment": "Returns a numeric value expression that can be used in any Query call that expects a ValueExp.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eval\u003c/code\u003e - An instance of Number."
        ],
        "return": [
          "A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.NumericValueExp\"\u003e javax.management.NumericValueExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.ValueExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "value",
      "comment": "Returns a numeric value expression that can be used in any Query call that expects a ValueExp.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eval\u003c/code\u003e - An int value."
        ],
        "return": [
          "A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.NumericValueExp\"\u003e javax.management.NumericValueExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.ValueExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "value",
      "comment": "Returns a numeric value expression that can be used in any Query call that expects a ValueExp.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eval\u003c/code\u003e - A long value."
        ],
        "return": [
          "A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.NumericValueExp\"\u003e javax.management.NumericValueExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.ValueExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "value",
      "comment": "Returns a numeric value expression that can be used in any Query call that expects a ValueExp.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eval\u003c/code\u003e - A float value."
        ],
        "return": [
          "A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.NumericValueExp\"\u003e javax.management.NumericValueExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.ValueExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "value",
      "comment": "Returns a numeric value expression that can be used in any Query call that expects a ValueExp.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eval\u003c/code\u003e - A double value."
        ],
        "return": [
          "A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.NumericValueExp\"\u003e javax.management.NumericValueExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.ValueExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "value",
      "comment": "Returns a boolean value expression that can be used in any Query call that expects a ValueExp.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eval\u003c/code\u003e - A boolean value."
        ],
        "return": [
          "A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.BooleanValueExp\"\u003e javax.management.BooleanValueExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.ValueExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "value1"
          }
        },
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "value2"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "plus",
      "comment": "Returns a binary expression representing the sum of two numeric values, or the concatenation of two string values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue1\u003c/code\u003e - The first \u0027+\u0027 operand.",
          "\u003ccode\u003evalue2\u003c/code\u003e - The second \u0027+\u0027 operand."
        ],
        "return": [
          "A ValueExp representing the sum or concatenation of the two arguments. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.BinaryOpValueExp\"\u003e javax.management.BinaryOpValueExp\u003c/a\u003e with an \n\u003ccode\u003eop\u003c/code\u003e equal to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Query.html#PLUS\"\u003e\u003ccode\u003ePLUS\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.ValueExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "value1"
          }
        },
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "value2"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "times",
      "comment": "Returns a binary expression representing the product of two numeric values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue1\u003c/code\u003e - The first \u0027*\u0027 operand.",
          "\u003ccode\u003evalue2\u003c/code\u003e - The second \u0027*\u0027 operand."
        ],
        "return": [
          "A ValueExp representing the product. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.BinaryOpValueExp\"\u003e javax.management.BinaryOpValueExp\u003c/a\u003e with an \n\u003ccode\u003eop\u003c/code\u003e equal to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Query.html#TIMES\"\u003e\u003ccode\u003eTIMES\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.ValueExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "value1"
          }
        },
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "value2"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "minus",
      "comment": "Returns a binary expression representing the difference between two numeric values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue1\u003c/code\u003e - The first \u0027-\u0027 operand.",
          "\u003ccode\u003evalue2\u003c/code\u003e - The second \u0027-\u0027 operand."
        ],
        "return": [
          "A ValueExp representing the difference between two arguments. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.BinaryOpValueExp\"\u003e javax.management.BinaryOpValueExp\u003c/a\u003e with an \n\u003ccode\u003eop\u003c/code\u003e equal to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Query.html#MINUS\"\u003e\u003ccode\u003eMINUS\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.ValueExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "value1"
          }
        },
        {
          "type": {
            "name": "javax.management.ValueExp",
            "type": "Class"
          },
          "field": {
            "name": "value2"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "div",
      "comment": "Returns a binary expression representing the quotient of two numeric values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue1\u003c/code\u003e - The first \u0027/\u0027 operand.",
          "\u003ccode\u003evalue2\u003c/code\u003e - The second \u0027/\u0027 operand."
        ],
        "return": [
          "A ValueExp representing the quotient of two arguments. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.BinaryOpValueExp\"\u003e javax.management.BinaryOpValueExp\u003c/a\u003e with an \n\u003ccode\u003eop\u003c/code\u003e equal to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Query.html#DIV\"\u003e\u003ccode\u003eDIV\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.QueryExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.AttributeValueExp",
            "type": "Class"
          },
          "field": {
            "name": "a"
          }
        },
        {
          "type": {
            "name": "javax.management.StringValueExp",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "initialSubString",
      "comment": "Returns a query expression that represents a matching constraint on a string argument. The value must start with the given literal string value.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ea\u003c/code\u003e - An attribute expression.",
          "\u003ccode\u003es\u003c/code\u003e - A string value expression representing the beginning of the string value."
        ],
        "return": [
          "The constraint that a matches s. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.MatchQueryExp\"\u003e javax.management.MatchQueryExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.QueryExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.AttributeValueExp",
            "type": "Class"
          },
          "field": {
            "name": "a"
          }
        },
        {
          "type": {
            "name": "javax.management.StringValueExp",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "anySubString",
      "comment": "Returns a query expression that represents a matching constraint on a string argument. The value must contain the given literal string value.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ea\u003c/code\u003e - An attribute expression.",
          "\u003ccode\u003es\u003c/code\u003e - A string value expression representing the substring."
        ],
        "return": [
          "The constraint that a matches s. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.MatchQueryExp\"\u003e javax.management.MatchQueryExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.QueryExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.AttributeValueExp",
            "type": "Class"
          },
          "field": {
            "name": "a"
          }
        },
        {
          "type": {
            "name": "javax.management.StringValueExp",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "finalSubString",
      "comment": "Returns a query expression that represents a matching constraint on a string argument. The value must end with the given literal string value.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ea\u003c/code\u003e - An attribute expression.",
          "\u003ccode\u003es\u003c/code\u003e - A string value expression representing the end of the string value."
        ],
        "return": [
          "The constraint that a matches s. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.MatchQueryExp\"\u003e javax.management.MatchQueryExp\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.QueryExp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.StringValueExp",
            "type": "Class"
          },
          "field": {
            "name": "classNameValue"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isInstanceOf",
      "comment": "Returns a query expression that represents an inheritance constraint on an MBean class. Example: to find MBeans that are instances of NotificationBroadcaster, use Query.isInstanceOf(Query.value(NotificationBroadcaster.class.getName())). Evaluating this expression for a given objectName includes performing MBeanServer.isInstanceOf(objectName, ((StringValueExp)classNameValue.apply(objectName)).getValue().",
      "tagMap": {
        "param": [
          "\u003ccode\u003eclassNameValue\u003c/code\u003e - The \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/StringValueExp.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eStringValueExp\u003c/code\u003e\u003c/a\u003e returning the name of the class of which selected MBeans should be instances."
        ],
        "return": [
          "a query expression that represents an inheritance constraint on an MBean class. The returned object will be serialized as an instance of the non-public class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.InstanceOfQueryExp\"\u003e javax.management.InstanceOfQueryExp\u003c/a\u003e."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Basic constructor.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.Query",
  "comment": "\u003cp\u003eConstructs query object constraints.\u003c/p\u003e \n\u003cp\u003eThe MBean Server can be queried for MBeans that meet a particular condition, using its \u003ca href\u003d\"MBeanServer.html#queryNames(javax.management.ObjectName,javax.management.QueryExp)\"\u003e\u003ccode\u003equeryNames\u003c/code\u003e\u003c/a\u003e or \u003ca href\u003d\"MBeanServer.html#queryMBeans(javax.management.ObjectName,javax.management.QueryExp)\"\u003e\u003ccode\u003equeryMBeans\u003c/code\u003e\u003c/a\u003e method. The \u003ca href\u003d\"QueryExp.html\" title\u003d\"interface in javax.management\"\u003e\u003ccode\u003eQueryExp\u003c/code\u003e\u003c/a\u003e parameter to the method can be any implementation of the interface \u003ccode\u003eQueryExp\u003c/code\u003e, but it is usually best to obtain the \u003ccode\u003eQueryExp\u003c/code\u003e value by calling the static methods in this class. This is particularly true when querying a remote MBean Server: a custom implementation of the \u003ccode\u003eQueryExp\u003c/code\u003e interface might not be present in the remote MBean Server, but the methods in this class return only standard classes that are part of the JMX implementation.\u003c/p\u003e \n\u003cp\u003eAs an example, suppose you wanted to find all MBeans where the \u003ccode\u003e Enabled\u003c/code\u003e attribute is \u003ccode\u003etrue\u003c/code\u003e and the \u003ccode\u003eOwner\u003c/code\u003e attribute is \u003ccode\u003e \"Duke\"\u003c/code\u003e. Here is how you could construct the appropriate \u003ccode\u003eQueryExp\u003c/code\u003e by chaining together method calls:\u003c/p\u003e \n\u003cpre\u003e QueryExp query \u003d\n     Query.and(Query.eq(Query.attr(\"Enabled\"), Query.value(true)),\n               Query.eq(Query.attr(\"Owner\"), Query.value(\"Duke\")));\n \u003c/pre\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}