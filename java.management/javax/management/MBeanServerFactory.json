{
  "packageName": "javax.management",
  "simpleName": "MBeanServerFactory",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.MBeanServer",
            "type": "Class"
          },
          "field": {
            "name": "mbeanServer"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "releaseMBeanServer",
      "comment": "Remove internal MBeanServerFactory references to a created MBeanServer. This allows the garbage collector to remove the MBeanServer object.",
      "tagMap": {
        "param": [
          "\u003ccode\u003embeanServer\u003c/code\u003e - the MBeanServer object to remove."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003embeanServer\u003c/code\u003e was not generated by one of the \n\u003ccode\u003ecreateMBeanServer\u003c/code\u003e methods, or if \n\u003ccode\u003ereleaseMBeanServer\u003c/code\u003e was already called on it.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if there is a SecurityManager and the caller\u0027s permissions do not include or imply \n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerPermission.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanServerPermission\u003c/code\u003e\u003c/a\u003e(\"releaseMBeanServer\")\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.MBeanServer",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createMBeanServer",
      "comment": "Return a new object implementing the MBeanServer interface with a standard default domain name. The default domain name is used as the domain part in the ObjectName of MBeans when the domain is specified by the user is null. The standard default domain name is DefaultDomain. The MBeanServer reference is internally kept. This will allow findMBeanServer to return a reference to this MBeanServer object. This method is equivalent to createMBeanServer(null).",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if there is a SecurityManager and the caller\u0027s permissions do not include or imply \n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerPermission.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanServerPermission\u003c/code\u003e\u003c/a\u003e(\"createMBeanServer\")\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/JMRuntimeException.html\" title\u003d\"class in javax.management\"\u003eJMRuntimeException\u003c/a\u003e\u003c/code\u003e - if the property \n\u003ccode\u003ejavax.management.builder.initial\u003c/code\u003e exists but the class it names cannot be instantiated through a public no-argument constructor; or if the instantiated builder returns null from its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerBuilder.html#newMBeanServerDelegate()\"\u003e\u003ccode\u003enewMBeanServerDelegate\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerBuilder.html#newMBeanServer(java.lang.String,javax.management.MBeanServer,javax.management.MBeanServerDelegate)\"\u003e\u003ccode\u003enewMBeanServer\u003c/code\u003e\u003c/a\u003e methods.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the property \n\u003ccode\u003ejavax.management.builder.initial\u003c/code\u003e exists and can be instantiated but is not assignment compatible with \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerBuilder.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanServerBuilder\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "the newly created MBeanServer."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.MBeanServer",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "domain"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createMBeanServer",
      "comment": "Return a new object implementing the MBeanServer interface with the specified default domain name. The given domain name is used as the domain part in the ObjectName of MBeans when the domain is specified by the user is null. The MBeanServer reference is internally kept. This will allow findMBeanServer to return a reference to this MBeanServer object.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edomain\u003c/code\u003e - the default domain name for the created MBeanServer. This is the value that will be returned by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServer.html#getDefaultDomain()\"\u003e\u003ccode\u003eMBeanServer.getDefaultDomain()\u003c/code\u003e\u003c/a\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if there is a SecurityManager and the caller\u0027s permissions do not include or imply \n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerPermission.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanServerPermission\u003c/code\u003e\u003c/a\u003e(\"createMBeanServer\")\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/JMRuntimeException.html\" title\u003d\"class in javax.management\"\u003eJMRuntimeException\u003c/a\u003e\u003c/code\u003e - if the property \n\u003ccode\u003ejavax.management.builder.initial\u003c/code\u003e exists but the class it names cannot be instantiated through a public no-argument constructor; or if the instantiated builder returns null from its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerBuilder.html#newMBeanServerDelegate()\"\u003e\u003ccode\u003enewMBeanServerDelegate\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerBuilder.html#newMBeanServer(java.lang.String,javax.management.MBeanServer,javax.management.MBeanServerDelegate)\"\u003e\u003ccode\u003enewMBeanServer\u003c/code\u003e\u003c/a\u003e methods.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the property \n\u003ccode\u003ejavax.management.builder.initial\u003c/code\u003e exists and can be instantiated but is not assignment compatible with \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerBuilder.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanServerBuilder\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "the newly created MBeanServer."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.MBeanServer",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newMBeanServer",
      "comment": "Return a new object implementing the MBeanServer interface with a standard default domain name, without keeping an internal reference to this new object. The default domain name is used as the domain part in the ObjectName of MBeans when the domain is specified by the user is null. The standard default domain name is DefaultDomain. No reference is kept. findMBeanServer will not be able to return a reference to this MBeanServer object, but the garbage collector will be able to remove the MBeanServer object when it is no longer referenced. This method is equivalent to newMBeanServer(null).",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if there is a SecurityManager and the caller\u0027s permissions do not include or imply \n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerPermission.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanServerPermission\u003c/code\u003e\u003c/a\u003e(\"newMBeanServer\")\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/JMRuntimeException.html\" title\u003d\"class in javax.management\"\u003eJMRuntimeException\u003c/a\u003e\u003c/code\u003e - if the property \n\u003ccode\u003ejavax.management.builder.initial\u003c/code\u003e exists but the class it names cannot be instantiated through a public no-argument constructor; or if the instantiated builder returns null from its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerBuilder.html#newMBeanServerDelegate()\"\u003e\u003ccode\u003enewMBeanServerDelegate\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerBuilder.html#newMBeanServer(java.lang.String,javax.management.MBeanServer,javax.management.MBeanServerDelegate)\"\u003e\u003ccode\u003enewMBeanServer\u003c/code\u003e\u003c/a\u003e methods.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the property \n\u003ccode\u003ejavax.management.builder.initial\u003c/code\u003e exists and can be instantiated but is not assignment compatible with \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerBuilder.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanServerBuilder\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "the newly created MBeanServer."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.MBeanServer",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "domain"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newMBeanServer",
      "comment": "Return a new object implementing the MBeanServer interface with the specified default domain name, without keeping an internal reference to this new object. The given domain name is used as the domain part in the ObjectName of MBeans when the domain is specified by the user is null. No reference is kept. findMBeanServer will not be able to return a reference to this MBeanServer object, but the garbage collector will be able to remove the MBeanServer object when it is no longer referenced.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edomain\u003c/code\u003e - the default domain name for the created MBeanServer. This is the value that will be returned by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServer.html#getDefaultDomain()\"\u003e\u003ccode\u003eMBeanServer.getDefaultDomain()\u003c/code\u003e\u003c/a\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if there is a SecurityManager and the caller\u0027s permissions do not include or imply \n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerPermission.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanServerPermission\u003c/code\u003e\u003c/a\u003e(\"newMBeanServer\")\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/JMRuntimeException.html\" title\u003d\"class in javax.management\"\u003eJMRuntimeException\u003c/a\u003e\u003c/code\u003e - if the property \n\u003ccode\u003ejavax.management.builder.initial\u003c/code\u003e exists but the class it names cannot be instantiated through a public no-argument constructor; or if the instantiated builder returns null from its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerBuilder.html#newMBeanServerDelegate()\"\u003e\u003ccode\u003enewMBeanServerDelegate\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerBuilder.html#newMBeanServer(java.lang.String,javax.management.MBeanServer,javax.management.MBeanServerDelegate)\"\u003e\u003ccode\u003enewMBeanServer\u003c/code\u003e\u003c/a\u003e methods.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the property \n\u003ccode\u003ejavax.management.builder.initial\u003c/code\u003e exists and can be instantiated but is not assignment compatible with \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerBuilder.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanServerBuilder\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "the newly created MBeanServer."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.ArrayList",
        "parameters": [
          {
            "name": "javax.management.MBeanServer",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "agentId"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "findMBeanServer",
      "comment": "Return a list of registered MBeanServer objects. A registered MBeanServer object is one that was created by one of the createMBeanServer methods and not subsequently released with releaseMBeanServer.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eagentId\u003c/code\u003e - The agent identifier of the MBeanServer to retrieve. If this parameter is null, all registered MBeanServers in this JVM are returned. Otherwise, only MBeanServers whose id is equal to \n\u003ccode\u003eagentId\u003c/code\u003e are returned. The id of an MBeanServer is the \n\u003ccode\u003eMBeanServerId\u003c/code\u003e attribute of its delegate MBean."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if there is a SecurityManager and the caller\u0027s permissions do not include or imply \n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerPermission.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanServerPermission\u003c/code\u003e\u003c/a\u003e(\"findMBeanServer\")\u003c/code\u003e."
        ],
        "return": [
          "A list of MBeanServer objects."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.loading.ClassLoaderRepository",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.MBeanServer",
            "type": "Class"
          },
          "field": {
            "name": "server"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getClassLoaderRepository",
      "comment": "Return the ClassLoaderRepository used by the given MBeanServer. This method is equivalent to server.getClassLoaderRepository().",
      "tagMap": {
        "param": [
          "\u003ccode\u003eserver\u003c/code\u003e - The MBeanServer under examination. Since JMX 1.2, if \n\u003ccode\u003eserver\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, the result is a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eNullPointerException\u003c/code\u003e\u003c/a\u003e. This behavior differs from what was implemented in JMX 1.1 - where the possibility to use \n\u003ccode\u003enull\u003c/code\u003e was deprecated."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if there is a SecurityManager and the caller\u0027s permissions do not include or imply \n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanPermission.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanPermission\u003c/code\u003e\u003c/a\u003e(\"getClassLoaderRepository\")\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eserver\u003c/code\u003e is null."
        ],
        "return": [
          "The Class Loader Repository used by the given MBeanServer."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.MBeanServerFactory",
  "comment": "\u003cp\u003eProvides MBean server references. There are no instances of this class.\u003c/p\u003e \n\u003cp\u003eSince JMX 1.2 this class makes it possible to replace the default MBeanServer implementation. This is done using the \u003ca href\u003d\"MBeanServerBuilder.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanServerBuilder\u003c/code\u003e\u003c/a\u003e class. The class of the initial MBeanServerBuilder to be instantiated can be specified through the \u003cb\u003ejavax.management.builder.initial\u003c/b\u003e system property. The specified class must be a public subclass of \u003ca href\u003d\"MBeanServerBuilder.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanServerBuilder\u003c/code\u003e\u003c/a\u003e, and must have a public empty constructor. \u003c/p\u003e\n\u003cp\u003eBy default, if no value for that property is specified, an instance of \u003ca href\u003d\"MBeanServerBuilder.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003ejavax.management.MBeanServerBuilder\u003c/code\u003e\u003c/a\u003e is created. Otherwise, the MBeanServerFactory attempts to load the specified class using \u003ca href\u003d\"../../../java.base/java/lang/Thread.html#getContextClassLoader()\"\u003e\u003ccode\u003eThread.currentThread().getContextClassLoader()\u003c/code\u003e\u003c/a\u003e, or if that is null, \u003ca href\u003d\"../../../java.base/java/lang/Class.html#forName(java.lang.String)\"\u003e\u003ccode\u003eClass.forName()\u003c/code\u003e\u003c/a\u003e. Then it creates an initial instance of that Class using \u003ca href\u003d\"../../../java.base/java/lang/Class.html#newInstance()\"\u003e\u003ccode\u003eClass.newInstance()\u003c/code\u003e\u003c/a\u003e. If any checked exception is raised during this process (e.g. \u003ca href\u003d\"../../../java.base/java/lang/ClassNotFoundException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eClassNotFoundException\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../../../java.base/java/lang/InstantiationException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eInstantiationException\u003c/code\u003e\u003c/a\u003e) the MBeanServerFactory will propagate this exception from within a RuntimeException.\u003c/p\u003e \n\u003cp\u003eThe \u003cb\u003ejavax.management.builder.initial\u003c/b\u003e system property is consulted every time a new MBeanServer needs to be created, and the class pointed to by that property is loaded. If that class is different from that of the current MBeanServerBuilder, then a new MBeanServerBuilder is created. Otherwise, the MBeanServerFactory may create a new MBeanServerBuilder or reuse the current one.\u003c/p\u003e \n\u003cp\u003eIf the class pointed to by the property cannot be loaded, or does not correspond to a valid subclass of MBeanServerBuilder then an exception is propagated, and no MBeanServer can be created until the \u003cb\u003ejavax.management.builder.initial\u003c/b\u003e system property is reset to valid value.\u003c/p\u003e \n\u003cp\u003eThe MBeanServerBuilder makes it possible to wrap the MBeanServers returned by the default MBeanServerBuilder implementation, for the purpose of e.g. adding an additional security layer.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}