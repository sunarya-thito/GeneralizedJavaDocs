{
  "packageName": "javax.management",
  "simpleName": "MBeanServerNotification",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "javax.management.Notification",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "REGISTRATION_NOTIFICATION",
      "comment": "Notification type denoting that an MBean has been registered. Value is \"JMX.mbean.registered\".",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.MBeanServerNotification.REGISTRATION_NOTIFICATION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "UNREGISTRATION_NOTIFICATION",
      "comment": "Notification type denoting that an MBean has been unregistered. Value is \"JMX.mbean.unregistered\".",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.MBeanServerNotification.UNREGISTRATION_NOTIFICATION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.ObjectName",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMBeanName",
      "comment": "Returns the object name of the MBean that caused the notification.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the object name of the MBean that caused the notification."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "source",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "sequenceNumber",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.management.ObjectName",
            "type": "Class"
          },
          "name": "objectName",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an MBeanServerNotification object specifying object names of the MBeans that caused the notification and the specified notification type.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - A string denoting the type of the notification. Set it to one these values: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerNotification.html#REGISTRATION_NOTIFICATION\"\u003e\u003ccode\u003eREGISTRATION_NOTIFICATION\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServerNotification.html#UNREGISTRATION_NOTIFICATION\"\u003e\u003ccode\u003eUNREGISTRATION_NOTIFICATION\u003c/code\u003e\u003c/a\u003e.",
          "\u003ccode\u003esource\u003c/code\u003e - The MBeanServerNotification object responsible for forwarding MBean server notification.",
          "\u003ccode\u003esequenceNumber\u003c/code\u003e - A sequence number that can be used to order received notifications.",
          "\u003ccode\u003eobjectName\u003c/code\u003e - The object name of the MBean that caused the notification."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.MBeanServerNotification",
  "comment": "Represents a notification emitted by the MBean Server through the MBeanServerDelegate MBean. The MBean Server emits the following types of notifications: MBean registration, MBean unregistration. \n\u003cp\u003e To receive MBeanServerNotifications, you need to register a listener with the \u003ca href\u003d\"MBeanServerDelegate.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanServerDelegate\u003c/code\u003e\u003c/a\u003e MBean that represents the MBeanServer. The ObjectName of the MBeanServerDelegate is \u003ca href\u003d\"MBeanServerDelegate.html#DELEGATE_NAME\"\u003e\u003ccode\u003eMBeanServerDelegate.DELEGATE_NAME\u003c/code\u003e\u003c/a\u003e, which is \u003ccode\u003eJMImplementation:type\u003dMBeanServerDelegate\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003eThe following code prints a message every time an MBean is registered or unregistered in the MBean Server \u003ccode\u003embeanServer\u003c/code\u003e:\u003c/p\u003e \n\u003cpre\u003e private static final NotificationListener printListener \u003d new NotificationListener() {\n     public void handleNotification(Notification n, Object handback) {\n         if (!(n instanceof MBeanServerNotification)) {\n             System.out.println(\"Ignored notification of class \" + n.getClass().getName());\n             return;\n         }\n         MBeanServerNotification mbsn \u003d (MBeanServerNotification) n;\n         String what;\n         if (n.getType().equals(MBeanServerNotification.REGISTRATION_NOTIFICATION))\n             what \u003d \"MBean registered\";\n         else if (n.getType().equals(MBeanServerNotification.UNREGISTRATION_NOTIFICATION))\n             what \u003d \"MBean unregistered\";\n         else\n             what \u003d \"Unknown type \" + n.getType();\n         System.out.println(\"Received MBean Server notification: \" + what + \": \" +\n                 mbsn.getMBeanName());\n     }\n };\n\n ...\n     mbeanServer.addNotificationListener(\n             MBeanServerDelegate.DELEGATE_NAME, printListener, null, null);\n \u003c/pre\u003e \n\u003cp id\u003d\"group\"\u003e An MBean which is not an \u003ca href\u003d\"MBeanServerDelegate.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanServerDelegate\u003c/code\u003e\u003c/a\u003e may also emit MBeanServerNotifications. In particular, there is a convention for MBeans to emit an MBeanServerNotification for a group of MBeans.\u003c/p\u003e \n\u003cp\u003eAn MBeanServerNotification emitted to denote the registration or unregistration of a group of MBeans has the following characteristics: \u003c/p\u003e\n\u003cul\u003e\n \u003cli\u003eIts \u003ca href\u003d\"Notification.html#getType()\"\u003enotification type\u003c/a\u003e is \u003ccode\u003e\"JMX.mbean.registered.group\"\u003c/code\u003e or \u003ccode\u003e\"JMX.mbean.unregistered.group\"\u003c/code\u003e, which can also be written \u003ca href\u003d\"#REGISTRATION_NOTIFICATION\"\u003e\u003ccode\u003eREGISTRATION_NOTIFICATION\u003c/code\u003e\u003c/a\u003e\u003ccode\u003e+ \".group\"\u003c/code\u003e or \u003ca href\u003d\"#UNREGISTRATION_NOTIFICATION\"\u003e\u003ccode\u003eUNREGISTRATION_NOTIFICATION\u003c/code\u003e\u003c/a\u003e\u003ccode\u003e+ \".group\"\u003c/code\u003e. \u003c/li\u003e \n \u003cli\u003eIts \u003ca href\u003d\"#getMBeanName()\"\u003eMBean name\u003c/a\u003e is an ObjectName pattern that selects the set (or a superset) of the MBeans being registered or unregistered\u003c/li\u003e \n \u003cli\u003eIts \u003ca href\u003d\"Notification.html#getUserData()\"\u003euser data\u003c/a\u003e can optionally be set to an array of ObjectNames containing the names of all MBeans being registered or unregistered.\u003c/li\u003e \n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e MBeans which emit these group registration/unregistration notifications will declare them in their \u003ca href\u003d\"MBeanInfo.html#getNotifications()\"\u003e\u003ccode\u003eMBeanNotificationInfo\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.MBeanServerNotification\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}