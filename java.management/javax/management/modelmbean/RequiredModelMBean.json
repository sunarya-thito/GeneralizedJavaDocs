{
  "packageName": "javax.management.modelmbean",
  "simpleName": "RequiredModelMBean",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.modelmbean.ModelMBeanInfo",
            "type": "Class"
          },
          "field": {
            "name": "mbi"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setModelMBeanInfo",
      "comment": "Initializes a ModelMBean object using ModelMBeanInfo passed in. This method makes it possible to set a customized ModelMBeanInfo on the ModelMBean as long as it is not registered with the MBeanServer. Once the ModelMBean\u0027s ModelMBeanInfo (with Descriptors) are customized and set on the ModelMBean, the ModelMBean be registered with the MBeanServer. If the ModelMBean is currently registered, this method throws a RuntimeOperationsException wrapping an IllegalStateException If the given inModelMBeanInfo does not contain any ModelMBeanNotificationInfo for the GENERIC or ATTRIBUTE_CHANGE notifications, then the RequiredModelMBean will supply its own default ModelMBeanNotificationInfos for those missing notifications.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBean.html#setModelMBeanInfo(javax.management.modelmbean.ModelMBeanInfo)\"\u003esetModelMBeanInfo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBean.html\" title\u003d\"interface in javax.management.modelmbean\"\u003eModelMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003embi\u003c/code\u003e - The ModelMBeanInfo object to be used by the ModelMBean."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - \n\u003cul\u003e\n \u003cli\u003eWraps an \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/a\u003e if the MBeanInfo passed in parameter is null.\u003c/li\u003e \n \u003cli\u003eWraps an \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eIllegalStateException\u003c/code\u003e\u003c/a\u003e if the ModelMBean is currently registered in the MBeanServer.\u003c/li\u003e \n\u003c/ul\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        },
        {
          "name": "javax.management.InstanceNotFoundException",
          "type": "Class"
        },
        {
          "name": "javax.management.modelmbean.InvalidTargetObjectTypeException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "mr"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "mr_type"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setManagedResource",
      "comment": "Sets the instance handle of the object against which to execute all methods in this ModelMBean management interface (MBeanInfo and Descriptors).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBean.html#setManagedResource(java.lang.Object,java.lang.String)\"\u003esetManagedResource\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBean.html\" title\u003d\"interface in javax.management.modelmbean\"\u003eModelMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003emr\u003c/code\u003e - Object that is the managed resource",
          "\u003ccode\u003emr_type\u003c/code\u003e - The type of reference for the managed resource. \n\u003cbr\u003eCan be: \"ObjectReference\", \"Handle\", \"IOR\", \"EJBHandle\", or \"RMIReference\". \n\u003cbr\u003eIn this implementation only \"ObjectReference\" is supported."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - The initializer of the object has thrown an exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/InstanceNotFoundException.html\" title\u003d\"class in javax.management\"\u003eInstanceNotFoundException\u003c/a\u003e\u003c/code\u003e - The managed resource object could not be found",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/InvalidTargetObjectTypeException.html\" title\u003d\"class in javax.management.modelmbean\"\u003eInvalidTargetObjectTypeException\u003c/a\u003e\u003c/code\u003e - The managed resource type should be \"ObjectReference\".",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimeException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eRuntimeException\u003c/code\u003e\u003c/a\u003e when setting the resource."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        },
        {
          "name": "javax.management.InstanceNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "load",
      "comment": "Instantiates this MBean instance with the data found for the MBean in the persistent store. The data loaded could include attribute and operation values. This method should be called during construction or initialization of this instance, and before the MBean is registered with the MBeanServer. If the implementation of this class does not support persistence, an MBeanException wrapping a ServiceNotFoundException is thrown.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/PersistentMBean.html#load()\"\u003eload\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/PersistentMBean.html\" title\u003d\"interface in javax.management\"\u003ePersistentMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps another exception, or persistence is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps exceptions from the persistence mechanism",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/InstanceNotFoundException.html\" title\u003d\"class in javax.management\"\u003eInstanceNotFoundException\u003c/a\u003e\u003c/code\u003e - Could not find or load this MBean from persistent storage"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        },
        {
          "name": "javax.management.InstanceNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "store",
      "comment": "Captures the current state of this MBean instance and writes it out to the persistent store. The state stored could include attribute and operation values. If the implementation of this class does not support persistence, an MBeanException wrapping a ServiceNotFoundException is thrown. Persistence policy from the MBean and attribute descriptor is used to guide execution of this method. The MBean should be stored if \u0027persistPolicy\u0027 field is:  !\u003d \"never\"\n   \u003d \"always\"\n   \u003d \"onTimer\" and now \u003e \u0027lastPersistTime\u0027 + \u0027persistPeriod\u0027\n   \u003d \"NoMoreOftenThan\" and now \u003e \u0027lastPersistTime\u0027 + \u0027persistPeriod\u0027\n   \u003d \"onUnregister\"\n Do not store the MBean if \u0027persistPolicy\u0027 field is:     \u003d \"never\"\n    \u003d \"onUpdate\"\n    \u003d \"onTimer\" \u0026\u0026 now \u003c \u0027lastPersistTime\u0027 + \u0027persistPeriod\u0027",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/PersistentMBean.html#store()\"\u003estore\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/PersistentMBean.html\" title\u003d\"interface in javax.management\"\u003ePersistentMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps another exception, or persistence is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps exceptions from the persistence mechanism",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/InstanceNotFoundException.html\" title\u003d\"class in javax.management\"\u003eInstanceNotFoundException\u003c/a\u003e\u003c/code\u003e - Could not find/access the persistent store"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.MBeanInfo",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMBeanInfo",
      "comment": "Returns the attributes, operations, constructors and notifications that this RequiredModelMBean exposes for management.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/DynamicMBean.html#getMBeanInfo()\"\u003egetMBeanInfo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/DynamicMBean.html\" title\u003d\"interface in javax.management\"\u003eDynamicMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "An instance of ModelMBeanInfo allowing retrieval all attributes, operations, and Notifications of this MBean."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.ReflectionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "opName"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "opArgs"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "sig"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "invoke",
      "comment": "Invokes a method on or through a RequiredModelMBean and returns the result of the method execution. If the given method to be invoked, together with the provided signature, matches one of RequiredModelMbean accessible methods, this one will be call. Otherwise the call to the given method will be tried on the managed resource. The last value returned by an operation may be cached in the operation\u0027s descriptor which is in the ModelMBeanOperationInfo\u0027s descriptor. The valid value will be in the \u0027value\u0027 field if there is one. If the \u0027currencyTimeLimit\u0027 field in the descriptor is: \u003c0 Then the value is not cached and is never valid. The operation method is invoked. The \u0027value\u0027 and \u0027lastUpdatedTimeStamp\u0027 fields are cleared. \u003d0 Then the value is always cached and always valid. The \u0027value\u0027 field is returned. If there is no \u0027value\u0027 field then the operation method is invoked for the attribute. The \u0027lastUpdatedTimeStamp\u0027 field and `value\u0027 fields are set to the operation\u0027s return value and the current time stamp. \u003e0 Represents the number of seconds that the \u0027value\u0027 field is valid. The \u0027value\u0027 field is no longer valid when \u0027lastUpdatedTimeStamp\u0027 + \u0027currencyTimeLimit\u0027 \u003e Now. When \u0027value\u0027 is valid, \u0027value\u0027 is returned. When \u0027value\u0027 is no longer valid then the operation method is invoked. The \u0027lastUpdatedTimeStamp\u0027 field and `value\u0027 fields are updated. Note: because of inconsistencies in previous versions of this specification, it is recommended not to use negative or zero values for currencyTimeLimit. To indicate that a cached value is never valid, omit the currencyTimeLimit field. To indicate that it is always valid, use a very large number for this field.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/DynamicMBean.html#invoke(java.lang.String,java.lang.Object%5B%5D,java.lang.String%5B%5D)\"\u003einvoke\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/DynamicMBean.html\" title\u003d\"interface in javax.management\"\u003eDynamicMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eopName\u003c/code\u003e - The name of the method to be invoked. The name can be the fully qualified method name including the classname, or just the method name if the classname is defined in the \u0027class\u0027 field of the operation descriptor.",
          "\u003ccode\u003eopArgs\u003c/code\u003e - An array containing the parameters to be set when the operation is invoked",
          "\u003ccode\u003esig\u003c/code\u003e - An array containing the signature of the operation. The class objects will be loaded using the same class loader as the one used for loading the MBean on which the operation was invoked."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps one of the following Exceptions: \n\u003cul\u003e \n \u003cli\u003e An Exception thrown by the managed object\u0027s invoked method.\u003c/li\u003e \n \u003cli\u003e \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/ServiceNotFoundException.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eServiceNotFoundException\u003c/code\u003e\u003c/a\u003e: No ModelMBeanOperationInfo or no descriptor defined for the specified operation or the managed resource is null.\u003c/li\u003e \n \u003cli\u003e \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/InvalidTargetObjectTypeException.html\" title\u003d\"class in javax.management.modelmbean\"\u003e\u003ccode\u003eInvalidTargetObjectTypeException\u003c/code\u003e\u003c/a\u003e: The \u0027targetType\u0027 field value is not \u0027objectReference\u0027.\u003c/li\u003e \n\u003c/ul\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/ReflectionException.html\" title\u003d\"class in javax.management\"\u003eReflectionException\u003c/a\u003e\u003c/code\u003e - Wraps an \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Exception.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eException\u003c/code\u003e\u003c/a\u003e thrown while trying to invoke the method.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/a\u003e Method name is null."
        ],
        "return": [
          "The object returned by the method, which represents the result of invoking the method on the specified managed resource."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.AttributeNotFoundException",
          "type": "Class"
        },
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.ReflectionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttribute",
      "comment": "Returns the value of a specific attribute defined for this ModelMBean. The last value returned by an attribute may be cached in the attribute\u0027s descriptor. The valid value will be in the \u0027value\u0027 field if there is one. If the \u0027currencyTimeLimit\u0027 field in the descriptor is: \u003c0 Then the value is not cached and is never valid. The getter method is invoked for the attribute. The \u0027value\u0027 and \u0027lastUpdatedTimeStamp\u0027 fields are cleared. \u003d0 Then the value is always cached and always valid. The \u0027value\u0027 field is returned. If there is no\u0027value\u0027 field then the getter method is invoked for the attribute. The \u0027lastUpdatedTimeStamp\u0027 field and `value\u0027 fields are set to the attribute\u0027s value and the current time stamp. \u003e0 Represents the number of seconds that the \u0027value\u0027 field is valid. The \u0027value\u0027 field is no longer valid when \u0027lastUpdatedTimeStamp\u0027 + \u0027currencyTimeLimit\u0027 \u003e Now. When \u0027value\u0027 is valid, \u0027value\u0027 is returned. When \u0027value\u0027 is no longer valid then the getter method is invoked for the attribute. The \u0027lastUpdatedTimeStamp\u0027 field and `value\u0027 fields are updated. Note: because of inconsistencies in previous versions of this specification, it is recommended not to use negative or zero values for currencyTimeLimit. To indicate that a cached value is never valid, omit the currencyTimeLimit field. To indicate that it is always valid, use a very large number for this field. If the \u0027getMethod\u0027 field contains the name of a valid operation descriptor, then the method described by the operation descriptor is executed. The response from the method is returned as the value of the attribute. If the operation fails or the returned value is not compatible with the declared type of the attribute, an exception will be thrown. If no \u0027getMethod\u0027 field is defined then the default value of the attribute is returned. If the returned value is not compatible with the declared type of the attribute, an exception will be thrown. The declared type of the attribute is the String returned by MBeanAttributeInfo.getType(). A value is compatible with this type if one of the following is true: the value is null; the declared name is a primitive type name (such as \"int\") and the value is an instance of the corresponding wrapper type (such as java.lang.Integer); the name of the value\u0027s class is identical to the declared name; the declared name can be loaded by the value\u0027s class loader and produces a class to which the value can be assigned. In this implementation, in every case where the getMethod needs to be called, because the method is invoked through the standard \"invoke\" method and thus needs operationInfo, an operation must be specified for that getMethod so that the invocation works correctly.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/RequiredModelMBean.html#setAttribute(javax.management.Attribute)\"\u003e\u003ccode\u003esetAttribute(javax.management.Attribute)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/DynamicMBean.html#getAttribute(java.lang.String)\"\u003egetAttribute\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/DynamicMBean.html\" title\u003d\"interface in javax.management\"\u003eDynamicMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eattrName\u003c/code\u003e - A String specifying the name of the attribute to be retrieved. It must match the name of a ModelMBeanAttributeInfo."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/AttributeNotFoundException.html\" title\u003d\"class in javax.management\"\u003eAttributeNotFoundException\u003c/a\u003e\u003c/code\u003e - The specified attribute is not accessible in the MBean. The following cases may result in an AttributeNotFoundException: \n\u003cul\u003e \n \u003cli\u003e No ModelMBeanInfo was found for the Model MBean.\u003c/li\u003e \n \u003cli\u003e No ModelMBeanAttributeInfo was found for the specified attribute name.\u003c/li\u003e \n \u003cli\u003e The ModelMBeanAttributeInfo isReadable method returns \u0027false\u0027.\u003c/li\u003e \n\u003c/ul\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps one of the following Exceptions: \n\u003cul\u003e \n \u003cli\u003e \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/InvalidAttributeValueException.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eInvalidAttributeValueException\u003c/code\u003e\u003c/a\u003e: A wrong value type was received from the attribute\u0027s getter method or no \u0027getMethod\u0027 field defined in the descriptor for the attribute and no default value exists.\u003c/li\u003e \n \u003cli\u003e \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/ServiceNotFoundException.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eServiceNotFoundException\u003c/code\u003e\u003c/a\u003e: No ModelMBeanOperationInfo defined for the attribute\u0027s getter method or no descriptor associated with the ModelMBeanOperationInfo or the managed resource is null.\u003c/li\u003e \n \u003cli\u003e \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/InvalidTargetObjectTypeException.html\" title\u003d\"class in javax.management.modelmbean\"\u003e\u003ccode\u003eInvalidTargetObjectTypeException\u003c/code\u003e\u003c/a\u003e The \u0027targetType\u0027 field value is not \u0027objectReference\u0027.\u003c/li\u003e \n \u003cli\u003e An Exception thrown by the managed object\u0027s getter.\u003c/li\u003e \n\u003c/ul\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/ReflectionException.html\" title\u003d\"class in javax.management\"\u003eReflectionException\u003c/a\u003e\u003c/code\u003e - Wraps an \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Exception.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eException\u003c/code\u003e\u003c/a\u003e thrown while trying to invoke the getter.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/a\u003e: The attribute name in parameter is null."
        ],
        "return": [
          "The value of the retrieved attribute from the descriptor \u0027value\u0027 field or from the invocation of the operation in the \u0027getMethod\u0027 field of the descriptor."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.AttributeList",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "attrNames"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttributes",
      "comment": "Returns the values of several attributes in the ModelMBean. Executes a getAttribute for each attribute name in the attrNames array passed in.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/RequiredModelMBean.html#setAttributes(javax.management.AttributeList)\"\u003e\u003ccode\u003esetAttributes(javax.management.AttributeList)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/DynamicMBean.html#getAttributes(java.lang.String%5B%5D)\"\u003egetAttributes\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/DynamicMBean.html\" title\u003d\"interface in javax.management\"\u003eDynamicMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eattrNames\u003c/code\u003e - A String array of names of the attributes to be retrieved."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/a\u003e: The object name in parameter is null or attributes in parameter is null."
        ],
        "return": [
          "The array of the retrieved attributes."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.AttributeNotFoundException",
          "type": "Class"
        },
        {
          "name": "javax.management.InvalidAttributeValueException",
          "type": "Class"
        },
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.ReflectionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.Attribute",
            "type": "Class"
          },
          "field": {
            "name": "attribute"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setAttribute",
      "comment": "Sets the value of a specific attribute of a named ModelMBean. If the \u0027setMethod\u0027 field of the attribute\u0027s descriptor contains the name of a valid operation descriptor, then the method described by the operation descriptor is executed. In this implementation, the operation descriptor must be specified correctly and assigned to the modelMBeanInfo so that the \u0027setMethod\u0027 works correctly. The response from the method is set as the value of the attribute in the descriptor. If currencyTimeLimit is \u003e 0, then the new value for the attribute is cached in the attribute descriptor\u0027s \u0027value\u0027 field and the \u0027lastUpdatedTimeStamp\u0027 field is set to the current time stamp. If the persist field of the attribute\u0027s descriptor is not null then Persistence policy from the attribute descriptor is used to guide storing the attribute in a persistent store. Store the MBean if \u0027persistPolicy\u0027 field is: !\u003d \"never\" \u003d \"always\" \u003d \"onUpdate\" \u003d \"onTimer\" and now \u003e \u0027lastPersistTime\u0027 + \u0027persistPeriod\u0027 \u003d \"NoMoreOftenThan\" and now \u003e \u0027lastPersistTime\u0027 + \u0027persistPeriod\u0027 Do not store the MBean if \u0027persistPolicy\u0027 field is: \u003d \"never\" \u003d \u003d \"onTimer\" \u0026\u0026 now \u003c \u0027lastPersistTime\u0027 + \u0027persistPeriod\u0027 \u003d \"onUnregister\" \u003d \u003d \"NoMoreOftenThan\" and now \u003c \u0027lastPersistTime\u0027 + \u0027persistPeriod\u0027 The ModelMBeanInfo of the Model MBean is stored in a file.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/RequiredModelMBean.html#getAttribute(java.lang.String)\"\u003e\u003ccode\u003egetAttribute(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/DynamicMBean.html#setAttribute(javax.management.Attribute)\"\u003esetAttribute\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/DynamicMBean.html\" title\u003d\"interface in javax.management\"\u003eDynamicMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eattribute\u003c/code\u003e - The Attribute instance containing the name of the attribute to be set and the value it is to be set to."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/AttributeNotFoundException.html\" title\u003d\"class in javax.management\"\u003eAttributeNotFoundException\u003c/a\u003e\u003c/code\u003e - The specified attribute is not accessible in the MBean. \n\u003cbr\u003eThe following cases may result in an AttributeNotFoundException: \n\u003cul\u003e \n \u003cli\u003e No ModelMBeanAttributeInfo is found for the specified attribute.\u003c/li\u003e \n \u003cli\u003e The ModelMBeanAttributeInfo\u0027s isWritable method returns \u0027false\u0027.\u003c/li\u003e \n\u003c/ul\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/InvalidAttributeValueException.html\" title\u003d\"class in javax.management\"\u003eInvalidAttributeValueException\u003c/a\u003e\u003c/code\u003e - No descriptor is defined for the specified attribute.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps one of the following Exceptions: \n\u003cul\u003e \n \u003cli\u003e An Exception thrown by the managed object\u0027s setter.\u003c/li\u003e \n \u003cli\u003e A \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/ServiceNotFoundException.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eServiceNotFoundException\u003c/code\u003e\u003c/a\u003e if a setMethod field is defined in the descriptor for the attribute and the managed resource is null; or if no setMethod field is defined and caching is not enabled for the attribute. Note that if there is no getMethod field either, then caching is automatically enabled.\u003c/li\u003e \n \u003cli\u003e \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/InvalidTargetObjectTypeException.html\" title\u003d\"class in javax.management.modelmbean\"\u003e\u003ccode\u003eInvalidTargetObjectTypeException\u003c/code\u003e\u003c/a\u003e The \u0027targetType\u0027 field value is not \u0027objectReference\u0027.\u003c/li\u003e \n \u003cli\u003e An Exception thrown by the managed object\u0027s getter.\u003c/li\u003e \n\u003c/ul\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/ReflectionException.html\" title\u003d\"class in javax.management\"\u003eReflectionException\u003c/a\u003e\u003c/code\u003e - Wraps an \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Exception.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eException\u003c/code\u003e\u003c/a\u003e thrown while trying to invoke the setter.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/a\u003e: The attribute in parameter is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.AttributeList",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.AttributeList",
            "type": "Class"
          },
          "field": {
            "name": "attributes"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setAttributes",
      "comment": "Sets the values of an array of attributes of this ModelMBean. Executes the setAttribute() method for each attribute in the list.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/RequiredModelMBean.html#getAttributes(java.lang.String%5B%5D)\"\u003e\u003ccode\u003egetAttributes(java.lang.String[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/DynamicMBean.html#setAttributes(javax.management.AttributeList)\"\u003esetAttributes\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/DynamicMBean.html\" title\u003d\"interface in javax.management\"\u003eDynamicMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eattributes\u003c/code\u003e - A list of attributes: The identification of the attributes to be set and the values they are to be set to."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/a\u003e: The object name in parameter is null or attributes in parameter is null."
        ],
        "return": [
          "The array of attributes that were set, with their new values in Attribute instances."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.NotificationListener",
            "type": "Class"
          },
          "field": {
            "name": "listener"
          }
        },
        {
          "type": {
            "name": "javax.management.NotificationFilter",
            "type": "Class"
          },
          "field": {
            "name": "filter"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "handback"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addNotificationListener",
      "comment": "Registers an object which implements the NotificationListener interface as a listener. This object\u0027s \u0027handleNotification()\u0027 method will be invoked when any notification is issued through or by the ModelMBean. This does not include attributeChangeNotifications. They must be registered for independently.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/RequiredModelMBean.html#removeNotificationListener(javax.management.NotificationListener)\"\u003e\u003ccode\u003eremoveNotificationListener(javax.management.NotificationListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/NotificationBroadcaster.html#addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)\"\u003eaddNotificationListener\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/NotificationBroadcaster.html\" title\u003d\"interface in javax.management\"\u003eNotificationBroadcaster\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003elistener\u003c/code\u003e - The listener object which will handles notifications emitted by the registered MBean.",
          "\u003ccode\u003efilter\u003c/code\u003e - The filter object. If null, no filtering will be performed before handling notifications.",
          "\u003ccode\u003ehandback\u003c/code\u003e - The context to be sent to the listener with the notification when a notification is emitted."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - The listener cannot be null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.ListenerNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.NotificationListener",
            "type": "Class"
          },
          "field": {
            "name": "listener"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeNotificationListener",
      "comment": "Removes a listener for Notifications from the RequiredModelMBean.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/RequiredModelMBean.html#addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)\"\u003e\u003ccode\u003eaddNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/NotificationBroadcaster.html#removeNotificationListener(javax.management.NotificationListener)\"\u003eremoveNotificationListener\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/NotificationBroadcaster.html\" title\u003d\"interface in javax.management\"\u003eNotificationBroadcaster\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003elistener\u003c/code\u003e - The listener name which was handling notifications emitted by the registered MBean. This method will remove all information related to this listener."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/ListenerNotFoundException.html\" title\u003d\"class in javax.management\"\u003eListenerNotFoundException\u003c/a\u003e\u003c/code\u003e - The listener is not registered in the MBean or is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.ListenerNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.NotificationListener",
            "type": "Class"
          },
          "field": {
            "name": "listener"
          }
        },
        {
          "type": {
            "name": "javax.management.NotificationFilter",
            "type": "Class"
          },
          "field": {
            "name": "filter"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "handback"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeNotificationListener",
      "comment": "Description copied from interface: NotificationEmitter",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/NotificationEmitter.html#removeNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)\"\u003eremoveNotificationListener\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/NotificationEmitter.html\" title\u003d\"interface in javax.management\"\u003eNotificationEmitter\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003elistener\u003c/code\u003e - A listener that was previously added to this MBean.",
          "\u003ccode\u003efilter\u003c/code\u003e - The filter that was specified when the listener was added.",
          "\u003ccode\u003ehandback\u003c/code\u003e - The handback that was specified when the listener was added."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/ListenerNotFoundException.html\" title\u003d\"class in javax.management\"\u003eListenerNotFoundException\u003c/a\u003e\u003c/code\u003e - The listener is not registered with the MBean, or it is not registered with the given filter and handback."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.Notification",
            "type": "Class"
          },
          "field": {
            "name": "ntfyObj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "sendNotification",
      "comment": "Description copied from interface: ModelMBeanNotificationBroadcaster",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanNotificationBroadcaster.html#sendNotification(javax.management.Notification)\"\u003esendNotification\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanNotificationBroadcaster.html\" title\u003d\"interface in javax.management.modelmbean\"\u003eModelMBeanNotificationBroadcaster\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003entfyObj\u003c/code\u003e - The notification which is to be passed to the \u0027handleNotification\u0027 method of the listener object."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an IllegalArgumentException: The Notification object passed in parameter is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "ntfyText"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "sendNotification",
      "comment": "Description copied from interface: ModelMBeanNotificationBroadcaster",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanNotificationBroadcaster.html#sendNotification(java.lang.String)\"\u003esendNotification\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanNotificationBroadcaster.html\" title\u003d\"interface in javax.management.modelmbean\"\u003eModelMBeanNotificationBroadcaster\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003entfyText\u003c/code\u003e - The text which is to be passed in the Notification to the \u0027handleNotification\u0027 method of the listener object. the constructed Notification will be: type \"jmx.modelmbean.generic\" source this ModelMBean instance sequence 1"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an IllegalArgumentException: The Notification text string passed in parameter is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.MBeanNotificationInfo",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNotificationInfo",
      "comment": "Returns the array of Notifications always generated by the RequiredModelMBean. RequiredModelMBean may always send also two additional notifications: One with descriptor \"name\u003dGENERIC,descriptorType\u003dnotification,log\u003dT,severity\u003d6,displayName\u003djmx.modelmbean.generic\" Second is a standard attribute change notification with descriptor \"name\u003dATTRIBUTE_CHANGE,descriptorType\u003dnotification,log\u003dT,severity\u003d6,displayName\u003djmx.attribute.change\" Thus these two notifications are always added to those specified by the application.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/NotificationBroadcaster.html#getNotificationInfo()\"\u003egetNotificationInfo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/NotificationBroadcaster.html\" title\u003d\"interface in javax.management\"\u003eNotificationBroadcaster\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "MBeanNotificationInfo[]"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        },
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.NotificationListener",
            "type": "Class"
          },
          "field": {
            "name": "inlistener"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "inAttributeName"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "inhandback"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addAttributeChangeNotificationListener",
      "comment": "Description copied from interface: ModelMBeanNotificationBroadcaster",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanNotificationBroadcaster.html#removeAttributeChangeNotificationListener(javax.management.NotificationListener,java.lang.String)\"\u003e\u003ccode\u003eModelMBeanNotificationBroadcaster.removeAttributeChangeNotificationListener(javax.management.NotificationListener, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanNotificationBroadcaster.html#addAttributeChangeNotificationListener(javax.management.NotificationListener,java.lang.String,java.lang.Object)\"\u003eaddAttributeChangeNotificationListener\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanNotificationBroadcaster.html\" title\u003d\"interface in javax.management.modelmbean\"\u003eModelMBeanNotificationBroadcaster\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003einlistener\u003c/code\u003e - The listener object which will handles notifications emitted by the registered MBean.",
          "\u003ccode\u003einAttributeName\u003c/code\u003e - The name of the ModelMBean attribute for which to receive change notifications. If null, then all attribute changes will cause an attributeChangeNotification to be issued.",
          "\u003ccode\u003einhandback\u003c/code\u003e - The context to be sent to the listener with the notification when a notification is emitted."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an IllegalArgumentException The attribute name passed in parameter does not exist.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - The listener cannot be null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        },
        {
          "name": "javax.management.ListenerNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.NotificationListener",
            "type": "Class"
          },
          "field": {
            "name": "inlistener"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "inAttributeName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeAttributeChangeNotificationListener",
      "comment": "Description copied from interface: ModelMBeanNotificationBroadcaster",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanNotificationBroadcaster.html#addAttributeChangeNotificationListener(javax.management.NotificationListener,java.lang.String,java.lang.Object)\"\u003e\u003ccode\u003eModelMBeanNotificationBroadcaster.addAttributeChangeNotificationListener(javax.management.NotificationListener, java.lang.String, java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanNotificationBroadcaster.html#removeAttributeChangeNotificationListener(javax.management.NotificationListener,java.lang.String)\"\u003eremoveAttributeChangeNotificationListener\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanNotificationBroadcaster.html\" title\u003d\"interface in javax.management.modelmbean\"\u003eModelMBeanNotificationBroadcaster\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003einlistener\u003c/code\u003e - The listener name which was handling notifications emitted by the registered MBean. This method will remove all information related to this listener.",
          "\u003ccode\u003einAttributeName\u003c/code\u003e - The attribute for which the listener no longer wants to receive attributeChangeNotifications. If null the listener will be removed for all attributeChangeNotifications."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an IllegalArgumentException If the inAttributeName parameter does not correspond to an attribute name.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/ListenerNotFoundException.html\" title\u003d\"class in javax.management\"\u003eListenerNotFoundException\u003c/a\u003e\u003c/code\u003e - The listener is not registered in the MBean or is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.AttributeChangeNotification",
            "type": "Class"
          },
          "field": {
            "name": "ntfyObj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "sendAttributeChangeNotification",
      "comment": "Description copied from interface: ModelMBeanNotificationBroadcaster",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanNotificationBroadcaster.html#sendAttributeChangeNotification(javax.management.AttributeChangeNotification)\"\u003esendAttributeChangeNotification\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanNotificationBroadcaster.html\" title\u003d\"interface in javax.management.modelmbean\"\u003eModelMBeanNotificationBroadcaster\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003entfyObj\u003c/code\u003e - The notification which is to be passed to the \u0027handleNotification\u0027 method of the listener object."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an IllegalArgumentException: The AttributeChangeNotification object passed in parameter is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.Attribute",
            "type": "Class"
          },
          "field": {
            "name": "inOldVal"
          }
        },
        {
          "type": {
            "name": "javax.management.Attribute",
            "type": "Class"
          },
          "field": {
            "name": "inNewVal"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "sendAttributeChangeNotification",
      "comment": "Description copied from interface: ModelMBeanNotificationBroadcaster",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanNotificationBroadcaster.html#sendAttributeChangeNotification(javax.management.Attribute,javax.management.Attribute)\"\u003esendAttributeChangeNotification\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanNotificationBroadcaster.html\" title\u003d\"interface in javax.management.modelmbean\"\u003eModelMBeanNotificationBroadcaster\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003einOldVal\u003c/code\u003e - The original value for the Attribute",
          "\u003ccode\u003einNewVal\u003c/code\u003e - The current value for the Attribute \n\u003cpre\u003e The constructed attributeChangeNotification will be:\n   type        \"jmx.attribute.change\"\n   source      this ModelMBean instance\n   sequence    1\n   attributeName oldValue.getName()\n   attributeType oldValue\u0027s class\n   attributeOldValue oldValue.getValue()\n   attributeNewValue newValue.getValue()\n \u003c/pre\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an IllegalArgumentException: An Attribute object passed in parameter is null or the names of the two Attribute objects in parameter are not the same."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.loading.ClassLoaderRepository",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getClassLoaderRepository",
      "comment": "Return the Class Loader Repository used to perform class loading. Subclasses may wish to redefine this method in order to return the appropriate ClassLoaderRepository that should be used in this object.",
      "tagMap": {
        "return": [
          "the Class Loader Repository."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.ObjectName",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.Exception",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.MBeanServer",
            "type": "Class"
          },
          "field": {
            "name": "server"
          }
        },
        {
          "type": {
            "name": "javax.management.ObjectName",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "preRegister",
      "comment": "Allows the MBean to perform any operations it needs before being registered in the MBean server. If the name of the MBean is not specified, the MBean can provide a name for its registration. If any exception is raised, the MBean will not be registered in the MBean server. In order to ensure proper run-time semantics of RequireModelMBean, Any subclass of RequiredModelMBean overloading or overriding this method should call super.preRegister(server, name) in its own preRegister implementation.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanRegistration.html#preRegister(javax.management.MBeanServer,javax.management.ObjectName)\"\u003epreRegister\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanRegistration.html\" title\u003d\"interface in javax.management\"\u003eMBeanRegistration\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eserver\u003c/code\u003e - The MBean server in which the MBean will be registered.",
          "\u003ccode\u003ename\u003c/code\u003e - The object name of the MBean. This name is null if the name parameter to one of the \n\u003ccode\u003ecreateMBean\u003c/code\u003e or \n\u003ccode\u003eregisterMBean\u003c/code\u003e methods in the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanServer.html\" title\u003d\"interface in javax.management\"\u003e\u003ccode\u003eMBeanServer\u003c/code\u003e\u003c/a\u003e interface is null. In that case, this method must return a non-null ObjectName for the new MBean."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Exception.html\" title\u003d\"class in java.lang\"\u003eException\u003c/a\u003e\u003c/code\u003e - This exception will be caught by the MBean server and re-thrown as an \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanRegistrationException.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanRegistrationException\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "The name under which the MBean is to be registered. This value must not be null. If the \n\u003ccode\u003ename\u003c/code\u003e parameter is not null, it will usually but not necessarily be the returned value."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Boolean",
            "type": "Class"
          },
          "field": {
            "name": "registrationDone"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "postRegister",
      "comment": "Allows the MBean to perform any operations needed after having been registered in the MBean server or after the registration has failed. In order to ensure proper run-time semantics of RequireModelMBean, Any subclass of RequiredModelMBean overloading or overriding this method should call super.postRegister(registrationDone) in its own postRegister implementation.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanRegistration.html#postRegister(java.lang.Boolean)\"\u003epostRegister\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanRegistration.html\" title\u003d\"interface in javax.management\"\u003eMBeanRegistration\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eregistrationDone\u003c/code\u003e - Indicates whether or not the MBean has been successfully registered in the MBean server. The value false means that the registration phase has failed."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.Exception",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "preDeregister",
      "comment": "Allows the MBean to perform any operations it needs before being unregistered by the MBean server. In order to ensure proper run-time semantics of RequireModelMBean, Any subclass of RequiredModelMBean overloading or overriding this method should call super.preDeregister() in its own preDeregister implementation.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanRegistration.html#preDeregister()\"\u003epreDeregister\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanRegistration.html\" title\u003d\"interface in javax.management\"\u003eMBeanRegistration\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Exception.html\" title\u003d\"class in java.lang\"\u003eException\u003c/a\u003e\u003c/code\u003e - This exception will be caught by the MBean server and re-thrown as an \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanRegistrationException.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanRegistrationException\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "postDeregister",
      "comment": "Allows the MBean to perform any operations needed after having been unregistered in the MBean server. In order to ensure proper run-time semantics of RequireModelMBean, Any subclass of RequiredModelMBean overloading or overriding this method should call super.postDeregister() in its own postDeregister implementation.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanRegistration.html#postDeregister()\"\u003epostDeregister\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanRegistration.html\" title\u003d\"interface in javax.management\"\u003eMBeanRegistration\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an RequiredModelMBean with an empty ModelMBeanInfo. The RequiredModelMBean\u0027s MBeanInfo and Descriptors can be customized using the setModelMBeanInfo(javax.management.modelmbean.ModelMBeanInfo) method. After the RequiredModelMBean\u0027s MBeanInfo and Descriptors are customized, the RequiredModelMBean can be registered with the MBeanServer.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimeException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eRuntimeException\u003c/code\u003e\u003c/a\u003e during the construction of the object."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.modelmbean.ModelMBeanInfo",
            "type": "Class"
          },
          "field": {
            "name": "mbi"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a RequiredModelMBean object using ModelMBeanInfo passed in. As long as the RequiredModelMBean is not registered with the MBeanServer yet, the RequiredModelMBean\u0027s MBeanInfo and Descriptors can be customized using the setModelMBeanInfo(javax.management.modelmbean.ModelMBeanInfo) method. After the RequiredModelMBean\u0027s MBeanInfo and Descriptors are customized, the RequiredModelMBean can be registered with the MBeanServer.",
      "tagMap": {
        "param": [
          "\u003ccode\u003embi\u003c/code\u003e - The ModelMBeanInfo object to be used by the RequiredModelMBean. The given ModelMBeanInfo is cloned and modified as specified by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/RequiredModelMBean.html#setModelMBeanInfo(javax.management.modelmbean.ModelMBeanInfo)\"\u003e\u003ccode\u003esetModelMBeanInfo(javax.management.modelmbean.ModelMBeanInfo)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an {link java.lang.IllegalArgumentException}: The MBeanInfo passed in parameter is null."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.modelmbean.RequiredModelMBean",
  "comment": "This class is the implementation of a ModelMBean. An appropriate implementation of a ModelMBean must be shipped with every JMX Agent and the class must be named RequiredModelMBean. \n\u003cp\u003e Java resources wishing to be manageable instantiate the RequiredModelMBean using the MBeanServer\u0027s createMBean method. The resource then sets the MBeanInfo and Descriptors for the RequiredModelMBean instance. The attributes and operations exposed via the ModelMBeanInfo for the ModelMBean are accessible from MBeans, connectors/adaptors like other MBeans. Through the Descriptors, values and methods in the managed application can be defined and mapped to attributes and operations of the ModelMBean. This mapping can be defined in an XML formatted file or dynamically and programmatically at runtime. \u003c/p\u003e\n\u003cp\u003e Every RequiredModelMBean which is instantiated in the MBeanServer becomes manageable:\u003cbr\u003e its attributes and operations become remotely accessible through the connectors/adaptors connected to that MBeanServer. \u003c/p\u003e\n\u003cp\u003e A Java object cannot be registered in the MBeanServer unless it is a JMX compliant MBean. By instantiating a RequiredModelMBean, resources are guaranteed that the MBean is valid. MBeanException and RuntimeOperationsException must be thrown on every public method. This allows for wrapping exceptions from distributed communications (RMI, EJB, etc.)\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}