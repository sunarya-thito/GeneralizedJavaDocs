{
  "packageName": "javax.management.modelmbean",
  "simpleName": "DescriptorSupport",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getFieldValue",
      "comment": "Description copied from interface: Descriptor",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html#getFieldValue(java.lang.String)\"\u003egetFieldValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html\" title\u003d\"interface in javax.management\"\u003eDescriptor\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efieldName\u003c/code\u003e - the field name."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - if the field name is illegal."
        ],
        "return": [
          "the corresponding value, or null if the field is not present."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setField",
      "comment": "Description copied from interface: Descriptor",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html#setField(java.lang.String,java.lang.Object)\"\u003esetField\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html\" title\u003d\"interface in javax.management\"\u003eDescriptor\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efieldName\u003c/code\u003e - The field name to be set. Cannot be null or empty.",
          "\u003ccode\u003efieldValue\u003c/code\u003e - The field value to be set for the field name. Can be null if that is a valid value for the field."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - if the field name or field value is illegal (wrapped exception is \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/a\u003e); or if the descriptor is immutable (wrapped exception is \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eUnsupportedOperationException\u003c/code\u003e\u003c/a\u003e)."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getFields",
      "comment": "Description copied from interface: Descriptor",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html#setFields(java.lang.String%5B%5D,java.lang.Object%5B%5D)\"\u003e\u003ccode\u003eDescriptor.setFields(java.lang.String[], java.lang.Object[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html#getFields()\"\u003egetFields\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html\" title\u003d\"interface in javax.management\"\u003eDescriptor\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "String array of fields in the format \n\u003ci\u003efieldName\u003dfieldValue\u003c/i\u003e \n\u003cbr\u003eIf the value of a field is not a String, then the toString() method will be called on it and the returned value, enclosed in parentheses, used as the value for the field in the returned array. If the value of a field is null, then the value of the field in the returned array will be empty. If the descriptor is empty, you will get an empty array."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getFieldNames",
      "comment": "Description copied from interface: Descriptor",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html#getFieldNames()\"\u003egetFieldNames\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html\" title\u003d\"interface in javax.management\"\u003eDescriptor\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "String array of field names. If the descriptor is empty, you will get an empty array."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getFieldValues",
      "comment": "Description copied from interface: Descriptor",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html#getFieldValues(java.lang.String...)\"\u003egetFieldValues\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html\" title\u003d\"interface in javax.management\"\u003eDescriptor\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efieldNames\u003c/code\u003e - String array of the names of the fields that the values should be returned for. If the array is empty then an empty array will be returned. If the array is null then all values will be returned, as if the parameter were the array returned by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html#getFieldNames()\"\u003e\u003ccode\u003eDescriptor.getFieldNames()\u003c/code\u003e\u003c/a\u003e. If a field name in the array does not exist, including the case where it is null or the empty string, then null is returned for the matching array element being returned."
        ],
        "return": [
          "Object array of field values. If the list of \n\u003ccode\u003efieldNames\u003c/code\u003e is empty, you will get an empty array."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setFields",
      "comment": "Description copied from interface: Descriptor",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html#getFields()\"\u003e\u003ccode\u003eDescriptor.getFields()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html#setFields(java.lang.String%5B%5D,java.lang.Object%5B%5D)\"\u003esetFields\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html\" title\u003d\"interface in javax.management\"\u003eDescriptor\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efieldNames\u003c/code\u003e - String array of field names. The array and array elements cannot be null.",
          "\u003ccode\u003efieldValues\u003c/code\u003e - Object array of the corresponding field values. The array cannot be null. Elements of the array can be null."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - if the change fails for any reason. Wrapped exception is \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eIllegalArgumentException\u003c/code\u003e\u003c/a\u003e if \n\u003ccode\u003efieldNames\u003c/code\u003e or \n\u003ccode\u003efieldValues\u003c/code\u003e is null, or if the arrays are of different lengths, or if there is an illegal value in one of them. Wrapped exception is \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eUnsupportedOperationException\u003c/code\u003e\u003c/a\u003e if the descriptor is immutable, and the call would change its contents."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Returns a new Descriptor which is a duplicate of the Descriptor.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html\" title\u003d\"interface in javax.management\"\u003eDescriptor\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - for illegal value for field Names or field Values. If the descriptor construction fails for any reason, this exception will be thrown."
        ],
        "return": [
          "a clone of this instance."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeField",
      "comment": "Description copied from interface: Descriptor",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html#removeField(java.lang.String)\"\u003eremoveField\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html\" title\u003d\"interface in javax.management\"\u003eDescriptor\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efieldName\u003c/code\u003e - String name of the field to be removed. If the field name is illegal or the field is not found, no exception is thrown."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares this descriptor to the given object. The objects are equal if the given object is also a Descriptor, and if the two Descriptors have the same field names (possibly differing in case) and the same associated values. The respective values for a field in the two Descriptors are equal if the following conditions hold: If one value is null then the other must be too. If one value is a primitive array then the other must be a primitive array of the same type with the same elements. If one value is an object array then the other must be too and Arrays.deepEquals must return true. Otherwise Object.equals(Object) must return true.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html\" title\u003d\"interface in javax.management\"\u003eDescriptor\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eo\u003c/code\u003e - the object to compare with."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the objects are the same; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns the hash code value for this descriptor. The hash code is computed as the sum of the hash codes for each field in the descriptor. The hash code of a field with name n and value v is n.toLowerCase().hashCode() ^ h. Here h is the hash code of v, computed as follows: If v is null then h is 0. If v is a primitive array then h is computed using the appropriate overloading of java.util.Arrays.hashCode. If v is an object array then h is computed using Arrays.deepHashCode. Otherwise h is v.hashCode().",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html\" title\u003d\"interface in javax.management\"\u003eDescriptor\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "A hash code value for this object."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isValid",
      "comment": "Returns true if all of the fields have legal values given their names. This implementation does not support interoperating with a directory or lookup service. Thus, conforming to the specification, no checking is done on the \"export\" field. Otherwise this implementation returns false if: name and descriptorType fieldNames are not defined, or null, or empty, or not String class, role, getMethod, setMethod fieldNames, if defined, are null or not String persistPeriod, currencyTimeLimit, lastUpdatedTimeStamp, lastReturnedTimeStamp if defined, are null, or not a Numeric String or not a Numeric Value \u003e\u003d -1 log fieldName, if defined, is null, or not a Boolean or not a String with value \"t\", \"f\", \"true\", \"false\". These String values must not be case sensitive. visibility fieldName, if defined, is null, or not a Numeric String or a not Numeric Value \u003e\u003d 1 and \u003c\u003d 4 severity fieldName, if defined, is null, or not a Numeric String or not a Numeric Value \u003e\u003d 0 and \u003c\u003d 6 persistPolicy fieldName, if defined, is null, or not one of the following strings: \"OnUpdate\", \"OnTimer\", \"NoMoreOftenThan\", \"OnUnregister\", \"Always\", \"Never\". These String values must not be case sensitive.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html#isValid()\"\u003eisValid\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/Descriptor.html\" title\u003d\"interface in javax.management\"\u003eDescriptor\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - If the validity checking fails for any reason, this exception will be thrown."
        ],
        "return": [
          "true if the values are legal."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toXMLString",
      "comment": "Returns an XML String representing the descriptor. The format is not defined, but an implementation must ensure that the string returned by this method can be used to build an equivalent descriptor when instantiated using the constructor DescriptorSupport(String inStr). Fields which are not String objects will have toString() called on them to create the value. The value will be enclosed in parentheses. It is not guaranteed that you can reconstruct these objects unless they have been specifically set up to support toString() in a meaningful format and have a matching constructor that accepts a String in the same format. If the descriptor is empty the following String is returned: \u003cDescriptor\u003e\u003c/Descriptor\u003e",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - for illegal value for field Names or field Values. If the XML formatted string construction fails for any reason, this exception will be thrown."
        ],
        "return": [
          "the XML string."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a human readable string representing the descriptor. The string will be in the format of \"fieldName\u003dfieldValue,fieldName2\u003dfieldValue2,...\" If there are no fields in the descriptor, then an empty String is returned. If a fieldValue is an object then the toString() method is called on it and its returned value is used as the value for the field enclosed in parenthesis.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - for illegal value for field Names or field Values. If the descriptor string fails for any reason, this exception will be thrown."
        ],
        "return": [
          "a string representation of the object."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Descriptor default constructor. Default initial descriptor size is 20. It will grow as needed. Note that the created empty descriptor is not a valid descriptor (the method isValid returns false)",
      "annotations": [],
      "tagMap": {}
    },
    {
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "initNumFields",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Descriptor constructor. Takes as parameter the initial capacity of the Map that stores the descriptor fields. Capacity will grow as needed. Note that the created empty descriptor is not a valid descriptor (the method isValid returns false).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003einitNumFields\u003c/code\u003e - The initial capacity of the Map that stores the descriptor fields."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - for illegal value for initNumFields (\u0026lt;\u003d 0)",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.management.modelmbean.DescriptorSupport",
            "type": "Class"
          },
          "name": "inDescr",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Descriptor constructor taking a Descriptor as parameter. Creates a new descriptor initialized to the values of the descriptor passed in parameter.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003einDescr\u003c/code\u003e - the descriptor to be used to initialize the constructed descriptor. If it is null or contains no descriptor fields, an empty Descriptor will be created."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        },
        {
          "name": "javax.management.modelmbean.XMLParseException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "inStr",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Descriptor constructor taking an XML String. The format of the XML string is not defined, but an implementation must ensure that the string returned by toXMLString() on an existing descriptor can be used to instantiate an equivalent descriptor using this constructor. In this implementation, all field values will be created as Strings. If the field values are not Strings, the programmer will have to reset or convert these fields correctly.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003einStr\u003c/code\u003e - An XML-formatted string used to populate this Descriptor. The format is not defined, but any implementation must ensure that the string returned by method \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/DescriptorSupport.html#toXMLString()\"\u003e\u003ccode\u003etoXMLString\u003c/code\u003e\u003c/a\u003e on an existing descriptor can be used to instantiate an equivalent descriptor when instantiated using this constructor."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - If the String inStr passed in parameter is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/XMLParseException.html\" title\u003d\"class in javax.management.modelmbean\"\u003eXMLParseException\u003c/a\u003e\u003c/code\u003e - XML parsing problem while parsing the input String",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "fieldNames",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "fieldValues",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor taking field names and field values. Neither array can be null.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efieldNames\u003c/code\u003e - String array of field names. No elements of this array can be null.",
          "\u003ccode\u003efieldValues\u003c/code\u003e - Object array of the corresponding field values. Elements of the array can be null. The \n\u003ccode\u003efieldValue\u003c/code\u003e must be valid for the \n\u003ccode\u003efieldName\u003c/code\u003e (as defined in method \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/DescriptorSupport.html#isValid()\"\u003e\u003ccode\u003eisValid\u003c/code\u003e\u003c/a\u003e) \n\u003cp\u003eNote: array sizes of parameters should match. If both arrays are empty, then an empty descriptor is created.\u003c/p\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - for illegal value for field Names or field Values. The array lengths must be equal. If the descriptor construction fails for any reason, this exception will be thrown."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "fields",
          "varargs": true
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor taking fields in the fieldName\u003dfieldValue format.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efields\u003c/code\u003e - String array with each element containing a field name and value. If this array is null or empty, then the default constructor will be executed. Null strings or empty strings will be ignored. \n\u003cp\u003eAll field values should be Strings. If the field values are not Strings, the programmer will have to reset or convert these fields correctly. \u003c/p\u003e\n\u003cp\u003eNote: Each string should be of the form \u003ci\u003efieldName\u003dfieldValue\u003c/i\u003e. The field name ends at the first \u003ccode\u003e\u003d\u003c/code\u003e character; for example if the String is \u003ccode\u003ea\u003db\u003dc\u003c/code\u003e then the field name is \u003ccode\u003ea\u003c/code\u003e and its value is \u003ccode\u003eb\u003dc\u003c/code\u003e.\u003c/p\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - for illegal value for field Names or field Values. The field must contain an \"\u003d\". \"\u003dfieldValue\", \"fieldName\", and \"fieldValue\" are illegal. FieldName cannot be null. \"fieldName\u003d\" will cause the value to be null. If the descriptor construction fails for any reason, this exception will be thrown."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.modelmbean.DescriptorSupport",
  "comment": "This class represents the metadata set for a ModelMBean element. A descriptor is part of the ModelMBeanInfo, ModelMBeanNotificationInfo, ModelMBeanAttributeInfo, ModelMBeanConstructorInfo, and ModelMBeanParameterInfo. \n\u003cp\u003e A descriptor consists of a collection of fields. Each field is in fieldname\u003dfieldvalue format. Field names are not case sensitive, case will be preserved on field values. \u003c/p\u003e\n\u003cp\u003e All field names and values are not predefined. New fields can be defined and added by any program. Some fields have been predefined for consistency of implementation and support by the ModelMBeanInfo, ModelMBeanAttributeInfo, ModelMBeanConstructorInfo, ModelMBeanNotificationInfo, ModelMBeanOperationInfo and ModelMBean classes. \u003c/p\u003e\n\u003cp\u003eThe \u003cb\u003eserialVersionUID\u003c/b\u003e of this class is \u003ccode\u003e-6292969195866300415L\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.modelmbean.DescriptorSupport\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}