{
  "packageName": "javax.management.modelmbean",
  "simpleName": "ModelMBeanInfo",
  "moduleName": "java.management",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.management.Descriptor",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "inDescriptorType"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDescriptors",
      "comment": "Returns a Descriptor array consisting of all Descriptors for the ModelMBeanInfo of type inDescriptorType.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanInfo.html#setDescriptors(javax.management.Descriptor%5B%5D)\"\u003e\u003ccode\u003esetDescriptors(javax.management.Descriptor[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003einDescriptorType\u003c/code\u003e - value of descriptorType field that must be set for the descriptor to be returned. Must be \"mbean\", \"attribute\", \"operation\", \"constructor\" or \"notification\". If it is null or empty then all types will be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an IllegalArgumentException when the descriptorType in parameter is not one of: \"mbean\", \"attribute\", \"operation\", \"constructor\", \"notification\", empty or null."
        ],
        "return": [
          "Descriptor array containing all descriptors for the ModelMBean if type inDescriptorType."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.Descriptor",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "inDescriptors"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDescriptors",
      "comment": "Adds or replaces descriptors in the ModelMBeanInfo.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanInfo.html#getDescriptors(java.lang.String)\"\u003e\u003ccode\u003egetDescriptors(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003einDescriptors\u003c/code\u003e - The descriptors to be set in the ModelMBeanInfo. Null elements of the list will be ignored. All descriptors must have name and descriptorType fields."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an IllegalArgumentException for a null or invalid descriptor.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.Descriptor",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "inDescriptorName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "inDescriptorType"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDescriptor",
      "comment": "Returns a Descriptor requested by name and descriptorType.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanInfo.html#setDescriptor(javax.management.Descriptor,java.lang.String)\"\u003e\u003ccode\u003esetDescriptor(javax.management.Descriptor, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003einDescriptorName\u003c/code\u003e - The name of the descriptor.",
          "\u003ccode\u003einDescriptorType\u003c/code\u003e - The type of the descriptor being requested. If this is null or empty then all types are searched. Valid types are \u0027mbean\u0027, \u0027attribute\u0027, \u0027constructor\u0027 \u0027operation\u0027, and \u0027notification\u0027. This value will be equal to the \u0027descriptorType\u0027 field in the descriptor that is returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an IllegalArgumentException for a null descriptor name or null or invalid type. The type must be \"mbean\",\"attribute\", \"constructor\", \"operation\", or \"notification\"."
        ],
        "return": [
          "Descriptor containing the descriptor for the ModelMBean with the same name and descriptorType. If no descriptor is found, null is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.Descriptor",
            "type": "Class"
          },
          "field": {
            "name": "inDescriptor"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "inDescriptorType"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDescriptor",
      "comment": "Sets descriptors in the info array of type inDescriptorType for the ModelMBean. The setDescriptor method of the corresponding ModelMBean*Info will be called to set the specified descriptor.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanInfo.html#getDescriptor(java.lang.String,java.lang.String)\"\u003e\u003ccode\u003egetDescriptor(java.lang.String, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003einDescriptor\u003c/code\u003e - The descriptor to be set in the ModelMBean. It must NOT be null. All descriptors must have name and descriptorType fields.",
          "\u003ccode\u003einDescriptorType\u003c/code\u003e - The type of the descriptor being set. If this is null then the descriptorType field in the descriptor is used. If specified this value must be set in the descriptorType field in the descriptor. Must be \"mbean\",\"attribute\", \"constructor\", \"operation\", or \"notification\"."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an IllegalArgumentException for illegal or null arguments or if the name field of the descriptor is not found in the corresponding MBeanAttributeInfo or MBeanConstructorInfo or MBeanNotificationInfo or MBeanOperationInfo.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.Descriptor",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMBeanDescriptor",
      "comment": "Returns the ModelMBean\u0027s descriptor which contains MBean wide policies. This descriptor contains metadata about the MBean and default policies for persistence and caching. The fields in the descriptor are defined, but not limited to, the following. Note that when the Type in this table is Number, a String that is the decimal representation of a Long can also be used. ModelMBean Fields Name Type Meaning name String MBean name. descriptorType String Must be \"mbean\". displayName String Name of MBean to be used in displays. persistPolicy String One of: OnUpdate|OnTimer|NoMoreOftenThan|OnUnregister|Always|Never. See the section \"MBean Descriptor Fields\" in the JMX specification document. persistLocation String The fully qualified directory name where the MBean should be persisted (if appropriate). persistFile String File name into which the MBean should be persisted. persistPeriod Number Frequency of persist cycle in seconds, for OnTime and NoMoreOftenThan PersistPolicy currencyTimeLimit Number How long cached value is valid: \u003c0 never, \u003d0 always, \u003e0 seconds. log String t: log all notifications, f: log no notifications. logfile String Fully qualified filename to log events to. visibility Number 1-4 where 1: always visible 4: rarely visible. export String Name to be used to export/expose this MBean so that it is findable by other JMX Agents. presentationString String XML formatted string to allow presentation of data to be associated with the MBean. The default descriptor is: name\u003dclassName,descriptorType\u003d\"mbean\", displayName\u003dclassName, persistPolicy\u003d\"never\",log\u003d\"F\",visibility\u003d\"1\" If the descriptor does not contain all these fields, they will be added with these default values. Note: because of inconsistencies in previous versions of this specification, it is recommended not to use negative or zero values for currencyTimeLimit. To indicate that a cached value is never valid, omit the currencyTimeLimit field. To indicate that it is always valid, use a very large number for this field.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanInfo.html#setMBeanDescriptor(javax.management.Descriptor)\"\u003e\u003ccode\u003esetMBeanDescriptor(javax.management.Descriptor)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimeException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eRuntimeException\u003c/code\u003e\u003c/a\u003e occurred while getting the descriptor."
        ],
        "return": [
          "the MBean descriptor."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.Descriptor",
            "type": "Class"
          },
          "field": {
            "name": "inDescriptor"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setMBeanDescriptor",
      "comment": "Sets the ModelMBean\u0027s descriptor. This descriptor contains default, MBean wide metadata about the MBean and default policies for persistence and caching. This operation does a complete replacement of the descriptor, no merging is done. If the descriptor to set to is null then the default descriptor will be created. The default descriptor is: name\u003dclassName,descriptorType\u003d\"mbean\", displayName\u003dclassName, persistPolicy\u003d\"never\",log\u003d\"F\",visibility\u003d\"1\" If the descriptor does not contain all these fields, they will be added with these default values. See getMBeanDescriptor method javadoc for description of valid field names.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/modelmbean/ModelMBeanInfo.html#getMBeanDescriptor()\"\u003e\u003ccode\u003egetMBeanDescriptor()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003einDescriptor\u003c/code\u003e - the descriptor to set."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an IllegalArgumentException for invalid descriptor."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.modelmbean.ModelMBeanAttributeInfo",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "inName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAttribute",
      "comment": "Returns a ModelMBeanAttributeInfo requested by name.",
      "tagMap": {
        "param": [
          "\u003ccode\u003einName\u003c/code\u003e - The name of the ModelMBeanAttributeInfo to get. If no ModelMBeanAttributeInfo exists for this name null is returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an IllegalArgumentException for a null attribute name."
        ],
        "return": [
          "the attribute info for the named attribute, or null if there is none."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.modelmbean.ModelMBeanOperationInfo",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "inName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getOperation",
      "comment": "Returns a ModelMBeanOperationInfo requested by name.",
      "tagMap": {
        "param": [
          "\u003ccode\u003einName\u003c/code\u003e - The name of the ModelMBeanOperationInfo to get. If no ModelMBeanOperationInfo exists for this name null is returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an IllegalArgumentException for a null operation name."
        ],
        "return": [
          "the operation info for the named operation, or null if there is none."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.modelmbean.ModelMBeanNotificationInfo",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.MBeanException",
          "type": "Class"
        },
        {
          "name": "javax.management.RuntimeOperationsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "inName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNotification",
      "comment": "Returns a ModelMBeanNotificationInfo requested by name.",
      "tagMap": {
        "param": [
          "\u003ccode\u003einName\u003c/code\u003e - The name of the ModelMBeanNotificationInfo to get. If no ModelMBeanNotificationInfo exists for this name null is returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanException.html\" title\u003d\"class in javax.management\"\u003eMBeanException\u003c/a\u003e\u003c/code\u003e - Wraps a distributed communication Exception.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/RuntimeOperationsException.html\" title\u003d\"class in javax.management\"\u003eRuntimeOperationsException\u003c/a\u003e\u003c/code\u003e - Wraps an IllegalArgumentException for a null notification name."
        ],
        "return": [
          "the info for the named notification, or null if there is none."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clone",
      "comment": "Creates and returns a copy of this object.",
      "tagMap": {
        "return": [
          "a copy of this object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.MBeanAttributeInfo",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAttributes",
      "comment": "Returns the list of attributes exposed for management. Each attribute is described by an MBeanAttributeInfo object.",
      "tagMap": {
        "return": [
          "An array of \n\u003ccode\u003eMBeanAttributeInfo\u003c/code\u003e objects."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getClassName",
      "comment": "Returns the name of the Java class of the MBean described by this MBeanInfo.",
      "tagMap": {
        "return": [
          "the Java class name."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.MBeanConstructorInfo",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getConstructors",
      "comment": "Returns the list of the public constructors of the MBean. Each constructor is described by an MBeanConstructorInfo object.",
      "tagMap": {
        "return": [
          "An array of \n\u003ccode\u003eMBeanConstructorInfo\u003c/code\u003e objects."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDescription",
      "comment": "Returns a human readable description of the MBean.",
      "tagMap": {
        "return": [
          "the description."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.MBeanNotificationInfo",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNotifications",
      "comment": "Returns the list of the notifications emitted by the MBean. Each notification is described by an MBeanNotificationInfo object. In addition to any notification specified by the application, a ModelMBean may always send also two additional notifications: One with descriptor name \"GENERIC\" and displayName \"jmx.modelmbean.generic\" Second is a standard attribute change notification with descriptor name \"ATTRIBUTE_CHANGE\" and displayName \"jmx.attribute.change\" Thus any implementation of ModelMBeanInfo should always add those two notifications in addition to those specified by the application.",
      "tagMap": {
        "return": [
          "An array of \n\u003ccode\u003eMBeanNotificationInfo\u003c/code\u003e objects."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.MBeanOperationInfo",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getOperations",
      "comment": "Returns the list of operations of the MBean. Each operation is described by an MBeanOperationInfo object.",
      "tagMap": {
        "return": [
          "An array of \n\u003ccode\u003eMBeanOperationInfo\u003c/code\u003e objects."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.management.modelmbean.ModelMBeanInfo",
  "comment": "This interface is implemented by the ModelMBeanInfo for every ModelMBean. An implementation of this interface must be shipped with every JMX Agent. \n\u003cp\u003e Java resources wishing to be manageable instantiate the ModelMBean using the MBeanServer\u0027s createMBean method. The resource then sets the ModelMBeanInfo and Descriptors for the ModelMBean instance. The attributes, operations, and notifications exposed via the ModelMBeanInfo for the ModelMBean comprise the management interface and are accessible from MBeans, connectors/adaptors like other MBeans. Through the Descriptors, values and methods in the managed application can be defined and mapped to attributes and operations of the ModelMBean. This mapping can be defined during development in a file or dynamically and programmatically at runtime. \u003c/p\u003e\n\u003cp\u003e Every ModelMBean which is instantiated in the MBeanServer becomes manageable: its attributes, operations, and notifications become remotely accessible through the connectors/adaptors connected to that MBeanServer. A Java object cannot be registered in the MBeanServer unless it is a JMX compliant MBean. By instantiating a ModelMBean, resources are guaranteed that the MBean is valid. MBeanException and RuntimeOperationsException must be thrown on every public method. This allows for wrapping exceptions from distributed communications (RMI, EJB, etc.)\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}