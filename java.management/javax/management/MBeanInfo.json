{
  "packageName": "javax.management",
  "simpleName": "MBeanInfo",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Returns a shallow clone of this instance. The clone is obtained by simply calling super.clone(), thus calling the default native shallow cloning mechanism implemented by Object.clone(). No deeper cloning of any internal field is made. Since this class is immutable, the clone method is chiefly of interest to subclasses.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a clone of this instance."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getClassName",
      "comment": "Returns the name of the Java class of the MBean described by this MBeanInfo.",
      "tagMap": {
        "return": [
          "the class name."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDescription",
      "comment": "Returns a human readable description of the MBean.",
      "tagMap": {
        "return": [
          "the description."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.MBeanAttributeInfo",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttributes",
      "comment": "Returns the list of attributes exposed for management. Each attribute is described by an MBeanAttributeInfo object. The returned array is a shallow copy of the internal array, which means that it is a copy of the internal array of references to the MBeanAttributeInfo objects but that each referenced MBeanAttributeInfo object is not copied.",
      "tagMap": {
        "return": [
          "An array of \n\u003ccode\u003eMBeanAttributeInfo\u003c/code\u003e objects."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.MBeanOperationInfo",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOperations",
      "comment": "Returns the list of operations of the MBean. Each operation is described by an MBeanOperationInfo object. The returned array is a shallow copy of the internal array, which means that it is a copy of the internal array of references to the MBeanOperationInfo objects but that each referenced MBeanOperationInfo object is not copied.",
      "tagMap": {
        "return": [
          "An array of \n\u003ccode\u003eMBeanOperationInfo\u003c/code\u003e objects."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.MBeanConstructorInfo",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getConstructors",
      "comment": "Returns the list of the public constructors of the MBean. Each constructor is described by an MBeanConstructorInfo object. The returned array is a shallow copy of the internal array, which means that it is a copy of the internal array of references to the MBeanConstructorInfo objects but that each referenced MBeanConstructorInfo object is not copied. The returned list is not necessarily exhaustive. That is, the MBean may have a public constructor that is not in the list. In this case, the MBean server can construct another instance of this MBean\u0027s class using that constructor, even though it is not listed here.",
      "tagMap": {
        "return": [
          "An array of \n\u003ccode\u003eMBeanConstructorInfo\u003c/code\u003e objects."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.MBeanNotificationInfo",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNotifications",
      "comment": "Returns the list of the notifications emitted by the MBean. Each notification is described by an MBeanNotificationInfo object. The returned array is a shallow copy of the internal array, which means that it is a copy of the internal array of references to the MBeanNotificationInfo objects but that each referenced MBeanNotificationInfo object is not copied.",
      "tagMap": {
        "return": [
          "An array of \n\u003ccode\u003eMBeanNotificationInfo\u003c/code\u003e objects."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.Descriptor",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDescriptor",
      "comment": "Get the descriptor of this MBeanInfo. Changing the returned value will have no affect on the original descriptor.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/DescriptorRead.html#getDescriptor()\"\u003egetDescriptor\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/DescriptorRead.html\" title\u003d\"interface in javax.management\"\u003eDescriptorRead\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a descriptor that is either immutable or a copy of the original."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "o"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compare this MBeanInfo to another. Two MBeanInfo objects are equal if and only if they return equal values for getClassName(), for getDescription(), and for getDescriptor(), and the arrays returned by the two objects for getAttributes(), getOperations(), getConstructors(), and getNotifications() are pairwise equal. Here \"equal\" means Object.equals(Object), not identity. If two MBeanInfo objects return the same values in one of their arrays but in a different order then they are not equal.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eo\u003c/code\u003e - the object to compare to."
        ],
        "return": [
          "true if and only if \n\u003ccode\u003eo\u003c/code\u003e is an MBeanInfo that is equal to this one according to the rules above."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "className"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        },
        {
          "type": {
            "name": "javax.management.MBeanAttributeInfo",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "attributes"
          }
        },
        {
          "type": {
            "name": "javax.management.MBeanConstructorInfo",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "constructors"
          }
        },
        {
          "type": {
            "name": "javax.management.MBeanOperationInfo",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "operations"
          }
        },
        {
          "type": {
            "name": "javax.management.MBeanNotificationInfo",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "notifications"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an MBeanInfo.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eclassName\u003c/code\u003e - The name of the Java class of the MBean described by this \n\u003ccode\u003eMBeanInfo\u003c/code\u003e. This value may be any syntactically legal Java class name. It does not have to be a Java class known to the MBean server or to the MBean\u0027s ClassLoader. If it is a Java class known to the MBean\u0027s ClassLoader, it is recommended but not required that the class\u0027s public methods include those that would appear in a Standard MBean implementing the attributes and operations in this MBeanInfo.",
          "\u003ccode\u003edescription\u003c/code\u003e - A human readable description of the MBean (optional).",
          "\u003ccode\u003eattributes\u003c/code\u003e - The list of exposed attributes of the MBean. This may be null with the same effect as a zero-length array.",
          "\u003ccode\u003econstructors\u003c/code\u003e - The list of public constructors of the MBean. This may be null with the same effect as a zero-length array.",
          "\u003ccode\u003eoperations\u003c/code\u003e - The list of operations of the MBean. This may be null with the same effect as a zero-length array.",
          "\u003ccode\u003enotifications\u003c/code\u003e - The list of notifications emitted. This may be null with the same effect as a zero-length array."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "className"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        },
        {
          "type": {
            "name": "javax.management.MBeanAttributeInfo",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "attributes"
          }
        },
        {
          "type": {
            "name": "javax.management.MBeanConstructorInfo",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "constructors"
          }
        },
        {
          "type": {
            "name": "javax.management.MBeanOperationInfo",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "operations"
          }
        },
        {
          "type": {
            "name": "javax.management.MBeanNotificationInfo",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "notifications"
          }
        },
        {
          "type": {
            "name": "javax.management.Descriptor",
            "type": "Class"
          },
          "field": {
            "name": "descriptor"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an MBeanInfo.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eclassName\u003c/code\u003e - The name of the Java class of the MBean described by this \n\u003ccode\u003eMBeanInfo\u003c/code\u003e. This value may be any syntactically legal Java class name. It does not have to be a Java class known to the MBean server or to the MBean\u0027s ClassLoader. If it is a Java class known to the MBean\u0027s ClassLoader, it is recommended but not required that the class\u0027s public methods include those that would appear in a Standard MBean implementing the attributes and operations in this MBeanInfo.",
          "\u003ccode\u003edescription\u003c/code\u003e - A human readable description of the MBean (optional).",
          "\u003ccode\u003eattributes\u003c/code\u003e - The list of exposed attributes of the MBean. This may be null with the same effect as a zero-length array.",
          "\u003ccode\u003econstructors\u003c/code\u003e - The list of public constructors of the MBean. This may be null with the same effect as a zero-length array.",
          "\u003ccode\u003eoperations\u003c/code\u003e - The list of operations of the MBean. This may be null with the same effect as a zero-length array.",
          "\u003ccode\u003enotifications\u003c/code\u003e - The list of notifications emitted. This may be null with the same effect as a zero-length array.",
          "\u003ccode\u003edescriptor\u003c/code\u003e - The descriptor for the MBean. This may be null which is equivalent to an empty descriptor."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.MBeanInfo",
  "comment": "\u003cp\u003eDescribes the management interface exposed by an MBean; that is, the set of attributes and operations which are available for management operations. Instances of this class are immutable. Subclasses may be mutable but this is not recommended.\u003c/p\u003e \n\u003cp id\u003d\"info-changed\"\u003eUsually the \u003ccode\u003eMBeanInfo\u003c/code\u003e for any given MBean does not change over the lifetime of that MBean. Dynamic MBeans can change their \u003ccode\u003eMBeanInfo\u003c/code\u003e and in that case it is recommended that they emit a \u003ca href\u003d\"Notification.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eNotification\u003c/code\u003e\u003c/a\u003e with a \u003ca href\u003d\"Notification.html#getType()\"\u003etype\u003c/a\u003e of \u003ccode\u003e \"jmx.mbean.info.changed\"\u003c/code\u003e and a \u003ca href\u003d\"Notification.html#getUserData()\"\u003euserData\u003c/a\u003e that is the new \u003ccode\u003eMBeanInfo\u003c/code\u003e. This is not required, but provides a conventional way for clients of the MBean to discover the change. See also the \u003ca href\u003d\"Descriptor.html#immutableInfo\"\u003eimmutableInfo\u003c/a\u003e and \u003ca href\u003d\"Descriptor.html#infoTimeout\"\u003einfoTimeout\u003c/a\u003e fields in the \u003ccode\u003e MBeanInfo\u003c/code\u003e \u003ca href\u003d\"Descriptor.html\" title\u003d\"interface in javax.management\"\u003e\u003ccode\u003eDescriptor\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e \n\u003cp\u003eThe contents of the \u003ccode\u003eMBeanInfo\u003c/code\u003e for a Dynamic MBean are determined by its \u003ca href\u003d\"DynamicMBean.html#getMBeanInfo()\"\u003e\u003ccode\u003egetMBeanInfo()\u003c/code\u003e\u003c/a\u003e method. This includes Open MBeans and Model MBeans, which are kinds of Dynamic MBeans.\u003c/p\u003e \n\u003cp\u003eThe contents of the \u003ccode\u003eMBeanInfo\u003c/code\u003e for a Standard MBean are determined by the MBean server as follows:\u003c/p\u003e \n\u003cul\u003e \n \u003cli\u003e\u003ca href\u003d\"#getClassName()\"\u003e\u003ccode\u003egetClassName()\u003c/code\u003e\u003c/a\u003e returns the Java class name of the MBean object; \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#getConstructors()\"\u003e\u003ccode\u003egetConstructors()\u003c/code\u003e\u003c/a\u003e returns the list of all public constructors in that object; \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#getAttributes()\"\u003e\u003ccode\u003egetAttributes()\u003c/code\u003e\u003c/a\u003e returns the list of all attributes whose existence is deduced from the presence in the MBean interface of a \u003ccode\u003eget\u003ci\u003eName\u003c/i\u003e\u003c/code\u003e, \u003ccode\u003eis\u003ci\u003eName\u003c/i\u003e\u003c/code\u003e, or \u003ccode\u003eset\u003ci\u003eName\u003c/i\u003e\u003c/code\u003e method that conforms to the conventions for Standard MBeans; \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#getOperations()\"\u003e\u003ccode\u003egetOperations()\u003c/code\u003e\u003c/a\u003e returns the list of all methods in the MBean interface that do not represent attributes; \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#getNotifications()\"\u003e\u003ccode\u003egetNotifications()\u003c/code\u003e\u003c/a\u003e returns an empty array if the MBean does not implement the \u003ca href\u003d\"NotificationBroadcaster.html\" title\u003d\"interface in javax.management\"\u003e\u003ccode\u003eNotificationBroadcaster\u003c/code\u003e\u003c/a\u003e interface, otherwise the result of calling \u003ca href\u003d\"NotificationBroadcaster.html#getNotificationInfo()\"\u003e\u003ccode\u003eNotificationBroadcaster.getNotificationInfo()\u003c/code\u003e\u003c/a\u003e on it; \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#getDescriptor()\"\u003e\u003ccode\u003egetDescriptor()\u003c/code\u003e\u003c/a\u003e returns a descriptor containing the contents of any descriptor annotations in the MBean interface (see \u003ca href\u003d\"DescriptorKey.html\" title\u003d\"annotation in javax.management\"\u003e\u003ccode\u003e@DescriptorKey\u003c/code\u003e\u003c/a\u003e). \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003eThe description returned by \u003ca href\u003d\"#getDescription()\"\u003e\u003ccode\u003egetDescription()\u003c/code\u003e\u003c/a\u003e and the descriptions of the contained attributes and operations are not specified.\u003c/p\u003e \n\u003cp\u003eThe remaining details of the \u003ccode\u003eMBeanInfo\u003c/code\u003e for a Standard MBean are not specified. This includes the description of any contained constructors, and notifications; the names of parameters to constructors and operations; and the descriptions of constructor parameters.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.MBeanInfo\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}