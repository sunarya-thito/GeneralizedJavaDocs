{
  "packageName": "javax.management.loading",
  "simpleName": "DefaultLoaderRepository",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.ClassNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "className",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "loadClass",
      "comment": "Go through the list of class loaders and try to load the requested class. The method will stop as soon as the class is found. If the class is not found the method will throw a ClassNotFoundException exception.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eclassName\u003c/code\u003e - The name of the class to be loaded."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassNotFoundException.html\" title\u003d\"class in java.lang\"\u003eClassNotFoundException\u003c/a\u003e\u003c/code\u003e - The specified class could not be found."
        ],
        "return": [
          "the loaded class."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.ClassNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.ClassLoader",
            "type": "Class"
          },
          "name": "loader",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "className",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "loadClassWithout",
      "comment": "Go through the list of class loaders but exclude the given class loader, then try to load the requested class. The method will stop as soon as the class is found. If the class is not found the method will throw a ClassNotFoundException exception.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eclassName\u003c/code\u003e - The name of the class to be loaded.",
          "\u003ccode\u003eloader\u003c/code\u003e - The class loader to be excluded."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassNotFoundException.html\" title\u003d\"class in java.lang\"\u003eClassNotFoundException\u003c/a\u003e\u003c/code\u003e - The specified class could not be found."
        ],
        "return": [
          "the loaded class."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a DefaultLoaderRepository.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.loading.DefaultLoaderRepository",
  "annotations": [
    {
      "type": {
        "name": "Deprecated",
        "type": "Class"
      }
    }
  ],
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}