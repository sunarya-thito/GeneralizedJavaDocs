{
  "packageName": "javax.management.loading",
  "simpleName": "DefaultLoaderRepository",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.ClassNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "className",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "loadClass",
      "comment": "Go through the list of class loaders and try to load the requested class. The method will stop as soon as the class is found. If the class is not found the method will throw a ClassNotFoundException exception.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eclassName\u003c/code\u003e - The name of the class to be loaded."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassNotFoundException.html\" title\u003d\"class in java.lang\"\u003eClassNotFoundException\u003c/a\u003e\u003c/code\u003e - The specified class could not be found."
        ],
        "return": [
          "the loaded class."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.ClassNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.ClassLoader",
            "type": "Class"
          },
          "name": "loader",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "className",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "loadClassWithout",
      "comment": "Go through the list of class loaders but exclude the given class loader, then try to load the requested class. The method will stop as soon as the class is found. If the class is not found the method will throw a ClassNotFoundException exception.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eclassName\u003c/code\u003e - The name of the class to be loaded.",
          "\u003ccode\u003eloader\u003c/code\u003e - The class loader to be excluded."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassNotFoundException.html\" title\u003d\"class in java.lang\"\u003eClassNotFoundException\u003c/a\u003e\u003c/code\u003e - The specified class could not be found."
        ],
        "return": [
          "the loaded class."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a DefaultLoaderRepository.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.loading.DefaultLoaderRepository",
  "comment": "\u003cp\u003eKeeps the list of Class Loaders registered in the MBean Server. It provides the necessary methods to load classes using the registered Class Loaders.\u003c/p\u003e \n\u003cp\u003eThis deprecated class is maintained for compatibility. In previous versions of JMX, there was one \u003ccode\u003eDefaultLoaderRepository\u003c/code\u003e shared by all MBean servers. As of JMX 1.2, that functionality is approximated by using \u003ca href\u003d\"../MBeanServerFactory.html#findMBeanServer(java.lang.String)\"\u003e\u003ccode\u003eMBeanServerFactory.findMBeanServer(java.lang.String)\u003c/code\u003e\u003c/a\u003e to find all known MBean servers, and consulting the \u003ca href\u003d\"ClassLoaderRepository.html\" title\u003d\"interface in javax.management.loading\"\u003e\u003ccode\u003eClassLoaderRepository\u003c/code\u003e\u003c/a\u003e of each one. It is strongly recommended that code referencing \u003ccode\u003eDefaultLoaderRepository\u003c/code\u003e be rewritten.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}