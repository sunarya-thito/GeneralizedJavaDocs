{
  "packageName": "javax.management.loading",
  "simpleName": "MLetMBean",
  "moduleName": "java.management",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.lang.Object",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.ServiceNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "url"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMBeansFromURL",
      "comment": "Loads a text file containing MLET tags that define the MBeans to be added to the MBean server. The location of the text file is specified by a URL. The text file is read using the UTF-8 encoding. The MBeans specified in the MLET file will be instantiated and registered in the MBean server.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - The URL of the text file to be loaded as String object."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/ServiceNotFoundException.html\" title\u003d\"class in javax.management\"\u003eServiceNotFoundException\u003c/a\u003e\u003c/code\u003e - One of the following errors has occurred: The m-let text file does not contain an MLET tag, the m-let text file is not found, a mandatory attribute of the MLET tag is not specified, the value of url is malformed."
        ],
        "return": [
          "A set containing one entry per MLET tag in the m-let text file loaded. Each entry specifies either the ObjectInstance for the created MBean, or a throwable object (that is, an error or an exception) if the MBean could not be created."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.lang.Object",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.ServiceNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.URL",
            "type": "Class"
          },
          "field": {
            "name": "url"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMBeansFromURL",
      "comment": "Loads a text file containing MLET tags that define the MBeans to be added to the MBean server. The location of the text file is specified by a URL. The text file is read using the UTF-8 encoding. The MBeans specified in the MLET file will be instantiated and registered in the MBean server.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - The URL of the text file to be loaded as URL object."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/ServiceNotFoundException.html\" title\u003d\"class in javax.management\"\u003eServiceNotFoundException\u003c/a\u003e\u003c/code\u003e - One of the following errors has occurred: The m-let text file does not contain an MLET tag, the m-let text file is not found, a mandatory attribute of the MLET tag is not specified, the value of url is null."
        ],
        "return": [
          "A set containing one entry per MLET tag in the m-let text file loaded. Each entry specifies either the ObjectInstance for the created MBean, or a throwable object (that is, an error or an exception) if the MBean could not be created."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.net.URL",
            "type": "Class"
          },
          "field": {
            "name": "url"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addURL",
      "comment": "Appends the specified URL to the list of URLs to search for classes and resources.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - the URL to add."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.management.ServiceNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "url"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addURL",
      "comment": "Appends the specified URL to the list of URLs to search for classes and resources.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - the URL to add."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/ServiceNotFoundException.html\" title\u003d\"class in javax.management\"\u003eServiceNotFoundException\u003c/a\u003e\u003c/code\u003e - The specified URL is malformed."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.URL",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getURLs",
      "comment": "Returns the search path of URLs for loading classes and resources. This includes the original list of URLs specified to the constructor, along with any URLs subsequently appended by the addURL() method.",
      "tagMap": {
        "return": [
          "the list of URLs."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.URL",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getResource",
      "comment": "Finds the resource with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code. The name of a resource is a \"/\"-separated path name that identifies the resource.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The resource name"
        ],
        "return": [
          "An URL for reading the resource, or null if the resource could not be found or the caller doesn\u0027t have adequate privileges to get the resource."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.InputStream",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getResourceAsStream",
      "comment": "Returns an input stream for reading the specified resource. The search order is described in the documentation for getResource(String).",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The resource name"
        ],
        "return": [
          "An input stream for reading the resource, or null if the resource could not be found"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Enumeration",
        "parameters": [
          {
            "name": "java.net.URL",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getResources",
      "comment": "Finds all the resources with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code. The name of a resource is a \"/\"-separated path name that identifies the resource.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The resource name."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O exception occurs when searching for resources."
        ],
        "return": [
          "An enumeration of URL to the resource. If no resources could be found, the enumeration will be empty. Resources that cannot be accessed will not be in the enumeration."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getLibraryDirectory",
      "comment": "Gets the current directory used by the library loader for storing native libraries before they are loaded into memory.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/loading/MLetMBean.html#setLibraryDirectory(java.lang.String)\"\u003e\u003ccode\u003esetLibraryDirectory(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if this implementation does not support storing native libraries in this way."
        ],
        "return": [
          "The current directory used by the library loader."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "libdir"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setLibraryDirectory",
      "comment": "Sets the directory used by the library loader for storing native libraries before they are loaded into memory.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/loading/MLetMBean.html#getLibraryDirectory()\"\u003e\u003ccode\u003egetLibraryDirectory()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elibdir\u003c/code\u003e - The directory used by the library loader."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if this implementation does not support storing native libraries in this way."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.management.loading.MLetMBean",
  "comment": "Exposes the remote management interface of the MLet MBean.",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}