{
  "packageName": "javax.management.relation",
  "simpleName": "RelationNotification",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "javax.management.Notification",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "RELATION_BASIC_CREATION",
      "comment": "Type for the creation of an internal relation.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.relation.RelationNotification.RELATION_BASIC_CREATION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "RELATION_MBEAN_CREATION",
      "comment": "Type for the relation MBean added into the Relation Service.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.relation.RelationNotification.RELATION_MBEAN_CREATION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "RELATION_BASIC_UPDATE",
      "comment": "Type for an update of an internal relation.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.relation.RelationNotification.RELATION_BASIC_UPDATE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "RELATION_MBEAN_UPDATE",
      "comment": "Type for the update of a relation MBean.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.relation.RelationNotification.RELATION_MBEAN_UPDATE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "RELATION_BASIC_REMOVAL",
      "comment": "Type for the removal from the Relation Service of an internal relation.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.relation.RelationNotification.RELATION_BASIC_REMOVAL\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "RELATION_MBEAN_REMOVAL",
      "comment": "Type for the removal from the Relation Service of a relation MBean.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.relation.RelationNotification.RELATION_MBEAN_REMOVAL\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRelationId",
      "comment": "Returns the relation identifier of created/removed/updated relation.",
      "tagMap": {
        "return": [
          "the relation id."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRelationTypeName",
      "comment": "Returns the relation type name of created/removed/updated relation.",
      "tagMap": {
        "return": [
          "the relation type name."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.ObjectName",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getObjectName",
      "comment": "Returns the ObjectName of the created/removed/updated relation.",
      "tagMap": {
        "return": [
          "the ObjectName if the relation is an MBean, otherwise null."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.management.ObjectName",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMBeansToUnregister",
      "comment": "Returns the list of ObjectNames of MBeans expected to be unregistered due to a relation removal (only for relation removal).",
      "tagMap": {
        "return": [
          "a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/List.html\" title\u003d\"interface in java.util\"\u003e\u003ccode\u003eList\u003c/code\u003e\u003c/a\u003e of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/ObjectName.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eObjectName\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRoleName",
      "comment": "Returns name of updated role of updated relation (only for role update).",
      "tagMap": {
        "return": [
          "the name of the updated role."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.management.ObjectName",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOldRoleValue",
      "comment": "Returns old value of updated role (only for role update).",
      "tagMap": {
        "return": [
          "the old value of the updated role."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.management.ObjectName",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNewRoleValue",
      "comment": "Returns new value of updated role (only for role update).",
      "tagMap": {
        "return": [
          "the new value of the updated role."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "notifType"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "sourceObj"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "sequence"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "timeStamp"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "message"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "typeName"
          }
        },
        {
          "type": {
            "name": "javax.management.ObjectName",
            "type": "Class"
          },
          "field": {
            "name": "objectName"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "javax.management.ObjectName",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "unregMBeanList"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a notification for either a relation creation (RelationSupport object created internally in the Relation Service, or an MBean added as a relation) or for a relation removal from the Relation Service.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enotifType\u003c/code\u003e - type of the notification; either: \n\u003cp\u003e- RELATION_BASIC_CREATION \u003c/p\u003e\n\u003cp\u003e- RELATION_MBEAN_CREATION \u003c/p\u003e\n\u003cp\u003e- RELATION_BASIC_REMOVAL \u003c/p\u003e\n\u003cp\u003e- RELATION_MBEAN_REMOVAL\u003c/p\u003e",
          "\u003ccode\u003esourceObj\u003c/code\u003e - source object, sending the notification. This is either an ObjectName or a RelationService object. In the latter case it must be the MBean emitting the notification; the MBean Server will rewrite the source to be the ObjectName under which that MBean is registered.",
          "\u003ccode\u003esequence\u003c/code\u003e - sequence number to identify the notification",
          "\u003ccode\u003etimeStamp\u003c/code\u003e - time stamp",
          "\u003ccode\u003emessage\u003c/code\u003e - human-readable message describing the notification",
          "\u003ccode\u003eid\u003c/code\u003e - relation id identifying the relation in the Relation Service",
          "\u003ccode\u003etypeName\u003c/code\u003e - name of the relation type",
          "\u003ccode\u003eobjectName\u003c/code\u003e - ObjectName of the relation object if it is an MBean (null for relations internally handled by the Relation Service)",
          "\u003ccode\u003eunregMBeanList\u003c/code\u003e - list of ObjectNames of referenced MBeans expected to be unregistered due to relation removal (only for removal, due to CIM qualifiers, can be null)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if: \n\u003cp\u003e- no value for the notification type \u003c/p\u003e\n\u003cp\u003e- the notification type is not RELATION_BASIC_CREATION, RELATION_MBEAN_CREATION, RELATION_BASIC_REMOVAL or RELATION_MBEAN_REMOVAL \u003c/p\u003e\n\u003cp\u003e- no source object \u003c/p\u003e\n\u003cp\u003e- the source object is not a Relation Service \u003c/p\u003e\n\u003cp\u003e- no relation id \u003c/p\u003e\n\u003cp\u003e- no relation type name\u003c/p\u003e"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "notifType"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "sourceObj"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "sequence"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "timeStamp"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "message"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "typeName"
          }
        },
        {
          "type": {
            "name": "javax.management.ObjectName",
            "type": "Class"
          },
          "field": {
            "name": "objectName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "javax.management.ObjectName",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "newValue"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "javax.management.ObjectName",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "oldValue"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a notification for a role update in a relation.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enotifType\u003c/code\u003e - type of the notification; either: \n\u003cp\u003e- RELATION_BASIC_UPDATE \u003c/p\u003e\n\u003cp\u003e- RELATION_MBEAN_UPDATE\u003c/p\u003e",
          "\u003ccode\u003esourceObj\u003c/code\u003e - source object, sending the notification. This is either an ObjectName or a RelationService object. In the latter case it must be the MBean emitting the notification; the MBean Server will rewrite the source to be the ObjectName under which that MBean is registered.",
          "\u003ccode\u003esequence\u003c/code\u003e - sequence number to identify the notification",
          "\u003ccode\u003etimeStamp\u003c/code\u003e - time stamp",
          "\u003ccode\u003emessage\u003c/code\u003e - human-readable message describing the notification",
          "\u003ccode\u003eid\u003c/code\u003e - relation id identifying the relation in the Relation Service",
          "\u003ccode\u003etypeName\u003c/code\u003e - name of the relation type",
          "\u003ccode\u003eobjectName\u003c/code\u003e - ObjectName of the relation object if it is an MBean (null for relations internally handled by the Relation Service)",
          "\u003ccode\u003ename\u003c/code\u003e - name of the updated role",
          "\u003ccode\u003enewValue\u003c/code\u003e - new role value (List of ObjectName objects)",
          "\u003ccode\u003eoldValue\u003c/code\u003e - old role value (List of ObjectName objects)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if null parameter"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.relation.RelationNotification",
  "comment": "A notification of a change in the Relation Service. A RelationNotification notification is sent when a relation is created via the Relation Service, or an MBean is added as a relation in the Relation Service, or a role is updated in a relation, or a relation is removed from the Relation Service. \n\u003cp\u003eThe \u003cb\u003eserialVersionUID\u003c/b\u003e of this class is \u003ccode\u003e-6871117877523310399L\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.relation.RelationNotification\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}