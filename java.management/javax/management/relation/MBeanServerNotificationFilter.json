{
  "packageName": "javax.management.relation",
  "simpleName": "MBeanServerNotificationFilter",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "javax.management.NotificationFilterSupport",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "disableAllObjectNames",
      "comment": "Disables any MBeanServerNotification (all ObjectNames are deselected).",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "disableObjectName",
      "comment": "Disables MBeanServerNotifications concerning given ObjectName.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eobjectName\u003c/code\u003e - ObjectName no longer of interest"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the given ObjectName is null"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "enableAllObjectNames",
      "comment": "Enables all MBeanServerNotifications (all ObjectNames are selected).",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "enableObjectName",
      "comment": "Enables MBeanServerNotifications concerning given ObjectName.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eobjectName\u003c/code\u003e - ObjectName of interest"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the given ObjectName is null"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Vector",
        "parameters": [
          {
            "name": "javax.management.ObjectName",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getEnabledObjectNames",
      "comment": "Gets all the ObjectNames enabled.",
      "annotations": [],
      "tagMap": {
        "return": [
          "Vector of ObjectNames: \n\u003cp\u003e- null means all ObjectNames are implicitly selected, except the ObjectNames explicitly deselected \u003c/p\u003e\n\u003cp\u003e- empty means all ObjectNames are deselected, i.e. no ObjectName selected.\u003c/p\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Vector",
        "parameters": [
          {
            "name": "javax.management.ObjectName",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDisabledObjectNames",
      "comment": "Gets all the ObjectNames disabled.",
      "annotations": [],
      "tagMap": {
        "return": [
          "Vector of ObjectNames: \n\u003cp\u003e- null means all ObjectNames are implicitly deselected, except the ObjectNames explicitly selected \u003c/p\u003e\n\u003cp\u003e- empty means all ObjectNames are selected, i.e. no ObjectName deselected.\u003c/p\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isNotificationEnabled",
      "comment": "Invoked before sending the specified notification to the listener. If: - the ObjectName of the concerned MBean is selected (explicitly OR (implicitly and not explicitly deselected)) AND - the type of the operation (registration or unregistration) is selected then the notification is sent to the listener.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/NotificationFilterSupport.html#isNotificationEnabled(javax.management.Notification)\"\u003eisNotificationEnabled\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/NotificationFilterSupport.html\" title\u003d\"class in javax.management\"\u003eNotificationFilterSupport\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/NotificationFilter.html#isNotificationEnabled(javax.management.Notification)\"\u003eisNotificationEnabled\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/NotificationFilter.html\" title\u003d\"interface in javax.management\"\u003eNotificationFilter\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enotif\u003c/code\u003e - The notification to be sent."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if null parameter"
        ],
        "return": [
          "true if the notification has to be sent to the listener, false otherwise."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a filter selecting all MBeanServerNotification notifications for all ObjectNames.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.relation.MBeanServerNotificationFilter",
  "comment": "Filter for \n\u003ca href\u003d\"../MBeanServerNotification.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanServerNotification\u003c/code\u003e\u003c/a\u003e. This filter filters MBeanServerNotification notifications by selecting the ObjectNames of interest and the operations (registration, unregistration, both) of interest (corresponding to notification types). \n\u003cp\u003eThe \u003cb\u003eserialVersionUID\u003c/b\u003e of this class is \u003ccode\u003e2605900539589789736L\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.relation.MBeanServerNotificationFilter\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}