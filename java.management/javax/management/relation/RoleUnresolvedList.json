{
  "packageName": "javax.management.relation",
  "simpleName": "RoleUnresolvedList",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.ArrayList",
    "parameters": [
      {
        "name": "java.lang.Object",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.management.relation.RoleUnresolved",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "asList",
      "comment": "Return a view of this list as a List\u003cRoleUnresolved\u003e. Changes to the returned value are reflected by changes to the original RoleUnresolvedList and vice versa.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this \n\u003ccode\u003eRoleUnresolvedList\u003c/code\u003e contains an element that is not a \n\u003ccode\u003eRoleUnresolved\u003c/code\u003e."
        ],
        "return": [
          "a \n\u003ccode\u003eList\u0026lt;RoleUnresolved\u0026gt;\u003c/code\u003e whose contents reflect the contents of this \n\u003ccode\u003eRoleUnresolvedList\u003c/code\u003e. \n\u003cp\u003eIf this method has ever been called on a given \u003ccode\u003eRoleUnresolvedList\u003c/code\u003e instance, a subsequent attempt to add an object to that instance which is not a \u003ccode\u003eRoleUnresolved\u003c/code\u003e will fail with an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e. For compatibility reasons, a \u003ccode\u003eRoleUnresolvedList\u003c/code\u003e on which this method has never been called does allow objects other than \u003ccode\u003eRoleUnresolved\u003c/code\u003es to be added.\u003c/p\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.relation.RoleUnresolved",
            "type": "Class"
          },
          "field": {
            "name": "role"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds the RoleUnresolved specified as the last element of the list.",
      "tagMap": {
        "param": [
          "\u003ccode\u003erole\u003c/code\u003e - - the unresolved role to be added."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the unresolved role is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        },
        {
          "name": "java.lang.IndexOutOfBoundsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        },
        {
          "type": {
            "name": "javax.management.relation.RoleUnresolved",
            "type": "Class"
          },
          "field": {
            "name": "role"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Inserts the unresolved role specified as an element at the position specified. Elements with an index greater than or equal to the current position are shifted up.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - - The position in the list where the new RoleUnresolved object is to be inserted.",
          "\u003ccode\u003erole\u003c/code\u003e - - The RoleUnresolved object to be inserted."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the unresolved role is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range (\n\u003ccode\u003eindex \u0026lt; 0 || index \u0026gt; size()\u003c/code\u003e)."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        },
        {
          "name": "java.lang.IndexOutOfBoundsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        },
        {
          "type": {
            "name": "javax.management.relation.RoleUnresolved",
            "type": "Class"
          },
          "field": {
            "name": "role"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "set",
      "comment": "Sets the element at the position specified to be the unresolved role specified. The previous element at that position is discarded.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - - The position specified.",
          "\u003ccode\u003erole\u003c/code\u003e - - The value to which the unresolved role element should be set."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the unresolved role is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range (\n\u003ccode\u003eindex \u0026lt; 0 || index \u0026gt;\u003d size()\u003c/code\u003e)."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IndexOutOfBoundsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.relation.RoleUnresolvedList",
            "type": "Class"
          },
          "field": {
            "name": "roleList"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addAll",
      "comment": "Appends all the elements in the RoleUnresolvedList specified to the end of the list, in the order in which they are returned by the Iterator of the RoleUnresolvedList specified.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eroleList\u003c/code\u003e - - Elements to be inserted into the list (can be null)."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if accessing with an index outside of the list."
        ],
        "return": [
          "true if this list changed as a result of the call."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        },
        {
          "name": "java.lang.IndexOutOfBoundsException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        },
        {
          "type": {
            "name": "javax.management.relation.RoleUnresolvedList",
            "type": "Class"
          },
          "field": {
            "name": "roleList"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addAll",
      "comment": "Inserts all of the elements in the RoleUnresolvedList specified into this list, starting at the specified position, in the order in which they are returned by the Iterator of the RoleUnresolvedList specified.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - - Position at which to insert the first element from the RoleUnresolvedList specified.",
          "\u003ccode\u003eroleList\u003c/code\u003e - - Elements to be inserted into the list."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the role is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range (\n\u003ccode\u003eindex \u0026lt; 0 || index \u0026gt; size()\u003c/code\u003e)."
        ],
        "return": [
          "true if this list changed as a result of the call."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an empty RoleUnresolvedList.",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "initialCapacity"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an empty RoleUnresolvedList with the initial capacity specified.",
      "tagMap": {
        "param": [
          "\u003ccode\u003einitialCapacity\u003c/code\u003e - initial capacity"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "javax.management.relation.RoleUnresolved",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "list"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a RoleUnresolvedList containing the elements of the List specified, in the order in which they are returned by the List\u0027s iterator. The RoleUnresolvedList instance has an initial capacity of 110% of the size of the List specified.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ArrayList.html#%3Cinit%3E(java.util.Collection)\"\u003e\u003ccode\u003eArrayList(java.util.Collection)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elist\u003c/code\u003e - the \n\u003ccode\u003eList\u003c/code\u003e that defines the initial contents of the new \n\u003ccode\u003eRoleUnresolvedList\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003elist\u003c/code\u003e parameter is \n\u003ccode\u003enull\u003c/code\u003e or if the \n\u003ccode\u003elist\u003c/code\u003e parameter contains any non-RoleUnresolved objects."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.relation.RoleUnresolvedList",
  "comment": "A RoleUnresolvedList represents a list of RoleUnresolved objects, representing roles not retrieved from a relation due to a problem encountered when trying to access (read or write) the roles.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.relation.RoleUnresolvedList\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}