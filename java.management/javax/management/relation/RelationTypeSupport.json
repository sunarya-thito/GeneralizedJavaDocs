{
  "packageName": "javax.management.relation",
  "simpleName": "RelationTypeSupport",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRelationTypeName",
      "comment": "Returns the relation type name.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/relation/RelationType.html#getRelationTypeName()\"\u003egetRelationTypeName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/relation/RelationType.html\" title\u003d\"interface in javax.management.relation\"\u003eRelationType\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the relation type name."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.management.relation.RoleInfo",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRoleInfos",
      "comment": "Returns the list of role definitions (ArrayList of RoleInfo objects).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/relation/RelationType.html#getRoleInfos()\"\u003egetRoleInfos\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/relation/RelationType.html\" title\u003d\"interface in javax.management.relation\"\u003eRelationType\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ArrayList.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eArrayList\u003c/code\u003e\u003c/a\u003e of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/relation/RoleInfo.html\" title\u003d\"class in javax.management.relation\"\u003e\u003ccode\u003eRoleInfo\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.relation.RoleInfo",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        },
        {
          "name": "javax.management.relation.RoleInfoNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "roleInfoName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRoleInfo",
      "comment": "Returns the role info (RoleInfo object) for the given role info name (null if not found).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/relation/RelationType.html#getRoleInfo(java.lang.String)\"\u003egetRoleInfo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/relation/RelationType.html\" title\u003d\"interface in javax.management.relation\"\u003eRelationType\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eroleInfoName\u003c/code\u003e - role info name"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if null parameter",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/relation/RoleInfoNotFoundException.html\" title\u003d\"class in javax.management.relation\"\u003eRoleInfoNotFoundException\u003c/a\u003e\u003c/code\u003e - if no role info with that name in relation type."
        ],
        "return": [
          "RoleInfo object providing role definition does not exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        },
        {
          "name": "javax.management.relation.InvalidRelationTypeException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.relation.RoleInfo",
            "type": "Class"
          },
          "field": {
            "name": "roleInfo"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addRoleInfo",
      "comment": "Add a role info. This method of course should not be used after the creation of the relation type, because updating it would invalidate that the relations created associated to that type still conform to it. Can throw a RuntimeException if trying to update a relation type declared in the Relation Service.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eroleInfo\u003c/code\u003e - role info to be added."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if null parameter.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/relation/InvalidRelationTypeException.html\" title\u003d\"class in javax.management.relation\"\u003eInvalidRelationTypeException\u003c/a\u003e\u003c/code\u003e - if there is already a role info in current relation type with the same name."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        },
        {
          "name": "javax.management.relation.InvalidRelationTypeException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "relationTypeName"
          }
        },
        {
          "type": {
            "name": "javax.management.relation.RoleInfo",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "roleInfoArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor where all role definitions are dynamically created and passed as parameter.",
      "tagMap": {
        "param": [
          "\u003ccode\u003erelationTypeName\u003c/code\u003e - Name of relation type",
          "\u003ccode\u003eroleInfoArray\u003c/code\u003e - List of role definitions (RoleInfo objects)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if null parameter",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/relation/InvalidRelationTypeException.html\" title\u003d\"class in javax.management.relation\"\u003eInvalidRelationTypeException\u003c/a\u003e\u003c/code\u003e - if: \n\u003cp\u003e- the same name has been used for two different roles \u003c/p\u003e\n\u003cp\u003e- no role info provided \u003c/p\u003e\n\u003cp\u003e- one null role info provided\u003c/p\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "relationTypeName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor to be used for subclasses.",
      "tagMap": {
        "param": [
          "\u003ccode\u003erelationTypeName\u003c/code\u003e - Name of relation type."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if null parameter."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.relation.RelationTypeSupport",
  "comment": "A RelationTypeSupport object implements the RelationType interface. \n\u003cp\u003eIt represents a relation type, providing role information for each role expected to be supported in every relation of that type. \u003c/p\u003e\n\u003cp\u003eA relation type includes a relation type name and a list of role infos (represented by RoleInfo objects). \u003c/p\u003e\n\u003cp\u003eA relation type has to be declared in the Relation Service: \u003c/p\u003e\n\u003cp\u003e- either using the createRelationType() method, where a RelationTypeSupport object will be created and kept in the Relation Service \u003c/p\u003e\n\u003cp\u003e- either using the addRelationType() method where the user has to create an object implementing the RelationType interface, and this object will be used as representing a relation type in the Relation Service. \u003c/p\u003e\n\u003cp\u003eThe \u003cb\u003eserialVersionUID\u003c/b\u003e of this class is \u003ccode\u003e4611072955724144607L\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.relation.RelationTypeSupport\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}