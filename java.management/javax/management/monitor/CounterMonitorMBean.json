{
  "packageName": "javax.management.monitor",
  "simpleName": "CounterMonitorMBean",
  "moduleName": "java.management",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.management.monitor.MonitorMBean",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Number",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDerivedGauge",
      "comment": "Gets the derived gauge.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "The derived gauge."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDerivedGaugeTimeStamp",
      "comment": "Gets the derived gauge timestamp.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "The derived gauge timestamp."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Number",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getThreshold",
      "comment": "Gets the threshold value.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/CounterMonitorMBean.html#setThreshold(java.lang.Number)\"\u003e\u003ccode\u003esetThreshold(Number)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "The threshold value."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Number",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setThreshold",
      "comment": "Sets the threshold value.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/CounterMonitorMBean.html#getThreshold()\"\u003e\u003ccode\u003egetThreshold()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - The threshold value."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - The specified threshold is null or the threshold value is less than zero."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Number",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ObjectName",
            "type": "Class"
          },
          "field": {
            "name": "object"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDerivedGauge",
      "comment": "Gets the derived gauge for the specified MBean.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobject\u003c/code\u003e - the MBean for which the derived gauge is to be returned"
        ],
        "return": [
          "The derived gauge for the specified MBean if this MBean is in the set of observed MBeans, or \n\u003ccode\u003enull\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ObjectName",
            "type": "Class"
          },
          "field": {
            "name": "object"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDerivedGaugeTimeStamp",
      "comment": "Gets the derived gauge timestamp for the specified MBean.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobject\u003c/code\u003e - the MBean for which the derived gauge timestamp is to be returned"
        ],
        "return": [
          "The derived gauge timestamp for the specified MBean if this MBean is in the set of observed MBeans, or \n\u003ccode\u003enull\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Number",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ObjectName",
            "type": "Class"
          },
          "field": {
            "name": "object"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getThreshold",
      "comment": "Gets the threshold value for the specified MBean.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/CounterMonitorMBean.html#setThreshold(java.lang.Number)\"\u003e\u003ccode\u003esetThreshold(java.lang.Number)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eobject\u003c/code\u003e - the MBean for which the threshold value is to be returned"
        ],
        "return": [
          "The threshold value for the specified MBean if this MBean is in the set of observed MBeans, or \n\u003ccode\u003enull\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Number",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getInitThreshold",
      "comment": "Gets the initial threshold value common to all observed objects.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/CounterMonitorMBean.html#setInitThreshold(java.lang.Number)\"\u003e\u003ccode\u003esetInitThreshold(java.lang.Number)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "The initial threshold value."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Number",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setInitThreshold",
      "comment": "Sets the initial threshold value common to all observed MBeans.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/CounterMonitorMBean.html#getInitThreshold()\"\u003e\u003ccode\u003egetInitThreshold()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - The initial threshold value."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - The specified threshold is null or the threshold value is less than zero."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Number",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getOffset",
      "comment": "Gets the offset value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/CounterMonitorMBean.html#setOffset(java.lang.Number)\"\u003e\u003ccode\u003esetOffset(Number)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "The offset value."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Number",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setOffset",
      "comment": "Sets the offset value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/CounterMonitorMBean.html#getOffset()\"\u003e\u003ccode\u003egetOffset()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - The offset value."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - The specified offset is null or the offset value is less than zero."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Number",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getModulus",
      "comment": "Gets the modulus value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/CounterMonitorMBean.html#setModulus(java.lang.Number)\"\u003e\u003ccode\u003esetModulus(java.lang.Number)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "The modulus value."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Number",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setModulus",
      "comment": "Sets the modulus value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/CounterMonitorMBean.html#getModulus()\"\u003e\u003ccode\u003egetModulus()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - The modulus value."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - The specified modulus is null or the modulus value is less than zero."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNotify",
      "comment": "Gets the notification\u0027s on/off switch value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/CounterMonitorMBean.html#setNotify(boolean)\"\u003e\u003ccode\u003esetNotify(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the counter monitor notifies when exceeding the threshold, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setNotify",
      "comment": "Sets the notification\u0027s on/off switch value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/CounterMonitorMBean.html#getNotify()\"\u003e\u003ccode\u003egetNotify()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - The notification\u0027s on/off switch value."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDifferenceMode",
      "comment": "Gets the difference mode flag value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/CounterMonitorMBean.html#setDifferenceMode(boolean)\"\u003e\u003ccode\u003esetDifferenceMode(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the difference mode is used, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDifferenceMode",
      "comment": "Sets the difference mode flag value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/CounterMonitorMBean.html#getDifferenceMode()\"\u003e\u003ccode\u003egetDifferenceMode()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - The difference mode flag value."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.management.monitor.CounterMonitorMBean",
  "comment": "Exposes the remote management interface of the counter monitor MBean.",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}