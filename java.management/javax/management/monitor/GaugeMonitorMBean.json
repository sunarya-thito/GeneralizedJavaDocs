{
  "packageName": "javax.management.monitor",
  "simpleName": "GaugeMonitorMBean",
  "moduleName": "java.management",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.management.monitor.MonitorMBean",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Number",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDerivedGauge",
      "comment": "Gets the derived gauge.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "The derived gauge."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDerivedGaugeTimeStamp",
      "comment": "Gets the derived gauge timestamp.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "The derived gauge timestamp."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Number",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ObjectName",
            "type": "Class"
          },
          "field": {
            "name": "object"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDerivedGauge",
      "comment": "Gets the derived gauge for the specified MBean.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobject\u003c/code\u003e - the MBean for which the derived gauge is to be returned"
        ],
        "return": [
          "The derived gauge for the specified MBean if this MBean is in the set of observed MBeans, or \n\u003ccode\u003enull\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.ObjectName",
            "type": "Class"
          },
          "field": {
            "name": "object"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDerivedGaugeTimeStamp",
      "comment": "Gets the derived gauge timestamp for the specified MBean.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobject\u003c/code\u003e - the MBean for which the derived gauge timestamp is to be returned"
        ],
        "return": [
          "The derived gauge timestamp for the specified MBean if this MBean is in the set of observed MBeans, or \n\u003ccode\u003enull\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Number",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getHighThreshold",
      "comment": "Gets the high threshold value.",
      "tagMap": {
        "return": [
          "The high threshold value."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Number",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getLowThreshold",
      "comment": "Gets the low threshold value.",
      "tagMap": {
        "return": [
          "The low threshold value."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Number",
            "type": "Class"
          },
          "field": {
            "name": "highValue"
          }
        },
        {
          "type": {
            "name": "java.lang.Number",
            "type": "Class"
          },
          "field": {
            "name": "lowValue"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setThresholds",
      "comment": "Sets the high and the low threshold values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ehighValue\u003c/code\u003e - The high threshold value.",
          "\u003ccode\u003elowValue\u003c/code\u003e - The low threshold value."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - The specified high/low threshold is null or the low threshold is greater than the high threshold or the high threshold and the low threshold are not of the same type."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNotifyHigh",
      "comment": "Gets the high notification\u0027s on/off switch value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#setNotifyHigh(boolean)\"\u003e\u003ccode\u003esetNotifyHigh(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the gauge monitor notifies when exceeding the high threshold, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setNotifyHigh",
      "comment": "Sets the high notification\u0027s on/off switch value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#getNotifyHigh()\"\u003e\u003ccode\u003egetNotifyHigh()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - The high notification\u0027s on/off switch value."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNotifyLow",
      "comment": "Gets the low notification\u0027s on/off switch value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#setNotifyLow(boolean)\"\u003e\u003ccode\u003esetNotifyLow(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the gauge monitor notifies when exceeding the low threshold, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setNotifyLow",
      "comment": "Sets the low notification\u0027s on/off switch value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#getNotifyLow()\"\u003e\u003ccode\u003egetNotifyLow()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - The low notification\u0027s on/off switch value."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDifferenceMode",
      "comment": "Gets the difference mode flag value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#setDifferenceMode(boolean)\"\u003e\u003ccode\u003esetDifferenceMode(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the difference mode is used, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDifferenceMode",
      "comment": "Sets the difference mode flag value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#getDifferenceMode()\"\u003e\u003ccode\u003egetDifferenceMode()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - The difference mode flag value."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.management.monitor.GaugeMonitorMBean",
  "comment": "Exposes the remote management interface of the gauge monitor MBean.",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}