{
  "packageName": "javax.management.monitor",
  "simpleName": "GaugeMonitor",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "javax.management.monitor.Monitor",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "start",
      "comment": "Starts the gauge monitor.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/MonitorMBean.html#start()\"\u003estart\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/MonitorMBean.html\" title\u003d\"interface in javax.management.monitor\"\u003eMonitorMBean\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/Monitor.html#start()\"\u003estart\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/Monitor.html\" title\u003d\"class in javax.management.monitor\"\u003eMonitor\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "stop",
      "comment": "Stops the gauge monitor.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/MonitorMBean.html#stop()\"\u003estop\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/MonitorMBean.html\" title\u003d\"interface in javax.management.monitor\"\u003eMonitorMBean\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/Monitor.html#stop()\"\u003estop\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/Monitor.html\" title\u003d\"class in javax.management.monitor\"\u003eMonitor\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Number",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDerivedGauge",
      "comment": "Gets the derived gauge of the specified object, if this object is contained in the set of observed MBeans, or null otherwise.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#getDerivedGauge(javax.management.ObjectName)\"\u003egetDerivedGauge\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html\" title\u003d\"interface in javax.management.monitor\"\u003eGaugeMonitorMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobject\u003c/code\u003e - the name of the MBean."
        ],
        "return": [
          "The derived gauge of the specified object."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDerivedGaugeTimeStamp",
      "comment": "Gets the derived gauge timestamp of the specified object, if this object is contained in the set of observed MBeans, or 0 otherwise.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#getDerivedGaugeTimeStamp(javax.management.ObjectName)\"\u003egetDerivedGaugeTimeStamp\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html\" title\u003d\"interface in javax.management.monitor\"\u003eGaugeMonitorMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobject\u003c/code\u003e - the name of the object whose derived gauge timestamp is to be returned."
        ],
        "return": [
          "The derived gauge timestamp of the specified object."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Number",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDerivedGauge",
      "comment": "Returns the derived gauge of the first object in the set of observed MBeans.",
      "annotations": [
        {
          "type": {
            "name": "Deprecated",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#getDerivedGauge()\"\u003egetDerivedGauge\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html\" title\u003d\"interface in javax.management.monitor\"\u003eGaugeMonitorMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "The derived gauge."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDerivedGaugeTimeStamp",
      "comment": "Gets the derived gauge timestamp of the first object in the set of observed MBeans.",
      "annotations": [
        {
          "type": {
            "name": "Deprecated",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#getDerivedGaugeTimeStamp()\"\u003egetDerivedGaugeTimeStamp\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html\" title\u003d\"interface in javax.management.monitor\"\u003eGaugeMonitorMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "The derived gauge timestamp."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Number",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHighThreshold",
      "comment": "Gets the high threshold value common to all observed MBeans.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitor.html#setThresholds(java.lang.Number,java.lang.Number)\"\u003e\u003ccode\u003esetThresholds(java.lang.Number, java.lang.Number)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#getHighThreshold()\"\u003egetHighThreshold\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html\" title\u003d\"interface in javax.management.monitor\"\u003eGaugeMonitorMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "The high threshold value."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Number",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLowThreshold",
      "comment": "Gets the low threshold value common to all observed MBeans.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitor.html#setThresholds(java.lang.Number,java.lang.Number)\"\u003e\u003ccode\u003esetThresholds(java.lang.Number, java.lang.Number)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#getLowThreshold()\"\u003egetLowThreshold\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html\" title\u003d\"interface in javax.management.monitor\"\u003eGaugeMonitorMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "The low threshold value."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setThresholds",
      "comment": "Sets the high and the low threshold values common to all observed MBeans.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitor.html#getHighThreshold()\"\u003e\u003ccode\u003egetHighThreshold()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitor.html#getLowThreshold()\"\u003e\u003ccode\u003egetLowThreshold()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#setThresholds(java.lang.Number,java.lang.Number)\"\u003esetThresholds\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html\" title\u003d\"interface in javax.management.monitor\"\u003eGaugeMonitorMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ehighValue\u003c/code\u003e - The high threshold value.",
          "\u003ccode\u003elowValue\u003c/code\u003e - The low threshold value."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - The specified high/low threshold is null or the low threshold is greater than the high threshold or the high threshold and the low threshold are not of the same type."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNotifyHigh",
      "comment": "Gets the high notification\u0027s on/off switch value common to all observed MBeans.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitor.html#setNotifyHigh(boolean)\"\u003e\u003ccode\u003esetNotifyHigh(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#getNotifyHigh()\"\u003egetNotifyHigh\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html\" title\u003d\"interface in javax.management.monitor\"\u003eGaugeMonitorMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the gauge monitor notifies when exceeding the high threshold, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setNotifyHigh",
      "comment": "Sets the high notification\u0027s on/off switch value common to all observed MBeans.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitor.html#getNotifyHigh()\"\u003e\u003ccode\u003egetNotifyHigh()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#setNotifyHigh(boolean)\"\u003esetNotifyHigh\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html\" title\u003d\"interface in javax.management.monitor\"\u003eGaugeMonitorMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - The high notification\u0027s on/off switch value."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNotifyLow",
      "comment": "Gets the low notification\u0027s on/off switch value common to all observed MBeans.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitor.html#setNotifyLow(boolean)\"\u003e\u003ccode\u003esetNotifyLow(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#getNotifyLow()\"\u003egetNotifyLow\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html\" title\u003d\"interface in javax.management.monitor\"\u003eGaugeMonitorMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the gauge monitor notifies when exceeding the low threshold, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setNotifyLow",
      "comment": "Sets the low notification\u0027s on/off switch value common to all observed MBeans.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitor.html#getNotifyLow()\"\u003e\u003ccode\u003egetNotifyLow()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#setNotifyLow(boolean)\"\u003esetNotifyLow\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html\" title\u003d\"interface in javax.management.monitor\"\u003eGaugeMonitorMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - The low notification\u0027s on/off switch value."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDifferenceMode",
      "comment": "Gets the difference mode flag value common to all observed MBeans.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitor.html#setDifferenceMode(boolean)\"\u003e\u003ccode\u003esetDifferenceMode(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#getDifferenceMode()\"\u003egetDifferenceMode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html\" title\u003d\"interface in javax.management.monitor\"\u003eGaugeMonitorMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the difference mode is used, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDifferenceMode",
      "comment": "Sets the difference mode flag value common to all observed MBeans.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitor.html#getDifferenceMode()\"\u003e\u003ccode\u003egetDifferenceMode()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html#setDifferenceMode(boolean)\"\u003esetDifferenceMode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/monitor/GaugeMonitorMBean.html\" title\u003d\"interface in javax.management.monitor\"\u003eGaugeMonitorMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - The difference mode flag value."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.MBeanNotificationInfo",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNotificationInfo",
      "comment": "Returns a NotificationInfo object containing the name of the Java class of the notification and the notification types sent by the gauge monitor.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/NotificationBroadcaster.html#getNotificationInfo()\"\u003egetNotificationInfo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/NotificationBroadcaster.html\" title\u003d\"interface in javax.management\"\u003eNotificationBroadcaster\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the array of possible notifications."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Default constructor.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.monitor.GaugeMonitor",
  "comment": "Defines a monitor MBean designed to observe the values of a gauge attribute. \n\u003cp\u003e A gauge monitor observes an attribute that is continuously variable with time. A gauge monitor sends notifications as follows: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e if the attribute value is increasing and becomes equal to or greater than the high threshold value, a \u003ca href\u003d\"MonitorNotification.html#THRESHOLD_HIGH_VALUE_EXCEEDED\"\u003e\u003ccode\u003ethreshold high notification\u003c/code\u003e\u003c/a\u003e is sent. The notify high flag must be set to \u003ccode\u003etrue\u003c/code\u003e. \u003cbr\u003eSubsequent crossings of the high threshold value do not cause further notifications unless the attribute value becomes equal to or less than the low threshold value.\u003c/li\u003e \n \u003cli\u003e if the attribute value is decreasing and becomes equal to or less than the low threshold value, a \u003ca href\u003d\"MonitorNotification.html#THRESHOLD_LOW_VALUE_EXCEEDED\"\u003e\u003ccode\u003ethreshold low notification\u003c/code\u003e\u003c/a\u003e is sent. The notify low flag must be set to \u003ccode\u003etrue\u003c/code\u003e. \u003cbr\u003eSubsequent crossings of the low threshold value do not cause further notifications unless the attribute value becomes equal to or greater than the high threshold value.\u003c/li\u003e \n\u003c/ul\u003e This provides a hysteresis mechanism to avoid repeated triggering of notifications when the attribute value makes small oscillations around the high or low threshold value. \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e If the gauge difference mode is used, the value of the derived gauge is calculated as the difference between the observed gauge values for two successive observations. \u003cbr\u003eThe derived gauge value (V[t]) is calculated using the following method: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003eV[t] \u003d gauge[t] - gauge[t-GP]\u003c/li\u003e \n\u003c/ul\u003e This implementation of the gauge monitor requires the observed attribute to be of the type integer or floating-point (\n\u003ccode\u003eByte\u003c/code\u003e, \n\u003ccode\u003eInteger\u003c/code\u003e, \n\u003ccode\u003eShort\u003c/code\u003e, \n\u003ccode\u003eLong\u003c/code\u003e, \n\u003ccode\u003eFloat\u003c/code\u003e, \n\u003ccode\u003eDouble\u003c/code\u003e).\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}