{
  "packageName": "javax.management.openmbean",
  "simpleName": "OpenMBeanParameterInfo",
  "moduleName": "java.management",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDescription",
      "comment": "Returns a human readable description of the parameter described by this OpenMBeanParameterInfo instance.",
      "tagMap": {
        "return": [
          "the description."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getName",
      "comment": "Returns the name of the parameter described by this OpenMBeanParameterInfo instance.",
      "tagMap": {
        "return": [
          "the name."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.openmbean.OpenType",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getOpenType",
      "comment": "Returns the open type of the values of the parameter described by this OpenMBeanParameterInfo instance.",
      "tagMap": {
        "return": [
          "the open type."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDefaultValue",
      "comment": "Returns the default value for this parameter, if it has one, or null otherwise.",
      "tagMap": {
        "return": [
          "the default value."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getLegalValues",
      "comment": "Returns the set of legal values for this parameter, if it has one, or null otherwise.",
      "tagMap": {
        "return": [
          "the set of legal values."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Comparable",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMinValue",
      "comment": "Returns the minimal value for this parameter, if it has one, or null otherwise.",
      "tagMap": {
        "return": [
          "the minimum value."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Comparable",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxValue",
      "comment": "Returns the maximal value for this parameter, if it has one, or null otherwise.",
      "tagMap": {
        "return": [
          "the maximum value."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasDefaultValue",
      "comment": "Returns true if this parameter has a specified default value, or false otherwise.",
      "tagMap": {
        "return": [
          "true if there is a default value."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasLegalValues",
      "comment": "Returns true if this parameter has a specified set of legal values, or false otherwise.",
      "tagMap": {
        "return": [
          "true if there is a set of legal values."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasMinValue",
      "comment": "Returns true if this parameter has a specified minimal value, or false otherwise.",
      "tagMap": {
        "return": [
          "true if there is a minimum value."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hasMaxValue",
      "comment": "Returns true if this parameter has a specified maximal value, or false otherwise.",
      "tagMap": {
        "return": [
          "true if there is a maximum value."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isValue",
      "comment": "Tests whether obj is a valid value for the parameter described by this OpenMBeanParameterInfo instance.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to be tested."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003cvar\u003eobj\u003c/var\u003e is a valid value for the parameter described by this \n\u003ccode\u003eOpenMBeanParameterInfo\u003c/code\u003e instance, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "equals",
      "comment": "Compares the specified obj parameter with this OpenMBeanParameterInfo instance for equality. Returns true if and only if all of the following statements are true: obj is non null, obj also implements the OpenMBeanParameterInfo interface, their names are equal their open types are equal their default, min, max and legal values are equal. This ensures that this equals method works properly for obj parameters which are different implementations of the OpenMBeanParameterInfo interface.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to be compared for equality with this \n\u003ccode\u003eOpenMBeanParameterInfo\u003c/code\u003e instance;"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified object is equal to this \n\u003ccode\u003eOpenMBeanParameterInfo\u003c/code\u003e instance."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hashCode",
      "comment": "Returns the hash code value for this OpenMBeanParameterInfo instance. The hash code of an OpenMBeanParameterInfo instance is the sum of the hash codes of all elements of information used in equals comparisons (ie: its name, its open type, and its default, min, max and legal values). This ensures that t1.equals(t2) implies that t1.hashCode()\u003d\u003dt2.hashCode() for any two OpenMBeanParameterInfo instances t1 and t2, as required by the general contract of the method Object.hashCode().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the hash code value for this \n\u003ccode\u003eOpenMBeanParameterInfo\u003c/code\u003e instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "toString",
      "comment": "Returns a string representation of this OpenMBeanParameterInfo instance. The string representation consists of the name of this class (ie javax.management.openmbean.OpenMBeanParameterInfo), the string representation of the name and open type of the described parameter, and the string representation of its default, min, max and legal values.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this \n\u003ccode\u003eOpenMBeanParameterInfo\u003c/code\u003e instance"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.management.openmbean.OpenMBeanParameterInfo",
  "comment": "\u003cp\u003eDescribes a parameter used in one or more operations or constructors of an open MBean.\u003c/p\u003e \n\u003cp\u003eThis interface declares the same methods as the class \u003ca href\u003d\"../MBeanParameterInfo.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanParameterInfo\u003c/code\u003e\u003c/a\u003e. A class implementing this interface (typically \u003ca href\u003d\"OpenMBeanParameterInfoSupport.html\" title\u003d\"class in javax.management.openmbean\"\u003e\u003ccode\u003eOpenMBeanParameterInfoSupport\u003c/code\u003e\u003c/a\u003e) should extend \u003ca href\u003d\"../MBeanParameterInfo.html\" title\u003d\"class in javax.management\"\u003e\u003ccode\u003eMBeanParameterInfo\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}