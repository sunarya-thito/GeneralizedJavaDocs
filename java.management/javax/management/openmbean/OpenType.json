{
  "packageName": "javax.management.openmbean",
  "simpleName": "OpenType",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ALLOWED_CLASSNAMES_LIST",
      "comment": "List of the fully qualified names of the Java classes allowed for open data values. A multidimensional array of any one of these classes or their corresponding primitive types is also an allowed class for open data values. ALLOWED_CLASSNAMES_LIST \u003d {\n        \"java.lang.Void\",\n        \"java.lang.Boolean\",\n        \"java.lang.Character\",\n        \"java.lang.Byte\",\n        \"java.lang.Short\",\n        \"java.lang.Integer\",\n        \"java.lang.Long\",\n        \"java.lang.Float\",\n        \"java.lang.Double\",\n        \"java.lang.String\",\n        \"java.math.BigDecimal\",\n        \"java.math.BigInteger\",\n        \"java.util.Date\",\n        \"javax.management.ObjectName\",\n        CompositeData.class.getName(),\n        TabularData.class.getName() } ;",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ALLOWED_CLASSNAMES",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getClassName",
      "comment": "Returns the fully qualified Java class name of the open data values this open type describes. The only possible Java class names for open data values are listed in ALLOWED_CLASSNAMES_LIST. A multidimensional array of any one of these classes or their corresponding primitive types is also an allowed class, in which case the class name follows the rules defined by the method getName() of java.lang.Class. For example, a 3-dimensional array of Strings has for class name \"[[[Ljava.lang.String;\" (without the quotes), a 3-dimensional array of Integers has for class name \"[[[Ljava.lang.Integer;\" (without the quotes), and a 3-dimensional array of int has for class name \"[[[I\" (without the quotes)",
      "tagMap": {
        "return": [
          "the class name."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTypeName",
      "comment": "Returns the name of this OpenType instance.",
      "tagMap": {
        "return": [
          "the type name."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDescription",
      "comment": "Returns the text description of this OpenType instance.",
      "tagMap": {
        "return": [
          "the description."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isArray",
      "comment": "Returns true if the open data values this open type describes are arrays, false otherwise.",
      "tagMap": {
        "return": [
          "true if this is an array type."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "isValue",
      "comment": "Tests whether obj is a value for this open type.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to be tested for validity."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003cvar\u003eobj\u003c/var\u003e is a value for this open type, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "equals",
      "comment": "Compares the specified obj parameter with this open type instance for equality.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to compare to."
        ],
        "return": [
          "true if this object and \n\u003ccode\u003eobj\u003c/code\u003e are equal."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "hashCode",
      "comment": "Description copied from class: Object",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code value for this object."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "toString",
      "comment": "Returns a string representation of this open type instance.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the string representation."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.management.openmbean.OpenDataException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "className"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "typeName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs an OpenType instance (actually a subclass instance as OpenType is abstract), checking for the validity of the given parameters. The validity constraints are described below for each parameter.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eclassName\u003c/code\u003e - The fully qualified Java class name of the open data values this open type describes. The valid Java class names allowed for open data values are listed in \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenType.html#ALLOWED_CLASSNAMES_LIST\"\u003e\u003ccode\u003eALLOWED_CLASSNAMES_LIST\u003c/code\u003e\u003c/a\u003e. A multidimensional array of any one of these classes or their corresponding primitive types is also an allowed class, in which case the class name follows the rules defined by the method \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Class.html#getName()\"\u003e\u003ccode\u003egetName()\u003c/code\u003e\u003c/a\u003e of \n\u003ccode\u003ejava.lang.Class\u003c/code\u003e. For example, a 3-dimensional array of Strings has for class name \"\n\u003ccode\u003e[[[Ljava.lang.String;\u003c/code\u003e\" (without the quotes). \n\u003cbr\u003e\u0026nbsp;",
          "\u003ccode\u003etypeName\u003c/code\u003e - The name given to the open type this instance represents; cannot be a null or empty string. \n\u003cbr\u003e\u0026nbsp;",
          "\u003ccode\u003edescription\u003c/code\u003e - The human readable description of the open type this instance represents; cannot be a null or empty string. \n\u003cbr\u003e\u0026nbsp;"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003cvar\u003eclassName\u003c/var\u003e, \n\u003cvar\u003etypeName\u003c/var\u003e or \n\u003cvar\u003edescription\u003c/var\u003e is a null or empty string \n\u003cbr\u003e\u0026nbsp;",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenDataException.html\" title\u003d\"class in javax.management.openmbean\"\u003eOpenDataException\u003c/a\u003e\u003c/code\u003e - if \n\u003cvar\u003eclassName\u003c/var\u003e is not one of the allowed Java class names for open data"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "T",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.management.openmbean.OpenType",
  "comment": "The \n\u003ccode\u003eOpenType\u003c/code\u003e class is the parent abstract class of all classes which describe the actual \n\u003ci\u003eopen type\u003c/i\u003e of open data values. \n\u003cp\u003e An \u003ci\u003eopen type\u003c/i\u003e is defined by: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003ethe fully qualified Java class name of the open data values this type describes; note that only a limited set of Java classes is allowed for open data values (see \u003ca href\u003d\"#ALLOWED_CLASSNAMES_LIST\"\u003e\u003ccode\u003eALLOWED_CLASSNAMES_LIST\u003c/code\u003e\u003c/a\u003e),\u003c/li\u003e \n \u003cli\u003eits name,\u003c/li\u003e \n \u003cli\u003eits description.\u003c/li\u003e \n\u003c/ul\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.openmbean.OpenType\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}