{
  "packageName": "javax.management.openmbean",
  "simpleName": "TabularData",
  "moduleName": "java.management",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.management.openmbean.TabularType",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTabularType",
      "comment": "Returns the tabular type describing this TabularData instance.",
      "tagMap": {
        "return": [
          "the tabular type."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.openmbean.CompositeData",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "calculateIndex",
      "comment": "Calculates the index that would be used in this TabularData instance to refer to the specified composite data value parameter if it were added to this instance. This method checks for the type validity of the specified value, but does not check if the calculated index is already used to refer to a value in this TabularData instance.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the composite data value whose index in this \n\u003ccode\u003eTabularData\u003c/code\u003e instance is to be calculated; must be of the same composite type as this instance\u0027s row type; must not be null."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003cvar\u003evalue\u003c/var\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/InvalidOpenTypeException.html\" title\u003d\"class in javax.management.openmbean\"\u003eInvalidOpenTypeException\u003c/a\u003e\u003c/code\u003e - if \n\u003cvar\u003evalue\u003c/var\u003e does not conform to this \n\u003ccode\u003eTabularData\u003c/code\u003e instance\u0027s row type definition."
        ],
        "return": [
          "the index that the specified \n\u003cvar\u003evalue\u003c/var\u003e would have in this \n\u003ccode\u003eTabularData\u003c/code\u003e instance."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "size",
      "comment": "Returns the number of CompositeData values (ie the number of rows) contained in this TabularData instance.",
      "tagMap": {
        "return": [
          "the number of values contained."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isEmpty",
      "comment": "Returns true if the number of CompositeData values (ie the number of rows) contained in this TabularData instance is zero.",
      "tagMap": {
        "return": [
          "true if this \n\u003ccode\u003eTabularData\u003c/code\u003e is empty."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "containsKey",
      "comment": "Returns true if and only if this TabularData instance contains a CompositeData value (ie a row) whose index is the specified key. If key is null or does not conform to this TabularData instance\u0027s TabularType definition, this method simply returns false.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the index value whose presence in this \n\u003ccode\u003eTabularData\u003c/code\u003e instance is to be tested."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this \n\u003ccode\u003eTabularData\u003c/code\u003e indexes a row value with the specified key."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.openmbean.CompositeData",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "containsValue",
      "comment": "Returns true if and only if this TabularData instance contains the specified CompositeData value. If value is null or does not conform to this TabularData instance\u0027s row type definition, this method simply returns false.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the row value whose presence in this \n\u003ccode\u003eTabularData\u003c/code\u003e instance is to be tested."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this \n\u003ccode\u003eTabularData\u003c/code\u003e instance contains the specified row value."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.openmbean.CompositeData",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "get",
      "comment": "Returns the CompositeData value whose index is key, or null if there is no value mapping to key, in this TabularData instance.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key of the row to return."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the \n\u003cvar\u003ekey\u003c/var\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/InvalidKeyException.html\" title\u003d\"class in javax.management.openmbean\"\u003eInvalidKeyException\u003c/a\u003e\u003c/code\u003e - if the \n\u003cvar\u003ekey\u003c/var\u003e does not conform to this \n\u003ccode\u003eTabularData\u003c/code\u003e instance\u0027s * \n\u003ccode\u003eTabularType\u003c/code\u003e definition"
        ],
        "return": [
          "the value corresponding to \n\u003cvar\u003ekey\u003c/var\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.openmbean.CompositeData",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "put",
      "comment": "Adds value to this TabularData instance. The composite type of value must be the same as this instance\u0027s row type (ie the composite type returned by this.getTabularType().getRowType()), and there must not already be an existing value in this TabularData instance whose index is the same as the one calculated for the value to be added. The index for value is calculated according to this TabularData instance\u0027s TabularType definition (see TabularType.getIndexNames()).",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the composite data value to be added as a new row to this \n\u003ccode\u003eTabularData\u003c/code\u003e instance; must be of the same composite type as this instance\u0027s row type; must not be null."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003cvar\u003evalue\u003c/var\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/InvalidOpenTypeException.html\" title\u003d\"class in javax.management.openmbean\"\u003eInvalidOpenTypeException\u003c/a\u003e\u003c/code\u003e - if \n\u003cvar\u003evalue\u003c/var\u003e does not conform to this \n\u003ccode\u003eTabularData\u003c/code\u003e instance\u0027s row type definition.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/KeyAlreadyExistsException.html\" title\u003d\"class in javax.management.openmbean\"\u003eKeyAlreadyExistsException\u003c/a\u003e\u003c/code\u003e - if the index for \n\u003cvar\u003evalue\u003c/var\u003e, calculated according to this \n\u003ccode\u003eTabularData\u003c/code\u003e instance\u0027s \n\u003ccode\u003eTabularType\u003c/code\u003e definition already maps to an existing value in the underlying HashMap."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.openmbean.CompositeData",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "remove",
      "comment": "Removes the CompositeData value whose index is key from this TabularData instance, and returns the removed value, or returns null if there is no value whose index is key.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the index of the value to get in this \n\u003ccode\u003eTabularData\u003c/code\u003e instance; must be valid with this \n\u003ccode\u003eTabularData\u003c/code\u003e instance\u0027s row type definition; must not be null."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the \n\u003cvar\u003ekey\u003c/var\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/InvalidKeyException.html\" title\u003d\"class in javax.management.openmbean\"\u003eInvalidKeyException\u003c/a\u003e\u003c/code\u003e - if the \n\u003cvar\u003ekey\u003c/var\u003e does not conform to this \n\u003ccode\u003eTabularData\u003c/code\u003e instance\u0027s \n\u003ccode\u003eTabularType\u003c/code\u003e definition"
        ],
        "return": [
          "previous value associated with specified key, or \n\u003ccode\u003enull\u003c/code\u003e if there was no mapping for key."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.openmbean.CompositeData",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "values"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "putAll",
      "comment": "Add all the elements in values to this TabularData instance. If any element in values does not satisfy the constraints defined in put, or if any two elements in values have the same index calculated according to this TabularData instance\u0027s TabularType definition, then an exception describing the failure is thrown and no element of values is added, thus leaving this TabularData instance unchanged.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalues\u003c/code\u003e - the array of composite data values to be added as new rows to this \n\u003ccode\u003eTabularData\u003c/code\u003e instance; if \n\u003cvar\u003evalues\u003c/var\u003e is \n\u003ccode\u003enull\u003c/code\u003e or empty, this method returns without doing anything."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if an element of \n\u003cvar\u003evalues\u003c/var\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/InvalidOpenTypeException.html\" title\u003d\"class in javax.management.openmbean\"\u003eInvalidOpenTypeException\u003c/a\u003e\u003c/code\u003e - if an element of \n\u003cvar\u003evalues\u003c/var\u003e does not conform to this \n\u003ccode\u003eTabularData\u003c/code\u003e instance\u0027s row type definition",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/KeyAlreadyExistsException.html\" title\u003d\"class in javax.management.openmbean\"\u003eKeyAlreadyExistsException\u003c/a\u003e\u003c/code\u003e - if the index for an element of \n\u003cvar\u003evalues\u003c/var\u003e, calculated according to this \n\u003ccode\u003eTabularData\u003c/code\u003e instance\u0027s \n\u003ccode\u003eTabularType\u003c/code\u003e definition already maps to an existing value in this instance, or two elements of \n\u003cvar\u003evalues\u003c/var\u003e have the same index."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clear",
      "comment": "Removes all CompositeData values (ie rows) from this TabularData instance.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "keySet",
      "comment": "Returns a set view of the keys (ie the index values) of the CompositeData values (ie the rows) contained in this TabularData instance. The returned Set is a Set\u003cList\u003c?\u003e\u003e but is declared as a Set\u003c?\u003e for compatibility reasons. The returned set can be used to iterate over the keys.",
      "tagMap": {
        "return": [
          "a set view (\n\u003ccode\u003eSet\u0026lt;List\u0026lt;?\u0026gt;\u0026gt;\u003c/code\u003e) of the index values used in this \n\u003ccode\u003eTabularData\u003c/code\u003e instance."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Collection",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "values",
      "comment": "Returns a collection view of the CompositeData values (ie the rows) contained in this TabularData instance. The returned Collection is a Collection\u003cCompositeData\u003e but is declared as a Collection\u003c?\u003e for compatibility reasons. The returned collection can be used to iterate over the values.",
      "tagMap": {
        "return": [
          "a collection view (\n\u003ccode\u003eCollection\u0026lt;CompositeData\u0026gt;\u003c/code\u003e) of the rows contained in this \n\u003ccode\u003eTabularData\u003c/code\u003e instance."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "equals",
      "comment": "Compares the specified obj parameter with this TabularData instance for equality. Returns true if and only if all of the following statements are true: obj is non null, obj also implements the TabularData interface, their row types are equal their contents (ie index to value mappings) are equal This ensures that this equals method works properly for obj parameters which are different implementations of the TabularData interface.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to be compared for equality with this \n\u003ccode\u003eTabularData\u003c/code\u003e instance;"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified object is equal to this \n\u003ccode\u003eTabularData\u003c/code\u003e instance."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hashCode",
      "comment": "Returns the hash code value for this TabularData instance. The hash code of a TabularData instance is the sum of the hash codes of all elements of information used in equals comparisons (ie: its tabular type and its content, where the content is defined as all the index to value mappings). This ensures that t1.equals(t2) implies that t1.hashCode()\u003d\u003dt2.hashCode() for any two TabularDataSupport instances t1 and t2, as required by the general contract of the method Object.hashCode().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the hash code value for this \n\u003ccode\u003eTabularDataSupport\u003c/code\u003e instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "toString",
      "comment": "Returns a string representation of this TabularData instance. The string representation consists of the name of the implementing class, and the tabular type of this instance.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this \n\u003ccode\u003eTabularData\u003c/code\u003e instance"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.management.openmbean.TabularData",
  "comment": "The \n\u003ccode\u003eTabularData\u003c/code\u003e interface specifies the behavior of a specific type of complex \n\u003ci\u003eopen data\u003c/i\u003e objects which represent \n\u003ci\u003etabular data\u003c/i\u003e structures.",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}