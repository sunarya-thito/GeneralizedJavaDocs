{
  "packageName": "javax.management.openmbean",
  "simpleName": "CompositeDataSupport",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.management.openmbean.CompositeType",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCompositeType",
      "comment": "Returns the composite type of this composite data instance.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html#getCompositeType()\"\u003egetCompositeType\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html\" title\u003d\"interface in javax.management.openmbean\"\u003eCompositeData\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the type of this CompositeData."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "get",
      "comment": "Returns the value of the item whose name is key.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html#get(java.lang.String)\"\u003eget\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html\" title\u003d\"interface in javax.management.openmbean\"\u003eCompositeData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the name of the item."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ekey\u003c/code\u003e is a null or empty String.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/InvalidKeyException.html\" title\u003d\"class in javax.management.openmbean\"\u003eInvalidKeyException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ekey\u003c/code\u003e is not an existing item name for this \n\u003ccode\u003eCompositeData\u003c/code\u003e instance."
        ],
        "return": [
          "the value associated with this key."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "keys"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAll",
      "comment": "Returns an array of the values of the items whose names are specified by keys, in the same order as keys.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html#getAll(java.lang.String%5B%5D)\"\u003egetAll\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html\" title\u003d\"interface in javax.management.openmbean\"\u003eCompositeData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekeys\u003c/code\u003e - the names of the items."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if an element in \n\u003ccode\u003ekeys\u003c/code\u003e is a null or empty String.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/InvalidKeyException.html\" title\u003d\"class in javax.management.openmbean\"\u003eInvalidKeyException\u003c/a\u003e\u003c/code\u003e - if an element in \n\u003ccode\u003ekeys\u003c/code\u003e is not an existing item name for this \n\u003ccode\u003eCompositeData\u003c/code\u003e instance."
        ],
        "return": [
          "the values corresponding to the keys."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "containsKey",
      "comment": "Returns true if and only if this CompositeData instance contains an item whose name is key. If key is a null or empty String, this method simply returns false.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html#containsKey(java.lang.String)\"\u003econtainsKey\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html\" title\u003d\"interface in javax.management.openmbean\"\u003eCompositeData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key to be tested."
        ],
        "return": [
          "true if this \n\u003ccode\u003eCompositeData\u003c/code\u003e contains the key."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "containsValue",
      "comment": "Returns true if and only if this CompositeData instance contains an item whose value is value.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html#containsValue(java.lang.Object)\"\u003econtainsValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html\" title\u003d\"interface in javax.management.openmbean\"\u003eCompositeData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the value to be tested."
        ],
        "return": [
          "true if this \n\u003ccode\u003eCompositeData\u003c/code\u003e contains the value."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Collection",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "values",
      "comment": "Returns an unmodifiable Collection view of the item values contained in this CompositeData instance. The returned collection\u0027s iterator will return the values in the ascending lexicographic order of the corresponding item names.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html#values()\"\u003evalues\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html\" title\u003d\"interface in javax.management.openmbean\"\u003eCompositeData\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the values."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares the specified obj parameter with this CompositeDataSupport instance for equality. Returns true if and only if all of the following statements are true: obj is non null, obj also implements the CompositeData interface, their composite types are equal their contents, i.e. (name, value) pairs are equal. If a value contained in the content is an array, the value comparison is done as if by calling the deepEquals method for arrays of object reference types or the appropriate overloading of Arrays.equals(e1,e2) for arrays of primitive types This ensures that this equals method works properly for obj parameters which are different implementations of the CompositeData interface, with the restrictions mentioned in the equals method of the java.util.Collection interface.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html\" title\u003d\"interface in javax.management.openmbean\"\u003eCompositeData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to be compared for equality with this \n\u003ccode\u003eCompositeDataSupport\u003c/code\u003e instance."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified object is equal to this \n\u003ccode\u003eCompositeDataSupport\u003c/code\u003e instance."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns the hash code value for this CompositeDataSupport instance. The hash code of a CompositeDataSupport instance is the sum of the hash codes of all elements of information used in equals comparisons (ie: its composite type and all the item values). This ensures that t1.equals(t2) implies that t1.hashCode()\u003d\u003dt2.hashCode() for any two CompositeDataSupport instances t1 and t2, as required by the general contract of the method Object.hashCode(). Each item value\u0027s hash code is added to the returned hash code. If an item value is an array, its hash code is obtained as if by calling the deepHashCode method for arrays of object reference types or the appropriate overloading of Arrays.hashCode(e) for arrays of primitive types.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html\" title\u003d\"interface in javax.management.openmbean\"\u003eCompositeData\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the hash code value for this \n\u003ccode\u003eCompositeDataSupport\u003c/code\u003e instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of this CompositeDataSupport instance. The string representation consists of the name of this class (ie javax.management.openmbean.CompositeDataSupport), the string representation of the composite type of this instance, and the string representation of the contents (ie list the itemName\u003ditemValue mappings).",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/CompositeData.html\" title\u003d\"interface in javax.management.openmbean\"\u003eCompositeData\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this \n\u003ccode\u003eCompositeDataSupport\u003c/code\u003e instance"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.management.openmbean.OpenDataException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.openmbean.CompositeType",
            "type": "Class"
          },
          "field": {
            "name": "compositeType"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "itemNames"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "itemValues"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a CompositeDataSupport instance with the specified compositeType, whose item values are specified by itemValues[], in the same order as in itemNames[]. As a CompositeType does not specify any order on its items, the itemNames[] parameter is used to specify the order in which the values are given in itemValues[]. The items contained in this CompositeDataSupport instance are internally stored in a TreeMap, thus sorted in ascending lexicographic order of their names, for faster retrieval of individual item values. The constructor checks that all the constraints listed below for each parameter are satisfied, and throws the appropriate exception if they are not.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecompositeType\u003c/code\u003e - the \n\u003ci\u003ecomposite type \u003c/i\u003e of this \n\u003ci\u003ecomposite data\u003c/i\u003e instance; must not be null.",
          "\u003ccode\u003eitemNames\u003c/code\u003e - \n\u003ccode\u003eitemNames\u003c/code\u003e must list, in any order, all the item names defined in \n\u003ccode\u003ecompositeType\u003c/code\u003e; the order in which the names are listed, is used to match values in \n\u003ccode\u003eitemValues[]\u003c/code\u003e; must not be null or empty.",
          "\u003ccode\u003eitemValues\u003c/code\u003e - the values of the items, listed in the same order as their respective names in \n\u003ccode\u003eitemNames\u003c/code\u003e; each item value can be null, but if it is non-null it must be a valid value for the open type defined in \n\u003ccode\u003ecompositeType\u003c/code\u003e for the corresponding item; must be of the same size as \n\u003ccode\u003eitemNames\u003c/code\u003e; must not be null or empty."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - \n\u003ccode\u003ecompositeType\u003c/code\u003e is null, or \n\u003ccode\u003eitemNames[]\u003c/code\u003e or \n\u003ccode\u003eitemValues[]\u003c/code\u003e is null or empty, or one of the elements in \n\u003ccode\u003eitemNames[]\u003c/code\u003e is a null or empty string, or \n\u003ccode\u003eitemNames[]\u003c/code\u003e and \n\u003ccode\u003eitemValues[]\u003c/code\u003e are not of the same size.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenDataException.html\" title\u003d\"class in javax.management.openmbean\"\u003eOpenDataException\u003c/a\u003e\u003c/code\u003e - \n\u003ccode\u003eitemNames[]\u003c/code\u003e or \n\u003ccode\u003eitemValues[]\u003c/code\u003e\u0027s size differs from the number of items defined in \n\u003ccode\u003ecompositeType\u003c/code\u003e, or one of the elements in \n\u003ccode\u003eitemNames[]\u003c/code\u003e does not exist as an item name defined in \n\u003ccode\u003ecompositeType\u003c/code\u003e, or one of the elements in \n\u003ccode\u003eitemValues[]\u003c/code\u003e is not a valid value for the corresponding item as defined in \n\u003ccode\u003ecompositeType\u003c/code\u003e."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.management.openmbean.OpenDataException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.openmbean.CompositeType",
            "type": "Class"
          },
          "field": {
            "name": "compositeType"
          }
        },
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "items"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a CompositeDataSupport instance with the specified compositeType, whose item names and corresponding values are given by the mappings in the map items. This constructor converts the keys to a string array and the values to an object array and calls CompositeDataSupport(javax.management.openmbean.CompositeType, java.lang.String[], java.lang.Object[]).",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecompositeType\u003c/code\u003e - the \n\u003ci\u003ecomposite type \u003c/i\u003e of this \n\u003ci\u003ecomposite data\u003c/i\u003e instance; must not be null.",
          "\u003ccode\u003eitems\u003c/code\u003e - the mappings of all the item names to their values; \n\u003ccode\u003eitems\u003c/code\u003e must contain all the item names defined in \n\u003ccode\u003ecompositeType\u003c/code\u003e; must not be null or empty."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - \n\u003ccode\u003ecompositeType\u003c/code\u003e is null, or \n\u003ccode\u003eitems\u003c/code\u003e is null or empty, or one of the keys in \n\u003ccode\u003eitems\u003c/code\u003e is a null or empty string.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenDataException.html\" title\u003d\"class in javax.management.openmbean\"\u003eOpenDataException\u003c/a\u003e\u003c/code\u003e - \n\u003ccode\u003eitems\u003c/code\u003e\u0027 size differs from the number of items defined in \n\u003ccode\u003ecompositeType\u003c/code\u003e, or one of the keys in \n\u003ccode\u003eitems\u003c/code\u003e does not exist as an item name defined in \n\u003ccode\u003ecompositeType\u003c/code\u003e, or one of the values in \n\u003ccode\u003eitems\u003c/code\u003e is not a valid value for the corresponding item as defined in \n\u003ccode\u003ecompositeType\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayStoreException.html\" title\u003d\"class in java.lang\"\u003eArrayStoreException\u003c/a\u003e\u003c/code\u003e - one or more keys in \n\u003ccode\u003eitems\u003c/code\u003e is not of the class \n\u003ccode\u003ejava.lang.String\u003c/code\u003e."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.openmbean.CompositeDataSupport",
  "comment": "The \n\u003ccode\u003eCompositeDataSupport\u003c/code\u003e class is the \n\u003ci\u003eopen data\u003c/i\u003e class which implements the \n\u003ccode\u003eCompositeData\u003c/code\u003e interface.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.openmbean.CompositeDataSupport\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}