{
  "packageName": "javax.management.openmbean",
  "simpleName": "OpenMBeanParameterInfoSupport",
  "moduleName": "java.management",
  "type": "CLASS",
  "superClass": {
    "name": "javax.management.MBeanParameterInfo",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.management.openmbean.OpenType",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOpenType",
      "comment": "Returns the open type for the values of the parameter described by this OpenMBeanParameterInfoSupport instance.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html#getOpenType()\"\u003egetOpenType\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html\" title\u003d\"interface in javax.management.openmbean\"\u003eOpenMBeanParameterInfo\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the open type."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDefaultValue",
      "comment": "Returns the default value for the parameter described by this OpenMBeanParameterInfoSupport instance, if specified, or null otherwise.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html#getDefaultValue()\"\u003egetDefaultValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html\" title\u003d\"interface in javax.management.openmbean\"\u003eOpenMBeanParameterInfo\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the default value."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLegalValues",
      "comment": "Returns an unmodifiable Set of legal values for the parameter described by this OpenMBeanParameterInfoSupport instance, if specified, or null otherwise.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html#getLegalValues()\"\u003egetLegalValues\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html\" title\u003d\"interface in javax.management.openmbean\"\u003eOpenMBeanParameterInfo\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the set of legal values."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Comparable",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMinValue",
      "comment": "Returns the minimal value for the parameter described by this OpenMBeanParameterInfoSupport instance, if specified, or null otherwise.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html#getMinValue()\"\u003egetMinValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html\" title\u003d\"interface in javax.management.openmbean\"\u003eOpenMBeanParameterInfo\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the minimum value."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Comparable",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMaxValue",
      "comment": "Returns the maximal value for the parameter described by this OpenMBeanParameterInfoSupport instance, if specified, or null otherwise.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html#getMaxValue()\"\u003egetMaxValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html\" title\u003d\"interface in javax.management.openmbean\"\u003eOpenMBeanParameterInfo\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the maximum value."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hasDefaultValue",
      "comment": "Returns true if this OpenMBeanParameterInfoSupport instance specifies a non-null default value for the described parameter, false otherwise.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html#hasDefaultValue()\"\u003ehasDefaultValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html\" title\u003d\"interface in javax.management.openmbean\"\u003eOpenMBeanParameterInfo\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if there is a default value."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hasLegalValues",
      "comment": "Returns true if this OpenMBeanParameterInfoSupport instance specifies a non-null set of legal values for the described parameter, false otherwise.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html#hasLegalValues()\"\u003ehasLegalValues\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html\" title\u003d\"interface in javax.management.openmbean\"\u003eOpenMBeanParameterInfo\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if there is a set of legal values."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hasMinValue",
      "comment": "Returns true if this OpenMBeanParameterInfoSupport instance specifies a non-null minimal value for the described parameter, false otherwise.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html#hasMinValue()\"\u003ehasMinValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html\" title\u003d\"interface in javax.management.openmbean\"\u003eOpenMBeanParameterInfo\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if there is a minimum value."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hasMaxValue",
      "comment": "Returns true if this OpenMBeanParameterInfoSupport instance specifies a non-null maximal value for the described parameter, false otherwise.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html#hasMaxValue()\"\u003ehasMaxValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html\" title\u003d\"interface in javax.management.openmbean\"\u003eOpenMBeanParameterInfo\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if there is a maximum value."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isValue",
      "comment": "Tests whether obj is a valid value for the parameter described by this OpenMBeanParameterInfo instance.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html#isValue(java.lang.Object)\"\u003eisValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html\" title\u003d\"interface in javax.management.openmbean\"\u003eOpenMBeanParameterInfo\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to be tested."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003eobj\u003c/code\u003e is a valid value for the parameter described by this \n\u003ccode\u003eOpenMBeanParameterInfo\u003c/code\u003e instance, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares the specified obj parameter with this OpenMBeanParameterInfoSupport instance for equality. Returns true if and only if all of the following statements are true: obj is non null, obj also implements the OpenMBeanParameterInfo interface, their names are equal their open types are equal their default, min, max and legal values are equal. This ensures that this equals method works properly for obj parameters which are different implementations of the OpenMBeanParameterInfo interface. If obj also implements DescriptorRead, then its getDescriptor() method must also return the same value as for this object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanParameterInfo.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/MBeanParameterInfo.html\" title\u003d\"class in javax.management\"\u003eMBeanParameterInfo\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html\" title\u003d\"interface in javax.management.openmbean\"\u003eOpenMBeanParameterInfo\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to be compared for equality with this \n\u003ccode\u003eOpenMBeanParameterInfoSupport\u003c/code\u003e instance."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified object is equal to this \n\u003ccode\u003eOpenMBeanParameterInfoSupport\u003c/code\u003e instance."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns the hash code value for this OpenMBeanParameterInfoSupport instance. The hash code of an OpenMBeanParameterInfoSupport instance is the sum of the hash codes of all elements of information used in equals comparisons (ie: its name, its open type, its default, min, max and legal values, and its Descriptor). This ensures that t1.equals(t2) implies that t1.hashCode()\u003d\u003dt2.hashCode() for any two OpenMBeanParameterInfoSupport instances t1 and t2, as required by the general contract of the method Object.hashCode(). However, note that another instance of a class implementing the OpenMBeanParameterInfo interface may be equal to this OpenMBeanParameterInfoSupport instance as defined by equals(java.lang.Object), but may have a different hash code if it is calculated differently. As OpenMBeanParameterInfoSupport instances are immutable, the hash code for this instance is calculated once, on the first call to hashCode, and then the same value is returned for subsequent calls.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html\" title\u003d\"interface in javax.management.openmbean\"\u003eOpenMBeanParameterInfo\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the hash code value for this \n\u003ccode\u003e OpenMBeanParameterInfoSupport\u003c/code\u003e instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of this OpenMBeanParameterInfoSupport instance. The string representation consists of the name of this class (i.e. javax.management.openmbean.OpenMBeanParameterInfoSupport), the string representation of the name and open type of the described parameter, the string representation of its default, min, max and legal values and the string representation of its descriptor. As OpenMBeanParameterInfoSupport instances are immutable, the string representation for this instance is calculated once, on the first call to toString, and then the same value is returned for subsequent calls.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenMBeanParameterInfo.html\" title\u003d\"interface in javax.management.openmbean\"\u003eOpenMBeanParameterInfo\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this \n\u003ccode\u003eOpenMBeanParameterInfoSupport\u003c/code\u003e instance."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        },
        {
          "type": {
            "name": "javax.management.openmbean.OpenType",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "openType"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an OpenMBeanParameterInfoSupport instance, which describes the parameter used in one or more operations or constructors of a class of open MBeans, with the specified name, openType and description.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - cannot be a null or empty string.",
          "\u003ccode\u003edescription\u003c/code\u003e - cannot be a null or empty string.",
          "\u003ccode\u003eopenType\u003c/code\u003e - cannot be null."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e or \n\u003ccode\u003e description\u003c/code\u003e are null or empty string, or \n\u003ccode\u003eopenType\u003c/code\u003e is null."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        },
        {
          "type": {
            "name": "javax.management.openmbean.OpenType",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "openType"
          }
        },
        {
          "type": {
            "name": "javax.management.Descriptor",
            "type": "Class"
          },
          "field": {
            "name": "descriptor"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an OpenMBeanParameterInfoSupport instance, which describes the parameter used in one or more operations or constructors of a class of open MBeans, with the specified name, openType, description, and descriptor. The descriptor can contain entries that will define the values returned by certain methods of this class, as explained in the package description.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - cannot be a null or empty string.",
          "\u003ccode\u003edescription\u003c/code\u003e - cannot be a null or empty string.",
          "\u003ccode\u003eopenType\u003c/code\u003e - cannot be null.",
          "\u003ccode\u003edescriptor\u003c/code\u003e - The descriptor for the parameter. This may be null which is equivalent to an empty descriptor."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e or \n\u003ccode\u003e description\u003c/code\u003e are null or empty string, or \n\u003ccode\u003eopenType\u003c/code\u003e is null, or the descriptor entries are invalid as described in the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/package-summary.html#constraints\"\u003epackage description\u003c/a\u003e."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.management.openmbean.OpenDataException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        },
        {
          "type": {
            "name": "javax.management.openmbean.OpenType",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "openType"
          }
        },
        {
          "type": {
            "name": "T",
            "type": "Class"
          },
          "field": {
            "name": "defaultValue"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an OpenMBeanParameterInfoSupport instance, which describes the parameter used in one or more operations or constructors of a class of open MBeans, with the specified name, openType, description and defaultValue.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - allows the compiler to check that the \n\u003ccode\u003edefaultValue\u003c/code\u003e, if non-null, has the correct Java type for the given \n\u003ccode\u003eopenType\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - cannot be a null or empty string.",
          "\u003ccode\u003edescription\u003c/code\u003e - cannot be a null or empty string.",
          "\u003ccode\u003eopenType\u003c/code\u003e - cannot be null.",
          "\u003ccode\u003edefaultValue\u003c/code\u003e - must be a valid value for the \n\u003ccode\u003e openType\u003c/code\u003e specified for this parameter; default value not supported for \n\u003ccode\u003eArrayType\u003c/code\u003e and \n\u003ccode\u003eTabularType\u003c/code\u003e; can be null, in which case it means that no default value is set."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e or \n\u003ccode\u003e description\u003c/code\u003e are null or empty string, or \n\u003ccode\u003eopenType\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenDataException.html\" title\u003d\"class in javax.management.openmbean\"\u003eOpenDataException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edefaultValue\u003c/code\u003e is not a valid value for the specified \n\u003ccode\u003eopenType\u003c/code\u003e, or \n\u003ccode\u003e defaultValue\u003c/code\u003e is non null and \n\u003ccode\u003eopenType\u003c/code\u003e is an \n\u003ccode\u003e ArrayType\u003c/code\u003e or a \n\u003ccode\u003eTabularType\u003c/code\u003e."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.management.openmbean.OpenDataException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        },
        {
          "type": {
            "name": "javax.management.openmbean.OpenType",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "openType"
          }
        },
        {
          "type": {
            "name": "T",
            "type": "Class"
          },
          "field": {
            "name": "defaultValue"
          }
        },
        {
          "type": {
            "name": "T",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "legalValues"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an OpenMBeanParameterInfoSupport instance, which describes the parameter used in one or more operations or constructors of a class of open MBeans, with the specified name, openType, description, defaultValue and legalValues. The contents of legalValues are copied, so subsequent modifications of the array referenced by legalValues have no impact on this OpenMBeanParameterInfoSupport instance.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - allows the compiler to check that the \n\u003ccode\u003e defaultValue\u003c/code\u003e and \n\u003ccode\u003elegalValues\u003c/code\u003e, if non-null, have the correct Java type for the given \n\u003ccode\u003eopenType\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - cannot be a null or empty string.",
          "\u003ccode\u003edescription\u003c/code\u003e - cannot be a null or empty string.",
          "\u003ccode\u003eopenType\u003c/code\u003e - cannot be null.",
          "\u003ccode\u003edefaultValue\u003c/code\u003e - must be a valid value for the \n\u003ccode\u003e openType\u003c/code\u003e specified for this parameter; default value not supported for \n\u003ccode\u003eArrayType\u003c/code\u003e and \n\u003ccode\u003eTabularType\u003c/code\u003e; can be null, in which case it means that no default value is set.",
          "\u003ccode\u003elegalValues\u003c/code\u003e - each contained value must be valid for the \n\u003ccode\u003eopenType\u003c/code\u003e specified for this parameter; legal values not supported for \n\u003ccode\u003eArrayType\u003c/code\u003e and \n\u003ccode\u003eTabularType\u003c/code\u003e; can be null or empty."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e or \n\u003ccode\u003e description\u003c/code\u003e are null or empty string, or \n\u003ccode\u003eopenType\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenDataException.html\" title\u003d\"class in javax.management.openmbean\"\u003eOpenDataException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edefaultValue\u003c/code\u003e is not a valid value for the specified \n\u003ccode\u003eopenType\u003c/code\u003e, or one value in \n\u003ccode\u003elegalValues\u003c/code\u003e is not valid for the specified \n\u003ccode\u003e openType\u003c/code\u003e, or \n\u003ccode\u003edefaultValue\u003c/code\u003e is non null and \n\u003ccode\u003e openType\u003c/code\u003e is an \n\u003ccode\u003eArrayType\u003c/code\u003e or a \n\u003ccode\u003eTabularType\u003c/code\u003e, or \n\u003ccode\u003elegalValues\u003c/code\u003e is non null and non empty and \n\u003ccode\u003e openType\u003c/code\u003e is an \n\u003ccode\u003eArrayType\u003c/code\u003e or a \n\u003ccode\u003eTabularType\u003c/code\u003e, or \n\u003ccode\u003elegalValues\u003c/code\u003e is non null and non empty and \n\u003ccode\u003e defaultValue\u003c/code\u003e is not contained in \n\u003ccode\u003elegalValues\u003c/code\u003e."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.management.openmbean.OpenDataException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        },
        {
          "type": {
            "name": "javax.management.openmbean.OpenType",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "openType"
          }
        },
        {
          "type": {
            "name": "T",
            "type": "Class"
          },
          "field": {
            "name": "defaultValue"
          }
        },
        {
          "type": {
            "name": "java.lang.Comparable",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "minValue"
          }
        },
        {
          "type": {
            "name": "java.lang.Comparable",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "maxValue"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an OpenMBeanParameterInfoSupport instance, which describes the parameter used in one or more operations or constructors of a class of open MBeans, with the specified name, openType, description, defaultValue, minValue and maxValue. It is possible to specify minimal and maximal values only for an open type whose values are Comparable.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - allows the compiler to check that the \n\u003ccode\u003e defaultValue\u003c/code\u003e, \n\u003ccode\u003eminValue\u003c/code\u003e, and \n\u003ccode\u003emaxValue\u003c/code\u003e, if non-null, have the correct Java type for the given \n\u003ccode\u003e openType\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - cannot be a null or empty string.",
          "\u003ccode\u003edescription\u003c/code\u003e - cannot be a null or empty string.",
          "\u003ccode\u003eopenType\u003c/code\u003e - cannot be null.",
          "\u003ccode\u003edefaultValue\u003c/code\u003e - must be a valid value for the \n\u003ccode\u003e openType\u003c/code\u003e specified for this parameter; default value not supported for \n\u003ccode\u003eArrayType\u003c/code\u003e and \n\u003ccode\u003eTabularType\u003c/code\u003e; can be null, in which case it means that no default value is set.",
          "\u003ccode\u003eminValue\u003c/code\u003e - must be valid for the \n\u003ccode\u003eopenType\u003c/code\u003e specified for this parameter; can be null, in which case it means that no minimal value is set.",
          "\u003ccode\u003emaxValue\u003c/code\u003e - must be valid for the \n\u003ccode\u003eopenType\u003c/code\u003e specified for this parameter; can be null, in which case it means that no maximal value is set."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e or \n\u003ccode\u003e description\u003c/code\u003e are null or empty string, or \n\u003ccode\u003eopenType\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/openmbean/OpenDataException.html\" title\u003d\"class in javax.management.openmbean\"\u003eOpenDataException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edefaultValue\u003c/code\u003e, \n\u003ccode\u003e minValue\u003c/code\u003e or \n\u003ccode\u003emaxValue\u003c/code\u003e is not a valid value for the specified \n\u003ccode\u003eopenType\u003c/code\u003e, or \n\u003ccode\u003edefaultValue\u003c/code\u003e is non null and \n\u003ccode\u003eopenType\u003c/code\u003e is an \n\u003ccode\u003eArrayType\u003c/code\u003e or a \n\u003ccode\u003e TabularType\u003c/code\u003e, or both \n\u003ccode\u003eminValue\u003c/code\u003e and \n\u003ccode\u003emaxValue\u003c/code\u003e are non-null and \n\u003ccode\u003eminValue.compareTo(maxValue) \u0026gt; 0\u003c/code\u003e is \n\u003ccode\u003e true\u003c/code\u003e, or both \n\u003ccode\u003edefaultValue\u003c/code\u003e and \n\u003ccode\u003eminValue\u003c/code\u003e are non-null and \n\u003ccode\u003eminValue.compareTo(defaultValue) \u0026gt; 0\u003c/code\u003e is \n\u003ccode\u003etrue\u003c/code\u003e, or both \n\u003ccode\u003edefaultValue\u003c/code\u003e and \n\u003ccode\u003emaxValue\u003c/code\u003e are non-null and \n\u003ccode\u003edefaultValue.compareTo(maxValue) \u0026gt; 0\u003c/code\u003e is \n\u003ccode\u003etrue\u003c/code\u003e."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.openmbean.OpenMBeanParameterInfoSupport",
  "comment": "Describes a parameter used in one or more operations or constructors of an open MBean.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.management.openmbean.OpenMBeanParameterInfoSupport\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}