{
  "packageName": "java.sql",
  "simpleName": "Struct",
  "moduleName": "java.sql",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSQLTypeName",
      "comment": "Retrieves the SQL type name of the SQL structured type that this Struct object represents.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "the fully-qualified type name of the SQL structured type for which this \n\u003ccode\u003eStruct\u003c/code\u003e object is the generic representation"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAttributes",
      "comment": "Produces the ordered values of the attributes of the SQL structured type that this Struct object represents. As individual attributes are processed, this method uses the type map associated with the connection for customizations of the type mappings. If there is no entry in the connection\u0027s type map that matches the structured type that an attribute represents, the driver uses the standard mapping. Conceptually, this method calls the method getObject on each attribute of the structured type and returns a Java array containing the result.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "an array containing the ordered attribute values"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "name": "java.lang.Class",
                "parameters": [
                  {
                    "type": "Wildcard"
                  }
                ],
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "map"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAttributes",
      "comment": "Produces the ordered values of the attributes of the SQL structured type that this Struct object represents. As individual attributes are processed, this method uses the given type map for customizations of the type mappings. If there is no entry in the given type map that matches the structured type that an attribute represents, the driver uses the standard mapping. This method never uses the type map associated with the connection. Conceptually, this method calls the method getObject on each attribute of the structured type and returns a Java array containing the result.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emap\u003c/code\u003e - a mapping of SQL type names to Java classes"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "an array containing the ordered attribute values"
        ],
        "since": [
          "1.2"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.sql.Struct",
  "comment": "\u003cp\u003eThe standard mapping in the Java programming language for an SQL structured type. A \u003ccode\u003eStruct\u003c/code\u003e object contains a value for each attribute of the SQL structured type that it represents. By default, an instance of\u003ccode\u003eStruct\u003c/code\u003e is valid as long as the application has a reference to it. \u003c/p\u003e\n\u003cp\u003e All methods on the \u003ccode\u003eStruct\u003c/code\u003e interface must be fully implemented if the JDBC driver supports the data type.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.2"
    ]
  }
}