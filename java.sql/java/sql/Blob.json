{
  "packageName": "java.sql",
  "simpleName": "Blob",
  "moduleName": "java.sql",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "length",
      "comment": "Returns the number of bytes in the BLOB value designated by this Blob object.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the length of the \n\u003ccode\u003eBLOB\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "length of the \n\u003ccode\u003eBLOB\u003c/code\u003e in bytes"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "length"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBytes",
      "comment": "Retrieves all or part of the BLOB value that this Blob object represents, as an array of bytes. This byte array contains up to length consecutive bytes starting at position pos.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#setBytes(long,byte%5B%5D)\"\u003e\u003ccode\u003esetBytes(long, byte[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the ordinal position of the first byte in the \n\u003ccode\u003eBLOB\u003c/code\u003e value to be extracted; the first byte is at position 1",
          "\u003ccode\u003elength\u003c/code\u003e - the number of consecutive bytes to be copied; the value for length must be 0 or greater"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eBLOB\u003c/code\u003e value; if pos is less than 1 or length is less than 0",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "a byte array containing up to \n\u003ccode\u003elength\u003c/code\u003e consecutive bytes from the \n\u003ccode\u003eBLOB\u003c/code\u003e value designated by this \n\u003ccode\u003eBlob\u003c/code\u003e object, starting with the byte at position \n\u003ccode\u003epos\u003c/code\u003e"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.InputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBinaryStream",
      "comment": "Retrieves the BLOB value designated by this Blob instance as a stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#setBinaryStream(long)\"\u003e\u003ccode\u003esetBinaryStream(long)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eBLOB\u003c/code\u003e value",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "a stream containing the \n\u003ccode\u003eBLOB\u003c/code\u003e data"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "pattern"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "start"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "position",
      "comment": "Retrieves the byte position at which the specified byte array pattern begins within the BLOB value that this Blob object represents. The search for pattern begins at position start.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epattern\u003c/code\u003e - the byte array for which to search",
          "\u003ccode\u003estart\u003c/code\u003e - the position at which to begin searching; the first position is 1"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eBLOB\u003c/code\u003e or if start is less than 1",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "the position at which the pattern appears, else -1"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.sql.Blob",
            "type": "Class"
          },
          "field": {
            "name": "pattern"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "start"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "position",
      "comment": "Retrieves the byte position in the BLOB value designated by this Blob object at which pattern begins. The search begins at position start.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epattern\u003c/code\u003e - the \n\u003ccode\u003eBlob\u003c/code\u003e object designating the \n\u003ccode\u003eBLOB\u003c/code\u003e value for which to search",
          "\u003ccode\u003estart\u003c/code\u003e - the position in the \n\u003ccode\u003eBLOB\u003c/code\u003e value at which to begin searching; the first position is 1"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eBLOB\u003c/code\u003e value or if start is less than 1",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "the position at which the pattern begins, else -1"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "bytes"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setBytes",
      "comment": "Writes the given array of bytes to the BLOB value that this Blob object represents, starting at position pos, and returns the number of bytes written. The array of bytes will overwrite the existing bytes in the Blob object starting at the position pos. If the end of the Blob value is reached while writing the array of bytes, then the length of the Blob value will be increased to accommodate the extra bytes. Note: If the value specified for pos is greater than the length+1 of the BLOB value then the behavior is undefined. Some JDBC drivers may throw an SQLException while other drivers may support this operation.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#getBytes(long,int)\"\u003e\u003ccode\u003egetBytes(long, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position in the \n\u003ccode\u003eBLOB\u003c/code\u003e object at which to start writing; the first position is 1",
          "\u003ccode\u003ebytes\u003c/code\u003e - the array of bytes to be written to the \n\u003ccode\u003eBLOB\u003c/code\u003e value that this \n\u003ccode\u003eBlob\u003c/code\u003e object represents"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eBLOB\u003c/code\u003e value or if pos is less than 1",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "the number of bytes written"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "bytes"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offset"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "len"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setBytes",
      "comment": "Writes all or part of the given byte array to the BLOB value that this Blob object represents and returns the number of bytes written. Writing starts at position pos in the BLOB value; len bytes from the given byte array are written. The array of bytes will overwrite the existing bytes in the Blob object starting at the position pos. If the end of the Blob value is reached while writing the array of bytes, then the length of the Blob value will be increased to accommodate the extra bytes. Note: If the value specified for pos is greater than the length+1 of the BLOB value then the behavior is undefined. Some JDBC drivers may throw an SQLException while other drivers may support this operation.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#getBytes(long,int)\"\u003e\u003ccode\u003egetBytes(long, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position in the \n\u003ccode\u003eBLOB\u003c/code\u003e object at which to start writing; the first position is 1",
          "\u003ccode\u003ebytes\u003c/code\u003e - the array of bytes to be written to this \n\u003ccode\u003eBLOB\u003c/code\u003e object",
          "\u003ccode\u003eoffset\u003c/code\u003e - the offset into the array \n\u003ccode\u003ebytes\u003c/code\u003e at which to start reading the bytes to be set",
          "\u003ccode\u003elen\u003c/code\u003e - the number of bytes to be written to the \n\u003ccode\u003eBLOB\u003c/code\u003e value from the array of bytes \n\u003ccode\u003ebytes\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eBLOB\u003c/code\u003e value or if pos is less than 1",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "the number of bytes written"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.OutputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setBinaryStream",
      "comment": "Retrieves a stream that can be used to write to the BLOB value that this Blob object represents. The stream begins at position pos. The bytes written to the stream will overwrite the existing bytes in the Blob object starting at the position pos. If the end of the Blob value is reached while writing to the stream, then the length of the Blob value will be increased to accommodate the extra bytes. Note: If the value specified for pos is greater than the length+1 of the BLOB value then the behavior is undefined. Some JDBC drivers may throw an SQLException while other drivers may support this operation.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#getBinaryStream()\"\u003e\u003ccode\u003egetBinaryStream()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position in the \n\u003ccode\u003eBLOB\u003c/code\u003e value at which to start writing; the first position is 1"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eBLOB\u003c/code\u003e value or if pos is less than 1",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "a \n\u003ccode\u003ejava.io.OutputStream\u003c/code\u003e object to which data can be written"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "len"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "truncate",
      "comment": "Truncates the BLOB value that this Blob object represents to be len bytes in length. Note: If the value specified for pos is greater than the length+1 of the BLOB value then the behavior is undefined. Some JDBC drivers may throw an SQLException while other drivers may support this operation.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elen\u003c/code\u003e - the length, in bytes, to which the \n\u003ccode\u003eBLOB\u003c/code\u003e value that this \n\u003ccode\u003eBlob\u003c/code\u003e object represents should be truncated"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eBLOB\u003c/code\u003e value or if len is less than 0",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "free",
      "comment": "This method frees the Blob object and releases the resources that it holds. The object is invalid once the free method is called. After free has been called, any attempt to invoke a method other than free will result in an SQLException being thrown. If free is called multiple times, the subsequent calls to free are treated as a no-op.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if an error occurs releasing the Blob\u0027s resources",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.InputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "length"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBinaryStream",
      "comment": "Returns an InputStream object that contains a partial Blob value, starting with the byte specified by pos, which is length bytes in length.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the offset to the first byte of the partial value to be retrieved. The first byte in the \n\u003ccode\u003eBlob\u003c/code\u003e is at position 1.",
          "\u003ccode\u003elength\u003c/code\u003e - the length in bytes of the partial value to be retrieved"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if pos is less than 1 or if pos is greater than the number of bytes in the \n\u003ccode\u003eBlob\u003c/code\u003e or if pos + length is greater than the number of bytes in the \n\u003ccode\u003eBlob\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "\u003ccode\u003eInputStream\u003c/code\u003e through which the partial \n\u003ccode\u003eBlob\u003c/code\u003e value can be read."
        ],
        "since": [
          "1.6"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.sql.Blob",
  "comment": "The representation (mapping) in the Java programming language of an SQL \n\u003ccode\u003eBLOB\u003c/code\u003e value. An SQL \n\u003ccode\u003eBLOB\u003c/code\u003e is a built-in type that stores a Binary Large Object as a column value in a row of a database table. By default drivers implement \n\u003ccode\u003eBlob\u003c/code\u003e using an SQL \n\u003ccode\u003elocator(BLOB)\u003c/code\u003e, which means that a \n\u003ccode\u003eBlob\u003c/code\u003e object contains a logical pointer to the SQL \n\u003ccode\u003eBLOB\u003c/code\u003e data rather than the data itself. A \n\u003ccode\u003eBlob\u003c/code\u003e object is valid for the duration of the transaction in which is was created. \n\u003cp\u003eMethods in the interfaces \u003ca href\u003d\"ResultSet.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003eResultSet\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"CallableStatement.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003eCallableStatement\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"PreparedStatement.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003ePreparedStatement\u003c/code\u003e\u003c/a\u003e, such as \u003ccode\u003egetBlob\u003c/code\u003e and \u003ccode\u003esetBlob\u003c/code\u003e allow a programmer to access an SQL \u003ccode\u003eBLOB\u003c/code\u003e value. The \u003ccode\u003eBlob\u003c/code\u003e interface provides methods for getting the length of an SQL \u003ccode\u003eBLOB\u003c/code\u003e (Binary Large Object) value, for materializing a \u003ccode\u003eBLOB\u003c/code\u003e value on the client, and for determining the position of a pattern of bytes within a \u003ccode\u003eBLOB\u003c/code\u003e value. In addition, this interface has methods for updating a \u003ccode\u003eBLOB\u003c/code\u003e value. \u003c/p\u003e\n\u003cp\u003e All methods on the \u003ccode\u003eBlob\u003c/code\u003e interface must be fully implemented if the JDBC driver supports the data type.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.2"
    ]
  }
}