{
  "packageName": "java.sql",
  "simpleName": "Ref",
  "moduleName": "java.sql",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBaseTypeName",
      "comment": "Retrieves the fully-qualified SQL name of the SQL structured type that this Ref object references.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "the fully-qualified SQL name of the referenced SQL structured type"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "name": "java.lang.Class",
                "parameters": [
                  {
                    "type": "Wildcard"
                  }
                ],
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "map"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getObject",
      "comment": "Retrieves the referenced object and maps it to a Java type using the given type map.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Ref.html#setObject(java.lang.Object)\"\u003e\u003ccode\u003esetObject(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003emap\u003c/code\u003e - a \n\u003ccode\u003ejava.util.Map\u003c/code\u003e object that contains the mapping to use (the fully-qualified name of the SQL structured type being referenced and the class object for \n\u003ccode\u003eSQLData\u003c/code\u003e implementation to which the SQL structured type will be mapped)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "a Java \n\u003ccode\u003eObject\u003c/code\u003e that is the custom mapping for the SQL structured type to which this \n\u003ccode\u003eRef\u003c/code\u003e object refers"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getObject",
      "comment": "Retrieves the SQL structured type instance referenced by this Ref object. If the connection\u0027s type map has an entry for the structured type, the instance will be custom mapped to the Java class indicated in the type map. Otherwise, the structured type instance will be mapped to a Struct object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Ref.html#setObject(java.lang.Object)\"\u003e\u003ccode\u003esetObject(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "a Java \n\u003ccode\u003eObject\u003c/code\u003e that is the mapping for the SQL structured type to which this \n\u003ccode\u003eRef\u003c/code\u003e object refers"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setObject",
      "comment": "Sets the structured type value that this Ref object references to the given instance of Object. The driver converts this to an SQL structured type when it sends it to the database.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Ref.html#getObject()\"\u003e\u003ccode\u003egetObject()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Ref.html#getObject(java.util.Map)\"\u003e\u003ccode\u003egetObject(Map)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/PreparedStatement.html#setObject(int,java.lang.Object)\"\u003e\u003ccode\u003ePreparedStatement.setObject(int, Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/CallableStatement.html#setObject(java.lang.String,java.lang.Object)\"\u003e\u003ccode\u003eCallableStatement.setObject(String, Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - an \n\u003ccode\u003eObject\u003c/code\u003e representing the SQL structured type instance that this \n\u003ccode\u003eRef\u003c/code\u003e object will reference"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "since": [
          "1.4"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.sql.Ref",
  "comment": "The mapping in the Java programming language of an SQL \n\u003ccode\u003eREF\u003c/code\u003e value, which is a reference to an SQL structured type value in the database. \n\u003cp\u003e SQL \u003ccode\u003eREF\u003c/code\u003e values are stored in a table that contains instances of a referenceable SQL structured type, and each \u003ccode\u003eREF\u003c/code\u003e value is a unique identifier for one instance in that table. An SQL \u003ccode\u003eREF\u003c/code\u003e value may be used in place of the SQL structured type it references, either as a column value in a table or an attribute value in a structured type. \u003c/p\u003e\n\u003cp\u003e Because an SQL \u003ccode\u003eREF\u003c/code\u003e value is a logical pointer to an SQL structured type, a \u003ccode\u003eRef\u003c/code\u003e object is by default also a logical pointer. Thus, retrieving an SQL \u003ccode\u003eREF\u003c/code\u003e value as a \u003ccode\u003eRef\u003c/code\u003e object does not materialize the attributes of the structured type on the client. \u003c/p\u003e\n\u003cp\u003e A \u003ccode\u003eRef\u003c/code\u003e object can be stored in the database using the \u003ccode\u003ePreparedStatement.setRef\u003c/code\u003e method. \u003c/p\u003e\n\u003cp\u003e All methods on the \u003ccode\u003eRef\u003c/code\u003e interface must be fully implemented if the JDBC driver supports the data type.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Struct.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003eStruct\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}