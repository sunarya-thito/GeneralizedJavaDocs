{
  "packageName": "java.sql",
  "simpleName": "Clob",
  "moduleName": "java.sql",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "length",
      "comment": "Retrieves the number of characters in the CLOB value designated by this Clob object.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the length of the \n\u003ccode\u003eCLOB\u003c/code\u003e value",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "length of the \n\u003ccode\u003eCLOB\u003c/code\u003e in characters"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSubString",
      "comment": "Retrieves a copy of the specified substring in the CLOB value designated by this Clob object. The substring begins at position pos and has up to length consecutive characters.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the first character of the substring to be extracted. The first character is at position 1.",
          "\u003ccode\u003elength\u003c/code\u003e - the number of consecutive characters to be copied; the value for length must be 0 or greater"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value; if pos is less than 1 or length is less than 0",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e that is the specified substring in the \n\u003ccode\u003eCLOB\u003c/code\u003e value designated by this \n\u003ccode\u003eClob\u003c/code\u003e object"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.Reader",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCharacterStream",
      "comment": "Retrieves the CLOB value designated by this Clob object as a java.io.Reader object (or as a stream of characters).",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#setCharacterStream(long)\"\u003e\u003ccode\u003esetCharacterStream(long)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "a \n\u003ccode\u003ejava.io.Reader\u003c/code\u003e object containing the \n\u003ccode\u003eCLOB\u003c/code\u003e data"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.InputStream",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAsciiStream",
      "comment": "Retrieves the CLOB value designated by this Clob object as an ascii stream.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#setAsciiStream(long)\"\u003e\u003ccode\u003esetAsciiStream(long)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "a \n\u003ccode\u003ejava.io.InputStream\u003c/code\u003e object containing the \n\u003ccode\u003eCLOB\u003c/code\u003e data"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "position",
      "comment": "Retrieves the character position at which the specified substring searchstr appears in the SQL CLOB value represented by this Clob object. The search begins at position start.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003esearchstr\u003c/code\u003e - the substring for which to search",
          "\u003ccode\u003estart\u003c/code\u003e - the position at which to begin searching; the first position is 1"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value or if pos is less than 1",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "the position at which the substring appears or -1 if it is not present; the first position is 1"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "position",
      "comment": "Retrieves the character position at which the specified Clob object searchstr appears in this Clob object. The search begins at position start.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003esearchstr\u003c/code\u003e - the \n\u003ccode\u003eClob\u003c/code\u003e object for which to search",
          "\u003ccode\u003estart\u003c/code\u003e - the position at which to begin searching; the first position is 1"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value or if start is less than 1",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "the position at which the \n\u003ccode\u003eClob\u003c/code\u003e object appears or -1 if it is not present; the first position is 1"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setString",
      "comment": "Writes the given Java String to the CLOB value that this Clob object designates at the position pos. The string will overwrite the existing characters in the Clob object starting at the position pos. If the end of the Clob value is reached while writing the given string, then the length of the Clob value will be increased to accommodate the extra characters. Note: If the value specified for pos is greater than the length+1 of the CLOB value then the behavior is undefined. Some JDBC drivers may throw an SQLException while other drivers may support this operation.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position at which to start writing to the \n\u003ccode\u003eCLOB\u003c/code\u003e value that this \n\u003ccode\u003eClob\u003c/code\u003e object represents; the first position is 1.",
          "\u003ccode\u003estr\u003c/code\u003e - the string to be written to the \n\u003ccode\u003eCLOB\u003c/code\u003e value that this \n\u003ccode\u003eClob\u003c/code\u003e designates"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value or if pos is less than 1",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "the number of characters written"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setString",
      "comment": "Writes len characters of str, starting at character offset, to the CLOB value that this Clob represents. The string will overwrite the existing characters in the Clob object starting at the position pos. If the end of the Clob value is reached while writing the given string, then the length of the Clob value will be increased to accommodate the extra characters. Note: If the value specified for pos is greater than the length+1 of the CLOB value then the behavior is undefined. Some JDBC drivers may throw an SQLException while other drivers may support this operation.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position at which to start writing to this \n\u003ccode\u003eCLOB\u003c/code\u003e object; The first position is 1",
          "\u003ccode\u003estr\u003c/code\u003e - the string to be written to the \n\u003ccode\u003eCLOB\u003c/code\u003e value that this \n\u003ccode\u003eClob\u003c/code\u003e object represents",
          "\u003ccode\u003eoffset\u003c/code\u003e - the offset into \n\u003ccode\u003estr\u003c/code\u003e to start reading the characters to be written",
          "\u003ccode\u003elen\u003c/code\u003e - the number of characters to be written"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value or if pos is less than 1",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "the number of characters written"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.OutputStream",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setAsciiStream",
      "comment": "Retrieves a stream to be used to write Ascii characters to the CLOB value that this Clob object represents, starting at position pos. Characters written to the stream will overwrite the existing characters in the Clob object starting at the position pos. If the end of the Clob value is reached while writing characters to the stream, then the length of the Clob value will be increased to accommodate the extra characters. Note: If the value specified for pos is greater than the length+1 of the CLOB value then the behavior is undefined. Some JDBC drivers may throw an SQLException while other drivers may support this operation.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#getAsciiStream()\"\u003e\u003ccode\u003egetAsciiStream()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position at which to start writing to this \n\u003ccode\u003eCLOB\u003c/code\u003e object; The first position is 1"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value or if pos is less than 1",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "the stream to which ASCII encoded characters can be written"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.Writer",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setCharacterStream",
      "comment": "Retrieves a stream to be used to write a stream of Unicode characters to the CLOB value that this Clob object represents, at position pos. Characters written to the stream will overwrite the existing characters in the Clob object starting at the position pos. If the end of the Clob value is reached while writing characters to the stream, then the length of the Clob value will be increased to accommodate the extra characters. Note: If the value specified for pos is greater than the length+1 of the CLOB value then the behavior is undefined. Some JDBC drivers may throw an SQLException while other drivers may support this operation.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#getCharacterStream()\"\u003e\u003ccode\u003egetCharacterStream()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position at which to start writing to the \n\u003ccode\u003eCLOB\u003c/code\u003e value; The first position is 1"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value or if pos is less than 1",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "a stream to which Unicode encoded characters can be written"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "truncate",
      "comment": "Truncates the CLOB value that this Clob designates to have a length of len characters. Note: If the value specified for pos is greater than the length+1 of the CLOB value then the behavior is undefined. Some JDBC drivers may throw an SQLException while other drivers may support this operation.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elen\u003c/code\u003e - the length, in characters, to which the \n\u003ccode\u003eCLOB\u003c/code\u003e value should be truncated"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value or if len is less than 0",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "free",
      "comment": "This method releases the resources that the Clob object holds. The object is invalid once the free method is called. After free has been called, any attempt to invoke a method other than free will result in a SQLException being thrown. If free is called multiple times, the subsequent calls to free are treated as a no-op.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if an error occurs releasing the Clob\u0027s resources",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.Reader",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCharacterStream",
      "comment": "Returns a Reader object that contains a partial Clob value, starting with the character specified by pos, which is length characters in length.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the offset to the first character of the partial value to be retrieved. The first character in the Clob is at position 1.",
          "\u003ccode\u003elength\u003c/code\u003e - the length in characters of the partial value to be retrieved."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if pos is less than 1; or if pos is greater than the number of characters in the \n\u003ccode\u003eClob\u003c/code\u003e; or if pos + length is greater than the number of characters in the \n\u003ccode\u003eClob\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the JDBC driver does not support this method"
        ],
        "return": [
          "\u003ccode\u003eReader\u003c/code\u003e through which the partial \n\u003ccode\u003eClob\u003c/code\u003e value can be read."
        ],
        "since": [
          "1.6"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.sql.Clob",
  "comment": "The mapping in the Java programming language for the SQL \n\u003ccode\u003eCLOB\u003c/code\u003e type. An SQL \n\u003ccode\u003eCLOB\u003c/code\u003e is a built-in type that stores a Character Large Object as a column value in a row of a database table. By default drivers implement a \n\u003ccode\u003eClob\u003c/code\u003e object using an SQL \n\u003ccode\u003elocator(CLOB)\u003c/code\u003e, which means that a \n\u003ccode\u003eClob\u003c/code\u003e object contains a logical pointer to the SQL \n\u003ccode\u003eCLOB\u003c/code\u003e data rather than the data itself. A \n\u003ccode\u003eClob\u003c/code\u003e object is valid for the duration of the transaction in which it was created. \n\u003cp\u003eThe \u003ccode\u003eClob\u003c/code\u003e interface provides methods for getting the length of an SQL \u003ccode\u003eCLOB\u003c/code\u003e (Character Large Object) value, for materializing a \u003ccode\u003eCLOB\u003c/code\u003e value on the client, and for searching for a substring or \u003ccode\u003eCLOB\u003c/code\u003e object within a \u003ccode\u003eCLOB\u003c/code\u003e value. Methods in the interfaces \u003ca href\u003d\"ResultSet.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003eResultSet\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"CallableStatement.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003eCallableStatement\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"PreparedStatement.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003ePreparedStatement\u003c/code\u003e\u003c/a\u003e, such as \u003ccode\u003egetClob\u003c/code\u003e and \u003ccode\u003esetClob\u003c/code\u003e allow a programmer to access an SQL \u003ccode\u003eCLOB\u003c/code\u003e value. In addition, this interface has methods for updating a \u003ccode\u003eCLOB\u003c/code\u003e value. \u003c/p\u003e\n\u003cp\u003e All methods on the \u003ccode\u003eClob\u003c/code\u003e interface must be fully implemented if the JDBC driver supports the data type.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.2"
    ]
  }
}