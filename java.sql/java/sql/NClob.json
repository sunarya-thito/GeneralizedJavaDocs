{
  "packageName": "java.sql",
  "simpleName": "NClob",
  "moduleName": "java.sql",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.sql.Clob",
    "type": "Class"
  },
  "members": [],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.sql.NClob",
  "comment": "The mapping in the Java programming language for the SQL \n\u003ccode\u003eNCLOB\u003c/code\u003e type. An SQL \n\u003ccode\u003eNCLOB\u003c/code\u003e is a built-in type that stores a Character Large Object using the National Character Set as a column value in a row of a database table. \n\u003cp\u003eThe \u003ccode\u003eNClob\u003c/code\u003e interface extends the \u003ccode\u003eClob\u003c/code\u003e interface which provides methods for getting the length of an SQL \u003ccode\u003eNCLOB\u003c/code\u003e value, for materializing a \u003ccode\u003eNCLOB\u003c/code\u003e value on the client, and for searching for a substring or \u003ccode\u003eNCLOB\u003c/code\u003e object within a \u003ccode\u003eNCLOB\u003c/code\u003e value. A \u003ccode\u003eNClob\u003c/code\u003e object, just like a \u003ccode\u003eClob\u003c/code\u003e object, is valid for the duration of the transaction in which it was created. Methods in the interfaces \u003ca href\u003d\"ResultSet.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003eResultSet\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"CallableStatement.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003eCallableStatement\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"PreparedStatement.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003ePreparedStatement\u003c/code\u003e\u003c/a\u003e, such as \u003ccode\u003egetNClob\u003c/code\u003e and \u003ccode\u003esetNClob\u003c/code\u003e allow a programmer to access an SQL \u003ccode\u003eNCLOB\u003c/code\u003e value. In addition, this interface has methods for updating a \u003ccode\u003eNCLOB\u003c/code\u003e value. \u003c/p\u003e\n\u003cp\u003e All methods on the \u003ccode\u003eNClob\u003c/code\u003e interface must be fully implemented if the JDBC driver supports the data type.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}