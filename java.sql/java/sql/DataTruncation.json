{
  "packageName": "java.sql",
  "simpleName": "DataTruncation",
  "moduleName": "java.sql",
  "type": "CLASS",
  "superClass": {
    "name": "java.sql.SQLWarning",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIndex",
      "comment": "Retrieves the index of the column or parameter that was truncated. This may be -1 if the column or parameter index is unknown, in which case the parameter and read fields should be ignored.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the index of the truncated parameter or column value"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getParameter",
      "comment": "Indicates whether the value truncated was a parameter value or a column value.",
      "annotations": [],
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the value truncated was a parameter; \n\u003ccode\u003efalse\u003c/code\u003e if it was a column value"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRead",
      "comment": "Indicates whether or not the value was truncated on a read.",
      "annotations": [],
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the value was truncated when read from the database; \n\u003ccode\u003efalse\u003c/code\u003e if the data was truncated on a write"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDataSize",
      "comment": "Gets the number of bytes of data that should have been transferred. This number may be approximate if data conversions were being performed. The value may be -1 if the size is unknown.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the number of bytes of data that should have been transferred"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTransferSize",
      "comment": "Gets the number of bytes of data actually transferred. The value may be -1 if the size is unknown.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the number of bytes of data actually transferred"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "index",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "parameter",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "read",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "dataSize",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "transferSize",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a DataTruncation object with the SQLState initialized to 01004 when read is set to true and 22001 when read is set to false, the reason set to \"Data truncation\", the vendor code set to 0, and the other fields set to the given values. The cause is not initialized, and may subsequently be initialized by a call to the Throwable.initCause(java.lang.Throwable) method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - The index of the parameter or column value",
          "\u003ccode\u003eparameter\u003c/code\u003e - true if a parameter value was truncated",
          "\u003ccode\u003eread\u003c/code\u003e - true if a read was truncated",
          "\u003ccode\u003edataSize\u003c/code\u003e - the original size of the data",
          "\u003ccode\u003etransferSize\u003c/code\u003e - the size after truncation"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "index",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "parameter",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "read",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "dataSize",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "transferSize",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Throwable",
            "type": "Class"
          },
          "name": "cause",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a DataTruncation object with the SQLState initialized to 01004 when read is set to true and 22001 when read is set to false, the reason set to \"Data truncation\", the vendor code set to 0, and the other fields set to the given values.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - The index of the parameter or column value",
          "\u003ccode\u003eparameter\u003c/code\u003e - true if a parameter value was truncated",
          "\u003ccode\u003eread\u003c/code\u003e - true if a read was truncated",
          "\u003ccode\u003edataSize\u003c/code\u003e - the original size of the data",
          "\u003ccode\u003etransferSize\u003c/code\u003e - the size after truncation",
          "\u003ccode\u003ecause\u003c/code\u003e - the underlying reason for this \n\u003ccode\u003eDataTruncation\u003c/code\u003e (which is saved for later retrieval by the \n\u003ccode\u003egetCause()\u003c/code\u003e method); may be null indicating the cause is non-existent or unknown."
        ],
        "since": [
          "1.6"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.sql.DataTruncation",
  "comment": "An exception thrown as a \n\u003ccode\u003eDataTruncation\u003c/code\u003e exception (on writes) or reported as a \n\u003ccode\u003eDataTruncation\u003c/code\u003e warning (on reads) when a data values is unexpectedly truncated for reasons other than its having exceeded \n\u003ccode\u003eMaxFieldSize\u003c/code\u003e. \n\u003cp\u003eThe SQLstate for a \u003ccode\u003eDataTruncation\u003c/code\u003e during read is \u003ccode\u003e01004\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003eThe SQLstate for a \u003ccode\u003eDataTruncation\u003c/code\u003e during write is \u003ccode\u003e22001\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.sql.DataTruncation\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}