{
  "packageName": "java.sql",
  "simpleName": "DriverAction",
  "moduleName": "java.sql",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "deregister",
      "comment": "Method called by DriverManager.deregisterDriver(Driver) to notify the JDBC driver that it was de-registered. The deregister method is intended only to be used by JDBC Drivers and not by applications. JDBC drivers are recommended to not implement DriverAction in a public class. If there are active connections to the database at the time that the deregister method is called, it is implementation specific as to whether the connections are closed or allowed to continue. Once this method is called, it is implementation specific as to whether the driver may limit the ability to create new connections to the database, invoke other Driver methods or throw a SQLException. Consult your JDBC driver\u0027s documentation for additional information on its behavior.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DriverManager.html#registerDriver(java.sql.Driver,java.sql.DriverAction)\"\u003e\u003ccode\u003eDriverManager.registerDriver(java.sql.Driver, java.sql.DriverAction)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DriverManager.html#deregisterDriver(java.sql.Driver)\"\u003e\u003ccode\u003eDriverManager.deregisterDriver(Driver)\u003c/code\u003e\u003c/a\u003e"
        ],
        "since": [
          "1.8"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.sql.DriverAction",
  "annotations": [],
  "tagMap": {
    "since": [
      "1.8"
    ]
  }
}