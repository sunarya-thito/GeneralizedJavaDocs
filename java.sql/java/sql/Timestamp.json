{
  "packageName": "java.sql",
  "simpleName": "Timestamp",
  "moduleName": "java.sql",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.Date",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "time"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setTime",
      "comment": "Sets this Timestamp object to represent a point in time that is time milliseconds after January 1, 1970 00:00:00 GMT.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Timestamp.html#getTime()\"\u003e\u003ccode\u003egetTime()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Timestamp.html#%3Cinit%3E(long)\"\u003e\u003ccode\u003eTimestamp(long time)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eCalendar\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html#setTime(long)\"\u003esetTime\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html\" title\u003d\"class in java.util\"\u003eDate\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etime\u003c/code\u003e - the number of milliseconds."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTime",
      "comment": "Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT represented by this Timestamp object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Timestamp.html#setTime(long)\"\u003e\u003ccode\u003esetTime(long)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html#getTime()\"\u003egetTime\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html\" title\u003d\"class in java.util\"\u003eDate\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the number of milliseconds since January 1, 1970, 00:00:00 GMT represented by this date."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.Timestamp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "valueOf",
      "comment": "Converts a String object in JDBC timestamp escape format to a Timestamp value.",
      "tagMap": {
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - timestamp in format \n\u003ccode\u003eyyyy-[m]m-[d]d hh:mm:ss[.f...]\u003c/code\u003e. The fractional seconds may be omitted. The leading zero for \n\u003ccode\u003emm\u003c/code\u003e and \n\u003ccode\u003edd\u003c/code\u003e may also be omitted."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the given argument does not have the format \n\u003ccode\u003eyyyy-[m]m-[d]d hh:mm:ss[.f...]\u003c/code\u003e"
        ],
        "return": [
          "corresponding \n\u003ccode\u003eTimestamp\u003c/code\u003e value"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Formats a timestamp in JDBC timestamp escape format. yyyy-mm-dd hh:mm:ss.fffffffff, where fffffffff indicates nanoseconds.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html#toLocaleString()\"\u003e\u003ccode\u003eDate.toLocaleString()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html#toGMTString()\"\u003e\u003ccode\u003eDate.toGMTString()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html\" title\u003d\"class in java.util\"\u003eDate\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e object in \n\u003ccode\u003eyyyy-mm-dd hh:mm:ss.fffffffff\u003c/code\u003e format"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNanos",
      "comment": "Gets this Timestamp object\u0027s nanos value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Timestamp.html#setNanos(int)\"\u003e\u003ccode\u003esetNanos(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "this \n\u003ccode\u003eTimestamp\u003c/code\u003e object\u0027s fractional seconds component"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "n"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setNanos",
      "comment": "Sets this Timestamp object\u0027s nanos field to the given value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Timestamp.html#getNanos()\"\u003e\u003ccode\u003egetNanos()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003en\u003c/code\u003e - the new fractional seconds component"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the given argument is greater than 999999999 or less than 0"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.sql.Timestamp",
            "type": "Class"
          },
          "field": {
            "name": "ts"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Tests to see if this Timestamp object is equal to the given Timestamp object.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ets\u003c/code\u003e - the \n\u003ccode\u003eTimestamp\u003c/code\u003e value to compare with"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the given \n\u003ccode\u003eTimestamp\u003c/code\u003e object is equal to this \n\u003ccode\u003eTimestamp\u003c/code\u003e object; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "ts"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Tests to see if this Timestamp object is equal to the given object. This version of the method equals has been added to fix the incorrect signature of Timestamp.equals(Timestamp) and to preserve backward compatibility with existing class files. Note: This method is not symmetric with respect to the equals(Object) method in the base class.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html#getTime()\"\u003e\u003ccode\u003eDate.getTime()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html\" title\u003d\"class in java.util\"\u003eDate\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ets\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e value to compare with"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the given \n\u003ccode\u003eObject\u003c/code\u003e is an instance of a \n\u003ccode\u003eTimestamp\u003c/code\u003e that is equal to this \n\u003ccode\u003eTimestamp\u003c/code\u003e object; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.sql.Timestamp",
            "type": "Class"
          },
          "field": {
            "name": "ts"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "before",
      "comment": "Indicates whether this Timestamp object is earlier than the given Timestamp object.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ets\u003c/code\u003e - the \n\u003ccode\u003eTimestamp\u003c/code\u003e value to compare with"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this \n\u003ccode\u003eTimestamp\u003c/code\u003e object is earlier; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.sql.Timestamp",
            "type": "Class"
          },
          "field": {
            "name": "ts"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "after",
      "comment": "Indicates whether this Timestamp object is later than the given Timestamp object.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ets\u003c/code\u003e - the \n\u003ccode\u003eTimestamp\u003c/code\u003e value to compare with"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this \n\u003ccode\u003eTimestamp\u003c/code\u003e object is later; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.sql.Timestamp",
            "type": "Class"
          },
          "field": {
            "name": "ts"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "compareTo",
      "comment": "Compares this Timestamp object to the given Timestamp object.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ets\u003c/code\u003e - the \n\u003ccode\u003eTimestamp\u003c/code\u003e object to be compared to this \n\u003ccode\u003eTimestamp\u003c/code\u003e object"
        ],
        "return": [
          "the value \n\u003ccode\u003e0\u003c/code\u003e if the two \n\u003ccode\u003eTimestamp\u003c/code\u003e objects are equal; a value less than \n\u003ccode\u003e0\u003c/code\u003e if this \n\u003ccode\u003eTimestamp\u003c/code\u003e object is before the given argument; and a value greater than \n\u003ccode\u003e0\u003c/code\u003e if this \n\u003ccode\u003eTimestamp\u003c/code\u003e object is after the given argument."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Date",
            "type": "Class"
          },
          "field": {
            "name": "o"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "compareTo",
      "comment": "Compares this Timestamp object to the given Date object.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html#compareTo(java.util.Date)\"\u003ecompareTo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html\" title\u003d\"class in java.util\"\u003eDate\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html#compareTo(T)\"\u003ecompareTo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003eComparable\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html\" title\u003d\"class in java.util\"\u003eDate\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eo\u003c/code\u003e - the \n\u003ccode\u003eDate\u003c/code\u003e to be compared to this \n\u003ccode\u003eTimestamp\u003c/code\u003e object"
        ],
        "return": [
          "the value \n\u003ccode\u003e0\u003c/code\u003e if this \n\u003ccode\u003eTimestamp\u003c/code\u003e object and the given object are equal; a value less than \n\u003ccode\u003e0\u003c/code\u003e if this \n\u003ccode\u003eTimestamp\u003c/code\u003e object is before the given argument; and a value greater than \n\u003ccode\u003e0\u003c/code\u003e if this \n\u003ccode\u003eTimestamp\u003c/code\u003e object is after the given argument."
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns a hash code value for this object. The result is the exclusive OR of the two halves of the primitive long value returned by the Date.getTime() method. That is, the hash code is the value of the expression: \n (int)(this.getTime()^(this.getTime() \u003e\u003e\u003e 32))\n The hashCode method uses the underlying java.util.Date implementation and therefore does not include nanos in its computation.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html\" title\u003d\"class in java.util\"\u003eDate\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code value for this object."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.Timestamp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.time.LocalDateTime",
            "type": "Class"
          },
          "field": {
            "name": "dateTime"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "valueOf",
      "comment": "Obtains an instance of Timestamp from a LocalDateTime object, with the same year, month, day of month, hours, minutes, seconds and nanos date-time value as the provided LocalDateTime. The provided LocalDateTime is interpreted as the local date-time in the local time zone.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edateTime\u003c/code\u003e - a \n\u003ccode\u003eLocalDateTime\u003c/code\u003e to convert"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edateTime\u003c/code\u003e is null."
        ],
        "return": [
          "a \n\u003ccode\u003eTimestamp\u003c/code\u003e object"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.LocalDateTime",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toLocalDateTime",
      "comment": "Converts this Timestamp object to a LocalDateTime. The conversion creates a LocalDateTime that represents the same year, month, day of month, hours, minutes, seconds and nanos date-time value as this Timestamp in the local time zone.",
      "tagMap": {
        "return": [
          "a \n\u003ccode\u003eLocalDateTime\u003c/code\u003e object representing the same date-time value"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.Timestamp",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.time.Instant",
            "type": "Class"
          },
          "field": {
            "name": "instant"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "from",
      "comment": "Obtains an instance of Timestamp from an Instant object. Instant can store points on the time-line further in the future and further in the past than Date. In this scenario, this method will throw an exception.",
      "tagMap": {
        "param": [
          "\u003ccode\u003einstant\u003c/code\u003e - the instant to convert"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003einstant\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the instant is too large to represent as a \n\u003ccode\u003eTimestamp\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eTimestamp\u003c/code\u003e representing the same point on the time-line as the provided instant"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.Instant",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toInstant",
      "comment": "Converts this Timestamp object to an Instant. The conversion creates an Instant that represents the same point on the time-line as this Timestamp.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html#toInstant()\"\u003etoInstant\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Date.html\" title\u003d\"class in java.util\"\u003eDate\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an instant representing the same point on the time-line"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "year"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "month"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "date"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "hour"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "minute"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "second"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "nano"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a Timestamp object initialized with the given values.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "1.2"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eyear\u003c/code\u003e - the year minus 1900",
          "\u003ccode\u003emonth\u003c/code\u003e - 0 to 11",
          "\u003ccode\u003edate\u003c/code\u003e - 1 to 31",
          "\u003ccode\u003ehour\u003c/code\u003e - 0 to 23",
          "\u003ccode\u003eminute\u003c/code\u003e - 0 to 59",
          "\u003ccode\u003esecond\u003c/code\u003e - 0 to 59",
          "\u003ccode\u003enano\u003c/code\u003e - 0 to 999,999,999"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the nano argument is out of bounds"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "time"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a Timestamp object using a milliseconds time value. The integral seconds are stored in the underlying date value; the fractional seconds are stored in the nanos field of the Timestamp object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eCalendar\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etime\u003c/code\u003e - milliseconds since January 1, 1970, 00:00:00 GMT. A negative number is the number of milliseconds before January 1, 1970, 00:00:00 GMT."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.sql.Timestamp",
  "comment": "\u003cp\u003eA thin wrapper around \u003ccode\u003ejava.util.Date\u003c/code\u003e that allows the JDBC API to identify this as an SQL \u003ccode\u003eTIMESTAMP\u003c/code\u003e value. It adds the ability to hold the SQL \u003ccode\u003eTIMESTAMP\u003c/code\u003e fractional seconds value, by allowing the specification of fractional seconds to a precision of nanoseconds. A Timestamp also provides formatting and parsing operations to support the JDBC escape syntax for timestamp values. \u003c/p\u003e\n\u003cp\u003eThe precision of a Timestamp object is calculated to be either: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e\u003ccode\u003e19 \u003c/code\u003e, which is the number of characters in yyyy-mm-dd hh:mm:ss \u003c/li\u003e\n \u003cli\u003e \u003ccode\u003e 20 + s \u003c/code\u003e, which is the number of characters in the yyyy-mm-dd hh:mm:ss.[fff...] and \u003ccode\u003es\u003c/code\u003e represents the scale of the given Timestamp, its fractional seconds precision. \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e This type is a composite of a \u003ccode\u003ejava.util.Date\u003c/code\u003e and a separate nanoseconds value. Only integral seconds are stored in the \u003ccode\u003ejava.util.Date\u003c/code\u003e component. The fractional seconds - the nanos - are separate. The \u003ccode\u003eTimestamp.equals(Object)\u003c/code\u003e method never returns \u003ccode\u003etrue\u003c/code\u003e when passed an object that isn\u0027t an instance of \u003ccode\u003ejava.sql.Timestamp\u003c/code\u003e, because the nanos component of a date is unknown. As a result, the \u003ccode\u003eTimestamp.equals(Object)\u003c/code\u003e method is not symmetric with respect to the \u003ccode\u003ejava.util.Date.equals(Object)\u003c/code\u003e method. Also, the \u003ccode\u003ehashCode\u003c/code\u003e method uses the underlying \u003ccode\u003ejava.util.Date\u003c/code\u003e implementation and therefore does not include nanos in its computation. \u003c/p\u003e\n\u003cp\u003e Due to the differences between the \u003ccode\u003eTimestamp\u003c/code\u003e class and the \u003ccode\u003ejava.util.Date\u003c/code\u003e class mentioned above, it is recommended that code not view \u003ccode\u003eTimestamp\u003c/code\u003e values generically as an instance of \u003ccode\u003ejava.util.Date\u003c/code\u003e. The inheritance relationship between \u003ccode\u003eTimestamp\u003c/code\u003e and \u003ccode\u003ejava.util.Date\u003c/code\u003e really denotes implementation inheritance, and not type inheritance.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.sql.Timestamp\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}