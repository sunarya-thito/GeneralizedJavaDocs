{
  "packageName": "java.sql",
  "simpleName": "DatabaseMetaData",
  "moduleName": "java.sql",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.sql.Wrapper",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "procedureResultUnknown",
      "comment": "Indicates that it is not known whether the procedure returns a result. A possible value for column PROCEDURE_TYPE in the ResultSet object returned by the method getProcedures.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.procedureResultUnknown\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "procedureNoResult",
      "comment": "Indicates that the procedure does not return a result. A possible value for column PROCEDURE_TYPE in the ResultSet object returned by the method getProcedures.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.procedureNoResult\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "procedureReturnsResult",
      "comment": "Indicates that the procedure returns a result. A possible value for column PROCEDURE_TYPE in the ResultSet object returned by the method getProcedures.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.procedureReturnsResult\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "procedureColumnUnknown",
      "comment": "Indicates that type of the column is unknown. A possible value for the column COLUMN_TYPE in the ResultSet returned by the method getProcedureColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.procedureColumnUnknown\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "procedureColumnIn",
      "comment": "Indicates that the column stores IN parameters. A possible value for the column COLUMN_TYPE in the ResultSet returned by the method getProcedureColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.procedureColumnIn\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "procedureColumnInOut",
      "comment": "Indicates that the column stores INOUT parameters. A possible value for the column COLUMN_TYPE in the ResultSet returned by the method getProcedureColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.procedureColumnInOut\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "procedureColumnOut",
      "comment": "Indicates that the column stores OUT parameters. A possible value for the column COLUMN_TYPE in the ResultSet returned by the method getProcedureColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.procedureColumnOut\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "procedureColumnReturn",
      "comment": "Indicates that the column stores return values. A possible value for the column COLUMN_TYPE in the ResultSet returned by the method getProcedureColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.procedureColumnReturn\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "procedureColumnResult",
      "comment": "Indicates that the column stores results. A possible value for the column COLUMN_TYPE in the ResultSet returned by the method getProcedureColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.procedureColumnResult\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "procedureNoNulls",
      "comment": "Indicates that NULL values are not allowed. A possible value for the column NULLABLE in the ResultSet object returned by the method getProcedureColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.procedureNoNulls\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "procedureNullable",
      "comment": "Indicates that NULL values are allowed. A possible value for the column NULLABLE in the ResultSet object returned by the method getProcedureColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.procedureNullable\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "procedureNullableUnknown",
      "comment": "Indicates that whether NULL values are allowed is unknown. A possible value for the column NULLABLE in the ResultSet object returned by the method getProcedureColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.procedureNullableUnknown\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "columnNoNulls",
      "comment": "Indicates that the column might not allow NULL values. A possible value for the column NULLABLE in the ResultSet returned by the method getColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.columnNoNulls\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "columnNullable",
      "comment": "Indicates that the column definitely allows NULL values. A possible value for the column NULLABLE in the ResultSet returned by the method getColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.columnNullable\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "columnNullableUnknown",
      "comment": "Indicates that the nullability of columns is unknown. A possible value for the column NULLABLE in the ResultSet returned by the method getColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.columnNullableUnknown\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "bestRowTemporary",
      "comment": "Indicates that the scope of the best row identifier is very temporary, lasting only while the row is being used. A possible value for the column SCOPE in the ResultSet object returned by the method getBestRowIdentifier.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.bestRowTemporary\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "bestRowTransaction",
      "comment": "Indicates that the scope of the best row identifier is the remainder of the current transaction. A possible value for the column SCOPE in the ResultSet object returned by the method getBestRowIdentifier.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.bestRowTransaction\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "bestRowSession",
      "comment": "Indicates that the scope of the best row identifier is the remainder of the current session. A possible value for the column SCOPE in the ResultSet object returned by the method getBestRowIdentifier.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.bestRowSession\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "bestRowUnknown",
      "comment": "Indicates that the best row identifier may or may not be a pseudo column. A possible value for the column PSEUDO_COLUMN in the ResultSet object returned by the method getBestRowIdentifier.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.bestRowUnknown\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "bestRowNotPseudo",
      "comment": "Indicates that the best row identifier is NOT a pseudo column. A possible value for the column PSEUDO_COLUMN in the ResultSet object returned by the method getBestRowIdentifier.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.bestRowNotPseudo\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "bestRowPseudo",
      "comment": "Indicates that the best row identifier is a pseudo column. A possible value for the column PSEUDO_COLUMN in the ResultSet object returned by the method getBestRowIdentifier.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.bestRowPseudo\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "versionColumnUnknown",
      "comment": "Indicates that this version column may or may not be a pseudo column. A possible value for the column PSEUDO_COLUMN in the ResultSet object returned by the method getVersionColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.versionColumnUnknown\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "versionColumnNotPseudo",
      "comment": "Indicates that this version column is NOT a pseudo column. A possible value for the column PSEUDO_COLUMN in the ResultSet object returned by the method getVersionColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.versionColumnNotPseudo\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "versionColumnPseudo",
      "comment": "Indicates that this version column is a pseudo column. A possible value for the column PSEUDO_COLUMN in the ResultSet object returned by the method getVersionColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.versionColumnPseudo\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "importedKeyCascade",
      "comment": "For the column UPDATE_RULE, indicates that when the primary key is updated, the foreign key (imported key) is changed to agree with it. For the column DELETE_RULE, it indicates that when the primary key is deleted, rows that imported that key are deleted. A possible value for the columns UPDATE_RULE and DELETE_RULE in the ResultSet objects returned by the methods getImportedKeys, getExportedKeys, and getCrossReference.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.importedKeyCascade\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "importedKeyRestrict",
      "comment": "For the column UPDATE_RULE, indicates that a primary key may not be updated if it has been imported by another table as a foreign key. For the column DELETE_RULE, indicates that a primary key may not be deleted if it has been imported by another table as a foreign key. A possible value for the columns UPDATE_RULE and DELETE_RULE in the ResultSet objects returned by the methods getImportedKeys, getExportedKeys, and getCrossReference.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.importedKeyRestrict\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "importedKeySetNull",
      "comment": "For the columns UPDATE_RULE and DELETE_RULE, indicates that when the primary key is updated or deleted, the foreign key (imported key) is changed to NULL. A possible value for the columns UPDATE_RULE and DELETE_RULE in the ResultSet objects returned by the methods getImportedKeys, getExportedKeys, and getCrossReference.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.importedKeySetNull\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "importedKeyNoAction",
      "comment": "For the columns UPDATE_RULE and DELETE_RULE, indicates that if the primary key has been imported, it cannot be updated or deleted. A possible value for the columns UPDATE_RULE and DELETE_RULE in the ResultSet objects returned by the methods getImportedKeys, getExportedKeys, and getCrossReference.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.importedKeyNoAction\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "importedKeySetDefault",
      "comment": "For the columns UPDATE_RULE and DELETE_RULE, indicates that if the primary key is updated or deleted, the foreign key (imported key) is set to the default value. A possible value for the columns UPDATE_RULE and DELETE_RULE in the ResultSet objects returned by the methods getImportedKeys, getExportedKeys, and getCrossReference.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.importedKeySetDefault\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "importedKeyInitiallyDeferred",
      "comment": "Indicates deferrability. See SQL-92 for a definition. A possible value for the column DEFERRABILITY in the ResultSet objects returned by the methods getImportedKeys, getExportedKeys, and getCrossReference.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.importedKeyInitiallyDeferred\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "importedKeyInitiallyImmediate",
      "comment": "Indicates deferrability. See SQL-92 for a definition. A possible value for the column DEFERRABILITY in the ResultSet objects returned by the methods getImportedKeys, getExportedKeys, and getCrossReference.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.importedKeyInitiallyImmediate\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "importedKeyNotDeferrable",
      "comment": "Indicates deferrability. See SQL-92 for a definition. A possible value for the column DEFERRABILITY in the ResultSet objects returned by the methods getImportedKeys, getExportedKeys, and getCrossReference.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.importedKeyNotDeferrable\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "typeNoNulls",
      "comment": "Indicates that a NULL value is NOT allowed for this data type. A possible value for column NULLABLE in the ResultSet object returned by the method getTypeInfo.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.typeNoNulls\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "typeNullable",
      "comment": "Indicates that a NULL value is allowed for this data type. A possible value for column NULLABLE in the ResultSet object returned by the method getTypeInfo.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.typeNullable\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "typeNullableUnknown",
      "comment": "Indicates that it is not known whether a NULL value is allowed for this data type. A possible value for column NULLABLE in the ResultSet object returned by the method getTypeInfo.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.typeNullableUnknown\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "typePredNone",
      "comment": "Indicates that WHERE search clauses are not supported for this type. A possible value for column SEARCHABLE in the ResultSet object returned by the method getTypeInfo.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.typePredNone\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "typePredChar",
      "comment": "Indicates that the data type can be only be used in WHERE search clauses that use LIKE predicates. A possible value for column SEARCHABLE in the ResultSet object returned by the method getTypeInfo.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.typePredChar\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "typePredBasic",
      "comment": "Indicates that the data type can be only be used in WHERE search clauses that do not use LIKE predicates. A possible value for column SEARCHABLE in the ResultSet object returned by the method getTypeInfo.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.typePredBasic\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "typeSearchable",
      "comment": "Indicates that all WHERE search clauses can be based on this type. A possible value for column SEARCHABLE in the ResultSet object returned by the method getTypeInfo.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.typeSearchable\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "tableIndexStatistic",
      "comment": "Indicates that this column contains table statistics that are returned in conjunction with a table\u0027s index descriptions. A possible value for column TYPE in the ResultSet object returned by the method getIndexInfo.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.tableIndexStatistic\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "tableIndexClustered",
      "comment": "Indicates that this table index is a clustered index. A possible value for column TYPE in the ResultSet object returned by the method getIndexInfo.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.tableIndexClustered\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "tableIndexHashed",
      "comment": "Indicates that this table index is a hashed index. A possible value for column TYPE in the ResultSet object returned by the method getIndexInfo.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.tableIndexHashed\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "tableIndexOther",
      "comment": "Indicates that this table index is not a clustered index, a hashed index, or table statistics; it is something other than these. A possible value for column TYPE in the ResultSet object returned by the method getIndexInfo.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.tableIndexOther\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "attributeNoNulls",
      "comment": "Indicates that NULL values might not be allowed. A possible value for the column NULLABLE in the ResultSet object returned by the method getAttributes.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.attributeNoNulls\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "attributeNullable",
      "comment": "Indicates that NULL values are definitely allowed. A possible value for the column NULLABLE in the ResultSet object returned by the method getAttributes.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.attributeNullable\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "short",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "attributeNullableUnknown",
      "comment": "Indicates that whether NULL values are allowed is not known. A possible value for the column NULLABLE in the ResultSet object returned by the method getAttributes.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.attributeNullableUnknown\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "sqlStateXOpen",
      "comment": "A possible return value for the method DatabaseMetaData.getSQLStateType which is used to indicate whether the value returned by the method SQLException.getSQLState is an X/Open (now know as Open Group) SQL CLI SQLSTATE value.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.sqlStateXOpen\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "sqlStateSQL",
      "comment": "A possible return value for the method DatabaseMetaData.getSQLStateType which is used to indicate whether the value returned by the method SQLException.getSQLState is an SQLSTATE value.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.sqlStateSQL\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "sqlStateSQL99",
      "comment": "A possible return value for the method DatabaseMetaData.getSQLStateType which is used to indicate whether the value returned by the method SQLException.getSQLState is an SQL99 SQLSTATE value. Note:This constant remains only for compatibility reasons. Developers should use the constant sqlStateSQL instead.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.sqlStateSQL99\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "functionColumnUnknown",
      "comment": "Indicates that type of the parameter or column is unknown. A possible value for the column COLUMN_TYPE in the ResultSet returned by the method getFunctionColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.functionColumnUnknown\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "functionColumnIn",
      "comment": "Indicates that the parameter or column is an IN parameter. A possible value for the column COLUMN_TYPE in the ResultSet returned by the method getFunctionColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.functionColumnIn\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "functionColumnInOut",
      "comment": "Indicates that the parameter or column is an INOUT parameter. A possible value for the column COLUMN_TYPE in the ResultSet returned by the method getFunctionColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.functionColumnInOut\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "functionColumnOut",
      "comment": "Indicates that the parameter or column is an OUT parameter. A possible value for the column COLUMN_TYPE in the ResultSet returned by the method getFunctionColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.functionColumnOut\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "functionReturn",
      "comment": "Indicates that the parameter or column is a return value. A possible value for the column COLUMN_TYPE in the ResultSet returned by the method getFunctionColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.functionReturn\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "functionColumnResult",
      "comment": "Indicates that the parameter or column is a column in a result set. A possible value for the column COLUMN_TYPE in the ResultSet returned by the method getFunctionColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.functionColumnResult\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "functionNoNulls",
      "comment": "Indicates that NULL values are not allowed. A possible value for the column NULLABLE in the ResultSet object returned by the method getFunctionColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.functionNoNulls\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "functionNullable",
      "comment": "Indicates that NULL values are allowed. A possible value for the column NULLABLE in the ResultSet object returned by the method getFunctionColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.functionNullable\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "functionNullableUnknown",
      "comment": "Indicates that whether NULL values are allowed is unknown. A possible value for the column NULLABLE in the ResultSet object returned by the method getFunctionColumns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.functionNullableUnknown\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "functionResultUnknown",
      "comment": "Indicates that it is not known whether the function returns a result or a table. A possible value for column FUNCTION_TYPE in the ResultSet object returned by the method getFunctions.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.functionResultUnknown\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "functionNoTable",
      "comment": "Indicates that the function does not return a table. A possible value for column FUNCTION_TYPE in the ResultSet object returned by the method getFunctions.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.functionNoTable\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "functionReturnsTable",
      "comment": "Indicates that the function returns a table. A possible value for column FUNCTION_TYPE in the ResultSet object returned by the method getFunctions.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.sql.DatabaseMetaData.functionReturnsTable\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "allProceduresAreCallable",
      "comment": "Retrieves whether the current user can call all the procedures returned by the method getProcedures.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "allTablesAreSelectable",
      "comment": "Retrieves whether the current user can use all the tables returned by the method getTables in a SELECT statement.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getURL",
      "comment": "Retrieves the URL for this DBMS.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the URL for this DBMS or \n\u003ccode\u003enull\u003c/code\u003e if it cannot be generated"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getUserName",
      "comment": "Retrieves the user name as known to this database.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the database user name"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isReadOnly",
      "comment": "Retrieves whether this database is in read-only mode.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "nullsAreSortedHigh",
      "comment": "Retrieves whether NULL values are sorted high. Sorted high means that NULL values sort higher than any other value in a domain. In an ascending order, if this method returns true, NULL values will appear at the end. By contrast, the method nullsAreSortedAtEnd indicates whether NULL values are sorted at the end regardless of sort order.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "nullsAreSortedLow",
      "comment": "Retrieves whether NULL values are sorted low. Sorted low means that NULL values sort lower than any other value in a domain. In an ascending order, if this method returns true, NULL values will appear at the beginning. By contrast, the method nullsAreSortedAtStart indicates whether NULL values are sorted at the beginning regardless of sort order.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "nullsAreSortedAtStart",
      "comment": "Retrieves whether NULL values are sorted at the start regardless of sort order.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "nullsAreSortedAtEnd",
      "comment": "Retrieves whether NULL values are sorted at the end regardless of sort order.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDatabaseProductName",
      "comment": "Retrieves the name of this database product.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "database product name"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDatabaseProductVersion",
      "comment": "Retrieves the version number of this database product.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "database version number"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDriverName",
      "comment": "Retrieves the name of this JDBC driver.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "JDBC driver name"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDriverVersion",
      "comment": "Retrieves the version number of this JDBC driver as a String.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "JDBC driver version"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDriverMajorVersion",
      "comment": "Retrieves this JDBC driver\u0027s major version number.",
      "annotations": [],
      "tagMap": {
        "return": [
          "JDBC driver major version"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDriverMinorVersion",
      "comment": "Retrieves this JDBC driver\u0027s minor version number.",
      "annotations": [],
      "tagMap": {
        "return": [
          "JDBC driver minor version number"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "usesLocalFiles",
      "comment": "Retrieves whether this database stores tables in a local file.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "usesLocalFilePerTable",
      "comment": "Retrieves whether this database uses a file for each table.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this database uses a local file for each table; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsMixedCaseIdentifiers",
      "comment": "Retrieves whether this database treats mixed case unquoted SQL identifiers as case sensitive and as a result stores them in mixed case.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "storesUpperCaseIdentifiers",
      "comment": "Retrieves whether this database treats mixed case unquoted SQL identifiers as case insensitive and stores them in upper case.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "storesLowerCaseIdentifiers",
      "comment": "Retrieves whether this database treats mixed case unquoted SQL identifiers as case insensitive and stores them in lower case.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "storesMixedCaseIdentifiers",
      "comment": "Retrieves whether this database treats mixed case unquoted SQL identifiers as case insensitive and stores them in mixed case.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsMixedCaseQuotedIdentifiers",
      "comment": "Retrieves whether this database treats mixed case quoted SQL identifiers as case sensitive and as a result stores them in mixed case.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "storesUpperCaseQuotedIdentifiers",
      "comment": "Retrieves whether this database treats mixed case quoted SQL identifiers as case insensitive and stores them in upper case.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "storesLowerCaseQuotedIdentifiers",
      "comment": "Retrieves whether this database treats mixed case quoted SQL identifiers as case insensitive and stores them in lower case.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "storesMixedCaseQuotedIdentifiers",
      "comment": "Retrieves whether this database treats mixed case quoted SQL identifiers as case insensitive and stores them in mixed case.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getIdentifierQuoteString",
      "comment": "Retrieves the string used to quote SQL identifiers. This method returns a space \" \" if identifier quoting is not supported.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the quoting string or a space if quoting is not supported"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSQLKeywords",
      "comment": "Retrieves a comma-separated list of all of this database\u0027s SQL keywords that are NOT also SQL:2003 keywords.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the list of this database\u0027s keywords that are not also SQL:2003 keywords"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNumericFunctions",
      "comment": "Retrieves a comma-separated list of math functions available with this database. These are the Open /Open CLI math function names used in the JDBC function escape clause.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the list of math functions supported by this database"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getStringFunctions",
      "comment": "Retrieves a comma-separated list of string functions available with this database. These are the Open Group CLI string function names used in the JDBC function escape clause.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the list of string functions supported by this database"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSystemFunctions",
      "comment": "Retrieves a comma-separated list of system functions available with this database. These are the Open Group CLI system function names used in the JDBC function escape clause.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "a list of system functions supported by this database"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTimeDateFunctions",
      "comment": "Retrieves a comma-separated list of the time and date functions available with this database.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the list of time and date functions supported by this database"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSearchStringEscape",
      "comment": "Retrieves the string that can be used to escape wildcard characters. This is the string that can be used to escape \u0027_\u0027 or \u0027%\u0027 in the catalog search parameters that are a pattern (and therefore use one of the wildcard characters). The \u0027_\u0027 character represents any single character; the \u0027%\u0027 character represents any sequence of zero or more characters.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the string used to escape wildcard characters"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getExtraNameCharacters",
      "comment": "Retrieves all the \"extra\" characters that can be used in unquoted identifier names (those beyond a-z, A-Z, 0-9 and _).",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the string containing the extra characters"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsAlterTableWithAddColumn",
      "comment": "Retrieves whether this database supports ALTER TABLE with add column.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsAlterTableWithDropColumn",
      "comment": "Retrieves whether this database supports ALTER TABLE with drop column.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsColumnAliasing",
      "comment": "Retrieves whether this database supports column aliasing. If so, the SQL AS clause can be used to provide names for computed columns or to provide alias names for columns as required.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "nullPlusNonNullIsNull",
      "comment": "Retrieves whether this database supports concatenations between NULL and non-NULL values being NULL.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsConvert",
      "comment": "Retrieves whether this database supports the JDBC scalar function CONVERT for the conversion of one JDBC type to another. The JDBC types are the generic SQL data types defined in java.sql.Types.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "fromType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "toType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsConvert",
      "comment": "Retrieves whether this database supports the JDBC scalar function CONVERT for conversions between the JDBC types fromType and toType. The JDBC types are the generic SQL data types defined in java.sql.Types.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Types.html\" title\u003d\"class in java.sql\"\u003e\u003ccode\u003eTypes\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003efromType\u003c/code\u003e - the type to convert from; one of the type codes from the class \n\u003ccode\u003ejava.sql.Types\u003c/code\u003e",
          "\u003ccode\u003etoType\u003c/code\u003e - the type to convert to; one of the type codes from the class \n\u003ccode\u003ejava.sql.Types\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsTableCorrelationNames",
      "comment": "Retrieves whether this database supports table correlation names.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsDifferentTableCorrelationNames",
      "comment": "Retrieves whether, when table correlation names are supported, they are restricted to being different from the names of the tables.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsExpressionsInOrderBy",
      "comment": "Retrieves whether this database supports expressions in ORDER BY lists.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsOrderByUnrelated",
      "comment": "Retrieves whether this database supports using a column that is not in the SELECT statement in an ORDER BY clause.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsGroupBy",
      "comment": "Retrieves whether this database supports some form of GROUP BY clause.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsGroupByUnrelated",
      "comment": "Retrieves whether this database supports using a column that is not in the SELECT statement in a GROUP BY clause.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsGroupByBeyondSelect",
      "comment": "Retrieves whether this database supports using columns not included in the SELECT statement in a GROUP BY clause provided that all of the columns in the SELECT statement are included in the GROUP BY clause.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsLikeEscapeClause",
      "comment": "Retrieves whether this database supports specifying a LIKE escape clause.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsMultipleResultSets",
      "comment": "Retrieves whether this database supports getting multiple ResultSet objects from a single call to the method execute.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsMultipleTransactions",
      "comment": "Retrieves whether this database allows having multiple transactions open at once (on different connections).",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsNonNullableColumns",
      "comment": "Retrieves whether columns in this database may be defined as non-nullable.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsMinimumSQLGrammar",
      "comment": "Retrieves whether this database supports the ODBC Minimum SQL grammar.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsCoreSQLGrammar",
      "comment": "Retrieves whether this database supports the ODBC Core SQL grammar.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsExtendedSQLGrammar",
      "comment": "Retrieves whether this database supports the ODBC Extended SQL grammar.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsANSI92EntryLevelSQL",
      "comment": "Retrieves whether this database supports the ANSI92 entry level SQL grammar.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsANSI92IntermediateSQL",
      "comment": "Retrieves whether this database supports the ANSI92 intermediate SQL grammar supported.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsANSI92FullSQL",
      "comment": "Retrieves whether this database supports the ANSI92 full SQL grammar supported.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsIntegrityEnhancementFacility",
      "comment": "Retrieves whether this database supports the SQL Integrity Enhancement Facility.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsOuterJoins",
      "comment": "Retrieves whether this database supports some form of outer join.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsFullOuterJoins",
      "comment": "Retrieves whether this database supports full nested outer joins.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsLimitedOuterJoins",
      "comment": "Retrieves whether this database provides limited support for outer joins. (This will be true if the method supportsFullOuterJoins returns true).",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSchemaTerm",
      "comment": "Retrieves the database vendor\u0027s preferred term for \"schema\".",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the vendor term for \"schema\""
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getProcedureTerm",
      "comment": "Retrieves the database vendor\u0027s preferred term for \"procedure\".",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the vendor term for \"procedure\""
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCatalogTerm",
      "comment": "Retrieves the database vendor\u0027s preferred term for \"catalog\".",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the vendor term for \"catalog\""
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isCatalogAtStart",
      "comment": "Retrieves whether a catalog appears at the start of a fully qualified table name. If not, the catalog appears at the end.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the catalog name appears at the beginning of a fully qualified table name; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCatalogSeparator",
      "comment": "Retrieves the String that this database uses as the separator between a catalog and table name.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the separator string"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsSchemasInDataManipulation",
      "comment": "Retrieves whether a schema name can be used in a data manipulation statement.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsSchemasInProcedureCalls",
      "comment": "Retrieves whether a schema name can be used in a procedure call statement.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsSchemasInTableDefinitions",
      "comment": "Retrieves whether a schema name can be used in a table definition statement.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsSchemasInIndexDefinitions",
      "comment": "Retrieves whether a schema name can be used in an index definition statement.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsSchemasInPrivilegeDefinitions",
      "comment": "Retrieves whether a schema name can be used in a privilege definition statement.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsCatalogsInDataManipulation",
      "comment": "Retrieves whether a catalog name can be used in a data manipulation statement.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsCatalogsInProcedureCalls",
      "comment": "Retrieves whether a catalog name can be used in a procedure call statement.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsCatalogsInTableDefinitions",
      "comment": "Retrieves whether a catalog name can be used in a table definition statement.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsCatalogsInIndexDefinitions",
      "comment": "Retrieves whether a catalog name can be used in an index definition statement.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsCatalogsInPrivilegeDefinitions",
      "comment": "Retrieves whether a catalog name can be used in a privilege definition statement.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsPositionedDelete",
      "comment": "Retrieves whether this database supports positioned DELETE statements.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsPositionedUpdate",
      "comment": "Retrieves whether this database supports positioned UPDATE statements.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsSelectForUpdate",
      "comment": "Retrieves whether this database supports SELECT FOR UPDATE statements.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsStoredProcedures",
      "comment": "Retrieves whether this database supports stored procedure calls that use the stored procedure escape syntax.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsSubqueriesInComparisons",
      "comment": "Retrieves whether this database supports subqueries in comparison expressions.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsSubqueriesInExists",
      "comment": "Retrieves whether this database supports subqueries in EXISTS expressions.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsSubqueriesInIns",
      "comment": "Retrieves whether this database supports subqueries in IN expressions.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsSubqueriesInQuantifieds",
      "comment": "Retrieves whether this database supports subqueries in quantified expressions.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsCorrelatedSubqueries",
      "comment": "Retrieves whether this database supports correlated subqueries.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsUnion",
      "comment": "Retrieves whether this database supports SQL UNION.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsUnionAll",
      "comment": "Retrieves whether this database supports SQL UNION ALL.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsOpenCursorsAcrossCommit",
      "comment": "Retrieves whether this database supports keeping cursors open across commits.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if cursors always remain open; \n\u003ccode\u003efalse\u003c/code\u003e if they might not remain open"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsOpenCursorsAcrossRollback",
      "comment": "Retrieves whether this database supports keeping cursors open across rollbacks.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if cursors always remain open; \n\u003ccode\u003efalse\u003c/code\u003e if they might not remain open"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsOpenStatementsAcrossCommit",
      "comment": "Retrieves whether this database supports keeping statements open across commits.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if statements always remain open; \n\u003ccode\u003efalse\u003c/code\u003e if they might not remain open"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsOpenStatementsAcrossRollback",
      "comment": "Retrieves whether this database supports keeping statements open across rollbacks.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if statements always remain open; \n\u003ccode\u003efalse\u003c/code\u003e if they might not remain open"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxBinaryLiteralLength",
      "comment": "Retrieves the maximum number of hex characters this database allows in an inline binary literal.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "max the maximum length (in hex characters) for a binary literal; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxCharLiteralLength",
      "comment": "Retrieves the maximum number of characters this database allows for a character literal.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of characters allowed for a character literal; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxColumnNameLength",
      "comment": "Retrieves the maximum number of characters this database allows for a column name.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of characters allowed for a column name; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxColumnsInGroupBy",
      "comment": "Retrieves the maximum number of columns this database allows in a GROUP BY clause.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of columns allowed; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxColumnsInIndex",
      "comment": "Retrieves the maximum number of columns this database allows in an index.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of columns allowed; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxColumnsInOrderBy",
      "comment": "Retrieves the maximum number of columns this database allows in an ORDER BY clause.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of columns allowed; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxColumnsInSelect",
      "comment": "Retrieves the maximum number of columns this database allows in a SELECT list.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of columns allowed; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxColumnsInTable",
      "comment": "Retrieves the maximum number of columns this database allows in a table.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of columns allowed; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxConnections",
      "comment": "Retrieves the maximum number of concurrent connections to this database that are possible.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of active connections possible at one time; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxCursorNameLength",
      "comment": "Retrieves the maximum number of characters that this database allows in a cursor name.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of characters allowed in a cursor name; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxIndexLength",
      "comment": "Retrieves the maximum number of bytes this database allows for an index, including all of the parts of the index.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of bytes allowed; this limit includes the composite of all the constituent parts of the index; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxSchemaNameLength",
      "comment": "Retrieves the maximum number of characters that this database allows in a schema name.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of characters allowed in a schema name; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxProcedureNameLength",
      "comment": "Retrieves the maximum number of characters that this database allows in a procedure name.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of characters allowed in a procedure name; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxCatalogNameLength",
      "comment": "Retrieves the maximum number of characters that this database allows in a catalog name.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of characters allowed in a catalog name; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxRowSize",
      "comment": "Retrieves the maximum number of bytes this database allows in a single row.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of bytes allowed for a row; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "doesMaxRowSizeIncludeBlobs",
      "comment": "Retrieves whether the return value for the method getMaxRowSize includes the SQL data types LONGVARCHAR and LONGVARBINARY.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxStatementLength",
      "comment": "Retrieves the maximum number of characters this database allows in an SQL statement.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of characters allowed for an SQL statement; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxStatements",
      "comment": "Retrieves the maximum number of active statements to this database that can be open at the same time.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of statements that can be open at one time; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxTableNameLength",
      "comment": "Retrieves the maximum number of characters this database allows in a table name.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of characters allowed for a table name; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxTablesInSelect",
      "comment": "Retrieves the maximum number of tables this database allows in a SELECT statement.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of tables allowed in a \n\u003ccode\u003eSELECT\u003c/code\u003e statement; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxUserNameLength",
      "comment": "Retrieves the maximum number of characters this database allows in a user name.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of characters allowed for a user name; a result of zero means that there is no limit or the limit is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDefaultTransactionIsolation",
      "comment": "Retrieves this database\u0027s default transaction isolation level. The possible values are defined in java.sql.Connection.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Connection.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003eConnection\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the default isolation level"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsTransactions",
      "comment": "Retrieves whether this database supports transactions. If not, invoking the method commit is a noop, and the isolation level is TRANSACTION_NONE.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if transactions are supported; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "level",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsTransactionIsolationLevel",
      "comment": "Retrieves whether this database supports the given transaction isolation level.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Connection.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003eConnection\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elevel\u003c/code\u003e - one of the transaction isolation levels defined in \n\u003ccode\u003ejava.sql.Connection\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsDataDefinitionAndDataManipulationTransactions",
      "comment": "Retrieves whether this database supports both data definition and data manipulation statements within a transaction.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsDataManipulationTransactionsOnly",
      "comment": "Retrieves whether this database supports only data manipulation statements within a transaction.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "dataDefinitionCausesTransactionCommit",
      "comment": "Retrieves whether a data definition statement within a transaction forces the transaction to commit.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "dataDefinitionIgnoredInTransactions",
      "comment": "Retrieves whether this database ignores a data definition statement within a transaction.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schemaPattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "procedureNamePattern",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getProcedures",
      "comment": "Retrieves a description of the stored procedures available in the given catalog. Only procedure descriptions matching the schema and procedure name criteria are returned. They are ordered by PROCEDURE_CAT, PROCEDURE_SCHEM, PROCEDURE_NAME and SPECIFIC_ NAME. Each procedure description has the following columns: PROCEDURE_CAT String \u003d\u003e procedure catalog (may be null) PROCEDURE_SCHEM String \u003d\u003e procedure schema (may be null) PROCEDURE_NAME String \u003d\u003e procedure name reserved for future use reserved for future use reserved for future use REMARKS String \u003d\u003e explanatory comment on the procedure PROCEDURE_TYPE short \u003d\u003e kind of procedure: procedureResultUnknown - Cannot determine if a return value will be returned procedureNoResult - Does not return a return value procedureReturnsResult - Returns a return value SPECIFIC_NAME String \u003d\u003e The name which uniquely identifies this procedure within its schema. A user may not have permissions to execute any of the procedures that are returned by getProcedures",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getSearchStringEscape()\"\u003e\u003ccode\u003egetSearchStringEscape()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschemaPattern\u003c/code\u003e - a schema name pattern; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003eprocedureNamePattern\u003c/code\u003e - a procedure name pattern; must match the procedure name as it is stored in the database"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003eResultSet\u003c/code\u003e - each row is a procedure description"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schemaPattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "procedureNamePattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "columnNamePattern",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getProcedureColumns",
      "comment": "Retrieves a description of the given catalog\u0027s stored procedure parameter and result columns. Only descriptions matching the schema, procedure and parameter name criteria are returned. They are ordered by PROCEDURE_CAT, PROCEDURE_SCHEM, PROCEDURE_NAME and SPECIFIC_NAME. Within this, the return value, if any, is first. Next are the parameter descriptions in call order. The column descriptions follow in column number order. Each row in the ResultSet is a parameter description or column description with the following fields: PROCEDURE_CAT String \u003d\u003e procedure catalog (may be null) PROCEDURE_SCHEM String \u003d\u003e procedure schema (may be null) PROCEDURE_NAME String \u003d\u003e procedure name COLUMN_NAME String \u003d\u003e column/parameter name COLUMN_TYPE Short \u003d\u003e kind of column/parameter: procedureColumnUnknown - nobody knows procedureColumnIn - IN parameter procedureColumnInOut - INOUT parameter procedureColumnOut - OUT parameter procedureColumnReturn - procedure return value procedureColumnResult - result column in ResultSet DATA_TYPE int \u003d\u003e SQL type from java.sql.Types TYPE_NAME String \u003d\u003e SQL type name, for a UDT type the type name is fully qualified PRECISION int \u003d\u003e precision LENGTH int \u003d\u003e length in bytes of data SCALE short \u003d\u003e scale - null is returned for data types where SCALE is not applicable. RADIX short \u003d\u003e radix NULLABLE short \u003d\u003e can it contain NULL. procedureNoNulls - does not allow NULL values procedureNullable - allows NULL values procedureNullableUnknown - nullability unknown REMARKS String \u003d\u003e comment describing parameter/column COLUMN_DEF String \u003d\u003e default value for the column, which should be interpreted as a string when the value is enclosed in single quotes (may be null) The string NULL (not enclosed in quotes) - if NULL was specified as the default value TRUNCATE (not enclosed in quotes) - if the specified default value cannot be represented without truncation NULL - if a default value was not specified SQL_DATA_TYPE int \u003d\u003e reserved for future use SQL_DATETIME_SUB int \u003d\u003e reserved for future use CHAR_OCTET_LENGTH int \u003d\u003e the maximum length of binary and character based columns. For any other datatype the returned value is a NULL ORDINAL_POSITION int \u003d\u003e the ordinal position, starting from 1, for the input and output parameters for a procedure. A value of 0 is returned if this row describes the procedure\u0027s return value. For result set columns, it is the ordinal position of the column in the result set starting from 1. If there are multiple result sets, the column ordinal positions are implementation defined. IS_NULLABLE String \u003d\u003e ISO rules are used to determine the nullability for a column. YES --- if the column can include NULLs NO --- if the column cannot include NULLs empty string --- if the nullability for the column is unknown SPECIFIC_NAME String \u003d\u003e the name which uniquely identifies this procedure within its schema. Note: Some databases may not return the column descriptions for a procedure. The PRECISION column represents the specified column size for the given column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getSearchStringEscape()\"\u003e\u003ccode\u003egetSearchStringEscape()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschemaPattern\u003c/code\u003e - a schema name pattern; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003eprocedureNamePattern\u003c/code\u003e - a procedure name pattern; must match the procedure name as it is stored in the database",
          "\u003ccode\u003ecolumnNamePattern\u003c/code\u003e - a column name pattern; must match the column name as it is stored in the database"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003eResultSet\u003c/code\u003e - each row describes a stored procedure parameter or column"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schemaPattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "tableNamePattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "types",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTables",
      "comment": "Retrieves a description of the tables available in the given catalog. Only table descriptions matching the catalog, schema, table name and type criteria are returned. They are ordered by TABLE_TYPE, TABLE_CAT, TABLE_SCHEM and TABLE_NAME. Each table description has the following columns: TABLE_CAT String \u003d\u003e table catalog (may be null) TABLE_SCHEM String \u003d\u003e table schema (may be null) TABLE_NAME String \u003d\u003e table name TABLE_TYPE String \u003d\u003e table type. Typical types are \"TABLE\", \"VIEW\", \"SYSTEM TABLE\", \"GLOBAL TEMPORARY\", \"LOCAL TEMPORARY\", \"ALIAS\", \"SYNONYM\". REMARKS String \u003d\u003e explanatory comment on the table (may be null) TYPE_CAT String \u003d\u003e the types catalog (may be null) TYPE_SCHEM String \u003d\u003e the types schema (may be null) TYPE_NAME String \u003d\u003e type name (may be null) SELF_REFERENCING_COL_NAME String \u003d\u003e name of the designated \"identifier\" column of a typed table (may be null) REF_GENERATION String \u003d\u003e specifies how values in SELF_REFERENCING_COL_NAME are created. Values are \"SYSTEM\", \"USER\", \"DERIVED\". (may be null) Note: Some databases may not return information for all tables.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getSearchStringEscape()\"\u003e\u003ccode\u003egetSearchStringEscape()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschemaPattern\u003c/code\u003e - a schema name pattern; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003etableNamePattern\u003c/code\u003e - a table name pattern; must match the table name as it is stored in the database",
          "\u003ccode\u003etypes\u003c/code\u003e - a list of table types, which must be from the list of table types returned from \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getTableTypes()\"\u003e\u003ccode\u003egetTableTypes()\u003c/code\u003e\u003c/a\u003e,to include; \n\u003ccode\u003enull\u003c/code\u003e returns all types"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003eResultSet\u003c/code\u003e - each row is a table description"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSchemas",
      "comment": "Retrieves the schema names available in this database. The results are ordered by TABLE_CATALOG and TABLE_SCHEM. The schema columns are: TABLE_SCHEM String \u003d\u003e schema name TABLE_CATALOG String \u003d\u003e catalog name (may be null)",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "a \n\u003ccode\u003eResultSet\u003c/code\u003e object in which each row is a schema description"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCatalogs",
      "comment": "Retrieves the catalog names available in this database. The results are ordered by catalog name. The catalog column is: TABLE_CAT String \u003d\u003e catalog name",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "a \n\u003ccode\u003eResultSet\u003c/code\u003e object in which each row has a single \n\u003ccode\u003eString\u003c/code\u003e column that is a catalog name"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTableTypes",
      "comment": "Retrieves the table types available in this database. The results are ordered by table type. The table type is: TABLE_TYPE String \u003d\u003e table type. Typical types are \"TABLE\", \"VIEW\", \"SYSTEM TABLE\", \"GLOBAL TEMPORARY\", \"LOCAL TEMPORARY\", \"ALIAS\", \"SYNONYM\".",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "a \n\u003ccode\u003eResultSet\u003c/code\u003e object in which each row has a single \n\u003ccode\u003eString\u003c/code\u003e column that is a table type"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schemaPattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "tableNamePattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "columnNamePattern",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getColumns",
      "comment": "Retrieves a description of table columns available in the specified catalog. Only column descriptions matching the catalog, schema, table and column name criteria are returned. They are ordered by TABLE_CAT,TABLE_SCHEM, TABLE_NAME, and ORDINAL_POSITION. Each column description has the following columns: TABLE_CAT String \u003d\u003e table catalog (may be null) TABLE_SCHEM String \u003d\u003e table schema (may be null) TABLE_NAME String \u003d\u003e table name COLUMN_NAME String \u003d\u003e column name DATA_TYPE int \u003d\u003e SQL type from java.sql.Types TYPE_NAME String \u003d\u003e Data source dependent type name, for a UDT the type name is fully qualified COLUMN_SIZE int \u003d\u003e column size. BUFFER_LENGTH is not used. DECIMAL_DIGITS int \u003d\u003e the number of fractional digits. Null is returned for data types where DECIMAL_DIGITS is not applicable. NUM_PREC_RADIX int \u003d\u003e Radix (typically either 10 or 2) NULLABLE int \u003d\u003e is NULL allowed. columnNoNulls - might not allow NULL values columnNullable - definitely allows NULL values columnNullableUnknown - nullability unknown REMARKS String \u003d\u003e comment describing column (may be null) COLUMN_DEF String \u003d\u003e default value for the column, which should be interpreted as a string when the value is enclosed in single quotes (may be null) SQL_DATA_TYPE int \u003d\u003e unused SQL_DATETIME_SUB int \u003d\u003e unused CHAR_OCTET_LENGTH int \u003d\u003e for char types the maximum number of bytes in the column ORDINAL_POSITION int \u003d\u003e index of column in table (starting at 1) IS_NULLABLE String \u003d\u003e ISO rules are used to determine the nullability for a column. YES --- if the column can include NULLs NO --- if the column cannot include NULLs empty string --- if the nullability for the column is unknown SCOPE_CATALOG String \u003d\u003e catalog of table that is the scope of a reference attribute (null if DATA_TYPE isn\u0027t REF) SCOPE_SCHEMA String \u003d\u003e schema of table that is the scope of a reference attribute (null if the DATA_TYPE isn\u0027t REF) SCOPE_TABLE String \u003d\u003e table name that this the scope of a reference attribute (null if the DATA_TYPE isn\u0027t REF) SOURCE_DATA_TYPE short \u003d\u003e source type of a distinct type or user-generated Ref type, SQL type from java.sql.Types (null if DATA_TYPE isn\u0027t DISTINCT or user-generated REF) IS_AUTOINCREMENT String \u003d\u003e Indicates whether this column is auto incremented YES --- if the column is auto incremented NO --- if the column is not auto incremented empty string --- if it cannot be determined whether the column is auto incremented IS_GENERATEDCOLUMN String \u003d\u003e Indicates whether this is a generated column YES --- if this a generated column NO --- if this not a generated column empty string --- if it cannot be determined whether this is a generated column The COLUMN_SIZE column specifies the column size for the given column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getSearchStringEscape()\"\u003e\u003ccode\u003egetSearchStringEscape()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschemaPattern\u003c/code\u003e - a schema name pattern; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003etableNamePattern\u003c/code\u003e - a table name pattern; must match the table name as it is stored in the database",
          "\u003ccode\u003ecolumnNamePattern\u003c/code\u003e - a column name pattern; must match the column name as it is stored in the database"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003eResultSet\u003c/code\u003e - each row is a column description"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schema",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "table",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "columnNamePattern",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getColumnPrivileges",
      "comment": "Retrieves a description of the access rights for a table\u0027s columns. Only privileges matching the column name criteria are returned. They are ordered by COLUMN_NAME and PRIVILEGE. Each privilege description has the following columns: TABLE_CAT String \u003d\u003e table catalog (may be null) TABLE_SCHEM String \u003d\u003e table schema (may be null) TABLE_NAME String \u003d\u003e table name COLUMN_NAME String \u003d\u003e column name GRANTOR String \u003d\u003e grantor of access (may be null) GRANTEE String \u003d\u003e grantee of access PRIVILEGE String \u003d\u003e name of access (SELECT, INSERT, UPDATE, REFERENCES, ...) IS_GRANTABLE String \u003d\u003e \"YES\" if grantee is permitted to grant to others; \"NO\" if not; null if unknown",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getSearchStringEscape()\"\u003e\u003ccode\u003egetSearchStringEscape()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschema\u003c/code\u003e - a schema name; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003etable\u003c/code\u003e - a table name; must match the table name as it is stored in the database",
          "\u003ccode\u003ecolumnNamePattern\u003c/code\u003e - a column name pattern; must match the column name as it is stored in the database"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003eResultSet\u003c/code\u003e - each row is a column privilege description"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schemaPattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "tableNamePattern",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTablePrivileges",
      "comment": "Retrieves a description of the access rights for each table available in a catalog. Note that a table privilege applies to one or more columns in the table. It would be wrong to assume that this privilege applies to all columns (this may be true for some systems but is not true for all.) Only privileges matching the schema and table name criteria are returned. They are ordered by TABLE_CAT, TABLE_SCHEM, TABLE_NAME, and PRIVILEGE. Each privilege description has the following columns: TABLE_CAT String \u003d\u003e table catalog (may be null) TABLE_SCHEM String \u003d\u003e table schema (may be null) TABLE_NAME String \u003d\u003e table name GRANTOR String \u003d\u003e grantor of access (may be null) GRANTEE String \u003d\u003e grantee of access PRIVILEGE String \u003d\u003e name of access (SELECT, INSERT, UPDATE, REFERENCES, ...) IS_GRANTABLE String \u003d\u003e \"YES\" if grantee is permitted to grant to others; \"NO\" if not; null if unknown",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getSearchStringEscape()\"\u003e\u003ccode\u003egetSearchStringEscape()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschemaPattern\u003c/code\u003e - a schema name pattern; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003etableNamePattern\u003c/code\u003e - a table name pattern; must match the table name as it is stored in the database"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003eResultSet\u003c/code\u003e - each row is a table privilege description"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schema",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "table",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "scope",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "nullable",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBestRowIdentifier",
      "comment": "Retrieves a description of a table\u0027s optimal set of columns that uniquely identifies a row. They are ordered by SCOPE. Each column description has the following columns: SCOPE short \u003d\u003e actual scope of result bestRowTemporary - very temporary, while using row bestRowTransaction - valid for remainder of current transaction bestRowSession - valid for remainder of current session COLUMN_NAME String \u003d\u003e column name DATA_TYPE int \u003d\u003e SQL data type from java.sql.Types TYPE_NAME String \u003d\u003e Data source dependent type name, for a UDT the type name is fully qualified COLUMN_SIZE int \u003d\u003e precision BUFFER_LENGTH int \u003d\u003e not used DECIMAL_DIGITS short \u003d\u003e scale - Null is returned for data types where DECIMAL_DIGITS is not applicable. PSEUDO_COLUMN short \u003d\u003e is this a pseudo column like an Oracle ROWID bestRowUnknown - may or may not be pseudo column bestRowNotPseudo - is NOT a pseudo column bestRowPseudo - is a pseudo column The COLUMN_SIZE column represents the specified column size for the given column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschema\u003c/code\u003e - a schema name; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003etable\u003c/code\u003e - a table name; must match the table name as it is stored in the database",
          "\u003ccode\u003escope\u003c/code\u003e - the scope of interest; use same values as SCOPE",
          "\u003ccode\u003enullable\u003c/code\u003e - include columns that are nullable."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003eResultSet\u003c/code\u003e - each row is a column description"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schema",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "table",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getVersionColumns",
      "comment": "Retrieves a description of a table\u0027s columns that are automatically updated when any value in a row is updated. They are unordered. Each column description has the following columns: SCOPE short \u003d\u003e is not used COLUMN_NAME String \u003d\u003e column name DATA_TYPE int \u003d\u003e SQL data type from java.sql.Types TYPE_NAME String \u003d\u003e Data source-dependent type name COLUMN_SIZE int \u003d\u003e precision BUFFER_LENGTH int \u003d\u003e length of column value in bytes DECIMAL_DIGITS short \u003d\u003e scale - Null is returned for data types where DECIMAL_DIGITS is not applicable. PSEUDO_COLUMN short \u003d\u003e whether this is pseudo column like an Oracle ROWID versionColumnUnknown - may or may not be pseudo column versionColumnNotPseudo - is NOT a pseudo column versionColumnPseudo - is a pseudo column The COLUMN_SIZE column represents the specified column size for the given column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschema\u003c/code\u003e - a schema name; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003etable\u003c/code\u003e - a table name; must match the table name as it is stored in the database"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "a \n\u003ccode\u003eResultSet\u003c/code\u003e object in which each row is a column description"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schema",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "table",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPrimaryKeys",
      "comment": "Retrieves a description of the given table\u0027s primary key columns. They are ordered by COLUMN_NAME. Each primary key column description has the following columns: TABLE_CAT String \u003d\u003e table catalog (may be null) TABLE_SCHEM String \u003d\u003e table schema (may be null) TABLE_NAME String \u003d\u003e table name COLUMN_NAME String \u003d\u003e column name KEY_SEQ short \u003d\u003e sequence number within primary key( a value of 1 represents the first column of the primary key, a value of 2 would represent the second column within the primary key). PK_NAME String \u003d\u003e primary key name (may be null)",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschema\u003c/code\u003e - a schema name; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003etable\u003c/code\u003e - a table name; must match the table name as it is stored in the database"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003eResultSet\u003c/code\u003e - each row is a primary key column description"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schema",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "table",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getImportedKeys",
      "comment": "Retrieves a description of the primary key columns that are referenced by the given table\u0027s foreign key columns (the primary keys imported by a table). They are ordered by PKTABLE_CAT, PKTABLE_SCHEM, PKTABLE_NAME, and KEY_SEQ. Each primary key column description has the following columns: PKTABLE_CAT String \u003d\u003e primary key table catalog being imported (may be null) PKTABLE_SCHEM String \u003d\u003e primary key table schema being imported (may be null) PKTABLE_NAME String \u003d\u003e primary key table name being imported PKCOLUMN_NAME String \u003d\u003e primary key column name being imported FKTABLE_CAT String \u003d\u003e foreign key table catalog (may be null) FKTABLE_SCHEM String \u003d\u003e foreign key table schema (may be null) FKTABLE_NAME String \u003d\u003e foreign key table name FKCOLUMN_NAME String \u003d\u003e foreign key column name KEY_SEQ short \u003d\u003e sequence number within a foreign key( a value of 1 represents the first column of the foreign key, a value of 2 would represent the second column within the foreign key). UPDATE_RULE short \u003d\u003e What happens to a foreign key when the primary key is updated: importedNoAction - do not allow update of primary key if it has been imported importedKeyCascade - change imported key to agree with primary key update importedKeySetNull - change imported key to NULL if its primary key has been updated importedKeySetDefault - change imported key to default values if its primary key has been updated importedKeyRestrict - same as importedKeyNoAction (for ODBC 2.x compatibility) DELETE_RULE short \u003d\u003e What happens to the foreign key when primary is deleted. importedKeyNoAction - do not allow delete of primary key if it has been imported importedKeyCascade - delete rows that import a deleted key importedKeySetNull - change imported key to NULL if its primary key has been deleted importedKeyRestrict - same as importedKeyNoAction (for ODBC 2.x compatibility) importedKeySetDefault - change imported key to default if its primary key has been deleted FK_NAME String \u003d\u003e foreign key name (may be null) PK_NAME String \u003d\u003e primary key name (may be null) DEFERRABILITY short \u003d\u003e can the evaluation of foreign key constraints be deferred until commit importedKeyInitiallyDeferred - see SQL92 for definition importedKeyInitiallyImmediate - see SQL92 for definition importedKeyNotDeferrable - see SQL92 for definition",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getExportedKeys(java.lang.String,java.lang.String,java.lang.String)\"\u003e\u003ccode\u003egetExportedKeys(java.lang.String, java.lang.String, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschema\u003c/code\u003e - a schema name; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003etable\u003c/code\u003e - a table name; must match the table name as it is stored in the database"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003eResultSet\u003c/code\u003e - each row is a primary key column description"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schema",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "table",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getExportedKeys",
      "comment": "Retrieves a description of the foreign key columns that reference the given table\u0027s primary key columns (the foreign keys exported by a table). They are ordered by FKTABLE_CAT, FKTABLE_SCHEM, FKTABLE_NAME, and KEY_SEQ. Each foreign key column description has the following columns: PKTABLE_CAT String \u003d\u003e primary key table catalog (may be null) PKTABLE_SCHEM String \u003d\u003e primary key table schema (may be null) PKTABLE_NAME String \u003d\u003e primary key table name PKCOLUMN_NAME String \u003d\u003e primary key column name FKTABLE_CAT String \u003d\u003e foreign key table catalog (may be null) being exported (may be null) FKTABLE_SCHEM String \u003d\u003e foreign key table schema (may be null) being exported (may be null) FKTABLE_NAME String \u003d\u003e foreign key table name being exported FKCOLUMN_NAME String \u003d\u003e foreign key column name being exported KEY_SEQ short \u003d\u003e sequence number within foreign key( a value of 1 represents the first column of the foreign key, a value of 2 would represent the second column within the foreign key). UPDATE_RULE short \u003d\u003e What happens to foreign key when primary is updated: importedNoAction - do not allow update of primary key if it has been imported importedKeyCascade - change imported key to agree with primary key update importedKeySetNull - change imported key to NULL if its primary key has been updated importedKeySetDefault - change imported key to default values if its primary key has been updated importedKeyRestrict - same as importedKeyNoAction (for ODBC 2.x compatibility) DELETE_RULE short \u003d\u003e What happens to the foreign key when primary is deleted. importedKeyNoAction - do not allow delete of primary key if it has been imported importedKeyCascade - delete rows that import a deleted key importedKeySetNull - change imported key to NULL if its primary key has been deleted importedKeyRestrict - same as importedKeyNoAction (for ODBC 2.x compatibility) importedKeySetDefault - change imported key to default if its primary key has been deleted FK_NAME String \u003d\u003e foreign key name (may be null) PK_NAME String \u003d\u003e primary key name (may be null) DEFERRABILITY short \u003d\u003e can the evaluation of foreign key constraints be deferred until commit importedKeyInitiallyDeferred - see SQL92 for definition importedKeyInitiallyImmediate - see SQL92 for definition importedKeyNotDeferrable - see SQL92 for definition",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getImportedKeys(java.lang.String,java.lang.String,java.lang.String)\"\u003e\u003ccode\u003egetImportedKeys(java.lang.String, java.lang.String, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in this database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschema\u003c/code\u003e - a schema name; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003etable\u003c/code\u003e - a table name; must match the table name as it is stored in this database"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "a \n\u003ccode\u003eResultSet\u003c/code\u003e object in which each row is a foreign key column description"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "parentCatalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "parentSchema",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "parentTable",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "foreignCatalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "foreignSchema",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "foreignTable",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCrossReference",
      "comment": "Retrieves a description of the foreign key columns in the given foreign key table that reference the primary key or the columns representing a unique constraint of the parent table (could be the same or a different table). The number of columns returned from the parent table must match the number of columns that make up the foreign key. They are ordered by FKTABLE_CAT, FKTABLE_SCHEM, FKTABLE_NAME, and KEY_SEQ. Each foreign key column description has the following columns: PKTABLE_CAT String \u003d\u003e parent key table catalog (may be null) PKTABLE_SCHEM String \u003d\u003e parent key table schema (may be null) PKTABLE_NAME String \u003d\u003e parent key table name PKCOLUMN_NAME String \u003d\u003e parent key column name FKTABLE_CAT String \u003d\u003e foreign key table catalog (may be null) being exported (may be null) FKTABLE_SCHEM String \u003d\u003e foreign key table schema (may be null) being exported (may be null) FKTABLE_NAME String \u003d\u003e foreign key table name being exported FKCOLUMN_NAME String \u003d\u003e foreign key column name being exported KEY_SEQ short \u003d\u003e sequence number within foreign key( a value of 1 represents the first column of the foreign key, a value of 2 would represent the second column within the foreign key). UPDATE_RULE short \u003d\u003e What happens to foreign key when parent key is updated: importedNoAction - do not allow update of parent key if it has been imported importedKeyCascade - change imported key to agree with parent key update importedKeySetNull - change imported key to NULL if its parent key has been updated importedKeySetDefault - change imported key to default values if its parent key has been updated importedKeyRestrict - same as importedKeyNoAction (for ODBC 2.x compatibility) DELETE_RULE short \u003d\u003e What happens to the foreign key when parent key is deleted. importedKeyNoAction - do not allow delete of parent key if it has been imported importedKeyCascade - delete rows that import a deleted key importedKeySetNull - change imported key to NULL if its primary key has been deleted importedKeyRestrict - same as importedKeyNoAction (for ODBC 2.x compatibility) importedKeySetDefault - change imported key to default if its parent key has been deleted FK_NAME String \u003d\u003e foreign key name (may be null) PK_NAME String \u003d\u003e parent key name (may be null) DEFERRABILITY short \u003d\u003e can the evaluation of foreign key constraints be deferred until commit importedKeyInitiallyDeferred - see SQL92 for definition importedKeyInitiallyImmediate - see SQL92 for definition importedKeyNotDeferrable - see SQL92 for definition",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getImportedKeys(java.lang.String,java.lang.String,java.lang.String)\"\u003e\u003ccode\u003egetImportedKeys(java.lang.String, java.lang.String, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparentCatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means drop catalog name from the selection criteria",
          "\u003ccode\u003eparentSchema\u003c/code\u003e - a schema name; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means drop schema name from the selection criteria",
          "\u003ccode\u003eparentTable\u003c/code\u003e - the name of the table that exports the key; must match the table name as it is stored in the database",
          "\u003ccode\u003eforeignCatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means drop catalog name from the selection criteria",
          "\u003ccode\u003eforeignSchema\u003c/code\u003e - a schema name; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means drop schema name from the selection criteria",
          "\u003ccode\u003eforeignTable\u003c/code\u003e - the name of the table that imports the key; must match the table name as it is stored in the database"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003eResultSet\u003c/code\u003e - each row is a foreign key column description"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTypeInfo",
      "comment": "Retrieves a description of all the data types supported by this database. They are ordered by DATA_TYPE and then by how closely the data type maps to the corresponding JDBC SQL type. If the database supports SQL distinct types, then getTypeInfo() will return a single row with a TYPE_NAME of DISTINCT and a DATA_TYPE of Types.DISTINCT. If the database supports SQL structured types, then getTypeInfo() will return a single row with a TYPE_NAME of STRUCT and a DATA_TYPE of Types.STRUCT. If SQL distinct or structured types are supported, then information on the individual types may be obtained from the getUDTs() method. Each type description has the following columns: TYPE_NAME String \u003d\u003e Type name DATA_TYPE int \u003d\u003e SQL data type from java.sql.Types PRECISION int \u003d\u003e maximum precision LITERAL_PREFIX String \u003d\u003e prefix used to quote a literal (may be null) LITERAL_SUFFIX String \u003d\u003e suffix used to quote a literal (may be null) CREATE_PARAMS String \u003d\u003e parameters used in creating the type (may be null) NULLABLE short \u003d\u003e can you use NULL for this type. typeNoNulls - does not allow NULL values typeNullable - allows NULL values typeNullableUnknown - nullability unknown CASE_SENSITIVE boolean\u003d\u003e is it case sensitive. SEARCHABLE short \u003d\u003e can you use \"WHERE\" based on this type: typePredNone - No support typePredChar - Only supported with WHERE .. LIKE typePredBasic - Supported except for WHERE .. LIKE typeSearchable - Supported for all WHERE .. UNSIGNED_ATTRIBUTE boolean \u003d\u003e is it unsigned. FIXED_PREC_SCALE boolean \u003d\u003e can it be a money value. AUTO_INCREMENT boolean \u003d\u003e can it be used for an auto-increment value. LOCAL_TYPE_NAME String \u003d\u003e localized version of type name (may be null) MINIMUM_SCALE short \u003d\u003e minimum scale supported MAXIMUM_SCALE short \u003d\u003e maximum scale supported SQL_DATA_TYPE int \u003d\u003e unused SQL_DATETIME_SUB int \u003d\u003e unused NUM_PREC_RADIX int \u003d\u003e usually 2 or 10 The PRECISION column represents the maximum column size that the server supports for the given datatype. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "a \n\u003ccode\u003eResultSet\u003c/code\u003e object in which each row is an SQL type description"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schema",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "table",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "unique",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "approximate",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getIndexInfo",
      "comment": "Retrieves a description of the given table\u0027s indices and statistics. They are ordered by NON_UNIQUE, TYPE, INDEX_NAME, and ORDINAL_POSITION. Each index column description has the following columns: TABLE_CAT String \u003d\u003e table catalog (may be null) TABLE_SCHEM String \u003d\u003e table schema (may be null) TABLE_NAME String \u003d\u003e table name NON_UNIQUE boolean \u003d\u003e Can index values be non-unique. false when TYPE is tableIndexStatistic INDEX_QUALIFIER String \u003d\u003e index catalog (may be null); null when TYPE is tableIndexStatistic INDEX_NAME String \u003d\u003e index name; null when TYPE is tableIndexStatistic TYPE short \u003d\u003e index type: tableIndexStatistic - this identifies table statistics that are returned in conjunction with a table\u0027s index descriptions tableIndexClustered - this is a clustered index tableIndexHashed - this is a hashed index tableIndexOther - this is some other style of index ORDINAL_POSITION short \u003d\u003e column sequence number within index; zero when TYPE is tableIndexStatistic COLUMN_NAME String \u003d\u003e column name; null when TYPE is tableIndexStatistic ASC_OR_DESC String \u003d\u003e column sort sequence, \"A\" \u003d\u003e ascending, \"D\" \u003d\u003e descending, may be null if sort sequence is not supported; null when TYPE is tableIndexStatistic CARDINALITY long \u003d\u003e When TYPE is tableIndexStatistic, then this is the number of rows in the table; otherwise, it is the number of unique values in the index. PAGES long \u003d\u003e When TYPE is tableIndexStatistic then this is the number of pages used for the table, otherwise it is the number of pages used for the current index. FILTER_CONDITION String \u003d\u003e Filter condition, if any. (may be null)",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in this database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschema\u003c/code\u003e - a schema name; must match the schema name as it is stored in this database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003etable\u003c/code\u003e - a table name; must match the table name as it is stored in this database",
          "\u003ccode\u003eunique\u003c/code\u003e - when true, return only indices for unique values; when false, return indices regardless of whether unique or not",
          "\u003ccode\u003eapproximate\u003c/code\u003e - when true, result is allowed to reflect approximate or out of data values; when false, results are requested to be accurate"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003eResultSet\u003c/code\u003e - each row is an index column description"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsResultSetType",
      "comment": "Retrieves whether this database supports the given result set type.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Connection.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003eConnection\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - defined in \n\u003ccode\u003ejava.sql.ResultSet\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "concurrency",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsResultSetConcurrency",
      "comment": "Retrieves whether this database supports the given concurrency type in combination with the given result set type.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Connection.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003eConnection\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - defined in \n\u003ccode\u003ejava.sql.ResultSet\u003c/code\u003e",
          "\u003ccode\u003econcurrency\u003c/code\u003e - type defined in \n\u003ccode\u003ejava.sql.ResultSet\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "ownUpdatesAreVisible",
      "comment": "Retrieves whether for the given type of ResultSet object, the result set\u0027s own updates are visible.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the \n\u003ccode\u003eResultSet\u003c/code\u003e type; one of \n\u003ccode\u003eResultSet.TYPE_FORWARD_ONLY\u003c/code\u003e, \n\u003ccode\u003eResultSet.TYPE_SCROLL_INSENSITIVE\u003c/code\u003e, or \n\u003ccode\u003eResultSet.TYPE_SCROLL_SENSITIVE\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if updates are visible for the given result set type; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "ownDeletesAreVisible",
      "comment": "Retrieves whether a result set\u0027s own deletes are visible.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the \n\u003ccode\u003eResultSet\u003c/code\u003e type; one of \n\u003ccode\u003eResultSet.TYPE_FORWARD_ONLY\u003c/code\u003e, \n\u003ccode\u003eResultSet.TYPE_SCROLL_INSENSITIVE\u003c/code\u003e, or \n\u003ccode\u003eResultSet.TYPE_SCROLL_SENSITIVE\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if deletes are visible for the given result set type; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "ownInsertsAreVisible",
      "comment": "Retrieves whether a result set\u0027s own inserts are visible.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the \n\u003ccode\u003eResultSet\u003c/code\u003e type; one of \n\u003ccode\u003eResultSet.TYPE_FORWARD_ONLY\u003c/code\u003e, \n\u003ccode\u003eResultSet.TYPE_SCROLL_INSENSITIVE\u003c/code\u003e, or \n\u003ccode\u003eResultSet.TYPE_SCROLL_SENSITIVE\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if inserts are visible for the given result set type; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "othersUpdatesAreVisible",
      "comment": "Retrieves whether updates made by others are visible.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the \n\u003ccode\u003eResultSet\u003c/code\u003e type; one of \n\u003ccode\u003eResultSet.TYPE_FORWARD_ONLY\u003c/code\u003e, \n\u003ccode\u003eResultSet.TYPE_SCROLL_INSENSITIVE\u003c/code\u003e, or \n\u003ccode\u003eResultSet.TYPE_SCROLL_SENSITIVE\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if updates made by others are visible for the given result set type; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "othersDeletesAreVisible",
      "comment": "Retrieves whether deletes made by others are visible.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the \n\u003ccode\u003eResultSet\u003c/code\u003e type; one of \n\u003ccode\u003eResultSet.TYPE_FORWARD_ONLY\u003c/code\u003e, \n\u003ccode\u003eResultSet.TYPE_SCROLL_INSENSITIVE\u003c/code\u003e, or \n\u003ccode\u003eResultSet.TYPE_SCROLL_SENSITIVE\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if deletes made by others are visible for the given result set type; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "othersInsertsAreVisible",
      "comment": "Retrieves whether inserts made by others are visible.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the \n\u003ccode\u003eResultSet\u003c/code\u003e type; one of \n\u003ccode\u003eResultSet.TYPE_FORWARD_ONLY\u003c/code\u003e, \n\u003ccode\u003eResultSet.TYPE_SCROLL_INSENSITIVE\u003c/code\u003e, or \n\u003ccode\u003eResultSet.TYPE_SCROLL_SENSITIVE\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if inserts made by others are visible for the given result set type; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "updatesAreDetected",
      "comment": "Retrieves whether or not a visible row update can be detected by calling the method ResultSet.rowUpdated.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the \n\u003ccode\u003eResultSet\u003c/code\u003e type; one of \n\u003ccode\u003eResultSet.TYPE_FORWARD_ONLY\u003c/code\u003e, \n\u003ccode\u003eResultSet.TYPE_SCROLL_INSENSITIVE\u003c/code\u003e, or \n\u003ccode\u003eResultSet.TYPE_SCROLL_SENSITIVE\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if changes are detected by the result set type; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "deletesAreDetected",
      "comment": "Retrieves whether or not a visible row delete can be detected by calling the method ResultSet.rowDeleted. If the method deletesAreDetected returns false, it means that deleted rows are removed from the result set.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the \n\u003ccode\u003eResultSet\u003c/code\u003e type; one of \n\u003ccode\u003eResultSet.TYPE_FORWARD_ONLY\u003c/code\u003e, \n\u003ccode\u003eResultSet.TYPE_SCROLL_INSENSITIVE\u003c/code\u003e, or \n\u003ccode\u003eResultSet.TYPE_SCROLL_SENSITIVE\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if deletes are detected by the given result set type; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "insertsAreDetected",
      "comment": "Retrieves whether or not a visible row insert can be detected by calling the method ResultSet.rowInserted.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the \n\u003ccode\u003eResultSet\u003c/code\u003e type; one of \n\u003ccode\u003eResultSet.TYPE_FORWARD_ONLY\u003c/code\u003e, \n\u003ccode\u003eResultSet.TYPE_SCROLL_INSENSITIVE\u003c/code\u003e, or \n\u003ccode\u003eResultSet.TYPE_SCROLL_SENSITIVE\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if changes are detected by the specified result set type; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsBatchUpdates",
      "comment": "Retrieves whether this database supports batch updates.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this database supports batch updates; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schemaPattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "typeNamePattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "types",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getUDTs",
      "comment": "Retrieves a description of the user-defined types (UDTs) defined in a particular schema. Schema-specific UDTs may have type JAVA_OBJECT, STRUCT, or DISTINCT. Only types matching the catalog, schema, type name and type criteria are returned. They are ordered by DATA_TYPE, TYPE_CAT, TYPE_SCHEM and TYPE_NAME. The type name parameter may be a fully-qualified name. In this case, the catalog and schemaPattern parameters are ignored. Each type description has the following columns: TYPE_CAT String \u003d\u003e the type\u0027s catalog (may be null) TYPE_SCHEM String \u003d\u003e type\u0027s schema (may be null) TYPE_NAME String \u003d\u003e type name CLASS_NAME String \u003d\u003e Java class name DATA_TYPE int \u003d\u003e type value defined in java.sql.Types. One of JAVA_OBJECT, STRUCT, or DISTINCT REMARKS String \u003d\u003e explanatory comment on the type BASE_TYPE short \u003d\u003e type code of the source type of a DISTINCT type or the type that implements the user-generated reference type of the SELF_REFERENCING_COLUMN of a structured type as defined in java.sql.Types (null if DATA_TYPE is not DISTINCT or not STRUCT with REFERENCE_GENERATION \u003d USER_DEFINED) Note: If the driver does not support UDTs, an empty result set is returned.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getSearchStringEscape()\"\u003e\u003ccode\u003egetSearchStringEscape()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschemaPattern\u003c/code\u003e - a schema pattern name; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003etypeNamePattern\u003c/code\u003e - a type name pattern; must match the type name as it is stored in the database; may be a fully qualified name",
          "\u003ccode\u003etypes\u003c/code\u003e - a list of user-defined types (JAVA_OBJECT, STRUCT, or DISTINCT) to include; \n\u003ccode\u003enull\u003c/code\u003e returns all types"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003eResultSet\u003c/code\u003e object in which each row describes a UDT"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.Connection",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getConnection",
      "comment": "Retrieves the connection that produced this metadata object.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the connection that produced this metadata object"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsSavepoints",
      "comment": "Retrieves whether this database supports savepoints.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if savepoints are supported; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsNamedParameters",
      "comment": "Retrieves whether this database supports named parameters to callable statements.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if named parameters are supported; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsMultipleOpenResults",
      "comment": "Retrieves whether it is possible to have multiple ResultSet objects returned from a CallableStatement object simultaneously.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if a \n\u003ccode\u003eCallableStatement\u003c/code\u003e object can return multiple \n\u003ccode\u003eResultSet\u003c/code\u003e objects simultaneously; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsGetGeneratedKeys",
      "comment": "Retrieves whether auto-generated keys can be retrieved after a statement has been executed",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if auto-generated keys can be retrieved after a statement has executed; \n\u003ccode\u003efalse\u003c/code\u003e otherwise \n\u003cp\u003eIf \u003ccode\u003etrue\u003c/code\u003e is returned, the JDBC driver must support the returning of auto-generated keys for at least SQL INSERT statements\u003c/p\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schemaPattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "typeNamePattern",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSuperTypes",
      "comment": "Retrieves a description of the user-defined type (UDT) hierarchies defined in a particular schema in this database. Only the immediate super type/ sub type relationship is modeled. Only supertype information for UDTs matching the catalog, schema, and type name is returned. The type name parameter may be a fully-qualified name. When the UDT name supplied is a fully-qualified name, the catalog and schemaPattern parameters are ignored. If a UDT does not have a direct super type, it is not listed here. A row of the ResultSet object returned by this method describes the designated UDT and a direct supertype. A row has the following columns: TYPE_CAT String \u003d\u003e the UDT\u0027s catalog (may be null) TYPE_SCHEM String \u003d\u003e UDT\u0027s schema (may be null) TYPE_NAME String \u003d\u003e type name of the UDT SUPERTYPE_CAT String \u003d\u003e the direct super type\u0027s catalog (may be null) SUPERTYPE_SCHEM String \u003d\u003e the direct super type\u0027s schema (may be null) SUPERTYPE_NAME String \u003d\u003e the direct super type\u0027s name Note: If the driver does not support type hierarchies, an empty result set is returned.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getSearchStringEscape()\"\u003e\u003ccode\u003egetSearchStringEscape()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means drop catalog name from the selection criteria",
          "\u003ccode\u003eschemaPattern\u003c/code\u003e - a schema name pattern; \"\" retrieves those without a schema",
          "\u003ccode\u003etypeNamePattern\u003c/code\u003e - a UDT name pattern; may be a fully-qualified name"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "a \n\u003ccode\u003eResultSet\u003c/code\u003e object in which a row gives information about the designated UDT"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schemaPattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "tableNamePattern",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSuperTables",
      "comment": "Retrieves a description of the table hierarchies defined in a particular schema in this database. Only supertable information for tables matching the catalog, schema and table name are returned. The table name parameter may be a fully- qualified name, in which case, the catalog and schemaPattern parameters are ignored. If a table does not have a super table, it is not listed here. Supertables have to be defined in the same catalog and schema as the sub tables. Therefore, the type description does not need to include this information for the supertable. Each type description has the following columns: TABLE_CAT String \u003d\u003e the type\u0027s catalog (may be null) TABLE_SCHEM String \u003d\u003e type\u0027s schema (may be null) TABLE_NAME String \u003d\u003e type name SUPERTABLE_NAME String \u003d\u003e the direct super type\u0027s name Note: If the driver does not support type hierarchies, an empty result set is returned.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getSearchStringEscape()\"\u003e\u003ccode\u003egetSearchStringEscape()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means drop catalog name from the selection criteria",
          "\u003ccode\u003eschemaPattern\u003c/code\u003e - a schema name pattern; \"\" retrieves those without a schema",
          "\u003ccode\u003etableNamePattern\u003c/code\u003e - a table name pattern; may be a fully-qualified name"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "a \n\u003ccode\u003eResultSet\u003c/code\u003e object in which each row is a type description"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schemaPattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "typeNamePattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "attributeNamePattern",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAttributes",
      "comment": "Retrieves a description of the given attribute of the given type for a user-defined type (UDT) that is available in the given schema and catalog. Descriptions are returned only for attributes of UDTs matching the catalog, schema, type, and attribute name criteria. They are ordered by TYPE_CAT, TYPE_SCHEM, TYPE_NAME and ORDINAL_POSITION. This description does not contain inherited attributes. The ResultSet object that is returned has the following columns: TYPE_CAT String \u003d\u003e type catalog (may be null) TYPE_SCHEM String \u003d\u003e type schema (may be null) TYPE_NAME String \u003d\u003e type name ATTR_NAME String \u003d\u003e attribute name DATA_TYPE int \u003d\u003e attribute type SQL type from java.sql.Types ATTR_TYPE_NAME String \u003d\u003e Data source dependent type name. For a UDT, the type name is fully qualified. For a REF, the type name is fully qualified and represents the target type of the reference type. ATTR_SIZE int \u003d\u003e column size. For char or date types this is the maximum number of characters; for numeric or decimal types this is precision. DECIMAL_DIGITS int \u003d\u003e the number of fractional digits. Null is returned for data types where DECIMAL_DIGITS is not applicable. NUM_PREC_RADIX int \u003d\u003e Radix (typically either 10 or 2) NULLABLE int \u003d\u003e whether NULL is allowed attributeNoNulls - might not allow NULL values attributeNullable - definitely allows NULL values attributeNullableUnknown - nullability unknown REMARKS String \u003d\u003e comment describing column (may be null) ATTR_DEF String \u003d\u003e default value (may be null) SQL_DATA_TYPE int \u003d\u003e unused SQL_DATETIME_SUB int \u003d\u003e unused CHAR_OCTET_LENGTH int \u003d\u003e for char types the maximum number of bytes in the column ORDINAL_POSITION int \u003d\u003e index of the attribute in the UDT (starting at 1) IS_NULLABLE String \u003d\u003e ISO rules are used to determine the nullability for a attribute. YES --- if the attribute can include NULLs NO --- if the attribute cannot include NULLs empty string --- if the nullability for the attribute is unknown SCOPE_CATALOG String \u003d\u003e catalog of table that is the scope of a reference attribute (null if DATA_TYPE isn\u0027t REF) SCOPE_SCHEMA String \u003d\u003e schema of table that is the scope of a reference attribute (null if DATA_TYPE isn\u0027t REF) SCOPE_TABLE String \u003d\u003e table name that is the scope of a reference attribute (null if the DATA_TYPE isn\u0027t REF) SOURCE_DATA_TYPE short \u003d\u003e source type of a distinct type or user-generated Ref type,SQL type from java.sql.Types (null if DATA_TYPE isn\u0027t DISTINCT or user-generated REF)",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getSearchStringEscape()\"\u003e\u003ccode\u003egetSearchStringEscape()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschemaPattern\u003c/code\u003e - a schema name pattern; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003etypeNamePattern\u003c/code\u003e - a type name pattern; must match the type name as it is stored in the database",
          "\u003ccode\u003eattributeNamePattern\u003c/code\u003e - an attribute name pattern; must match the attribute name as it is declared in the database"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "a \n\u003ccode\u003eResultSet\u003c/code\u003e object in which each row is an attribute description"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "holdability",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsResultSetHoldability",
      "comment": "Retrieves whether this database supports the given result set holdability.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Connection.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003eConnection\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eholdability\u003c/code\u003e - one of the following constants: \n\u003ccode\u003eResultSet.HOLD_CURSORS_OVER_COMMIT\u003c/code\u003e or \n\u003ccode\u003eResultSet.CLOSE_CURSORS_AT_COMMIT\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getResultSetHoldability",
      "comment": "Retrieves this database\u0027s default holdability for ResultSet objects.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the default holdability; either \n\u003ccode\u003eResultSet.HOLD_CURSORS_OVER_COMMIT\u003c/code\u003e or \n\u003ccode\u003eResultSet.CLOSE_CURSORS_AT_COMMIT\u003c/code\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDatabaseMajorVersion",
      "comment": "Retrieves the major version number of the underlying database.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the underlying database\u0027s major version"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDatabaseMinorVersion",
      "comment": "Retrieves the minor version number of the underlying database.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "underlying database\u0027s minor version"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getJDBCMajorVersion",
      "comment": "Retrieves the major JDBC version number for this driver.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "JDBC version major number"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getJDBCMinorVersion",
      "comment": "Retrieves the minor JDBC version number for this driver.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "JDBC version minor number"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSQLStateType",
      "comment": "Indicates whether the SQLSTATE returned by SQLException.getSQLState is X/Open (now known as Open Group) SQL CLI or SQL:2003.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the type of SQLSTATE; one of: sqlStateXOpen or sqlStateSQL"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "locatorsUpdateCopy",
      "comment": "Indicates whether updates made to a LOB are made on a copy or directly to the LOB.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if updates are made to a copy of the LOB; \n\u003ccode\u003efalse\u003c/code\u003e if updates are made directly to the LOB"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsStatementPooling",
      "comment": "Retrieves whether this database supports statement pooling.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.RowIdLifetime",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getRowIdLifetime",
      "comment": "Indicates whether this data source supports the SQL ROWID type, and the lifetime for which a RowId object remains valid.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the status indicating the lifetime of a \n\u003ccode\u003e RowId\u003c/code\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schemaPattern",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSchemas",
      "comment": "Retrieves the schema names available in this database. The results are ordered by TABLE_CATALOG and TABLE_SCHEM. The schema columns are: TABLE_SCHEM String \u003d\u003e schema name TABLE_CATALOG String \u003d\u003e catalog name (may be null)",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getSearchStringEscape()\"\u003e\u003ccode\u003egetSearchStringEscape()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database;\"\" retrieves those without a catalog; null means catalog name should not be used to narrow down the search.",
          "\u003ccode\u003eschemaPattern\u003c/code\u003e - a schema name; must match the schema name as it is stored in the database; null means schema name should not be used to narrow down the search."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "a \n\u003ccode\u003eResultSet\u003c/code\u003e object in which each row is a schema description"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsStoredFunctionsUsingCallSyntax",
      "comment": "Retrieves whether this database supports invoking user-defined or vendor functions using the stored procedure escape syntax.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "autoCommitFailureClosesAllResultSets",
      "comment": "Retrieves whether a SQLException while autoCommit is true indicates that all open ResultSets are closed, even ones that are holdable. When a SQLException occurs while autocommit is true, it is vendor specific whether the JDBC driver responds with a commit operation, a rollback operation, or by doing neither a commit nor a rollback. A potential result of this difference is in whether or not holdable ResultSets are closed.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getClientInfoProperties",
      "comment": "Retrieves a list of the client info properties that the driver supports. The result set contains the following columns NAME String\u003d\u003e The name of the client info property MAX_LEN int\u003d\u003e The maximum length of the value for the property DEFAULT_VALUE String\u003d\u003e The default value of the property DESCRIPTION String\u003d\u003e A description of the property. This will typically contain information as to where this property is stored in the database. The ResultSet is sorted by the NAME column",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "A \n\u003ccode\u003eResultSet\u003c/code\u003e object; each row is a supported client info property"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schemaPattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "functionNamePattern",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getFunctions",
      "comment": "Retrieves a description of the system and user functions available in the given catalog. Only system and user function descriptions matching the schema and function name criteria are returned. They are ordered by FUNCTION_CAT, FUNCTION_SCHEM, FUNCTION_NAME and SPECIFIC_ NAME. Each function description has the following columns: FUNCTION_CAT String \u003d\u003e function catalog (may be null) FUNCTION_SCHEM String \u003d\u003e function schema (may be null) FUNCTION_NAME String \u003d\u003e function name. This is the name used to invoke the function REMARKS String \u003d\u003e explanatory comment on the function FUNCTION_TYPE short \u003d\u003e kind of function: functionResultUnknown - Cannot determine if a return value or table will be returned functionNoTable- Does not return a table functionReturnsTable - Returns a table SPECIFIC_NAME String \u003d\u003e the name which uniquely identifies this function within its schema. This is a user specified, or DBMS generated, name that may be different then the FUNCTION_NAME for example with overload functions A user may not have permission to execute any of the functions that are returned by getFunctions",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getSearchStringEscape()\"\u003e\u003ccode\u003egetSearchStringEscape()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschemaPattern\u003c/code\u003e - a schema name pattern; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003efunctionNamePattern\u003c/code\u003e - a function name pattern; must match the function name as it is stored in the database"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003eResultSet\u003c/code\u003e - each row is a function description"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schemaPattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "functionNamePattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "columnNamePattern",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getFunctionColumns",
      "comment": "Retrieves a description of the given catalog\u0027s system or user function parameters and return type. Only descriptions matching the schema, function and parameter name criteria are returned. They are ordered by FUNCTION_CAT, FUNCTION_SCHEM, FUNCTION_NAME and SPECIFIC_ NAME. Within this, the return value, if any, is first. Next are the parameter descriptions in call order. The column descriptions follow in column number order. Each row in the ResultSet is a parameter description, column description or return type description with the following fields: FUNCTION_CAT String \u003d\u003e function catalog (may be null) FUNCTION_SCHEM String \u003d\u003e function schema (may be null) FUNCTION_NAME String \u003d\u003e function name. This is the name used to invoke the function COLUMN_NAME String \u003d\u003e column/parameter name COLUMN_TYPE Short \u003d\u003e kind of column/parameter: functionColumnUnknown - nobody knows functionColumnIn - IN parameter functionColumnInOut - INOUT parameter functionColumnOut - OUT parameter functionColumnReturn - function return value functionColumnResult - Indicates that the parameter or column is a column in the ResultSet DATA_TYPE int \u003d\u003e SQL type from java.sql.Types TYPE_NAME String \u003d\u003e SQL type name, for a UDT type the type name is fully qualified PRECISION int \u003d\u003e precision LENGTH int \u003d\u003e length in bytes of data SCALE short \u003d\u003e scale - null is returned for data types where SCALE is not applicable. RADIX short \u003d\u003e radix NULLABLE short \u003d\u003e can it contain NULL. functionNoNulls - does not allow NULL values functionNullable - allows NULL values functionNullableUnknown - nullability unknown REMARKS String \u003d\u003e comment describing column/parameter CHAR_OCTET_LENGTH int \u003d\u003e the maximum length of binary and character based parameters or columns. For any other datatype the returned value is a NULL ORDINAL_POSITION int \u003d\u003e the ordinal position, starting from 1, for the input and output parameters. A value of 0 is returned if this row describes the function\u0027s return value. For result set columns, it is the ordinal position of the column in the result set starting from 1. IS_NULLABLE String \u003d\u003e ISO rules are used to determine the nullability for a parameter or column. YES --- if the parameter or column can include NULLs NO --- if the parameter or column cannot include NULLs empty string --- if the nullability for the parameter or column is unknown SPECIFIC_NAME String \u003d\u003e the name which uniquely identifies this function within its schema. This is a user specified, or DBMS generated, name that may be different then the FUNCTION_NAME for example with overload functions The PRECISION column represents the specified column size for the given parameter or column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/DatabaseMetaData.html#getSearchStringEscape()\"\u003e\u003ccode\u003egetSearchStringEscape()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschemaPattern\u003c/code\u003e - a schema name pattern; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003efunctionNamePattern\u003c/code\u003e - a procedure name pattern; must match the function name as it is stored in the database",
          "\u003ccode\u003ecolumnNamePattern\u003c/code\u003e - a parameter name pattern; must match the parameter or column name as it is stored in the database"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003eResultSet\u003c/code\u003e - each row describes a user function parameter, column or return type"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ResultSet",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "catalog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "schemaPattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "tableNamePattern",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "columnNamePattern",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPseudoColumns",
      "comment": "Retrieves a description of the pseudo or hidden columns available in a given table within the specified catalog and schema. Pseudo or hidden columns may not always be stored within a table and are not visible in a ResultSet unless they are specified in the query\u0027s outermost SELECT list. Pseudo or hidden columns may not necessarily be able to be modified. If there are no pseudo or hidden columns, an empty ResultSet is returned. Only column descriptions matching the catalog, schema, table and column name criteria are returned. They are ordered by TABLE_CAT,TABLE_SCHEM, TABLE_NAME and COLUMN_NAME. Each column description has the following columns: TABLE_CAT String \u003d\u003e table catalog (may be null) TABLE_SCHEM String \u003d\u003e table schema (may be null) TABLE_NAME String \u003d\u003e table name COLUMN_NAME String \u003d\u003e column name DATA_TYPE int \u003d\u003e SQL type from java.sql.Types COLUMN_SIZE int \u003d\u003e column size. DECIMAL_DIGITS int \u003d\u003e the number of fractional digits. Null is returned for data types where DECIMAL_DIGITS is not applicable. NUM_PREC_RADIX int \u003d\u003e Radix (typically either 10 or 2) COLUMN_USAGE String \u003d\u003e The allowed usage for the column. The value returned will correspond to the enum name returned by PseudoColumnUsage.name() REMARKS String \u003d\u003e comment describing column (may be null) CHAR_OCTET_LENGTH int \u003d\u003e for char types the maximum number of bytes in the column IS_NULLABLE String \u003d\u003e ISO rules are used to determine the nullability for a column. YES --- if the column can include NULLs NO --- if the column cannot include NULLs empty string --- if the nullability for the column is unknown The COLUMN_SIZE column specifies the column size for the given column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/PseudoColumnUsage.html\" title\u003d\"enum class in java.sql\"\u003e\u003ccode\u003ePseudoColumnUsage\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecatalog\u003c/code\u003e - a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; \n\u003ccode\u003enull\u003c/code\u003e means that the catalog name should not be used to narrow the search",
          "\u003ccode\u003eschemaPattern\u003c/code\u003e - a schema name pattern; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; \n\u003ccode\u003enull\u003c/code\u003e means that the schema name should not be used to narrow the search",
          "\u003ccode\u003etableNamePattern\u003c/code\u003e - a table name pattern; must match the table name as it is stored in the database",
          "\u003ccode\u003ecolumnNamePattern\u003c/code\u003e - a column name pattern; must match the column name as it is stored in the database"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003eResultSet\u003c/code\u003e - each row is a column description"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "generatedKeyAlwaysReturned",
      "comment": "Retrieves whether a generated key will always be returned if the column name(s) or index(es) specified for the auto generated key column(s) are valid and the statement succeeds. The key that is returned may or may not be based on the column(s) for the auto generated key. Consult your JDBC driver documentation for additional details.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if so; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxLogicalLobSize",
      "comment": "Retrieves the maximum number of bytes this database allows for the logical size for a LOB. The default implementation will return 0",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the maximum number of bytes allowed; a result of zero means that there is no limit or the limit is not known"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsRefCursors",
      "comment": "Retrieves whether this database supports REF CURSOR. The default implementation will return false",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this database supports REF CURSOR; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "supportsSharding",
      "comment": "Retrieves whether this database supports sharding.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "The default implementation will return \n\u003ccode\u003efalse\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this database supports sharding; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "9"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.sql.DatabaseMetaData",
  "comment": "Comprehensive information about the database as a whole. \n\u003cp\u003e This interface is implemented by driver vendors to let users know the capabilities of a Database Management System (DBMS) in combination with the driver based on JDBC technology (\"JDBC driver\") that is used with it. Different relational DBMSs often support different features, implement features in different ways, and use different data types. In addition, a driver may implement a feature on top of what the DBMS offers. Information returned by methods in this interface applies to the capabilities of a particular driver and a particular DBMS working together. Note that as used in this documentation, the term \"database\" is used generically to refer to both the driver and DBMS. \u003c/p\u003e\n\u003cp\u003e A user for this interface is commonly a tool that needs to discover how to deal with the underlying DBMS. This is especially true for applications that are intended to be used with more than one DBMS. For example, a tool might use the method \u003ccode\u003egetTypeInfo\u003c/code\u003e to find out what data types can be used in a \u003ccode\u003eCREATE TABLE\u003c/code\u003e statement. Or a user might call the method \u003ccode\u003esupportsCorrelatedSubqueries\u003c/code\u003e to see if it is possible to use a correlated subquery or \u003ccode\u003esupportsBatchUpdates\u003c/code\u003e to see if it is possible to use batch updates. \u003c/p\u003e\n\u003cp\u003e Some \u003ccode\u003eDatabaseMetaData\u003c/code\u003e methods return lists of information in the form of \u003ccode\u003eResultSet\u003c/code\u003e objects. Regular \u003ccode\u003eResultSet\u003c/code\u003e methods, such as \u003ccode\u003egetString\u003c/code\u003e and \u003ccode\u003egetInt\u003c/code\u003e, can be used to retrieve the data from these \u003ccode\u003eResultSet\u003c/code\u003e objects. If a given form of metadata is not available, an empty \u003ccode\u003eResultSet\u003c/code\u003e will be returned. Additional columns beyond the columns defined to be returned by the \u003ccode\u003eResultSet\u003c/code\u003e object for a given method can be defined by the JDBC driver vendor and must be accessed by their \u003cb\u003ecolumn label\u003c/b\u003e. \u003c/p\u003e\n\u003cp\u003e Some \u003ccode\u003eDatabaseMetaData\u003c/code\u003e methods take arguments that are String patterns. These arguments all have names such as fooPattern. Within a pattern String, \"%\" means match any substring of 0 or more characters, and \"_\" means match any one character. Only metadata entries matching the search pattern are returned. If a search pattern argument is set to \u003ccode\u003enull\u003c/code\u003e, that argument\u0027s criterion will be dropped from the search.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.1"
    ]
  }
}