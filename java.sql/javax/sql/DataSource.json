{
  "packageName": "javax.sql",
  "simpleName": "DataSource",
  "moduleName": "java.sql",
  "type": "INTERFACE",
  "interfaces": [
    {
      "name": "javax.sql.CommonDataSource",
      "type": "Class"
    },
    {
      "name": "java.sql.Wrapper",
      "type": "Class"
    }
  ],
  "members": [
    {
      "returnType": {
        "name": "java.sql.Connection",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getConnection",
      "comment": "Attempts to establish a connection with the data source that this DataSource object represents.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLTimeoutException.html\" title\u003d\"class in java.sql\"\u003eSQLTimeoutException\u003c/a\u003e\u003c/code\u003e - when the driver has determined that the timeout value specified by the \n\u003ccode\u003esetLoginTimeout\u003c/code\u003e method has been exceeded and has at least tried to cancel the current database connection attempt"
        ],
        "return": [
          "a connection to the data source"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.Connection",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "username",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "password",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getConnection",
      "comment": "Attempts to establish a connection with the data source that this DataSource object represents.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eusername\u003c/code\u003e - the database user on whose behalf the connection is being made",
          "\u003ccode\u003epassword\u003c/code\u003e - the user\u0027s password"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLTimeoutException.html\" title\u003d\"class in java.sql\"\u003eSQLTimeoutException\u003c/a\u003e\u003c/code\u003e - when the driver has determined that the timeout value specified by the \n\u003ccode\u003esetLoginTimeout\u003c/code\u003e method has been exceeded and has at least tried to cancel the current database connection attempt"
        ],
        "return": [
          "a connection to the data source"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.PrintWriter",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getLogWriter",
      "comment": "Retrieves the log writer for this DataSource object. The log writer is a character output stream to which all logging and tracing messages for this data source will be printed. This includes messages printed by the methods of this object, messages printed by methods of other objects manufactured by this object, and so on. Messages printed to a data source specific log writer are not printed to the log writer associated with the java.sql.DriverManager class. When a DataSource object is created, the log writer is initially null; in other words, the default is for logging to be disabled.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/CommonDataSource.html#setLogWriter(java.io.PrintWriter)\"\u003e\u003ccode\u003eCommonDataSource.setLogWriter(java.io.PrintWriter)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/CommonDataSource.html#getLogWriter()\"\u003egetLogWriter\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/CommonDataSource.html\" title\u003d\"interface in javax.sql\"\u003eCommonDataSource\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "return": [
          "the log writer for this data source or null if logging is disabled"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.PrintWriter",
            "type": "Class"
          },
          "name": "out",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setLogWriter",
      "comment": "Sets the log writer for this DataSource object to the given java.io.PrintWriter object. The log writer is a character output stream to which all logging and tracing messages for this data source will be printed. This includes messages printed by the methods of this object, messages printed by methods of other objects manufactured by this object, and so on. Messages printed to a data source- specific log writer are not printed to the log writer associated with the java.sql.DriverManager class. When a DataSource object is created the log writer is initially null; in other words, the default is for logging to be disabled.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/CommonDataSource.html#getLogWriter()\"\u003e\u003ccode\u003eCommonDataSource.getLogWriter()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/CommonDataSource.html#setLogWriter(java.io.PrintWriter)\"\u003esetLogWriter\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/CommonDataSource.html\" title\u003d\"interface in javax.sql\"\u003eCommonDataSource\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - the new log writer; to disable logging, set to null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "seconds",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setLoginTimeout",
      "comment": "Sets the maximum time in seconds that this data source will wait while attempting to connect to a database. A value of zero specifies that the timeout is the default system timeout if there is one; otherwise, it specifies that there is no timeout. When a DataSource object is created, the login timeout is initially zero.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/CommonDataSource.html#getLoginTimeout()\"\u003e\u003ccode\u003eCommonDataSource.getLoginTimeout()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/CommonDataSource.html#setLoginTimeout(int)\"\u003esetLoginTimeout\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/CommonDataSource.html\" title\u003d\"interface in javax.sql\"\u003eCommonDataSource\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eseconds\u003c/code\u003e - the data source login time limit"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getLoginTimeout",
      "comment": "Gets the maximum time in seconds that this data source can wait while attempting to connect to a database. A value of zero means that the timeout is the default system timeout if there is one; otherwise, it means that there is no timeout. When a DataSource object is created, the login timeout is initially zero.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/CommonDataSource.html#setLoginTimeout(int)\"\u003e\u003ccode\u003eCommonDataSource.setLoginTimeout(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/CommonDataSource.html#getLoginTimeout()\"\u003egetLoginTimeout\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/CommonDataSource.html\" title\u003d\"interface in javax.sql\"\u003eCommonDataSource\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs."
        ],
        "return": [
          "the data source login time limit"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.sql.ConnectionBuilder",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "createConnectionBuilder",
      "comment": "Create a new ConnectionBuilder instance",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "The default implementation will throw a \n\u003ccode\u003eSQLFeatureNotSupportedException\u003c/code\u003e"
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ConnectionBuilder.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003eConnectionBuilder\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if an error occurs creating the builder",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLFeatureNotSupportedException.html\" title\u003d\"class in java.sql\"\u003eSQLFeatureNotSupportedException\u003c/a\u003e\u003c/code\u003e - if the driver does not support sharding"
        ],
        "return": [
          "The ConnectionBuilder instance that was created"
        ],
        "since": [
          "9"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.sql.DataSource",
  "comment": "\u003cp\u003eA factory for connections to the physical data source that this \u003ccode\u003eDataSource\u003c/code\u003e object represents. An alternative to the \u003ccode\u003eDriverManager\u003c/code\u003e facility, a \u003ccode\u003eDataSource\u003c/code\u003e object is the preferred means of getting a connection. An object that implements the \u003ccode\u003eDataSource\u003c/code\u003e interface will typically be registered with a naming service based on the Java Naming and Directory (JNDI) API. \u003c/p\u003e\n\u003cp\u003e The \u003ccode\u003eDataSource\u003c/code\u003e interface is implemented by a driver vendor. There are three types of implementations: \u003c/p\u003e\n\u003col\u003e \n \u003cli\u003eBasic implementation -- produces a standard \u003ccode\u003eConnection\u003c/code\u003e object \u003c/li\u003e\n \u003cli\u003eConnection pooling implementation -- produces a \u003ccode\u003eConnection\u003c/code\u003e object that will automatically participate in connection pooling. This implementation works with a middle-tier connection pooling manager. \u003c/li\u003e\n \u003cli\u003eDistributed transaction implementation -- produces a \u003ccode\u003eConnection\u003c/code\u003e object that may be used for distributed transactions and almost always participates in connection pooling. This implementation works with a middle-tier transaction manager and almost always with a connection pooling manager. \u003c/li\u003e\n\u003c/ol\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e A \u003ccode\u003eDataSource\u003c/code\u003e object has properties that can be modified when necessary. For example, if the data source is moved to a different server, the property for the server can be changed. The benefit is that because the data source\u0027s properties can be changed, any code accessing that data source does not need to be changed. \u003c/p\u003e\n\u003cp\u003e A driver that is accessed via a \u003ccode\u003eDataSource\u003c/code\u003e object does not register itself with the \u003ccode\u003eDriverManager\u003c/code\u003e. Rather, a \u003ccode\u003eDataSource\u003c/code\u003e object is retrieved through a lookup operation and then used to create a \u003ccode\u003eConnection\u003c/code\u003e object. With a basic implementation, the connection obtained through a \u003ccode\u003eDataSource\u003c/code\u003e object is identical to a connection obtained through the \u003ccode\u003eDriverManager\u003c/code\u003e facility. \u003c/p\u003e\n\u003cp\u003e An implementation of \u003ccode\u003eDataSource\u003c/code\u003e must include a public no-arg constructor.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}