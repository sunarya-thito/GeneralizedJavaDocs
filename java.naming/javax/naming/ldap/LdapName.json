{
  "packageName": "javax.naming.ldap",
  "simpleName": "LdapName",
  "moduleName": "java.naming",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "size",
      "comment": "Retrieves the number of components in this LDAP name.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html#size()\"\u003esize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html\" title\u003d\"interface in javax.naming\"\u003eName\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "The non-negative number of components in this LDAP name."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isEmpty",
      "comment": "Determines whether this LDAP name is empty. An empty name is one with zero components.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html#isEmpty()\"\u003eisEmpty\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html\" title\u003d\"interface in javax.naming\"\u003eName\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if this LDAP name is empty, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Enumeration",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAll",
      "comment": "Retrieves the components of this name as an enumeration of strings. The effect of updates to this name on this enumeration is undefined. If the name has zero components, an empty (non-null) enumeration is returned. The order of the components returned by the enumeration is same as the order in which the components are numbered as described in the class description.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html#getAll()\"\u003egetAll\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html\" title\u003d\"interface in javax.naming\"\u003eName\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "A non-null enumeration of the components of this LDAP name. Each element of the enumeration is of class String."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "posn"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "get",
      "comment": "Retrieves a component of this LDAP name as a string.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html#get(int)\"\u003eget\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html\" title\u003d\"interface in javax.naming\"\u003eName\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eposn\u003c/code\u003e - The 0-based index of the component to retrieve. Must be in the range [0,size())."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if posn is outside the specified range."
        ],
        "return": [
          "The non-null component at index posn."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.ldap.Rdn",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "posn"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRdn",
      "comment": "Retrieves an RDN of this LDAP name as an Rdn.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eposn\u003c/code\u003e - The 0-based index of the RDN to retrieve. Must be in the range [0,size())."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if posn is outside the specified range."
        ],
        "return": [
          "The non-null RDN at index posn."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.Name",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "posn"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPrefix",
      "comment": "Creates a name whose components consist of a prefix of the components of this LDAP name. Subsequent changes to this name will not affect the name that is returned and vice versa.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html#getPrefix(int)\"\u003egetPrefix\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html\" title\u003d\"interface in javax.naming\"\u003eName\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eposn\u003c/code\u003e - The 0-based index of the component at which to stop. Must be in the range [0,size()]."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - If posn is outside the specified range."
        ],
        "return": [
          "An instance of \n\u003ccode\u003eLdapName\u003c/code\u003e consisting of the components at indexes in the range [0,posn). If posn is zero, an empty LDAP name is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.Name",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "posn"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSuffix",
      "comment": "Creates a name whose components consist of a suffix of the components in this LDAP name. Subsequent changes to this name do not affect the name that is returned and vice versa.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html#getSuffix(int)\"\u003egetSuffix\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html\" title\u003d\"interface in javax.naming\"\u003eName\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eposn\u003c/code\u003e - The 0-based index of the component at which to start. Must be in the range [0,size()]."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - If posn is outside the specified range."
        ],
        "return": [
          "An instance of \n\u003ccode\u003eLdapName\u003c/code\u003e consisting of the components at indexes in the range [posn,size()). If posn is equal to size(), an empty LDAP name is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.naming.Name",
            "type": "Class"
          },
          "field": {
            "name": "n"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "startsWith",
      "comment": "Determines whether this LDAP name starts with a specified LDAP name prefix. A name n is a prefix if it is equal to getPrefix(n.size())--in other words this LDAP name starts with \u0027n\u0027. If n is null or not a RFC2253 formatted name as described in the class description, false is returned.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/ldap/LdapName.html#getPrefix(int)\"\u003e\u003ccode\u003egetPrefix(int posn)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html#startsWith(javax.naming.Name)\"\u003estartsWith\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html\" title\u003d\"interface in javax.naming\"\u003eName\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003en\u003c/code\u003e - The LDAP name to check."
        ],
        "return": [
          "true if \n\u003ccode\u003en\u003c/code\u003e is a prefix of this LDAP name, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "javax.naming.ldap.Rdn",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "rdns"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "startsWith",
      "comment": "Determines whether the specified RDN sequence forms a prefix of this LDAP name. Returns true if this LdapName is at least as long as rdns, and for every position p in the range [0, rdns.size()) the component getRdn(p) matches rdns.get(p). Returns false otherwise. If rdns is null, false is returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003erdns\u003c/code\u003e - The sequence of \n\u003ccode\u003eRdn\u003c/code\u003es to check."
        ],
        "return": [
          "true if \n\u003ccode\u003erdns\u003c/code\u003e form a prefix of this LDAP name, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.naming.Name",
            "type": "Class"
          },
          "field": {
            "name": "n"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "endsWith",
      "comment": "Determines whether this LDAP name ends with a specified LDAP name suffix. A name n is a suffix if it is equal to getSuffix(size()-n.size())--in other words this LDAP name ends with \u0027n\u0027. If n is null or not a RFC2253 formatted name as described in the class description, false is returned.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/ldap/LdapName.html#getSuffix(int)\"\u003e\u003ccode\u003egetSuffix(int posn)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html#endsWith(javax.naming.Name)\"\u003eendsWith\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html\" title\u003d\"interface in javax.naming\"\u003eName\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003en\u003c/code\u003e - The LDAP name to check."
        ],
        "return": [
          "true if \n\u003ccode\u003en\u003c/code\u003e is a suffix of this name, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "javax.naming.ldap.Rdn",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "rdns"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "endsWith",
      "comment": "Determines whether the specified RDN sequence forms a suffix of this LDAP name. Returns true if this LdapName is at least as long as rdns, and for every position p in the range [size() - rdns.size(), size()) the component getRdn(p) matches rdns.get(p). Returns false otherwise. If rdns is null, false is returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003erdns\u003c/code\u003e - The sequence of \n\u003ccode\u003eRdn\u003c/code\u003es to check."
        ],
        "return": [
          "true if \n\u003ccode\u003erdns\u003c/code\u003e form a suffix of this LDAP name, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.Name",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.naming.InvalidNameException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.naming.Name",
            "type": "Class"
          },
          "field": {
            "name": "suffix"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addAll",
      "comment": "Adds the components of a name -- in order -- to the end of this name.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html#addAll(javax.naming.Name)\"\u003eaddAll\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html\" title\u003d\"interface in javax.naming\"\u003eName\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esuffix\u003c/code\u003e - The non-null components to add."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/InvalidNameException.html\" title\u003d\"class in javax.naming\"\u003eInvalidNameException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esuffix\u003c/code\u003e is not a valid LDAP name, or if the addition of the components would violate the syntax rules of this LDAP name."
        ],
        "return": [
          "The updated name (not a new instance)."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.Name",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "javax.naming.ldap.Rdn",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "suffixRdns"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addAll",
      "comment": "Adds the RDNs of a name -- in order -- to the end of this name.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esuffixRdns\u003c/code\u003e - The non-null suffix \n\u003ccode\u003eRdn\u003c/code\u003es to add."
        ],
        "return": [
          "The updated name (not a new instance)."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.Name",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.naming.InvalidNameException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "posn"
          }
        },
        {
          "type": {
            "name": "javax.naming.Name",
            "type": "Class"
          },
          "field": {
            "name": "suffix"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addAll",
      "comment": "Adds the components of a name -- in order -- at a specified position within this name. Components of this LDAP name at or after the index (if any) of the first new component are shifted up (away from index 0) to accommodate the new components.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html#addAll(int,javax.naming.Name)\"\u003eaddAll\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html\" title\u003d\"interface in javax.naming\"\u003eName\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esuffix\u003c/code\u003e - The non-null components to add.",
          "\u003ccode\u003eposn\u003c/code\u003e - The index at which to add the new component. Must be in the range [0,size()]."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/InvalidNameException.html\" title\u003d\"class in javax.naming\"\u003eInvalidNameException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esuffix\u003c/code\u003e is not a valid LDAP name, or if the addition of the components would violate the syntax rules of this LDAP name.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - If posn is outside the specified range."
        ],
        "return": [
          "The updated name (not a new instance)."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.Name",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "posn"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "javax.naming.ldap.Rdn",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "suffixRdns"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addAll",
      "comment": "Adds the RDNs of a name -- in order -- at a specified position within this name. RDNs of this LDAP name at or after the index (if any) of the first new RDN are shifted up (away from index 0) to accommodate the new RDNs.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esuffixRdns\u003c/code\u003e - The non-null suffix \n\u003ccode\u003eRdn\u003c/code\u003es to add.",
          "\u003ccode\u003eposn\u003c/code\u003e - The index at which to add the suffix RDNs. Must be in the range [0,size()]."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - If posn is outside the specified range."
        ],
        "return": [
          "The updated name (not a new instance)."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.Name",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.naming.InvalidNameException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "comp"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a single component to the end of this LDAP name.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html#add(java.lang.String)\"\u003eadd\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html\" title\u003d\"interface in javax.naming\"\u003eName\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomp\u003c/code\u003e - The non-null component to add."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/InvalidNameException.html\" title\u003d\"class in javax.naming\"\u003eInvalidNameException\u003c/a\u003e\u003c/code\u003e - If adding comp at end of the name would violate the name\u0027s syntax."
        ],
        "return": [
          "The updated LdapName, not a new instance. Cannot be null."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.Name",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.naming.ldap.Rdn",
            "type": "Class"
          },
          "field": {
            "name": "comp"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a single RDN to the end of this LDAP name.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecomp\u003c/code\u003e - The non-null RDN to add."
        ],
        "return": [
          "The updated LdapName, not a new instance. Cannot be null."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.Name",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.naming.InvalidNameException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "posn"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "comp"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a single component at a specified position within this LDAP name. Components of this LDAP name at or after the index (if any) of the new component are shifted up by one (away from index 0) to accommodate the new component.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html#add(int,java.lang.String)\"\u003eadd\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html\" title\u003d\"interface in javax.naming\"\u003eName\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomp\u003c/code\u003e - The non-null component to add.",
          "\u003ccode\u003eposn\u003c/code\u003e - The index at which to add the new component. Must be in the range [0,size()]."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - If posn is outside the specified range.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/InvalidNameException.html\" title\u003d\"class in javax.naming\"\u003eInvalidNameException\u003c/a\u003e\u003c/code\u003e - If adding comp at the specified position would violate the name\u0027s syntax."
        ],
        "return": [
          "The updated LdapName, not a new instance. Cannot be null."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.Name",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "posn"
          }
        },
        {
          "type": {
            "name": "javax.naming.ldap.Rdn",
            "type": "Class"
          },
          "field": {
            "name": "comp"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a single RDN at a specified position within this LDAP name. RDNs of this LDAP name at or after the index (if any) of the new RDN are shifted up by one (away from index 0) to accommodate the new RDN.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecomp\u003c/code\u003e - The non-null RDN to add.",
          "\u003ccode\u003eposn\u003c/code\u003e - The index at which to add the new RDN. Must be in the range [0,size()]."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - If posn is outside the specified range."
        ],
        "return": [
          "The updated LdapName, not a new instance. Cannot be null."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.naming.InvalidNameException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "posn"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes a component from this LDAP name. The component of this name at the specified position is removed. Components with indexes greater than this position (if any) are shifted down (toward index 0) by one.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html#remove(int)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html\" title\u003d\"interface in javax.naming\"\u003eName\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eposn\u003c/code\u003e - The index of the component to remove. Must be in the range [0,size())."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if posn is outside the specified range.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/InvalidNameException.html\" title\u003d\"class in javax.naming\"\u003eInvalidNameException\u003c/a\u003e\u003c/code\u003e - if deleting the component would violate the syntax rules of the name."
        ],
        "return": [
          "The component removed (a String)."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.naming.ldap.Rdn",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRdns",
      "comment": "Retrieves the list of relative distinguished names. The contents of the list are unmodifiable. The indexing of RDNs in the returned list follows the numbering of RDNs as described in the class description. If the name has zero components, an empty list is returned.",
      "tagMap": {
        "return": [
          "The name as a list of RDNs which are instances of the class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/ldap/Rdn.html\" title\u003d\"class in javax.naming.ldap\"\u003e\u003ccode\u003eRdn\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Generates a new copy of this name. Subsequent changes to the components of this name will not affect the new copy, and vice versa.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html\" title\u003d\"interface in javax.naming\"\u003eName\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "A copy of the this LDAP name."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of this LDAP name in a format defined by RFC 2253 and described in the class description. If the name has zero components an empty string is returned.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "The string representation of the LdapName."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Determines whether two LDAP names are equal. If obj is null or not an LDAP name, false is returned. Two LDAP names are equal if each RDN in one is equal to the corresponding RDN in the other. This implies both have the same number of RDNs, and each RDN\u0027s equals() test against the corresponding RDN in the other name returns true. See Rdn.equals(Object obj) for a definition of RDN equality.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/ldap/LdapName.html#hashCode()\"\u003e\u003ccode\u003ehashCode()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - The possibly null object to compare against."
        ],
        "return": [
          "true if obj is equal to this LDAP name, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "compareTo",
      "comment": "Compares this LdapName with the specified Object for order. Returns a negative integer, zero, or a positive integer as this Name is less than, equal to, or greater than the given Object. If obj is null or not an instance of LdapName, ClassCastException is thrown. Ordering of LDAP names follows the lexicographical rules for string comparison, with the extension that this applies to all the RDNs in the LDAP name. All the RDNs are lined up in their specified order and compared lexicographically. See Rdn.compareTo(Object obj) for RDN comparison rules. If this LDAP name is lexicographically lesser than obj, a negative number is returned. If this LDAP name is lexicographically greater than obj, a positive number is returned.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html#compareTo(T)\"\u003e\u003ccode\u003eComparable.compareTo(Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html#compareTo(T)\"\u003ecompareTo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003eComparable\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html#compareTo(java.lang.Object)\"\u003ecompareTo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/Name.html\" title\u003d\"interface in javax.naming\"\u003eName\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - The non-null LdapName instance to compare against."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if obj is null or not a LdapName."
        ],
        "return": [
          "A negative integer, zero, or a positive integer as this Name is less than, equal to, or greater than the given obj."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Computes the hash code of this LDAP name. The hash code is the sum of the hash codes of individual RDNs of this name.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/ldap/LdapName.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eequals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "An int representing the hash code of this name."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.naming.InvalidNameException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an LDAP name from the given distinguished name.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/ldap/Rdn.html#escapeValue(java.lang.Object)\"\u003e\u003ccode\u003eRdn.escapeValue(Object value)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - This is a non-null distinguished name formatted according to the rules defined in \n\u003ca href\u003d\"http://www.ietf.org/rfc/rfc2253.txt\"\u003eRFC 2253\u003c/a\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/InvalidNameException.html\" title\u003d\"class in javax.naming\"\u003eInvalidNameException\u003c/a\u003e\u003c/code\u003e - if a syntax violation is detected."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "javax.naming.ldap.Rdn",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "rdns"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an LDAP name given its parsed RDN components. The indexing of RDNs in the list follows the numbering of RDNs described in the class description.",
      "tagMap": {
        "param": [
          "\u003ccode\u003erdns\u003c/code\u003e - The non-null list of \n\u003ccode\u003eRdn\u003c/code\u003es forming this LDAP name."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.naming.ldap.LdapName",
  "comment": "This class represents a distinguished name as specified by \n\u003ca href\u003d\"http://www.ietf.org/rfc/rfc2253.txt\"\u003eRFC 2253\u003c/a\u003e. A distinguished name, or DN, is composed of an ordered list of components called \n\u003cem\u003erelative distinguished name\u003c/em\u003es, or RDNs. Details of a DN\u0027s syntax are described in RFC 2253. \n\u003cp\u003e This class resolves a few ambiguities found in RFC 2253 as follows: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e RFC 2253 leaves the term \"whitespace\" undefined. The ASCII space character 0x20 (\" \") is used in its place. \u003c/li\u003e\n \u003cli\u003e Whitespace is allowed on either side of \u0027,\u0027, \u0027;\u0027, \u0027\u003d\u0027, and \u0027+\u0027. Such whitespace is accepted but not generated by this code, and is ignored when comparing names. \u003c/li\u003e\n \u003cli\u003e AttributeValue strings containing \u0027\u003d\u0027 or non-leading \u0027#\u0027 characters (unescaped) are accepted. \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e String names passed to \u003ccode\u003eLdapName\u003c/code\u003e or returned by it use the full Unicode character set. They may also contain characters encoded into UTF-8 with each octet represented by a three-character substring such as \"\\\\B4\". They may not, however, contain characters encoded into UTF-8 with each octet represented by a single character in the string: the meaning would be ambiguous. \u003c/p\u003e\n\u003cp\u003e \u003ccode\u003eLdapName\u003c/code\u003e will properly parse all valid names, but does not attempt to detect all possible violations when parsing invalid names. It is \"generous\" in accepting invalid names. The \"validity\" of a name is determined ultimately when it is supplied to an LDAP server, which may accept or reject the name based on factors such as its schema information and interoperability considerations. \u003c/p\u003e\n\u003cp\u003e When names are tested for equality, attribute types, both binary and string values, are case-insensitive. String values with different but equivalent usage of quoting, escaping, or UTF8-hex-encoding are considered equal. The order of components in multi-valued RDNs (such as \"ou\u003dSales+cn\u003dBob\") is not significant. \u003c/p\u003e\n\u003cp\u003e The components of a LDAP name, that is, RDNs, are numbered. The indexes of a LDAP name with n RDNs range from 0 to n-1. This range may be written as [0,n). The right most RDN is at index 0, and the left most RDN is at index n-1. For example, the distinguished name: \"CN\u003dSteve Kille, O\u003dIsode Limited, C\u003dGB\" is numbered in the following sequence ranging from 0 to 2: {C\u003dGB, O\u003dIsode Limited, CN\u003dSteve Kille}. An empty LDAP name is represented by an empty RDN list. \u003c/p\u003e\n\u003cp\u003e Concurrent multithreaded read-only access of an instance of \u003ccode\u003eLdapName\u003c/code\u003e need not be synchronized. \u003c/p\u003e\n\u003cp\u003e Unless otherwise noted, the behavior of passing a null argument to a constructor or method in this class will cause a NullPointerException to be thrown.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.naming.ldap.LdapName\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}