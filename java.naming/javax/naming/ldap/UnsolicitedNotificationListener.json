{
  "packageName": "javax.naming.ldap",
  "simpleName": "UnsolicitedNotificationListener",
  "moduleName": "java.naming",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.naming.event.NamingListener",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.naming.ldap.UnsolicitedNotificationEvent",
            "type": "Class"
          },
          "field": {
            "name": "evt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "notificationReceived",
      "comment": "Called when an unsolicited notification has been received.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eevt\u003c/code\u003e - The non-null UnsolicitedNotificationEvent"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.naming.ldap.UnsolicitedNotificationListener",
  "comment": "This interface is for handling \n\u003ccode\u003eUnsolicitedNotificationEvent\u003c/code\u003e. \"Unsolicited notification\" is defined in \n\u003ca href\u003d\"http://www.ietf.org/rfc/rfc2251.txt\"\u003eRFC 2251\u003c/a\u003e. It allows the server to send unsolicited notifications to the client. An \n\u003ccode\u003eUnsolicitedNotificationListener\u003c/code\u003e must: \n\u003col\u003e \n \u003cli\u003eImplement this interface and its method \u003c/li\u003e\n \u003cli\u003eImplement \u003ccode\u003eNamingListener.namingExceptionThrown()\u003c/code\u003e so that it will be notified of exceptions thrown while attempting to collect unsolicited notification events. \u003c/li\u003e\n \u003cli\u003eRegister with the context using one of the \u003ccode\u003eaddNamingListener()\u003c/code\u003e methods from \u003ccode\u003eEventContext\u003c/code\u003e or \u003ccode\u003eEventDirContext\u003c/code\u003e. Only the \u003ccode\u003eNamingListener\u003c/code\u003e argument of these methods are applicable; the rest are ignored for an \u003ccode\u003eUnsolicitedNotificationListener\u003c/code\u003e. (These arguments might be applicable to the listener if it implements other listener interfaces). \u003c/li\u003e\n\u003c/ol\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/ldap/UnsolicitedNotificationEvent.html\" title\u003d\"class in javax.naming.ldap\"\u003e\u003ccode\u003eUnsolicitedNotificationEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/ldap/UnsolicitedNotification.html\" title\u003d\"interface in javax.naming.ldap\"\u003e\u003ccode\u003eUnsolicitedNotification\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/EventContext.html#addNamingListener(javax.naming.Name,int,javax.naming.event.NamingListener)\"\u003e\u003ccode\u003eEventContext.addNamingListener(javax.naming.Name, int, javax.naming.event.NamingListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/EventDirContext.html#addNamingListener(javax.naming.Name,java.lang.String,javax.naming.directory.SearchControls,javax.naming.event.NamingListener)\"\u003e\u003ccode\u003eEventDirContext.addNamingListener(javax.naming.Name, java.lang.String, javax.naming.directory.SearchControls, javax.naming.event.NamingListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/EventContext.html#removeNamingListener(javax.naming.event.NamingListener)\"\u003e\u003ccode\u003eEventContext.removeNamingListener(javax.naming.event.NamingListener)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}