{
  "packageName": "javax.naming.ldap",
  "simpleName": "SortControl",
  "moduleName": "java.naming",
  "type": "CLASS",
  "superClass": {
    "name": "javax.naming.ldap.BasicControl",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "OID",
      "comment": "The server-side sort control\u0027s assigned object identifier is 1.2.840.113556.1.4.473.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.naming.ldap.SortControl.OID\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "sortBy"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "criticality"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a control to sort on a single attribute in ascending order. Sorting will be performed using the ordering matching rule defined for use with the specified attribute.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esortBy\u003c/code\u003e - An attribute ID to sort by.",
          "\u003ccode\u003ecriticality\u003c/code\u003e - If true then the server must honor the control and return the search results sorted as requested or refuse to perform the search. If false, then the server need not honor the control."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an error was encountered while encoding the supplied arguments into a control."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "sortBy"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "criticality"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a control to sort on a list of attributes in ascending order. Sorting will be performed using the ordering matching rule defined for use with each of the specified attributes.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esortBy\u003c/code\u003e - A non-null list of attribute IDs to sort by. The list is in order of highest to lowest sort key precedence.",
          "\u003ccode\u003ecriticality\u003c/code\u003e - If true then the server must honor the control and return the search results sorted as requested or refuse to perform the search. If false, then the server need not honor the control."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an error was encountered while encoding the supplied arguments into a control."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.naming.ldap.SortKey",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "sortBy"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "criticality"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a control to sort on a list of sort keys. Each sort key specifies the sort order and ordering matching rule to use.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esortBy\u003c/code\u003e - A non-null list of keys to sort by. The list is in order of highest to lowest sort key precedence.",
          "\u003ccode\u003ecriticality\u003c/code\u003e - If true then the server must honor the control and return the search results sorted as requested or refuse to perform the search. If false, then the server need not honor the control."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an error was encountered while encoding the supplied arguments into a control."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "javax.naming.ldap.SortControl",
  "comment": "Requests that the results of a search operation be sorted by the LDAP server before being returned. The sort criteria are specified using an ordered list of one or more sort keys, with associated sort parameters. Search results are sorted at the LDAP server according to the parameters supplied in the sort control and then returned to the requestor. If sorting is not supported at the server (and the sort control is marked as critical) then the search operation is not performed and an error is returned. \n\u003cp\u003e The following code sample shows how the class may be used: \u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\n\n     // Open an LDAP association\n     LdapContext ctx \u003d new InitialLdapContext();\n\n     // Activate sorting\n     String sortKey \u003d \"cn\";\n     ctx.setRequestControls(new Control[]{\n         new SortControl(sortKey, Control.CRITICAL) });\n\n     // Perform a search\n     NamingEnumeration results \u003d\n         ctx.search(\"\", \"(objectclass\u003d*)\", new SearchControls());\n\n     // Iterate over search results\n     while (results !\u003d null \u0026amp;\u0026amp; results.hasMore()) {\n         // Display an entry\n         SearchResult entry \u003d (SearchResult)results.next();\n         System.out.println(entry.getName());\n         System.out.println(entry.getAttributes());\n\n         // Handle the entry\u0027s response controls (if any)\n         if (entry instanceof HasControls) {\n             // ((HasControls)entry).getControls();\n         }\n     }\n     // Examine the sort control response\n     Control[] controls \u003d ctx.getResponseControls();\n     if (controls !\u003d null) {\n         for (int i \u003d 0; i \u0026lt; controls.length; i++) {\n             if (controls[i] instanceof SortResponseControl) {\n                 SortResponseControl src \u003d (SortResponseControl)controls[i];\n                 if (! src.isSorted()) {\n                     throw src.getException();\n                 }\n             } else {\n                 // Handle other response controls (if any)\n             }\n         }\n     }\n\n     // Close the LDAP association\n     ctx.close();\n     ...\n\n \u003c/code\u003e\u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e This class implements the LDAPv3 Request Control for server-side sorting as defined in \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2891.txt\"\u003eRFC 2891\u003c/a\u003e. The control\u0027s value has the following ASN.1 definition: \u003c/p\u003e\n\u003cpre\u003e\n     SortKeyList ::\u003d SEQUENCE OF SEQUENCE {\n         attributeType     AttributeDescription,\n         orderingRule  [0] MatchingRuleId OPTIONAL,\n         reverseOrder  [1] BOOLEAN DEFAULT FALSE }\n\n \u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/ldap/SortKey.html\" title\u003d\"class in javax.naming.ldap\"\u003e\u003ccode\u003eSortKey\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/ldap/SortResponseControl.html\" title\u003d\"class in javax.naming.ldap\"\u003e\u003ccode\u003eSortResponseControl\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.naming.ldap.SortControl\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}