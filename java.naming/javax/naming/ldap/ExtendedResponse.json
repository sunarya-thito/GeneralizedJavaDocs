{
  "packageName": "javax.naming.ldap",
  "simpleName": "ExtendedResponse",
  "moduleName": "java.naming",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.io.Serializable",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getID",
      "comment": "Retrieves the object identifier of the response. The LDAP protocol specifies that the response object identifier is optional. If the server does not send it, the response will contain no ID (i.e. null).",
      "annotations": [],
      "tagMap": {
        "return": [
          "A possibly null object identifier string representing the LDAP \n\u003ccode\u003eExtendedResponse.responseName\u003c/code\u003e component."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEncodedValue",
      "comment": "Retrieves the ASN.1 BER encoded value of the LDAP extended operation response. Null is returned if the value is absent from the response sent by the LDAP server. The result is the raw BER bytes including the tag and length of the response value. It does not include the response OID.",
      "annotations": [],
      "tagMap": {
        "return": [
          "A possibly null byte array representing the ASN.1 BER encoded contents of the LDAP \n\u003ccode\u003eExtendedResponse.response\u003c/code\u003e component."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.naming.ldap.ExtendedResponse",
  "comment": "This interface represents an LDAP extended operation response as defined in \n\u003ca href\u003d\"http://www.ietf.org/rfc/rfc2251.txt\"\u003eRFC 2251\u003c/a\u003e. \n\u003cpre\u003e     ExtendedResponse ::\u003d [APPLICATION 24] SEQUENCE {\n          COMPONENTS OF LDAPResult,\n          responseName     [10] LDAPOID OPTIONAL,\n          response         [11] OCTET STRING OPTIONAL }\n \u003c/pre\u003e It comprises an optional object identifier and an optional ASN.1 BER encoded value. \n\u003cp\u003e The methods in this class can be used by the application to get low level information about the extended operation response. However, typically, the application will be using methods specific to the class that implements this interface. Such a class should have decoded the BER buffer in the response and should provide methods that allow the user to access that data in the response in a type-safe and friendly manner. \u003c/p\u003e\n\u003cp\u003e For example, suppose the LDAP server supported a \u0027get time\u0027 extended operation. It would supply GetTimeRequest and GetTimeResponse classes. The GetTimeResponse class might look like: \u003c/p\u003e\n\u003cblockquote\u003e\n \u003cpre\u003e public class GetTimeResponse implements ExtendedResponse {\n     public java.util.Date getDate() {...};\n     public long getTime() {...};\n     ....\n }\n\u003c/pre\u003e\n\u003c/blockquote\u003e A program would use then these classes as follows: \n\u003cblockquote\u003e\n \u003cpre\u003e GetTimeResponse resp \u003d\n     (GetTimeResponse) ectx.extendedOperation(new GetTimeRequest());\n java.util.Date now \u003d resp.getDate();\n\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/ldap/ExtendedRequest.html\" title\u003d\"interface in javax.naming.ldap\"\u003e\u003ccode\u003eExtendedRequest\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}