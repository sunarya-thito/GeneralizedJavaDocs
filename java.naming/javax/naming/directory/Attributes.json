{
  "packageName": "javax.naming.directory",
  "simpleName": "Attributes",
  "moduleName": "java.naming",
  "type": "INTERFACE",
  "interfaces": [
    {
      "name": "java.lang.Cloneable",
      "type": "Class"
    },
    {
      "name": "java.io.Serializable",
      "type": "Class"
    }
  ],
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isCaseIgnored",
      "comment": "Determines whether the attribute set ignores the case of attribute identifiers when retrieving or adding attributes.",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if case is ignored; false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "size",
      "comment": "Retrieves the number of attributes in the attribute set.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The nonnegative number of attributes in this attribute set."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.directory.Attribute",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "attrID",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "get",
      "comment": "Retrieves the attribute with the given attribute id from the attribute set.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/Attributes.html#put(java.lang.String,java.lang.Object)\"\u003e\u003ccode\u003eput(java.lang.String, java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/Attributes.html#remove(java.lang.String)\"\u003e\u003ccode\u003eremove(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eattrID\u003c/code\u003e - The non-null id of the attribute to retrieve. If this attribute set ignores the character case of its attribute ids, the case of attrID is ignored."
        ],
        "return": [
          "The attribute identified by attrID; null if not found."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.NamingEnumeration",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.naming.directory.Attribute",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAll",
      "comment": "Retrieves an enumeration of the attributes in the attribute set. The effects of updates to this attribute set on this enumeration are undefined.",
      "annotations": [],
      "tagMap": {
        "return": [
          "A non-null enumeration of the attributes in this attribute set. Each element of the enumeration is of class \n\u003ccode\u003eAttribute\u003c/code\u003e. If attribute set has zero attributes, an empty enumeration is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.NamingEnumeration",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getIDs",
      "comment": "Retrieves an enumeration of the ids of the attributes in the attribute set. The effects of updates to this attribute set on this enumeration are undefined.",
      "annotations": [],
      "tagMap": {
        "return": [
          "A non-null enumeration of the attributes\u0027 ids in this attribute set. Each element of the enumeration is of class String. If attribute set has zero attributes, an empty enumeration is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.directory.Attribute",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "attrID",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "val",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "put",
      "comment": "Adds a new attribute to the attribute set.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/Attributes.html#remove(java.lang.String)\"\u003e\u003ccode\u003eremove(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eattrID\u003c/code\u003e - non-null The id of the attribute to add. If the attribute set ignores the character case of its attribute ids, the case of attrID is ignored.",
          "\u003ccode\u003eval\u003c/code\u003e - The possibly null value of the attribute to add. If null, the attribute does not have any values."
        ],
        "return": [
          "The Attribute with attrID that was previous in this attribute set; null if no such attribute existed."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.directory.Attribute",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.naming.directory.Attribute",
            "type": "Class"
          },
          "name": "attr",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "put",
      "comment": "Adds a new attribute to the attribute set.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/Attributes.html#remove(java.lang.String)\"\u003e\u003ccode\u003eremove(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eattr\u003c/code\u003e - The non-null attribute to add. If the attribute set ignores the character case of its attribute ids, the case of attr\u0027s identifier is ignored."
        ],
        "return": [
          "The Attribute with the same ID as attr that was previous in this attribute set; null if no such attribute existed."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.directory.Attribute",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "attrID",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "remove",
      "comment": "Removes the attribute with the attribute id \u0027attrID\u0027 from the attribute set. If the attribute does not exist, ignore.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eattrID\u003c/code\u003e - The non-null id of the attribute to remove. If the attribute set ignores the character case of its attribute ids, the case of attrID is ignored."
        ],
        "return": [
          "The Attribute with the same ID as attrID that was previous in the attribute set; null if no such attribute existed."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clone",
      "comment": "Makes a copy of the attribute set. The new set contains the same attributes as the original set: the attributes are not themselves cloned. Changes to the copy will not affect the original and vice versa.",
      "annotations": [],
      "tagMap": {
        "return": [
          "A non-null copy of this attribute set."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.naming.directory.Attributes",
  "comment": "This interface represents a collection of attributes. \n\u003cp\u003e In a directory, named objects can have associated with them attributes. The Attributes interface represents a collection of attributes. For example, you can request from the directory the attributes associated with an object. Those attributes are returned in an object that implements the Attributes interface. \u003c/p\u003e\n\u003cp\u003e Attributes in an object that implements the Attributes interface are unordered. The object can have zero or more attributes. Attributes is either case-sensitive or case-insensitive (case-ignore). This property is determined at the time the Attributes object is created. (see BasicAttributes constructor for example). In a case-insensitive Attributes, the case of its attribute identifiers is ignored when searching for an attribute, or adding attributes. In a case-sensitive Attributes, the case is significant. \u003c/p\u003e\n\u003cp\u003e Note that updates to Attributes (such as adding or removing an attribute) do not affect the corresponding representation in the directory. Updates to the directory can only be effected using operations in the DirContext interface.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/DirContext.html#getAttributes(javax.naming.Name)\"\u003e\u003ccode\u003eDirContext.getAttributes(javax.naming.Name)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/DirContext.html#modifyAttributes(javax.naming.Name,int,javax.naming.directory.Attributes)\"\u003e\u003ccode\u003eDirContext.modifyAttributes(javax.naming.Name, int, javax.naming.directory.Attributes)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/DirContext.html#bind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)\"\u003e\u003ccode\u003eDirContext.bind(javax.naming.Name, java.lang.Object, javax.naming.directory.Attributes)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/DirContext.html#rebind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)\"\u003e\u003ccode\u003eDirContext.rebind(javax.naming.Name, java.lang.Object, javax.naming.directory.Attributes)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/DirContext.html#createSubcontext(javax.naming.Name,javax.naming.directory.Attributes)\"\u003e\u003ccode\u003eDirContext.createSubcontext(javax.naming.Name, javax.naming.directory.Attributes)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/DirContext.html#search(javax.naming.Name,javax.naming.directory.Attributes,java.lang.String%5B%5D)\"\u003e\u003ccode\u003eDirContext.search(javax.naming.Name, javax.naming.directory.Attributes, java.lang.String[])\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/BasicAttributes.html\" title\u003d\"class in javax.naming.directory\"\u003e\u003ccode\u003eBasicAttributes\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}