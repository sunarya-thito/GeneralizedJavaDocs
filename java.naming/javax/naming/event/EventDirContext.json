{
  "packageName": "javax.naming.event",
  "simpleName": "EventDirContext",
  "moduleName": "java.naming",
  "type": "INTERFACE",
  "interfaces": [
    {
      "name": "javax.naming.event.EventContext",
      "type": "Class"
    },
    {
      "name": "javax.naming.directory.DirContext",
      "type": "Class"
    }
  ],
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.naming.NamingException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.naming.Name",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "filter"
          }
        },
        {
          "type": {
            "name": "javax.naming.directory.SearchControls",
            "type": "Class"
          },
          "field": {
            "name": "ctls"
          }
        },
        {
          "type": {
            "name": "javax.naming.event.NamingListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addNamingListener",
      "comment": "Adds a listener for receiving naming events fired when objects identified by the search filter filter at the object named by target are modified. The scope, returningObj flag, and returningAttributes flag from the search controls ctls are used to control the selection of objects that the listener is interested in, and determines what information is returned in the eventual NamingEvent object. Note that the requested information to be returned might not be present in the NamingEvent object if they are unavailable or could not be obtained by the service provider or service.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/EventContext.html#removeNamingListener(javax.naming.event.NamingListener)\"\u003e\u003ccode\u003eEventContext.removeNamingListener(javax.naming.event.NamingListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/DirContext.html#search(javax.naming.Name,java.lang.String,javax.naming.directory.SearchControls)\"\u003e\u003ccode\u003eDirContext.search(javax.naming.Name, java.lang.String, javax.naming.directory.SearchControls)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - The nonnull name of the object resolved relative to this context.",
          "\u003ccode\u003efilter\u003c/code\u003e - The nonnull string filter (see RFC2254).",
          "\u003ccode\u003ectls\u003c/code\u003e - The possibly null search controls. If null, the default search controls are used.",
          "\u003ccode\u003el\u003c/code\u003e - The nonnull listener."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/NamingException.html\" title\u003d\"class in javax.naming\"\u003eNamingException\u003c/a\u003e\u003c/code\u003e - If a problem was encountered while adding the listener."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.naming.NamingException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "filter"
          }
        },
        {
          "type": {
            "name": "javax.naming.directory.SearchControls",
            "type": "Class"
          },
          "field": {
            "name": "ctls"
          }
        },
        {
          "type": {
            "name": "javax.naming.event.NamingListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addNamingListener",
      "comment": "Adds a listener for receiving naming events fired when objects identified by the search filter filter at the object named by the string target name are modified. See the overload that accepts a Name for details of how this method behaves.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/EventContext.html#removeNamingListener(javax.naming.event.NamingListener)\"\u003e\u003ccode\u003eEventContext.removeNamingListener(javax.naming.event.NamingListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/DirContext.html#search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)\"\u003e\u003ccode\u003eDirContext.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - The nonnull string name of the object resolved relative to this context.",
          "\u003ccode\u003efilter\u003c/code\u003e - The nonnull string filter (see RFC2254).",
          "\u003ccode\u003ectls\u003c/code\u003e - The possibly null search controls. If null, the default search controls is used.",
          "\u003ccode\u003el\u003c/code\u003e - The nonnull listener."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/NamingException.html\" title\u003d\"class in javax.naming\"\u003eNamingException\u003c/a\u003e\u003c/code\u003e - If a problem was encountered while adding the listener."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.naming.NamingException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.naming.Name",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "filter"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "filterArgs"
          }
        },
        {
          "type": {
            "name": "javax.naming.directory.SearchControls",
            "type": "Class"
          },
          "field": {
            "name": "ctls"
          }
        },
        {
          "type": {
            "name": "javax.naming.event.NamingListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addNamingListener",
      "comment": "Adds a listener for receiving naming events fired when objects identified by the search filter filter and filter arguments at the object named by the target are modified. The scope, returningObj flag, and returningAttributes flag from the search controls ctls are used to control the selection of objects that the listener is interested in, and determines what information is returned in the eventual NamingEvent object. Note that the requested information to be returned might not be present in the NamingEvent object if they are unavailable or could not be obtained by the service provider or service.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/EventContext.html#removeNamingListener(javax.naming.event.NamingListener)\"\u003e\u003ccode\u003eEventContext.removeNamingListener(javax.naming.event.NamingListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/DirContext.html#search(javax.naming.Name,java.lang.String,java.lang.Object%5B%5D,javax.naming.directory.SearchControls)\"\u003e\u003ccode\u003eDirContext.search(javax.naming.Name, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - The nonnull name of the object resolved relative to this context.",
          "\u003ccode\u003efilter\u003c/code\u003e - The nonnull string filter (see RFC2254).",
          "\u003ccode\u003efilterArgs\u003c/code\u003e - The possibly null array of arguments for the filter.",
          "\u003ccode\u003ectls\u003c/code\u003e - The possibly null search controls. If null, the default search controls are used.",
          "\u003ccode\u003el\u003c/code\u003e - The nonnull listener."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/NamingException.html\" title\u003d\"class in javax.naming\"\u003eNamingException\u003c/a\u003e\u003c/code\u003e - If a problem was encountered while adding the listener."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.naming.NamingException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "filter"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "filterArgs"
          }
        },
        {
          "type": {
            "name": "javax.naming.directory.SearchControls",
            "type": "Class"
          },
          "field": {
            "name": "ctls"
          }
        },
        {
          "type": {
            "name": "javax.naming.event.NamingListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addNamingListener",
      "comment": "Adds a listener for receiving naming events fired when objects identified by the search filter filter and filter arguments at the object named by the string target name are modified. See the overload that accepts a Name for details of how this method behaves.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/EventContext.html#removeNamingListener(javax.naming.event.NamingListener)\"\u003e\u003ccode\u003eEventContext.removeNamingListener(javax.naming.event.NamingListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/DirContext.html#search(java.lang.String,java.lang.String,java.lang.Object%5B%5D,javax.naming.directory.SearchControls)\"\u003e\u003ccode\u003eDirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - The nonnull string name of the object resolved relative to this context.",
          "\u003ccode\u003efilter\u003c/code\u003e - The nonnull string filter (see RFC2254).",
          "\u003ccode\u003efilterArgs\u003c/code\u003e - The possibly null array of arguments for the filter.",
          "\u003ccode\u003ectls\u003c/code\u003e - The possibly null search controls. If null, the default search controls is used.",
          "\u003ccode\u003el\u003c/code\u003e - The nonnull listener."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/NamingException.html\" title\u003d\"class in javax.naming\"\u003eNamingException\u003c/a\u003e\u003c/code\u003e - If a problem was encountered while adding the listener."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.naming.event.EventDirContext",
  "comment": "Contains methods for registering listeners to be notified of events fired when objects named in a directory context changes. \n\u003cp\u003e The methods in this interface support identification of objects by \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2254.txt\"\u003eRFC 2254\u003c/a\u003e search filters. \u003c/p\u003e\n\u003cp\u003eUsing the search filter, it is possible to register interest in objects that do not exist at the time of registration but later come into existence and satisfy the filter. However, there might be limitations in the extent to which this can be supported by the service provider and underlying protocol/service. If the caller submits a filter that cannot be supported in this way, \u003ccode\u003eaddNamingListener()\u003c/code\u003e throws an \u003ccode\u003eInvalidSearchFilterException\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003e See \u003ccode\u003eEventContext\u003c/code\u003e for a description of event source and target, and information about listener registration/deregistration that are also applicable to methods in this interface. See the \u003ca href\u003d\"package-summary.html#THREADING\"\u003epackage description\u003c/a\u003e for information on threading issues. \u003c/p\u003e\n\u003cp\u003e A \u003ccode\u003eSearchControls\u003c/code\u003e or array object passed as a parameter to any method is owned by the caller. The service provider will not modify the object or keep a reference to it.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.3"
    ]
  }
}