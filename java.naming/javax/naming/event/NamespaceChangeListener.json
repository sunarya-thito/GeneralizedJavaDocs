{
  "packageName": "javax.naming.event",
  "simpleName": "NamespaceChangeListener",
  "moduleName": "java.naming",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.naming.event.NamingListener",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.naming.event.NamingEvent",
            "type": "Class"
          },
          "field": {
            "name": "evt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "objectAdded",
      "comment": "Called when an object has been added. The binding of the newly added object can be obtained using evt.getNewBinding().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/NamingEvent.html#OBJECT_ADDED\"\u003e\u003ccode\u003eNamingEvent.OBJECT_ADDED\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eevt\u003c/code\u003e - The nonnull event."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.naming.event.NamingEvent",
            "type": "Class"
          },
          "field": {
            "name": "evt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "objectRemoved",
      "comment": "Called when an object has been removed. The binding of the newly removed object can be obtained using evt.getOldBinding().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/NamingEvent.html#OBJECT_REMOVED\"\u003e\u003ccode\u003eNamingEvent.OBJECT_REMOVED\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eevt\u003c/code\u003e - The nonnull event."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.naming.event.NamingEvent",
            "type": "Class"
          },
          "field": {
            "name": "evt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "objectRenamed",
      "comment": "Called when an object has been renamed. The binding of the renamed object can be obtained using evt.getNewBinding(). Its old binding (before the rename) can be obtained using evt.getOldBinding(). One of these may be null if the old/new binding was outside the scope in which the listener has registered interest.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/NamingEvent.html#OBJECT_RENAMED\"\u003e\u003ccode\u003eNamingEvent.OBJECT_RENAMED\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eevt\u003c/code\u003e - The nonnull event."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.naming.event.NamespaceChangeListener",
  "comment": "Specifies the methods that a listener interested in namespace changes must implement. Specifically, the listener is interested in \n\u003ccode\u003eNamingEvent\u003c/code\u003es with event types of \n\u003ccode\u003eOBJECT_ADDED, OBJECT_RENAMED\u003c/code\u003e, or \n\u003ccode\u003eOBJECT_REMOVED\u003c/code\u003e. \n\u003cp\u003e Such a listener must: \u003c/p\u003e\n\u003col\u003e \n \u003cli\u003eImplement this interface and its methods. \u003c/li\u003e\n \u003cli\u003eImplement \u003ccode\u003eNamingListener.namingExceptionThrown()\u003c/code\u003e so that it will be notified of exceptions thrown while attempting to collect information about the events. \u003c/li\u003e\n \u003cli\u003eRegister with the source using the source\u0027s \u003ccode\u003eaddNamingListener()\u003c/code\u003e method. \u003c/li\u003e\n\u003c/ol\u003e A listener that wants to be notified of \n\u003ccode\u003eOBJECT_CHANGED\u003c/code\u003e event types should also implement the \n\u003ccode\u003eObjectChangeListener\u003c/code\u003e interface.\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/NamingEvent.html\" title\u003d\"class in javax.naming.event\"\u003e\u003ccode\u003eNamingEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/ObjectChangeListener.html\" title\u003d\"interface in javax.naming.event\"\u003e\u003ccode\u003eObjectChangeListener\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/EventContext.html\" title\u003d\"interface in javax.naming.event\"\u003e\u003ccode\u003eEventContext\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/EventDirContext.html\" title\u003d\"interface in javax.naming.event\"\u003e\u003ccode\u003eEventDirContext\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}