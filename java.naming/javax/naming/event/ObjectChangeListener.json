{
  "packageName": "javax.naming.event",
  "simpleName": "ObjectChangeListener",
  "moduleName": "java.naming",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.naming.event.NamingListener",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.naming.event.NamingEvent",
            "type": "Class"
          },
          "field": {
            "name": "evt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "objectChanged",
      "comment": "Called when an object has been changed. The binding of the changed object can be obtained using evt.getNewBinding(). Its old binding (before the change) can be obtained using evt.getOldBinding().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/NamingEvent.html#OBJECT_CHANGED\"\u003e\u003ccode\u003eNamingEvent.OBJECT_CHANGED\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eevt\u003c/code\u003e - The nonnull naming event."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.naming.event.ObjectChangeListener",
  "comment": "Specifies the method that a listener of a \n\u003ccode\u003eNamingEvent\u003c/code\u003e with event type of \n\u003ccode\u003eOBJECT_CHANGED\u003c/code\u003e must implement. \n\u003cp\u003e An \u003ccode\u003eOBJECT_CHANGED\u003c/code\u003e event type is fired when (the contents of) an object has changed. This might mean that its attributes have been modified, added, or removed, and/or that the object itself has been replaced. How the object has changed can be determined by examining the \u003ccode\u003eNamingEvent\u003c/code\u003e\u0027s old and new bindings. \u003c/p\u003e\n\u003cp\u003e A listener interested in \u003ccode\u003eOBJECT_CHANGED\u003c/code\u003e event types must: \u003c/p\u003e\n\u003col\u003e \n \u003cli\u003eImplement this interface and its method (\u003ccode\u003eobjectChanged()\u003c/code\u003e) \u003c/li\u003e\n \u003cli\u003eImplement \u003ccode\u003eNamingListener.namingExceptionThrown()\u003c/code\u003e so that it will be notified of exceptions thrown while attempting to collect information about the events. \u003c/li\u003e\n \u003cli\u003eRegister with the source using the source\u0027s \u003ccode\u003eaddNamingListener()\u003c/code\u003e method. \u003c/li\u003e\n\u003c/ol\u003e A listener that wants to be notified of namespace change events should also implement the \n\u003ccode\u003eNamespaceChangeListener\u003c/code\u003e interface.\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/NamingEvent.html\" title\u003d\"class in javax.naming.event\"\u003e\u003ccode\u003eNamingEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/NamespaceChangeListener.html\" title\u003d\"interface in javax.naming.event\"\u003e\u003ccode\u003eNamespaceChangeListener\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/EventContext.html\" title\u003d\"interface in javax.naming.event\"\u003e\u003ccode\u003eEventContext\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/event/EventDirContext.html\" title\u003d\"interface in javax.naming.event\"\u003e\u003ccode\u003eEventDirContext\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}