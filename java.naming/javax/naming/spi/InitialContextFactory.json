{
  "packageName": "javax.naming.spi",
  "simpleName": "InitialContextFactory",
  "moduleName": "java.naming",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.naming.Context",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getInitialContext",
      "comment": "Creates an Initial Context for beginning name resolution. Special requirements of this context are supplied using environment. The environment parameter is owned by the caller. The implementation will not modify the object or keep a reference to it, although it may keep a reference to a clone or copy.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eenvironment\u003c/code\u003e - The possibly null environment specifying information to be used in the creation of the initial context."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/NamingException.html\" title\u003d\"class in javax.naming\"\u003eNamingException\u003c/a\u003e\u003c/code\u003e - If cannot create an initial context."
        ],
        "return": [
          "A non-null initial context object that implements the Context interface."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.naming.spi.InitialContextFactory",
  "comment": "This interface represents a factory that creates an initial context. \n\u003cp\u003e The JNDI framework allows for different initial context implementations to be specified at runtime. The initial context is created using an \u003cem\u003einitial context factory\u003c/em\u003e. An initial context factory must implement the InitialContextFactory interface, which provides a method for creating instances of initial context that implement the Context interface. In addition, the factory class must be public and must have a public constructor that accepts no arguments.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/spi/InitialContextFactoryBuilder.html\" title\u003d\"interface in javax.naming.spi\"\u003e\u003ccode\u003eInitialContextFactoryBuilder\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/spi/NamingManager.html#getInitialContext(java.util.Hashtable)\"\u003e\u003ccode\u003eNamingManager.getInitialContext(java.util.Hashtable\u0026lt;?, ?\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/InitialContext.html\" title\u003d\"class in javax.naming\"\u003e\u003ccode\u003eInitialContext\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/directory/InitialDirContext.html\" title\u003d\"class in javax.naming.directory\"\u003e\u003ccode\u003eInitialDirContext\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}