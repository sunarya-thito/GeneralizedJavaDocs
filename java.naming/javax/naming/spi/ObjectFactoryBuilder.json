{
  "packageName": "javax.naming.spi",
  "simpleName": "ObjectFactoryBuilder",
  "moduleName": "java.naming",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.naming.spi.ObjectFactory",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.naming.NamingException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        },
        {
          "type": {
            "name": "java.util.Hashtable",
            "parameters": [
              {
                "type": "Wildcard"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "environment"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "createObjectFactory",
      "comment": "Creates a new object factory using the environment supplied. The environment parameter is owned by the caller. The implementation will not modify the object or keep a reference to it, although it may keep a reference to a clone or copy.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - The possibly null object for which to create a factory.",
          "\u003ccode\u003eenvironment\u003c/code\u003e - Environment to use when creating the factory. Can be null."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/NamingException.html\" title\u003d\"class in javax.naming\"\u003eNamingException\u003c/a\u003e\u003c/code\u003e - If an object factory cannot be created."
        ],
        "return": [
          "A non-null new instance of an ObjectFactory."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.naming.spi.ObjectFactoryBuilder",
  "comment": "This interface represents a builder that creates object factories. \n\u003cp\u003e The JNDI framework allows for object implementations to be loaded in dynamically via \u003cem\u003eobject factories\u003c/em\u003e. For example, when looking up a printer bound in the name space, if the print service binds printer names to References, the printer Reference could be used to create a printer object, so that the caller of lookup can directly operate on the printer object after the lookup. An ObjectFactory is responsible for creating objects of a specific type. JNDI uses a default policy for using and loading object factories. You can override this default policy by calling \u003ccode\u003eNamingManager.setObjectFactoryBuilder()\u003c/code\u003e with an ObjectFactoryBuilder, which contains the program-defined way of creating/loading object factories. Any \u003ccode\u003eObjectFactoryBuilder\u003c/code\u003e implementation must implement this interface that for creating object factories.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/spi/ObjectFactory.html\" title\u003d\"interface in javax.naming.spi\"\u003e\u003ccode\u003eObjectFactory\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/spi/NamingManager.html#getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)\"\u003e\u003ccode\u003eNamingManager.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable\u0026lt;?, ?\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/spi/NamingManager.html#setObjectFactoryBuilder(javax.naming.spi.ObjectFactoryBuilder)\"\u003e\u003ccode\u003eNamingManager.setObjectFactoryBuilder(javax.naming.spi.ObjectFactoryBuilder)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}