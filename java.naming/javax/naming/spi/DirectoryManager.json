{
  "packageName": "javax.naming.spi",
  "simpleName": "DirectoryManager",
  "moduleName": "java.naming",
  "type": "CLASS",
  "superClass": {
    "name": "javax.naming.spi.NamingManager",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.naming.directory.DirContext",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getContinuationDirContext",
      "comment": "Creates a context in which to continue a DirContext operation. Operates just like NamingManager.getContinuationContext(), only the continuation context returned is a DirContext.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/spi/NamingManager.html#getContinuationContext(javax.naming.CannotProceedException)\"\u003e\u003ccode\u003eNamingManager.getContinuationContext(CannotProceedException)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecpe\u003c/code\u003e - The non-null exception that triggered this continuation."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/NamingException.html\" title\u003d\"class in javax.naming\"\u003eNamingException\u003c/a\u003e\u003c/code\u003e - If a naming exception occurred."
        ],
        "return": [
          "A non-null \n\u003ccode\u003eDirContext\u003c/code\u003e object for continuing the operation."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getObjectInstance",
      "comment": "Creates an instance of an object for the specified object, attributes, and environment. This method is the same as NamingManager.getObjectInstance except for the following differences: It accepts an Attributes parameter that contains attributes associated with the object. The DirObjectFactory might use these attributes to save having to look them up from the directory. The object factories tried must implement either ObjectFactory or DirObjectFactory. If it implements DirObjectFactory, DirObjectFactory.getObjectInstance() is used, otherwise, ObjectFactory.getObjectInstance() is used. Service providers that implement the DirContext interface should use this method, not NamingManager.getObjectInstance().",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/spi/NamingManager.html#getURLContext(java.lang.String,java.util.Hashtable)\"\u003e\u003ccode\u003eNamingManager.getURLContext(java.lang.String, java.util.Hashtable\u0026lt;?, ?\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/spi/DirObjectFactory.html\" title\u003d\"interface in javax.naming.spi\"\u003e\u003ccode\u003eDirObjectFactory\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/spi/DirObjectFactory.html#getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable,javax.naming.directory.Attributes)\"\u003e\u003ccode\u003eDirObjectFactory.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable\u0026lt;?, ?\u0026gt;, javax.naming.directory.Attributes)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003erefInfo\u003c/code\u003e - The possibly null object for which to create an object.",
          "\u003ccode\u003ename\u003c/code\u003e - The name of this object relative to \n\u003ccode\u003enameCtx\u003c/code\u003e. Specifying a name is optional; if it is omitted, \n\u003ccode\u003ename\u003c/code\u003e should be null.",
          "\u003ccode\u003enameCtx\u003c/code\u003e - The context relative to which the \n\u003ccode\u003ename\u003c/code\u003e parameter is specified. If null, \n\u003ccode\u003ename\u003c/code\u003e is relative to the default initial context.",
          "\u003ccode\u003eenvironment\u003c/code\u003e - The possibly null environment to be used in the creation of the object factory and the object.",
          "\u003ccode\u003eattrs\u003c/code\u003e - The possibly null attributes associated with refInfo. This might not be the complete set of attributes for refInfo; you might be able to read more attributes from the directory."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/NamingException.html\" title\u003d\"class in javax.naming\"\u003eNamingException\u003c/a\u003e\u003c/code\u003e - If a naming exception was encountered while attempting to get a URL context, or if one of the factories accessed throws a NamingException.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Exception.html\" title\u003d\"class in java.lang\"\u003eException\u003c/a\u003e\u003c/code\u003e - If one of the factories accessed throws an exception, or if an error was encountered while loading and instantiating the factory and object classes. A factory should only throw an exception if it does not want other factories to be used in an attempt to create an object. See \n\u003ccode\u003eDirObjectFactory.getObjectInstance()\u003c/code\u003e."
        ],
        "return": [
          "An object created using \n\u003ccode\u003erefInfo\u003c/code\u003e and \n\u003ccode\u003eattrs\u003c/code\u003e; or \n\u003ccode\u003erefInfo\u003c/code\u003e if an object cannot be created by a factory."
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.naming.spi.DirStateFactory$Result",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getStateToBind",
      "comment": "Retrieves the state of an object for binding when given the original object and its attributes. This method is like NamingManager.getStateToBind except for the following differences: It accepts an Attributes parameter containing attributes that were passed to the DirContext.bind() method. It returns a non-null DirStateFactory.Result instance containing the object to be bound, and the attributes to accompany the binding. Either the object or the attributes may be null. The state factories tried must each implement either StateFactory or DirStateFactory. If it implements DirStateFactory, then DirStateFactory.getStateToBind() is called; otherwise, StateFactory.getStateToBind() is called. Service providers that implement the DirContext interface should use this method, not NamingManager.getStateToBind(). See NamingManager.getStateToBind() for a description of how the list of state factories to be tried is determined. The object returned by this method is owned by the caller. The implementation will not subsequently modify it. It will contain either a new Attributes object that is likewise owned by the caller, or a reference to the original attrs parameter.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/spi/DirStateFactory.html\" title\u003d\"interface in javax.naming.spi\"\u003e\u003ccode\u003eDirStateFactory\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/spi/DirStateFactory.html#getStateToBind(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable,javax.naming.directory.Attributes)\"\u003e\u003ccode\u003eDirStateFactory.getStateToBind(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable\u0026lt;?, ?\u0026gt;, javax.naming.directory.Attributes)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/spi/NamingManager.html#getStateToBind(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)\"\u003e\u003ccode\u003eNamingManager.getStateToBind(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable\u0026lt;?, ?\u0026gt;)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - The non-null object for which to get state to bind.",
          "\u003ccode\u003ename\u003c/code\u003e - The name of this object relative to \n\u003ccode\u003enameCtx\u003c/code\u003e, or null if no name is specified.",
          "\u003ccode\u003enameCtx\u003c/code\u003e - The context relative to which the \n\u003ccode\u003ename\u003c/code\u003e parameter is specified, or null if \n\u003ccode\u003ename\u003c/code\u003e is relative to the default initial context.",
          "\u003ccode\u003eenvironment\u003c/code\u003e - The possibly null environment to be used in the creation of the state factory and the object\u0027s state.",
          "\u003ccode\u003eattrs\u003c/code\u003e - The possibly null Attributes that is to be bound with the object."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/NamingException.html\" title\u003d\"class in javax.naming\"\u003eNamingException\u003c/a\u003e\u003c/code\u003e - If a naming exception was encountered while using the factories. A factory should only throw an exception if it does not want other factories to be used in an attempt to create an object. See \n\u003ccode\u003eDirStateFactory.getStateToBind()\u003c/code\u003e."
        ],
        "return": [
          "A non-null DirStateFactory.Result containing the object and attributes to be bound. If no state factory returns a non-null answer, the result will contain the object (\n\u003ccode\u003eobj\u003c/code\u003e) itself with the original attributes."
        ],
        "since": [
          "1.3"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.naming.spi.DirectoryManager",
  "comment": "This class contains methods for supporting \n\u003ccode\u003eDirContext\u003c/code\u003e implementations. \n\u003cp\u003e This class is an extension of \u003ccode\u003eNamingManager\u003c/code\u003e. It contains methods for use by service providers for accessing object factories and state factories, and for getting continuation contexts for supporting federation. \u003c/p\u003e\n\u003cp\u003e \u003ccode\u003eDirectoryManager\u003c/code\u003e is safe for concurrent access by multiple threads. \u003c/p\u003e\n\u003cp\u003e Except as otherwise noted, a \u003ccode\u003eName\u003c/code\u003e, \u003ccode\u003eAttributes\u003c/code\u003e, or environment parameter passed to any method is owned by the caller. The implementation will not modify the object or keep a reference to it, although it may keep a reference to a clone or copy.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/spi/DirObjectFactory.html\" title\u003d\"interface in javax.naming.spi\"\u003e\u003ccode\u003eDirObjectFactory\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.naming/javax/naming/spi/DirStateFactory.html\" title\u003d\"interface in javax.naming.spi\"\u003e\u003ccode\u003eDirStateFactory\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}