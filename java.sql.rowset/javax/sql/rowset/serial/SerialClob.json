{
  "packageName": "javax.sql.rowset.serial",
  "simpleName": "SerialClob",
  "moduleName": "java.sql.rowset",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "length",
      "comment": "Retrieves the number of characters in this SerialClob object\u0027s array of characters.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#length()\"\u003elength\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html\" title\u003d\"interface in java.sql\"\u003eClob\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if an error occurs; if \n\u003ccode\u003efree\u003c/code\u003e had previously been called on this object"
        ],
        "return": [
          "a \n\u003ccode\u003elong\u003c/code\u003e indicating the length in characters of this \n\u003ccode\u003eSerialClob\u003c/code\u003e object\u0027s array of character"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.Reader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCharacterStream",
      "comment": "Returns this SerialClob object\u0027s data as a stream of Unicode characters. Unlike the related method, getAsciiStream, a stream is produced regardless of whether the SerialClob object was created with a Clob object or a char array.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#setCharacterStream(long)\"\u003e\u003ccode\u003eClob.setCharacterStream(long)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#getCharacterStream()\"\u003egetCharacterStream\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html\" title\u003d\"interface in java.sql\"\u003eClob\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if an error occurs; if \n\u003ccode\u003efree\u003c/code\u003e had previously been called on this object"
        ],
        "return": [
          "a \n\u003ccode\u003ejava.io.Reader\u003c/code\u003e object containing this \n\u003ccode\u003eSerialClob\u003c/code\u003e object\u0027s data"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.InputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        },
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAsciiStream",
      "comment": "Retrieves the CLOB value designated by this SerialClob object as an ascii stream. This method forwards the getAsciiStream call to the underlying Clob object in the event that this SerialClob object is instantiated with a Clob object. If this SerialClob object is instantiated with a char array, a SerialException object is thrown.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#setAsciiStream(long)\"\u003e\u003ccode\u003eClob.setAsciiStream(long)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#getAsciiStream()\"\u003egetAsciiStream\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html\" title\u003d\"interface in java.sql\"\u003eClob\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if this \n\u003ccode\u003eSerialClob\u003c/code\u003e object was not instantiated with a \n\u003ccode\u003eClob\u003c/code\u003e object; if \n\u003ccode\u003efree\u003c/code\u003e had previously been called on this object",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value represented by the \n\u003ccode\u003eClob\u003c/code\u003e object that was used to create this \n\u003ccode\u003eSerialClob\u003c/code\u003e object"
        ],
        "return": [
          "a \n\u003ccode\u003ejava.io.InputStream\u003c/code\u003e object containing this \n\u003ccode\u003eSerialClob\u003c/code\u003e object\u0027s data"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "length"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSubString",
      "comment": "Returns a copy of the substring contained in this SerialClob object, starting at the given position and continuing for the specified number or characters.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#getSubString(long,int)\"\u003egetSubString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html\" title\u003d\"interface in java.sql\"\u003eClob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position of the first character in the substring to be copied; the first character of the \n\u003ccode\u003eSerialClob\u003c/code\u003e object is at position \n\u003ccode\u003e1\u003c/code\u003e; must not be less than \n\u003ccode\u003e1\u003c/code\u003e, and the sum of the starting position and the length of the substring must be less than the length of this \n\u003ccode\u003eSerialClob\u003c/code\u003e object",
          "\u003ccode\u003elength\u003c/code\u003e - the number of characters in the substring to be returned; must not be greater than the length of this \n\u003ccode\u003eSerialClob\u003c/code\u003e object, and the sum of the starting position and the length of the substring must be less than the length of this \n\u003ccode\u003eSerialClob\u003c/code\u003e object"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if either of the arguments is out of bounds; if \n\u003ccode\u003efree\u003c/code\u003e had previously been called on this object"
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e object containing a substring of this \n\u003ccode\u003eSerialClob\u003c/code\u003e object beginning at the given position and containing the specified number of consecutive characters"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        },
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "searchStr"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "start"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "position",
      "comment": "Returns the position in this SerialClob object where the given String object begins, starting the search at the specified position. This method returns -1 if the pattern is not found.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#position(java.lang.String,long)\"\u003eposition\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html\" title\u003d\"interface in java.sql\"\u003eClob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esearchStr\u003c/code\u003e - the \n\u003ccode\u003eString\u003c/code\u003e object for which to search",
          "\u003ccode\u003estart\u003c/code\u003e - the position in this \n\u003ccode\u003eSerialClob\u003c/code\u003e object at which to start the search; the first position is \n\u003ccode\u003e1\u003c/code\u003e; must not be less than \n\u003ccode\u003e1\u003c/code\u003e nor greater than the length of this \n\u003ccode\u003eSerialClob\u003c/code\u003e object"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003efree\u003c/code\u003e method had been previously called on this object",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the Clob value from the database."
        ],
        "return": [
          "the position at which the given \n\u003ccode\u003eString\u003c/code\u003e object begins, starting the search at the specified position; \n\u003ccode\u003e-1\u003c/code\u003e if the given \n\u003ccode\u003eString\u003c/code\u003e object is not found or the starting position is out of bounds; position numbering for the return value starts at \n\u003ccode\u003e1\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        },
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.sql.Clob",
            "type": "Class"
          },
          "field": {
            "name": "searchStr"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "start"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "position",
      "comment": "Returns the position in this SerialClob object where the given Clob signature begins, starting the search at the specified position. This method returns -1 if the pattern is not found.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#position(java.sql.Clob,long)\"\u003eposition\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html\" title\u003d\"interface in java.sql\"\u003eClob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esearchStr\u003c/code\u003e - the \n\u003ccode\u003eClob\u003c/code\u003e object for which to search",
          "\u003ccode\u003estart\u003c/code\u003e - the position in this \n\u003ccode\u003eSerialClob\u003c/code\u003e object at which to begin the search; the first position is \n\u003ccode\u003e1\u003c/code\u003e; must not be less than \n\u003ccode\u003e1\u003c/code\u003e nor greater than the length of this \n\u003ccode\u003eSerialClob\u003c/code\u003e object"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if an error occurs locating the Clob signature; if the \n\u003ccode\u003efree\u003c/code\u003e method had been previously called on this object",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the Clob value from the database"
        ],
        "return": [
          "the position at which the given \n\u003ccode\u003eClob\u003c/code\u003e object begins in this \n\u003ccode\u003eSerialClob\u003c/code\u003e object, at or after the specified starting position"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "str"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setString",
      "comment": "Writes the given Java String to the CLOB value that this SerialClob object represents, at the position pos.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#setString(long,java.lang.String)\"\u003esetString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html\" title\u003d\"interface in java.sql\"\u003eClob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position at which to start writing to the \n\u003ccode\u003eCLOB\u003c/code\u003e value that this \n\u003ccode\u003eSerialClob\u003c/code\u003e object represents; the first position is \n\u003ccode\u003e1\u003c/code\u003e; must not be less than \n\u003ccode\u003e1\u003c/code\u003e nor greater than the length of this \n\u003ccode\u003eSerialClob\u003c/code\u003e object",
          "\u003ccode\u003estr\u003c/code\u003e - the string to be written to the \n\u003ccode\u003eCLOB\u003c/code\u003e value that this \n\u003ccode\u003eSerialClob\u003c/code\u003e object represents"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value; if an invalid position is set; if an invalid offset value is set; if number of bytes to be written is greater than the \n\u003ccode\u003eSerialClob\u003c/code\u003e length; or the combined values of the length and offset is greater than the Clob buffer; if the \n\u003ccode\u003efree\u003c/code\u003e method had been previously called on this object"
        ],
        "return": [
          "the number of characters written"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "str"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offset"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "length"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setString",
      "comment": "Writes len characters of str, starting at character offset, to the CLOB value that this Clob represents.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#setString(long,java.lang.String,int,int)\"\u003esetString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html\" title\u003d\"interface in java.sql\"\u003eClob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position at which to start writing to the \n\u003ccode\u003eCLOB\u003c/code\u003e value that this \n\u003ccode\u003eSerialClob\u003c/code\u003e object represents; the first position is \n\u003ccode\u003e1\u003c/code\u003e; must not be less than \n\u003ccode\u003e1\u003c/code\u003e nor greater than the length of this \n\u003ccode\u003eSerialClob\u003c/code\u003e object",
          "\u003ccode\u003estr\u003c/code\u003e - the string to be written to the \n\u003ccode\u003eCLOB\u003c/code\u003e value that this \n\u003ccode\u003eClob\u003c/code\u003e object represents",
          "\u003ccode\u003eoffset\u003c/code\u003e - the offset into \n\u003ccode\u003estr\u003c/code\u003e to start reading the characters to be written",
          "\u003ccode\u003elength\u003c/code\u003e - the number of characters to be written"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value; if an invalid position is set; if an invalid offset value is set; if number of bytes to be written is greater than the \n\u003ccode\u003eSerialClob\u003c/code\u003e length; or the combined values of the length and offset is greater than the Clob buffer; if the \n\u003ccode\u003efree\u003c/code\u003e method had been previously called on this object"
        ],
        "return": [
          "the number of characters written"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.OutputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        },
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setAsciiStream",
      "comment": "Retrieves a stream to be used to write Ascii characters to the CLOB value that this SerialClob object represents, starting at position pos. This method forwards the setAsciiStream() call to the underlying Clob object in the event that this SerialClob object is instantiated with a Clob object. If this SerialClob object is instantiated with a char array, a SerialException object is thrown.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialClob.html#getAsciiStream()\"\u003e\u003ccode\u003egetAsciiStream()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#setAsciiStream(long)\"\u003esetAsciiStream\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html\" title\u003d\"interface in java.sql\"\u003eClob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position at which to start writing to the \n\u003ccode\u003eCLOB\u003c/code\u003e object"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if SerialClob is not instantiated with a Clob object; if the \n\u003ccode\u003efree\u003c/code\u003e method had been previously called on this object",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value"
        ],
        "return": [
          "the stream to which ASCII encoded characters can be written"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.Writer",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        },
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setCharacterStream",
      "comment": "Retrieves a stream to be used to write a stream of Unicode characters to the CLOB value that this SerialClob object represents, at position pos. This method forwards the setCharacterStream() call to the underlying Clob object in the event that this SerialClob object is instantiated with a Clob object. If this SerialClob object is instantiated with a char array, a SerialException is thrown.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialClob.html#getCharacterStream()\"\u003e\u003ccode\u003egetCharacterStream()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#setCharacterStream(long)\"\u003esetCharacterStream\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html\" title\u003d\"interface in java.sql\"\u003eClob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position at which to start writing to the \n\u003ccode\u003eCLOB\u003c/code\u003e value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if the SerialClob is not instantiated with a Clob object; if the \n\u003ccode\u003efree\u003c/code\u003e method had been previously called on this object",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value"
        ],
        "return": [
          "a stream to which Unicode encoded characters can be written"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "length"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "truncate",
      "comment": "Truncates the CLOB value that this SerialClob object represents so that it has a length of len characters. Truncating a SerialClob object to length 0 has the effect of clearing its contents.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#truncate(long)\"\u003etruncate\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html\" title\u003d\"interface in java.sql\"\u003eClob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003elength\u003c/code\u003e - the length, in bytes, to which the \n\u003ccode\u003eCLOB\u003c/code\u003e value should be truncated"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eCLOB\u003c/code\u003e value; if the \n\u003ccode\u003efree\u003c/code\u003e method had been previously called on this object"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.Reader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "length"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCharacterStream",
      "comment": "Returns a Reader object that contains a partial SerialClob value, starting with the character specified by pos, which is length characters in length.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#getCharacterStream(long,long)\"\u003egetCharacterStream\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html\" title\u003d\"interface in java.sql\"\u003eClob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the offset to the first character of the partial value to be retrieved. The first character in the \n\u003ccode\u003eSerialClob\u003c/code\u003e is at position 1.",
          "\u003ccode\u003elength\u003c/code\u003e - the length in characters of the partial value to be retrieved."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if pos is less than 1 or if pos is greater than the number of characters in the \n\u003ccode\u003eSerialClob\u003c/code\u003e or if pos + length is greater than the number of characters in the \n\u003ccode\u003eSerialClob\u003c/code\u003e;",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003efree\u003c/code\u003e method had been previously called on this object"
        ],
        "return": [
          "\u003ccode\u003eReader\u003c/code\u003e through which the partial \n\u003ccode\u003eSerialClob\u003c/code\u003e value can be read."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "free",
      "comment": "This method frees the SerialClob object and releases the resources that it holds. The object is invalid once the free method is called. If free is called multiple times, the subsequent calls to free are treated as a no-op.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html#free()\"\u003efree\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html\" title\u003d\"interface in java.sql\"\u003eClob\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if an error occurs releasing the Clob\u0027s resources"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares this SerialClob to the specified object. The result is true if and only if the argument is not null and is a SerialClob object that represents the same sequence of characters as this object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - The object to compare this \n\u003ccode\u003eSerialClob\u003c/code\u003e against"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the given object represents a \n\u003ccode\u003eSerialClob\u003c/code\u003e equivalent to this SerialClob, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns a hash code for this SerialClob.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code value for this object."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Returns a clone of this SerialClob. The copy will contain a reference to a clone of the internal character array, not a reference to the original internal character array of this SerialClob object. The underlying Clob object will be set to null.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a clone of this SerialClob"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        },
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "ch"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a SerialClob object that is a serialized version of the given char array. The new SerialClob object is initialized with the data from the char array, thus allowing disconnected RowSet objects to establish a serialized Clob object without touching the data source.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ech\u003c/code\u003e - the char array representing the \n\u003ccode\u003eClob\u003c/code\u003e object to be serialized"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if an error occurs during serialization",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a SQL error occurs"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        },
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.sql.Clob",
            "type": "Class"
          },
          "field": {
            "name": "clob"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a SerialClob object that is a serialized version of the given Clob object. The new SerialClob object is initialized with the data from the Clob object; therefore, the Clob object should have previously brought the SQL CLOB value\u0027s data over to the client from the database. Otherwise, the new SerialClob object object will contain no data. Note: The Clob object supplied to this constructor must return non-null for both the Clob.getCharacterStream() and Clob.getAsciiStream methods. This SerialClob constructor cannot serialize a Clob object in this instance and will throw an SQLException object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Clob.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003eClob\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eclob\u003c/code\u003e - the \n\u003ccode\u003eClob\u003c/code\u003e object from which this \n\u003ccode\u003eSerialClob\u003c/code\u003e object is to be constructed; cannot be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if an error occurs during serialization",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a SQL error occurs in capturing the CLOB; if the \n\u003ccode\u003eClob\u003c/code\u003e object is a null; or if either of the \n\u003ccode\u003eClob.getCharacterStream()\u003c/code\u003e and \n\u003ccode\u003eClob.getAsciiStream()\u003c/code\u003e methods on the \n\u003ccode\u003eClob\u003c/code\u003e returns a null"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.sql.rowset.serial.SerialClob",
  "comment": "A serialized mapping in the Java programming language of an SQL \n\u003ccode\u003eCLOB\u003c/code\u003e value. \n\u003cp\u003e The \u003ccode\u003eSerialClob\u003c/code\u003e class provides a constructor for creating an instance from a \u003ccode\u003eClob\u003c/code\u003e object. Note that the \u003ccode\u003eClob\u003c/code\u003e object should have brought the SQL \u003ccode\u003eCLOB\u003c/code\u003e value\u0027s data over to the client before a \u003ccode\u003eSerialClob\u003c/code\u003e object is constructed from it. The data of an SQL \u003ccode\u003eCLOB\u003c/code\u003e value can be materialized on the client as a stream of Unicode characters. \u003c/p\u003e\n\u003cp\u003e \u003ccode\u003eSerialClob\u003c/code\u003e methods make it possible to get a substring from a \u003ccode\u003eSerialClob\u003c/code\u003e object or to locate the start of a pattern of characters. \u003c/p\u003e\n\u003ch2\u003e Thread safety \u003c/h2\u003e \n\u003cp\u003e A SerialClob is not safe for use by multiple concurrent threads. If a SerialClob is to be used by more than one thread then access to the SerialClob should be controlled by appropriate synchronization.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.sql.rowset.serial.SerialClob\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}