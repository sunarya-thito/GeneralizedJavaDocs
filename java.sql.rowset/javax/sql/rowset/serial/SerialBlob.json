{
  "packageName": "javax.sql.rowset.serial",
  "simpleName": "SerialBlob",
  "moduleName": "java.sql.rowset",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "length"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBytes",
      "comment": "Copies the specified number of bytes, starting at the given position, from this SerialBlob object to another array of bytes. Note that if the given number of bytes to be copied is larger than the length of this SerialBlob object\u0027s array of bytes, the given number will be shortened to the array\u0027s length.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#setBytes(long,byte%5B%5D)\"\u003e\u003ccode\u003eBlob.setBytes(long, byte[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#getBytes(long,int)\"\u003egetBytes\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html\" title\u003d\"interface in java.sql\"\u003eBlob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the ordinal position of the first byte in this \n\u003ccode\u003eSerialBlob\u003c/code\u003e object to be copied; numbering starts at \n\u003ccode\u003e1\u003c/code\u003e; must not be less than \n\u003ccode\u003e1\u003c/code\u003e and must be less than or equal to the length of this \n\u003ccode\u003eSerialBlob\u003c/code\u003e object",
          "\u003ccode\u003elength\u003c/code\u003e - the number of bytes to be copied"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if the given starting position is out of bounds; if \n\u003ccode\u003efree\u003c/code\u003e had previously been called on this object"
        ],
        "return": [
          "an array of bytes that is a copy of a region of this \n\u003ccode\u003eSerialBlob\u003c/code\u003e object, starting at the given position and containing the given number of consecutive bytes"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "length",
      "comment": "Retrieves the number of bytes in this SerialBlob object\u0027s array of bytes.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#length()\"\u003elength\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html\" title\u003d\"interface in java.sql\"\u003eBlob\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if an error occurs; if \n\u003ccode\u003efree\u003c/code\u003e had previously been called on this object"
        ],
        "return": [
          "a \n\u003ccode\u003elong\u003c/code\u003e indicating the length in bytes of this \n\u003ccode\u003eSerialBlob\u003c/code\u003e object\u0027s array of bytes"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.InputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBinaryStream",
      "comment": "Returns this SerialBlob object as an input stream. Unlike the related method, setBinaryStream, a stream is produced regardless of whether the SerialBlob was created with a Blob object or a byte array.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialBlob.html#setBinaryStream(long)\"\u003e\u003ccode\u003esetBinaryStream(long)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#getBinaryStream()\"\u003egetBinaryStream\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html\" title\u003d\"interface in java.sql\"\u003eBlob\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if an error occurs; if \n\u003ccode\u003efree\u003c/code\u003e had previously been called on this object"
        ],
        "return": [
          "a \n\u003ccode\u003ejava.io.InputStream\u003c/code\u003e object that contains this \n\u003ccode\u003eSerialBlob\u003c/code\u003e object\u0027s array of bytes"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        },
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "pattern"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "start"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "position",
      "comment": "Returns the position in this SerialBlob object where the given pattern of bytes begins, starting the search at the specified position.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#position(byte%5B%5D,long)\"\u003eposition\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html\" title\u003d\"interface in java.sql\"\u003eBlob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epattern\u003c/code\u003e - the pattern of bytes for which to search",
          "\u003ccode\u003estart\u003c/code\u003e - the position of the byte in this \n\u003ccode\u003eSerialBlob\u003c/code\u003e object from which to begin the search; the first position is \n\u003ccode\u003e1\u003c/code\u003e; must not be less than \n\u003ccode\u003e1\u003c/code\u003e nor greater than the length of this \n\u003ccode\u003eSerialBlob\u003c/code\u003e object"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if an error occurs when serializing the blob; if \n\u003ccode\u003efree\u003c/code\u003e had previously been called on this object",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eBLOB\u003c/code\u003e value from the database"
        ],
        "return": [
          "the position in this \n\u003ccode\u003eSerialBlob\u003c/code\u003e object where the given pattern begins, starting at the specified position; \n\u003ccode\u003e-1\u003c/code\u003e if the pattern is not found or the given starting position is out of bounds; position numbering for the return value starts at \n\u003ccode\u003e1\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        },
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.sql.Blob",
            "type": "Class"
          },
          "field": {
            "name": "pattern"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "start"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "position",
      "comment": "Returns the position in this SerialBlob object where the given Blob object begins, starting the search at the specified position.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#position(java.sql.Blob,long)\"\u003eposition\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html\" title\u003d\"interface in java.sql\"\u003eBlob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epattern\u003c/code\u003e - the \n\u003ccode\u003eBlob\u003c/code\u003e object for which to search;",
          "\u003ccode\u003estart\u003c/code\u003e - the position of the byte in this \n\u003ccode\u003eSerialBlob\u003c/code\u003e object from which to begin the search; the first position is \n\u003ccode\u003e1\u003c/code\u003e; must not be less than \n\u003ccode\u003e1\u003c/code\u003e nor greater than the length of this \n\u003ccode\u003eSerialBlob\u003c/code\u003e object"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if an error occurs when serializing the blob; if \n\u003ccode\u003efree\u003c/code\u003e had previously been called on this object",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eBLOB\u003c/code\u003e value from the database"
        ],
        "return": [
          "the position in this \n\u003ccode\u003eSerialBlob\u003c/code\u003e object where the given \n\u003ccode\u003eBlob\u003c/code\u003e object begins, starting at the specified position; \n\u003ccode\u003e-1\u003c/code\u003e if the pattern is not found or the given starting position is out of bounds; position numbering for the return value starts at \n\u003ccode\u003e1\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        },
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "bytes"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setBytes",
      "comment": "Writes the given array of bytes to the BLOB value that this Blob object represents, starting at position pos, and returns the number of bytes written.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialBlob.html#getBytes(long,int)\"\u003e\u003ccode\u003egetBytes(long, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#setBytes(long,byte%5B%5D)\"\u003esetBytes\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html\" title\u003d\"interface in java.sql\"\u003eBlob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position in the SQL \n\u003ccode\u003eBLOB\u003c/code\u003e value at which to start writing. The first position is \n\u003ccode\u003e1\u003c/code\u003e; must not be less than \n\u003ccode\u003e1\u003c/code\u003e nor greater than the length of this \n\u003ccode\u003eSerialBlob\u003c/code\u003e object.",
          "\u003ccode\u003ebytes\u003c/code\u003e - the array of bytes to be written to the \n\u003ccode\u003eBLOB\u003c/code\u003e value that this \n\u003ccode\u003eBlob\u003c/code\u003e object represents"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eBLOB\u003c/code\u003e value; or if an invalid position is set; if an invalid offset value is set; if \n\u003ccode\u003efree\u003c/code\u003e had previously been called on this object",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eBLOB\u003c/code\u003e value from the database"
        ],
        "return": [
          "the number of bytes written"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        },
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "bytes"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offset"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "length"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setBytes",
      "comment": "Writes all or part of the given byte array to the BLOB value that this Blob object represents and returns the number of bytes written. Writing starts at position pos in the BLOB value; len bytes from the given byte array are written.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialBlob.html#getBytes(long,int)\"\u003e\u003ccode\u003egetBytes(long, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#setBytes(long,byte%5B%5D,int,int)\"\u003esetBytes\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html\" title\u003d\"interface in java.sql\"\u003eBlob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position in the \n\u003ccode\u003eBLOB\u003c/code\u003e object at which to start writing. The first position is \n\u003ccode\u003e1\u003c/code\u003e; must not be less than \n\u003ccode\u003e1\u003c/code\u003e nor greater than the length of this \n\u003ccode\u003eSerialBlob\u003c/code\u003e object.",
          "\u003ccode\u003ebytes\u003c/code\u003e - the array of bytes to be written to the \n\u003ccode\u003eBLOB\u003c/code\u003e value",
          "\u003ccode\u003eoffset\u003c/code\u003e - the offset in the \n\u003ccode\u003ebyte\u003c/code\u003e array at which to start reading the bytes. The first offset position is \n\u003ccode\u003e0\u003c/code\u003e; must not be less than \n\u003ccode\u003e0\u003c/code\u003e nor greater than the length of the \n\u003ccode\u003ebyte\u003c/code\u003e array",
          "\u003ccode\u003elength\u003c/code\u003e - the number of bytes to be written to the \n\u003ccode\u003eBLOB\u003c/code\u003e value from the array of bytes \n\u003ci\u003ebytes\u003c/i\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eBLOB\u003c/code\u003e value; if an invalid position is set; if an invalid offset value is set; if number of bytes to be written is greater than the \n\u003ccode\u003eSerialBlob\u003c/code\u003e length; or the combined values of the length and offset is greater than the Blob buffer; if \n\u003ccode\u003efree\u003c/code\u003e had previously been called on this object",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eBLOB\u003c/code\u003e value from the database."
        ],
        "return": [
          "the number of bytes written"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.OutputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        },
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setBinaryStream",
      "comment": "Retrieves a stream that can be used to write to the BLOB value that this Blob object represents. The stream begins at position pos. This method forwards the setBinaryStream() call to the underlying Blob in the event that this SerialBlob object is instantiated with a Blob. If this SerialBlob is instantiated with a byte array, a SerialException is thrown.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialBlob.html#getBinaryStream()\"\u003e\u003ccode\u003egetBinaryStream()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#setBinaryStream(long)\"\u003esetBinaryStream\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html\" title\u003d\"interface in java.sql\"\u003eBlob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position in the \n\u003ccode\u003eBLOB\u003c/code\u003e value at which to start writing"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the \n\u003ccode\u003eBLOB\u003c/code\u003e value",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if the SerialBlob in not instantiated with a \n\u003ccode\u003eBlob\u003c/code\u003e object that supports \n\u003ccode\u003esetBinaryStream()\u003c/code\u003e; if \n\u003ccode\u003efree\u003c/code\u003e had previously been called on this object"
        ],
        "return": [
          "a \n\u003ccode\u003ejava.io.OutputStream\u003c/code\u003e object to which data can be written"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "length"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "truncate",
      "comment": "Truncates the BLOB value that this Blob object represents to be len bytes in length.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#truncate(long)\"\u003etruncate\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html\" title\u003d\"interface in java.sql\"\u003eBlob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003elength\u003c/code\u003e - the length, in bytes, to which the \n\u003ccode\u003eBLOB\u003c/code\u003e value that this \n\u003ccode\u003eBlob\u003c/code\u003e object represents should be truncated"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if there is an error accessing the Blob value; or the length to truncate is greater that the SerialBlob length; if \n\u003ccode\u003efree\u003c/code\u003e had previously been called on this object"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.InputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "length"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBinaryStream",
      "comment": "Returns an InputStream object that contains a partial Blob value, starting with the byte specified by pos, which is length bytes in length.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#getBinaryStream(long,long)\"\u003egetBinaryStream\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html\" title\u003d\"interface in java.sql\"\u003eBlob\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the offset to the first byte of the partial value to be retrieved. The first byte in the \n\u003ccode\u003eBlob\u003c/code\u003e is at position 1",
          "\u003ccode\u003elength\u003c/code\u003e - the length in bytes of the partial value to be retrieved"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if pos is less than 1 or if pos is greater than the number of bytes in the \n\u003ccode\u003eBlob\u003c/code\u003e or if pos + length is greater than the number of bytes in the \n\u003ccode\u003eBlob\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003efree\u003c/code\u003e method had been previously called on this object"
        ],
        "return": [
          "\u003ccode\u003eInputStream\u003c/code\u003e through which the partial \n\u003ccode\u003eBlob\u003c/code\u003e value can be read."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "free",
      "comment": "This method frees the SerialBlob object and releases the resources that it holds. The object is invalid once the free method is called. If free is called multiple times, the subsequent calls to free are treated as a no-op.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html#free()\"\u003efree\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html\" title\u003d\"interface in java.sql\"\u003eBlob\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if an error occurs releasing the Blob\u0027s resources"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares this SerialBlob to the specified object. The result is true if and only if the argument is not null and is a SerialBlob object that represents the same sequence of bytes as this object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - The object to compare this \n\u003ccode\u003eSerialBlob\u003c/code\u003e against"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the given object represents a \n\u003ccode\u003eSerialBlob\u003c/code\u003e equivalent to this SerialBlob, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns a hash code for this SerialBlob.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code value for this object."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Returns a clone of this SerialBlob. The copy will contain a reference to a clone of the internal byte array, not a reference to the original internal byte array of this SerialBlob object. The underlying Blob object will be set to null.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a clone of this SerialBlob"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        },
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "b"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a SerialBlob object that is a serialized version of the given byte array. The new SerialBlob object is initialized with the data from the byte array, thus allowing disconnected RowSet objects to establish serialized Blob objects without touching the data source.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - the \n\u003ccode\u003ebyte\u003c/code\u003e array containing the data for the \n\u003ccode\u003eBlob\u003c/code\u003e object to be serialized"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if an error occurs during serialization",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a SQL errors occurs"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.sql.rowset.serial.SerialException",
          "type": "Class"
        },
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.sql.Blob",
            "type": "Class"
          },
          "field": {
            "name": "blob"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a SerialBlob object that is a serialized version of the given Blob object. The new SerialBlob object is initialized with the data from the Blob object; therefore, the Blob object should have previously brought the SQL BLOB value\u0027s data over to the client from the database. Otherwise, the new SerialBlob object will contain no data.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Blob.html\" title\u003d\"interface in java.sql\"\u003e\u003ccode\u003eBlob\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eblob\u003c/code\u003e - the \n\u003ccode\u003eBlob\u003c/code\u003e object from which this \n\u003ccode\u003eSerialBlob\u003c/code\u003e object is to be constructed; cannot be null."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql.rowset/javax/sql/rowset/serial/SerialException.html\" title\u003d\"class in javax.sql.rowset.serial\"\u003eSerialException\u003c/a\u003e\u003c/code\u003e - if an error occurs during serialization",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eBlob\u003c/code\u003e passed to this to this constructor is a \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.sql.rowset.serial.SerialBlob",
  "comment": "A serialized mapping in the Java programming language of an SQL \n\u003ccode\u003eBLOB\u003c/code\u003e value. \n\u003cp\u003e The \u003ccode\u003eSerialBlob\u003c/code\u003e class provides a constructor for creating an instance from a \u003ccode\u003eBlob\u003c/code\u003e object. Note that the \u003ccode\u003eBlob\u003c/code\u003e object should have brought the SQL \u003ccode\u003eBLOB\u003c/code\u003e value\u0027s data over to the client before a \u003ccode\u003eSerialBlob\u003c/code\u003e object is constructed from it. The data of an SQL \u003ccode\u003eBLOB\u003c/code\u003e value can be materialized on the client as an array of bytes (using the method \u003ccode\u003eBlob.getBytes\u003c/code\u003e) or as a stream of uninterpreted bytes (using the method \u003ccode\u003eBlob.getBinaryStream\u003c/code\u003e). \u003c/p\u003e\n\u003cp\u003e \u003ccode\u003eSerialBlob\u003c/code\u003e methods make it possible to make a copy of a \u003ccode\u003eSerialBlob\u003c/code\u003e object as an array of bytes or as a stream. They also make it possible to locate a given pattern of bytes or a \u003ccode\u003eBlob\u003c/code\u003e object within a \u003ccode\u003eSerialBlob\u003c/code\u003e object and to update or truncate a \u003ccode\u003eBlob\u003c/code\u003e object. \u003c/p\u003e\n\u003ch2\u003e Thread safety \u003c/h2\u003e \n\u003cp\u003e A SerialBlob is not safe for use by multiple concurrent threads. If a SerialBlob is to be used by more than one thread then access to the SerialBlob should be controlled by appropriate synchronization.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.sql.rowset.serial.SerialBlob\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}