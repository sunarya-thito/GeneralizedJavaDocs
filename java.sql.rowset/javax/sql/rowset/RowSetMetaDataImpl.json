{
  "packageName": "javax.sql.rowset",
  "simpleName": "RowSetMetaDataImpl",
  "moduleName": "java.sql.rowset",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnCount"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setColumnCount",
      "comment": "Sets to the given number the number of columns in the RowSet object for which this RowSetMetaDataImpl object was created.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setColumnCount(int)\"\u003esetColumnCount\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnCount\u003c/code\u003e - an \n\u003ccode\u003eint\u003c/code\u003e giving the number of columns in the \n\u003ccode\u003eRowSet\u003c/code\u003e object"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if the given number is equal to or less than zero"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "property"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setAutoIncrement",
      "comment": "Sets whether the designated column is automatically numbered, thus read-only, to the given boolean value.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setAutoIncrement(int,boolean)\"\u003esetAutoIncrement\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns in the rowset, inclusive",
          "\u003ccode\u003eproperty\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the given column is automatically incremented; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given index is out of bounds"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "property"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setCaseSensitive",
      "comment": "Sets whether the name of the designated column is case sensitive to the given boolean.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setCaseSensitive(int,boolean)\"\u003esetCaseSensitive\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns in the rowset, inclusive",
          "\u003ccode\u003eproperty\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e to indicate that the column name is case sensitive; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "property"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSearchable",
      "comment": "Sets whether a value stored in the designated column can be used in a WHERE clause to the given boolean value.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setSearchable(int,boolean)\"\u003esetSearchable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns in the rowset, inclusive",
          "\u003ccode\u003eproperty\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e to indicate that a column value can be used in a \n\u003ccode\u003eWHERE\u003c/code\u003e clause; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "property"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setCurrency",
      "comment": "Sets whether a value stored in the designated column is a cash value to the given boolean.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setCurrency(int,boolean)\"\u003esetCurrency\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive",
          "\u003ccode\u003eproperty\u003c/code\u003e - true if the value is a cash value; false otherwise."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "property"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setNullable",
      "comment": "Sets whether a value stored in the designated column can be set to NULL to the given constant from the interface ResultSetMetaData.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setNullable(int,int)\"\u003esetNullable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive",
          "\u003ccode\u003eproperty\u003c/code\u003e - one of the following \n\u003ccode\u003eResultSetMetaData\u003c/code\u003e constants: \n\u003ccode\u003ecolumnNoNulls\u003c/code\u003e, \n\u003ccode\u003ecolumnNullable\u003c/code\u003e, or \n\u003ccode\u003ecolumnNullableUnknown\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs, the given column number is out of bounds, or the value supplied for the \n\u003ci\u003eproperty\u003c/i\u003e parameter is not one of the following constants: \n\u003ccode\u003eResultSetMetaData.columnNoNulls\u003c/code\u003e, \n\u003ccode\u003eResultSetMetaData.columnNullable\u003c/code\u003e, or \n\u003ccode\u003eResultSetMetaData.columnNullableUnknown\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "property"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSigned",
      "comment": "Sets whether a value stored in the designated column is a signed number to the given boolean.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setSigned(int,boolean)\"\u003esetSigned\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive",
          "\u003ccode\u003eproperty\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e to indicate that a column value is a signed number; \n\u003ccode\u003efalse\u003c/code\u003e to indicate that it is not"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setColumnDisplaySize",
      "comment": "Sets the normal maximum number of chars in the designated column to the given number.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setColumnDisplaySize(int,int)\"\u003esetColumnDisplaySize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive",
          "\u003ccode\u003esize\u003c/code\u003e - the maximum size of the column in chars; must be \n\u003ccode\u003e0\u003c/code\u003e or more"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs, the given column number is out of bounds, or \n\u003ci\u003esize\u003c/i\u003e is less than \n\u003ccode\u003e0\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "label"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setColumnLabel",
      "comment": "Sets the suggested column label for use in printouts and displays, if any, to label. If label is null, the column label is set to an empty string (\"\").",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setColumnLabel(int,java.lang.String)\"\u003esetColumnLabel\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive",
          "\u003ccode\u003elabel\u003c/code\u003e - the column label to be used in printouts and displays; if the column label is \n\u003ccode\u003enull\u003c/code\u003e, an empty \n\u003ccode\u003eString\u003c/code\u003e is set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column index is out of bounds"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "columnName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setColumnName",
      "comment": "Sets the column name of the designated column to the given name.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setColumnName(int,java.lang.String)\"\u003esetColumnName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive",
          "\u003ccode\u003ecolumnName\u003c/code\u003e - a \n\u003ccode\u003eString\u003c/code\u003e object indicating the column name; if the given name is \n\u003ccode\u003enull\u003c/code\u003e, an empty \n\u003ccode\u003eString\u003c/code\u003e is set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column index is out of bounds"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "schemaName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSchemaName",
      "comment": "Sets the designated column\u0027s table\u0027s schema name, if any, to schemaName. If schemaName is null, the schema name is set to an empty string (\"\").",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setSchemaName(int,java.lang.String)\"\u003esetSchemaName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive",
          "\u003ccode\u003eschemaName\u003c/code\u003e - the schema name for the table from which a value in the designated column was derived; may be an empty \n\u003ccode\u003eString\u003c/code\u003e or \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "precision"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPrecision",
      "comment": "Sets the total number of decimal digits in a value stored in the designated column to the given number.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setPrecision(int,int)\"\u003esetPrecision\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive",
          "\u003ccode\u003eprecision\u003c/code\u003e - the total number of decimal digits; must be \n\u003ccode\u003e0\u003c/code\u003e or more"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs, \n\u003ci\u003ecolumnIndex\u003c/i\u003e is out of bounds, or \n\u003ci\u003eprecision\u003c/i\u003e is less than \n\u003ccode\u003e0\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "scale"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setScale",
      "comment": "Sets the number of digits to the right of the decimal point in a value stored in the designated column to the given number.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setScale(int,int)\"\u003esetScale\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive",
          "\u003ccode\u003escale\u003c/code\u003e - the number of digits to the right of the decimal point; must be zero or greater"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs, \n\u003ci\u003ecolumnIndex\u003c/i\u003e is out of bounds, or \n\u003ci\u003escale\u003c/i\u003e is less than \n\u003ccode\u003e0\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "tableName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setTableName",
      "comment": "Sets the name of the table from which the designated column was derived to the given table name.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setTableName(int,java.lang.String)\"\u003esetTableName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive",
          "\u003ccode\u003etableName\u003c/code\u003e - the column\u0027s table name; may be \n\u003ccode\u003enull\u003c/code\u003e or an empty string"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "catalogName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setCatalogName",
      "comment": "Sets the catalog name of the table from which the designated column was derived to catalogName. If catalogName is null, the catalog name is set to an empty string.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setCatalogName(int,java.lang.String)\"\u003esetCatalogName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive",
          "\u003ccode\u003ecatalogName\u003c/code\u003e - the column\u0027s table\u0027s catalog name; if the catalogName is \n\u003ccode\u003enull\u003c/code\u003e, an empty \n\u003ccode\u003eString\u003c/code\u003e is set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "SQLType"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setColumnType",
      "comment": "Sets the SQL type code for values stored in the designated column to the given type code from the class java.sql.Types.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Types.html\" title\u003d\"class in java.sql\"\u003e\u003ccode\u003eTypes\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setColumnType(int,int)\"\u003esetColumnType\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive",
          "\u003ccode\u003eSQLType\u003c/code\u003e - the designated column\u0027s SQL type, which must be one of the constants in the class \n\u003ccode\u003ejava.sql.Types\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs, the given column number is out of bounds, or the column type specified is not one of the constants in \n\u003ccode\u003ejava.sql.Types\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "typeName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setColumnTypeName",
      "comment": "Sets the type name used by the data source for values stored in the designated column to the given type name.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html#setColumnTypeName(int,java.lang.String)\"\u003esetColumnTypeName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/javax/sql/RowSetMetaData.html\" title\u003d\"interface in javax.sql\"\u003eRowSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive",
          "\u003ccode\u003etypeName\u003c/code\u003e - the data source-specific type name; if \n\u003ci\u003etypeName\u003c/i\u003e is \n\u003ccode\u003enull\u003c/code\u003e, an empty \n\u003ccode\u003eString\u003c/code\u003e is set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColumnCount",
      "comment": "Retrieves the number of columns in the RowSet object for which this RowSetMetaDataImpl object was created.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#getColumnCount()\"\u003egetColumnCount\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if an error occurs determining the column count"
        ],
        "return": [
          "the number of columns"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isAutoIncrement",
      "comment": "Retrieves whether a value stored in the designated column is automatically numbered, and thus readonly.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#isAutoIncrement(int)\"\u003eisAutoIncrement\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the column is automatically numbered; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isCaseSensitive",
      "comment": "Indicates whether the case of the designated column\u0027s name matters.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#isCaseSensitive(int)\"\u003eisCaseSensitive\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the column name is case sensitive; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isSearchable",
      "comment": "Indicates whether a value stored in the designated column can be used in a WHERE clause.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#isSearchable(int)\"\u003eisSearchable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if a value in the designated column can be used in a \n\u003ccode\u003eWHERE\u003c/code\u003e clause; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isCurrency",
      "comment": "Indicates whether a value stored in the designated column is a cash value.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#isCurrency(int)\"\u003eisCurrency\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if a value in the designated column is a cash value; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isNullable",
      "comment": "Retrieves a constant indicating whether it is possible to store a NULL value in the designated column.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#isNullable(int)\"\u003eisNullable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "a constant from the \n\u003ccode\u003eResultSetMetaData\u003c/code\u003e interface; either \n\u003ccode\u003ecolumnNoNulls\u003c/code\u003e, \n\u003ccode\u003ecolumnNullable\u003c/code\u003e, or \n\u003ccode\u003ecolumnNullableUnknown\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isSigned",
      "comment": "Indicates whether a value stored in the designated column is a signed number.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#isSigned(int)\"\u003eisSigned\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if a value in the designated column is a signed number; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColumnDisplaySize",
      "comment": "Retrieves the normal maximum width in chars of the designated column.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#getColumnDisplaySize(int)\"\u003egetColumnDisplaySize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "the maximum number of chars that can be displayed in the designated column"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColumnLabel",
      "comment": "Retrieves the suggested column title for the designated column for use in printouts and displays.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#getColumnLabel(int)\"\u003egetColumnLabel\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "the suggested column name to use in printouts and displays"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColumnName",
      "comment": "Retrieves the name of the designated column.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#getColumnName(int)\"\u003egetColumnName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "the column name of the designated column"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSchemaName",
      "comment": "Retrieves the schema name of the table from which the value in the designated column was derived.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#getSchemaName(int)\"\u003egetSchemaName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "the schema name or an empty \n\u003ccode\u003eString\u003c/code\u003e if no schema name is available"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPrecision",
      "comment": "Retrieves the total number of digits for values stored in the designated column.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#getPrecision(int)\"\u003egetPrecision\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "the precision for values stored in the designated column"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getScale",
      "comment": "Retrieves the number of digits to the right of the decimal point for values stored in the designated column.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#getScale(int)\"\u003egetScale\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "the scale for values stored in the designated column"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTableName",
      "comment": "Retrieves the name of the table from which the value in the designated column was derived.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#getTableName(int)\"\u003egetTableName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "the table name or an empty \n\u003ccode\u003eString\u003c/code\u003e if no table name is available"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCatalogName",
      "comment": "Retrieves the catalog name of the table from which the value in the designated column was derived.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#getCatalogName(int)\"\u003egetCatalogName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "the catalog name of the column\u0027s table or an empty \n\u003ccode\u003eString\u003c/code\u003e if no catalog name is available"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColumnType",
      "comment": "Retrieves the type code (one of the java.sql.Types constants) for the SQL type of the value stored in the designated column.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Types.html\" title\u003d\"class in java.sql\"\u003e\u003ccode\u003eTypes\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#getColumnType(int)\"\u003egetColumnType\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "an \n\u003ccode\u003eint\u003c/code\u003e representing the SQL type of values stored in the designated column"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColumnTypeName",
      "comment": "Retrieves the DBMS-specific type name for values stored in the designated column.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#getColumnTypeName(int)\"\u003egetColumnTypeName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "the type name used by the data source"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isReadOnly",
      "comment": "Indicates whether the designated column is definitely not writable, thus readonly.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#isReadOnly(int)\"\u003eisReadOnly\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this \n\u003ccode\u003eRowSet\u003c/code\u003e object is read-Only and thus not updatable; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isWritable",
      "comment": "Indicates whether it is possible for a write operation on the designated column to succeed. A return value of true means that a write operation may or may not succeed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#isWritable(int)\"\u003eisWritable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if a write operation on the designated column may will succeed; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isDefinitelyWritable",
      "comment": "Indicates whether a write operation on the designated column will definitely succeed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#isDefinitelyWritable(int)\"\u003eisDefinitelyWritable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if a write operation on the designated column will definitely succeed; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColumnClassName",
      "comment": "Retrieves the fully-qualified name of the class in the Java programming language to which a value in the designated column will be mapped. For example, if the value is an int, the class name returned by this method will be java.lang.Integer. If the value in the designated column has a custom mapping, this method returns the name of the class that implements SQLData. When the method ResultSet.getObject is called to retrieve a value from the designated column, it will create an instance of this class or one of its subclasses.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html#getColumnClassName(int)\"\u003egetColumnClassName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/ResultSetMetaData.html\" title\u003d\"interface in java.sql\"\u003eResultSetMetaData\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the first column is 1, the second is 2, and so on; must be between \n\u003ccode\u003e1\u003c/code\u003e and the number of columns, inclusive"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if a database access error occurs or the given column number is out of bounds"
        ],
        "return": [
          "the fully-qualified name of the class in the Java programming language that would be used by the method \n\u003ccode\u003eRowSet.getObject\u003c/code\u003e to retrieve the value in the specified column. This is the class name used for custom mapping when there is a custom mapping."
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "iface"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "unwrap",
      "comment": "Returns an object that implements the given interface to allow access to non-standard methods, or standard methods not exposed by the proxy. The result may be either the object found to implement the interface or a proxy for that object. If the receiver implements the interface then that is the object. If the receiver is a wrapper and the wrapped object implements the interface then that is the object. Otherwise the object is the result of calling unwrap recursively on the wrapped object. If the receiver is not a wrapper and does not implement the interface, then an SQLException is thrown.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the class modeled by this Class object"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Wrapper.html#unwrap(java.lang.Class)\"\u003eunwrap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Wrapper.html\" title\u003d\"interface in java.sql\"\u003eWrapper\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eiface\u003c/code\u003e - A Class defining an interface that the result must implement."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - If no object found that implements the interface"
        ],
        "return": [
          "an object that implements the interface. May be a proxy for the actual implementing object."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.sql.SQLException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "interfaces"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isWrapperFor",
      "comment": "Returns true if this either implements the interface argument or is directly or indirectly a wrapper for an object that does. Returns false otherwise. If this implements the interface then return true, else if this is a wrapper then return the result of recursively calling isWrapperFor on the wrapped object. If this does not implement the interface and is not a wrapper, return false. This method should be implemented as a low-cost operation compared to unwrap so that callers can use this method to avoid expensive unwrap calls that may fail. If this method returns true then calling unwrap with the same argument should succeed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Wrapper.html#isWrapperFor(java.lang.Class)\"\u003eisWrapperFor\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/Wrapper.html\" title\u003d\"interface in java.sql\"\u003eWrapper\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003einterfaces\u003c/code\u003e - a Class defining an interface."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.sql/java/sql/SQLException.html\" title\u003d\"class in java.sql\"\u003eSQLException\u003c/a\u003e\u003c/code\u003e - if an error occurs while determining whether this is a wrapper for an object with the given interface."
        ],
        "return": [
          "true if this implements the interface or directly or indirectly wraps an object that does."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a RowSetMetaDataImpl object.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.sql.rowset.RowSetMetaDataImpl",
  "comment": "Provides implementations for the methods that set and get metadata information about a \n\u003ccode\u003eRowSet\u003c/code\u003e object\u0027s columns. A \n\u003ccode\u003eRowSetMetaDataImpl\u003c/code\u003e object keeps track of the number of columns in the rowset and maintains an internal array of column attributes for each column. \n\u003cp\u003e A \u003ccode\u003eRowSet\u003c/code\u003e object creates a \u003ccode\u003eRowSetMetaDataImpl\u003c/code\u003e object internally in order to set and retrieve information about its columns. \u003c/p\u003e\n\u003cp\u003e NOTE: All metadata in a \u003ccode\u003eRowSetMetaDataImpl\u003c/code\u003e object should be considered as unavailable until the \u003ccode\u003eRowSet\u003c/code\u003e object that it describes is populated. Therefore, any \u003ccode\u003eRowSetMetaDataImpl\u003c/code\u003e method that retrieves information is defined as having unspecified behavior when it is called before the \u003ccode\u003eRowSet\u003c/code\u003e object contains data.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.sql.rowset.RowSetMetaDataImpl\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}