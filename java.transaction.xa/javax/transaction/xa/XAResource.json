{
  "packageName": "javax.transaction.xa",
  "simpleName": "XAResource",
  "moduleName": "java.transaction.xa",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TMENDRSCAN",
      "comment": "Ends a recovery scan.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.transaction.xa.XAResource.TMENDRSCAN\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TMFAIL",
      "comment": "Disassociates the caller and marks the transaction branch rollback-only.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.transaction.xa.XAResource.TMFAIL\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TMJOIN",
      "comment": "Caller is joining existing transaction branch.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.transaction.xa.XAResource.TMJOIN\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TMNOFLAGS",
      "comment": "Use TMNOFLAGS to indicate no flags value is selected.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.transaction.xa.XAResource.TMNOFLAGS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TMONEPHASE",
      "comment": "Caller is using one-phase optimization.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.transaction.xa.XAResource.TMONEPHASE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TMRESUME",
      "comment": "Caller is resuming association with a suspended transaction branch.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.transaction.xa.XAResource.TMRESUME\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TMSTARTRSCAN",
      "comment": "Starts a recovery scan.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.transaction.xa.XAResource.TMSTARTRSCAN\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TMSUCCESS",
      "comment": "Disassociates caller from a transaction branch.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.transaction.xa.XAResource.TMSUCCESS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TMSUSPEND",
      "comment": "Caller is suspending (not ending) its association with a transaction branch.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.transaction.xa.XAResource.TMSUSPEND\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "XA_RDONLY",
      "comment": "The transaction branch has been read-only and has been committed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.transaction.xa.XAResource.XA_RDONLY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "XA_OK",
      "comment": "The transaction work has been prepared normally.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.transaction.xa.XAResource.XA_OK\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.transaction.xa.XAException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.transaction.xa.Xid",
            "type": "Class"
          },
          "field": {
            "name": "xid"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "onePhase"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "commit",
      "comment": "Commits the global transaction specified by xid.",
      "tagMap": {
        "param": [
          "\u003ccode\u003exid\u003c/code\u003e - A global transaction identifier",
          "\u003ccode\u003eonePhase\u003c/code\u003e - If true, the resource manager should use a one-phase commit protocol to commit the work done on behalf of xid."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.transaction.xa/javax/transaction/xa/XAException.html\" title\u003d\"class in javax.transaction.xa\"\u003eXAException\u003c/a\u003e\u003c/code\u003e - An error has occurred. Possible XAExceptions are XA_HEURHAZ, XA_HEURCOM, XA_HEURRB, XA_HEURMIX, XAER_RMERR, XAER_RMFAIL, XAER_NOTA, XAER_INVAL, or XAER_PROTO. \n\u003cp\u003eIf the resource manager did not commit the transaction and the paramether onePhase is set to true, the resource manager may throw one of the XA_RB* exceptions. Upon return, the resource manager has rolled back the branch\u0027s work and has released all held resources.\u003c/p\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.transaction.xa.XAException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.transaction.xa.Xid",
            "type": "Class"
          },
          "field": {
            "name": "xid"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "flags"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "end",
      "comment": "Ends the work performed on behalf of a transaction branch. The resource manager disassociates the XA resource from the transaction branch specified and lets the transaction complete. If TMSUSPEND is specified in the flags, the transaction branch is temporarily suspended in an incomplete state. The transaction context is in a suspended state and must be resumed via the start method with TMRESUME specified. If TMFAIL is specified, the portion of work has failed. The resource manager may mark the transaction as rollback-only If TMSUCCESS is specified, the portion of work has completed successfully.",
      "tagMap": {
        "param": [
          "\u003ccode\u003exid\u003c/code\u003e - A global transaction identifier that is the same as the identifier used previously in the \n\u003ccode\u003estart\u003c/code\u003e method.",
          "\u003ccode\u003eflags\u003c/code\u003e - One of TMSUCCESS, TMFAIL, or TMSUSPEND."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.transaction.xa/javax/transaction/xa/XAException.html\" title\u003d\"class in javax.transaction.xa\"\u003eXAException\u003c/a\u003e\u003c/code\u003e - An error has occurred. Possible XAException values are XAER_RMERR, XAER_RMFAILED, XAER_NOTA, XAER_INVAL, XAER_PROTO, or XA_RB*."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.transaction.xa.XAException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.transaction.xa.Xid",
            "type": "Class"
          },
          "field": {
            "name": "xid"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "forget",
      "comment": "Tells the resource manager to forget about a heuristically completed transaction branch.",
      "tagMap": {
        "param": [
          "\u003ccode\u003exid\u003c/code\u003e - A global transaction identifier."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.transaction.xa/javax/transaction/xa/XAException.html\" title\u003d\"class in javax.transaction.xa\"\u003eXAException\u003c/a\u003e\u003c/code\u003e - An error has occurred. Possible exception values are XAER_RMERR, XAER_RMFAIL, XAER_NOTA, XAER_INVAL, or XAER_PROTO."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.transaction.xa.XAException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTransactionTimeout",
      "comment": "Obtains the current transaction timeout value set for this XAResource instance. If XAResource.setTransactionTimeout was not used prior to invoking this method, the return value is the default timeout set for the resource manager; otherwise, the value used in the previous setTransactionTimeout call is returned.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.transaction.xa/javax/transaction/xa/XAException.html\" title\u003d\"class in javax.transaction.xa\"\u003eXAException\u003c/a\u003e\u003c/code\u003e - An error has occurred. Possible exception values are XAER_RMERR and XAER_RMFAIL."
        ],
        "return": [
          "the transaction timeout value in seconds."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.transaction.xa.XAException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.transaction.xa.XAResource",
            "type": "Class"
          },
          "field": {
            "name": "xares"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isSameRM",
      "comment": "This method is called to determine if the resource manager instance represented by the target object is the same as the resouce manager instance represented by the parameter xares.",
      "tagMap": {
        "param": [
          "\u003ccode\u003exares\u003c/code\u003e - An XAResource object whose resource manager instance is to be compared with the resource manager instance of the target object."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.transaction.xa/javax/transaction/xa/XAException.html\" title\u003d\"class in javax.transaction.xa\"\u003eXAException\u003c/a\u003e\u003c/code\u003e - An error has occurred. Possible exception values are XAER_RMERR and XAER_RMFAIL."
        ],
        "return": [
          "\u003ci\u003etrue\u003c/i\u003e if it\u0027s the same RM instance; otherwise \n\u003ci\u003efalse\u003c/i\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.transaction.xa.XAException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.transaction.xa.Xid",
            "type": "Class"
          },
          "field": {
            "name": "xid"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "prepare",
      "comment": "Ask the resource manager to prepare for a transaction commit of the transaction specified in xid.",
      "tagMap": {
        "param": [
          "\u003ccode\u003exid\u003c/code\u003e - A global transaction identifier."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.transaction.xa/javax/transaction/xa/XAException.html\" title\u003d\"class in javax.transaction.xa\"\u003eXAException\u003c/a\u003e\u003c/code\u003e - An error has occurred. Possible exception values are: XA_RB*, XAER_RMERR, XAER_RMFAIL, XAER_NOTA, XAER_INVAL, or XAER_PROTO."
        ],
        "return": [
          "A value indicating the resource manager\u0027s vote on the outcome of the transaction. The possible values are: XA_RDONLY or XA_OK. If the resource manager wants to roll back the transaction, it should do so by raising an appropriate XAException in the prepare method."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.transaction.xa.Xid",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "throwsClasses": [
        {
          "name": "javax.transaction.xa.XAException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "flag"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "recover",
      "comment": "Obtains a list of prepared transaction branches from a resource manager. The transaction manager calls this method during recovery to obtain the list of transaction branches that are currently in prepared or heuristically completed states.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eflag\u003c/code\u003e - One of TMSTARTRSCAN, TMENDRSCAN, TMNOFLAGS. TMNOFLAGS must be used when no other flags are set in the parameter."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.transaction.xa/javax/transaction/xa/XAException.html\" title\u003d\"class in javax.transaction.xa\"\u003eXAException\u003c/a\u003e\u003c/code\u003e - An error has occurred. Possible values are XAER_RMERR, XAER_RMFAIL, XAER_INVAL, and XAER_PROTO."
        ],
        "return": [
          "The resource manager returns zero or more XIDs of the transaction branches that are currently in a prepared or heuristically completed state. If an error occurs during the operation, the resource manager should throw the appropriate XAException."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.transaction.xa.XAException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.transaction.xa.Xid",
            "type": "Class"
          },
          "field": {
            "name": "xid"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "rollback",
      "comment": "Informs the resource manager to roll back work done on behalf of a transaction branch.",
      "tagMap": {
        "param": [
          "\u003ccode\u003exid\u003c/code\u003e - A global transaction identifier."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.transaction.xa/javax/transaction/xa/XAException.html\" title\u003d\"class in javax.transaction.xa\"\u003eXAException\u003c/a\u003e\u003c/code\u003e - An error has occurred."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.transaction.xa.XAException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "seconds"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setTransactionTimeout",
      "comment": "Sets the current transaction timeout value for this XAResource instance. Once set, this timeout value is effective until setTransactionTimeout is invoked again with a different value. To reset the timeout value to the default value used by the resource manager, set the value to zero. If the timeout operation is performed successfully, the method returns true; otherwise false. If a resource manager does not support explicitly setting the transaction timeout value, this method returns false.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eseconds\u003c/code\u003e - The transaction timeout value in seconds."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.transaction.xa/javax/transaction/xa/XAException.html\" title\u003d\"class in javax.transaction.xa\"\u003eXAException\u003c/a\u003e\u003c/code\u003e - An error has occurred. Possible exception values are XAER_RMERR, XAER_RMFAIL, or XAER_INVAL."
        ],
        "return": [
          "\u003ci\u003etrue\u003c/i\u003e if the transaction timeout value is set successfully; otherwise \n\u003ci\u003efalse\u003c/i\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.transaction.xa.XAException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.transaction.xa.Xid",
            "type": "Class"
          },
          "field": {
            "name": "xid"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "flags"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "start",
      "comment": "Starts work on behalf of a transaction branch specified in xid. If TMJOIN is specified, the start applies to joining a transaction previously seen by the resource manager. If TMRESUME is specified, the start applies to resuming a suspended transaction specified in the parameter xid. If neither TMJOIN nor TMRESUME is specified and the transaction specified by xid has previously been seen by the resource manager, the resource manager throws the XAException exception with XAER_DUPID error code.",
      "tagMap": {
        "param": [
          "\u003ccode\u003exid\u003c/code\u003e - A global transaction identifier to be associated with the resource.",
          "\u003ccode\u003eflags\u003c/code\u003e - One of TMNOFLAGS, TMJOIN, or TMRESUME."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.transaction.xa/javax/transaction/xa/XAException.html\" title\u003d\"class in javax.transaction.xa\"\u003eXAException\u003c/a\u003e\u003c/code\u003e - An error has occurred. Possible exceptions are XA_RB*, XAER_RMERR, XAER_RMFAIL, XAER_DUPID, XAER_OUTSIDE, XAER_NOTA, XAER_INVAL, or XAER_PROTO."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.transaction.xa.XAResource",
  "comment": "The XAResource interface is a Java mapping of the industry standard XA interface based on the X/Open CAE Specification (Distributed Transaction Processing: The XA Specification). \n\u003cp\u003eThe XA interface defines the contract between a Resource Manager and a Transaction Manager in a distributed transaction processing (DTP) environment. A JDBC driver or a JMS provider implements this interface to support the association between a global transaction and a database or message service connection. \u003c/p\u003e\n\u003cp\u003eThe XAResource interface can be supported by any transactional resource that is intended to be used by application programs in an environment where transactions are controlled by an external transaction manager. An example of such a resource is a database management system. An application may access data through multiple database connections. Each database connection is enlisted with the transaction manager as a transactional resource. The transaction manager obtains an XAResource for each connection participating in a global transaction. The transaction manager uses the \u003ccode\u003estart\u003c/code\u003e method to associate the global transaction with the resource, and it uses the \u003ccode\u003eend\u003c/code\u003e method to disassociate the transaction from the resource. The resource manager is responsible for associating the global transaction to all work performed on its data between the start and end method invocations. \u003c/p\u003e\n\u003cp\u003eAt transaction commit time, the resource managers are informed by the transaction manager to prepare, commit, or rollback a transaction according to the two-phase commit protocol.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}