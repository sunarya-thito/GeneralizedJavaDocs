{
  "packageName": "jdk.management.jfr",
  "simpleName": "RemoteRecordingStream",
  "moduleName": "jdk.management.jfr",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "settings"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSettings",
      "comment": "Replaces all settings for this recording stream. The following example connects to a remote host and stream events using settings from the \"default\" configuration.  {\n     \n\n     String host \u003d \"com.example\";\n     int port \u003d 4711;\n\n     String url \u003d \"service:jmx:rmi:///jndi/rmi://\" + host + \":\" + port + \"/jmxrmi\";\n\n     JMXServiceURL u \u003d new JMXServiceURL(url);\n     JMXConnector c \u003d JMXConnectorFactory.connect(u);\n     MBeanServerConnection conn \u003d c.getMBeanServerConnection();\n\n     try (final var rs \u003d new RemoteRecordingStream(conn)) {\n         rs.onMetadata(e -\u003e {\n             for (Configuration c : e.getConfigurations()) {\n                 if (c.getName().equals(\"default\")) {\n                     rs.setSettings(c.getSettings());\n                 }\n             }\n         });\n         rs.onEvent(System.out::println);\n         rs.start();\n     }",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html#setSettings(java.util.Map)\"\u003e\u003ccode\u003eRecording.setSettings(Map)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esettings\u003c/code\u003e - the settings to set, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jfr.EventSettings",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "disable",
      "comment": "Disables event with the specified name. If multiple events with same name (for example, the same class is loaded in different class loaders), then all events that match the name are disabled.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the settings for the event, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an event setting for further configuration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jfr.EventSettings",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "enable",
      "comment": "Enables the event with the specified name. If multiple events have the same name (for example, the same class is loaded in different class loaders), then all events that match the name are enabled.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/EventType.html\" title\u003d\"class in jdk.jfr\"\u003e\u003ccode\u003eEventType\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the settings for the event, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an event setting for further configuration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.time.Duration",
            "type": "Class"
          },
          "field": {
            "name": "maxAge"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMaxAge",
      "comment": "Determines how far back data is kept for the stream. To control the amount of recording data stored on disk, the maximum length of time to retain the data can be specified. Data stored on disk that is older than the specified length of time is removed by the Java Virtual Machine (JVM). If neither maximum limit or the maximum age is set, the size of the recording may grow indefinitely if events are not consumed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emaxAge\u003c/code\u003e - the length of time that data is kept, or \n\u003ccode\u003enull\u003c/code\u003e if infinite"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003emaxAge\u003c/code\u003e is negative",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the recording is in the \n\u003ccode\u003eCLOSED\u003c/code\u003e state"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "maxSize"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMaxSize",
      "comment": "Determines how much data is kept for the stream. To control the amount of recording data that is stored on disk, the maximum amount of data to retain can be specified. When the maximum limit is exceeded, the Java Virtual Machine (JVM) removes the oldest chunk to make room for a more recent chunk. If neither maximum limit or the maximum age is set, the size of the recording may grow indefinitely if events are not consumed. The size is measured in bytes.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emaxSize\u003c/code\u003e - the amount of data to retain, \n\u003ccode\u003e0\u003c/code\u003e if infinite"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003emaxSize\u003c/code\u003e is negative",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the recording is in \n\u003ccode\u003eCLOSED\u003c/code\u003e state"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.function.Consumer",
            "parameters": [
              {
                "name": "jdk.jfr.consumer.RecordedEvent",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "onEvent",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onEvent(java.util.function.Consumer)\"\u003eonEvent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - an action to perform on each \n\u003ccode\u003eRecordedEvent\u003c/code\u003e, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "eventName"
          }
        },
        {
          "type": {
            "name": "java.util.function.Consumer",
            "parameters": [
              {
                "name": "jdk.jfr.consumer.RecordedEvent",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "onEvent",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onEvent(java.lang.String,java.util.function.Consumer)\"\u003eonEvent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eeventName\u003c/code\u003e - the name of the event, not \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003eaction\u003c/code\u003e - an action to perform on each \n\u003ccode\u003eRecordedEvent\u003c/code\u003e matching the event name, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Runnable",
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "onFlush",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onFlush(java.lang.Runnable)\"\u003eonFlush\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - an action to perform after the stream has been flushed, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.function.Consumer",
            "parameters": [
              {
                "name": "java.lang.Throwable",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "onError",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onError(java.util.function.Consumer)\"\u003eonError\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - an action to perform if an exception occurs, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Runnable",
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "onClose",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#close()\"\u003e\u003ccode\u003eEventStream.close()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onClose(java.lang.Runnable)\"\u003eonClose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - an action to perform after the stream is closed, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "close",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/AutoCloseable.html#close()\"\u003eclose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/AutoCloseable.html\" title\u003d\"interface in java.lang\"\u003eAutoCloseable\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#close()\"\u003eclose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onEvent(java.util.function.Consumer)\"\u003e\u003ccode\u003eEventStream.onEvent(Consumer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onEvent(java.lang.String,java.util.function.Consumer)\"\u003e\u003ccode\u003eEventStream.onEvent(String, Consumer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onFlush(java.lang.Runnable)\"\u003e\u003ccode\u003eEventStream.onFlush(Runnable)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onClose(java.lang.Runnable)\"\u003e\u003ccode\u003eEventStream.onClose(Runnable)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onError(java.util.function.Consumer)\"\u003e\u003ccode\u003eEventStream.onError(Consumer)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#remove(java.lang.Object)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to unregister, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the action was unregistered, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "reuse"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setReuse",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#setReuse(boolean)\"\u003esetReuse\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ereuse\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if an event object can be reused, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "ordered"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOrdered",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#setOrdered(boolean)\"\u003esetOrdered\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eordered\u003c/code\u003e - if event objects arrive in chronological order to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onEvent(java.util.function.Consumer)\"\u003e\u003ccode\u003eEventStream.onEvent(Consumer)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.time.Instant",
            "type": "Class"
          },
          "field": {
            "name": "startTime"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setStartTime",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#start()\"\u003e\u003ccode\u003eEventStream.start()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#startAsync()\"\u003e\u003ccode\u003eEventStream.startAsync()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#setStartTime(java.time.Instant)\"\u003esetStartTime\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003estartTime\u003c/code\u003e - the start time, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.time.Instant",
            "type": "Class"
          },
          "field": {
            "name": "endTime"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setEndTime",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#start()\"\u003e\u003ccode\u003eEventStream.start()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#startAsync()\"\u003e\u003ccode\u003eEventStream.startAsync()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#setEndTime(java.time.Instant)\"\u003esetEndTime\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eendTime\u003c/code\u003e - the end time, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "start",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#start()\"\u003estart\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "startAsync",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#startAsync()\"\u003estartAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.time.Duration",
            "type": "Class"
          },
          "field": {
            "name": "timeout"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "awaitTermination",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#start()\"\u003e\u003ccode\u003eEventStream.start()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#startAsync()\"\u003e\u003ccode\u003eEventStream.startAsync()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Thread.html#interrupt()\"\u003e\u003ccode\u003eThread.interrupt()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#awaitTermination(java.time.Duration)\"\u003eawaitTermination\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etimeout\u003c/code\u003e - the maximum time to wait, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - if interrupted while waiting"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "awaitTermination",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#start()\"\u003e\u003ccode\u003eEventStream.start()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#startAsync()\"\u003e\u003ccode\u003eEventStream.startAsync()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Thread.html#interrupt()\"\u003e\u003ccode\u003eThread.interrupt()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#awaitTermination()\"\u003eawaitTermination\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - if interrupted while waiting"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.MBeanServerConnection",
            "type": "Class"
          },
          "field": {
            "name": "connection"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an event stream that operates against a MBeanServerConnection that has a registered FlightRecorderMXBean. To configure event settings, use setSettings(Map).",
      "tagMap": {
        "param": [
          "\u003ccode\u003econnection\u003c/code\u003e - the \n\u003ccode\u003eMBeanServerConnection\u003c/code\u003e where the \n\u003ccode\u003eFlightRecorderMXBean\u003c/code\u003e is registered, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if a stream can\u0027t be opened, an I/O error occurs when trying to access the repository or the \n\u003ccode\u003eFlightRecorderMXBean\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and its \n\u003ccode\u003echeckRead\u003c/code\u003e method denies read access to the directory, or files in the directory."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.MBeanServerConnection",
            "type": "Class"
          },
          "field": {
            "name": "connection"
          }
        },
        {
          "type": {
            "name": "java.nio.file.Path",
            "type": "Class"
          },
          "field": {
            "name": "directory"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an event stream that operates against a MBeanServerConnection that has a registered FlightRecorderMXBean. To configure event settings, use setSettings(Map).",
      "tagMap": {
        "param": [
          "\u003ccode\u003econnection\u003c/code\u003e - the \n\u003ccode\u003eMBeanServerConnection\u003c/code\u003e where the \n\u003ccode\u003eFlightRecorderMXBean\u003c/code\u003e is registered, not \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003edirectory\u003c/code\u003e - the directory to store event data that is downloaded, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if a stream can\u0027t be opened, an I/O error occurs when trying to access the repository or the \n\u003ccode\u003eFlightRecorderMXBean\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and its \n\u003ccode\u003echeckRead\u003c/code\u003e method denies read access to the directory, or files in the directory."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "jdk.management.jfr.RemoteRecordingStream",
  "comment": "An implementation of an \n\u003ca href\u003d\"../../../../jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003e\u003ccode\u003eEventStream\u003c/code\u003e\u003c/a\u003e that can serialize events over the network using an \n\u003ca href\u003d\"../../../../java.management/javax/management/MBeanServerConnection.html\" title\u003d\"interface in javax.management\"\u003e\u003ccode\u003eMBeanServerConnection\u003c/code\u003e\u003c/a\u003e. \n\u003cp\u003e The following example shows how to record garbage collection pauses and CPU usage on a remote host and print the events to standard out. \u003c/p\u003e\n\u003cpre\u003e {\n     \n     String host \u003d \"com.example\";\n     int port \u003d 4711;\n\n     String url \u003d \"service:jmx:rmi:///jndi/rmi://\" + host + \":\" + port + \"/jmxrmi\";\n\n     JMXServiceURL u \u003d new JMXServiceURL(url);\n     JMXConnector c \u003d JMXConnectorFactory.connect(u);\n     MBeanServerConnection conn \u003d c.getMBeanServerConnection();\n\n     try (var rs \u003d new RemoteRecordingStream(conn)) {\n         rs.enable(\"jdk.GCPhasePause\").withoutThreshold();\n         rs.enable(\"jdk.CPULoad\").withPeriod(Duration.ofSeconds(1));\n         rs.onEvent(\"jdk.CPULoad\", System.out::println);\n         rs.onEvent(\"jdk.GCPhasePause\", System.out::println);\n         rs.start();\n     }\n \n \u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "since": [
      "16"
    ]
  }
}