{
  "packageName": "jdk.management.jfr",
  "simpleName": "RecordingInfo",
  "moduleName": "jdk.management.jfr",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getName",
      "comment": "Returns the name of the recording associated with this RecordingInfo.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html#getName()\"\u003e\u003ccode\u003eRecording.getName()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the recording name, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getId",
      "comment": "Returns the unique ID for the recording associated with this RecordingInfo.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html#getId()\"\u003e\u003ccode\u003eRecording.getId()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the recording ID"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDumpOnExit",
      "comment": "Returns if the recording associated with this RecordingInfo should be dumped to file when the JVM exits.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html#getDumpOnExit()\"\u003e\u003ccode\u003eRecording.getDumpOnExit()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if recording should be dumped on exit, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMaxAge",
      "comment": "Returns how many seconds data should be kept on disk, or 0 if data is to be kept forever. In-memory recordings are not affected by maximum age.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html#getMaxAge()\"\u003e\u003ccode\u003eRecording.getMaxAge()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html#setToDisk(boolean)\"\u003e\u003ccode\u003eRecording.setToDisk(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "how long data should be kept on disk, measured in seconds"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMaxSize",
      "comment": "Returns the amount of data, measured in bytes, the recording associated with this RecordingInfo, should be kept on disk, before it\u0027s rotated away, or 0 if data is to be kept indefinitely. In-memory recordings are not affected by maximum size.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html#setToDisk(boolean)\"\u003e\u003ccode\u003eRecording.setToDisk(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html#getMaxSize()\"\u003e\u003ccode\u003eRecording.getMaxSize()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the amount of data should be kept on disk, in bytes"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getState",
      "comment": "Returns a String representation of state of the recording associated with this RecordingInfo. Valid return values are \"NEW\", \"DELAYED\", \"STARTING\", \"RUNNING\", \"STOPPING\", \"STOPPED\" and \"CLOSED\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Enum.html#toString()\"\u003e\u003ccode\u003eEnum.toString()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html#getState()\"\u003e\u003ccode\u003eRecording.getState()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the recording state, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getStartTime",
      "comment": "Returns start time of the recording associated with this RecordingInfo, measured as ms since epoch, or null if the recording hasn\u0027t started.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html#getStartTime()\"\u003e\u003ccode\u003eRecording.getStartTime()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the start time of the recording, or \n\u003ccode\u003enull\u003c/code\u003e if the recording hasn\u0027t started"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getStopTime",
      "comment": "Returns the actual or expected stop time of the recording associated with this RecordingInfo, measured as ms since epoch, or null if the expected or actual stop time is not known, which can only happen if the recording has not yet been stopped.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html#getStopTime()\"\u003e\u003ccode\u003eRecording.getStopTime()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the stop time of recording, or \n\u003ccode\u003enull\u003c/code\u003e if recording hasn\u0027t been stopped."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          },
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSettings",
      "comment": "Returns the settings for the recording associated with this RecordingInfo.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html#getSettings()\"\u003e\u003ccode\u003eRecording.getSettings()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the recording settings, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDestination",
      "comment": "Returns destination path where data, for the recording associated with this RecordingInfo, should be written when the recording stops, or null if the recording should not be written.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html#getDestination()\"\u003e\u003ccode\u003eRecording.getDestination()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the destination, or \n\u003ccode\u003enull\u003c/code\u003e if not set"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string description of the recording associated with this RecordingInfo",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "description, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSize",
      "comment": "Returns the amount data recorded by recording. associated with this RecordingInfo.",
      "tagMap": {
        "return": [
          "the amount of recorded data, measured in bytes"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isToDisk",
      "comment": "Returns true if the recording associated with this RecordingInfo should be flushed to disk, when memory buffers are full, false otherwise.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if recording is to disk, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDuration",
      "comment": "Returns the desired duration, measured in seconds, of the recording associated with this RecordingInfo, or {code 0} if no duration has been set.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html#getDuration()\"\u003e\u003ccode\u003eRecording.getDuration()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the desired duration, or {code 0} if no duration has been set"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.management.jfr.RecordingInfo",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.management.openmbean.CompositeData",
            "type": "Class"
          },
          "field": {
            "name": "cd"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "from",
      "comment": "Returns a RecordingInfo represented by the specified CompositeData object. The specified CompositeData must have the following item names and item types to be valid. Supported names and types in a specified CompositeData object Name Type id Long name String state String dumpOnExit Boolean size Long toDisk Boolean maxAge Long maxSize Long startTime Long stopTime Long destination String duration Long settings javax.management.openmbean.CompositeData[] whose element type is the mapped type for SettingDescriptorInfo as specified in the SettingDescriptorInfo.from(javax.management.openmbean.CompositeData) method.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecd\u003c/code\u003e - \n\u003ccode\u003eCompositeData\u003c/code\u003e representing the \n\u003ccode\u003eRecordingInfo\u003c/code\u003e to return"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ecd\u003c/code\u003e does not represent a valid \n\u003ccode\u003eRecordingInfo\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eRecordingInfo\u003c/code\u003e represented by \n\u003ccode\u003ecd\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if \n\u003ccode\u003ecd\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "jdk.management.jfr.RecordingInfo",
  "comment": "Management representation of a \n\u003ccode\u003eRecording\u003c/code\u003e.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html\" title\u003d\"class in jdk.jfr\"\u003e\u003ccode\u003eRecording\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "9"
    ]
  }
}