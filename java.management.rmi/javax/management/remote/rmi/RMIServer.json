{
  "packageName": "javax.management.remote.rmi",
  "simpleName": "RMIServer",
  "moduleName": "java.management.rmi",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.rmi.Remote",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.rmi.RemoteException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getVersion",
      "comment": "The version of the RMI Connector Protocol understood by this connector server. This is a string with the following format:  protocol-version implementation-name\n The protocol-version is a series of two or more non-negative integers separated by periods (.). An implementation of the version described by this documentation must use the string 1.0 here. After the protocol version there must be a space, followed by the implementation name. The format of the implementation name is unspecified. It is recommended that it include an implementation version number. An implementation can use an empty string as its implementation name, for example for security reasons.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/RemoteException.html\" title\u003d\"class in java.rmi\"\u003eRemoteException\u003c/a\u003e\u003c/code\u003e - if there is a communication exception during the remote method call."
        ],
        "return": [
          "a string with the format described here."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.remote.rmi.RMIConnection",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "credentials"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newClient",
      "comment": "Makes a new connection through this RMI connector. Each remote client calls this method to obtain a new RMI object representing its connection.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecredentials\u003c/code\u003e - this object specifies the user-defined credentials to be passed in to the server in order to authenticate the user before creating the \n\u003ccode\u003eRMIConnection\u003c/code\u003e. Can be null."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the new client object cannot be created or exported, or if there is a communication exception during the remote method call.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if the given credentials do not allow the server to authenticate the caller successfully."
        ],
        "return": [
          "the newly-created connection object."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.management.remote.rmi.RMIServer",
  "comment": "\u003cp\u003eRMI object used to establish connections to an RMI connector. There is one Remote object implementing this interface for each RMI connector.\u003c/p\u003e \n\u003cp\u003eUser code does not usually refer to this interface. It is specified as part of the public API so that different implementations of that API will interoperate.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}