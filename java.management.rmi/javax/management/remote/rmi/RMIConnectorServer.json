{
  "packageName": "javax.management.remote.rmi",
  "simpleName": "RMIConnectorServer",
  "moduleName": "java.management.rmi",
  "type": "CLASS",
  "superClass": {
    "name": "javax.management.remote.JMXConnectorServer",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JNDI_REBIND_ATTRIBUTE",
      "comment": "Name of the attribute that specifies whether the RMIServer stub that represents an RMI connector server should override an existing stub at the same address. The value associated with this attribute, if any, should be a string that is equal, ignoring case, to \"true\" or \"false\". The default value is false.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.remote.rmi.RMIConnectorServer.JNDI_REBIND_ATTRIBUTE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "RMI_CLIENT_SOCKET_FACTORY_ATTRIBUTE",
      "comment": "Name of the attribute that specifies the RMIClientSocketFactory for the RMI objects created in conjunction with this connector. The value associated with this attribute must be of type RMIClientSocketFactory and can only be specified in the Map argument supplied when creating a connector server.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.remote.rmi.RMIConnectorServer.RMI_CLIENT_SOCKET_FACTORY_ATTRIBUTE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "RMI_SERVER_SOCKET_FACTORY_ATTRIBUTE",
      "comment": "Name of the attribute that specifies the RMIServerSocketFactory for the RMI objects created in conjunction with this connector. The value associated with this attribute must be of type RMIServerSocketFactory and can only be specified in the Map argument supplied when creating a connector server.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.remote.rmi.RMIConnectorServer.RMI_SERVER_SOCKET_FACTORY_ATTRIBUTE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "CREDENTIALS_FILTER_PATTERN",
      "comment": "Name of the attribute that specifies an ObjectInputFilter pattern string to filter classes acceptable for RMIServer.newClient() remote method call. The filter pattern must be in same format as used in ObjectInputFilter.Config.createFilter(java.lang.String) This list of classes allowed by filter should correspond to the transitive closure of the credentials class (or classes) used by the installed JMXAuthenticator associated with the RMIServer implementation. If the attribute is not set then any class is deemed acceptable.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/ObjectInputFilter.html\" title\u003d\"interface in java.io\"\u003e\u003ccode\u003eObjectInputFilter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.remote.rmi.RMIConnectorServer.CREDENTIALS_FILTER_PATTERN\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SERIAL_FILTER_PATTERN",
      "comment": "This attribute defines a pattern from which to create a ObjectInputFilter that will be used when deserializing objects sent to the JMXConnectorServer by any client. The filter will be called for any class found in the serialized stream sent to server by client, including all JMX defined classes (such as ObjectName), all method parameters, and, if present in the stream, all classes transitively referred by the serial form of any deserialized object. The pattern must be in same format as used in ObjectInputFilter.Config.createFilter(java.lang.String). It may define a white list of permitted classes, a black list of rejected classes, a maximum depth for the deserialized objects, etc. To be functional, the filter should allow at least all the concrete types in the transitive closure of all objects that might get serialized when serializing all JMX classes referred as parameters in the RMIConnection interface, plus all classes that a client might need to transmit wrapped in marshalled objects in order to interoperate with the MBeans registered in the MBeanServer. That would potentially include all the concrete JMX OpenTypes and the classes they use in their serial form. Care must be taken when defining such a filter, as defining a white list too restrictive or a too wide a black list may prevent legitimate clients from interoperating with the JMXConnectorServer.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.management.remote.rmi.RMIConnectorServer.SERIAL_FILTER_PATTERN\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.remote.JMXConnector",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "env"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toJMXConnector",
      "comment": "Returns a client stub for this connector server. A client stub is a serializable object whose connect method can be used to make one new connection to this connector server.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/remote/JMXConnectorServer.html#toJMXConnector(java.util.Map)\"\u003etoJMXConnector\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/remote/JMXConnectorServer.html\" title\u003d\"class in javax.management.remote\"\u003eJMXConnectorServer\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/remote/JMXConnectorServerMBean.html#toJMXConnector(java.util.Map)\"\u003etoJMXConnector\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/remote/JMXConnectorServerMBean.html\" title\u003d\"interface in javax.management.remote\"\u003eJMXConnectorServerMBean\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eenv\u003c/code\u003e - client connection parameters of the same sort that could be provided to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management/javax/management/remote/JMXConnector.html#connect(java.util.Map)\"\u003e\u003ccode\u003eJMXConnector.connect(Map)\u003c/code\u003e\u003c/a\u003e. Can be null, which is equivalent to an empty map."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if this connector server does not support the generation of client stubs.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the JMXConnectorServer is not started (see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management.rmi/javax/management/remote/rmi/RMIConnectorServer.html#isActive()\"\u003e\u003ccode\u003eisActive()\u003c/code\u003e\u003c/a\u003e).",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if a communications problem means that a stub cannot be created."
        ],
        "return": [
          "a client stub that can be used to make a new connection to this connector server."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "start",
      "comment": "Activates the connector server, that is starts listening for client connections. Calling this method when the connector server is already active has no effect. Calling this method when the connector server has been stopped will generate an IOException. The behavior of this method when called for the first time depends on the parameters that were supplied at construction, as described below. First, an object of a subclass of RMIServerImpl is required, to export the connector server through RMI: If an RMIServerImpl was supplied to the constructor, it is used. Otherwise, if the JMXServiceURL was null, or its protocol part was rmi, an object of type RMIJRMPServerImpl is created. Otherwise, the implementation can create an implementation-specific RMIServerImpl or it can throw MalformedURLException. If the given address includes a JNDI directory URL as specified in the package documentation for javax.management.remote.rmi, then this RMIConnectorServer will bootstrap by binding the RMIServerImpl to the given address. If the URL path part of the JMXServiceURL was empty or a single slash (/), then the RMI object will not be bound to a directory. Instead, a reference to it will be encoded in the URL path of the RMIConnectorServer address (returned by getAddress()). The encodings for rmi are described in the package documentation for javax.management.remote.rmi. The behavior when the URL path is neither empty nor a JNDI directory URL, or when the protocol is not rmi, is implementation defined, and may include throwing MalformedURLException when the connector server is created or when it is started.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the connector server has not been attached to an MBean server.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the connector server cannot be started."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "stop",
      "comment": "Deactivates the connector server, that is, stops listening for client connections. Calling this method will also close all client connections that were made by this server. After this method returns, whether normally or with an exception, the connector server will not create any new client connections. Once a connector server has been stopped, it cannot be started again. Calling this method when the connector server has already been stopped has no effect. Calling this method when the connector server has not yet been started will disable the connector server object permanently. If closing a client connection produces an exception, that exception is not thrown from this method. A JMXConnectionNotification is emitted from this MBean with the connection ID of the connection that could not be closed. Closing a connector server is a potentially slow operation. For example, if a client machine with an open connection has crashed, the close operation might have to wait for a network protocol timeout. Callers that do not want to block in a close operation should do it in a separate thread. This method calls the method close on the connector server\u0027s RMIServerImpl object. If the RMIServerImpl was bound to a JNDI directory by the start method, it is unbound from the directory by this method.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the server cannot be closed cleanly, or if the \n\u003ccode\u003eRMIServerImpl\u003c/code\u003e cannot be unbound from the directory. When this exception is thrown, the server has already attempted to close all client connections, if appropriate; to call \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management.rmi/javax/management/remote/rmi/RMIServerImpl.html#close()\"\u003e\u003ccode\u003eRMIServerImpl.close()\u003c/code\u003e\u003c/a\u003e; and to unbind the \n\u003ccode\u003eRMIServerImpl\u003c/code\u003e from its directory, if appropriate. All client connections are closed except possibly those that generated exceptions when the server attempted to close them."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isActive",
      "comment": "Description copied from interface: JMXConnectorServerMBean",
      "tagMap": {
        "return": [
          "true if the connector server is active."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.management.remote.JMXServiceURL",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAddress",
      "comment": "Description copied from interface: JMXConnectorServerMBean",
      "tagMap": {
        "return": [
          "the address of this connector server, or null if it does not have one."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          },
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttributes",
      "comment": "Description copied from interface: JMXConnectorServerMBean",
      "tagMap": {
        "return": [
          "a read-only map containing the attributes for this connector server. Attributes whose values are not serializable are omitted from this map. If there are no serializable attributes, the returned map is empty."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.remote.JMXServiceURL",
            "type": "Class"
          },
          "field": {
            "name": "url"
          }
        },
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "environment"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Makes an RMIConnectorServer. This is equivalent to calling RMIConnectorServer(directoryURL,environment,null,null)",
      "tagMap": {
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - the URL defining how to create the connector server. Cannot be null.",
          "\u003ccode\u003eenvironment\u003c/code\u003e - attributes governing the creation and storing of the RMI object. Can be null, which is equivalent to an empty Map."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eurl\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/MalformedURLException.html\" title\u003d\"class in java.net\"\u003eMalformedURLException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eurl\u003c/code\u003e does not conform to the syntax for an RMI connector, or if its protocol is not recognized by this implementation. Only \"rmi\" is valid when this constructor is used.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the connector server cannot be created for some reason or if it is inevitable that its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management.rmi/javax/management/remote/rmi/RMIConnectorServer.html#start()\"\u003e\u003ccode\u003estart\u003c/code\u003e\u003c/a\u003e method will fail."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.remote.JMXServiceURL",
            "type": "Class"
          },
          "field": {
            "name": "url"
          }
        },
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "environment"
          }
        },
        {
          "type": {
            "name": "javax.management.MBeanServer",
            "type": "Class"
          },
          "field": {
            "name": "mbeanServer"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Makes an RMIConnectorServer for the given MBean server. This is equivalent to calling RMIConnectorServer(directoryURL,environment,null,mbeanServer)",
      "tagMap": {
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - the URL defining how to create the connector server. Cannot be null.",
          "\u003ccode\u003eenvironment\u003c/code\u003e - attributes governing the creation and storing of the RMI object. Can be null, which is equivalent to an empty Map.",
          "\u003ccode\u003embeanServer\u003c/code\u003e - the MBean server to which the new connector server is attached, or null if it will be attached by being registered as an MBean in the MBean server."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eurl\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/MalformedURLException.html\" title\u003d\"class in java.net\"\u003eMalformedURLException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eurl\u003c/code\u003e does not conform to the syntax for an RMI connector, or if its protocol is not recognized by this implementation. Only \"rmi\" is valid when this constructor is used.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the connector server cannot be created for some reason or if it is inevitable that its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management.rmi/javax/management/remote/rmi/RMIConnectorServer.html#start()\"\u003e\u003ccode\u003estart\u003c/code\u003e\u003c/a\u003e method will fail."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.management.remote.JMXServiceURL",
            "type": "Class"
          },
          "field": {
            "name": "url"
          }
        },
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "environment"
          }
        },
        {
          "type": {
            "name": "javax.management.remote.rmi.RMIServerImpl",
            "type": "Class"
          },
          "field": {
            "name": "rmiServerImpl"
          }
        },
        {
          "type": {
            "name": "javax.management.MBeanServer",
            "type": "Class"
          },
          "field": {
            "name": "mbeanServer"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Makes an RMIConnectorServer for the given MBean server.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management.rmi/javax/management/remote/rmi/RMIConnectorServer.html#start()\"\u003e\u003ccode\u003estart()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - the URL defining how to create the connector server. Cannot be null.",
          "\u003ccode\u003eenvironment\u003c/code\u003e - attributes governing the creation and storing of the RMI object. Can be null, which is equivalent to an empty Map.",
          "\u003ccode\u003ermiServerImpl\u003c/code\u003e - An implementation of the RMIServer interface, consistent with the protocol type specified in \n\u003cvar\u003eurl\u003c/var\u003e. If this parameter is non null, the protocol type specified by \n\u003cvar\u003eurl\u003c/var\u003e is not constrained, and is assumed to be valid. Otherwise, only \"rmi\" will be recognized.",
          "\u003ccode\u003embeanServer\u003c/code\u003e - the MBean server to which the new connector server is attached, or null if it will be attached by being registered as an MBean in the MBean server."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eurl\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/MalformedURLException.html\" title\u003d\"class in java.net\"\u003eMalformedURLException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eurl\u003c/code\u003e does not conform to the syntax for an RMI connector, or if its protocol is not recognized by this implementation. Only \"rmi\" is recognized when \n\u003cvar\u003ermiServerImpl\u003c/var\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the connector server cannot be created for some reason or if it is inevitable that its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.management.rmi/javax/management/remote/rmi/RMIConnectorServer.html#start()\"\u003e\u003ccode\u003estart\u003c/code\u003e\u003c/a\u003e method will fail."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.management.remote.rmi.RMIConnectorServer",
  "comment": "\u003cp\u003eA JMX API connector server that creates RMI-based connections from remote clients. Usually, such connector servers are made using \u003ca href\u003d\"../../../../../java.management/javax/management/remote/JMXConnectorServerFactory.html\" title\u003d\"class in javax.management.remote\"\u003e\u003ccode\u003eJMXConnectorServerFactory\u003c/code\u003e\u003c/a\u003e. However, specialized applications can use this class directly, for example with an \u003ca href\u003d\"RMIServerImpl.html\" title\u003d\"class in javax.management.remote.rmi\"\u003e\u003ccode\u003eRMIServerImpl\u003c/code\u003e\u003c/a\u003e object.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}