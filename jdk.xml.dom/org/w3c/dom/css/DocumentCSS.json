{
  "packageName": "org.w3c.dom.css",
  "simpleName": "DocumentCSS",
  "moduleName": "jdk.xml.dom",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.w3c.dom.stylesheets.DocumentStyle",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "org.w3c.dom.css.CSSStyleDeclaration",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "org.w3c.dom.Element",
            "type": "Class"
          },
          "name": "elt",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "pseudoElt",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getOverrideStyle",
      "comment": "This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelt\u003c/code\u003e - The element whose style is to be modified. This parameter cannot be null.",
          "\u003ccode\u003epseudoElt\u003c/code\u003e - The pseudo-element or \n\u003ccode\u003enull\u003c/code\u003e if none."
        ],
        "return": [
          "The override style declaration."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.w3c.dom.css.DocumentCSS",
  "comment": "This interface represents a document with a CSS view. \n\u003cp\u003e The \u003ccode\u003egetOverrideStyle\u003c/code\u003e method provides a mechanism through which a DOM author could effect immediate change to the style of an element without modifying the explicitly linked style sheets of a document or the inline style of elements in the style sheets. This style sheet comes after the author style sheet in the cascade algorithm and is called override style sheet. The override style sheet takes precedence over author style sheets. An \"!important\" declaration still takes precedence over a normal declaration. Override, author, and user style sheets all may contain \"!important\" declarations. User \"!important\" rules take precedence over both override and author \"!important\" rules, and override \"!important\" rules take precedence over author \"!important\" rules. \u003c/p\u003e\n\u003cp\u003e The expectation is that an instance of the \u003ccode\u003eDocumentCSS\u003c/code\u003e interface can be obtained by using binding-specific casting methods on an instance of the \u003ccode\u003eDocument\u003c/code\u003e interface. \u003c/p\u003e\n\u003cp\u003eSee also the \u003ca href\u003d\"http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113\"\u003eDocument Object Model (DOM) Level 2 Style Specification\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4, DOM Level 2"
    ]
  }
}