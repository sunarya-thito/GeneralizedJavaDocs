{
  "packageName": "org.w3c.dom.html",
  "simpleName": "HTMLInputElement",
  "moduleName": "jdk.xml.dom",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.w3c.dom.html.HTMLElement",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDefaultValue",
      "comment": "When the type attribute of the element has the value \"Text\", \"File\" or \"Password\", this represents the HTML value attribute of the element. The value of this attribute does not change if the contents of the corresponding form control, in an interactive user agent, changes. Changing this attribute, however, resets the contents of the form control. See the value attribute definition in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "defaultValue"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDefaultValue",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDefaultChecked",
      "comment": "When type has the value \"Radio\" or \"Checkbox\", this represents the HTML checked attribute of the element. The value of this attribute does not change if the state of the corresponding form control, in an interactive user agent, changes. Changes to this attribute, however, resets the state of the form control. See the checked attribute definition in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "defaultChecked"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDefaultChecked",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "org.w3c.dom.html.HTMLFormElement",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getForm",
      "comment": "Returns the FORM element containing this control. Returns null if this control is not within the context of a form.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAccept",
      "comment": "A comma-separated list of content types that a server processing this form will handle correctly. See the accept attribute definition in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "accept"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setAccept",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAccessKey",
      "comment": "A single character access key to give access to the form control. See the accesskey attribute definition in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "accessKey"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setAccessKey",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAlign",
      "comment": "Aligns this object (vertically or horizontally) with respect to its surrounding text. See the align attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "align"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setAlign",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAlt",
      "comment": "Alternate text for user agents not rendering the normal content of this element. See the alt attribute definition in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "alt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setAlt",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getChecked",
      "comment": "When the type attribute of the element has the value \"Radio\" or \"Checkbox\", this represents the current state of the form control, in an interactive user agent. Changes to this attribute change the state of the form control, but do not change the value of the HTML value attribute of the element.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "checked"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setChecked",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDisabled",
      "comment": "The control is unavailable in this context. See the disabled attribute definition in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "disabled"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDisabled",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxLength",
      "comment": "Maximum number of characters for text fields, when type has the value \"Text\" or \"Password\". See the maxlength attribute definition in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "maxLength"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setMaxLength",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getName",
      "comment": "Form control or object name when submitted with a form. See the name attribute definition in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setName",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getReadOnly",
      "comment": "This control is read-only. Relevant only when type has the value \"Text\" or \"Password\". See the readonly attribute definition in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "readOnly"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setReadOnly",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSize",
      "comment": "Size information. The precise meaning is specific to each type of field. See the size attribute definition in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setSize",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSrc",
      "comment": "When the type attribute has the value \"Image\", this attribute specifies the location of the image to be used to decorate the graphical submit button. See the src attribute definition in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setSrc",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTabIndex",
      "comment": "Index that represents the element\u0027s position in the tabbing order. See the tabindex attribute definition in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "tabIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setTabIndex",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getType",
      "comment": "The type of control created. See the type attribute definition in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getUseMap",
      "comment": "Use client-side image map. See the usemap attribute definition in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "useMap"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setUseMap",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getValue",
      "comment": "When the type attribute of the element has the value \"Text\", \"File\" or \"Password\", this represents the current contents of the corresponding form control, in an interactive user agent. Changing this attribute changes the contents of the form control, but does not change the value of the HTML value attribute of the element. When the type attribute of the element has the value \"Button\", \"Hidden\", \"Submit\", \"Reset\", \"Image\", \"Checkbox\" or \"Radio\", this represents the HTML value attribute of the element. See the value attribute definition in HTML 4.0.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setValue",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "blur",
      "comment": "Removes keyboard focus from this element.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "focus",
      "comment": "Gives keyboard focus to this element.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "select",
      "comment": "Select the contents of the text area. For INPUT elements whose type attribute has one of the following values: \"Text\", \"File\", or \"Password\".",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "click",
      "comment": "Simulate a mouse-click. For INPUT elements whose type attribute has one of the following values: \"Button\", \"Checkbox\", \"Radio\", \"Reset\", or \"Submit\".",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.w3c.dom.html.HTMLInputElement",
  "comment": "Form control. Note. Depending upon the environment in which the page is being viewed, the value property may be read-only for the file upload input type. For the \"password\" input type, the actual value returned may be masked to prevent unauthorized use. See the INPUT element definition in HTML 4.0. \n\u003cp\u003eSee also the \u003ca href\u003d\"http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510\"\u003eDocument Object Model (DOM) Level 2 Specification\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4, DOM Level 2"
    ]
  }
}