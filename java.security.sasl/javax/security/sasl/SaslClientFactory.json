{
  "packageName": "javax.security.sasl",
  "simpleName": "SaslClientFactory",
  "moduleName": "java.security.sasl",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.security.sasl.SaslClient",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.security.sasl.SaslException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "mechanisms"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "authorizationId"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "protocol"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "serverName"
          }
        },
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "props"
          }
        },
        {
          "type": {
            "name": "javax.security.auth.callback.CallbackHandler",
            "type": "Class"
          },
          "field": {
            "name": "cbh"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "createSaslClient",
      "comment": "Creates a SaslClient using the parameters supplied.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emechanisms\u003c/code\u003e - The non-null list of mechanism names to try. Each is the IANA-registered name of a SASL mechanism. (e.g. \"GSSAPI\", \"CRAM-MD5\").",
          "\u003ccode\u003eauthorizationId\u003c/code\u003e - The possibly null protocol-dependent identification to be used for authorization. If null or empty, the server derives an authorization ID from the client\u0027s authentication credentials. When the SASL authentication completes successfully, the specified entity is granted access.",
          "\u003ccode\u003eprotocol\u003c/code\u003e - The non-null string name of the protocol for which the authentication is being performed (e.g., \"ldap\").",
          "\u003ccode\u003eserverName\u003c/code\u003e - The non-null fully qualified host name of the server to authenticate to.",
          "\u003ccode\u003eprops\u003c/code\u003e - The possibly null set of properties used to select the SASL mechanism and to configure the authentication exchange of the selected mechanism. See the \n\u003ccode\u003eSasl\u003c/code\u003e class for a list of standard properties. Other, possibly mechanism-specific, properties can be included. Properties not relevant to the selected mechanism are ignored, including any map entries with non-String keys.",
          "\u003ccode\u003ecbh\u003c/code\u003e - The possibly null callback handler to used by the SASL mechanisms to get further information from the application/library to complete the authentication. For example, a SASL mechanism might require the authentication ID, password and realm from the caller. The authentication ID is requested by using a \n\u003ccode\u003eNameCallback\u003c/code\u003e. The password is requested by using a \n\u003ccode\u003ePasswordCallback\u003c/code\u003e. The realm is requested by using a \n\u003ccode\u003eRealmChoiceCallback\u003c/code\u003e if there is a list of realms to choose from, and by using a \n\u003ccode\u003eRealmCallback\u003c/code\u003e if the realm must be entered."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.sasl/javax/security/sasl/SaslException.html\" title\u003d\"class in javax.security.sasl\"\u003eSaslException\u003c/a\u003e\u003c/code\u003e - If cannot create a \n\u003ccode\u003eSaslClient\u003c/code\u003e because of an error."
        ],
        "return": [
          "A possibly null \n\u003ccode\u003eSaslClient\u003c/code\u003e created using the parameters supplied. If null, this factory cannot produce a \n\u003ccode\u003eSaslClient\u003c/code\u003e using the parameters supplied."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "props"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMechanismNames",
      "comment": "Returns an array of names of mechanisms that match the specified mechanism selection policies.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprops\u003c/code\u003e - The possibly null set of properties used to specify the security policy of the SASL mechanisms. For example, if \n\u003ccode\u003eprops\u003c/code\u003e contains the \n\u003ccode\u003eSasl.POLICY_NOPLAINTEXT\u003c/code\u003e property with the value \n\u003ccode\u003e\"true\"\u003c/code\u003e, then the factory must not return any SASL mechanisms that are susceptible to simple plain passive attacks. See the \n\u003ccode\u003eSasl\u003c/code\u003e class for a complete list of policy properties. Non-policy related properties, if present in \n\u003ccode\u003eprops\u003c/code\u003e, are ignored, including any map entries with non-String keys."
        ],
        "return": [
          "A non-null array containing a IANA-registered SASL mechanism names."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.security.sasl.SaslClientFactory",
  "comment": "An interface for creating instances of \n\u003ccode\u003eSaslClient\u003c/code\u003e. A class that implements this interface must be thread-safe and handle multiple simultaneous requests. It must also have a public constructor that accepts no argument. \n\u003cp\u003e This interface is not normally accessed directly by a client, which will use the \u003ccode\u003eSasl\u003c/code\u003e static methods instead. However, a particular environment may provide and install a new or different \u003ccode\u003eSaslClientFactory\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.sasl/javax/security/sasl/SaslClient.html\" title\u003d\"interface in javax.security.sasl\"\u003e\u003ccode\u003eSaslClient\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.sasl/javax/security/sasl/Sasl.html\" title\u003d\"class in javax.security.sasl\"\u003e\u003ccode\u003eSasl\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}