{
  "packageName": "javax.security.sasl",
  "simpleName": "Sasl",
  "moduleName": "java.security.sasl",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "QOP",
      "comment": "The name of a property that specifies the quality-of-protection to use. The property contains a comma-separated, ordered list of quality-of-protection values that the client or server is willing to support. A qop value is one of \"auth\" - authentication only \"auth-int\" - authentication plus integrity protection \"auth-conf\" - authentication plus integrity and confidentiality protection The order of the list specifies the preference order of the client or server. If this property is absent, the default qop is \"auth\". The value of this constant is \"javax.security.sasl.qop\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.security.sasl.Sasl.QOP\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "STRENGTH",
      "comment": "The name of a property that specifies the cipher strength to use. The property contains a comma-separated, ordered list of cipher strength values that the client or server is willing to support. A strength value is one of \"low\" \"medium\" \"high\" The order of the list specifies the preference order of the client or server. An implementation should allow configuration of the meaning of these values. An application may use the Java Cryptography Extension (JCE) with JCE-aware mechanisms to control the selection of cipher suites that match the strength values. If this property is absent, the default strength is \"high,medium,low\". The value of this constant is \"javax.security.sasl.strength\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.security.sasl.Sasl.STRENGTH\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SERVER_AUTH",
      "comment": "The name of a property that specifies whether the server must authenticate to the client. The property contains \"true\" if the server must authenticate the to client; \"false\" otherwise. The default is \"false\". The value of this constant is \"javax.security.sasl.server.authentication\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.security.sasl.Sasl.SERVER_AUTH\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "BOUND_SERVER_NAME",
      "comment": "The name of a property that specifies the bound server name for an unbound server. A server is created as an unbound server by setting the serverName argument in createSaslServer(java.lang.String, java.lang.String, java.lang.String, java.util.Map\u003cjava.lang.String, ?\u003e, javax.security.auth.callback.CallbackHandler) as null. The property contains the bound host name after the authentication exchange has completed. It is only available on the server side. The value of this constant is \"javax.security.sasl.bound.server.name\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.security.sasl.Sasl.BOUND_SERVER_NAME\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "MAX_BUFFER",
      "comment": "The name of a property that specifies the maximum size of the receive buffer in bytes of SaslClient/SaslServer. The property contains the string representation of an integer. If this property is absent, the default size is defined by the mechanism. The value of this constant is \"javax.security.sasl.maxbuffer\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.security.sasl.Sasl.MAX_BUFFER\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "RAW_SEND_SIZE",
      "comment": "The name of a property that specifies the maximum size of the raw send buffer in bytes of SaslClient/SaslServer. The property contains the string representation of an integer. The value of this property is negotiated between the client and server during the authentication exchange. The value of this constant is \"javax.security.sasl.rawsendsize\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.security.sasl.Sasl.RAW_SEND_SIZE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "REUSE",
      "comment": "The name of a property that specifies whether to reuse previously authenticated session information. The property contains \"true\" if the mechanism implementation may attempt to reuse previously authenticated session information; it contains \"false\" if the implementation must not reuse previously authenticated session information. A setting of \"true\" serves only as a hint: it does not necessarily entail actual reuse because reuse might not be possible due to a number of reasons, including, but not limited to, lack of mechanism support for reuse, expiration of reusable information, and the peer\u0027s refusal to support reuse. The property\u0027s default value is \"false\". The value of this constant is \"javax.security.sasl.reuse\". Note that all other parameters and properties required to create a SASL client/server instance must be provided regardless of whether this property has been supplied. That is, you cannot supply any less information in anticipation of reuse. Mechanism implementations that support reuse might allow customization of its implementation, for factors such as cache size, timeouts, and criteria for reusability. Such customizations are implementation-dependent.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.security.sasl.Sasl.REUSE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "POLICY_NOPLAINTEXT",
      "comment": "The name of a property that specifies whether mechanisms susceptible to simple plain passive attacks (e.g., \"PLAIN\") are not permitted. The property contains \"true\" if such mechanisms are not permitted; \"false\" if such mechanisms are permitted. The default is \"false\". The value of this constant is \"javax.security.sasl.policy.noplaintext\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.security.sasl.Sasl.POLICY_NOPLAINTEXT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "POLICY_NOACTIVE",
      "comment": "The name of a property that specifies whether mechanisms susceptible to active (non-dictionary) attacks are not permitted. The property contains \"true\" if mechanisms susceptible to active attacks are not permitted; \"false\" if such mechanisms are permitted. The default is \"false\". The value of this constant is \"javax.security.sasl.policy.noactive\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.security.sasl.Sasl.POLICY_NOACTIVE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "POLICY_NODICTIONARY",
      "comment": "The name of a property that specifies whether mechanisms susceptible to passive dictionary attacks are not permitted. The property contains \"true\" if mechanisms susceptible to dictionary attacks are not permitted; \"false\" if such mechanisms are permitted. The default is \"false\". The value of this constant is \"javax.security.sasl.policy.nodictionary\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.security.sasl.Sasl.POLICY_NODICTIONARY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "POLICY_NOANONYMOUS",
      "comment": "The name of a property that specifies whether mechanisms that accept anonymous login are not permitted. The property contains \"true\" if mechanisms that accept anonymous login are not permitted; \"false\" if such mechanisms are permitted. The default is \"false\". The value of this constant is \"javax.security.sasl.policy.noanonymous\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.security.sasl.Sasl.POLICY_NOANONYMOUS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "POLICY_FORWARD_SECRECY",
      "comment": "The name of a property that specifies whether mechanisms that implement forward secrecy between sessions are required. Forward secrecy means that breaking into one session will not automatically provide information for breaking into future sessions. The property contains \"true\" if mechanisms that implement forward secrecy between sessions are required; \"false\" if such mechanisms are not required. The default is \"false\". The value of this constant is \"javax.security.sasl.policy.forward\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.security.sasl.Sasl.POLICY_FORWARD_SECRECY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "POLICY_PASS_CREDENTIALS",
      "comment": "The name of a property that specifies whether mechanisms that pass client credentials are required. The property contains \"true\" if mechanisms that pass client credentials are required; \"false\" if such mechanisms are not required. The default is \"false\". The value of this constant is \"javax.security.sasl.policy.credentials\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.security.sasl.Sasl.POLICY_PASS_CREDENTIALS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "CREDENTIALS",
      "comment": "The name of a property that specifies the credentials to use. The property contains a mechanism-specific Java credential object. Mechanism implementations may examine the value of this property to determine whether it is a class that they support. The property may be used to supply credentials to a mechanism that supports delegated authentication. The value of this constant is \"javax.security.sasl.credentials\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.security.sasl.Sasl.CREDENTIALS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.security.sasl.SaslClient",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.security.sasl.SaslException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "mechanisms"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "authorizationId"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "protocol"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "serverName"
          }
        },
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "props"
          }
        },
        {
          "type": {
            "name": "javax.security.auth.callback.CallbackHandler",
            "type": "Class"
          },
          "field": {
            "name": "cbh"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createSaslClient",
      "comment": "Creates a SaslClient using the parameters supplied. This method uses the JCA Security Provider Framework, described in the \"Java Cryptography Architecture (JCA) Reference Guide\", for locating and selecting a SaslClient implementation. First, it obtains an ordered list of SaslClientFactory instances from the registered security providers for the \"SaslClientFactory\" service and the specified SASL mechanism(s). It then invokes createSaslClient() on each factory instance on the list until one produces a non-null SaslClient instance. It returns the non-null SaslClient instance, or null if the search fails to produce a non-null SaslClient instance. A security provider for SaslClientFactory registers with the JCA Security Provider Framework keys of the form SaslClientFactory.mechanism_name and values that are class names of implementations of javax.security.sasl.SaslClientFactory. For example, a provider that contains a factory class, com.wiz.sasl.digest.ClientFactory, that supports the \"DIGEST-MD5\" mechanism would register the following entry with the JCA: SaslClientFactory.DIGEST-MD5 com.wiz.sasl.digest.ClientFactory See the \"Java Cryptography Architecture API Specification \u0026 Reference\" for information about how to install and configure security service providers.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emechanisms\u003c/code\u003e - The non-null list of mechanism names to try. Each is the IANA-registered name of a SASL mechanism. (e.g. \"GSSAPI\", \"CRAM-MD5\").",
          "\u003ccode\u003eauthorizationId\u003c/code\u003e - The possibly null protocol-dependent identification to be used for authorization. If null or empty, the server derives an authorization ID from the client\u0027s authentication credentials. When the SASL authentication completes successfully, the specified entity is granted access.",
          "\u003ccode\u003eprotocol\u003c/code\u003e - The non-null string name of the protocol for which the authentication is being performed (e.g., \"ldap\").",
          "\u003ccode\u003eserverName\u003c/code\u003e - The non-null fully-qualified host name of the server to authenticate to.",
          "\u003ccode\u003eprops\u003c/code\u003e - The possibly null set of properties used to select the SASL mechanism and to configure the authentication exchange of the selected mechanism. For example, if \n\u003ccode\u003eprops\u003c/code\u003e contains the \n\u003ccode\u003eSasl.POLICY_NOPLAINTEXT\u003c/code\u003e property with the value \n\u003ccode\u003e\"true\"\u003c/code\u003e, then the selected SASL mechanism must not be susceptible to simple plain passive attacks. In addition to the standard properties declared in this class, other, possibly mechanism-specific, properties can be included. Properties not relevant to the selected mechanism are ignored, including any map entries with non-String keys.",
          "\u003ccode\u003ecbh\u003c/code\u003e - The possibly null callback handler to used by the SASL mechanisms to get further information from the application/library to complete the authentication. For example, a SASL mechanism might require the authentication ID, password and realm from the caller. The authentication ID is requested by using a \n\u003ccode\u003eNameCallback\u003c/code\u003e. The password is requested by using a \n\u003ccode\u003ePasswordCallback\u003c/code\u003e. The realm is requested by using a \n\u003ccode\u003eRealmChoiceCallback\u003c/code\u003e if there is a list of realms to choose from, and by using a \n\u003ccode\u003eRealmCallback\u003c/code\u003e if the realm must be entered."
        ],
        "implNote": [
          "The JDK Reference Implementation additionally uses the \n\u003ccode\u003ejdk.security.provider.preferred\u003c/code\u003e \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Security.html#getProperty(java.lang.String)\"\u003e\u003ccode\u003eSecurity\u003c/code\u003e\u003c/a\u003e property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Security.html#getProviders()\"\u003e\u003ccode\u003eSecurity.getProviders()\u003c/code\u003e\u003c/a\u003e. \n\u003cp\u003e If a mechanism is listed in the \u003ccode\u003ejdk.sasl.disabledMechanisms\u003c/code\u003e security property, it will be ignored and won\u0027t be negotiated.\u003c/p\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.sasl/javax/security/sasl/SaslException.html\" title\u003d\"class in javax.security.sasl\"\u003eSaslException\u003c/a\u003e\u003c/code\u003e - If cannot create a \n\u003ccode\u003eSaslClient\u003c/code\u003e because of an error."
        ],
        "return": [
          "A possibly null \n\u003ccode\u003eSaslClient\u003c/code\u003e created using the parameters supplied. If null, cannot find a \n\u003ccode\u003eSaslClientFactory\u003c/code\u003e that will produce one."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.security.sasl.SaslServer",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.security.sasl.SaslException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "mechanism"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "protocol"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "serverName"
          }
        },
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "props"
          }
        },
        {
          "type": {
            "name": "javax.security.auth.callback.CallbackHandler",
            "type": "Class"
          },
          "field": {
            "name": "cbh"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createSaslServer",
      "comment": "Creates a SaslServer for the specified mechanism. This method uses the JCA Security Provider Framework, described in the \"Java Cryptography Architecture (JCA) Reference Guide\", for locating and selecting a SaslClient implementation. First, it obtains an ordered list of SaslServerFactory instances from the registered security providers for the \"SaslServerFactory\" service and the specified mechanism. It then invokes createSaslServer() on each factory instance on the list until one produces a non-null SaslServer instance. It returns the non-null SaslServer instance, or null if the search fails to produce a non-null SaslServer instance. A security provider for SaslServerFactory registers with the JCA Security Provider Framework keys of the form SaslServerFactory.mechanism_name and values that are class names of implementations of javax.security.sasl.SaslServerFactory. For example, a provider that contains a factory class, com.wiz.sasl.digest.ServerFactory, that supports the \"DIGEST-MD5\" mechanism would register the following entry with the JCA: SaslServerFactory.DIGEST-MD5 com.wiz.sasl.digest.ServerFactory See the \"Java Cryptography Architecture API Specification \u0026 Reference\" for information about how to install and configure security service providers.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emechanism\u003c/code\u003e - The non-null mechanism name. It must be an IANA-registered name of a SASL mechanism. (e.g. \"GSSAPI\", \"CRAM-MD5\").",
          "\u003ccode\u003eprotocol\u003c/code\u003e - The non-null string name of the protocol for which the authentication is being performed (e.g., \"ldap\").",
          "\u003ccode\u003eserverName\u003c/code\u003e - The fully qualified host name of the server, or null if the server is not bound to any specific host name. If the mechanism does not allow an unbound server, a \n\u003ccode\u003eSaslException\u003c/code\u003e will be thrown.",
          "\u003ccode\u003eprops\u003c/code\u003e - The possibly null set of properties used to select the SASL mechanism and to configure the authentication exchange of the selected mechanism. For example, if \n\u003ccode\u003eprops\u003c/code\u003e contains the \n\u003ccode\u003eSasl.POLICY_NOPLAINTEXT\u003c/code\u003e property with the value \n\u003ccode\u003e\"true\"\u003c/code\u003e, then the selected SASL mechanism must not be susceptible to simple plain passive attacks. In addition to the standard properties declared in this class, other, possibly mechanism-specific, properties can be included. Properties not relevant to the selected mechanism are ignored, including any map entries with non-String keys.",
          "\u003ccode\u003ecbh\u003c/code\u003e - The possibly null callback handler to used by the SASL mechanisms to get further information from the application/library to complete the authentication. For example, a SASL mechanism might require the authentication ID, password and realm from the caller. The authentication ID is requested by using a \n\u003ccode\u003eNameCallback\u003c/code\u003e. The password is requested by using a \n\u003ccode\u003ePasswordCallback\u003c/code\u003e. The realm is requested by using a \n\u003ccode\u003eRealmChoiceCallback\u003c/code\u003e if there is a list of realms to choose from, and by using a \n\u003ccode\u003eRealmCallback\u003c/code\u003e if the realm must be entered."
        ],
        "implNote": [
          "The JDK Reference Implementation additionally uses the \n\u003ccode\u003ejdk.security.provider.preferred\u003c/code\u003e \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Security.html#getProperty(java.lang.String)\"\u003e\u003ccode\u003eSecurity\u003c/code\u003e\u003c/a\u003e property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Security.html#getProviders()\"\u003e\u003ccode\u003eSecurity.getProviders()\u003c/code\u003e\u003c/a\u003e. \n\u003cp\u003e If \u003ccode\u003emechanism\u003c/code\u003e is listed in the \u003ccode\u003ejdk.sasl.disabledMechanisms\u003c/code\u003e security property, it will be ignored and this method returns \u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.sasl/javax/security/sasl/SaslException.html\" title\u003d\"class in javax.security.sasl\"\u003eSaslException\u003c/a\u003e\u003c/code\u003e - If cannot create a \n\u003ccode\u003eSaslServer\u003c/code\u003e because of an error."
        ],
        "return": [
          "A possibly null \n\u003ccode\u003eSaslServer\u003c/code\u003e created using the parameters supplied. If null, cannot find a \n\u003ccode\u003eSaslServerFactory\u003c/code\u003e that will produce one."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Enumeration",
        "parameters": [
          {
            "name": "javax.security.sasl.SaslClientFactory",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getSaslClientFactories",
      "comment": "Gets an enumeration of known factories for producing SaslClient. This method uses the same algorithm for locating factories as createSaslClient().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.sasl/javax/security/sasl/Sasl.html#createSaslClient(java.lang.String%5B%5D,java.lang.String,java.lang.String,java.lang.String,java.util.Map,javax.security.auth.callback.CallbackHandler)\"\u003e\u003ccode\u003ecreateSaslClient(java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.util.Map\u0026lt;java.lang.String, ?\u0026gt;, javax.security.auth.callback.CallbackHandler)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "A non-null enumeration of known factories for producing \n\u003ccode\u003eSaslClient\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Enumeration",
        "parameters": [
          {
            "name": "javax.security.sasl.SaslServerFactory",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getSaslServerFactories",
      "comment": "Gets an enumeration of known factories for producing SaslServer. This method uses the same algorithm for locating factories as createSaslServer().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.sasl/javax/security/sasl/Sasl.html#createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,javax.security.auth.callback.CallbackHandler)\"\u003e\u003ccode\u003ecreateSaslServer(java.lang.String, java.lang.String, java.lang.String, java.util.Map\u0026lt;java.lang.String, ?\u0026gt;, javax.security.auth.callback.CallbackHandler)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "A non-null enumeration of known factories for producing \n\u003ccode\u003eSaslServer\u003c/code\u003e."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.security.sasl.Sasl",
  "comment": "A static class for creating SASL clients and servers. \n\u003cp\u003e This class defines the policy of how to locate, load, and instantiate SASL clients and servers. \u003c/p\u003e\n\u003cp\u003e For example, an application or library gets a SASL client by doing something like: \u003c/p\u003e\n\u003cblockquote\u003e\n \u003cpre\u003e SaslClient sc \u003d Sasl.createSaslClient(mechanisms,\n     authorizationId, protocol, serverName, props, callbackHandler);\n\u003c/pre\u003e\n\u003c/blockquote\u003e It can then proceed to use the instance to create an authentication connection. \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e Similarly, a server gets a SASL server by using code that looks as follows: \u003c/p\u003e\n\u003cblockquote\u003e\n \u003cpre\u003e SaslServer ss \u003d Sasl.createSaslServer(mechanism,\n     protocol, serverName, props, callbackHandler);\n\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}