{
  "packageName": "javax.smartcardio",
  "simpleName": "CardChannel",
  "moduleName": "java.smartcardio",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.smartcardio.Card",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getCard",
      "comment": "Returns the Card this channel is associated with.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the Card this channel is associated with"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getChannelNumber",
      "comment": "Returns the channel number of this CardChannel. A channel number of 0 indicates the basic logical channel.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if this channel has been \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/CardChannel.html#close()\"\u003eclosed\u003c/a\u003e or if the corresponding Card has been \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/Card.html#disconnect(boolean)\"\u003edisconnected\u003c/a\u003e."
        ],
        "return": [
          "the channel number of this CardChannel."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.smartcardio.ResponseAPDU",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.smartcardio.CardException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.smartcardio.CommandAPDU",
            "type": "Class"
          },
          "name": "command",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "transmit",
      "comment": "Transmits the specified command APDU to the Smart Card and returns the response APDU. The CLA byte of the command APDU is automatically adjusted to match the channel number of this CardChannel. Note that this method cannot be used to transmit MANAGE CHANNEL APDUs. Logical channels should be managed using the Card.openLogicalChannel() and CardChannel.close() methods. Implementations should transparently handle artifacts of the transmission protocol. For example, when using the T\u003d0 protocol, the following processing should occur as described in ISO/IEC 7816-4: if the response APDU has an SW1 of 61, the implementation should issue a GET RESPONSE command using SW2 as the Lefield. This process is repeated as long as an SW1 of 61 is received. The response body of these exchanges is concatenated to form the final response body. if the response APDU is 6C XX, the implementation should reissue the command using XX as the Le field. The ResponseAPDU returned by this method is the result after this processing has been performed.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecommand\u003c/code\u003e - the command APDU"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if this channel has been \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/CardChannel.html#close()\"\u003eclosed\u003c/a\u003e or if the corresponding Card has been \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/Card.html#disconnect(boolean)\"\u003edisconnected\u003c/a\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the APDU encodes a \n\u003ccode\u003eMANAGE CHANNEL\u003c/code\u003e command",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if command is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/CardException.html\" title\u003d\"class in javax.smartcardio\"\u003eCardException\u003c/a\u003e\u003c/code\u003e - if the card operation failed"
        ],
        "return": [
          "the response APDU received from the card"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.smartcardio.CardException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.nio.ByteBuffer",
            "type": "Class"
          },
          "name": "command",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.nio.ByteBuffer",
            "type": "Class"
          },
          "name": "response",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "transmit",
      "comment": "Transmits the command APDU stored in the command ByteBuffer and receives the response APDU in the response ByteBuffer. The command buffer must contain valid command APDU data starting at command.position() and the APDU must be command.remaining() bytes long. Upon return, the command buffer\u0027s position will be equal to its limit; its limit will not have changed. The output buffer will have received the response APDU bytes. Its position will have advanced by the number of bytes received, which is also the return value of this method. The CLA byte of the command APDU is automatically adjusted to match the channel number of this CardChannel. Note that this method cannot be used to transmit MANAGE CHANNEL APDUs. Logical channels should be managed using the Card.openLogicalChannel() and CardChannel.close() methods. See transmit() for a discussion of the handling of response APDUs with the SW1 values 61 or 6C.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecommand\u003c/code\u003e - the buffer containing the command APDU",
          "\u003ccode\u003eresponse\u003c/code\u003e - the buffer that shall receive the response APDU from the card"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if this channel has been \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/CardChannel.html#close()\"\u003eclosed\u003c/a\u003e or if the corresponding Card has been \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/Card.html#disconnect(boolean)\"\u003edisconnected\u003c/a\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if command or response is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/ReadOnlyBufferException.html\" title\u003d\"class in java.nio\"\u003eReadOnlyBufferException\u003c/a\u003e\u003c/code\u003e - if the response buffer is read-only",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if command and response are the same object, if \n\u003ccode\u003eresponse\u003c/code\u003e may not have sufficient space to receive the response APDU or if the APDU encodes a \n\u003ccode\u003eMANAGE CHANNEL\u003c/code\u003e command",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/CardException.html\" title\u003d\"class in javax.smartcardio\"\u003eCardException\u003c/a\u003e\u003c/code\u003e - if the card operation failed"
        ],
        "return": [
          "the length of the received response APDU"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.smartcardio.CardException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "close",
      "comment": "Closes this CardChannel. The logical channel is closed by issuing a MANAGE CHANNEL command that should use the format [xx 70 80 0n] where n is the channel number of this channel and xx is the CLA byte that encodes this logical channel and has all other bits set to 0. After this method returns, calling other methods in this class will raise an IllegalStateException. Note that the basic logical channel cannot be closed using this method. It can be closed by calling Card.disconnect(boolean).",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/CardException.html\" title\u003d\"class in javax.smartcardio\"\u003eCardException\u003c/a\u003e\u003c/code\u003e - if the card operation failed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if this CardChannel represents a connection the basic logical channel"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a new CardChannel object. This constructor is called by subclasses only. Application should call the Card.getBasicChannel() and Card.openLogicalChannel() methods to obtain a CardChannel object.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.smartcardio.CardChannel",
  "comment": "A logical channel connection to a Smart Card. It is used to exchange APDUs with a Smart Card. A CardChannel object can be obtained by calling the method \n\u003ca href\u003d\"Card.html#getBasicChannel()\"\u003eCard.getBasicChannel()\u003c/a\u003e or \n\u003ca href\u003d\"Card.html#openLogicalChannel()\"\u003eCard.openLogicalChannel()\u003c/a\u003e.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/Card.html\" title\u003d\"class in javax.smartcardio\"\u003e\u003ccode\u003eCard\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/CommandAPDU.html\" title\u003d\"class in javax.smartcardio\"\u003e\u003ccode\u003eCommandAPDU\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/ResponseAPDU.html\" title\u003d\"class in javax.smartcardio\"\u003e\u003ccode\u003eResponseAPDU\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}