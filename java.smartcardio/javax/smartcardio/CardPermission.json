{
  "packageName": "javax.smartcardio",
  "simpleName": "CardPermission",
  "moduleName": "java.smartcardio",
  "type": "CLASS",
  "superClass": {
    "name": "java.security.Permission",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getActions",
      "comment": "Returns the canonical string representation of the actions. It is * to signify all actions defined by this class or the string concatenation of the comma-separated, lexicographically sorted list of individual actions.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html#getActions()\"\u003egetActions\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html\" title\u003d\"class in java.security\"\u003ePermission\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the canonical string representation of the actions."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "implies",
      "comment": "Checks if this CardPermission object implies the specified permission. That is the case, if and only if permission is an instance of CardPermission, permission\u0027s actions are a proper subset of this object\u0027s actions, and this object\u0027s getName() method is either * or equal to permission\u0027s name.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html#implies(java.security.Permission)\"\u003eimplies\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html\" title\u003d\"class in java.security\"\u003ePermission\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epermission\u003c/code\u003e - the permission to check against"
        ],
        "return": [
          "true if and only if this CardPermission object implies the specified permission."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares the specified object with this CardPermission for equality. This CardPermission is equal to another Object object, if and only if object is an instance of CardPermission, this.getName() is equal to ((CardPermission)object).getName(), and this.getActions() is equal to ((CardPermission)object).getActions().",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html\" title\u003d\"class in java.security\"\u003ePermission\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to be compared for equality with this CardPermission"
        ],
        "return": [
          "true if and only if the specified object is equal to this CardPermission"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns the hash code value for this CardPermission object.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html\" title\u003d\"class in java.security\"\u003ePermission\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the hash code value for this CardPermission object."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "terminalName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "actions",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new CardPermission with the specified actions. terminalName is the name of a CardTerminal or * if this permission applies to all terminals. actions contains a comma-separated list of the individual actions or * to signify all actions. For more information, see the documentation at the top of this class.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eterminalName\u003c/code\u003e - the name of the card terminal, or \n\u003ccode\u003e*\u003c/code\u003e",
          "\u003ccode\u003eactions\u003c/code\u003e - the action string (or null if the set of permitted actions is empty)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if terminalName is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if actions is an invalid actions specification"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.smartcardio.CardPermission",
  "comment": "A permission for Smart Card operations. A CardPermission consists of the name of the card terminal the permission applies to and a set of actions that are valid for that terminal. \n\u003cp\u003eA CardPermission with a name of \u003ccode\u003e*\u003c/code\u003e applies to all card terminals. The actions string is a comma separated list of the actions listed below, or \u003ccode\u003e*\u003c/code\u003e to signify \"all actions.\" \u003c/p\u003e\n\u003cp\u003eIndividual actions are: \u003c/p\u003e\n\u003cdl\u003e \n \u003cdt\u003e\n  connect \n \u003c/dt\u003e\n \u003cdd\u003e\n  connect to a card using \n  \u003ca href\u003d\"CardTerminal.html#connect(java.lang.String)\"\u003eCardTerminal.connect()\u003c/a\u003e \n \u003c/dd\u003e\n \u003cdt\u003e\n  reset \n \u003c/dt\u003e\n \u003cdd\u003e\n  reset the card using \n  \u003ca href\u003d\"Card.html#disconnect(boolean)\"\u003eCard.disconnect(true)\u003c/a\u003e \n \u003c/dd\u003e\n \u003cdt\u003e\n  exclusive \n \u003c/dt\u003e\n \u003cdd\u003e\n  establish exclusive access to a card using \n  \u003ca href\u003d\"Card.html#beginExclusive()\"\u003eCard.beginExclusive()\u003c/a\u003e and \n  \u003ca href\u003d\"Card.html#endExclusive()\"\u003eendExclusive()\u003c/a\u003e \n \u003c/dd\u003e\n \u003cdt\u003e\n  transmitControl \n \u003c/dt\u003e\n \u003cdd\u003e\n  transmit a control command using \n  \u003ca href\u003d\"Card.html#transmitControlCommand(int,byte%5B%5D)\"\u003eCard.transmitControlCommand()\u003c/a\u003e \n \u003c/dd\u003e\n \u003cdt\u003e\n  getBasicChannel \n \u003c/dt\u003e\n \u003cdd\u003e\n  obtain the basic logical channel using \n  \u003ca href\u003d\"Card.html#getBasicChannel()\"\u003eCard.getBasicChannel()\u003c/a\u003e \n \u003c/dd\u003e\n \u003cdt\u003e\n  openLogicalChannel \n \u003c/dt\u003e\n \u003cdd\u003e\n  open a new logical channel using \n  \u003ca href\u003d\"Card.html#openLogicalChannel()\"\u003eCard.openLogicalChannel()\u003c/a\u003e \n \u003c/dd\u003e\n\u003c/dl\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.smartcardio.CardPermission\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}