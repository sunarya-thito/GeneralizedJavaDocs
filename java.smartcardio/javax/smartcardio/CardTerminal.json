{
  "packageName": "javax.smartcardio",
  "simpleName": "CardTerminal",
  "moduleName": "java.smartcardio",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getName",
      "comment": "Returns the unique name of this terminal.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the unique name of this terminal."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.smartcardio.Card",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.smartcardio.CardException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "protocol",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "connect",
      "comment": "Establishes a connection to the card. If a connection has previously established using the specified protocol, this method returns the same Card object as the previous call.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eprotocol\u003c/code\u003e - the protocol to use (\"T\u003d0\", \"T\u003d1\", or \"T\u003dCL\"), or \"*\" to connect using any available protocol."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if protocol is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if protocol is an invalid protocol specification",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/CardNotPresentException.html\" title\u003d\"class in javax.smartcardio\"\u003eCardNotPresentException\u003c/a\u003e\u003c/code\u003e - if no card is present in this terminal",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/CardException.html\" title\u003d\"class in javax.smartcardio\"\u003eCardException\u003c/a\u003e\u003c/code\u003e - if a connection could not be established using the specified protocol or if a connection has previously been established using a different protocol",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a SecurityManager exists and the caller does not have the required \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/CardPermission.html\" title\u003d\"class in javax.smartcardio\"\u003epermission\u003c/a\u003e"
        ],
        "return": [
          "the card the connection has been established with"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.smartcardio.CardException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "isCardPresent",
      "comment": "Returns whether a card is present in this terminal.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/CardException.html\" title\u003d\"class in javax.smartcardio\"\u003eCardException\u003c/a\u003e\u003c/code\u003e - if the status could not be determined"
        ],
        "return": [
          "whether a card is present in this terminal."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.smartcardio.CardException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "timeout",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "waitForCardPresent",
      "comment": "Waits until a card is present in this terminal or the timeout expires. If the method returns due to an expired timeout, it returns false. Otherwise it return true. If a card is present in this terminal when this method is called, it returns immediately.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etimeout\u003c/code\u003e - if positive, block for up to \n\u003ccode\u003etimeout\u003c/code\u003e milliseconds; if zero, block indefinitely; must not be negative"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if timeout is negative",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/CardException.html\" title\u003d\"class in javax.smartcardio\"\u003eCardException\u003c/a\u003e\u003c/code\u003e - if the operation failed"
        ],
        "return": [
          "false if the method returns due to an expired timeout, true otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.smartcardio.CardException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "timeout",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "waitForCardAbsent",
      "comment": "Waits until a card is absent in this terminal or the timeout expires. If the method returns due to an expired timeout, it returns false. Otherwise it return true. If no card is present in this terminal when this method is called, it returns immediately.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etimeout\u003c/code\u003e - if positive, block for up to \n\u003ccode\u003etimeout\u003c/code\u003e milliseconds; if zero, block indefinitely; must not be negative"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if timeout is negative",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/CardException.html\" title\u003d\"class in javax.smartcardio\"\u003eCardException\u003c/a\u003e\u003c/code\u003e - if the operation failed"
        ],
        "return": [
          "false if the method returns due to an expired timeout, true otherwise."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a new CardTerminal object. This constructor is called by subclasses only. Application should call list() or getTerminal() to obtain a CardTerminal object.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.smartcardio.CardTerminal",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/CardTerminals.html\" title\u003d\"class in javax.smartcardio\"\u003e\u003ccode\u003eCardTerminals\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/TerminalFactory.html\" title\u003d\"class in javax.smartcardio\"\u003e\u003ccode\u003eTerminalFactory\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}