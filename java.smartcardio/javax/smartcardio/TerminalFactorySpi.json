{
  "packageName": "javax.smartcardio",
  "simpleName": "TerminalFactorySpi",
  "moduleName": "java.smartcardio",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.smartcardio.CardTerminals",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1028,
      "name": "engineTerminals",
      "comment": "Returns the CardTerminals created by this factory.",
      "tagMap": {
        "return": [
          "the CardTerminals created by this factory."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a new TerminalFactorySpi object. This class is part of the service provider interface and not accessed directly by applications. Applications should use TerminalFactory objects, which can be obtained by calling one of the TerminalFactory.getInstance() methods. Concrete subclasses should define a constructor that takes an Object as parameter. It will be invoked when an application calls one of the TerminalFactory.getInstance() methods and receives the params object specified by the application.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.smartcardio.TerminalFactorySpi",
  "comment": "The TerminalFactorySpi class defines the service provider interface. Applications do not access this class directly, instead see \n\u003ca href\u003d\"TerminalFactory.html\" title\u003d\"class in javax.smartcardio\"\u003eTerminalFactory\u003c/a\u003e. \n\u003cp\u003eService providers that want to write a new implementation should define a concrete subclass of TerminalFactorySpi with a constructor that takes an \u003ccode\u003eObject\u003c/code\u003e as parameter. That class needs to be registered in a \u003ca href\u003d\"../../../java.base/java/security/Provider.html\" title\u003d\"class in java.security\"\u003eProvider\u003c/a\u003e. The engine \u003ca href\u003d\"../../../java.base/java/security/Provider.Service.html#getType()\"\u003etype\u003c/a\u003e is \u003ccode\u003eTerminalFactory\u003c/code\u003e. Service providers also need to implement subclasses of the abstract classes \u003ca href\u003d\"CardTerminals.html\" title\u003d\"class in javax.smartcardio\"\u003eCardTerminals\u003c/a\u003e, \u003ca href\u003d\"CardTerminal.html\" title\u003d\"class in javax.smartcardio\"\u003eCardTerminal\u003c/a\u003e, \u003ca href\u003d\"Card.html\" title\u003d\"class in javax.smartcardio\"\u003eCard\u003c/a\u003e, and \u003ca href\u003d\"CardChannel.html\" title\u003d\"class in javax.smartcardio\"\u003eCardChannel\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003eFor example: \u003c/p\u003e\n\u003cpre\u003e\u003cem\u003efile MyProvider.java:\u003c/em\u003e\n\n package com.somedomain.card;\n\n import java.security.Provider;\n\n public class MyProvider extends Provider {\n     public MyProvider() {\n         super(\"MyProvider\", 1.0d, \"Smart Card Example\");\n         put(\"TerminalFactory.MyType\", \"com.somedomain.card.MySpi\");\n     }\n }\n\n\u003cem\u003efile MySpi.java\u003c/em\u003e\n\n package com.somedomain.card;\n\n import javax.smartcardio.*;\n\n public class MySpi extends TerminalFactoySpi {\n      public MySpi(Object parameter) {\n          // initialize as appropriate\n      }\n      protected CardTerminals engineTerminals() {\n          // add implementation code here\n      }\n }\n \u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.smartcardio/javax/smartcardio/TerminalFactory.html\" title\u003d\"class in javax.smartcardio\"\u003e\u003ccode\u003eTerminalFactory\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Provider.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eProvider\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}