{
  "packageName": "java.util.logging",
  "simpleName": "Filter",
  "moduleName": "java.logging",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isLoggable",
      "comment": "Check if a given log record should be published.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erecord\u003c/code\u003e - a LogRecord"
        ],
        "return": [
          "true if the log record should be published."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.util.logging.Filter",
  "comment": "A Filter can be used to provide fine grain control over what is logged, beyond the control provided by log levels. \n\u003cp\u003e Each Logger and each Handler can have a filter associated with it. The Logger or Handler will call the isLoggable method to check if a given LogRecord should be published. If isLoggable returns false, the LogRecord will be discarded.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}