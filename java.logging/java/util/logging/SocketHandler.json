{
  "packageName": "java.util.logging",
  "simpleName": "SocketHandler",
  "moduleName": "java.logging",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.logging.StreamHandler",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.SecurityException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "close",
      "comment": "Close this output stream.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.logging/java/util/logging/StreamHandler.html#close()\"\u003eclose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.logging/java/util/logging/StreamHandler.html\" title\u003d\"class in java.util.logging\"\u003eStreamHandler\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and if the caller does not have \n\u003ccode\u003eLoggingPermission(\"control\")\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.logging.LogRecord",
            "type": "Class"
          },
          "field": {
            "name": "record"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "publish",
      "comment": "Format and publish a LogRecord.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.logging/java/util/logging/StreamHandler.html#publish(java.util.logging.LogRecord)\"\u003epublish\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.logging/java/util/logging/StreamHandler.html\" title\u003d\"class in java.util.logging\"\u003eStreamHandler\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003erecord\u003c/code\u003e - description of the log event. A null record is silently ignored and is not published"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create a SocketHandler, using only LogManager properties (or their defaults).",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the host or port are invalid or are not specified as LogManager properties.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if we are unable to connect to the target host and port."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "host"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "port"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a SocketHandler using a specified host and port. The SocketHandler is configured based on LogManager properties (or their default values) except that the given target host and port arguments are used. If the host argument is empty, but not null String then the localhost is used.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ehost\u003c/code\u003e - target host.",
          "\u003ccode\u003eport\u003c/code\u003e - target port."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the host or port are invalid.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if we are unable to connect to the target host and port."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.util.logging.SocketHandler",
  "comment": "Simple network logging \n\u003ccode\u003eHandler\u003c/code\u003e. \n\u003cp\u003e \u003ccode\u003eLogRecords\u003c/code\u003e are published to a network stream connection. By default the \u003ccode\u003eXMLFormatter\u003c/code\u003e class is used for formatting. \u003c/p\u003e\n\u003cp\u003e \u003cb\u003eConfiguration:\u003c/b\u003e By default each \u003ccode\u003eSocketHandler\u003c/code\u003e is initialized using the following \u003ccode\u003eLogManager\u003c/code\u003e configuration properties where \u003ccode\u003e\u0026lt;handler-name\u0026gt;\u003c/code\u003e refers to the fully-qualified class name of the handler. If properties are not defined (or have invalid values) then the specified default values are used. \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e \u0026lt;handler-name\u0026gt;.level specifies the default level for the \u003ccode\u003eHandler\u003c/code\u003e (defaults to \u003ccode\u003eLevel.ALL\u003c/code\u003e). \u003c/li\u003e \n \u003cli\u003e \u0026lt;handler-name\u0026gt;.filter specifies the name of a \u003ccode\u003eFilter\u003c/code\u003e class to use (defaults to no \u003ccode\u003eFilter\u003c/code\u003e). \u003c/li\u003e \n \u003cli\u003e \u0026lt;handler-name\u0026gt;.formatter specifies the name of a \u003ccode\u003eFormatter\u003c/code\u003e class to use (defaults to \u003ccode\u003ejava.util.logging.XMLFormatter\u003c/code\u003e). \u003c/li\u003e \n \u003cli\u003e \u0026lt;handler-name\u0026gt;.encoding the name of the character set encoding to use (defaults to the default platform encoding). \u003c/li\u003e \n \u003cli\u003e \u0026lt;handler-name\u0026gt;.host specifies the target host name to connect to (no default). \u003c/li\u003e \n \u003cli\u003e \u0026lt;handler-name\u0026gt;.port specifies the target TCP port to use (no default). \u003c/li\u003e \n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e For example, the properties for \u003ccode\u003eSocketHandler\u003c/code\u003e would be: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e java.util.logging.SocketHandler.level\u003dINFO \u003c/li\u003e \n \u003cli\u003e java.util.logging.SocketHandler.formatter\u003djava.util.logging.SimpleFormatter \u003c/li\u003e \n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e For a custom handler, e.g. com.foo.MyHandler, the properties would be: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e com.foo.MyHandler.level\u003dINFO \u003c/li\u003e \n \u003cli\u003e com.foo.MyHandler.formatter\u003djava.util.logging.SimpleFormatter \u003c/li\u003e \n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The output IO stream is buffered, but is flushed after each \u003ccode\u003eLogRecord\u003c/code\u003e is written.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}