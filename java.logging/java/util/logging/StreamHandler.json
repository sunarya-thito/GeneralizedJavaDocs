{
  "packageName": "java.util.logging",
  "simpleName": "StreamHandler",
  "moduleName": "java.logging",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.logging.Handler",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.SecurityException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "setOutputStream",
      "comment": "Change the output stream. If there is a current output stream then the Formatter\u0027s tail string is written and the stream is flushed and closed. Then the output stream is replaced with the new output stream.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - New output stream. May not be null."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and if the caller does not have \n\u003ccode\u003eLoggingPermission(\"control\")\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.SecurityException",
          "type": "Class"
        },
        {
          "name": "java.io.UnsupportedEncodingException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "encoding"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setEncoding",
      "comment": "Set (or change) the character encoding used by this Handler. The encoding should be set before any LogRecords are written to the Handler.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.logging/java/util/logging/Handler.html#setEncoding(java.lang.String)\"\u003esetEncoding\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.logging/java/util/logging/Handler.html\" title\u003d\"class in java.util.logging\"\u003eHandler\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eencoding\u003c/code\u003e - The name of a supported character encoding. May be null, to indicate the default platform encoding."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and if the caller does not have \n\u003ccode\u003eLoggingPermission(\"control\")\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/UnsupportedEncodingException.html\" title\u003d\"class in java.io\"\u003eUnsupportedEncodingException\u003c/a\u003e\u003c/code\u003e - if the named encoding is not supported."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.logging.LogRecord",
            "type": "Class"
          },
          "field": {
            "name": "record"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "publish",
      "comment": "Format and publish a LogRecord. The StreamHandler first checks if there is an OutputStream and if the given LogRecord has at least the required log level. If not it silently returns. If so, it calls any associated Filter to check if the record should be published. If so, it calls its Formatter to format the record and then writes the result to the current output stream. If this is the first LogRecord to be written to a given OutputStream, the Formatter\u0027s \"head\" string is written to the stream before the LogRecord is written.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.logging/java/util/logging/Handler.html#publish(java.util.logging.LogRecord)\"\u003epublish\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.logging/java/util/logging/Handler.html\" title\u003d\"class in java.util.logging\"\u003eHandler\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003erecord\u003c/code\u003e - description of the log event. A null record is silently ignored and is not published"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.logging.LogRecord",
            "type": "Class"
          },
          "field": {
            "name": "record"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isLoggable",
      "comment": "Check if this Handler would actually log a given LogRecord. This method checks if the LogRecord has an appropriate level and whether it satisfies any Filter. It will also return false if no output stream has been assigned yet or the LogRecord is null.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.logging/java/util/logging/Handler.html#isLoggable(java.util.logging.LogRecord)\"\u003eisLoggable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.logging/java/util/logging/Handler.html\" title\u003d\"class in java.util.logging\"\u003eHandler\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003erecord\u003c/code\u003e - a \n\u003ccode\u003eLogRecord\u003c/code\u003e (may be null)."
        ],
        "return": [
          "true if the \n\u003ccode\u003eLogRecord\u003c/code\u003e would be logged."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "flush",
      "comment": "Flush any buffered messages.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.logging/java/util/logging/Handler.html#flush()\"\u003eflush\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.logging/java/util/logging/Handler.html\" title\u003d\"class in java.util.logging\"\u003eHandler\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.SecurityException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "close",
      "comment": "Close the current output stream. The Formatter\u0027s \"tail\" string is written to the stream before it is closed. In addition, if the Formatter\u0027s \"head\" string has not yet been written to the stream, it will be written before the \"tail\" string.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.logging/java/util/logging/Handler.html#close()\"\u003eclose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.logging/java/util/logging/Handler.html\" title\u003d\"class in java.util.logging\"\u003eHandler\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and if the caller does not have LoggingPermission(\"control\")."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create a StreamHandler, with no current output stream.",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        },
        {
          "type": {
            "name": "java.util.logging.Formatter",
            "type": "Class"
          },
          "field": {
            "name": "formatter"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create a StreamHandler with a given Formatter and output stream.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - the target output stream",
          "\u003ccode\u003eformatter\u003c/code\u003e - Formatter to be used to format output"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.util.logging.StreamHandler",
  "comment": "Stream based logging \n\u003ccode\u003eHandler\u003c/code\u003e. \n\u003cp\u003e This is primarily intended as a base class or support class to be used in implementing other logging \u003ccode\u003eHandlers\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003e \u003ccode\u003eLogRecords\u003c/code\u003e are published to a given \u003ccode\u003ejava.io.OutputStream\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003e \u003cb\u003eConfiguration:\u003c/b\u003e By default each \u003ccode\u003eStreamHandler\u003c/code\u003e is initialized using the following \u003ccode\u003eLogManager\u003c/code\u003e configuration properties where \u003ccode\u003e\u0026lt;handler-name\u0026gt;\u003c/code\u003e refers to the fully-qualified class name of the handler. If properties are not defined (or have invalid values) then the specified default values are used. \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e \u0026lt;handler-name\u0026gt;.level specifies the default level for the \u003ccode\u003eHandler\u003c/code\u003e (defaults to \u003ccode\u003eLevel.INFO\u003c/code\u003e). \u003c/li\u003e \n \u003cli\u003e \u0026lt;handler-name\u0026gt;.filter specifies the name of a \u003ccode\u003eFilter\u003c/code\u003e class to use (defaults to no \u003ccode\u003eFilter\u003c/code\u003e). \u003c/li\u003e \n \u003cli\u003e \u0026lt;handler-name\u0026gt;.formatter specifies the name of a \u003ccode\u003eFormatter\u003c/code\u003e class to use (defaults to \u003ccode\u003ejava.util.logging.SimpleFormatter\u003c/code\u003e). \u003c/li\u003e \n \u003cli\u003e \u0026lt;handler-name\u0026gt;.encoding the name of the character set encoding to use (defaults to the default platform encoding). \u003c/li\u003e \n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e For example, the properties for \u003ccode\u003eStreamHandler\u003c/code\u003e would be: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e java.util.logging.StreamHandler.level\u003dINFO \u003c/li\u003e \n \u003cli\u003e java.util.logging.StreamHandler.formatter\u003djava.util.logging.SimpleFormatter \u003c/li\u003e \n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e For a custom handler, e.g. com.foo.MyHandler, the properties would be: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e com.foo.MyHandler.level\u003dINFO \u003c/li\u003e \n \u003cli\u003e com.foo.MyHandler.formatter\u003djava.util.logging.SimpleFormatter \u003c/li\u003e \n\u003c/ul\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}