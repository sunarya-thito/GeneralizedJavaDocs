{
  "packageName": "jdk.jfr",
  "simpleName": "EventSettings",
  "moduleName": "jdk.jfr",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "jdk.jfr.EventSettings",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "withStackTrace",
      "comment": "Enables stack traces for the event that is associated with this event setting. Equivalent to invoking the with(\"stackTrace\", \"true\") method.",
      "annotations": [],
      "tagMap": {
        "return": [
          "event settings object for further configuration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jfr.EventSettings",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "withoutStackTrace",
      "comment": "Disables stack traces for the event that is associated with this event setting. Equivalent to invoking the with(\"stackTrace\", \"false\") method.",
      "annotations": [],
      "tagMap": {
        "return": [
          "event settings object for further configuration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jfr.EventSettings",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "withoutThreshold",
      "comment": "Specifies that a threshold is not used. This is a convenience method, equivalent to invoking the with(\"threshold\", \"0 s\") method.",
      "annotations": [],
      "tagMap": {
        "return": [
          "event settings object for further configuration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jfr.EventSettings",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.time.Duration",
            "type": "Class"
          },
          "name": "duration",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "withPeriod",
      "comment": "Sets the interval for the event that is associated with this event setting.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eduration\u003c/code\u003e - the duration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "event settings object for further configuration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jfr.EventSettings",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.time.Duration",
            "type": "Class"
          },
          "name": "duration",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "withThreshold",
      "comment": "Sets the threshold for the event that is associated with this event setting.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eduration\u003c/code\u003e - the duration, or \n\u003ccode\u003enull\u003c/code\u003e if no duration is used"
        ],
        "return": [
          "event settings object for further configuration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jfr.EventSettings",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "with",
      "comment": "Sets a setting value for the event that is associated with this event setting.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the setting (for example, \n\u003ccode\u003e\"threshold\"\u003c/code\u003e)",
          "\u003ccode\u003evalue\u003c/code\u003e - the value to set (for example \n\u003ccode\u003e\"20 ms\"\u003c/code\u003e not \n\u003ccode\u003enull\u003c/code\u003e)"
        ],
        "return": [
          "event settings object for further configuration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "jdk.jfr.EventSettings",
  "comment": "Convenience class for applying event settings to a recording. \n\u003cp\u003e An \u003ccode\u003eEventSettings\u003c/code\u003e object for a recording can be obtained by invoking the \u003ca href\u003d\"Recording.html#enable(java.lang.String)\"\u003e\u003ccode\u003eRecording.enable(String)\u003c/code\u003e\u003c/a\u003e method which is configured using method chaining. \u003c/p\u003e\n\u003cp\u003e The following example shows how to use the \u003ccode\u003eEventSettings\u003c/code\u003e class. \u003c/p\u003e\n\u003cpre\u003e \u003ccode\u003e\n Recording r \u003d new Recording();\n r.enable(\"jdk.CPULoad\")\n    .withPeriod(Duration.ofSeconds(1));\n r.enable(\"jdk.FileWrite\")\n    .withoutStackTrace()\n    .withThreshold(Duration.ofNanos(10));\n r.start();\n Thread.sleep(10_000);\n r.stop();\n r.dump(Files.createTempFile(\"recording\", \".jfr\"));\n\n \u003c/code\u003e\n \u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "since": [
      "9"
    ]
  }
}