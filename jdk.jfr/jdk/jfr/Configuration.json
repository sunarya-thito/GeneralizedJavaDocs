{
  "packageName": "jdk.jfr",
  "simpleName": "Configuration",
  "moduleName": "jdk.jfr",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.Map",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          },
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSettings",
      "comment": "Returns the settings that specifies how a recording is configured. Modifying the returned Map object doesn\u0027t change the configuration.",
      "annotations": [],
      "tagMap": {
        "return": [
          "settings, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getName",
      "comment": "Returns an identifying name (for example, \"default\" or \"profile\").",
      "annotations": [],
      "tagMap": {
        "return": [
          "the name, or \n\u003ccode\u003enull\u003c/code\u003e if it doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLabel",
      "comment": "Returns a human-readable name (for example, \"Continuous\" or \"Profiling\"}.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the label, or \n\u003ccode\u003enull\u003c/code\u003e if it doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDescription",
      "comment": "Returns a short sentence that describes the configuration (for example \"Low overhead configuration safe for continuous use in production environments\")",
      "annotations": [],
      "tagMap": {
        "return": [
          "the description, or \n\u003ccode\u003enull\u003c/code\u003e if it doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getProvider",
      "comment": "Returns who created the configuration (for example \"OpenJDK\").",
      "annotations": [],
      "tagMap": {
        "return": [
          "the provider, or \n\u003ccode\u003enull\u003c/code\u003e if it doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getContents",
      "comment": "Returns a textual representation of the configuration (for example, the contents of a JFC file).",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Configuration.html#getContents()\"\u003e\u003ccode\u003egetContents()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "contents, or \n\u003ccode\u003enull\u003c/code\u003e if it doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jfr.Configuration",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        },
        {
          "name": "java.text.ParseException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.nio.file.Path",
            "type": "Class"
          },
          "name": "path",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "create",
      "comment": "Reads a configuration from a file.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/File.html#getPath()\"\u003e\u003ccode\u003eFile.getPath()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkRead(java.lang.String)\"\u003e\u003ccode\u003eSecurityManager.checkRead(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003epath\u003c/code\u003e - the file that contains the configuration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/ParseException.html\" title\u003d\"class in java.text\"\u003eParseException\u003c/a\u003e\u003c/code\u003e - if the file can\u0027t be parsed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the file can\u0027t be read",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and its \n\u003ccode\u003echeckRead\u003c/code\u003e method denies read access to the file."
        ],
        "return": [
          "the read \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Configuration.html\" title\u003d\"class in jdk.jfr\"\u003e\u003ccode\u003eConfiguration\u003c/code\u003e\u003c/a\u003e, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jfr.Configuration",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        },
        {
          "name": "java.text.ParseException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.Reader",
            "type": "Class"
          },
          "name": "reader",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "create",
      "comment": "Reads a configuration from a character stream.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ereader\u003c/code\u003e - a \n\u003ccode\u003eReader\u003c/code\u003e that provides the configuration contents, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs while trying to read contents from the \n\u003ccode\u003eReader\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/ParseException.html\" title\u003d\"class in java.text\"\u003eParseException\u003c/a\u003e\u003c/code\u003e - if the file can\u0027t be parsed"
        ],
        "return": [
          "a configuration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jfr.Configuration",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        },
        {
          "name": "java.text.ParseException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getConfiguration",
      "comment": "Returns a predefined configuration. See getConfigurations() for available configuration names.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the configuration (for example, \n\u003ccode\u003e\"default\"\u003c/code\u003e or \n\u003ccode\u003e\"profile\"\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if a configuration with the given name does not exist, or if an I/O error occurs while reading the configuration file",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/ParseException.html\" title\u003d\"class in java.text\"\u003eParseException\u003c/a\u003e\u003c/code\u003e - if the configuration file can\u0027t be parsed"
        ],
        "return": [
          "a configuration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "jdk.jfr.Configuration",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getConfigurations",
      "comment": "Returns an immutable list of predefined configurations for this Java Virtual Machine (JVM).",
      "annotations": [],
      "tagMap": {
        "return": [
          "the list of predefined configurations, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "jdk.jfr.Configuration",
  "annotations": [],
  "tagMap": {
    "since": [
      "9"
    ]
  }
}