{
  "packageName": "jdk.jfr.consumer",
  "simpleName": "RecordedFrame",
  "moduleName": "jdk.jfr",
  "type": "CLASS",
  "superClass": {
    "name": "jdk.jfr.consumer.RecordedObject",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isJavaFrame",
      "comment": "Returns true if this is a Java frame, false otherwise. A Java method that has a native modifier is considered a Java frame.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/reflect/Modifier.html#isNative(int)\"\u003e\u003ccode\u003eModifier.isNative(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this is a Java frame, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBytecodeIndex",
      "comment": "Returns the bytecode index for the execution point that is represented by this recorded frame.",
      "tagMap": {
        "return": [
          "byte code index, or \n\u003ccode\u003e-1\u003c/code\u003e if doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLineNumber",
      "comment": "Returns the line number for the execution point that is represented by this recorded frame, or -1 if doesn\u0027t exist",
      "tagMap": {
        "return": [
          "the line number, or \n\u003ccode\u003e-1\u003c/code\u003e if doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getType",
      "comment": "Returns the frame type for the execution point that is represented by this recorded frame (for example, \"Interpreted\", \"JIT compiled\" or \"Inlined\").",
      "tagMap": {
        "return": [
          "the frame type, or \n\u003ccode\u003enull\u003c/code\u003e if doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jfr.consumer.RecordedMethod",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMethod",
      "comment": "Returns the method for the execution point that is represented by this recorded frame.",
      "tagMap": {
        "return": [
          "the method, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "jdk.jfr.consumer.RecordedFrame",
  "comment": "A recorded frame in a stack trace.",
  "tagMap": {
    "since": [
      "9"
    ]
  }
}