{
  "packageName": "jdk.jfr.consumer",
  "simpleName": "RecordingStream",
  "moduleName": "jdk.jfr",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "jdk.jfr.EventSettings",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "enable",
      "comment": "Enables the event with the specified name. If multiple events have the same name (for example, the same class is loaded in different class loaders), then all events that match the name are enabled. To enable a specific class, use the enable(Class) method or a String representation of the event type ID.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/EventType.html\" title\u003d\"class in jdk.jfr\"\u003e\u003ccode\u003eEventType\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the settings for the event, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an event setting for further configuration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "settings"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSettings",
      "comment": "Replaces all settings for this recording stream. The following example records 20 seconds using the \"default\" configuration and then changes settings to the \"profile\" configuration.  Configuration defaultConfiguration \u003d Configuration.getConfiguration(\"default\");\n Configuration profileConfiguration \u003d Configuration.getConfiguration(\"profile\");\n try (var rs \u003d new RecordingStream(defaultConfiguration)) {\n    rs.onEvent(System.out::println);\n    rs.startAsync();\n    Thread.sleep(20_000);\n    rs.setSettings(profileConfiguration.getSettings());\n    Thread.sleep(20_000);\n }",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Recording.html#setSettings(java.util.Map)\"\u003e\u003ccode\u003eRecording.setSettings(Map)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esettings\u003c/code\u003e - the settings to set, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jfr.EventSettings",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "jdk.jfr.Event",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "eventClass"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "enable",
      "comment": "Enables event.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eeventClass\u003c/code\u003e - the event to enable, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eeventClass\u003c/code\u003e is an abstract class or not a subclass of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Event.html\" title\u003d\"class in jdk.jfr\"\u003e\u003ccode\u003eEvent\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an event setting for further configuration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jfr.EventSettings",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "disable",
      "comment": "Disables event with the specified name. If multiple events with same name (for example, the same class is loaded in different class loaders), then all events that match the name are disabled. To disable a specific class, use the disable(Class) method or a String representation of the event type ID.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the settings for the event, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an event setting for further configuration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jfr.EventSettings",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "jdk.jfr.Event",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "eventClass"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "disable",
      "comment": "Disables event.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eeventClass\u003c/code\u003e - the event to enable, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eeventClass\u003c/code\u003e is an abstract class or not a subclass of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Event.html\" title\u003d\"class in jdk.jfr\"\u003e\u003ccode\u003eEvent\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an event setting for further configuration, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.time.Duration",
            "type": "Class"
          },
          "field": {
            "name": "maxAge"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMaxAge",
      "comment": "Determines how far back data is kept for the stream. To control the amount of recording data stored on disk, the maximum length of time to retain the data can be specified. Data stored on disk that is older than the specified length of time is removed by the Java Virtual Machine (JVM). If neither maximum limit or the maximum age is set, the size of the recording may grow indefinitely if events are on",
      "tagMap": {
        "param": [
          "\u003ccode\u003emaxAge\u003c/code\u003e - the length of time that data is kept, or \n\u003ccode\u003enull\u003c/code\u003e if infinite"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003emaxAge\u003c/code\u003e is negative",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the recording is in the \n\u003ccode\u003eCLOSED\u003c/code\u003e state"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "maxSize"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMaxSize",
      "comment": "Determines how much data is kept for the stream. To control the amount of recording data that is stored on disk, the maximum amount of data to retain can be specified. When the maximum limit is exceeded, the Java Virtual Machine (JVM) removes the oldest chunk to make room for a more recent chunk. If neither maximum limit or the maximum age is set, the size of the recording may grow indefinitely. The size is measured in bytes.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emaxSize\u003c/code\u003e - the amount of data to retain, \n\u003ccode\u003e0\u003c/code\u003e if infinite"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003emaxSize\u003c/code\u003e is negative",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the recording is in \n\u003ccode\u003eCLOSED\u003c/code\u003e state"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "reuse"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setReuse",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#setReuse(boolean)\"\u003esetReuse\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ereuse\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if an event object can be reused, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "ordered"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOrdered",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#setOrdered(boolean)\"\u003esetOrdered\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eordered\u003c/code\u003e - if event objects arrive in chronological order to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onEvent(java.util.function.Consumer)\"\u003e\u003ccode\u003eEventStream.onEvent(Consumer)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.time.Instant",
            "type": "Class"
          },
          "field": {
            "name": "startTime"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setStartTime",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#start()\"\u003e\u003ccode\u003eEventStream.start()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#startAsync()\"\u003e\u003ccode\u003eEventStream.startAsync()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#setStartTime(java.time.Instant)\"\u003esetStartTime\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003estartTime\u003c/code\u003e - the start time, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.time.Instant",
            "type": "Class"
          },
          "field": {
            "name": "endTime"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setEndTime",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#start()\"\u003e\u003ccode\u003eEventStream.start()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#startAsync()\"\u003e\u003ccode\u003eEventStream.startAsync()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#setEndTime(java.time.Instant)\"\u003esetEndTime\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eendTime\u003c/code\u003e - the end time, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "eventName"
          }
        },
        {
          "type": {
            "name": "java.util.function.Consumer",
            "parameters": [
              {
                "name": "jdk.jfr.consumer.RecordedEvent",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "onEvent",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onEvent(java.lang.String,java.util.function.Consumer)\"\u003eonEvent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eeventName\u003c/code\u003e - the name of the event, not \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003eaction\u003c/code\u003e - an action to perform on each \n\u003ccode\u003eRecordedEvent\u003c/code\u003e matching the event name, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.function.Consumer",
            "parameters": [
              {
                "name": "jdk.jfr.consumer.RecordedEvent",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "onEvent",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onEvent(java.util.function.Consumer)\"\u003eonEvent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - an action to perform on each \n\u003ccode\u003eRecordedEvent\u003c/code\u003e, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Runnable",
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "onFlush",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onFlush(java.lang.Runnable)\"\u003eonFlush\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - an action to perform after the stream has been flushed, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Runnable",
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "onClose",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#close()\"\u003e\u003ccode\u003eEventStream.close()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onClose(java.lang.Runnable)\"\u003eonClose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - an action to perform after the stream is closed, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.function.Consumer",
            "parameters": [
              {
                "name": "java.lang.Throwable",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "onError",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onError(java.util.function.Consumer)\"\u003eonError\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - an action to perform if an exception occurs, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "close",
      "comment": "Description copied from interface: AutoCloseable",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/AutoCloseable.html#close()\"\u003eclose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/AutoCloseable.html\" title\u003d\"interface in java.lang\"\u003eAutoCloseable\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#close()\"\u003eclose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onEvent(java.util.function.Consumer)\"\u003e\u003ccode\u003eEventStream.onEvent(Consumer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onEvent(java.lang.String,java.util.function.Consumer)\"\u003e\u003ccode\u003eEventStream.onEvent(String, Consumer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onFlush(java.lang.Runnable)\"\u003e\u003ccode\u003eEventStream.onFlush(Runnable)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onClose(java.lang.Runnable)\"\u003e\u003ccode\u003eEventStream.onClose(Runnable)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#onError(java.util.function.Consumer)\"\u003e\u003ccode\u003eEventStream.onError(Consumer)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#remove(java.lang.Object)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to unregister, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the action was unregistered, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "start",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#start()\"\u003estart\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "startAsync",
      "comment": "Starts asynchronous processing of actions. Actions are performed in a single separate thread. To stop the stream, use the close() method. The following example prints the CPU usage for ten seconds. When the current thread leaves the try-with-resources block the stream is stopped/closed.  try (var stream \u003d new RecordingStream()) {\n   stream.enable(\"jdk.CPULoad\").withPeriod(Duration.ofSeconds(1));\n   stream.onEvent(\"jdk.CPULoad\", event -\u003e {\n     System.out.println(event);\n   });\n   stream.startAsync();\n   Thread.sleep(10_000);\n }",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#startAsync()\"\u003estartAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the stream is already started or closed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.time.Duration",
            "type": "Class"
          },
          "field": {
            "name": "timeout"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "awaitTermination",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#start()\"\u003e\u003ccode\u003eEventStream.start()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#startAsync()\"\u003e\u003ccode\u003eEventStream.startAsync()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Thread.html#interrupt()\"\u003e\u003ccode\u003eThread.interrupt()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#awaitTermination(java.time.Duration)\"\u003eawaitTermination\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etimeout\u003c/code\u003e - the maximum time to wait, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - if interrupted while waiting"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "awaitTermination",
      "comment": "Description copied from interface: EventStream",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#start()\"\u003e\u003ccode\u003eEventStream.start()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#startAsync()\"\u003e\u003ccode\u003eEventStream.startAsync()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Thread.html#interrupt()\"\u003e\u003ccode\u003eThread.interrupt()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html#awaitTermination()\"\u003eawaitTermination\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/consumer/EventStream.html\" title\u003d\"interface in jdk.jfr.consumer\"\u003eEventStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - if interrupted while waiting"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an event stream for the current JVM (Java Virtual Machine).",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if Flight Recorder can\u0027t be created (for example, if the Java Virtual Machine (JVM) lacks Flight Recorder support, or if the file repository can\u0027t be created or accessed)",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and the caller does not have \n\u003ccode\u003eFlightRecorderPermission(\"accessFlightRecorder\")\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "jdk.jfr.Configuration",
            "type": "Class"
          },
          "field": {
            "name": "configuration"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a recording stream using settings from a configuration. The following example shows how to create a recording stream that uses a predefined configuration.  var c \u003d Configuration.getConfiguration(\"default\");\n try (var rs \u003d new RecordingStream(c)) {\n   rs.onEvent(System.out::println);\n   rs.start();\n }",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/Configuration.html\" title\u003d\"class in jdk.jfr\"\u003e\u003ccode\u003eConfiguration\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003econfiguration\u003c/code\u003e - configuration that contains the settings to use, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if Flight Recorder can\u0027t be created (for example, if the Java Virtual Machine (JVM) lacks Flight Recorder support, or if the file repository can\u0027t be created or accessed)",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager is used and FlightRecorderPermission \"accessFlightRecorder\" is not set."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "jdk.jfr.consumer.RecordingStream",
  "comment": "A recording stream produces events from the current JVM (Java Virtual Machine). \n\u003cp\u003e The following example shows how to record events using the default configuration and print the Garbage Collection, CPU Load and JVM Information event to standard out. \u003c/p\u003e\n\u003cpre\u003e Configuration c \u003d Configuration.getConfiguration(\"default\");\n try (var rs \u003d new RecordingStream(c)) {\n     rs.onEvent(\"jdk.GarbageCollection\", System.out::println);\n     rs.onEvent(\"jdk.CPULoad\", System.out::println);\n     rs.onEvent(\"jdk.JVMInformation\", System.out::println);\n     rs.start();\n }\n \u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "since": [
      "14"
    ]
  }
}