{
  "packageName": "jdk.jfr.consumer",
  "simpleName": "RecordedThread",
  "moduleName": "jdk.jfr",
  "type": "CLASS",
  "superClass": {
    "name": "jdk.jfr.consumer.RecordedObject",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOSName",
      "comment": "Returns the thread name used by the operating system.",
      "tagMap": {
        "return": [
          "the OS thread name, or \n\u003ccode\u003enull\u003c/code\u003e if doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOSThreadId",
      "comment": "Returns the thread ID used by the operating system.",
      "tagMap": {
        "return": [
          "The Java thread ID, or \n\u003ccode\u003e-1\u003c/code\u003e if doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.jfr.consumer.RecordedThreadGroup",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getThreadGroup",
      "comment": "Returns the Java thread group, if available.",
      "tagMap": {
        "return": [
          "the thread group, or \n\u003ccode\u003enull\u003c/code\u003e if doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getJavaName",
      "comment": "Returns the Java thread name, or null if doesn\u0027t exist. Returns java.lang.Thread.getName() if the thread has a Java representation. null otherwise.",
      "tagMap": {
        "return": [
          "the Java thread name, or \n\u003ccode\u003enull\u003c/code\u003e if doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getJavaThreadId",
      "comment": "Returns the Java thread ID, or -1 if it\u0027s not a Java thread.",
      "tagMap": {
        "return": [
          "the Java thread ID, or \n\u003ccode\u003e-1\u003c/code\u003e if it\u0027s not a Java thread"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getId",
      "comment": "Returns a unique ID for both native threads and Java threads that can\u0027t be reused within the lifespan of the JVM. See getJavaThreadId() for the ID that is returned by java.lang.Thread.getId()",
      "tagMap": {
        "return": [
          "a unique ID for the thread"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "jdk.jfr.consumer.RecordedThread",
  "comment": "A recorded thread.",
  "tagMap": {
    "since": [
      "9"
    ]
  }
}