{
  "packageName": "jdk.jfr",
  "simpleName": "SettingDescriptor",
  "moduleName": "jdk.jfr",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getName",
      "comment": "Returns the name of the setting (for example, \"threshold\").",
      "tagMap": {
        "return": [
          "the name, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLabel",
      "comment": "Returns a human-readable name that describes the setting (for example, \"Threshold\"). If the setting lacks a label, the label for the type that is associated with this setting is returned, or null if doesn\u0027t exist",
      "tagMap": {
        "return": [
          "a human-readable name, or \n\u003ccode\u003enull\u003c/code\u003e if doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDescription",
      "comment": "Returns a sentence that describes the setting (for example \"Record event with duration above or equal to threshold\"). If the setting lacks a description, the description for the type that is associated with this setting is returned, or null if doesn\u0027t exist.",
      "tagMap": {
        "return": [
          "the description, or \n\u003ccode\u003enull\u003c/code\u003e if doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getContentType",
      "comment": "Returns a textual identifier that specifies how a value that is represented by this SettingDescriptor object is interpreted or formatted. For example, if the setting descriptor represents a percentage, then \"jdk.jfr.Percentage\" hints to a client that a value of \"0.5\" is formatted as \"50%\". The JDK provides the following predefined content types: jdk.jfr.Percentage jdk.jfr.Timespan jdk.jfr.Timestamp jdk.jfr.Frequency jdk.jfr.Flag jdk.jfr.MemoryAddress jdk.jfr.DataAmount jdk.jfr.NetworkAddress User-defined content types can be created by using ContentType. If the setting lacks a content type, the content type for the type that is associated with this setting is returned, or null if not available.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/ContentType.html\" title\u003d\"annotation in jdk.jfr\"\u003e\u003ccode\u003eContentType\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the content type, or \n\u003ccode\u003enull\u003c/code\u003e if doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTypeName",
      "comment": "Returns the fully qualified class name of the type that is associated with this setting descriptor.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jfr/jdk/jfr/SettingDescriptor.html#getTypeId()\"\u003e\u003ccode\u003egetTypeId()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the type name, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTypeId",
      "comment": "Returns a unique ID for the type in the Java Virtual Machine (JVM). The ID might not be the same between JVM instances.",
      "tagMap": {
        "return": [
          "the type ID, not negative"
        ]
      }
    },
    {
      "returnType": {
        "name": "A",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "A",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "annotationType"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "A",
          "upperBounds": [
            {
              "name": "java.lang.annotation.Annotation",
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAnnotation",
      "comment": "Returns the first annotation for the specified type if an annotation element with the same name is available, null otherwise.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eA\u003c/code\u003e - the type of the annotation to query for and return if available"
        ],
        "param": [
          "\u003ccode\u003eannotationType\u003c/code\u003e - the Class object that corresponds to the annotation type, not \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "this element\u0027s annotation for the specified annotation type if available, \n\u003ccode\u003enull\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "jdk.jfr.AnnotationElement",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAnnotationElements",
      "comment": "Returns an immutable list of annotation elements for this value descriptor.",
      "tagMap": {
        "return": [
          "a list of annotations, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDefaultValue",
      "comment": "Returns the default value for this setting descriptor.",
      "tagMap": {
        "return": [
          "the default value, not \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "jdk.jfr.SettingDescriptor",
  "comment": "Describes an event setting.",
  "tagMap": {
    "since": [
      "9"
    ]
  }
}