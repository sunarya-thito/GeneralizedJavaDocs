{
  "packageName": "jdk.jfr",
  "simpleName": "Experimental",
  "moduleName": "jdk.jfr",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "jdk.jfr.Experimental",
  "comment": "Annotation that specifies that an element is experimental and may change without notice. \n\u003cp\u003e Clients that visualize Flight Recorder events should \u003cem\u003enot\u003c/em\u003e show the events or fields annotated with the \u003ccode\u003eExperimental\u003c/code\u003e annotation by default. This annotation allows event producers the freedom to try out new events without committing to them. \u003c/p\u003e\n\u003cp\u003e Clients may provide a check box (for example, in a preference page) where a user can opt-in to display experimental data. If the user decide to do so, the user interface should mark experimental events or fields so users can distinguish them from non-experimental events. \u003c/p\u003e\n\u003cp\u003e This annotation is inherited.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "9"
    ]
  }
}