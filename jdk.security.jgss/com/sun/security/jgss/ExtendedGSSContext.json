{
  "packageName": "com.sun.security.jgss",
  "simpleName": "ExtendedGSSContext",
  "moduleName": "jdk.security.jgss",
  "type": "INTERFACE",
  "superClass": {
    "name": "org.ietf.jgss.GSSContext",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "com.sun.security.jgss.InquireType",
            "type": "Class"
          },
          "field": {
            "name": "type"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "inquireSecContext",
      "comment": "Return the mechanism-specific attribute associated with type. If there is a security manager, an InquireSecContextPermission with the name type.mech must be granted. Otherwise, this could result in a SecurityException. Example:       GSSContext ctxt \u003d m.createContext(...)\n      // Establishing the context\n      if (ctxt instanceof ExtendedGSSContext) {\n          ExtendedGSSContext ex \u003d (ExtendedGSSContext)ctxt;\n          try {\n              Key key \u003d (key)ex.inquireSecContext(\n                      InquireType.KRB5_GET_SESSION_KEY);\n              // read key info\n          } catch (GSSException gsse) {\n              // deal with exception\n          }\n      }",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.security.jgss/com/sun/security/jgss/InquireSecContextPermission.html\" title\u003d\"class in com.sun.security.jgss\"\u003e\u003ccode\u003eInquireSecContextPermission\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.security.jgss/com/sun/security/jgss/InquireType.html\" title\u003d\"enum class in com.sun.security.jgss\"\u003e\u003ccode\u003eInquireType\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the type of the attribute requested"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#BAD_MECH\"\u003e\u003ccode\u003eGSSException.BAD_MECH\u003c/code\u003e\u003c/a\u003e if the mechanism does not support this method, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#UNAVAILABLE\"\u003e\u003ccode\u003eGSSException.UNAVAILABLE\u003c/code\u003e\u003c/a\u003e if the type specified is not supported, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#NO_CONTEXT\"\u003e\u003ccode\u003eGSSException.NO_CONTEXT\u003c/code\u003e\u003c/a\u003e if the security context is invalid, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e for other unspecified failures.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and a proper \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.security.jgss/com/sun/security/jgss/InquireSecContextPermission.html\" title\u003d\"class in com.sun.security.jgss\"\u003e\u003ccode\u003eInquireSecContextPermission\u003c/code\u003e\u003c/a\u003e is not granted."
        ],
        "return": [
          "the attribute, see the method documentation for details."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "org.ietf.jgss.GSSException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "state"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "requestDelegPolicy",
      "comment": "Requests that the delegation policy be respected. When a true value is requested, the underlying context would use the delegation policy defined by the environment as a hint to determine whether credentials delegation should be performed. This request can only be made on the context initiator\u0027s side and it has to be done prior to the first call to initSecContext. When this flag is false, delegation will only be tried when the credentials delegation flag is true. When this flag is true but the credentials delegation flag is false, delegation will be only tried if the delegation policy permits delegation. When both this flag and the credentials delegation flag are true, delegation will be always tried. However, if the delegation policy does not permit delegation, the value of getDelegPolicyState() will be false, even if delegation is performed successfully. In any case, if the delegation is not successful, the value returned by GSSContext.getCredDelegState() is false, and the value returned by getDelegPolicyState() is also false. Not all mechanisms support delegation policy. Therefore, the application should check to see if the request was honored with the getDelegPolicyState method. When delegation policy is not supported, requestDelegPolicy should return silently without throwing an exception. Note: for the Kerberos 5 mechanism, the delegation policy is expressed through the OK-AS-DELEGATE flag in the service ticket. When it\u0027s true, the KDC permits delegation to the target server. In a cross-realm environment, in order for delegation be permitted, all cross-realm TGTs on the authentication path must also have the OK-AS-DELAGATE flags set.",
      "tagMap": {
        "param": [
          "\u003ccode\u003estate\u003c/code\u003e - true if the policy should be respected"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html\" title\u003d\"class in org.ietf.jgss\"\u003eGSSException\u003c/a\u003e\u003c/code\u003e - containing the following major error codes: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.security.jgss/org/ietf/jgss/GSSException.html#FAILURE\"\u003e\u003ccode\u003eGSSException.FAILURE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDelegPolicyState",
      "comment": "Returns the delegation policy response. Called after a security context is established. This method can be only called on the initiator\u0027s side. See requestDelegPolicy(boolean).",
      "tagMap": {
        "return": [
          "the delegation policy response"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.security.jgss.ExtendedGSSContext",
  "comment": "The extended GSSContext interface for supporting additional functionalities not defined by \n\u003ccode\u003eorg.ietf.jgss.GSSContext\u003c/code\u003e, such as querying context-specific attributes.",
  "tagMap": {}
}