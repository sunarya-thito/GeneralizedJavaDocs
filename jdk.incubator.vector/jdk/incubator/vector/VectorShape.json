{
  "packageName": "jdk.incubator.vector",
  "simpleName": "VectorShape",
  "moduleName": "jdk.incubator.vector",
  "type": "ENUM",
  "superClass": {
    "name": "java.lang.Enum",
    "parameters": [
      {
        "name": "jdk.incubator.vector.VectorShape",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "jdk.incubator.vector.VectorShape",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "values",
      "comment": "Returns an array containing the constants of this enum class, in the order they are declared.",
      "tagMap": {
        "return": [
          "an array containing the constants of this enum class, in the order they are declared"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.incubator.vector.VectorShape",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "valueOf",
      "comment": "Returns the enum constant of this class with the specified name. The string must match exactly an identifier used to declare an enum constant in this class. (Extraneous whitespace characters are not permitted.)",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the enum constant to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this enum class has no constant with the specified name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the argument is null"
        ],
        "return": [
          "the enum constant with the specified name"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "vectorBitSize",
      "comment": "Returns the size, in bits, of vectors of this shape.",
      "tagMap": {
        "return": [
          "the size, in bits, of vectors of this shape."
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.incubator.vector.VectorSpecies",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "E",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "elementType"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "withLanes",
      "comment": "Finds a vector species with the given element type and the current shape. Returns the same value as VectorSpecies.of(elementType, this).",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - the boxed element type"
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.incubator.vector/jdk/incubator/vector/VectorSpecies.html#of(java.lang.Class,jdk.incubator.vector.VectorShape)\"\u003e\u003ccode\u003eVectorSpecies.of(Class, VectorShape)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementType\u003c/code\u003e - the required element type"
        ],
        "return": [
          "a species for the given element type and this shape"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.incubator.vector.VectorShape",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "bitSize"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "forBitSize",
      "comment": "Finds an appropriate shape depending on the proposed bit-size of a vector.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.incubator.vector/jdk/incubator/vector/VectorShape.html#vectorBitSize()\"\u003e\u003ccode\u003evectorBitSize()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ebitSize\u003c/code\u003e - the proposed vector size in bits"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if no such vector shape exists"
        ],
        "return": [
          "a shape corresponding to the vector bit-size"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.incubator.vector.VectorShape",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "indexBitSize"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "elementSize"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "forIndexBitSize",
      "comment": "Finds an appropriate index shape depending on the proposed index-bit-size and element-size of a vector.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.incubator.vector/jdk/incubator/vector/VectorShape.html#vectorBitSize()\"\u003e\u003ccode\u003evectorBitSize()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindexBitSize\u003c/code\u003e - the proposed index vector size in bits",
          "\u003ccode\u003eelementSize\u003c/code\u003e - the proposed element size in bits"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if no such vector shape exists"
        ],
        "return": [
          "a shape corresponding to the index vector bit-size and element size."
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.incubator.vector.VectorShape",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "preferredShape",
      "comment": "Finds the vector shape preferred by the current platform for all vector element types. The preferred shape by the platform has the largest possible bit-size, under the constraint that all lane sizes are supported, from byte to double. Thus, all the preferred vector species for various lane types will have a common underlying shape.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.incubator.vector/jdk/incubator/vector/VectorSpecies.html#ofPreferred(java.lang.Class)\"\u003e\u003ccode\u003eVectorSpecies.ofPreferred(Class)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if no such shape exists"
        ],
        "return": [
          "a preferred shape for all element types"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "jdk.incubator.vector.VectorShape",
  "comment": "A \n\u003ccode\u003eVectorShape\u003c/code\u003e selects a particular implementation of \n\u003ca href\u003d\"Vector.html\" title\u003d\"class in jdk.incubator.vector\"\u003e\u003ccode\u003eVector\u003c/code\u003e\u003c/a\u003es. A shape in combination with the element type determines a particular \n\u003ca href\u003d\"VectorSpecies.html#of(java.lang.Class,jdk.incubator.vector.VectorShape)\"\u003evector species\u003c/a\u003e object.",
  "tagMap": {
    "apiNote": [
      "Because not all shapes are supported by all platforms, shape-agnostic code is more portable. User code that selects particular shapes may fail to run, or run slowly, on some platforms. Use \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.incubator.vector/jdk/incubator/vector/VectorShape.html#preferredShape()\"\u003e\u003ccode\u003eVectorShape.preferredShape()\u003c/code\u003e\u003c/a\u003e and \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.incubator.vector/jdk/incubator/vector/VectorSpecies.html#ofPreferred(java.lang.Class)\"\u003e\u003ccode\u003eVectorSpecies.ofPreferred()\u003c/code\u003e\u003c/a\u003e to select the shape that is usually preferable for most uses."
    ]
  }
}