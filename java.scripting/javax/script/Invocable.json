{
  "packageName": "javax.script",
  "simpleName": "Invocable",
  "moduleName": "java.scripting",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.script.ScriptException",
          "type": "Class"
        },
        {
          "name": "java.lang.NoSuchMethodException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "thiz",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "args",
          "varargs": true
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "invokeMethod",
      "comment": "Calls a method on a script object compiled during a previous script execution, which is retained in the state of the ScriptEngine.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the procedure to be called.",
          "\u003ccode\u003ethiz\u003c/code\u003e - If the procedure is a member of a class defined in the script and thiz is an instance of that class returned by a previous execution or invocation, the named method is called through that instance.",
          "\u003ccode\u003eargs\u003c/code\u003e - Arguments to pass to the procedure. The rules for converting the arguments to scripting variables are implementation-specific."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptException.html\" title\u003d\"class in javax.script\"\u003eScriptException\u003c/a\u003e\u003c/code\u003e - if an error occurs during invocation of the method.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NoSuchMethodException.html\" title\u003d\"class in java.lang\"\u003eNoSuchMethodException\u003c/a\u003e\u003c/code\u003e - if method with given name or matching argument types cannot be found.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the method name is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified thiz is null or the specified Object is does not represent a scripting object."
        ],
        "return": [
          "The value returned by the procedure. The rules for converting the scripting variable returned by the script method to a Java Object are implementation-specific."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.script.ScriptException",
          "type": "Class"
        },
        {
          "name": "java.lang.NoSuchMethodException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "args",
          "varargs": true
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "invokeFunction",
      "comment": "Used to call top-level procedures and functions defined in scripts.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - of the procedure or function to call",
          "\u003ccode\u003eargs\u003c/code\u003e - Arguments to pass to the procedure or function"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptException.html\" title\u003d\"class in javax.script\"\u003eScriptException\u003c/a\u003e\u003c/code\u003e - if an error occurs during invocation of the method.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NoSuchMethodException.html\" title\u003d\"class in java.lang\"\u003eNoSuchMethodException\u003c/a\u003e\u003c/code\u003e - if method with given name or matching argument types cannot be found.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if method name is null."
        ],
        "return": [
          "The value returned by the procedure or function"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "clasz",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getInterface",
      "comment": "Returns an implementation of an interface using functions compiled in the interpreter. The methods of the interface may be implemented using the invokeFunction method.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the interface to return"
        ],
        "param": [
          "\u003ccode\u003eclasz\u003c/code\u003e - The \n\u003ccode\u003eClass\u003c/code\u003e object of the interface to return."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified \n\u003ccode\u003eClass\u003c/code\u003e object is null or is not an interface."
        ],
        "return": [
          "An instance of requested interface - null if the requested interface is unavailable, i. e. if compiled functions in the \n\u003ccode\u003eScriptEngine\u003c/code\u003e cannot be found matching the ones in the requested interface."
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "thiz",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "clasz",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getInterface",
      "comment": "Returns an implementation of an interface using member functions of a scripting object compiled in the interpreter. The methods of the interface may be implemented using the invokeMethod method.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the interface to return"
        ],
        "param": [
          "\u003ccode\u003ethiz\u003c/code\u003e - The scripting object whose member functions are used to implement the methods of the interface.",
          "\u003ccode\u003eclasz\u003c/code\u003e - The \n\u003ccode\u003eClass\u003c/code\u003e object of the interface to return."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified \n\u003ccode\u003eClass\u003c/code\u003e object is null or is not an interface, or if the specified Object is null or does not represent a scripting object."
        ],
        "return": [
          "An instance of requested interface - null if the requested interface is unavailable, i. e. if compiled methods in the \n\u003ccode\u003eScriptEngine\u003c/code\u003e cannot be found matching the ones in the requested interface."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.script.Invocable",
  "annotations": [],
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}