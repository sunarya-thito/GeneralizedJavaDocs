{
  "packageName": "javax.script",
  "simpleName": "AbstractScriptEngine",
  "moduleName": "java.scripting",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.script.ScriptContext",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "context",
      "comment": "The default ScriptContext of this AbstractScriptEngine.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setContext",
      "comment": "Sets the value of the protected context field to the specified ScriptContext.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html#setContext(javax.script.ScriptContext)\"\u003esetContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html\" title\u003d\"interface in javax.script\"\u003eScriptEngine\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ectxt\u003c/code\u003e - The specified \n\u003ccode\u003eScriptContext\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if ctxt is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.script.ScriptContext",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getContext",
      "comment": "Returns the value of the protected context field.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html#getContext()\"\u003egetContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html\" title\u003d\"interface in javax.script\"\u003eScriptEngine\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "The value of the protected \n\u003ccode\u003econtext\u003c/code\u003e field."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.script.Bindings",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBindings",
      "comment": "Returns the Bindings with the specified scope value in the protected context field.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html#getBindings(int)\"\u003egetBindings\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html\" title\u003d\"interface in javax.script\"\u003eScriptEngine\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003escope\u003c/code\u003e - The specified scope"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the value of scope is invalid for the type the protected \n\u003ccode\u003econtext\u003c/code\u003e field."
        ],
        "return": [
          "The corresponding \n\u003ccode\u003eBindings\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setBindings",
      "comment": "Sets the Bindings with the corresponding scope value in the context field.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html#setBindings(javax.script.Bindings,int)\"\u003esetBindings\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html\" title\u003d\"interface in javax.script\"\u003eScriptEngine\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ebindings\u003c/code\u003e - The specified \n\u003ccode\u003eBindings\u003c/code\u003e.",
          "\u003ccode\u003escope\u003c/code\u003e - The specified scope."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the value of scope is invalid for the type the \n\u003ccode\u003econtext\u003c/code\u003e field.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the bindings is null and the scope is \n\u003ccode\u003eScriptContext.ENGINE_SCOPE\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "put",
      "comment": "Sets the specified value with the specified key in the ENGINE_SCOPE Bindings of the protected context field.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html#put(java.lang.String,java.lang.Object)\"\u003eput\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html\" title\u003d\"interface in javax.script\"\u003eScriptEngine\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - The specified key.",
          "\u003ccode\u003evalue\u003c/code\u003e - The specified value."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if key is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if key is empty."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "get",
      "comment": "Gets the value for the specified key in the ENGINE_SCOPE of the protected context field.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html#get(java.lang.String)\"\u003eget\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html\" title\u003d\"interface in javax.script\"\u003eScriptEngine\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - The key whose value is to be returned"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if key is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if key is empty."
        ],
        "return": [
          "The value for the specified key."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "eval",
      "comment": "eval(Reader, Bindings) calls the abstract eval(Reader, ScriptContext) method, passing it a ScriptContext whose Reader, Writers and Bindings for scopes other that ENGINE_SCOPE are identical to those members of the protected context field. The specified Bindings is used instead of the ENGINE_SCOPE Bindings of the context field.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html#eval(java.io.Reader,javax.script.Bindings)\"\u003eeval\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html\" title\u003d\"interface in javax.script\"\u003eScriptEngine\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ereader\u003c/code\u003e - A \n\u003ccode\u003eReader\u003c/code\u003e containing the source of the script.",
          "\u003ccode\u003ebindings\u003c/code\u003e - A \n\u003ccode\u003eBindings\u003c/code\u003e to use for the \n\u003ccode\u003eENGINE_SCOPE\u003c/code\u003e while the script executes."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptException.html\" title\u003d\"class in javax.script\"\u003eScriptException\u003c/a\u003e\u003c/code\u003e - if an error occurs in script.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any of the parameters is null."
        ],
        "return": [
          "The return value from \n\u003ccode\u003eeval(Reader, ScriptContext)\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "eval",
      "comment": "Same as eval(Reader, Bindings) except that the abstract eval(String, ScriptContext) is used.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html#eval(java.lang.String,javax.script.Bindings)\"\u003eeval\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html\" title\u003d\"interface in javax.script\"\u003eScriptEngine\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003escript\u003c/code\u003e - A \n\u003ccode\u003eString\u003c/code\u003e containing the source of the script.",
          "\u003ccode\u003ebindings\u003c/code\u003e - A \n\u003ccode\u003eBindings\u003c/code\u003e to use as the \n\u003ccode\u003eENGINE_SCOPE\u003c/code\u003e while the script executes."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptException.html\" title\u003d\"class in javax.script\"\u003eScriptException\u003c/a\u003e\u003c/code\u003e - if an error occurs in script.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any of the parameters is null."
        ],
        "return": [
          "The return value from \n\u003ccode\u003eeval(String, ScriptContext)\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "eval",
      "comment": "eval(Reader) calls the abstract eval(Reader, ScriptContext) passing the value of the context field.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html#eval(java.io.Reader)\"\u003eeval\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html\" title\u003d\"interface in javax.script\"\u003eScriptEngine\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ereader\u003c/code\u003e - A \n\u003ccode\u003eReader\u003c/code\u003e containing the source of the script."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptException.html\" title\u003d\"class in javax.script\"\u003eScriptException\u003c/a\u003e\u003c/code\u003e - if an error occurs in script.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any of the parameters is null."
        ],
        "return": [
          "The return value from \n\u003ccode\u003eeval(Reader, ScriptContext)\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "eval",
      "comment": "Same as eval(Reader) except that the abstract eval(String, ScriptContext) is used.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html#eval(java.lang.String)\"\u003eeval\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptEngine.html\" title\u003d\"interface in javax.script\"\u003eScriptEngine\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003escript\u003c/code\u003e - A \n\u003ccode\u003eString\u003c/code\u003e containing the source of the script."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.scripting/javax/script/ScriptException.html\" title\u003d\"class in javax.script\"\u003eScriptException\u003c/a\u003e\u003c/code\u003e - if an error occurs in script.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any of the parameters is null."
        ],
        "return": [
          "The return value from \n\u003ccode\u003eeval(String, ScriptContext)\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.script.ScriptContext",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getScriptContext",
      "comment": "Returns a SimpleScriptContext. The SimpleScriptContext: Uses the specified Bindings for its ENGINE_SCOPE Uses the Bindings returned by the abstract getGlobalScope method as its GLOBAL_SCOPE Uses the Reader and Writer in the default ScriptContext of this ScriptEngine A SimpleScriptContext returned by this method is used to implement eval methods using the abstract eval(Reader,Bindings) and eval(String,Bindings) versions.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enn\u003c/code\u003e - Bindings to use for the \n\u003ccode\u003eENGINE_SCOPE\u003c/code\u003e"
        ],
        "return": [
          "The \n\u003ccode\u003eSimpleScriptContext\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new instance of AbstractScriptEngine using a SimpleScriptContext as its default ScriptContext.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.script.Bindings",
            "type": "Class"
          },
          "name": "n",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new instance using the specified Bindings as the ENGINE_SCOPE Bindings in the protected context field.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003en\u003c/code\u003e - The specified \n\u003ccode\u003eBindings\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if n is null."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.script.AbstractScriptEngine",
  "comment": "Provides a standard implementation for several of the variants of the \n\u003ccode\u003eeval\u003c/code\u003e method. \n\u003cbr\u003e\n\u003cbr\u003e \n\u003ccode\u003e\u003cb\u003eeval(Reader)\u003c/b\u003e\u003c/code\u003e\n\u003cp\u003e\u003ccode\u003e\u003cb\u003eeval(String)\u003c/b\u003e\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e \u003ccode\u003e\u003cb\u003eeval(String, Bindings)\u003c/b\u003e\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e\u003cb\u003eeval(Reader, Bindings)\u003c/b\u003e\u003c/code\u003e \u003cbr\u003e\u003cbr\u003e are implemented using the abstract methods \u003cbr\u003e\u003cbr\u003e \u003ccode\u003e\u003cb\u003eeval(Reader,ScriptContext)\u003c/b\u003e\u003c/code\u003e or \u003ccode\u003e\u003cb\u003eeval(String, ScriptContext)\u003c/b\u003e\u003c/code\u003e \u003cbr\u003e\u003cbr\u003e with a \u003ccode\u003eSimpleScriptContext\u003c/code\u003e. \u003cbr\u003e\u003cbr\u003e A \u003ccode\u003eSimpleScriptContext\u003c/code\u003e is used as the default \u003ccode\u003eScriptContext\u003c/code\u003e of the \u003ccode\u003eAbstractScriptEngine\u003c/code\u003e..\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}