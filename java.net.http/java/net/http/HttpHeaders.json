{
  "packageName": "java.net.http",
  "simpleName": "HttpHeaders",
  "moduleName": "java.net.http",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.Optional",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "firstValue",
      "comment": "Returns an Optional containing the first header string value of the given named (and possibly multi-valued) header. If the header is not present, then the returned Optional is empty.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the header name"
        ],
        "return": [
          "an \n\u003ccode\u003eOptional\u0026lt;String\u0026gt;\u003c/code\u003e containing the first named header string value, if present"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.OptionalLong",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "firstValueAsLong",
      "comment": "Returns an OptionalLong containing the first header string value of the named header field. If the header is not present, then the Optional is empty. If the header is present but contains a value that does not parse as a Long value, then an exception is thrown.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the header name"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NumberFormatException.html\" title\u003d\"class in java.lang\"\u003eNumberFormatException\u003c/a\u003e\u003c/code\u003e - if a value is found, but does not parse as a Long"
        ],
        "return": [
          "an \n\u003ccode\u003eOptionalLong\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "allValues",
      "comment": "Returns an unmodifiable List of all of the header string values of the given named header. Always returns a List, which may be empty if the header is not present.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the header name"
        ],
        "return": [
          "a List of headers string values"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          },
          {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "map",
      "comment": "Returns an unmodifiable multi Map view of this HttpHeaders.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the Map"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "equals",
      "comment": "Tests this HTTP headers instance for equality with the given object. If the given object is not an HttpHeaders then this method returns false. Two HTTP headers are equal if each of their corresponding maps are equal. This method satisfies the general contract of the Object.equals method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to which this object is to be compared"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if, and only if, the given object is an \n\u003ccode\u003e HttpHeaders\u003c/code\u003e that is equal to this HTTP headers"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "hashCode",
      "comment": "Computes a hash code for this HTTP headers instance. The hash code is based upon the components of the HTTP headers map, and satisfies the general contract of the Object.hashCode method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the hash-code value for this HTTP headers"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns this HTTP headers as a string.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string describing the HTTP headers"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpHeaders",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Returns an HTTP headers from the given map. The given map\u0027s key represents the header name, and its value the list of string header values for that header name. An HTTP header name may appear more than once in the HTTP protocol. Such, multi-valued, headers must be represented by a single entry in the given map, whose entry value is a list that represents the multiple header string values. Leading and trailing whitespaces are removed from all string values retrieved from the given map and its lists before processing. Only headers that, after filtering, contain at least one, possibly empty string, value will be added to the HTTP headers.",
      "annotations": [],
      "tagMap": {
        "apiNote": [
          "The primary purpose of this method is for testing frameworks. Per-request headers can be set through one of the \n\u003ccode\u003eHttpRequest\u003c/code\u003e \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.net.http/java/net/http/HttpRequest.Builder.html#header(java.lang.String,java.lang.String)\"\u003e\u003ccode\u003eheaders\u003c/code\u003e\u003c/a\u003e methods."
        ],
        "param": [
          "\u003ccode\u003eheaderMap\u003c/code\u003e - the map containing the header names and values",
          "\u003ccode\u003efilter\u003c/code\u003e - a filter that can be used to inspect each header-name-and-value pair in the given map to determine if it should, or should not, be added to the to the HTTP headers"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any of: \n\u003ccode\u003eheaderMap\u003c/code\u003e, a key or value in the given map, or an entry in the map\u0027s value list, or \n\u003ccode\u003efilter\u003c/code\u003e, is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the given \n\u003ccode\u003eheaderMap\u003c/code\u003e contains any two keys that are equal ( without regard to case ); or if the given map contains any key whose length, after trimming whitespaces, is \n\u003ccode\u003e0\u003c/code\u003e"
        ],
        "return": [
          "an HTTP headers instance containing the given headers"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "java.net.http.HttpHeaders",
  "comment": "A read-only view of a set of HTTP headers. \n\u003cp\u003e An \u003ccode\u003eHttpHeaders\u003c/code\u003e is not typically created directly, but rather returned from an \u003ca href\u003d\"HttpRequest.html#headers()\"\u003e\u003ccode\u003eHttpRequest\u003c/code\u003e\u003c/a\u003e or an \u003ca href\u003d\"HttpResponse.html#headers()\"\u003e\u003ccode\u003eHttpResponse\u003c/code\u003e\u003c/a\u003e. Specific HTTP headers can be set for a \u003ca href\u003d\"HttpRequest.html\" title\u003d\"class in java.net.http\"\u003erequest\u003c/a\u003e through one of the request builder\u0027s \u003ca href\u003d\"HttpRequest.Builder.html#header(java.lang.String,java.lang.String)\"\u003e\u003ccode\u003eheaders\u003c/code\u003e\u003c/a\u003e methods. \u003c/p\u003e\n\u003cp\u003e The methods of this class ( that accept a String header name ), and the \u003ccode\u003eMap\u003c/code\u003e returned by the \u003ca href\u003d\"#map()\"\u003e\u003ccode\u003emap\u003c/code\u003e\u003c/a\u003e method, operate without regard to case when retrieving the header value(s). \u003c/p\u003e\n\u003cp\u003e An HTTP header name may appear more than once in the HTTP protocol. As such, headers are represented as a name and a list of values. Each occurrence of a header value is added verbatim, to the appropriate header name list, without interpreting its value. In particular, \u003ccode\u003eHttpHeaders\u003c/code\u003e does not perform any splitting or joining of comma separated header value strings. The order of elements in a header value list is preserved when \u003ca href\u003d\"HttpRequest.Builder.html#header(java.lang.String,java.lang.String)\"\u003e\u003ccode\u003ebuilding\u003c/code\u003e\u003c/a\u003e a request. For responses, the order of elements in a header value list is the order in which they were received. The \u003ccode\u003eMap\u003c/code\u003e returned by the \u003ccode\u003emap\u003c/code\u003e method, however, does not provide any guarantee with regard to the ordering of its entries. \u003c/p\u003e\n\u003cp\u003e \u003ccode\u003eHttpHeaders\u003c/code\u003e instances are immutable.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "11"
    ]
  }
}