{
  "packageName": "java.net.http",
  "simpleName": "HttpRequest",
  "moduleName": "java.net.http",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.net.http.HttpRequest$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.URI",
            "type": "Class"
          },
          "name": "uri",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newBuilder",
      "comment": "Creates an HttpRequest builder with the given URI.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003euri\u003c/code\u003e - the request URI"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the URI scheme is not supported."
        ],
        "return": [
          "a new request builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpRequest$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.http.HttpRequest",
            "type": "Class"
          },
          "name": "request",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.function.BiPredicate",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "filter",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newBuilder",
      "comment": "Creates a Builder whose initial state is copied from an existing HttpRequest. This builder can be used to build an HttpRequest, equivalent to the original, while allowing amendment of the request state prior to construction - for example, adding additional headers. The filter is applied to each header name value pair as they are copied from the given request. When completed, only headers that satisfy the condition as laid out by the filter will be present in the Builder returned from this method.",
      "annotations": [],
      "tagMap": {
        "apiNote": [
          "The following scenarios demonstrate typical use-cases of the filter. Given an \n\u003ccode\u003eHttpRequest\u003c/code\u003e \n\u003cem\u003erequest\u003c/em\u003e: \n\u003cbr\u003e\n\u003cbr\u003e \n\u003cul\u003e \n \u003cli\u003e Retain all headers: \u003cpre\u003e\u003ccode\u003eHttpRequest.newBuilder(request, (n, v) -\u0026gt; true)\u003c/code\u003e\u003c/pre\u003e \u003c/li\u003e\n \u003cli\u003e Remove all headers: \u003cpre\u003e\u003ccode\u003eHttpRequest.newBuilder(request, (n, v) -\u0026gt; false)\u003c/code\u003e\u003c/pre\u003e \u003c/li\u003e\n \u003cli\u003e Remove a particular header (e.g. Foo-Bar): \u003cpre\u003e\u003ccode\u003eHttpRequest.newBuilder(request, (name, value) -\u0026gt; !name.equalsIgnoreCase(\"Foo-Bar\"))\u003c/code\u003e\u003c/pre\u003e \u003c/li\u003e\n\u003c/ul\u003e"
        ],
        "param": [
          "\u003ccode\u003erequest\u003c/code\u003e - the original request",
          "\u003ccode\u003efilter\u003c/code\u003e - a header filter"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if a new builder cannot be seeded from the given request (for instance, if the request contains illegal parameters)"
        ],
        "return": [
          "a new request builder"
        ],
        "since": [
          "16"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpRequest$Builder",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newBuilder",
      "comment": "Creates an HttpRequest builder.",
      "annotations": [],
      "tagMap": {
        "return": [
          "a new request builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Optional",
        "parameters": [
          {
            "name": "java.net.http.HttpRequest$BodyPublisher",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "bodyPublisher",
      "comment": "Returns an Optional containing the HttpRequest.BodyPublisher set on this request. If no BodyPublisher was set in the requests\u0027s builder, then the Optional is empty.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an \n\u003ccode\u003eOptional\u003c/code\u003e containing this request\u0027s \n\u003ccode\u003eBodyPublisher\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "method",
      "comment": "Returns the request method for this request. If not set explicitly, the default method for any request is \"GET\".",
      "annotations": [],
      "tagMap": {
        "return": [
          "this request\u0027s method"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Optional",
        "parameters": [
          {
            "name": "java.time.Duration",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "timeout",
      "comment": "Returns an Optional containing this request\u0027s timeout duration. If the timeout duration was not set in the request\u0027s builder, then the Optional is empty.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an \n\u003ccode\u003eOptional\u003c/code\u003e containing this request\u0027s timeout duration"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "expectContinue",
      "comment": "Returns this request\u0027s expect continue setting.",
      "annotations": [],
      "tagMap": {
        "return": [
          "this request\u0027s expect continue setting"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.URI",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "uri",
      "comment": "Returns this request\u0027s URI.",
      "annotations": [],
      "tagMap": {
        "return": [
          "this request\u0027s URI"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Optional",
        "parameters": [
          {
            "name": "java.net.http.HttpClient$Version",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "version",
      "comment": "Returns an Optional containing the HTTP protocol version that will be requested for this HttpRequest. If the version was not set in the request\u0027s builder, then the Optional is empty. In that case, the version requested will be that of the sending HttpClient. The corresponding HttpResponse should be queried to determine the version that was actually used.",
      "annotations": [],
      "tagMap": {
        "return": [
          "HTTP protocol version"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpHeaders",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "headers",
      "comment": "The (user-accessible) request headers that this request was (or will be) sent with.",
      "annotations": [],
      "tagMap": {
        "return": [
          "this request\u0027s HttpHeaders"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "obj",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "equals",
      "comment": "Tests this HTTP request instance for equality with the given object. If the given object is not an HttpRequest then this method returns false. Two HTTP requests are equal if their URI, method, and headers fields are all equal. This method satisfies the general contract of the Object.equals method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to which this object is to be compared"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if, and only if, the given object is an \n\u003ccode\u003e HttpRequest\u003c/code\u003e that is equal to this HTTP request"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "hashCode",
      "comment": "Computes a hash code for this HTTP request instance. The hash code is based upon the HTTP request\u0027s URI, method, and header components, and satisfies the general contract of the Object.hashCode method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the hash-code value for this HTTP request"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Creates an HttpRequest.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "innerClasses": [
    "java.net.http.HttpRequest$BodyPublishers",
    "java.net.http.HttpRequest$BodyPublisher",
    "java.net.http.HttpRequest$Builder"
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.net.http.HttpRequest",
  "comment": "An HTTP request. \n\u003cp\u003e An \u003ccode\u003eHttpRequest\u003c/code\u003e instance is built through an \u003ccode\u003eHttpRequest\u003c/code\u003e \u003ca href\u003d\"HttpRequest.Builder.html\" title\u003d\"interface in java.net.http\"\u003ebuilder\u003c/a\u003e. An \u003ccode\u003eHttpRequest\u003c/code\u003e builder is obtained from one of the \u003ca href\u003d\"#newBuilder(java.net.URI)\"\u003e\u003ccode\u003enewBuilder\u003c/code\u003e\u003c/a\u003e methods. A request\u0027s \u003ca href\u003d\"../../../../java.base/java/net/URI.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003eURI\u003c/code\u003e\u003c/a\u003e, headers, and body can be set. Request bodies are provided through a \u003ca href\u003d\"HttpRequest.BodyPublisher.html\" title\u003d\"interface in java.net.http\"\u003e\u003ccode\u003eBodyPublisher\u003c/code\u003e\u003c/a\u003e supplied to one of the \u003ca href\u003d\"HttpRequest.Builder.html#POST(java.net.http.HttpRequest.BodyPublisher)\"\u003e\u003ccode\u003ePOST\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"HttpRequest.Builder.html#PUT(java.net.http.HttpRequest.BodyPublisher)\"\u003e\u003ccode\u003ePUT\u003c/code\u003e\u003c/a\u003e or \u003ca href\u003d\"HttpRequest.Builder.html#method(java.lang.String,java.net.http.HttpRequest.BodyPublisher)\"\u003e\u003ccode\u003emethod\u003c/code\u003e\u003c/a\u003e methods. Once all required parameters have been set in the builder, \u003ca href\u003d\"HttpRequest.Builder.html#build()\"\u003e\u003ccode\u003ebuild\u003c/code\u003e\u003c/a\u003e will return the \u003ccode\u003eHttpRequest\u003c/code\u003e. Builders can be copied and modified many times in order to build multiple related requests that differ in some parameters. \u003c/p\u003e\n\u003cp\u003e The following is an example of a GET request that prints the response body as a String: \u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e   HttpClient client \u003d HttpClient.newHttpClient();\n   HttpRequest request \u003d HttpRequest.newBuilder()\n         .uri(URI.create(\"http://foo.com/\"))\n         .build();\n   client.sendAsync(request, BodyHandlers.ofString())\n         .thenApply(HttpResponse::body)\n         .thenAccept(System.out::println)\n         .join(); \u003c/code\u003e\u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eThe class \u003ca href\u003d\"HttpRequest.BodyPublishers.html\" title\u003d\"class in java.net.http\"\u003e\u003ccode\u003eBodyPublishers\u003c/code\u003e\u003c/a\u003e provides implementations of many common publishers. Alternatively, a custom \u003ccode\u003eBodyPublisher\u003c/code\u003e implementation can be used.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "11"
    ]
  }
}