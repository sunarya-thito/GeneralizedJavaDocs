{
  "packageName": "java.net.http",
  "simpleName": "BodyPublishers",
  "moduleName": "java.net.http",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.net.http.HttpRequest$BodyPublisher",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.concurrent.Flow$Publisher",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "java.nio.ByteBuffer",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "publisher",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "fromPublisher",
      "comment": "Returns a request body publisher whose body is retrieved from the given Flow.Publisher. The returned request body publisher has an unknown content length.",
      "annotations": [],
      "tagMap": {
        "apiNote": [
          "This method can be used as an adapter between \n\u003ccode\u003e BodyPublisher\u003c/code\u003e and \n\u003ccode\u003eFlow.Publisher\u003c/code\u003e, where the amount of request body that the publisher will publish is unknown."
        ],
        "param": [
          "\u003ccode\u003epublisher\u003c/code\u003e - the publisher responsible for publishing the body"
        ],
        "return": [
          "a BodyPublisher"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpRequest$BodyPublisher",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.concurrent.Flow$Publisher",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "java.nio.ByteBuffer",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "publisher",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "contentLength",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "fromPublisher",
      "comment": "Returns a request body publisher whose body is retrieved from the given Flow.Publisher. The returned request body publisher has the given content length. The given contentLength is a positive number, that represents the exact amount of bytes the publisher must publish.",
      "annotations": [],
      "tagMap": {
        "apiNote": [
          "This method can be used as an adapter between \n\u003ccode\u003e BodyPublisher\u003c/code\u003e and \n\u003ccode\u003eFlow.Publisher\u003c/code\u003e, where the amount of request body that the publisher will publish is known."
        ],
        "param": [
          "\u003ccode\u003epublisher\u003c/code\u003e - the publisher responsible for publishing the body",
          "\u003ccode\u003econtentLength\u003c/code\u003e - a positive number representing the exact amount of bytes the publisher will publish"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the content length is non-positive"
        ],
        "return": [
          "a BodyPublisher"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpRequest$BodyPublisher",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "body",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "ofString",
      "comment": "Returns a request body publisher whose body is the given String, converted using the UTF_8 character set.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ebody\u003c/code\u003e - the String containing the body"
        ],
        "return": [
          "a BodyPublisher"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpRequest$BodyPublisher",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "s",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.nio.charset.Charset",
            "type": "Class"
          },
          "name": "charset",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "ofString",
      "comment": "Returns a request body publisher whose body is the given String, converted using the given character set.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the String containing the body",
          "\u003ccode\u003echarset\u003c/code\u003e - the character set to convert the string to bytes"
        ],
        "return": [
          "a BodyPublisher"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpRequest$BodyPublisher",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.function.Supplier",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "java.io.InputStream",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "streamSupplier",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "ofInputStream",
      "comment": "A request body publisher that reads its data from an InputStream. A Supplier of InputStream is used in case the request needs to be repeated, as the content is not buffered. The Supplier may return null on subsequent attempts, in which case the request fails.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003estreamSupplier\u003c/code\u003e - a Supplier of open InputStreams"
        ],
        "return": [
          "a BodyPublisher"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpRequest$BodyPublisher",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "buf",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "ofByteArray",
      "comment": "Returns a request body publisher whose body is the given byte array.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ebuf\u003c/code\u003e - the byte array containing the body"
        ],
        "return": [
          "a BodyPublisher"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpRequest$BodyPublisher",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "buf",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "offset",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "length",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "ofByteArray",
      "comment": "Returns a request body publisher whose body is the content of the given byte array of length bytes starting from the specified offset.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ebuf\u003c/code\u003e - the byte array containing the body",
          "\u003ccode\u003eoffset\u003c/code\u003e - the offset of the first byte",
          "\u003ccode\u003elength\u003c/code\u003e - the number of bytes to use"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the sub-range is defined to be out of bounds"
        ],
        "return": [
          "a BodyPublisher"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpRequest$BodyPublisher",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.FileNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.nio.file.Path",
            "type": "Class"
          },
          "name": "path",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "ofFile",
      "comment": "A request body publisher that takes data from the contents of a File. Security manager permission checks are performed in this factory method, when the BodyPublisher is created. Care must be taken that the BodyPublisher is not shared with untrusted code.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epath\u003c/code\u003e - the path to the file containing the body"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FileNotFoundException.html\" title\u003d\"class in java.io\"\u003eFileNotFoundException\u003c/a\u003e\u003c/code\u003e - if the path is not found",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/Files.html#newInputStream(java.nio.file.Path,java.nio.file.OpenOption...)\"\u003eopening the file for reading\u003c/a\u003e is denied: in the case of the system-default file system provider, and a security manager is installed, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkRead(java.lang.String)\"\u003e\u003ccode\u003echeckRead\u003c/code\u003e\u003c/a\u003e is invoked to check read access to the given file"
        ],
        "return": [
          "a BodyPublisher"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpRequest$BodyPublisher",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "name": "byte",
                "type": "Class",
                "arrayDimensions": 1
              }
            ],
            "type": "Class"
          },
          "name": "iter",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "ofByteArrays",
      "comment": "A request body publisher that takes data from an Iterable of byte arrays. An Iterable is provided which supplies Iterator instances. Each attempt to send the request results in one invocation of the Iterable.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eiter\u003c/code\u003e - an Iterable of byte arrays"
        ],
        "return": [
          "a BodyPublisher"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpRequest$BodyPublisher",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "noBody",
      "comment": "A request body publisher which sends no request body.",
      "annotations": [],
      "tagMap": {
        "return": [
          "a BodyPublisher which completes immediately and sends no request body."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpRequest$BodyPublisher",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.http.HttpRequest$BodyPublisher",
            "type": "Class"
          },
          "name": "publishers",
          "varargs": true
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "concat",
      "comment": "Returns a BodyPublisher that publishes a request body consisting of the concatenation of the request bodies published by a sequence of publishers. If the sequence is empty an empty publisher is returned. Otherwise, if the sequence contains a single element, that publisher is returned. Otherwise a concatenation publisher is returned. The request body published by a concatenation publisher is logically equivalent to the request body that would have been published by concatenating all the bytes of each publisher in sequence. Each publisher is lazily subscribed to in turn, until all the body bytes are published, an error occurs, or the concatenation publisher\u0027s subscription is cancelled. The concatenation publisher may be subscribed to more than once, which in turn may result in the publishers in the sequence being subscribed to more than once. The concatenation publisher has a known content length only if all publishers in the sequence have a known content length. The contentLength reported by the concatenation publisher is computed as follows: If any of the publishers reports an unknown content length, or if the sum of the known content lengths would exceed Long.MAX_VALUE, the resulting content length is unknown. Otherwise, the resulting content length is the sum of the known content lengths, a number between 0 and Long.MAX_VALUE, inclusive.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epublishers\u003c/code\u003e - a sequence of publishers."
        ],
        "implNote": [
          "If the concatenation publisher\u0027s subscription is \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/Flow.Subscription.html#cancel()\"\u003ecancelled\u003c/a\u003e, or an error occurs while publishing the bytes, not all publishers in the sequence may be subscribed to."
        ],
        "return": [
          "An aggregate publisher that publishes a request body logically equivalent to the concatenation of all bytes published by each publisher in the sequence."
        ],
        "since": [
          "16"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 9,
  "name": "java.net.http.HttpRequest$BodyPublishers",
  "annotations": [],
  "tagMap": {
    "since": [
      "11"
    ]
  }
}