{
  "packageName": "java.net.http",
  "simpleName": "Builder",
  "moduleName": "java.net.http",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.net.ProxySelector",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "NO_PROXY",
      "comment": "A proxy selector that always return Proxy.NO_PROXY implying a direct connection. This is a convenience object that can be passed to proxy(ProxySelector) in order to build an instance of HttpClient that uses no proxy.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.net.http.HttpClient$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.CookieHandler",
            "type": "Class"
          },
          "name": "cookieHandler",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "cookieHandler",
      "comment": "Sets a cookie handler.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecookieHandler\u003c/code\u003e - the cookie handler"
        ],
        "return": [
          "this builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpClient$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.time.Duration",
            "type": "Class"
          },
          "name": "duration",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "connectTimeout",
      "comment": "Sets the connect timeout duration for this client. In the case where a new connection needs to be established, if the connection cannot be established within the given duration, then HttpClient::send throws an HttpConnectTimeoutException, or HttpClient::sendAsync completes exceptionally with an HttpConnectTimeoutException. If a new connection does not need to be established, for example if a connection can be reused from a previous request, then this timeout duration has no effect.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eduration\u003c/code\u003e - the duration to allow the underlying connection to be established"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the duration is non-positive"
        ],
        "return": [
          "this builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpClient$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.net.ssl.SSLContext",
            "type": "Class"
          },
          "name": "sslContext",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "sslContext",
      "comment": "Sets an SSLContext. If this method is not invoked prior to building, then newly built clients will use the default context, which is normally adequate for client applications that do not need to specify protocols, or require client authentication.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003esslContext\u003c/code\u003e - the SSLContext"
        ],
        "return": [
          "this builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpClient$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.net.ssl.SSLParameters",
            "type": "Class"
          },
          "name": "sslParameters",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "sslParameters",
      "comment": "Sets an SSLParameters. If this method is not invoked prior to building, then newly built clients will use a default, implementation specific, set of parameters. Some parameters which are used internally by the HTTP Client implementation (such as the application protocol list) should not be set by callers, as they may be ignored. The contents of the given object are copied.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003esslParameters\u003c/code\u003e - the SSLParameters"
        ],
        "return": [
          "this builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpClient$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.concurrent.Executor",
            "type": "Class"
          },
          "name": "executor",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "executor",
      "comment": "Sets the executor to be used for asynchronous and dependent tasks. If this method is not invoked prior to building, a default executor is created for each newly built HttpClient.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eexecutor\u003c/code\u003e - the Executor"
        ],
        "implNote": [
          "The default executor uses a thread pool, with a custom thread factory. If a security manager has been installed, the thread factory creates threads that run with an access control context that has no permissions."
        ],
        "return": [
          "this builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpClient$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.http.HttpClient$Redirect",
            "type": "Class"
          },
          "name": "policy",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "followRedirects",
      "comment": "Specifies whether requests will automatically follow redirects issued by the server. If this method is not invoked prior to building, then newly built clients will use a default redirection policy of NEVER.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epolicy\u003c/code\u003e - the redirection policy"
        ],
        "return": [
          "this builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpClient$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.http.HttpClient$Version",
            "type": "Class"
          },
          "name": "version",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "version",
      "comment": "Requests a specific HTTP protocol version where possible. If this method is not invoked prior to building, then newly built clients will prefer HTTP/2. If set to HTTP/2, then each request will attempt to upgrade to HTTP/2. If the upgrade succeeds, then the response to this request will use HTTP/2 and all subsequent requests and responses to the same origin server will use HTTP/2. If the upgrade fails, then the response will be handled using HTTP/1.1",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eversion\u003c/code\u003e - the requested HTTP protocol version"
        ],
        "implNote": [
          "Constraints may also affect the selection of protocol version. For example, if HTTP/2 is requested through a proxy, and if the implementation does not support this mode, then HTTP/1.1 may be used"
        ],
        "return": [
          "this builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpClient$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "priority",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "priority",
      "comment": "Sets the default priority for any HTTP/2 requests sent from this client. The value provided must be between 1 and 256 (inclusive).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epriority\u003c/code\u003e - the priority weighting"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the given priority is out of range"
        ],
        "return": [
          "this builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpClient$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.ProxySelector",
            "type": "Class"
          },
          "name": "proxySelector",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "proxy",
      "comment": "Sets a ProxySelector.",
      "annotations": [],
      "tagMap": {
        "apiNote": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/ProxySelector.html#of(java.net.InetSocketAddress)\"\u003e\u003ccode\u003eProxySelector::of\u003c/code\u003e\u003c/a\u003e provides a \n\u003ccode\u003eProxySelector\u003c/code\u003e which uses a single proxy for all requests. The system-wide proxy selector can be retrieved by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/ProxySelector.html#getDefault()\"\u003e\u003ccode\u003eProxySelector.getDefault()\u003c/code\u003e\u003c/a\u003e."
        ],
        "param": [
          "\u003ccode\u003eproxySelector\u003c/code\u003e - the ProxySelector"
        ],
        "implNote": [
          "If this method is not invoked prior to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.net.http/java/net/http/HttpClient.Builder.html#build()\"\u003ebuilding\u003c/a\u003e, then newly built clients will use the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/ProxySelector.html#getDefault()\"\u003edefault proxy selector\u003c/a\u003e, which is usually adequate for client applications. The default proxy selector supports a set of system properties related to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies\"\u003e proxy settings\u003c/a\u003e. This default behavior can be disabled by supplying an explicit proxy selector, such as \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.net.http/java/net/http/HttpClient.Builder.html#NO_PROXY\"\u003e\u003ccode\u003eNO_PROXY\u003c/code\u003e\u003c/a\u003e or one returned by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/ProxySelector.html#of(java.net.InetSocketAddress)\"\u003e\u003ccode\u003eProxySelector::of\u003c/code\u003e\u003c/a\u003e, before \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.net.http/java/net/http/HttpClient.Builder.html#build()\"\u003ebuilding\u003c/a\u003e."
        ],
        "return": [
          "this builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpClient$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.Authenticator",
            "type": "Class"
          },
          "name": "authenticator",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "authenticator",
      "comment": "Sets an authenticator to use for HTTP authentication.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eauthenticator\u003c/code\u003e - the Authenticator"
        ],
        "return": [
          "this builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpClient",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "build",
      "comment": "Returns a new HttpClient built from the current state of this builder.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/UncheckedIOException.html\" title\u003d\"class in java.io\"\u003eUncheckedIOException\u003c/a\u003e\u003c/code\u003e - may be thrown if underlying IO resources required by the implementation cannot be allocated. For instance, if the implementation requires a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/Selector.html\" title\u003d\"class in java.nio.channels\"\u003e\u003ccode\u003eSelector\u003c/code\u003e\u003c/a\u003e, and opening one fails due to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/Selector.html#open()\"\u003elack of necessary resources\u003c/a\u003e."
        ],
        "return": [
          "a new \n\u003ccode\u003eHttpClient\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 521,
  "name": "java.net.http.HttpClient$Builder",
  "annotations": [],
  "tagMap": {
    "since": [
      "11"
    ]
  }
}