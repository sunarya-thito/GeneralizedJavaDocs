{
  "packageName": "java.net.http",
  "simpleName": "HttpResponse",
  "moduleName": "java.net.http",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "statusCode",
      "comment": "Returns the status code for this response.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the response code"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpRequest",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "request",
      "comment": "Returns the HttpRequest corresponding to this response. The returned HttpRequest may not be the initiating request provided when sending. For example, if the initiating request was redirected, then the request returned by this method will have the redirected URI, which will be different from the initiating request URI.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.net.http/java/net/http/HttpResponse.html#previousResponse()\"\u003e\u003ccode\u003epreviousResponse()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the request"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Optional",
        "parameters": [
          {
            "name": "java.net.http.HttpResponse",
            "parameters": [
              {
                "owner": "java.net.http.HttpResponse",
                "name": "T",
                "type": "Variable"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "previousResponse",
      "comment": "Returns an Optional containing the previous intermediate response if one was received. An intermediate response is one that is received as a result of redirection or authentication. If no previous response was received then an empty Optional is returned.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an Optional containing the HttpResponse, if any."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpHeaders",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "headers",
      "comment": "Returns the received response headers.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the response headers"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.net.http.HttpResponse",
        "name": "T",
        "type": "Variable"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "body",
      "comment": "Returns the body. Depending on the type of T, the returned body may represent the body after it was read (such as byte[], or String, or Path) or it may represent an object with which the body is read, such as an InputStream. If this HttpResponse was returned from an invocation of previousResponse() then this method returns null",
      "annotations": [],
      "tagMap": {
        "return": [
          "the body"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Optional",
        "parameters": [
          {
            "name": "javax.net.ssl.SSLSession",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "sslSession",
      "comment": "Returns an Optional containing the SSLSession in effect for this response. Returns an empty Optional if this is not a HTTPS response.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an \n\u003ccode\u003eOptional\u003c/code\u003e containing the \n\u003ccode\u003eSSLSession\u003c/code\u003e associated with the response"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.URI",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "uri",
      "comment": "Returns the URI that the response was received from. This may be different from the request URI if redirection occurred.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the URI of the response"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.http.HttpClient$Version",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "version",
      "comment": "Returns the HTTP protocol version that was used for this response.",
      "annotations": [],
      "tagMap": {
        "return": [
          "HTTP protocol version"
        ]
      }
    }
  ],
  "innerClasses": [
    "java.net.http.HttpResponse$BodySubscriber",
    "java.net.http.HttpResponse$BodyHandler",
    "java.net.http.HttpResponse$BodySubscribers",
    "java.net.http.HttpResponse$BodyHandlers",
    "java.net.http.HttpResponse$ResponseInfo",
    "java.net.http.HttpResponse$PushPromiseHandler"
  ],
  "genericParameters": [
    {
      "name": "T",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.net.http.HttpResponse",
  "comment": "An HTTP response. \n\u003cp\u003e An \u003ccode\u003eHttpResponse\u003c/code\u003e is not created directly, but rather returned as a result of sending an \u003ca href\u003d\"HttpRequest.html\" title\u003d\"class in java.net.http\"\u003e\u003ccode\u003eHttpRequest\u003c/code\u003e\u003c/a\u003e. An \u003ccode\u003eHttpResponse\u003c/code\u003e is made available when the response status code and headers have been received, and typically after the response body has also been completely received. Whether or not the \u003ccode\u003eHttpResponse\u003c/code\u003e is made available before the response body has been completely received depends on the \u003ca href\u003d\"HttpResponse.BodyHandler.html\" title\u003d\"interface in java.net.http\"\u003e\u003ccode\u003eBodyHandler\u003c/code\u003e\u003c/a\u003e provided when sending the \u003ccode\u003eHttpRequest\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003e This class provides methods for accessing the response status code, headers, the response body, and the \u003ccode\u003eHttpRequest\u003c/code\u003e corresponding to this response. \u003c/p\u003e\n\u003cp\u003e The following is an example of retrieving a response as a String: \u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e   HttpResponse\u0026lt;String\u0026gt; response \u003d client\n     .send(request, BodyHandlers.ofString()); \u003c/code\u003e\u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The class \u003ca href\u003d\"HttpResponse.BodyHandlers.html\" title\u003d\"class in java.net.http\"\u003e\u003ccode\u003eBodyHandlers\u003c/code\u003e\u003c/a\u003e provides implementations of many common response handlers. Alternatively, a custom \u003ccode\u003eBodyHandler\u003c/code\u003e implementation can be used.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "11"
    ]
  }
}