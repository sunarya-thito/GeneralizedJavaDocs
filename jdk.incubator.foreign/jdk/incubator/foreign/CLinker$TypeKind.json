{
  "packageName": "jdk.incubator.foreign",
  "simpleName": "TypeKind",
  "moduleName": "jdk.incubator.foreign",
  "type": "ENUM",
  "superClass": {
    "name": "java.lang.Enum",
    "parameters": [
      {
        "name": "jdk.incubator.foreign.CLinker$TypeKind",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ATTR_NAME",
      "comment": "The layout attribute name associated with this classification kind. Clients can retrieve the type kind of a layout using the following code: \n        ValueLayout layout \u003d ...\n        TypeKind \u003d layout.attribute(TypeKind.ATTR_NAME).orElse(null);",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#jdk.incubator.foreign.CLinker.TypeKind.ATTR_NAME\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.incubator.foreign.CLinker$TypeKind",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "values",
      "comment": "Returns an array containing the constants of this enum class, in the order they are declared.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an array containing the constants of this enum class, in the order they are declared"
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.incubator.foreign.CLinker$TypeKind",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "valueOf",
      "comment": "Returns the enum constant of this class with the specified name. The string must match exactly an identifier used to declare an enum constant in this class. (Extraneous whitespace characters are not permitted.)",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the enum constant to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this enum class has no constant with the specified name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the argument is null"
        ],
        "return": [
          "the enum constant with the specified name"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isIntegral",
      "comment": "Is this kind integral?",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if this kind is integral"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isFloat",
      "comment": "Is this kind a floating point type?",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if this kind is a floating point type"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isPointer",
      "comment": "Is this kind a pointer kind?",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if this kind is a pointer kind"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 9,
  "name": "jdk.incubator.foreign.CLinker$TypeKind",
  "comment": "A C type kind. Each kind corresponds to a particular C language builtin type, and can be attached to \n\u003ca href\u003d\"ValueLayout.html\" title\u003d\"class in jdk.incubator.foreign\"\u003e\u003ccode\u003eValueLayout\u003c/code\u003e\u003c/a\u003e instances using the \n\u003ca href\u003d\"MemoryLayout.html#withAttribute(java.lang.String,java.lang.constant.Constable)\"\u003e\u003ccode\u003eMemoryLayout.withAttribute(String, Constable)\u003c/code\u003e\u003c/a\u003e in order to obtain a layout which can be classified accordingly by \n\u003ca href\u003d\"CLinker.html#downcallHandle(jdk.incubator.foreign.Addressable,java.lang.invoke.MethodType,jdk.incubator.foreign.FunctionDescriptor)\"\u003e\u003ccode\u003eCLinker.downcallHandle(Addressable, MethodType, FunctionDescriptor)\u003c/code\u003e\u003c/a\u003e and \n\u003ca href\u003d\"CLinker.html#upcallStub(java.lang.invoke.MethodHandle,jdk.incubator.foreign.FunctionDescriptor)\"\u003e\u003ccode\u003eCLinker.upcallStub(MethodHandle, FunctionDescriptor)\u003c/code\u003e\u003c/a\u003e.",
  "tagMap": {}
}