{
  "packageName": "jdk.incubator.foreign",
  "simpleName": "LibraryLookup",
  "moduleName": "jdk.incubator.foreign",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.Optional",
        "parameters": [
          {
            "name": "jdk.incubator.foreign.LibraryLookup$Symbol",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "lookup",
      "comment": "Looks up a symbol with given name in this library. The returned symbol maintains a strong reference to this lookup object.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the symbol name."
        ],
        "return": [
          "the library symbol (if any)."
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.incubator.foreign.LibraryLookup",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "ofDefault",
      "comment": "Obtain a default library lookup object.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the default library lookup object."
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.incubator.foreign.LibraryLookup",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.nio.file.Path",
            "type": "Class"
          },
          "name": "path",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "ofPath",
      "comment": "Obtain a library lookup object corresponding to a library identified by given path.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epath\u003c/code\u003e - the library absolute path."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified path does not correspond to an absolute path, e.g. if \n\u003ccode\u003e!path.isAbsolute()\u003c/code\u003e."
        ],
        "return": [
          "a library lookup object for given path."
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.incubator.foreign.LibraryLookup",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "libName",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "ofLibrary",
      "comment": "Obtain a library lookup object corresponding to a library identified by given library name. The library name is decorated according to the platform conventions (e.g. on Linux, the lib prefix is added, as well as the .so extension); the resulting name is then looked up in the standard native library path (which can be overriden, by setting the java.library.path property).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elibName\u003c/code\u003e - the library name."
        ],
        "return": [
          "a library lookup object for given library name."
        ]
      }
    }
  ],
  "innerClasses": [
    "jdk.incubator.foreign.LibraryLookup$Symbol"
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "jdk.incubator.foreign.LibraryLookup",
  "annotations": [],
  "tagMap": {}
}