{
  "packageName": "javax.lang.model.element",
  "simpleName": "UnknownDirectiveException",
  "moduleName": "java.compiler",
  "type": "CLASS",
  "superClass": {
    "name": "javax.lang.model.UnknownEntityException",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.lang.model.element.ModuleElement$Directive",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUnknownDirective",
      "comment": "Returns the unknown directive. The value may be unavailable if this exception has been serialized and then read back in.",
      "tagMap": {
        "return": [
          "the unknown directive, or \n\u003ccode\u003enull\u003c/code\u003e if unavailable"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getArgument",
      "comment": "Returns the additional argument.",
      "tagMap": {
        "return": [
          "the additional argument, or \n\u003ccode\u003enull\u003c/code\u003e if unavailable"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.ModuleElement$Directive",
            "type": "Class"
          },
          "field": {
            "name": "d"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new UnknownElementException. The p parameter may be used to pass in an additional argument with information about the context in which the unknown directive was encountered; for example, the visit methods of DirectiveVisitor may pass in their additional parameter.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ed\u003c/code\u003e - the unknown directive, may be \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003ep\u003c/code\u003e - an additional parameter, may be \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.lang.model.element.UnknownDirectiveException",
  "comment": "Indicates that an unknown kind of module directive was encountered. This can occur if the language evolves and new kinds of directives are added to the \n\u003ccode\u003eDirective\u003c/code\u003e hierarchy. May be thrown by a \n\u003ca href\u003d\"ModuleElement.DirectiveVisitor.html\" title\u003d\"interface in javax.lang.model.element\"\u003edirective visitor\u003c/a\u003e to indicate that the visitor was created for a prior version of the language.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/ModuleElement.DirectiveVisitor.html#visitUnknown(javax.lang.model.element.ModuleElement.Directive,P)\"\u003e\u003ccode\u003eModuleElement.DirectiveVisitor.visitUnknown(javax.lang.model.element.ModuleElement.Directive, P)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.lang.model.element.UnknownDirectiveException\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "9"
    ]
  }
}