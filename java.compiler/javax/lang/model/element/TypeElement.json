{
  "packageName": "javax.lang.model.element",
  "simpleName": "TypeElement",
  "moduleName": "java.compiler",
  "type": "INTERFACE",
  "interfaces": [
    {
      "name": "javax.lang.model.element.Element",
      "type": "Class"
    },
    {
      "name": "javax.lang.model.element.Parameterizable",
      "type": "Class"
    },
    {
      "name": "javax.lang.model.element.QualifiedNameable",
      "type": "Class"
    }
  ],
  "members": [
    {
      "returnType": {
        "name": "javax.lang.model.type.TypeMirror",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "asType",
      "comment": "Returns the type defined by this class or interface element, returning the prototypical type for an element representing a generic type. A generic element defines a family of types, not just one. If this is a generic element, a prototypical type is returned which has the element\u0027s invocation on the type variables corresponding to its own formal type parameters. For example, for the generic class element C\u003cN extends Number\u003e, the parameterized type C\u003cN\u003e is returned. The Types utility interface has more general methods for obtaining the full range of types defined by an element.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/Types.html#asMemberOf(javax.lang.model.type.DeclaredType,javax.lang.model.element.Element)\"\u003e\u003ccode\u003eTypes.asMemberOf(DeclaredType, Element)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/Types.html#getDeclaredType(javax.lang.model.element.TypeElement,javax.lang.model.type.TypeMirror...)\"\u003e\u003ccode\u003eTypes.getDeclaredType(TypeElement, TypeMirror...)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/Element.html#asType()\"\u003easType\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/Element.html\" title\u003d\"interface in javax.lang.model.element\"\u003eElement\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the type defined by this type element"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.lang.model.element.Element",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEnclosedElements",
      "comment": "Returns the fields, methods, constructors, record components, and member classes and interfaces that are directly declared in this class or interface. This includes any mandated elements such as the (implicit) default constructor and the implicit values and valueOf methods of an enum class.",
      "tagMap": {
        "See Java Language Specification:": [
          "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-8.8.9\"\u003e8.8.9 Default Constructor\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-8.9.3\"\u003e8.9.3 Enum Members\u003c/a\u003e\n\u003cbr\u003e"
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/TypeElement.html#getEnclosedElements()\"\u003e\u003ccode\u003egetEnclosedElements()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/PackageElement.html#getEnclosedElements()\"\u003e\u003ccode\u003ePackageElement.getEnclosedElements()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/ModuleElement.html#getEnclosedElements()\"\u003e\u003ccode\u003eModuleElement.getEnclosedElements()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/Elements.html#getAllMembers(javax.lang.model.element.TypeElement)\"\u003e\u003ccode\u003eElements.getAllMembers(javax.lang.model.element.TypeElement)\u003c/code\u003e\u003c/a\u003e"
        ],
        "apiNote": [
          "As a particular instance of the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/package-summary.html\"\u003egeneral accuracy requirements\u003c/a\u003e and the ordering behavior required of this interface, the list of enclosed elements will be returned in the natural order for the originating source of information about the class or interface. For example, if the information about the class or interface is originating from a source file, the elements will be returned in source code order. (However, in that case the ordering of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/Elements.Origin.html#MANDATED\"\u003eimplicitly declared\u003c/a\u003e elements, such as default constructors, is not specified.)"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/Element.html#getEnclosedElements()\"\u003egetEnclosedElements\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/Element.html\" title\u003d\"interface in javax.lang.model.element\"\u003eElement\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the enclosed elements in proper order, or an empty list if none"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.lang.model.element.NestingKind",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNestingKind",
      "comment": "Returns the nesting kind of this class or interface element.",
      "tagMap": {
        "return": [
          "the nesting kind of this class or interface element"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.lang.model.element.Name",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getQualifiedName",
      "comment": "Returns the fully qualified name of this class or interface element. More precisely, it returns the canonical name. For local and anonymous classes, which do not have canonical names, an empty name is returned. The name of a generic class or interface does not include any reference to its formal type parameters. For example, the fully qualified name of the interface java.util.Set\u003cE\u003e is \"java.util.Set\". Nested classes and interfaces use \".\" as a separator, as in \"java.util.Map.Entry\".",
      "tagMap": {
        "See Java Language Specification:": [
          "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-6.html#jls-6.7\"\u003e6.7 Fully Qualified Names and Canonical Names\u003c/a\u003e\n\u003cbr\u003e"
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/Elements.html#getBinaryName(javax.lang.model.element.TypeElement)\"\u003e\u003ccode\u003eElements.getBinaryName(javax.lang.model.element.TypeElement)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/QualifiedNameable.html#getQualifiedName()\"\u003egetQualifiedName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/QualifiedNameable.html\" title\u003d\"interface in javax.lang.model.element\"\u003eQualifiedNameable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the fully qualified name of this class or interface, or an empty name if none"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.lang.model.element.Name",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSimpleName",
      "comment": "Returns the simple name of this class or interface element. For an anonymous class, an empty name is returned.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/PackageElement.html#getSimpleName()\"\u003e\u003ccode\u003ePackageElement.getSimpleName()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/ExecutableElement.html#getSimpleName()\"\u003e\u003ccode\u003eExecutableElement.getSimpleName()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/TypeElement.html#getSimpleName()\"\u003e\u003ccode\u003egetSimpleName()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/VariableElement.html#getSimpleName()\"\u003e\u003ccode\u003eVariableElement.getSimpleName()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/ModuleElement.html#getSimpleName()\"\u003e\u003ccode\u003eModuleElement.getSimpleName()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/RecordComponentElement.html#getSimpleName()\"\u003e\u003ccode\u003eRecordComponentElement.getSimpleName()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/Element.html#getSimpleName()\"\u003egetSimpleName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/Element.html\" title\u003d\"interface in javax.lang.model.element\"\u003eElement\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the simple name of this class or interface, an empty name for an anonymous class"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.lang.model.type.TypeMirror",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSuperclass",
      "comment": "Returns the direct superclass of this class or interface element. If this class or interface element represents an interface or the class java.lang.Object, then a NoType with kind NONE is returned.",
      "tagMap": {
        "return": [
          "the direct superclass, or a \n\u003ccode\u003eNoType\u003c/code\u003e if there is none"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.lang.model.type.TypeMirror",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getInterfaces",
      "comment": "Returns the interface types directly implemented by this class or extended by this interface.",
      "tagMap": {
        "return": [
          "the interface types directly implemented by this class or extended by this interface, or an empty list if there are none"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.lang.model.element.TypeParameterElement",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTypeParameters",
      "comment": "Returns the formal type parameters of this class or interface element in declaration order.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/Parameterizable.html#getTypeParameters()\"\u003egetTypeParameters\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/Parameterizable.html\" title\u003d\"interface in javax.lang.model.element\"\u003eParameterizable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the formal type parameters, or an empty list if there are none"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.lang.model.element.RecordComponentElement",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getRecordComponents",
      "comment": "Returns the record components of this class or interface element in declaration order.",
      "tagMap": {
        "implSpec": [
          "The default implementations of this method returns an empty and unmodifiable list."
        ],
        "return": [
          "the record components, or an empty list if there are none"
        ],
        "since": [
          "16"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.lang.model.type.TypeMirror",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPermittedSubclasses",
      "comment": "This method is associated with sealed classes, a preview feature of the Java language. Preview features may be removed in a future release, or upgraded to permanent features of the Java language. Returns the permitted classes of this class or interface element in declaration order.",
      "tagMap": {
        "implSpec": [
          "The default implementations of this method returns an empty and unmodifiable list."
        ],
        "return": [
          "the permitted classes, or an empty list if there are none"
        ],
        "since": [
          "15"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.lang.model.element.Element",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEnclosingElement",
      "comment": "Returns the package of a top-level class or interface and returns the immediately lexically enclosing element for a nested class or interface.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/Elements.html#getPackageOf(javax.lang.model.element.Element)\"\u003e\u003ccode\u003eElements.getPackageOf(javax.lang.model.element.Element)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/Element.html#getEnclosingElement()\"\u003egetEnclosingElement\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/Element.html\" title\u003d\"interface in javax.lang.model.element\"\u003eElement\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the package of a top-level class or interface, the immediately lexically enclosing element for a nested class or interface"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.lang.model.element.TypeElement",
  "comment": "Represents a class or interface program element. Provides access to information about the class or interface and its members. Note that an enum class and a record class are specialized kinds of classes and an annotation interface is a specialized kind of interface. \n\u003cp\u003e While a \u003ccode\u003eTypeElement\u003c/code\u003e represents a class or interface \u003ci\u003eelement\u003c/i\u003e, a \u003ca href\u003d\"../type/DeclaredType.html\" title\u003d\"interface in javax.lang.model.type\"\u003e\u003ccode\u003eDeclaredType\u003c/code\u003e\u003c/a\u003e represents a class or interface \u003ci\u003etype\u003c/i\u003e, the latter being a use (or \u003ci\u003einvocation\u003c/i\u003e) of the former. The distinction is most apparent with generic types, for which a single element can define a whole family of types. For example, the element \u003ccode\u003ejava.util.Set\u003c/code\u003e corresponds to the parameterized types \u003ccode\u003ejava.util.Set\u0026lt;String\u0026gt;\u003c/code\u003e and \u003ccode\u003ejava.util.Set\u0026lt;Number\u0026gt;\u003c/code\u003e (and many others), and to the raw type \u003ccode\u003ejava.util.Set\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003e Each method of this interface that returns a list of elements will return them in the order that is natural for the underlying source of program information. For example, if the underlying source of information is Java source code, then the elements will be returned in source code order.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/type/DeclaredType.html\" title\u003d\"interface in javax.lang.model.type\"\u003e\u003ccode\u003eDeclaredType\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}