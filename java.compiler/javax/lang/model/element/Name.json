{
  "packageName": "javax.lang.model.element",
  "simpleName": "Name",
  "moduleName": "java.compiler",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.CharSequence",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "equals",
      "comment": "Returns true if the argument represents the same name as this, and false otherwise. Note that the identity of a Name is a function both of its content in terms of a sequence of characters as well as the implementation which created it.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/Element.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eElement.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to be compared with this element"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified object represents the same name as this"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hashCode",
      "comment": "Obeys the general contract of Object.hashCode.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/element/Name.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eequals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code value for this object."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.CharSequence",
            "type": "Class"
          },
          "field": {
            "name": "cs"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "contentEquals",
      "comment": "Compares this name to the specified CharSequence. The result is true if and only if this name represents the same sequence of char values as the specified sequence.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/String.html#contentEquals(java.lang.CharSequence)\"\u003e\u003ccode\u003eString.contentEquals(CharSequence)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecs\u003c/code\u003e - The sequence to compare this name against"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this name represents the same sequence of \n\u003ccode\u003echar\u003c/code\u003e values as the specified sequence, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.lang.model.element.Name",
  "comment": "An immutable sequence of characters. When created by the same implementation, objects implementing this interface must obey the general \n\u003ca href\u003d\"../../../../../java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals contract\u003c/a\u003e when compared with each other. Therefore, \n\u003ccode\u003eName\u003c/code\u003e objects from the same implementation are usable in collections while \n\u003ccode\u003eName\u003c/code\u003es from different implementations may not work properly in collections. \n\u003cp id\u003d\"empty_name\"\u003eAn \u003ca href\u003d\"../../../../../java.base/java/lang/CharSequence.html#isEmpty()\"\u003eempty\u003c/a\u003e \u003ccode\u003eName\u003c/code\u003e has a \u003ca href\u003d\"../../../../../java.base/java/lang/CharSequence.html#length()\"\u003elength\u003c/a\u003e of zero. \u003c/p\u003e\n\u003cp\u003eIn the context of \u003ca href\u003d\"../../../annotation/processing/ProcessingEnvironment.html\" title\u003d\"interface in javax.annotation.processing\"\u003eannotation processing\u003c/a\u003e, the guarantees for \"the same\" implementation must include contexts where the \u003ca href\u003d\"../../../annotation/processing/package-summary.html\"\u003eAPI mediated\u003c/a\u003e side effects of \u003ca href\u003d\"../../../annotation/processing/Processor.html\" title\u003d\"interface in javax.annotation.processing\"\u003eprocessors\u003c/a\u003e could be visible to each other, including successive annotation processing \u003ca href\u003d\"../../../annotation/processing/RoundEnvironment.html\" title\u003d\"interface in javax.annotation.processing\"\u003erounds\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/Elements.html#getName(java.lang.CharSequence)\"\u003e\u003ccode\u003eElements.getName(java.lang.CharSequence)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}