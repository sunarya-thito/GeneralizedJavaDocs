{
  "packageName": "javax.lang.model.element",
  "simpleName": "AnnotationValue",
  "moduleName": "java.compiler",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getValue",
      "comment": "Returns the value.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the value"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "toString",
      "comment": "Returns a string representation of this value. This is returned in a form suitable for representing this value in the source code of an annotation.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this value"
        ]
      }
    },
    {
      "returnType": {
        "name": "R",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.lang.model.element.AnnotationValueVisitor",
            "parameters": [
              {
                "name": "R",
                "type": "Class"
              },
              {
                "name": "P",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "v",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "P",
            "type": "Class"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "R",
          "type": "Variable"
        },
        {
          "name": "P",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "accept",
      "comment": "Applies a visitor to this value.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eR\u003c/code\u003e - the return type of the visitor\u0027s methods",
          "\u003ccode\u003eP\u003c/code\u003e - the type of the additional parameter to the visitor\u0027s methods"
        ],
        "param": [
          "\u003ccode\u003ev\u003c/code\u003e - the visitor operating on this value",
          "\u003ccode\u003ep\u003c/code\u003e - additional parameter to the visitor"
        ],
        "return": [
          "a visitor-specified result"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.lang.model.element.AnnotationValue",
  "comment": "Represents a value of an annotation interface element. A value is of one of the following types: \n\u003cul\u003e\n \u003cli\u003e a wrapper class (such as \u003ca href\u003d\"../../../../../java.base/java/lang/Integer.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eInteger\u003c/code\u003e\u003c/a\u003e) for a primitive type \u003c/li\u003e\n \u003cli\u003e \u003ccode\u003eString\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e \u003ccode\u003eTypeMirror\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e \u003ccode\u003eVariableElement\u003c/code\u003e (representing an enum constant) \u003c/li\u003e\n \u003cli\u003e \u003ccode\u003eAnnotationMirror\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e \u003ccode\u003eList\u0026lt;? extends AnnotationValue\u0026gt;\u003c/code\u003e (representing the elements, in declared order, if the value is an array) \u003c/li\u003e\n\u003c/ul\u003e",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}