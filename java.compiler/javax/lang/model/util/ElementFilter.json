{
  "packageName": "javax.lang.model.util",
  "simpleName": "ElementFilter",
  "moduleName": "java.compiler",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.lang.model.element.VariableElement",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.Element",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "elements",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "fieldsIn",
      "comment": "Returns a list of fields in elements.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelements\u003c/code\u003e - the elements to filter"
        ],
        "return": [
          "a list of fields in \n\u003ccode\u003eelements\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "javax.lang.model.element.VariableElement",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.Element",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "elements",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "fieldsIn",
      "comment": "Returns a set of fields in elements.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelements\u003c/code\u003e - the elements to filter"
        ],
        "return": [
          "a set of fields in \n\u003ccode\u003eelements\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.lang.model.element.RecordComponentElement",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.Element",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "elements",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "recordComponentsIn",
      "comment": "Returns a list of record components in elements.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelements\u003c/code\u003e - the elements to filter"
        ],
        "return": [
          "a list of record components in \n\u003ccode\u003eelements\u003c/code\u003e"
        ],
        "since": [
          "16"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "javax.lang.model.element.RecordComponentElement",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.Element",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "elements",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "recordComponentsIn",
      "comment": "Returns a set of record components in elements.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelements\u003c/code\u003e - the elements to filter"
        ],
        "return": [
          "a set of record components in \n\u003ccode\u003eelements\u003c/code\u003e"
        ],
        "since": [
          "16"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.lang.model.element.ExecutableElement",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.Element",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "elements",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "constructorsIn",
      "comment": "Returns a list of constructors in elements.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelements\u003c/code\u003e - the elements to filter"
        ],
        "return": [
          "a list of constructors in \n\u003ccode\u003eelements\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "javax.lang.model.element.ExecutableElement",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.Element",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "elements",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "constructorsIn",
      "comment": "Returns a set of constructors in elements.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelements\u003c/code\u003e - the elements to filter"
        ],
        "return": [
          "a set of constructors in \n\u003ccode\u003eelements\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.lang.model.element.ExecutableElement",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.Element",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "elements",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "methodsIn",
      "comment": "Returns a list of methods in elements.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelements\u003c/code\u003e - the elements to filter"
        ],
        "return": [
          "a list of methods in \n\u003ccode\u003eelements\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "javax.lang.model.element.ExecutableElement",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.Element",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "elements",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "methodsIn",
      "comment": "Returns a set of methods in elements.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelements\u003c/code\u003e - the elements to filter"
        ],
        "return": [
          "a set of methods in \n\u003ccode\u003eelements\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.lang.model.element.TypeElement",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.Element",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "elements",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "typesIn",
      "comment": "Returns a list of classes and interfaces in elements.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelements\u003c/code\u003e - the elements to filter"
        ],
        "return": [
          "a list of classes and interfaces in \n\u003ccode\u003eelements\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "javax.lang.model.element.TypeElement",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.Element",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "elements",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "typesIn",
      "comment": "Returns a set of types in elements.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelements\u003c/code\u003e - the elements to filter"
        ],
        "return": [
          "a set of types in \n\u003ccode\u003eelements\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.lang.model.element.PackageElement",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.Element",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "elements",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "packagesIn",
      "comment": "Returns a list of packages in elements.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelements\u003c/code\u003e - the elements to filter"
        ],
        "return": [
          "a list of packages in \n\u003ccode\u003eelements\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "javax.lang.model.element.PackageElement",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.Element",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "elements",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "packagesIn",
      "comment": "Returns a set of packages in elements.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelements\u003c/code\u003e - the elements to filter"
        ],
        "return": [
          "a set of packages in \n\u003ccode\u003eelements\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.lang.model.element.ModuleElement",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.Element",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "elements",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "modulesIn",
      "comment": "Returns a list of modules in elements.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelements\u003c/code\u003e - the elements to filter"
        ],
        "return": [
          "a list of modules in \n\u003ccode\u003eelements\u003c/code\u003e"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "javax.lang.model.element.ModuleElement",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.Element",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "elements",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "modulesIn",
      "comment": "Returns a set of modules in elements.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelements\u003c/code\u003e - the elements to filter"
        ],
        "return": [
          "a set of modules in \n\u003ccode\u003eelements\u003c/code\u003e"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.lang.model.element.ModuleElement$ExportsDirective",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.ModuleElement$Directive",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "directives",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "exportsIn",
      "comment": "Returns a list of exports directives in directives.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edirectives\u003c/code\u003e - the directives to filter"
        ],
        "return": [
          "a list of \n\u003ccode\u003eexports\u003c/code\u003e directives in \n\u003ccode\u003edirectives\u003c/code\u003e"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.lang.model.element.ModuleElement$OpensDirective",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.ModuleElement$Directive",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "directives",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "opensIn",
      "comment": "Returns a list of opens directives in directives.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edirectives\u003c/code\u003e - the directives to filter"
        ],
        "return": [
          "a list of \n\u003ccode\u003eopens\u003c/code\u003e directives in \n\u003ccode\u003edirectives\u003c/code\u003e"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.lang.model.element.ModuleElement$ProvidesDirective",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.ModuleElement$Directive",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "directives",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "providesIn",
      "comment": "Returns a list of provides directives in directives.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edirectives\u003c/code\u003e - the directives to filter"
        ],
        "return": [
          "a list of \n\u003ccode\u003eprovides\u003c/code\u003e directives in \n\u003ccode\u003edirectives\u003c/code\u003e"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.lang.model.element.ModuleElement$RequiresDirective",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.ModuleElement$Directive",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "directives",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "requiresIn",
      "comment": "Returns a list of requires directives in directives.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edirectives\u003c/code\u003e - the directives to filter"
        ],
        "return": [
          "a list of \n\u003ccode\u003erequires\u003c/code\u003e directives in \n\u003ccode\u003edirectives\u003c/code\u003e"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.lang.model.element.ModuleElement$UsesDirective",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.lang.model.element.ModuleElement$Directive",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "directives",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "usesIn",
      "comment": "Returns a list of uses directives in directives.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edirectives\u003c/code\u003e - the directives to filter"
        ],
        "return": [
          "a list of \n\u003ccode\u003euses\u003c/code\u003e directives in \n\u003ccode\u003edirectives\u003c/code\u003e"
        ],
        "since": [
          "9"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.lang.model.util.ElementFilter",
  "comment": "Filters for selecting just the elements of interest from a collection of elements. The returned sets and lists are new collections and do use the argument as a backing store. The methods in this class do not make any attempts to guard against concurrent modifications of the arguments. The returned sets and lists are mutable but unsafe for concurrent access. A returned set has the same iteration order as the argument set to a method. \n\u003cp\u003eIf iterables and sets containing \u003ccode\u003enull\u003c/code\u003e are passed as arguments to methods in this class, a \u003ccode\u003eNullPointerException\u003c/code\u003e will be thrown.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}