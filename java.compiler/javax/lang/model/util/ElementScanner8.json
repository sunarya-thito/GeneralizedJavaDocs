{
  "packageName": "javax.lang.model.util",
  "simpleName": "ElementScanner8",
  "moduleName": "java.compiler",
  "type": "CLASS",
  "superClass": {
    "name": "javax.lang.model.util.ElementScanner7",
    "parameters": [
      {
        "name": "R",
        "type": "Class"
      },
      {
        "name": "P",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for concrete subclasses; uses null for the default value.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "javax.lang.model.util.ElementScanner8",
            "name": "R",
            "type": "Variable"
          },
          "name": "defaultValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for concrete subclasses; uses the argument for the default value.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edefaultValue\u003c/code\u003e - the default value"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "R",
      "type": "Variable"
    },
    {
      "name": "P",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.lang.model.util.ElementScanner8",
  "comment": "A scanning visitor of program elements with default behavior appropriate for the \n\u003ca href\u003d\"../SourceVersion.html#RELEASE_8\"\u003e\u003ccode\u003eRELEASE_8\u003c/code\u003e\u003c/a\u003e source version. The \n\u003ccode\u003evisit\u003ci\u003eXyz\u003c/i\u003e\u003c/code\u003e methods in this class scan their component elements by calling \n\u003ccode\u003escan\u003c/code\u003e on their \n\u003ca href\u003d\"../element/Element.html#getEnclosedElements()\"\u003eenclosed elements\u003c/a\u003e, \n\u003ca href\u003d\"../element/ExecutableElement.html#getParameters()\"\u003eparameters\u003c/a\u003e, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the \n\u003ccode\u003evisit\u003ci\u003eXyz\u003c/i\u003e\u003c/code\u003e methods. Note that clients of a scanner may get the desired behavior be invoking \n\u003ccode\u003ev.scan(e, p)\u003c/code\u003e rather than \n\u003ccode\u003ev.visit(e, p)\u003c/code\u003e on the root objects of interest. \n\u003cp\u003eWhen a subclass overrides a \u003ccode\u003evisit\u003ci\u003eXyz\u003c/i\u003e\u003c/code\u003e method, the new method can cause the enclosed elements to be scanned in the default way by calling \u003ccode\u003esuper.visit\u003ci\u003eXyz\u003c/i\u003e\u003c/code\u003e. In this fashion, the concrete visitor can control the ordering of traversal over the component elements with respect to the additional processing; for example, consistently calling \u003ccode\u003esuper.visit\u003ci\u003eXyz\u003c/i\u003e\u003c/code\u003e at the start of the overridden methods will yield a preorder traversal, etc. If the component elements should be traversed in some other order, instead of calling \u003ccode\u003esuper.visit\u003ci\u003eXyz\u003c/i\u003e\u003c/code\u003e, an overriding visit method should call \u003ccode\u003escan\u003c/code\u003e with the elements in the desired order.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/ElementScanner6.html#note_for_subclasses\"\u003e\u003cstrong\u003eCompatibility note for subclasses\u003c/strong\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/ElementScanner6.html\" title\u003d\"class in javax.lang.model.util\"\u003e\u003ccode\u003eElementScanner6\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/ElementScanner7.html\" title\u003d\"class in javax.lang.model.util\"\u003e\u003ccode\u003eElementScanner7\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/ElementScanner9.html\" title\u003d\"class in javax.lang.model.util\"\u003e\u003ccode\u003eElementScanner9\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/ElementScanner14.html\" title\u003d\"class in javax.lang.model.util\"\u003e\u003ccode\u003eElementScanner14\u003c/code\u003e\u003c/a\u003e"
    ],
    "apiNote": [
      "Methods in this class may be overridden subject to their general contract."
    ],
    "since": [
      "1.8"
    ]
  }
}