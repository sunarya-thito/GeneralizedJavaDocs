{
  "packageName": "javax.lang.model.util",
  "simpleName": "SimpleElementVisitor6",
  "moduleName": "java.compiler",
  "type": "CLASS",
  "superClass": {
    "name": "javax.lang.model.util.AbstractElementVisitor6",
    "parameters": [
      {
        "name": "R",
        "type": "Class"
      },
      {
        "name": "P",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "owner": "javax.lang.model.util.SimpleElementVisitor6",
        "name": "R",
        "type": "Variable"
      },
      "memberType": "JavaField",
      "modifiers": 20,
      "name": "DEFAULT_VALUE",
      "comment": "Default value to be returned; defaultAction returns this value unless the method is overridden.",
      "tagMap": {}
    },
    {
      "returnType": {
        "owner": "javax.lang.model.util.SimpleElementVisitor6",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.Element",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "owner": "javax.lang.model.util.SimpleElementVisitor6",
            "name": "P",
            "type": "Variable"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "defaultAction",
      "comment": "The default action for visit methods.",
      "tagMap": {
        "implSpec": [
          "The implementation in this class just returns \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/SimpleElementVisitor6.html#DEFAULT_VALUE\"\u003e\u003ccode\u003eDEFAULT_VALUE\u003c/code\u003e\u003c/a\u003e; subclasses will commonly override this method."
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the element to process",
          "\u003ccode\u003ep\u003c/code\u003e - a visitor-specified parameter"
        ],
        "return": [
          "\u003ccode\u003eDEFAULT_VALUE\u003c/code\u003e unless overridden"
        ]
      }
    },
    {
      "returnType": {
        "owner": "javax.lang.model.util.SimpleElementVisitor6",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.PackageElement",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "owner": "javax.lang.model.util.SimpleElementVisitor6",
            "name": "P",
            "type": "Variable"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitPackage",
      "comment": "Visits a package element.",
      "tagMap": {
        "implSpec": [
          "This implementation calls \n\u003ccode\u003edefaultAction\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the element to visit",
          "\u003ccode\u003ep\u003c/code\u003e - a visitor-specified parameter"
        ],
        "return": [
          "a visitor-specified result"
        ]
      }
    },
    {
      "returnType": {
        "owner": "javax.lang.model.util.SimpleElementVisitor6",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.TypeElement",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "owner": "javax.lang.model.util.SimpleElementVisitor6",
            "name": "P",
            "type": "Variable"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitType",
      "comment": "Visits a type element.",
      "tagMap": {
        "implSpec": [
          "This implementation calls \n\u003ccode\u003edefaultAction\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the element to visit",
          "\u003ccode\u003ep\u003c/code\u003e - a visitor-specified parameter"
        ],
        "return": [
          "a visitor-specified result"
        ]
      }
    },
    {
      "returnType": {
        "owner": "javax.lang.model.util.SimpleElementVisitor6",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.VariableElement",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "owner": "javax.lang.model.util.SimpleElementVisitor6",
            "name": "P",
            "type": "Variable"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitVariable",
      "comment": "Visits a variable element.",
      "tagMap": {
        "implSpec": [
          "This implementation calls \n\u003ccode\u003edefaultAction\u003c/code\u003e, unless the element is a \n\u003ccode\u003eRESOURCE_VARIABLE\u003c/code\u003e in which case \n\u003ccode\u003e visitUnknown\u003c/code\u003e is called."
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the element to visit",
          "\u003ccode\u003ep\u003c/code\u003e - a visitor-specified parameter"
        ],
        "return": [
          "a visitor-specified result"
        ]
      }
    },
    {
      "returnType": {
        "owner": "javax.lang.model.util.SimpleElementVisitor6",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.ExecutableElement",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "owner": "javax.lang.model.util.SimpleElementVisitor6",
            "name": "P",
            "type": "Variable"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitExecutable",
      "comment": "Visits an executable element.",
      "tagMap": {
        "implSpec": [
          "This implementation calls \n\u003ccode\u003edefaultAction\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the element to visit",
          "\u003ccode\u003ep\u003c/code\u003e - a visitor-specified parameter"
        ],
        "return": [
          "a visitor-specified result"
        ]
      }
    },
    {
      "returnType": {
        "owner": "javax.lang.model.util.SimpleElementVisitor6",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.TypeParameterElement",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "owner": "javax.lang.model.util.SimpleElementVisitor6",
            "name": "P",
            "type": "Variable"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitTypeParameter",
      "comment": "Visits a type parameter element.",
      "tagMap": {
        "implSpec": [
          "This implementation calls \n\u003ccode\u003edefaultAction\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the element to visit",
          "\u003ccode\u003ep\u003c/code\u003e - a visitor-specified parameter"
        ],
        "return": [
          "a visitor-specified result"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for concrete subclasses; uses null for the default value.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "type": {
            "owner": "javax.lang.model.util.SimpleElementVisitor6",
            "name": "R",
            "type": "Variable"
          },
          "field": {
            "name": "defaultValue"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for concrete subclasses; uses the argument for the default value.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003edefaultValue\u003c/code\u003e - the value to assign to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/SimpleElementVisitor6.html#DEFAULT_VALUE\"\u003e\u003ccode\u003eDEFAULT_VALUE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "R",
      "type": "Variable"
    },
    {
      "name": "P",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.lang.model.util.SimpleElementVisitor6",
  "comment": "A simple visitor of program elements with default behavior appropriate for the \n\u003ca href\u003d\"../SourceVersion.html#RELEASE_6\"\u003e\u003ccode\u003eRELEASE_6\u003c/code\u003e\u003c/a\u003e source version. Visit methods corresponding to \n\u003ccode\u003eRELEASE_6\u003c/code\u003e language constructs call \n\u003ca href\u003d\"#defaultAction(javax.lang.model.element.Element,P)\"\u003e\u003ccode\u003edefaultAction\u003c/code\u003e\u003c/a\u003e, passing their arguments to \n\u003ccode\u003edefaultAction\u003c/code\u003e\u0027s corresponding parameters. For constructs introduced in \n\u003ccode\u003eRELEASE_7\u003c/code\u003e and later, \n\u003ccode\u003e visitUnknown\u003c/code\u003e is called instead.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/SimpleElementVisitor7.html\" title\u003d\"class in javax.lang.model.util\"\u003e\u003ccode\u003eSimpleElementVisitor7\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/SimpleElementVisitor8.html\" title\u003d\"class in javax.lang.model.util\"\u003e\u003ccode\u003eSimpleElementVisitor8\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/SimpleElementVisitor9.html\" title\u003d\"class in javax.lang.model.util\"\u003e\u003ccode\u003eSimpleElementVisitor9\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/SimpleElementVisitor14.html\" title\u003d\"class in javax.lang.model.util\"\u003e\u003ccode\u003eSimpleElementVisitor14\u003c/code\u003e\u003c/a\u003e"
    ],
    "apiNote": [
      "Methods in this class may be overridden subject to their general contract. \n\u003cp id\u003d\"note_for_subclasses\"\u003e\u003cstrong\u003eWARNING:\u003c/strong\u003e The \u003ccode\u003e ElementVisitor\u003c/code\u003e interface implemented by this class may have methods added to it in the future to accommodate new, currently unknown, language structures added to future versions of the Java programming language. Therefore, methods whose names begin with \u003ccode\u003e\"visit\"\u003c/code\u003e may be added to this class in the future; to avoid incompatibilities, classes and subclasses which extend this class should not declare any instance methods with names beginning with \u003ccode\u003e\"visit\"\u003c/code\u003e.\u003c/p\u003e \n\u003cp\u003eWhen such a new visit method is added, the default implementation in this class will be to directly or indirectly call the \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/lang/model/util/AbstractElementVisitor6.html#visitUnknown(javax.lang.model.element.Element,P)\"\u003e\u003ccode\u003evisitUnknown\u003c/code\u003e\u003c/a\u003e method. A new simple element visitor class will also be introduced to correspond to the new language level; this visitor will have different default behavior for the visit method in question. When a new visitor is introduced, portions of this visitor class may be deprecated, including its constructors.\u003c/p\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}