{
  "packageName": "javax.tools",
  "simpleName": "CompilationTask",
  "moduleName": "java.compiler",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.util.concurrent.Callable",
    "parameters": [
      {
        "name": "java.lang.Boolean",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "moduleNames"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addModules",
      "comment": "Adds root modules to be taken into account during module resolution. Invalid module names may cause either IllegalArgumentException to be thrown, or diagnostics to be reported when the task is started.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emoduleNames\u003c/code\u003e - the names of the root modules"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - may be thrown for some invalid module names",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the task has started"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.annotation.processing.Processor",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "processors"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setProcessors",
      "comment": "Sets processors (for annotation processing). This will bypass the normal discovery mechanism.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprocessors\u003c/code\u003e - processors (for annotation processing)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the task has started"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "locale"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setLocale",
      "comment": "Sets the locale to be applied when formatting diagnostics and other localized data.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elocale\u003c/code\u003e - the locale to apply; \n\u003ccode\u003enull\u003c/code\u003e means apply no locale"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the task has started"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "call",
      "comment": "Performs this compilation task. The compilation may only be performed once. Subsequent calls to this method throw IllegalStateException.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/Callable.html#call()\"\u003ecall\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/Callable.html\" title\u003d\"interface in java.util.concurrent\"\u003eCallable\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Boolean.html\" title\u003d\"class in java.lang\"\u003eBoolean\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimeException.html\" title\u003d\"class in java.lang\"\u003eRuntimeException\u003c/a\u003e\u003c/code\u003e - if an unrecoverable error occurred in a user-supplied component. The \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html#getCause()\"\u003ecause\u003c/a\u003e will be the error in user code.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if called more than once"
        ],
        "return": [
          "true if and only all the files compiled without errors; false otherwise"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 521,
  "name": "javax.tools.JavaCompiler$CompilationTask",
  "comment": "Interface representing a future for a compilation task. The compilation task has not yet started. To start the task, call the \n\u003ca href\u003d\"#call()\"\u003ecall\u003c/a\u003e method. \n\u003cp\u003eBefore calling the \u003ccode\u003ecall\u003c/code\u003e method, additional aspects of the task can be configured, for example, by calling the \u003ca href\u003d\"#setProcessors(java.lang.Iterable)\"\u003esetProcessors\u003c/a\u003e method.\u003c/p\u003e",
  "tagMap": {}
}