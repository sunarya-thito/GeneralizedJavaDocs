{
  "packageName": "javax.tools",
  "simpleName": "DocumentationTool",
  "moduleName": "java.compiler",
  "type": "INTERFACE",
  "interfaces": [
    {
      "name": "javax.tools.Tool",
      "type": "Class"
    },
    {
      "name": "javax.tools.OptionChecker",
      "type": "Class"
    }
  ],
  "members": [
    {
      "returnType": {
        "name": "javax.tools.DocumentationTool$DocumentationTask",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTask",
      "comment": "Creates a future for a documentation task with the given components and arguments. The task might not have completed as described in the DocumentationTask interface. If a file manager is provided, it must be able to handle all locations defined in DocumentationTool.Location, as well as StandardLocation.SOURCE_PATH, StandardLocation.CLASS_PATH, and StandardLocation.PLATFORM_CLASS_PATH.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - a Writer for additional output from the tool; use \n\u003ccode\u003eSystem.err\u003c/code\u003e if \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003efileManager\u003c/code\u003e - a file manager; if \n\u003ccode\u003enull\u003c/code\u003e use the tool\u0027s standard file manager",
          "\u003ccode\u003ediagnosticListener\u003c/code\u003e - a diagnostic listener; if \n\u003ccode\u003enull\u003c/code\u003e use the tool\u0027s default method for reporting diagnostics",
          "\u003ccode\u003edocletClass\u003c/code\u003e - a class providing the necessary methods required of a doclet; a value of \n\u003ccode\u003enull\u003c/code\u003e means to use the standard doclet.",
          "\u003ccode\u003eoptions\u003c/code\u003e - documentation tool options and doclet options, \n\u003ccode\u003enull\u003c/code\u003e means no options",
          "\u003ccode\u003ecompilationUnits\u003c/code\u003e - the compilation units to compile, \n\u003ccode\u003e null\u003c/code\u003e means no compilation units"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimeException.html\" title\u003d\"class in java.lang\"\u003eRuntimeException\u003c/a\u003e\u003c/code\u003e - if an unrecoverable error occurred in a user supplied component. The \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html#getCause()\"\u003ecause\u003c/a\u003e will be the error in user code.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if any of the given compilation units are of other kind than \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/JavaFileObject.Kind.html#SOURCE\"\u003esource\u003c/a\u003e"
        ],
        "return": [
          "an object representing the compilation"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.tools.StandardJavaFileManager",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getStandardFileManager",
      "comment": "Returns a new instance of the standard file manager implementation for this tool. The file manager will use the given diagnostic listener for producing any non-fatal diagnostics. Fatal errors will be signaled with the appropriate exceptions. The standard file manager will be automatically reopened if it is accessed after calls to flush or close. The standard file manager must be usable with other tools.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ediagnosticListener\u003c/code\u003e - a diagnostic listener for non-fatal diagnostics; if \n\u003ccode\u003enull\u003c/code\u003e use the compiler\u0027s default method for reporting diagnostics",
          "\u003ccode\u003elocale\u003c/code\u003e - the locale to apply when formatting diagnostics; \n\u003ccode\u003enull\u003c/code\u003e means the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.html#getDefault()\"\u003edefault locale\u003c/a\u003e.",
          "\u003ccode\u003echarset\u003c/code\u003e - the character set used for decoding bytes; if \n\u003ccode\u003enull\u003c/code\u003e use the platform default"
        ],
        "return": [
          "the standard file manager"
        ]
      }
    }
  ],
  "innerClasses": [
    "javax.tools.DocumentationTool$DocumentationTask",
    "javax.tools.DocumentationTool$Location"
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.tools.DocumentationTool",
  "comment": "Interface to invoke Java programming language documentation tools from programs.",
  "tagMap": {
    "since": [
      "1.8"
    ]
  }
}