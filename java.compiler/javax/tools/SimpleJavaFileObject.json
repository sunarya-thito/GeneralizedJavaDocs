{
  "packageName": "javax.tools",
  "simpleName": "SimpleJavaFileObject",
  "moduleName": "java.compiler",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.net.URI",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 20,
      "name": "uri",
      "comment": "A URI for this file object.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.tools.JavaFileObject$Kind",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 20,
      "name": "kind",
      "comment": "The kind of this file object.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.net.URI",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toUri",
      "comment": "Description copied from interface: FileObject",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html#toUri()\"\u003etoUri\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html\" title\u003d\"interface in javax.tools\"\u003eFileObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a URI"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getName",
      "comment": "Description copied from interface: FileObject",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html#getName()\"\u003egetName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html\" title\u003d\"interface in javax.tools\"\u003eFileObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a user-friendly name"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.InputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "openInputStream",
      "comment": "This implementation always throws UnsupportedOperationException. Subclasses can change this behavior as long as the contract of FileObject is obeyed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html#openInputStream()\"\u003eopenInputStream\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html\" title\u003d\"interface in javax.tools\"\u003eFileObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurred"
        ],
        "return": [
          "an InputStream"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.OutputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "openOutputStream",
      "comment": "This implementation always throws UnsupportedOperationException. Subclasses can change this behavior as long as the contract of FileObject is obeyed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html#openOutputStream()\"\u003eopenOutputStream\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html\" title\u003d\"interface in javax.tools\"\u003eFileObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurred"
        ],
        "return": [
          "an OutputStream"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.Reader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "ignoreEncodingErrors"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "openReader",
      "comment": "Wraps the result of getCharContent(boolean) in a Reader. Subclasses can change this behavior as long as the contract of FileObject is obeyed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html#openReader(boolean)\"\u003eopenReader\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html\" title\u003d\"interface in javax.tools\"\u003eFileObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eignoreEncodingErrors\u003c/code\u003e - ignore encoding errors if true"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if this file object was opened for writing and does not support reading",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if this kind of file object does not support character access",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurred"
        ],
        "return": [
          "a Reader wrapping the result of getCharContent"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.CharSequence",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "ignoreEncodingErrors"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCharContent",
      "comment": "This implementation always throws UnsupportedOperationException. Subclasses can change this behavior as long as the contract of FileObject is obeyed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html#getCharContent(boolean)\"\u003egetCharContent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html\" title\u003d\"interface in javax.tools\"\u003eFileObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eignoreEncodingErrors\u003c/code\u003e - ignore encoding errors if true"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurred"
        ],
        "return": [
          "a CharSequence if available; \n\u003ccode\u003enull\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.Writer",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "openWriter",
      "comment": "Wraps the result of openOutputStream in a Writer. Subclasses can change this behavior as long as the contract of FileObject is obeyed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html#openWriter()\"\u003eopenWriter\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html\" title\u003d\"interface in javax.tools\"\u003eFileObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if this file object was opened for reading and does not support writing",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if this kind of file object does not support character access",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurred"
        ],
        "return": [
          "a Writer wrapping the result of openOutputStream"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLastModified",
      "comment": "This implementation returns 0L. Subclasses can change this behavior as long as the contract of FileObject is obeyed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html#getLastModified()\"\u003egetLastModified\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html\" title\u003d\"interface in javax.tools\"\u003eFileObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003e0L\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "delete",
      "comment": "This implementation does nothing. Subclasses can change this behavior as long as the contract of FileObject is obeyed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html#delete()\"\u003edelete\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/FileObject.html\" title\u003d\"interface in javax.tools\"\u003eFileObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.tools.JavaFileObject$Kind",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getKind",
      "comment": "Description copied from interface: JavaFileObject",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/JavaFileObject.html#getKind()\"\u003egetKind\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/JavaFileObject.html\" title\u003d\"interface in javax.tools\"\u003eJavaFileObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003ethis.kind\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "simpleName"
          }
        },
        {
          "type": {
            "name": "javax.tools.JavaFileObject$Kind",
            "type": "Class"
          },
          "field": {
            "name": "kind"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isNameCompatible",
      "comment": "This implementation compares the path of its URI to the given simple name. This method returns true if the given kind is equal to the kind of this object, and if the path is equal to simpleName + kind.extension or if it ends with \"/\" + simpleName + kind.extension. This method calls getKind() and toUri() and does not access the fields uri and kind directly. Subclasses can change this behavior as long as the contract of JavaFileObject is obeyed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/JavaFileObject.html#isNameCompatible(java.lang.String,javax.tools.JavaFileObject.Kind)\"\u003eisNameCompatible\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/JavaFileObject.html\" title\u003d\"interface in javax.tools\"\u003eJavaFileObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esimpleName\u003c/code\u003e - a simple name of a class",
          "\u003ccode\u003ekind\u003c/code\u003e - a kind"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this file object is compatible; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.lang.model.element.NestingKind",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNestingKind",
      "comment": "This implementation returns null. Subclasses can change this behavior as long as the contract of JavaFileObject is obeyed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/JavaFileObject.html#getNestingKind()\"\u003egetNestingKind\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/JavaFileObject.html\" title\u003d\"interface in javax.tools\"\u003eJavaFileObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the nesting kind, or \n\u003ccode\u003enull\u003c/code\u003e if the nesting kind is not known"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.lang.model.element.Modifier",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAccessLevel",
      "comment": "This implementation returns null. Subclasses can change this behavior as long as the contract of JavaFileObject is obeyed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/JavaFileObject.html#getAccessLevel()\"\u003egetAccessLevel\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/JavaFileObject.html\" title\u003d\"interface in javax.tools\"\u003eJavaFileObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the access level"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.net.URI",
            "type": "Class"
          },
          "field": {
            "name": "uri"
          }
        },
        {
          "type": {
            "name": "javax.tools.JavaFileObject$Kind",
            "type": "Class"
          },
          "field": {
            "name": "kind"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Construct a SimpleJavaFileObject of the given kind and with the given URI.",
      "tagMap": {
        "param": [
          "\u003ccode\u003euri\u003c/code\u003e - the URI for this file object",
          "\u003ccode\u003ekind\u003c/code\u003e - the kind of this file object"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.tools.SimpleJavaFileObject",
  "comment": "Provides simple implementations for most methods in JavaFileObject. This class is designed to be subclassed and used as a basis for JavaFileObject implementations. Subclasses can override the implementation and specification of any method of this class as long as the general contract of JavaFileObject is obeyed.",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}