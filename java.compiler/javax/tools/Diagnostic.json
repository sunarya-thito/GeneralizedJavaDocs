{
  "packageName": "javax.tools",
  "simpleName": "Diagnostic",
  "moduleName": "java.compiler",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "long",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "NOPOS",
      "comment": "Used to signal that no position is available.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.tools.Diagnostic.NOPOS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.tools.Diagnostic$Kind",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getKind",
      "comment": "Returns the kind of this diagnostic, for example, error or warning.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the kind of this diagnostic"
        ]
      }
    },
    {
      "returnType": {
        "owner": "javax.tools.Diagnostic",
        "name": "S",
        "type": "Variable"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSource",
      "comment": "Returns the source object associated with this diagnostic.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the source object associated with this diagnostic. \n\u003ccode\u003enull\u003c/code\u003e if no source object is associated with the diagnostic."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPosition",
      "comment": "Returns a character offset from the beginning of the source object associated with this diagnostic that indicates the location of the problem. In addition, the following must be true: getStartPosition() \u003c\u003d getPosition() getPosition() \u003c\u003d getEndPosition()",
      "annotations": [],
      "tagMap": {
        "return": [
          "character offset from beginning of source; \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/Diagnostic.html#NOPOS\"\u003e\u003ccode\u003eNOPOS\u003c/code\u003e\u003c/a\u003e if \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/Diagnostic.html#getSource()\"\u003e\u003ccode\u003egetSource()\u003c/code\u003e\u003c/a\u003e would return \n\u003ccode\u003enull\u003c/code\u003e or if no location is suitable"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getStartPosition",
      "comment": "Returns the character offset from the beginning of the file associated with this diagnostic that indicates the start of the problem.",
      "annotations": [],
      "tagMap": {
        "return": [
          "offset from beginning of file; \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/Diagnostic.html#NOPOS\"\u003e\u003ccode\u003eNOPOS\u003c/code\u003e\u003c/a\u003e if and only if \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/Diagnostic.html#getPosition()\"\u003e\u003ccode\u003egetPosition()\u003c/code\u003e\u003c/a\u003e returns \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/Diagnostic.html#NOPOS\"\u003e\u003ccode\u003eNOPOS\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEndPosition",
      "comment": "Returns the character offset from the beginning of the file associated with this diagnostic that indicates the end of the problem.",
      "annotations": [],
      "tagMap": {
        "return": [
          "offset from beginning of file; \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/Diagnostic.html#NOPOS\"\u003e\u003ccode\u003eNOPOS\u003c/code\u003e\u003c/a\u003e if and only if \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/Diagnostic.html#getPosition()\"\u003e\u003ccode\u003egetPosition()\u003c/code\u003e\u003c/a\u003e returns \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/Diagnostic.html#NOPOS\"\u003e\u003ccode\u003eNOPOS\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getLineNumber",
      "comment": "Returns the line number of the character offset returned by getPosition().",
      "annotations": [],
      "tagMap": {
        "return": [
          "a line number or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/Diagnostic.html#NOPOS\"\u003e\u003ccode\u003eNOPOS\u003c/code\u003e\u003c/a\u003e if and only if \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/Diagnostic.html#getPosition()\"\u003e\u003ccode\u003egetPosition()\u003c/code\u003e\u003c/a\u003e returns \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/Diagnostic.html#NOPOS\"\u003e\u003ccode\u003eNOPOS\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getColumnNumber",
      "comment": "Returns the column number of the character offset returned by getPosition().",
      "annotations": [],
      "tagMap": {
        "return": [
          "a column number or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/Diagnostic.html#NOPOS\"\u003e\u003ccode\u003eNOPOS\u003c/code\u003e\u003c/a\u003e if and only if \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/Diagnostic.html#getPosition()\"\u003e\u003ccode\u003egetPosition()\u003c/code\u003e\u003c/a\u003e returns \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.compiler/javax/tools/Diagnostic.html#NOPOS\"\u003e\u003ccode\u003eNOPOS\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCode",
      "comment": "Returns a diagnostic code indicating the type of diagnostic. The code is implementation-dependent and might be null.",
      "annotations": [],
      "tagMap": {
        "return": [
          "a diagnostic code"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMessage",
      "comment": "Returns a localized message for the given locale. The actual message is implementation-dependent. If the locale is null use the default locale.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elocale\u003c/code\u003e - a locale; might be \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "a localized message"
        ]
      }
    }
  ],
  "innerClasses": [
    "javax.tools.Diagnostic$Kind"
  ],
  "genericParameters": [
    {
      "name": "S",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.tools.Diagnostic",
  "comment": "Interface for diagnostics from tools. A diagnostic usually reports a problem at a specific position in a source file. However, not all diagnostics are associated with a position or a file. \n\u003cp\u003eA position is a zero-based character offset from the beginning of a file. Negative values (except \u003ca href\u003d\"#NOPOS\"\u003e\u003ccode\u003eNOPOS\u003c/code\u003e\u003c/a\u003e) are not valid positions. \u003c/p\u003e\n\u003cp\u003eLine and column numbers begin at 1. Negative values (except \u003ca href\u003d\"#NOPOS\"\u003e\u003ccode\u003eNOPOS\u003c/code\u003e\u003c/a\u003e) and 0 are not valid line or column numbers.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}