{
  "packageName": "javax.tools",
  "simpleName": "DiagnosticListener",
  "moduleName": "java.compiler",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.tools.Diagnostic",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.tools.DiagnosticListener",
                    "name": "S",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "diagnostic",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "report",
      "comment": "Invoked when a problem is found.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ediagnostic\u003c/code\u003e - a diagnostic representing the problem that was found"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the diagnostic argument is \n\u003ccode\u003enull\u003c/code\u003e and the implementation cannot handle \n\u003ccode\u003enull\u003c/code\u003e arguments"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "S",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.tools.DiagnosticListener",
  "comment": "Interface for receiving diagnostics from tools.",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}