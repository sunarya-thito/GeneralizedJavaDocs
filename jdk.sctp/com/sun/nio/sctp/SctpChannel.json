{
  "packageName": "com.sun.nio.sctp",
  "simpleName": "SctpChannel",
  "moduleName": "jdk.sctp",
  "type": "CLASS",
  "superClass": {
    "name": "java.nio.channels.spi.AbstractSelectableChannel",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "com.sun.nio.sctp.SctpChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "open",
      "comment": "Opens an SCTP channel. The new channel is unbound and unconnected.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If the SCTP protocol is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "A new SCTP channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.SctpChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.SocketAddress",
            "type": "Class"
          },
          "field": {
            "name": "remote"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "maxOutStreams"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "maxInStreams"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "open",
      "comment": "Opens an SCTP channel and connects it to a remote address. This is a convenience method and is equivalent to evaluating the following expression:  open().connect(remote, maxOutStreams, maxInStreams);",
      "tagMap": {
        "param": [
          "\u003ccode\u003eremote\u003c/code\u003e - The remote address to which the new channel is to be connected",
          "\u003ccode\u003emaxOutStreams\u003c/code\u003e - The number of streams that the application wishes to be able to send to. Must be non negative and no larger than \n\u003ccode\u003e65536\u003c/code\u003e. \n\u003ccode\u003e0\u003c/code\u003e to use the endpoints default value.",
          "\u003ccode\u003emaxInStreams\u003c/code\u003e - The maximum number of inbound streams the application is prepared to support. Must be non negative and no larger than \n\u003ccode\u003e65536\u003c/code\u003e. \n\u003ccode\u003e0\u003c/code\u003e to use the endpoints default value."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AsynchronousCloseException.html\" title\u003d\"class in java.nio.channels\"\u003eAsynchronousCloseException\u003c/a\u003e\u003c/code\u003e - If another thread closes this channel while the connect operation is in progress",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedByInterruptException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedByInterruptException\u003c/a\u003e\u003c/code\u003e - If another thread interrupts the current thread while the connect operation is in progress, thereby closing the channel and setting the current thread\u0027s interrupt status",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/UnresolvedAddressException.html\" title\u003d\"class in java.nio.channels\"\u003eUnresolvedAddressException\u003c/a\u003e\u003c/code\u003e - If the given remote address is not fully resolved",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/UnsupportedAddressTypeException.html\" title\u003d\"class in java.nio.channels\"\u003eUnsupportedAddressTypeException\u003c/a\u003e\u003c/code\u003e - If the type of the given remote address is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and it does not permit access to the given remote peer",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If the SCTP protocol is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "A new SCTP channel connected to the given address"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.Association",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "association",
      "comment": "Returns the association on this channel\u0027s socket.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If the channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "the association, or \n\u003ccode\u003enull\u003c/code\u003e if the channel\u0027s socket is not connected."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.SctpChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.SocketAddress",
            "type": "Class"
          },
          "field": {
            "name": "local"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "bind",
      "comment": "Binds the channel\u0027s socket to a local address. This method is used to establish a relationship between the socket and the local addresses. Once a relationship is established then the socket remains bound until the channel is closed. This relationship may not necesssarily be with the address local as it may be removed by unbindAddress, but there will always be at least one local address bound to the channel\u0027s socket once an invocation of this method successfully completes. Once the channel\u0027s socket has been successfully bound to a specific address, that is not automatically assigned, more addresses may be bound to it using bindAddress, or removed using unbindAddress.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elocal\u003c/code\u003e - The local address to bind the socket, or \n\u003ccode\u003enull\u003c/code\u003e to bind the socket to an automatically assigned socket address"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AlreadyConnectedException.html\" title\u003d\"class in java.nio.channels\"\u003eAlreadyConnectedException\u003c/a\u003e\u003c/code\u003e - If this channel is already connected",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ConnectionPendingException.html\" title\u003d\"class in java.nio.channels\"\u003eConnectionPendingException\u003c/a\u003e\u003c/code\u003e - If a non-blocking connection operation is already in progress on this channel",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AlreadyBoundException.html\" title\u003d\"class in java.nio.channels\"\u003eAlreadyBoundException\u003c/a\u003e\u003c/code\u003e - If this channel is already bound",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/UnsupportedAddressTypeException.html\" title\u003d\"class in java.nio.channels\"\u003eUnsupportedAddressTypeException\u003c/a\u003e\u003c/code\u003e - If the type of the given address is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkListen(int)\"\u003e\u003ccode\u003echeckListen\u003c/code\u003e\u003c/a\u003e method denies the operation"
        ],
        "return": [
          "This channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.SctpChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.InetAddress",
            "type": "Class"
          },
          "field": {
            "name": "address"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "bindAddress",
      "comment": "Adds the given address to the bound addresses for the channel\u0027s socket. The given address must not be the wildcard address. The channel must be first bound using bind before invoking this method, otherwise NotYetBoundException is thrown. The bind method takes a SocketAddress as its argument which typically contains a port number as well as an address. Addresses subquently bound using this method are simply addresses as the SCTP port number remains the same for the lifetime of the channel. Adding addresses to a connected association is optional functionality. If the endpoint supports dynamic address reconfiguration then it may send the appropriate message to the peer to change the peers address lists.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eaddress\u003c/code\u003e - The address to add to the bound addresses for the socket"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ConnectionPendingException.html\" title\u003d\"class in java.nio.channels\"\u003eConnectionPendingException\u003c/a\u003e\u003c/code\u003e - If a non-blocking connection operation is already in progress on this channel",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NotYetBoundException.html\" title\u003d\"class in java.nio.channels\"\u003eNotYetBoundException\u003c/a\u003e\u003c/code\u003e - If this channel is not yet bound",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AlreadyBoundException.html\" title\u003d\"class in java.nio.channels\"\u003eAlreadyBoundException\u003c/a\u003e\u003c/code\u003e - If this channel is already bound to the given address",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If address is \n\u003ccode\u003enull\u003c/code\u003e or the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/InetAddress.html#isAnyLocalAddress()\"\u003e\u003ccode\u003ewildcard\u003c/code\u003e\u003c/a\u003e address",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "This channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.SctpChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.InetAddress",
            "type": "Class"
          },
          "field": {
            "name": "address"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "unbindAddress",
      "comment": "Removes the given address from the bound addresses for the channel\u0027s socket. The given address must not be the wildcard address. The channel must be first bound using bind before invoking this method, otherwise NotYetBoundException is thrown. If this method is invoked on a channel that does not have address as one of its bound addresses or that has only one local address bound to it, then this method throws IllegalUnbindException. The initial address that the channel\u0027s socket is bound to using bind may be removed from the bound addresses for the channel\u0027s socket. Removing addresses from a connected association is optional functionality. If the endpoint supports dynamic address reconfiguration then it may send the appropriate message to the peer to change the peers address lists.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eaddress\u003c/code\u003e - The address to remove from the bound addresses for the socket"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ConnectionPendingException.html\" title\u003d\"class in java.nio.channels\"\u003eConnectionPendingException\u003c/a\u003e\u003c/code\u003e - If a non-blocking connection operation is already in progress on this channel",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NotYetBoundException.html\" title\u003d\"class in java.nio.channels\"\u003eNotYetBoundException\u003c/a\u003e\u003c/code\u003e - If this channel is not yet bound",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If address is \n\u003ccode\u003enull\u003c/code\u003e or the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/InetAddress.html#isAnyLocalAddress()\"\u003e\u003ccode\u003ewildcard\u003c/code\u003e\u003c/a\u003e address",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.sctp/com/sun/nio/sctp/IllegalUnbindException.html\" title\u003d\"class in com.sun.nio.sctp\"\u003eIllegalUnbindException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003eaddress\u003c/code\u003e is not bound to the channel\u0027s socket. or the channel has only one address bound to it",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "This channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.SocketAddress",
            "type": "Class"
          },
          "field": {
            "name": "remote"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "connect",
      "comment": "Connects this channel\u0027s socket. If this channel is in non-blocking mode then an invocation of this method initiates a non-blocking connection operation. If the connection is established immediately, as can happen with a local connection, then this method returns true. Otherwise this method returns false and the connection operation must later be completed by invoking the finishConnect method. If this channel is in blocking mode then an invocation of this method will block until the connection is established or an I/O error occurs. If a security manager has been installed then this method verifies that its checkConnect method permits connecting to the address and port number of the given remote peer. This method may be invoked at any time. If a send or receive operation upon this channel is invoked while an invocation of this method is in progress then that operation will first block until this invocation is complete. If a connection attempt is initiated but fails, that is, if an invocation of this method throws a checked exception, then the channel will be closed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eremote\u003c/code\u003e - The remote peer to which this channel is to be connected"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AlreadyConnectedException.html\" title\u003d\"class in java.nio.channels\"\u003eAlreadyConnectedException\u003c/a\u003e\u003c/code\u003e - If this channel is already connected",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ConnectionPendingException.html\" title\u003d\"class in java.nio.channels\"\u003eConnectionPendingException\u003c/a\u003e\u003c/code\u003e - If a non-blocking connection operation is already in progress on this channel",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AsynchronousCloseException.html\" title\u003d\"class in java.nio.channels\"\u003eAsynchronousCloseException\u003c/a\u003e\u003c/code\u003e - If another thread closes this channel while the connect operation is in progress",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedByInterruptException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedByInterruptException\u003c/a\u003e\u003c/code\u003e - If another thread interrupts the current thread while the connect operation is in progress, thereby closing the channel and setting the current thread\u0027s interrupt status",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/UnresolvedAddressException.html\" title\u003d\"class in java.nio.channels\"\u003eUnresolvedAddressException\u003c/a\u003e\u003c/code\u003e - If the given remote address is not fully resolved",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/UnsupportedAddressTypeException.html\" title\u003d\"class in java.nio.channels\"\u003eUnsupportedAddressTypeException\u003c/a\u003e\u003c/code\u003e - If the type of the given remote address is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and it does not permit access to the given remote peer",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if a connection was established, \n\u003ccode\u003efalse\u003c/code\u003e if this channel is in non-blocking mode and the connection operation is in progress"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.SocketAddress",
            "type": "Class"
          },
          "field": {
            "name": "remote"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "maxOutStreams"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "maxInStreams"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "connect",
      "comment": "Connects this channel\u0027s socket. This is a convience method and is equivalent to evaluating the following expression:  setOption(SctpStandardSocketOptions.SCTP_INIT_MAXSTREAMS, SctpStandardSocketOption.InitMaxStreams.create(maxInStreams, maxOutStreams))\n  .connect(remote);\n The maxOutStreams and maxInStreams parameters represent the maximum number of streams that the application wishes to be able to send to and receive from. They are negotiated with the remote peer and may be limited by the operating system.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eremote\u003c/code\u003e - The remote peer to which this channel is to be connected",
          "\u003ccode\u003emaxOutStreams\u003c/code\u003e - Must be non negative and no larger than \n\u003ccode\u003e65536\u003c/code\u003e. \n\u003ccode\u003e0\u003c/code\u003e to use the endpoints default value.",
          "\u003ccode\u003emaxInStreams\u003c/code\u003e - Must be non negative and no larger than \n\u003ccode\u003e65536\u003c/code\u003e. \n\u003ccode\u003e0\u003c/code\u003e to use the endpoints default value."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AlreadyConnectedException.html\" title\u003d\"class in java.nio.channels\"\u003eAlreadyConnectedException\u003c/a\u003e\u003c/code\u003e - If this channel is already connected",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ConnectionPendingException.html\" title\u003d\"class in java.nio.channels\"\u003eConnectionPendingException\u003c/a\u003e\u003c/code\u003e - If a non-blocking connection operation is already in progress on this channel",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AsynchronousCloseException.html\" title\u003d\"class in java.nio.channels\"\u003eAsynchronousCloseException\u003c/a\u003e\u003c/code\u003e - If another thread closes this channel while the connect operation is in progress",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedByInterruptException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedByInterruptException\u003c/a\u003e\u003c/code\u003e - If another thread interrupts the current thread while the connect operation is in progress, thereby closing the channel and setting the current thread\u0027s interrupt status",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/UnresolvedAddressException.html\" title\u003d\"class in java.nio.channels\"\u003eUnresolvedAddressException\u003c/a\u003e\u003c/code\u003e - If the given remote address is not fully resolved",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/UnsupportedAddressTypeException.html\" title\u003d\"class in java.nio.channels\"\u003eUnsupportedAddressTypeException\u003c/a\u003e\u003c/code\u003e - If the type of the given remote address is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and it does not permit access to the given remote peer",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if a connection was established, \n\u003ccode\u003efalse\u003c/code\u003e if this channel is in non-blocking mode and the connection operation is in progress"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "isConnectionPending",
      "comment": "Tells whether or not a connection operation is in progress on this channel.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if, and only if, a connection operation has been initiated on this channel but not yet completed by invoking the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.sctp/com/sun/nio/sctp/SctpChannel.html#finishConnect()\"\u003e\u003ccode\u003efinishConnect()\u003c/code\u003e\u003c/a\u003e method"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "finishConnect",
      "comment": "Finishes the process of connecting an SCTP channel. A non-blocking connection operation is initiated by placing a socket channel in non-blocking mode and then invoking one of its connect methods. Once the connection is established, or the attempt has failed, the channel will become connectable and this method may be invoked to complete the connection sequence. If the connection operation failed then invoking this method will cause an appropriate IOException to be thrown. If this channel is already connected then this method will not block and will immediately return true. If this channel is in non-blocking mode then this method will return false if the connection process is not yet complete. If this channel is in blocking mode then this method will block until the connection either completes or fails, and will always either return true or throw a checked exception describing the failure. This method may be invoked at any time. If a send or receive operation upon this channel is invoked while an invocation of this method is in progress then that operation will first block until this invocation is complete. If a connection attempt fails, that is, if an invocation of this method throws a checked exception, then the channel will be closed.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NoConnectionPendingException.html\" title\u003d\"class in java.nio.channels\"\u003eNoConnectionPendingException\u003c/a\u003e\u003c/code\u003e - If this channel is not connected and a connection operation has not been initiated",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AsynchronousCloseException.html\" title\u003d\"class in java.nio.channels\"\u003eAsynchronousCloseException\u003c/a\u003e\u003c/code\u003e - If another thread closes this channel while the connect operation is in progress",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedByInterruptException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedByInterruptException\u003c/a\u003e\u003c/code\u003e - If another thread interrupts the current thread while the connect operation is in progress, thereby closing the channel and setting the current thread\u0027s interrupt status",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if, and only if, this channel\u0027s socket is now connected"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.net.SocketAddress",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getAllLocalAddresses",
      "comment": "Returns all of the socket addresses to which this channel\u0027s socket is bound.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If the channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "All the socket addresses that this channel\u0027s socket is bound to, or an empty \n\u003ccode\u003eSet\u003c/code\u003e if the channel\u0027s socket is not bound"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.net.SocketAddress",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getRemoteAddresses",
      "comment": "Returns all of the remote addresses to which this channel\u0027s socket is connected. If the channel is connected to a remote peer that is bound to multiple addresses then it is these addresses that the channel\u0027s socket is connected.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If the channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "All of the remote addresses to which this channel\u0027s socket is connected, or an empty \n\u003ccode\u003eSet\u003c/code\u003e if the channel\u0027s socket is not connected"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.SctpChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "shutdown",
      "comment": "Shutdown a connection without closing the channel. Sends a shutdown command to the remote peer, effectively preventing any new data from being written to the socket by either peer. Further sends will throw ClosedChannelException. The channel remains open to allow the for any data (and notifications) to be received that may have been sent by the peer before it received the shutdown command. If the channel is already shutdown then invoking this method has no effect.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NotYetConnectedException.html\" title\u003d\"class in java.nio.channels\"\u003eNotYetConnectedException\u003c/a\u003e\u003c/code\u003e - If this channel is not yet connected",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "This channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "com.sun.nio.sctp.SctpSocketOption",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getOption",
      "comment": "Returns the value of a socket option.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - The type of the socket option value"
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.sctp/com/sun/nio/sctp/SctpStandardSocketOptions.html\" title\u003d\"class in com.sun.nio.sctp\"\u003e\u003ccode\u003eSctpStandardSocketOptions\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The socket option"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If the socket option is not supported by this channel",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "The value of the socket option. A value of \n\u003ccode\u003enull\u003c/code\u003e may be a valid value for some socket options."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.SctpChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "com.sun.nio.sctp.SctpSocketOption",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "T",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "setOption",
      "comment": "Sets the value of a socket option.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - The type of the socket option value"
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.sctp/com/sun/nio/sctp/SctpStandardSocketOptions.html\" title\u003d\"class in com.sun.nio.sctp\"\u003e\u003ccode\u003eSctpStandardSocketOptions\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The socket option",
          "\u003ccode\u003evalue\u003c/code\u003e - The value of the socket option. A value of \n\u003ccode\u003enull\u003c/code\u003e may be a valid value for some socket options."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If the socket option is not supported by this channel",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the value is not a valid value for this socket option",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "This channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "com.sun.nio.sctp.SctpSocketOption",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "supportedOptions",
      "comment": "Returns a set of the socket options supported by this channel. This method will continue to return the set of options even after the channel has been closed.",
      "tagMap": {
        "return": [
          "A set of the socket options supported by this channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "validOps",
      "comment": "Returns an operation set identifying this channel\u0027s supported operations. SCTP channels support connecting, reading, and writing, so this method returns (SelectionKey.OP_CONNECT | SelectionKey.OP_READ | SelectionKey.OP_WRITE).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/SelectableChannel.html#validOps()\"\u003evalidOps\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/SelectableChannel.html\" title\u003d\"class in java.nio.channels\"\u003eSelectableChannel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "The valid-operation set"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.MessageInfo",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.nio.ByteBuffer",
            "type": "Class"
          },
          "field": {
            "name": "dst"
          }
        },
        {
          "type": {
            "name": "T",
            "type": "Class"
          },
          "field": {
            "name": "attachment"
          }
        },
        {
          "type": {
            "name": "com.sun.nio.sctp.NotificationHandler",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "handler"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "receive",
      "comment": "Receives a message into the given buffer and/or handles a notification. If a message or notification is immediately available, or if this channel is in blocking mode and one eventually becomes available, then the message or notification is returned or handled, respectively. If this channel is in non-blocking mode and a message or notification is not immediately available then this method immediately returns null. If this method receives a message it is copied into the given byte buffer. The message is transferred into the given byte buffer starting at its current position and the buffers position is incremented by the number of bytes read. If there are fewer bytes remaining in the buffer than are required to hold the message, or the underlying input buffer does not contain the complete message, then an invocation of isComplete on the returned MessageInfo will return false, and more invocations of this method will be necessary to completely consume the messgae. Only one message at a time will be partially delivered in any stream. The socket option SCTP_FRAGMENT_INTERLEAVE controls various aspects of what interlacing of messages occurs. If this method receives a notification then the appropriate method of the given handler, if there is one, is invoked. If the handler returns CONTINUE then this method will try to receive another message/notification, otherwise, if RETURN is returned this method will return null. If an uncaught exception is thrown by the handler it will be propagated up the stack through this method. This method may be invoked at any time. If another thread has already initiated a receive operation upon this channel, then an invocation of this method will block until the first operation is complete. The given handler is invoked without holding any locks used to enforce the above synchronization policy, that way handlers will not stall other threads from receiving. A handler should not invoke the receive method of this channel, if it does an IllegalReceiveException will be thrown.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - The type of the attachment"
        ],
        "param": [
          "\u003ccode\u003edst\u003c/code\u003e - The buffer into which message bytes are to be transferred",
          "\u003ccode\u003eattachment\u003c/code\u003e - The object to attach to the receive operation; can be \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003ehandler\u003c/code\u003e - A handler to handle notifications from the SCTP stack, or \n\u003ccode\u003e null\u003c/code\u003e to ignore any notifications."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AsynchronousCloseException.html\" title\u003d\"class in java.nio.channels\"\u003eAsynchronousCloseException\u003c/a\u003e\u003c/code\u003e - If another thread closes this channel while the read operation is in progress",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedByInterruptException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedByInterruptException\u003c/a\u003e\u003c/code\u003e - If another thread interrupts the current thread while the read operation is in progress, thereby closing the channel and setting the current thread\u0027s interrupt status",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NotYetConnectedException.html\" title\u003d\"class in java.nio.channels\"\u003eNotYetConnectedException\u003c/a\u003e\u003c/code\u003e - If this channel is not yet connected",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.sctp/com/sun/nio/sctp/IllegalReceiveException.html\" title\u003d\"class in com.sun.nio.sctp\"\u003eIllegalReceiveException\u003c/a\u003e\u003c/code\u003e - If the given handler invokes the \n\u003ccode\u003ereceive\u003c/code\u003e method of this channel",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "The \n\u003ccode\u003eMessageInfo\u003c/code\u003e, \n\u003ccode\u003enull\u003c/code\u003e if this channel is in non-blocking mode and no messages are immediately available or the notification handler returns \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.sctp/com/sun/nio/sctp/HandlerResult.html#RETURN\"\u003e\u003ccode\u003eRETURN\u003c/code\u003e\u003c/a\u003e after handling a notification"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.nio.ByteBuffer",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        },
        {
          "type": {
            "name": "com.sun.nio.sctp.MessageInfo",
            "type": "Class"
          },
          "field": {
            "name": "messageInfo"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "send",
      "comment": "Sends a message via this channel. If this channel is in non-blocking mode and there is sufficient room in the underlying output buffer, or if this channel is in blocking mode and sufficient room becomes available, then the remaining bytes in the given byte buffer are transmitted as a single message. Sending a message is atomic unless explicit message completion SCTP_EXPLICIT_COMPLETE socket option is enabled on this channel\u0027s socket. The message is transferred from the byte buffer as if by a regular write operation. The bytes will be written to the stream number that is specified by streamNumber in the given messageInfo. This method may be invoked at any time. If another thread has already initiated a send operation upon this channel, then an invocation of this method will block until the first operation is complete.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - The buffer containing the message to be sent",
          "\u003ccode\u003emessageInfo\u003c/code\u003e - Ancillary data about the message to be sent"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.sctp/com/sun/nio/sctp/InvalidStreamException.html\" title\u003d\"class in com.sun.nio.sctp\"\u003eInvalidStreamException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003estreamNumner\u003c/code\u003e is negative or greater than or equal to the maximum number of outgoing streams",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AsynchronousCloseException.html\" title\u003d\"class in java.nio.channels\"\u003eAsynchronousCloseException\u003c/a\u003e\u003c/code\u003e - If another thread closes this channel while the read operation is in progress",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedByInterruptException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedByInterruptException\u003c/a\u003e\u003c/code\u003e - If another thread interrupts the current thread while the read operation is in progress, thereby closing the channel and setting the current thread\u0027s interrupt status",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NotYetConnectedException.html\" title\u003d\"class in java.nio.channels\"\u003eNotYetConnectedException\u003c/a\u003e\u003c/code\u003e - If this channel is not yet connected",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "The number of bytes sent, which will be either the number of bytes that were remaining in the messages buffer when this method was invoked or, if this channel is non-blocking, may be zero if there was insufficient room for the message in the underlying output buffer"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.nio.channels.spi.SelectorProvider",
            "type": "Class"
          },
          "field": {
            "name": "provider"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Initializes a new instance of this class.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprovider\u003c/code\u003e - The selector provider for this channel"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "com.sun.nio.sctp.SctpChannel",
  "comment": "A selectable channel for message-oriented connected SCTP sockets. \n\u003cp\u003e An SCTP channel can only control one SCTP association. An \u003ccode\u003eSCTPChannel\u003c/code\u003e is created by invoking one of the \u003ca href\u003d\"#open()\"\u003e\u003ccode\u003eopen\u003c/code\u003e\u003c/a\u003e methods of this class. A newly-created channel is open but not yet connected, that is, there is no association setup with a remote peer. An attempt to invoke an I/O operation upon an unconnected channel will cause a \u003ca href\u003d\"../../../../../java.base/java/nio/channels/NotYetConnectedException.html\" title\u003d\"class in java.nio.channels\"\u003e\u003ccode\u003eNotYetConnectedException\u003c/code\u003e\u003c/a\u003e to be thrown. An association can be setup by connecting the channel using one of its \u003ca href\u003d\"#connect(java.net.SocketAddress)\"\u003e\u003ccode\u003econnect\u003c/code\u003e\u003c/a\u003e methods. Once connected, the channel remains connected until it is closed. Whether or not a channel is connected may be determined by invoking \u003ca href\u003d\"#getRemoteAddresses()\"\u003e\u003ccode\u003egetRemoteAddresses\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e SCTP channels support \u003ci\u003enon-blocking connection:\u003c/i\u003e\u0026nbsp;A channel may be created and the process of establishing the link to the remote socket may be initiated via the \u003ca href\u003d\"#connect(java.net.SocketAddress)\"\u003e\u003ccode\u003econnect\u003c/code\u003e\u003c/a\u003e method for later completion by the \u003ca href\u003d\"#finishConnect()\"\u003e\u003ccode\u003efinishConnect\u003c/code\u003e\u003c/a\u003e method. Whether or not a connection operation is in progress may be determined by invoking the \u003ca href\u003d\"#isConnectionPending()\"\u003e\u003ccode\u003eisConnectionPending\u003c/code\u003e\u003c/a\u003e method. \u003c/p\u003e\n\u003cp\u003e Socket options are configured using the \u003ca href\u003d\"#setOption(com.sun.nio.sctp.SctpSocketOption,T)\"\u003e\u003ccode\u003esetOption\u003c/code\u003e\u003c/a\u003e method. An SCTP channel support the following options: \u003c/p\u003e\n\u003cblockquote\u003e \n \u003ctable class\u003d\"striped\"\u003e \n  \u003ccaption style\u003d\"display:none\"\u003e\n   Socket options\n  \u003c/caption\u003e \n  \u003cthead\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"col\"\u003eOption Name\u003c/th\u003e \n    \u003cth scope\u003d\"col\"\u003eDescription\u003c/th\u003e \n   \u003c/tr\u003e \n  \u003c/thead\u003e \n  \u003ctbody\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SCTP_DISABLE_FRAGMENTS\"\u003e\u003ccode\u003eSCTP_DISABLE_FRAGMENTS\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e Enables or disables message fragmentation \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SCTP_EXPLICIT_COMPLETE\"\u003e\u003ccode\u003eSCTP_EXPLICIT_COMPLETE\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e Enables or disables explicit message completion \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SCTP_FRAGMENT_INTERLEAVE\"\u003e\u003ccode\u003eSCTP_FRAGMENT_INTERLEAVE\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e Controls how the presentation of messages occur for the message receiver \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SCTP_INIT_MAXSTREAMS\"\u003e\u003ccode\u003eSCTP_INIT_MAXSTREAMS\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e The maximum number of streams requested by the local endpoint during association initialization \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SCTP_NODELAY\"\u003e\u003ccode\u003eSCTP_NODELAY\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e Enables or disable a Nagle-like algorithm \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SCTP_PRIMARY_ADDR\"\u003e\u003ccode\u003eSCTP_PRIMARY_ADDR\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e Requests that the local SCTP stack use the given peer address as the association primary \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SCTP_SET_PEER_PRIMARY_ADDR\"\u003e\u003ccode\u003eSCTP_SET_PEER_PRIMARY_ADDR\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e Requests that the peer mark the enclosed address as the association primary \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SO_SNDBUF\"\u003e\u003ccode\u003eSO_SNDBUF\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e The size of the socket send buffer \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SO_RCVBUF\"\u003e\u003ccode\u003eSO_RCVBUF\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e The size of the socket receive buffer \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SO_LINGER\"\u003e\u003ccode\u003eSO_LINGER\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e Linger on close if data is present (when configured in blocking mode only) \u003c/td\u003e \n   \u003c/tr\u003e \n  \u003c/tbody\u003e \n \u003c/table\u003e \n\u003c/blockquote\u003e Additional (implementation specific) options may also be supported. The list of options supported is obtained by invoking the \n\u003ca href\u003d\"#supportedOptions()\"\u003e\u003ccode\u003esupportedOptions\u003c/code\u003e\u003c/a\u003e method. \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e SCTP channels are safe for use by multiple concurrent threads. They support concurrent reading and writing, though at most one thread may be reading and at most one thread may be writing at any given time. The \u003ca href\u003d\"#connect(java.net.SocketAddress)\"\u003e\u003ccode\u003econnect\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"#finishConnect()\"\u003e\u003ccode\u003efinishConnect\u003c/code\u003e\u003c/a\u003e methods are mutually synchronized against each other, and an attempt to initiate a send or receive operation while an invocation of one of these methods is in progress will block until that invocation is complete.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.7"
    ]
  }
}