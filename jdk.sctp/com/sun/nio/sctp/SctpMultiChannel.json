{
  "packageName": "com.sun.nio.sctp",
  "simpleName": "SctpMultiChannel",
  "moduleName": "jdk.sctp",
  "type": "CLASS",
  "superClass": {
    "name": "java.nio.channels.spi.AbstractSelectableChannel",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "com.sun.nio.sctp.SctpMultiChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "open",
      "comment": "Opens an SCTP multi channel. The new channel is unbound.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If the SCTP protocol is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "A new SCTP multi channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "com.sun.nio.sctp.Association",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "associations",
      "comment": "Returns the open associations on this channel\u0027s socket. Only associations whose COMM_UP association change event has been received are included in the returned set of associations. Associations for which a COMM_LOST or SHUTDOWN association change event have been receive are removed from the set of associations. The returned set of associations is a snapshot of the open associations at the time that this method is invoked.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "A \n\u003ccode\u003eSet\u003c/code\u003e containing the open associations, or an empty \n\u003ccode\u003eSet\u003c/code\u003e if there are none."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.SctpMultiChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.SocketAddress",
            "type": "Class"
          },
          "field": {
            "name": "local"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "backlog"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "bind",
      "comment": "Binds the channel\u0027s socket to a local address and configures the socket to listen for connections. This method is used to establish a relationship between the socket and the local address. Once a relationship is established then the socket remains bound until the channel is closed. This relationship may not necesssarily be with the address local as it may be removed by unbindAddress, but there will always be at least one local address bound to the channel\u0027s socket once an invocation of this method successfully completes. Once the channel\u0027s socket has been successfully bound to a specific address, that is not automatically assigned, more addresses may be bound to it using bindAddress, or removed using unbindAddress. The backlog parameter is the maximum number of pending connections on the socket. Its exact semantics are implementation specific. An implementation may impose an implementation specific maximum length or may choose to ignore the parameter. If the backlog parameter has the value 0, or a negative value, then an implementation specific default is used.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elocal\u003c/code\u003e - The local address to bind the socket, or \n\u003ccode\u003enull\u003c/code\u003e to bind the socket to an automatically assigned socket address",
          "\u003ccode\u003ebacklog\u003c/code\u003e - The maximum number of pending connections"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AlreadyBoundException.html\" title\u003d\"class in java.nio.channels\"\u003eAlreadyBoundException\u003c/a\u003e\u003c/code\u003e - If this channel is already bound",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/UnsupportedAddressTypeException.html\" title\u003d\"class in java.nio.channels\"\u003eUnsupportedAddressTypeException\u003c/a\u003e\u003c/code\u003e - If the type of the given address is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkListen(int)\"\u003e\u003ccode\u003echeckListen\u003c/code\u003e\u003c/a\u003e method denies the operation",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "This channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.SctpMultiChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.SocketAddress",
            "type": "Class"
          },
          "field": {
            "name": "local"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "bind",
      "comment": "Binds the channel\u0027s socket to a local address and configures the socket to listen for connections. This method works as if invoking it were equivalent to evaluating the expression:  bind(local, 0);",
      "tagMap": {
        "param": [
          "\u003ccode\u003elocal\u003c/code\u003e - The local address to bind the socket, or \n\u003ccode\u003enull\u003c/code\u003e to bind the socket to an automatically assigned socket address"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AlreadyBoundException.html\" title\u003d\"class in java.nio.channels\"\u003eAlreadyBoundException\u003c/a\u003e\u003c/code\u003e - If this channel is already bound",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/UnsupportedAddressTypeException.html\" title\u003d\"class in java.nio.channels\"\u003eUnsupportedAddressTypeException\u003c/a\u003e\u003c/code\u003e - If the type of the given address is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkListen(int)\"\u003e\u003ccode\u003echeckListen\u003c/code\u003e\u003c/a\u003e method denies the operation",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "This channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.SctpMultiChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.InetAddress",
            "type": "Class"
          },
          "field": {
            "name": "address"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "bindAddress",
      "comment": "Adds the given address to the bound addresses for the channel\u0027s socket. The given address must not be the wildcard address. The channel must be first bound using bind before invoking this method, otherwise NotYetBoundException is thrown. The bind method takes a SocketAddress as its argument which typically contains a port number as well as an address. Addresses subquently bound using this method are simply addresses as the SCTP port number remains the same for the lifetime of the channel. New associations setup after this method successfully completes will be associated with the given address. Adding addresses to existing associations is optional functionality. If the endpoint supports dynamic address reconfiguration then it may send the appropriate message to the peer to change the peers address lists.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eaddress\u003c/code\u003e - The address to add to the bound addresses for the socket"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NotYetBoundException.html\" title\u003d\"class in java.nio.channels\"\u003eNotYetBoundException\u003c/a\u003e\u003c/code\u003e - If this channel is not yet bound",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AlreadyBoundException.html\" title\u003d\"class in java.nio.channels\"\u003eAlreadyBoundException\u003c/a\u003e\u003c/code\u003e - If this channel is already bound to the given address",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If address is \n\u003ccode\u003enull\u003c/code\u003e or the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/InetAddress.html#isAnyLocalAddress()\"\u003e\u003ccode\u003ewildcard\u003c/code\u003e\u003c/a\u003e address",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "This channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.SctpMultiChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.InetAddress",
            "type": "Class"
          },
          "field": {
            "name": "address"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "unbindAddress",
      "comment": "Removes the given address from the bound addresses for the channel\u0027s socket. The given address must not be the wildcard address. The channel must be first bound using bind before invoking this method, otherwise NotYetBoundException is thrown. If this method is invoked on a channel that does not have address as one of its bound addresses, or that has only one local address bound to it, then this method throws IllegalUnbindException. The initial address that the channel\u0027s socket is bound to using bind may be removed from the bound addresses for the channel\u0027s socket. New associations setup after this method successfully completes will not be associated with the given address. Removing addresses from existing associations is optional functionality. If the endpoint supports dynamic address reconfiguration then it may send the appropriate message to the peer to change the peers address lists.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eaddress\u003c/code\u003e - The address to remove from the bound addresses for the socket"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NotYetBoundException.html\" title\u003d\"class in java.nio.channels\"\u003eNotYetBoundException\u003c/a\u003e\u003c/code\u003e - If this channel is not yet bound",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.sctp/com/sun/nio/sctp/IllegalUnbindException.html\" title\u003d\"class in com.sun.nio.sctp\"\u003eIllegalUnbindException\u003c/a\u003e\u003c/code\u003e - \n\u003ccode\u003eaddress\u003c/code\u003e is not bound to the channel\u0027s socket, or the channel has only one address bound to it",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If address is \n\u003ccode\u003enull\u003c/code\u003e or the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/InetAddress.html#isAnyLocalAddress()\"\u003e\u003ccode\u003ewildcard\u003c/code\u003e\u003c/a\u003e address",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "This channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.net.SocketAddress",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getAllLocalAddresses",
      "comment": "Returns all of the socket addresses to which this channel\u0027s socket is bound.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If the channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "All the socket addresses that this channel\u0027s socket is bound to, or an empty \n\u003ccode\u003eSet\u003c/code\u003e if the channel\u0027s socket is not bound"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.net.SocketAddress",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "com.sun.nio.sctp.Association",
            "type": "Class"
          },
          "field": {
            "name": "association"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getRemoteAddresses",
      "comment": "Returns all of the remote addresses to which the given association on this channel\u0027s socket is connected.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eassociation\u003c/code\u003e - The association"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If the channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "All of the remote addresses for the given association, or an empty \n\u003ccode\u003eSet\u003c/code\u003e if the association has been shutdown"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.SctpMultiChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "com.sun.nio.sctp.Association",
            "type": "Class"
          },
          "field": {
            "name": "association"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "shutdown",
      "comment": "Shutdown an association without closing the channel.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eassociation\u003c/code\u003e - The association to shutdown"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "This channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "com.sun.nio.sctp.SctpSocketOption",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "com.sun.nio.sctp.Association",
            "type": "Class"
          },
          "field": {
            "name": "association"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getOption",
      "comment": "Returns the value of a socket option. Note that some options are retrieved on the channel\u0027s socket, therefore the association parameter is not applicable and will be ignored if given. However, if the option is association specific then the association must be given.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - The type of the socket option value"
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.sctp/com/sun/nio/sctp/SctpStandardSocketOptions.html\" title\u003d\"class in com.sun.nio.sctp\"\u003e\u003ccode\u003eSctpStandardSocketOptions\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The socket option",
          "\u003ccode\u003eassociation\u003c/code\u003e - The association whose option should be retrieved, or \n\u003ccode\u003enull\u003c/code\u003e if this option should be retrieved at the channel\u0027s socket level."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If the socket option is not supported by this channel",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "The value of the socket option. A value of \n\u003ccode\u003enull\u003c/code\u003e may be a valid value for some socket options."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.SctpMultiChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "com.sun.nio.sctp.SctpSocketOption",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "T",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        },
        {
          "type": {
            "name": "com.sun.nio.sctp.Association",
            "type": "Class"
          },
          "field": {
            "name": "association"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "setOption",
      "comment": "Sets the value of a socket option. Note that some options are retrieved on the channel\u0027s socket, therefore the association parameter is not applicable and will be ignored if given. However, if the option is association specific then the association must be given.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - The type of the socket option value"
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.sctp/com/sun/nio/sctp/SctpStandardSocketOptions.html\" title\u003d\"class in com.sun.nio.sctp\"\u003e\u003ccode\u003eSctpStandardSocketOptions\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The socket option",
          "\u003ccode\u003eassociation\u003c/code\u003e - The association whose option should be set, or \n\u003ccode\u003enull\u003c/code\u003e if this option should be set at the channel\u0027s socket level.",
          "\u003ccode\u003evalue\u003c/code\u003e - The value of the socket option. A value of \n\u003ccode\u003enull\u003c/code\u003e may be a valid value for some socket options."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If the socket option is not supported by this channel",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the value is not a valid value for this socket option",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "This channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "com.sun.nio.sctp.SctpSocketOption",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "supportedOptions",
      "comment": "Returns a set of the socket options supported by this channel. This method will continue to return the set of options even after the channel has been closed.",
      "tagMap": {
        "return": [
          "A set of the socket options supported by this channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "validOps",
      "comment": "Returns an operation set identifying this channel\u0027s supported operations. SCTP multi channels support reading, and writing, so this method returns (SelectionKey.OP_READ | SelectionKey.OP_WRITE).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/SelectableChannel.html#validOps()\"\u003evalidOps\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/SelectableChannel.html\" title\u003d\"class in java.nio.channels\"\u003eSelectableChannel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "The valid-operation set"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.MessageInfo",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.nio.ByteBuffer",
            "type": "Class"
          },
          "field": {
            "name": "buffer"
          }
        },
        {
          "type": {
            "name": "T",
            "type": "Class"
          },
          "field": {
            "name": "attachment"
          }
        },
        {
          "type": {
            "name": "com.sun.nio.sctp.NotificationHandler",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "handler"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "receive",
      "comment": "Receives a message and/or handles a notification via this channel. If a message or notification is immediately available, or if this channel is in blocking mode and one eventually becomes available, then the message or notification is returned or handled, respectively. If this channel is in non-blocking mode and a message or notification is not immediately available then this method immediately returns null. If this method receives a message it is copied into the given byte buffer and an MessageInfo is returned. The message is transferred into the given byte buffer starting at its current position and the buffers position is incremented by the number of bytes read. If there are fewer bytes remaining in the buffer than are required to hold the message, or the underlying input buffer does not contain the complete message, then an invocation of isComplete on the returned MessageInfo will return false, and more invocations of this method will be necessary to completely consume the messgae. Only one message at a time will be partially delivered in any stream. The socket option SCTP_FRAGMENT_INTERLEAVE controls various aspects of what interlacing of messages occurs. If this method receives a notification then the appropriate method of the given handler, if there is one, is invoked. If the handler returns CONTINUE then this method will try to receive another message/notification, otherwise, if RETURN is returned this method will return null. If an uncaught exception is thrown by the handler it will be propagated up the stack through this method. If a security manager has been installed then for each new association setup this method verifies that the associations source address and port number are permitted by the security manager\u0027s checkAccept method. This method may be invoked at any time. If another thread has already initiated a receive operation upon this channel, then an invocation of this method will block until the first operation is complete. The given handler is invoked without holding any locks used to enforce the above synchronization policy, that way handlers will not stall other threads from receiving. A handler should not invoke the receive method of this channel, if it does an IllegalReceiveException will be thrown.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - The type of the attachment"
        ],
        "param": [
          "\u003ccode\u003ebuffer\u003c/code\u003e - The buffer into which bytes are to be transferred",
          "\u003ccode\u003eattachment\u003c/code\u003e - The object to attach to the receive operation; can be \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003ehandler\u003c/code\u003e - A handler to handle notifications from the SCTP stack, or \n\u003ccode\u003enull\u003c/code\u003e to ignore any notifications."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AsynchronousCloseException.html\" title\u003d\"class in java.nio.channels\"\u003eAsynchronousCloseException\u003c/a\u003e\u003c/code\u003e - If another thread closes this channel while the read operation is in progress",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedByInterruptException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedByInterruptException\u003c/a\u003e\u003c/code\u003e - If another thread interrupts the current thread while the read operation is in progress, thereby closing the channel and setting the current thread\u0027s interrupt status",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NotYetBoundException.html\" title\u003d\"class in java.nio.channels\"\u003eNotYetBoundException\u003c/a\u003e\u003c/code\u003e - If this channel is not yet bound",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.sctp/com/sun/nio/sctp/IllegalReceiveException.html\" title\u003d\"class in com.sun.nio.sctp\"\u003eIllegalReceiveException\u003c/a\u003e\u003c/code\u003e - If the given handler invokes the \n\u003ccode\u003ereceive\u003c/code\u003e method of this channel",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and it does not permit new associations to be accepted from the message\u0027s sender",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "The \n\u003ccode\u003eMessageInfo\u003c/code\u003e, \n\u003ccode\u003enull\u003c/code\u003e if this channel is in non-blocking mode and no messages are immediately available or the notification handler returns \n\u003ccode\u003eRETURN\u003c/code\u003e after handling a notification"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.nio.ByteBuffer",
            "type": "Class"
          },
          "field": {
            "name": "buffer"
          }
        },
        {
          "type": {
            "name": "com.sun.nio.sctp.MessageInfo",
            "type": "Class"
          },
          "field": {
            "name": "messageInfo"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "send",
      "comment": "Sends a message via this channel. If this channel is unbound then this method will invoke bind(null, 0) before sending any data. If there is no association existing between this channel\u0027s socket and the intended receiver, identified by the address in the given messageInfo, then one will be automatically setup to the intended receiver. This is considered to be Implicit Association Setup. Upon successful association setup, an association changed notification will be put to the SCTP stack with its event parameter set to COMM_UP . This notification can be received by invoking receive. If this channel is in blocking mode, there is sufficient room in the underlying output buffer, then the remaining bytes in the given byte buffer are transmitted as a single message. Sending a message is atomic unless explicit message completion SCTP_EXPLICIT_COMPLETE socket option is enabled on this channel\u0027s socket. If this channel is in non-blocking mode, there is sufficient room in the underlying output buffer, and an implicit association setup is required, then the remaining bytes in the given byte buffer are transmitted as a single message, subject to SCTP_EXPLICIT_COMPLETE. If for any reason the message cannot be delivered an association changed notification is put on the SCTP stack with its event parameter set to CANT_START. The message is transferred from the byte buffer as if by a regular write operation. If a security manager has been installed then for each new association setup this method verifies that the given remote peers address and port number are permitted by the security manager\u0027s checkConnect method. This method may be invoked at any time. If another thread has already initiated a send operation upon this channel, then an invocation of this method will block until the first operation is complete.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ebuffer\u003c/code\u003e - The buffer containing the message to be sent",
          "\u003ccode\u003emessageInfo\u003c/code\u003e - Ancillary data about the message to be sent"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.sctp/com/sun/nio/sctp/InvalidStreamException.html\" title\u003d\"class in com.sun.nio.sctp\"\u003eInvalidStreamException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003estreamNumber\u003c/code\u003e is negative, or if an association already exists and \n\u003ccode\u003estreamNumber\u003c/code\u003e is greater than the maximum number of outgoing streams",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AsynchronousCloseException.html\" title\u003d\"class in java.nio.channels\"\u003eAsynchronousCloseException\u003c/a\u003e\u003c/code\u003e - If another thread closes this channel while the read operation is in progress",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedByInterruptException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedByInterruptException\u003c/a\u003e\u003c/code\u003e - If another thread interrupts the current thread while the read operation is in progress, thereby closing the channel and setting the current thread\u0027s interrupt status",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and it does not permit new associations to be setup with the messages\u0027s address",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "The number of bytes sent, which will be either the number of bytes that were remaining in the messages buffer when this method was invoked or, if this channel is non-blocking, may be zero if there was insufficient room for the message in the underlying output buffer"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.nio.sctp.SctpChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "com.sun.nio.sctp.Association",
            "type": "Class"
          },
          "field": {
            "name": "association"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "branch",
      "comment": "Branches off an association. An application can invoke this method to branch off an association into a separate channel. The new bound and connected SctpChannel will be created for the association. The branched off association will no longer be part of this channel. This is particularly useful when, for instance, the application wishes to have a number of sporadic message senders/receivers remain under the original SCTP multi channel but branch off those associations carrying high volume data traffic into their own separate SCTP channels.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eassociation\u003c/code\u003e - The association to branch off"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "The \n\u003ccode\u003eSctpChannel\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.nio.channels.spi.SelectorProvider",
            "type": "Class"
          },
          "field": {
            "name": "provider"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Initializes a new instance of this class.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprovider\u003c/code\u003e - The selector provider for this channel"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "com.sun.nio.sctp.SctpMultiChannel",
  "comment": "A selectable channel for message-oriented SCTP sockets. \n\u003cp\u003e An SCTP multi channel supports many associations on a single socket. An \u003ccode\u003eSctpMultiChannel\u003c/code\u003e is created by invoking the \u003ca href\u003d\"#open()\"\u003e\u003ccode\u003eopen\u003c/code\u003e\u003c/a\u003e method of this class. A newly-created channel is open but not yet bound. An attempt to invoke the \u003ca href\u003d\"#receive(java.nio.ByteBuffer,T,com.sun.nio.sctp.NotificationHandler)\"\u003e\u003ccode\u003ereceive\u003c/code\u003e\u003c/a\u003e method of an unbound channel will cause the \u003ca href\u003d\"../../../../../java.base/java/nio/channels/NotYetBoundException.html\" title\u003d\"class in java.nio.channels\"\u003e\u003ccode\u003eNotYetBoundException\u003c/code\u003e\u003c/a\u003e to be thrown. An attempt to invoke the \u003ca href\u003d\"#send(java.nio.ByteBuffer,com.sun.nio.sctp.MessageInfo)\"\u003e\u003ccode\u003esend\u003c/code\u003e\u003c/a\u003e method of an unbound channel will cause it to first invoke the \u003ca href\u003d\"#bind(java.net.SocketAddress,int)\"\u003e\u003ccode\u003ebind\u003c/code\u003e\u003c/a\u003e method. The address(es) that the channel\u0027s socket is bound to can be retrieved by calling \u003ca href\u003d\"#getAllLocalAddresses()\"\u003e\u003ccode\u003egetAllLocalAddresses\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e Messages may be sent and received without explicitly setting up an association with the remote peer. The channel will implicitly setup a new association whenever it sends or receives a message from a remote peer if there is not already an association with that peer. Upon successful association setup, an \u003ca href\u003d\"AssociationChangeNotification.html\" title\u003d\"class in com.sun.nio.sctp\"\u003e\u003ccode\u003eassociation changed\u003c/code\u003e\u003c/a\u003e notification will be put to the SCTP stack with its \u003ccode\u003eevent\u003c/code\u003e parameter set to \u003ca href\u003d\"AssociationChangeNotification.AssocChangeEvent.html#COMM_UP\"\u003e\u003ccode\u003eCOMM_UP\u003c/code\u003e\u003c/a\u003e. This notification can be received by invoking \u003ca href\u003d\"#receive(java.nio.ByteBuffer,T,com.sun.nio.sctp.NotificationHandler)\"\u003e\u003ccode\u003ereceive\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e Socket options are configured using the \u003ca href\u003d\"#setOption(com.sun.nio.sctp.SctpSocketOption,T,com.sun.nio.sctp.Association)\"\u003e\u003ccode\u003esetOption\u003c/code\u003e\u003c/a\u003e method. An \u003ccode\u003eSctpMultiChannel\u003c/code\u003e supports the following options: \u003c/p\u003e\n\u003cblockquote\u003e \n \u003ctable class\u003d\"striped\"\u003e \n  \u003ccaption style\u003d\"display:none\"\u003e\n   Socket options\n  \u003c/caption\u003e \n  \u003cthead\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"col\"\u003eOption Name\u003c/th\u003e \n    \u003cth scope\u003d\"col\"\u003eDescription\u003c/th\u003e \n   \u003c/tr\u003e \n  \u003c/thead\u003e \n  \u003ctbody\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SCTP_DISABLE_FRAGMENTS\"\u003e\u003ccode\u003eSCTP_DISABLE_FRAGMENTS\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e Enables or disables message fragmentation \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SCTP_EXPLICIT_COMPLETE\"\u003e\u003ccode\u003eSCTP_EXPLICIT_COMPLETE\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e Enables or disables explicit message completion \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SCTP_FRAGMENT_INTERLEAVE\"\u003e\u003ccode\u003eSCTP_FRAGMENT_INTERLEAVE\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e Controls how the presentation of messages occur for the message receiver \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SCTP_INIT_MAXSTREAMS\"\u003e\u003ccode\u003eSCTP_INIT_MAXSTREAMS\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e The maximum number of streams requested by the local endpoint during association initialization \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SCTP_NODELAY\"\u003e\u003ccode\u003eSCTP_NODELAY\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e Enables or disable a Nagle-like algorithm \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SCTP_PRIMARY_ADDR\"\u003e\u003ccode\u003eSCTP_PRIMARY_ADDR\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e Requests that the local SCTP stack use the given peer address as the association primary \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SCTP_SET_PEER_PRIMARY_ADDR\"\u003e\u003ccode\u003eSCTP_SET_PEER_PRIMARY_ADDR\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e Requests that the peer mark the enclosed address as the association primary \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SO_SNDBUF\"\u003e\u003ccode\u003eSO_SNDBUF\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e The size of the socket send buffer \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SO_RCVBUF\"\u003e\u003ccode\u003eSO_RCVBUF\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e The size of the socket receive buffer \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \u003ca href\u003d\"SctpStandardSocketOptions.html#SO_LINGER\"\u003e\u003ccode\u003eSO_LINGER\u003c/code\u003e\u003c/a\u003e \u003c/th\u003e \n    \u003ctd\u003e Linger on close if data is present (when configured in blocking mode only) \u003c/td\u003e \n   \u003c/tr\u003e \n  \u003c/tbody\u003e \n \u003c/table\u003e \n\u003c/blockquote\u003e Additional (implementation specific) options may also be supported. The list of options supported is obtained by invoking the \n\u003ca href\u003d\"#supportedOptions()\"\u003e\u003ccode\u003esupportedOptions\u003c/code\u003e\u003c/a\u003e method. \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e SCTP multi channels are safe for use by multiple concurrent threads. They support concurrent sending and receiving, though at most one thread may be sending and at most one thread may be receiving at any given time.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.7"
    ]
  }
}