{
  "packageName": "com.sun.tools.javac",
  "simpleName": "Main",
  "moduleName": "jdk.compiler",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "main",
      "comment": "Main entry point for the launcher. Note: This method calls System.exit.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eargs\u003c/code\u003e - command line arguments"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Exception.html\" title\u003d\"class in java.lang\"\u003eException\u003c/a\u003e\u003c/code\u003e - only if an uncaught internal exception occurs; just retained for historical compatibility"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "compile",
      "comment": "Programmatic interface to the Java Programming Language compiler, javac.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eargs\u003c/code\u003e - The command line arguments that would normally be passed to the javac program as described in the man page."
        ],
        "return": [
          "an integer equivalent to the exit value from invoking javac, see the man page for details."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "compile",
      "comment": "Programmatic interface to the Java Programming Language compiler, javac.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eargs\u003c/code\u003e - The command line arguments that would normally be passed to the javac program as described in the man page.",
          "\u003ccode\u003eout\u003c/code\u003e - PrintWriter to which the compiler\u0027s diagnostic output is directed."
        ],
        "return": [
          "an integer equivalent to the exit value from invoking javac, see the man page for details."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Do not call.",
      "annotations": [
        {
          "type": {
            "name": "Deprecated",
            "type": "Class"
          },
          "values": [
            {
              "name": "since",
              "value": "16"
            },
            {
              "name": "orRemoval",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "com.sun.tools.javac.Main",
  "comment": "A legacy programmatic interface for the Java Programming Language compiler, javac. See the \n\u003ca href\u003d\"../../../../../jdk.compiler/module-summary.html\"\u003e\u003ccode\u003ejdk.compiler\u003c/code\u003e\u003c/a\u003e module for details on replacement APIs.",
  "tagMap": {}
}