{
  "packageName": "com.sun.source.util",
  "simpleName": "DocTreeFactory",
  "moduleName": "jdk.compiler",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "com.sun.source.doctree.AttributeTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.Name",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "com.sun.source.doctree.AttributeTree$ValueKind",
            "type": "Class"
          },
          "field": {
            "name": "vkind"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newAttributeTree",
      "comment": "Creates a new AttributeTree object, to represent an HTML attribute in an HTML tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the attribute",
          "\u003ccode\u003evkind\u003c/code\u003e - the kind of the attribute value",
          "\u003ccode\u003evalue\u003c/code\u003e - the value, if any, of the attribute"
        ],
        "return": [
          "an \n\u003ccode\u003eAttributeTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.AuthorTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newAuthorTree",
      "comment": "Creates a new AuthorTree object, to represent an @author tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the author"
        ],
        "return": [
          "an \n\u003ccode\u003eAuthorTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.LiteralTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.doctree.TextTree",
            "type": "Class"
          },
          "field": {
            "name": "text"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newCodeTree",
      "comment": "Creates a new LiteralTree object, to represent a {@code } tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the content of the tag"
        ],
        "return": [
          "a \n\u003ccode\u003eLiteralTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.CommentTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "text"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newCommentTree",
      "comment": "Creates a new CommentTree, to represent an HTML comment.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the content of the comment"
        ],
        "return": [
          "a \n\u003ccode\u003eCommentTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.DeprecatedTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "text"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newDeprecatedTree",
      "comment": "Creates a new DeprecatedTree object, to represent an @deprecated tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the content of the tag"
        ],
        "return": [
          "a \n\u003ccode\u003eDeprecatedTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.DocCommentTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "fullBody"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "tags"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newDocCommentTree",
      "comment": "Creates a new DocCommentTree object, to represent a complete doc comment.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efullBody\u003c/code\u003e - the entire body of the doc comment",
          "\u003ccode\u003etags\u003c/code\u003e - the block tags in the doc comment"
        ],
        "return": [
          "a \n\u003ccode\u003eDocCommentTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.DocCommentTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "fullBody"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "tags"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "preamble"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "postamble"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newDocCommentTree",
      "comment": "Creates a new DocCommentTree object, to represent the entire doc comment.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efullBody\u003c/code\u003e - the entire body of the doc comment",
          "\u003ccode\u003etags\u003c/code\u003e - the block tags in the doc comment",
          "\u003ccode\u003epreamble\u003c/code\u003e - the meta content of an html file including the body tag",
          "\u003ccode\u003epostamble\u003c/code\u003e - the meta content of an html including the closing body tag"
        ],
        "return": [
          "a \n\u003ccode\u003eDocCommentTree\u003c/code\u003e object"
        ],
        "since": [
          "10"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.DocRootTree",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newDocRootTree",
      "comment": "Creates a new DocRootTree object, to represent an {@docRoot} tag.",
      "tagMap": {
        "return": [
          "a \n\u003ccode\u003eDocRootTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.DocTypeTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "text"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newDocTypeTree",
      "comment": "Creates a new DocTypeTree, to represent a DOCTYPE HTML declaration.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the content of the declaration"
        ],
        "return": [
          "a \n\u003ccode\u003eDocTypeTree\u003c/code\u003e object"
        ],
        "since": [
          "10"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.EndElementTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.Name",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newEndElementTree",
      "comment": "Creates a new EndElement object, to represent the end of an HTML element.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the HTML element"
        ],
        "return": [
          "an \n\u003ccode\u003eEndElementTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.EntityTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.Name",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newEntityTree",
      "comment": "Creates a new EntityTree object, to represent an HTML entity.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the entity, representing the characters between \u0027\u0026amp;\u0027 and \u0027;\u0027 in the representation of the entity in an HTML document"
        ],
        "return": [
          "an \n\u003ccode\u003eEntityTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.ErroneousTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "text"
          }
        },
        {
          "type": {
            "name": "javax.tools.Diagnostic",
            "parameters": [
              {
                "name": "javax.tools.JavaFileObject",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "diag"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newErroneousTree",
      "comment": "Creates a new ErroneousTree object, to represent some unparseable input.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the unparseable text",
          "\u003ccode\u003ediag\u003c/code\u003e - a diagnostic associated with the unparseable text, or \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eErroneousTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.ThrowsTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.doctree.ReferenceTree",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newExceptionTree",
      "comment": "Creates a new ThrowsTree object, to represent an @exception tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the exception",
          "\u003ccode\u003edescription\u003c/code\u003e - a description of why the exception might be thrown"
        ],
        "return": [
          "an \n\u003ccode\u003eThrowsTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.HiddenTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "text"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newHiddenTree",
      "comment": "Creates a new HiddenTree object, to represent an @hidden tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the content of the tag"
        ],
        "return": [
          "a \n\u003ccode\u003eHiddenTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.IdentifierTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.Name",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newIdentifierTree",
      "comment": "Creates a new IdentifierTree object, to represent an identifier, such as in a @param tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the identifier"
        ],
        "return": [
          "an \n\u003ccode\u003eIdentifierTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.IndexTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.doctree.DocTree",
            "type": "Class"
          },
          "field": {
            "name": "term"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newIndexTree",
      "comment": "Creates a new IndexTree object, to represent an {@index } tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eterm\u003c/code\u003e - the search term",
          "\u003ccode\u003edescription\u003c/code\u003e - an optional description of the search term"
        ],
        "return": [
          "an \n\u003ccode\u003eIndexTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.InheritDocTree",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newInheritDocTree",
      "comment": "Creates a new InheritDocTree object, to represent an {@inheritDoc} tag.",
      "tagMap": {
        "return": [
          "an \n\u003ccode\u003eInheritDocTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.LinkTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.doctree.ReferenceTree",
            "type": "Class"
          },
          "field": {
            "name": "ref"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "label"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newLinkTree",
      "comment": "Creates a new LinkTree object, to represent a {@link } tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eref\u003c/code\u003e - the API element being referenced",
          "\u003ccode\u003elabel\u003c/code\u003e - an optional label for the link"
        ],
        "return": [
          "a \n\u003ccode\u003eLinkTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.LinkTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.doctree.ReferenceTree",
            "type": "Class"
          },
          "field": {
            "name": "ref"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "label"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newLinkPlainTree",
      "comment": "Creates a new LinkTree object, to represent a {@linkplain } tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eref\u003c/code\u003e - the API element being referenced",
          "\u003ccode\u003elabel\u003c/code\u003e - an optional label for the link"
        ],
        "return": [
          "a \n\u003ccode\u003eLinkTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.LiteralTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.doctree.TextTree",
            "type": "Class"
          },
          "field": {
            "name": "text"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newLiteralTree",
      "comment": "Creates a new LiteralTree object, to represent a {@literal } tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the content of the tag"
        ],
        "return": [
          "a \n\u003ccode\u003eLiteralTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.ParamTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "isTypeParameter"
          }
        },
        {
          "type": {
            "name": "com.sun.source.doctree.IdentifierTree",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newParamTree",
      "comment": "Creates a new ParamTree object, to represent a @param tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eisTypeParameter\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if this is a type parameter, and \n\u003ccode\u003efalse\u003c/code\u003e otherwise",
          "\u003ccode\u003ename\u003c/code\u003e - the parameter being described",
          "\u003ccode\u003edescription\u003c/code\u003e - the description of the parameter"
        ],
        "return": [
          "a \n\u003ccode\u003eParamTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.ProvidesTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.doctree.ReferenceTree",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newProvidesTree",
      "comment": "Creates a new ProvidesTree object, to represent a @provides tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the service type",
          "\u003ccode\u003edescription\u003c/code\u003e - a description of the service being provided"
        ],
        "return": [
          "a \n\u003ccode\u003eProvidesTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.ReferenceTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "signature"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newReferenceTree",
      "comment": "Creates a new ReferenceTree object, to represent a reference to an API element.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esignature\u003c/code\u003e - the doc comment signature of the reference"
        ],
        "return": [
          "a \n\u003ccode\u003eReferenceTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.ReturnTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newReturnTree",
      "comment": "Creates a new ReturnTree object, to represent a @return tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edescription\u003c/code\u003e - the description of the return value of a method"
        ],
        "return": [
          "a \n\u003ccode\u003eReturnTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.ReturnTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "isInline"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newReturnTree",
      "comment": "Creates a new ReturnTree object, to represent a @return tag or {@return} tag.",
      "tagMap": {
        "implSpec": [
          "This implementation throws \n\u003ccode\u003eUnsupportedOperationException\u003c/code\u003e if \n\u003ccode\u003eisInline\u003c/code\u003e is \n\u003ccode\u003etrue\u003c/code\u003e, and calls \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeFactory.html#newReturnTree(java.util.List)\"\u003e\u003ccode\u003enewReturnTree(List)\u003c/code\u003e\u003c/a\u003e otherwise."
        ],
        "param": [
          "\u003ccode\u003edescription\u003c/code\u003e - the description of the return value of a method"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if inline \n\u003ccode\u003e{@return}\u003c/code\u003e tags are not supported"
        ],
        "return": [
          "a \n\u003ccode\u003eReturnTree\u003c/code\u003e object"
        ],
        "since": [
          "16"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.SeeTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "reference"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newSeeTree",
      "comment": "Creates a new SeeTree object, to represent a @see tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ereference\u003c/code\u003e - the reference"
        ],
        "return": [
          "a \n\u003ccode\u003eSeeTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.SerialTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newSerialTree",
      "comment": "Creates a new SerialTree object, to represent a @serial tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edescription\u003c/code\u003e - the description for the tag"
        ],
        "return": [
          "a \n\u003ccode\u003eSerialTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.SerialDataTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newSerialDataTree",
      "comment": "Creates a new SerialDataTree object, to represent a @serialData tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edescription\u003c/code\u003e - the description for the tag"
        ],
        "return": [
          "a \n\u003ccode\u003eSerialDataTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.SerialFieldTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.doctree.IdentifierTree",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "com.sun.source.doctree.ReferenceTree",
            "type": "Class"
          },
          "field": {
            "name": "type"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newSerialFieldTree",
      "comment": "Creates a new SerialFieldTree object, to represent a @serialField tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the field",
          "\u003ccode\u003etype\u003c/code\u003e - the type of the field",
          "\u003ccode\u003edescription\u003c/code\u003e - the description of the field"
        ],
        "return": [
          "a \n\u003ccode\u003eSerialFieldTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.SinceTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "text"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newSinceTree",
      "comment": "Creates a new SinceTree object, to represent a @since tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the content of the tag"
        ],
        "return": [
          "a \n\u003ccode\u003eSinceTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.StartElementTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.Name",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "attrs"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "selfClosing"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newStartElementTree",
      "comment": "Creates a new StartElementTree object, to represent the start of an HTML element.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the HTML element",
          "\u003ccode\u003eattrs\u003c/code\u003e - the attributes",
          "\u003ccode\u003eselfClosing\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the start element is marked as self-closing; otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eStartElementTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.SummaryTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "summary"
          }
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newSummaryTree",
      "comment": "Creates a new SummaryTree object, to represent a {@summary } tag.",
      "tagMap": {
        "implSpec": [
          "This implementation throws \n\u003ccode\u003eUnsupportedOperationException\u003c/code\u003e."
        ],
        "param": [
          "\u003ccode\u003esummary\u003c/code\u003e - the content of the tag"
        ],
        "return": [
          "a \n\u003ccode\u003eSummaryTree\u003c/code\u003e object"
        ],
        "since": [
          "10"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.SystemPropertyTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.Name",
            "type": "Class"
          },
          "field": {
            "name": "propertyName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newSystemPropertyTree",
      "comment": "Creates a new SystemPropertyTree object, to represent a {@systemProperty } tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epropertyName\u003c/code\u003e - the system property name"
        ],
        "return": [
          "a \n\u003ccode\u003eSystemPropertyTree\u003c/code\u003e object"
        ],
        "since": [
          "12"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.TextTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "text"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newTextTree",
      "comment": "Creates a new TextTree object, to represent some plain text.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the text"
        ],
        "return": [
          "a \n\u003ccode\u003eTextTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.ThrowsTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.doctree.ReferenceTree",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newThrowsTree",
      "comment": "Creates a new ThrowsTree object, to represent a @throws tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the exception",
          "\u003ccode\u003edescription\u003c/code\u003e - a description of why the exception might be thrown"
        ],
        "return": [
          "a \n\u003ccode\u003eThrowsTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.UnknownBlockTagTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.Name",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "content"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newUnknownBlockTagTree",
      "comment": "Creates a new UnknownBlockTagTree object, to represent an unrecognized block tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the block tag",
          "\u003ccode\u003econtent\u003c/code\u003e - the content"
        ],
        "return": [
          "an \n\u003ccode\u003eUnknownBlockTagTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.UnknownInlineTagTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.Name",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "content"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newUnknownInlineTagTree",
      "comment": "Creates a new UnknownInlineTagTree object, to represent an unrecognized inline tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the inline tag",
          "\u003ccode\u003econtent\u003c/code\u003e - the content"
        ],
        "return": [
          "an \n\u003ccode\u003eUnknownInlineTagTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.UsesTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.doctree.ReferenceTree",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "description"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newUsesTree",
      "comment": "Creates a new UsesTree object, to represent a @uses tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the service type",
          "\u003ccode\u003edescription\u003c/code\u003e - a description of how the service will be used"
        ],
        "return": [
          "a \n\u003ccode\u003eUsesTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.ValueTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.doctree.ReferenceTree",
            "type": "Class"
          },
          "field": {
            "name": "ref"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newValueTree",
      "comment": "Creates a new ValueTree object, to represent a {@value } tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eref\u003c/code\u003e - a reference to the value"
        ],
        "return": [
          "a \n\u003ccode\u003eValueTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.VersionTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "text"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "newVersionTree",
      "comment": "Creates a new VersionTree object, to represent a {@version } tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the content of the tag"
        ],
        "return": [
          "a \n\u003ccode\u003eVersionTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.util.DocTreeFactory",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "at",
      "comment": "Sets the position to be recorded in subsequent tree nodes created by this factory. The position should be a character offset relative to the beginning of the source file or NOPOS.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position"
        ],
        "return": [
          "this object, to facilitate method chaining"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "com.sun.source.doctree.DocTree",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "list"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getFirstSentence",
      "comment": "Gets the first sentence contained in a list of content. The determination of the first sentence is implementation specific, and may involve the use of a locale-specific BreakIterator and other heuristics. The resulting list may share a common set of initial items with the input list.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elist\u003c/code\u003e - the list"
        ],
        "return": [
          "a list containing the first sentence of the list"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.source.util.DocTreeFactory",
  "comment": "Factory for creating \n\u003ccode\u003eDocTree\u003c/code\u003e nodes.",
  "tagMap": {
    "implNote": [
      "The methods in an implementation of this interface may only accept \n\u003ccode\u003eDocTree\u003c/code\u003e nodes that have been created by the same implementation."
    ],
    "since": [
      "9"
    ]
  }
}