{
  "packageName": "com.sun.source.util",
  "simpleName": "DocTreePathScanner",
  "moduleName": "jdk.compiler",
  "type": "CLASS",
  "superClass": {
    "name": "com.sun.source.util.DocTreeScanner",
    "parameters": [
      {
        "name": "R",
        "type": "Class"
      },
      {
        "name": "P",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreePathScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.util.DocTreePath",
            "type": "Class"
          },
          "name": "path",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreePathScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "scan",
      "comment": "Scans a tree from a position identified by a tree path.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epath\u003c/code\u003e - the path",
          "\u003ccode\u003ep\u003c/code\u003e - a value to be passed to visitor methods"
        ],
        "return": [
          "the result returned from the main visitor method"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreePathScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.DocTree",
            "type": "Class"
          },
          "name": "tree",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreePathScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "scan",
      "comment": "Scans a single node. The current path is updated for the duration of the scan.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html#scan(com.sun.source.doctree.DocTree,P)\"\u003escan\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"class in com.sun.source.util\"\u003eDocTreeScanner\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreePathScanner.html\" title\u003d\"type parameter in DocTreePathScanner\"\u003eR\u003c/a\u003e,â€‹\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreePathScanner.html\" title\u003d\"type parameter in DocTreePathScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etree\u003c/code\u003e - the tree to be scanned",
          "\u003ccode\u003ep\u003c/code\u003e - a value to be passed to visitor methods"
        ],
        "return": [
          "the result returned from the main visitor method"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.util.DocTreePath",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCurrentPath",
      "comment": "Returns the current path for the node, as built up by the currently active set of scan calls.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the current path"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a DocTreePathScanner.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "genericParameters": [
    {
      "name": "R",
      "type": "Variable"
    },
    {
      "name": "P",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "com.sun.source.util.DocTreePathScanner",
  "comment": "A DocTreeVisitor that visits all the child tree nodes, and provides support for maintaining a path for the parent nodes. To visit nodes of a particular type, just override the corresponding visitorXYZ method. Inside your method, call super.visitXYZ to visit descendant nodes.",
  "tagMap": {
    "since": [
      "1.8"
    ]
  }
}