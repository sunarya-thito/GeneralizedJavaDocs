{
  "packageName": "com.sun.source.util",
  "simpleName": "DocSourcePositions",
  "moduleName": "jdk.compiler",
  "type": "INTERFACE",
  "superClass": {
    "name": "com.sun.source.util.SourcePositions",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.tree.CompilationUnitTree",
            "type": "Class"
          },
          "name": "file",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.DocCommentTree",
            "type": "Class"
          },
          "name": "comment",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.DocTree",
            "type": "Class"
          },
          "name": "tree",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getStartPosition",
      "comment": "Returns the starting position of the tree within the comment within the file. If tree is not found within file, or if the starting position is not available, returns Diagnostic.NOPOS. The given tree should be under the given comment tree, and the given documentation comment tree should be returned from a DocTrees.getDocCommentTree(com.sun.source.util.TreePath) for a tree under the given file. The returned position must be at the start of the yield of this tree, that is for any sub-tree of this tree, the following must hold: tree.getStartPosition() \u003c\u003d subtree.getStartPosition() or tree.getStartPosition() \u003d\u003d NOPOS or subtree.getStartPosition() \u003d\u003d NOPOS",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - compilation unit in which to find tree",
          "\u003ccode\u003ecomment\u003c/code\u003e - the comment tree that encloses the tree for which the position is being sought",
          "\u003ccode\u003etree\u003c/code\u003e - tree for which a position is sought"
        ],
        "return": [
          "the start position of tree"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.tree.CompilationUnitTree",
            "type": "Class"
          },
          "name": "file",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.DocCommentTree",
            "type": "Class"
          },
          "name": "comment",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.DocTree",
            "type": "Class"
          },
          "name": "tree",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEndPosition",
      "comment": "Returns the ending position of the tree within the comment within the file. If tree is not found within file, or if the ending position is not available, returns Diagnostic.NOPOS. The given tree should be under the given comment tree, and the given documentation comment tree should be returned from a DocTrees.getDocCommentTree(com.sun.source.util.TreePath) for a tree under the given file. The returned position must be at the end of the yield of this tree, that is for any sub-tree of this tree, the following must hold: tree.getEndPosition() \u003e\u003d subtree.getEndPosition() or tree.getEndPosition() \u003d\u003d NOPOS or subtree.getEndPosition() \u003d\u003d NOPOS In addition, the following must hold: tree.getStartPosition() \u003c\u003d tree.getEndPosition() or tree.getStartPosition() \u003d\u003d NOPOS or tree.getEndPosition() \u003d\u003d NOPOS",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - compilation unit in which to find tree",
          "\u003ccode\u003ecomment\u003c/code\u003e - the comment tree that encloses the tree for which the position is being sought",
          "\u003ccode\u003etree\u003c/code\u003e - tree for which a position is sought"
        ],
        "return": [
          "the end position of tree"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.source.util.DocSourcePositions",
  "comment": "Provides methods to obtain the position of a DocTree within a javadoc comment. A position is defined as a simple character offset from the start of a CompilationUnit where the first character is at offset 0.",
  "tagMap": {
    "since": [
      "1.8"
    ]
  }
}