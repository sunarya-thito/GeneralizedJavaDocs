{
  "packageName": "com.sun.source.util",
  "simpleName": "DocTrees",
  "moduleName": "jdk.compiler",
  "type": "CLASS",
  "superClass": {
    "name": "com.sun.source.util.Trees",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "com.sun.source.util.DocTrees",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.tools.JavaCompiler$CompilationTask",
            "type": "Class"
          },
          "field": {
            "name": "task"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "instance",
      "comment": "Returns a DocTrees object for a given CompilationTask.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etask\u003c/code\u003e - the compilation task for which to get the Trees object"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the task does not support the Trees API."
        ],
        "return": [
          "the DocTrees object"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.util.DocTrees",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.annotation.processing.ProcessingEnvironment",
            "type": "Class"
          },
          "field": {
            "name": "env"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "instance",
      "comment": "Returns a DocTrees object for a given ProcessingEnvironment.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eenv\u003c/code\u003e - the processing environment for which to get the Trees object"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the env does not support the Trees API."
        ],
        "return": [
          "the DocTrees object"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.text.BreakIterator",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getBreakIterator",
      "comment": "Returns the break iterator used to compute the first sentence of documentation comments. Returns null if none has been specified.",
      "tagMap": {
        "return": [
          "the break iterator"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.DocCommentTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.util.TreePath",
            "type": "Class"
          },
          "field": {
            "name": "path"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getDocCommentTree",
      "comment": "Returns the doc comment tree, if any, for the Tree node identified by a given TreePath. Returns null if no doc comment was found.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epath\u003c/code\u003e - the path for the tree node"
        ],
        "return": [
          "the doc comment tree"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.DocCommentTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.Element",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getDocCommentTree",
      "comment": "Returns the doc comment tree of the given element. Returns null if no doc comment was found.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - an element whose documentation is required"
        ],
        "return": [
          "the doc comment tree"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.DocCommentTree",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.tools.FileObject",
            "type": "Class"
          },
          "field": {
            "name": "fileObject"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getDocCommentTree",
      "comment": "Returns the doc comment tree of the given file. The file must be an HTML file, in which case the doc comment tree represents the entire contents of the file. Returns null if no doc comment was found. Future releases may support additional file types.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efileObject\u003c/code\u003e - the content container"
        ],
        "return": [
          "the doc comment tree"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.doctree.DocCommentTree",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.Element",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "relativePath"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getDocCommentTree",
      "comment": "Returns the doc comment tree of the given file whose path is specified relative to the given element. The file must be an HTML file, in which case the doc comment tree represents the contents of the \u003cbody\u003e tag, and any enclosing tags are ignored. Returns null if no doc comment was found. Future releases may support additional file types.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - an element whose path is used as a reference",
          "\u003ccode\u003erelativePath\u003c/code\u003e - the relative path from the Element"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an exception occurs"
        ],
        "return": [
          "the doc comment tree"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.util.DocTreePath",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.tools.FileObject",
            "type": "Class"
          },
          "field": {
            "name": "fileObject"
          }
        },
        {
          "type": {
            "name": "javax.lang.model.element.PackageElement",
            "type": "Class"
          },
          "field": {
            "name": "packageElement"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getDocTreePath",
      "comment": "Returns a doc tree path containing the doc comment tree of the given file. The file must be an HTML file, in which case the doc comment tree represents the contents of the \u003cbody\u003e tag, and any enclosing tags are ignored. Any references to source code elements contained in @see and {@link} tags in the doc comment tree will be evaluated in the context of the given package element. Returns null if no doc comment was found.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efileObject\u003c/code\u003e - a file object encapsulating the HTML content",
          "\u003ccode\u003epackageElement\u003c/code\u003e - a package element to associate with the given file object representing a legacy package.html, null otherwise"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the fileObject is not an HTML file"
        ],
        "return": [
          "a doc tree path containing the doc comment parsed from the given file"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.lang.model.element.Element",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.util.DocTreePath",
            "type": "Class"
          },
          "field": {
            "name": "path"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getElement",
      "comment": "Returns the language model element referred to by the leaf node of the given DocTreePath, or null if unknown.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epath\u003c/code\u003e - the path for the tree node"
        ],
        "return": [
          "the element"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.lang.model.type.TypeMirror",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.util.DocTreePath",
            "type": "Class"
          },
          "field": {
            "name": "path"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getType",
      "comment": "Returns the language model type referred to by the leaf node of the given DocTreePath, or null if unknown. This method usually returns the same value as getElement(path).asType() for a path argument for which getElement(DocTreePath) returns a non-null value, but may return a type that includes additional information, such as a parameterized generic type instead of a raw type.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epath\u003c/code\u003e - the path for the tree node"
        ],
        "return": [
          "the referenced type, or null"
        ],
        "since": [
          "15"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "com.sun.source.doctree.DocTree",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "list"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getFirstSentence",
      "comment": "Returns the list of DocTree representing the first sentence of a comment.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elist\u003c/code\u003e - the DocTree list to interrogate"
        ],
        "return": [
          "the first sentence"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.util.DocSourcePositions",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getSourcePositions",
      "comment": "Returns a utility object for accessing the source positions of documentation tree nodes.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/Trees.html#getSourcePositions()\"\u003egetSourcePositions\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/Trees.html\" title\u003d\"class in com.sun.source.util\"\u003eTrees\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the utility object"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.tools.Diagnostic$Kind",
            "type": "Class"
          },
          "field": {
            "name": "kind"
          }
        },
        {
          "type": {
            "name": "java.lang.CharSequence",
            "type": "Class"
          },
          "field": {
            "name": "msg"
          }
        },
        {
          "type": {
            "name": "com.sun.source.doctree.DocTree",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "com.sun.source.doctree.DocCommentTree",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        },
        {
          "type": {
            "name": "com.sun.source.tree.CompilationUnitTree",
            "type": "Class"
          },
          "field": {
            "name": "root"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "printMessage",
      "comment": "Prints a message of the specified kind at the location of the tree within the provided compilation unit",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekind\u003c/code\u003e - the kind of message",
          "\u003ccode\u003emsg\u003c/code\u003e - the message, or an empty string if none",
          "\u003ccode\u003et\u003c/code\u003e - the tree to use as a position hint",
          "\u003ccode\u003ec\u003c/code\u003e - the doc comment tree to use as a position hint",
          "\u003ccode\u003eroot\u003c/code\u003e - the compilation unit that contains tree"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.text.BreakIterator",
            "type": "Class"
          },
          "field": {
            "name": "breakIterator"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "setBreakIterator",
      "comment": "Sets the break iterator to compute the first sentence of documentation comments.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ebreakIterator\u003c/code\u003e - a break iterator or \n\u003ccode\u003enull\u003c/code\u003e to specify the default sentence breaker"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.util.DocTreeFactory",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getDocTreeFactory",
      "comment": "Returns a utility object for creating DocTree objects.",
      "tagMap": {
        "return": [
          "a utility object for creating \n\u003ccode\u003eDocTree\u003c/code\u003e objects"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.doctree.EntityTree",
            "type": "Class"
          },
          "field": {
            "name": "tree"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getCharacters",
      "comment": "Returns a string containing the characters for the entity in a given entity tree, or null if the tree does not represent a valid series of characters. The interpretation of entities is based on section 8.1.4. Character references in the HTML 5.2 specification.",
      "tagMap": {
        "return": [
          "a string containing the characters"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor for subclasses to call.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "com.sun.source.util.DocTrees",
  "comment": "Provides access to syntax trees for doc comments.",
  "tagMap": {
    "since": [
      "1.8"
    ]
  }
}