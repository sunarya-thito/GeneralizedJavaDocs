{
  "packageName": "com.sun.source.util",
  "simpleName": "DocTreeScanner",
  "moduleName": "jdk.compiler",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.DocTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "scan",
      "comment": "Scans a single node.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node to be scanned",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value passed to the visit method"
        ],
        "return": [
          "the result value from the visit method"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Iterable",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.source.doctree.DocTree",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "nodes",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "scan",
      "comment": "Scans a sequence of nodes.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enodes\u003c/code\u003e - the nodes to be scanned",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value to be passed to the visit method for each node"
        ],
        "return": [
          "the combined return value from the visit methods. The values are combined using the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html#reduce(R,R)\"\u003e\u003ccode\u003ereduce\u003c/code\u003e\u003c/a\u003e method."
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "R",
            "type": "Variable"
          },
          "name": "r1",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "R",
            "type": "Variable"
          },
          "name": "r2",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "reduce",
      "comment": "Reduces two results into a combined result. The default implementation is to return the first parameter. The general contract of the method is that it may take any action whatsoever.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003er1\u003c/code\u003e - the first of the values to be combined",
          "\u003ccode\u003er2\u003c/code\u003e - the second of the values to be combined"
        ],
        "return": [
          "the result of combining the two parameters"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.AttributeTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitAttribute",
      "comment": "Visits an AttributeTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitAttribute(com.sun.source.doctree.AttributeTree,P)\"\u003evisitAttribute\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.AuthorTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitAuthor",
      "comment": "Visits an AuthorTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitAuthor(com.sun.source.doctree.AuthorTree,P)\"\u003evisitAuthor\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.CommentTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitComment",
      "comment": "Visits a CommentTree node. This implementation returns null.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitComment(com.sun.source.doctree.CommentTree,P)\"\u003evisitComment\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.DeprecatedTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitDeprecated",
      "comment": "Visits a DeprecatedTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitDeprecated(com.sun.source.doctree.DeprecatedTree,P)\"\u003evisitDeprecated\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.DocCommentTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitDocComment",
      "comment": "Visits a DocCommentTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitDocComment(com.sun.source.doctree.DocCommentTree,P)\"\u003evisitDocComment\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.DocRootTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitDocRoot",
      "comment": "Visits a DocRootTree node. This implementation returns null.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitDocRoot(com.sun.source.doctree.DocRootTree,P)\"\u003evisitDocRoot\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.DocTypeTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitDocType",
      "comment": "Visits a DocTypeTree node. This implementation returns null.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitDocType(com.sun.source.doctree.DocTypeTree,P)\"\u003evisitDocType\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.EndElementTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitEndElement",
      "comment": "Visits an EndElementTree node. This implementation returns null.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitEndElement(com.sun.source.doctree.EndElementTree,P)\"\u003evisitEndElement\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.EntityTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitEntity",
      "comment": "Visits an EntityTree node. This implementation returns null.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitEntity(com.sun.source.doctree.EntityTree,P)\"\u003evisitEntity\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.ErroneousTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitErroneous",
      "comment": "Visits an ErroneousTree node. This implementation returns null.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitErroneous(com.sun.source.doctree.ErroneousTree,P)\"\u003evisitErroneous\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.HiddenTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitHidden",
      "comment": "Visits a HiddenTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitHidden(com.sun.source.doctree.HiddenTree,P)\"\u003evisitHidden\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.IdentifierTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitIdentifier",
      "comment": "Visits an IdentifierTree node. This implementation returns null.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitIdentifier(com.sun.source.doctree.IdentifierTree,P)\"\u003evisitIdentifier\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.IndexTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitIndex",
      "comment": "Visits an IndexTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitIndex(com.sun.source.doctree.IndexTree,P)\"\u003evisitIndex\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.InheritDocTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitInheritDoc",
      "comment": "Visits an InheritDocTree node. This implementation returns null.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitInheritDoc(com.sun.source.doctree.InheritDocTree,P)\"\u003evisitInheritDoc\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.LinkTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitLink",
      "comment": "Visits a LinkTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitLink(com.sun.source.doctree.LinkTree,P)\"\u003evisitLink\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.LiteralTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitLiteral",
      "comment": "Visits an LiteralTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitLiteral(com.sun.source.doctree.LiteralTree,P)\"\u003evisitLiteral\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.ParamTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitParam",
      "comment": "Visits a ParamTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitParam(com.sun.source.doctree.ParamTree,P)\"\u003evisitParam\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.ProvidesTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitProvides",
      "comment": "Visits a ProvidesTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitProvides(com.sun.source.doctree.ProvidesTree,P)\"\u003evisitProvides\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.ReferenceTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitReference",
      "comment": "Visits a ReferenceTree node. This implementation returns null.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitReference(com.sun.source.doctree.ReferenceTree,P)\"\u003evisitReference\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.ReturnTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitReturn",
      "comment": "Visits a ReturnTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitReturn(com.sun.source.doctree.ReturnTree,P)\"\u003evisitReturn\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.SeeTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitSee",
      "comment": "Visits a SeeTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitSee(com.sun.source.doctree.SeeTree,P)\"\u003evisitSee\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.SerialTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitSerial",
      "comment": "Visits a SerialTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitSerial(com.sun.source.doctree.SerialTree,P)\"\u003evisitSerial\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.SerialDataTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitSerialData",
      "comment": "Visits a SerialDataTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitSerialData(com.sun.source.doctree.SerialDataTree,P)\"\u003evisitSerialData\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.SerialFieldTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitSerialField",
      "comment": "Visits a SerialFieldTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitSerialField(com.sun.source.doctree.SerialFieldTree,P)\"\u003evisitSerialField\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.SinceTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitSince",
      "comment": "Visits a SinceTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitSince(com.sun.source.doctree.SinceTree,P)\"\u003evisitSince\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.StartElementTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitStartElement",
      "comment": "Visits a StartElementTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitStartElement(com.sun.source.doctree.StartElementTree,P)\"\u003evisitStartElement\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.SummaryTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitSummary",
      "comment": "Visits a SummaryTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitSummary(com.sun.source.doctree.SummaryTree,P)\"\u003evisitSummary\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ],
        "since": [
          "10"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.SystemPropertyTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitSystemProperty",
      "comment": "Visits a SystemPropertyTree node. This implementation returns null.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitSystemProperty(com.sun.source.doctree.SystemPropertyTree,P)\"\u003evisitSystemProperty\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ],
        "since": [
          "12"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.TextTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitText",
      "comment": "Visits a TextTree node. This implementation returns null.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitText(com.sun.source.doctree.TextTree,P)\"\u003evisitText\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.ThrowsTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitThrows",
      "comment": "Visits a ThrowsTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitThrows(com.sun.source.doctree.ThrowsTree,P)\"\u003evisitThrows\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.UnknownBlockTagTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitUnknownBlockTag",
      "comment": "Visits an UnknownBlockTagTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitUnknownBlockTag(com.sun.source.doctree.UnknownBlockTagTree,P)\"\u003evisitUnknownBlockTag\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.UnknownInlineTagTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitUnknownInlineTag",
      "comment": "Visits an UnknownInlineTagTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitUnknownInlineTag(com.sun.source.doctree.UnknownInlineTagTree,P)\"\u003evisitUnknownInlineTag\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.UsesTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitUses",
      "comment": "Visits a UsesTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitUses(com.sun.source.doctree.UsesTree,P)\"\u003evisitUses\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.ValueTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitValue",
      "comment": "Visits a ValueTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitValue(com.sun.source.doctree.ValueTree,P)\"\u003evisitValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.VersionTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitVersion",
      "comment": "Visits a VersionTree node. This implementation scans the children in left to right order.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitVersion(com.sun.source.doctree.VersionTree,P)\"\u003evisitVersion\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "returnType": {
        "owner": "com.sun.source.util.DocTreeScanner",
        "name": "R",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "com.sun.source.doctree.DocTree",
            "type": "Class"
          },
          "name": "node",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "com.sun.source.util.DocTreeScanner",
            "name": "P",
            "type": "Variable"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitOther",
      "comment": "Visits an unknown type of DocTree node. This can occur if the set of tags evolves and new kinds of nodes are added to the DocTree hierarchy. This implementation returns null.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html#visitOther(com.sun.source.doctree.DocTree,P)\"\u003evisitOther\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/doctree/DocTreeVisitor.html\" title\u003d\"interface in com.sun.source.doctree\"\u003eDocTreeVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eR\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.compiler/com/sun/source/util/DocTreeScanner.html\" title\u003d\"type parameter in DocTreeScanner\"\u003eP\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - the node being visited",
          "\u003ccode\u003ep\u003c/code\u003e - a parameter value"
        ],
        "return": [
          "the result of scanning"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a DocTreeScanner.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "genericParameters": [
    {
      "name": "R",
      "type": "Variable"
    },
    {
      "name": "P",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "com.sun.source.util.DocTreeScanner",
  "annotations": [],
  "tagMap": {
    "since": [
      "1.8"
    ]
  }
}