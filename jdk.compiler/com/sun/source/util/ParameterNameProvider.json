{
  "packageName": "com.sun.source.util",
  "simpleName": "ParameterNameProvider",
  "moduleName": "jdk.compiler",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.CharSequence",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.lang.model.element.VariableElement",
            "type": "Class"
          },
          "field": {
            "name": "parameter"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getParameterName",
      "comment": "Infer a parameter name for the given parameter. The implementations of this method should infer parameter names in such a way that the parameter names are distinct for any given owning method. If the implementation of this method returns null, an automatically synthesized name is used.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eparameter\u003c/code\u003e - the parameter for which the name should be inferred"
        ],
        "return": [
          "a user-friendly name for the parameter, or null if unknown"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.source.util.ParameterNameProvider",
  "comment": "A provider for parameter names when the parameter names are not determined from a reliable source, like a classfile.",
  "tagMap": {
    "since": [
      "13"
    ]
  }
}