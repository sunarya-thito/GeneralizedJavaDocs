{
  "packageName": "com.sun.source.tree",
  "simpleName": "Scope",
  "moduleName": "jdk.compiler",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "com.sun.source.tree.Scope",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEnclosingScope",
      "comment": "Returns the enclosing scope.",
      "tagMap": {
        "return": [
          "the enclosing scope"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.lang.model.element.TypeElement",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEnclosingClass",
      "comment": "Returns the innermost type element containing the position of this scope.",
      "tagMap": {
        "return": [
          "the innermost enclosing type element"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.lang.model.element.ExecutableElement",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEnclosingMethod",
      "comment": "Returns the innermost executable element containing the position of this scope.",
      "tagMap": {
        "return": [
          "the innermost enclosing method declaration"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Iterable",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.lang.model.element.Element",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getLocalElements",
      "comment": "Returns the elements directly contained in this scope.",
      "tagMap": {
        "return": [
          "the elements contained in this scope"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.source.tree.Scope",
  "comment": "Interface for determining locally available program elements, such as local variables and imports. Upon creation, a Scope is associated with a given program position; for example, a \n\u003ca href\u003d\"Tree.html\" title\u003d\"interface in com.sun.source.tree\"\u003etree node\u003c/a\u003e. This position may be used to infer an enclosing method and/or class. \n\u003cp\u003eA Scope does not itself contain the details of the elements corresponding to the parameters, methods and fields of the methods and classes containing its position. However, these elements can be determined from the enclosing elements. \u003c/p\u003e\n\u003cp\u003eScopes may be contained in an enclosing scope. The outermost scope contains those elements available via \"star import\" declarations; the scope within that contains the top level elements of the compilation unit, including any named imports.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}