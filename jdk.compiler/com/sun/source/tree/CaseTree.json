{
  "packageName": "com.sun.source.tree",
  "simpleName": "CaseTree",
  "moduleName": "jdk.compiler",
  "type": "INTERFACE",
  "superClass": {
    "name": "com.sun.source.tree.Tree",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "com.sun.source.tree.ExpressionTree",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getExpression",
      "comment": "Returns the expression for the case, or null if this is the default case. If this case has multiple labels, returns the first label.",
      "annotations": [
        {
          "type": {
            "name": "Deprecated",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the expression for the case, or null"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "com.sun.source.tree.ExpressionTree",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getExpressions",
      "comment": "Returns the labels for this case. For default case, returns an empty list.",
      "annotations": [],
      "tagMap": {
        "return": [
          "labels for this case"
        ],
        "since": [
          "12"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "com.sun.source.tree.StatementTree",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getStatements",
      "comment": "For case with kind CaseTree.CaseKind.STATEMENT, returns the statements labeled by the case. Returns null for case with kind CaseTree.CaseKind.RULE.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the statements labeled by the case or null"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.tree.Tree",
        "type": "Class"
      },
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBody",
      "comment": "For case with kind CaseTree.CaseKind.RULE, returns the statement or expression after the arrow. Returns null for case with kind CaseTree.CaseKind.STATEMENT.",
      "annotations": [],
      "tagMap": {
        "return": [
          "case value or null"
        ],
        "since": [
          "12"
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.source.tree.CaseTree$CaseKind",
        "type": "Class"
      },
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCaseKind",
      "comment": "Returns the kind of this case.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the kind of this case"
        ],
        "since": [
          "12"
        ]
      }
    }
  ],
  "innerClasses": [
    "com.sun.source.tree.CaseTree$CaseKind"
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.source.tree.CaseTree",
  "comment": "A tree node for a \n\u003ccode\u003ecase\u003c/code\u003e in a \n\u003ccode\u003eswitch\u003c/code\u003e statement or expression. For example: \n\u003cpre\u003e   case \u003cem\u003eexpression\u003c/em\u003e :\n       \u003cem\u003estatements\u003c/em\u003e\n\n   default :\n       \u003cem\u003estatements\u003c/em\u003e\n \u003c/pre\u003e",
  "tagMap": {
    "See Java Language Specification:": [
      "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-14.html#jls-14.11\"\u003e14.11 The switch Statement\u003c/a\u003e\n\u003cbr\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}