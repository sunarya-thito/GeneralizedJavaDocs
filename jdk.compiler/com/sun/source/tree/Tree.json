{
  "packageName": "com.sun.source.tree",
  "simpleName": "Tree",
  "moduleName": "jdk.compiler",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "com.sun.source.tree.Tree$Kind",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getKind",
      "comment": "Returns the kind of this tree.",
      "tagMap": {
        "return": [
          "the kind of this tree"
        ]
      }
    },
    {
      "returnType": {
        "name": "R",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "com.sun.source.tree.TreeVisitor",
            "parameters": [
              {
                "name": "R",
                "type": "Class"
              },
              {
                "name": "D",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "visitor"
          }
        },
        {
          "type": {
            "name": "D",
            "type": "Class"
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "R",
          "type": "Variable"
        },
        {
          "name": "D",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "accept",
      "comment": "Accept method used to implement the visitor pattern. The visitor pattern is used to implement operations on trees.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eR\u003c/code\u003e - the result type of this operation",
          "\u003ccode\u003eD\u003c/code\u003e - the type of additional data"
        ],
        "param": [
          "\u003ccode\u003evisitor\u003c/code\u003e - the visitor to be called",
          "\u003ccode\u003edata\u003c/code\u003e - a value to be passed to the visitor"
        ],
        "return": [
          "the result returned from calling the visitor"
        ]
      }
    }
  ],
  "innerClasses": [
    "com.sun.source.tree.Tree$Kind"
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.source.tree.Tree",
  "comment": "Common interface for all nodes in an abstract syntax tree. \n\u003cp\u003e\u003cb\u003eWARNING:\u003c/b\u003e This interface and its sub-interfaces are subject to change as the Java programming language evolves. These interfaces are implemented by the JDK Java compiler (javac) and should not be implemented either directly or indirectly by other applications.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}