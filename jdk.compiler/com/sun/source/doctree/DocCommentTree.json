{
  "packageName": "com.sun.source.doctree",
  "simpleName": "DocCommentTree",
  "moduleName": "jdk.compiler",
  "type": "INTERFACE",
  "superClass": {
    "name": "com.sun.source.doctree.DocTree",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "com.sun.source.doctree.DocTree",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getFirstSentence",
      "comment": "Returns the first sentence of a documentation comment.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the first sentence of a documentation comment"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "com.sun.source.doctree.DocTree",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getFullBody",
      "comment": "Returns the entire body of a documentation comment, appearing before any block tags, including the first sentence.",
      "annotations": [],
      "tagMap": {
        "return": [
          "body of a documentation comment first sentence inclusive"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "com.sun.source.doctree.DocTree",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBody",
      "comment": "Returns the body of a documentation comment, appearing after the first sentence, and before any block tags.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the body of a documentation comment"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "com.sun.source.doctree.DocTree",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBlockTags",
      "comment": "Returns the block tags for a documentation comment.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the block tags of a documentation comment"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "com.sun.source.doctree.DocTree",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPreamble",
      "comment": "Returns a list of trees containing the content (if any) preceding the content of the documentation comment. When the DocCommentTree has been read from a documentation comment in a Java source file, the list will be empty. When the DocCommentTree has been read from an HTML file, this represents the content from the beginning of the file up to and including the \u003cbody\u003e tag.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "This implementation returns an empty list."
        ],
        "return": [
          "the list of trees"
        ],
        "since": [
          "10"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "com.sun.source.doctree.DocTree",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPostamble",
      "comment": "Returns a list of trees containing the content (if any) following the content of the documentation comment. When the DocCommentTree has been read from a documentation comment in a Java source file, the list will be empty. When DocCommentTree has been read from an HTML file, this represents the content from the \u003c/body\u003e tag to the end of file.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "This implementation returns an empty list."
        ],
        "return": [
          "the list of trees"
        ],
        "since": [
          "10"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.source.doctree.DocCommentTree",
  "comment": "The top-level representation of a documentation comment. \n\u003cpre\u003e    first-sentence body block-tags\n \u003c/pre\u003e",
  "tagMap": {
    "since": [
      "1.8"
    ]
  }
}