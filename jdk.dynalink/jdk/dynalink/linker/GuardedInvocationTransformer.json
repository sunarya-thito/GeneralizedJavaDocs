{
  "packageName": "jdk.dynalink.linker",
  "simpleName": "GuardedInvocationTransformer",
  "moduleName": "jdk.dynalink",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "jdk.dynalink.linker.GuardedInvocation",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "jdk.dynalink.linker.GuardedInvocation",
            "type": "Class"
          },
          "field": {
            "name": "inv"
          }
        },
        {
          "type": {
            "name": "jdk.dynalink.linker.LinkRequest",
            "type": "Class"
          },
          "field": {
            "name": "linkRequest"
          }
        },
        {
          "type": {
            "name": "jdk.dynalink.linker.LinkerServices",
            "type": "Class"
          },
          "field": {
            "name": "linkerServices"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "filter",
      "comment": "Given a guarded invocation, return either the same or potentially different guarded invocation.",
      "tagMap": {
        "param": [
          "\u003ccode\u003einv\u003c/code\u003e - the original guarded invocation.",
          "\u003ccode\u003elinkRequest\u003c/code\u003e - the link request for which the invocation was generated (usually by some linker).",
          "\u003ccode\u003elinkerServices\u003c/code\u003e - the linker services that can be used during creation of a new invocation."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - is allowed to be thrown by implementations if any of the passed arguments is null."
        ],
        "return": [
          "either the passed guarded invocation or a different one, with the difference usually determined based on information in the link request and the differing invocation created with the assistance of the linker services. Whether or not \n\u003ccode\u003enull\u003c/code\u003e is an accepted return value is dependent on the user of the filter."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "jdk.dynalink.linker.GuardedInvocationTransformer",
  "comment": "Interface for objects that are used to transform one guarded invocation into another one. Typical usage is for implementing \n\u003ca href\u003d\"../DynamicLinkerFactory.html#setPrelinkTransformer(jdk.dynalink.linker.GuardedInvocationTransformer)\"\u003e\u003ccode\u003epre-link transformers\u003c/code\u003e\u003c/a\u003e.",
  "tagMap": {}
}