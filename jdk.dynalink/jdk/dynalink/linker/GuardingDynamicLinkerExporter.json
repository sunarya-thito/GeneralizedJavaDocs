{
  "packageName": "jdk.dynalink.linker",
  "simpleName": "GuardingDynamicLinkerExporter",
  "moduleName": "jdk.dynalink",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "AUTOLOAD_PERMISSION_NAME",
      "comment": "The name of the runtime permission for creating instances of this class. Granting this permission to a language runtime allows it to export its linkers for automatic loading into other language runtimes.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#jdk.dynalink.linker.GuardingDynamicLinkerExporter.AUTOLOAD_PERMISSION_NAME\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Creates a new linker exporter. If there is a security manager installed checks for the RuntimePermission(\"dynalink.exportLinkersAutomatically\") runtime permission. This ensures only language runtimes granted this permission will be allowed to export their linkers for automatic loading.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if the necessary runtime permission is not granted."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "jdk.dynalink.linker.GuardingDynamicLinkerExporter",
  "comment": "A class acting as a supplier of guarding dynamic linkers that can be automatically loaded by other language runtimes. Language runtimes wishing to export their own linkers should subclass this class and implement the \n\u003ca href\u003d\"../../../../java.base/java/util/function/Supplier.html#get()\"\u003e\u003ccode\u003eSupplier.get()\u003c/code\u003e\u003c/a\u003e method to return a list of exported linkers and declare the subclass in \n\u003ccode\u003e/META-INF/services/jdk.dynalink.linker.GuardingDynamicLinkerExporter\u003c/code\u003e resource of their distribution (typically, JAR file) so that dynamic linker factories can discover them using the \n\u003ca href\u003d\"../../../../java.base/java/util/ServiceLoader.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eServiceLoader\u003c/code\u003e\u003c/a\u003e mechanism. Note that instantiating this class is tied to a security check for the \n\u003ccode\u003eRuntimePermission(\"dynalink.exportLinkersAutomatically\")\u003c/code\u003e when a security manager is present, to ensure that only trusted runtimes can automatically export their linkers into other runtimes.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.dynalink/jdk/dynalink/DynamicLinkerFactory.html#setClassLoader(java.lang.ClassLoader)\"\u003e\u003ccode\u003eDynamicLinkerFactory.setClassLoader(ClassLoader)\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}