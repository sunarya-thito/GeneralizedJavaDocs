{
  "packageName": "jdk.dynalink.linker.support",
  "simpleName": "DefaultInternalObjectFilter",
  "moduleName": "jdk.dynalink",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.invoke.MethodHandle",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.invoke.MethodHandle",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "transform",
      "comment": "Description copied from interface: MethodHandleTransformer",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.dynalink/jdk/dynalink/linker/MethodHandleTransformer.html#transform(java.lang.invoke.MethodHandle)\"\u003etransform\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.dynalink/jdk/dynalink/linker/MethodHandleTransformer.html\" title\u003d\"interface in jdk.dynalink.linker\"\u003eMethodHandleTransformer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the method handle being transformed."
        ],
        "return": [
          "transformed method handle."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.invoke.MethodHandle",
            "type": "Class"
          },
          "field": {
            "name": "parameterFilter"
          }
        },
        {
          "type": {
            "name": "java.lang.invoke.MethodHandle",
            "type": "Class"
          },
          "field": {
            "name": "returnFilter"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new filter.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eparameterFilter\u003c/code\u003e - the filter for method parameters. Must be of type \n\u003ccode\u003eObject(Object)\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003ereturnFilter\u003c/code\u003e - the filter for return values. Must be of type \n\u003ccode\u003eObject(Object)\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if one or both filters are not of the expected type."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "jdk.dynalink.linker.support.DefaultInternalObjectFilter",
  "comment": "Default implementation for a \n\u003ca href\u003d\"../../DynamicLinkerFactory.html#setInternalObjectsFilter(jdk.dynalink.linker.MethodHandleTransformer)\"\u003e\u003ccode\u003eDynamicLinkerFactory.setInternalObjectsFilter(MethodHandleTransformer)\u003c/code\u003e\u003c/a\u003e that delegates to a pair of filtering method handles. It takes a method handle of \n\u003ccode\u003eObject(Object)\u003c/code\u003e type for filtering parameter values and another one of the same type for filtering return values. It applies them as parameter and return value filters on method handles passed to its \n\u003ca href\u003d\"#transform(java.lang.invoke.MethodHandle)\"\u003e\u003ccode\u003etransform(MethodHandle)\u003c/code\u003e\u003c/a\u003e method, on those parameters and return values that are declared to have type \n\u003ca href\u003d\"../../../../../java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eObject\u003c/code\u003e\u003c/a\u003e. Also handles \n\u003ca href\u003d\"../../../../../java.base/java/lang/invoke/MethodHandle.html#isVarargsCollector()\"\u003e\u003ccode\u003emethod handles that support variable arity calls\u003c/code\u003e\u003c/a\u003e with a last \n\u003ccode\u003eObject[]\u003c/code\u003e parameter. You can broadly think of the parameter filter as being a wrapping method for exposing internal runtime objects wrapped into an adapter with some public interface, and the return value filter as being its inverse unwrapping method.",
  "tagMap": {}
}