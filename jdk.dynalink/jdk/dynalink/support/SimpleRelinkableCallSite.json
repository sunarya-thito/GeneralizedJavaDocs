{
  "packageName": "jdk.dynalink.support",
  "simpleName": "SimpleRelinkableCallSite",
  "moduleName": "jdk.dynalink",
  "type": "CLASS",
  "superClass": {
    "name": "jdk.dynalink.support.AbstractRelinkableCallSite",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "jdk.dynalink.linker.GuardedInvocation",
            "type": "Class"
          },
          "field": {
            "name": "guardedInvocation"
          }
        },
        {
          "type": {
            "name": "java.lang.invoke.MethodHandle",
            "type": "Class"
          },
          "field": {
            "name": "relinkAndInvoke"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "relink",
      "comment": "Description copied from interface: RelinkableCallSite",
      "tagMap": {
        "param": [
          "\u003ccode\u003eguardedInvocation\u003c/code\u003e - the guarded invocation that the call site should incorporate into its target method handle.",
          "\u003ccode\u003erelinkAndInvoke\u003c/code\u003e - a relink-and-invoke method handle. This is a method handle matching the method type of the call site that is supplied by the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.dynalink/jdk/dynalink/DynamicLinker.html\" title\u003d\"class in jdk.dynalink\"\u003e\u003ccode\u003eDynamicLinker\u003c/code\u003e\u003c/a\u003e as a callback. It should be used by this call site as the ultimate fallback when it can\u0027t invoke its target with the passed arguments. The fallback method is such that when it\u0027s invoked, it\u0027ll try to obtain an adequate target \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.dynalink/jdk/dynalink/linker/GuardedInvocation.html\" title\u003d\"class in jdk.dynalink.linker\"\u003e\u003ccode\u003eGuardedInvocation\u003c/code\u003e\u003c/a\u003e for the invocation, and subsequently invoke \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.dynalink/jdk/dynalink/RelinkableCallSite.html#relink(jdk.dynalink.linker.GuardedInvocation,java.lang.invoke.MethodHandle)\"\u003e\u003ccode\u003eRelinkableCallSite.relink(GuardedInvocation, MethodHandle)\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.dynalink/jdk/dynalink/RelinkableCallSite.html#resetAndRelink(jdk.dynalink.linker.GuardedInvocation,java.lang.invoke.MethodHandle)\"\u003e\u003ccode\u003eRelinkableCallSite.resetAndRelink(GuardedInvocation, MethodHandle)\u003c/code\u003e\u003c/a\u003e, and finally invoke the target."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "jdk.dynalink.linker.GuardedInvocation",
            "type": "Class"
          },
          "field": {
            "name": "guardedInvocation"
          }
        },
        {
          "type": {
            "name": "java.lang.invoke.MethodHandle",
            "type": "Class"
          },
          "field": {
            "name": "relinkAndInvoke"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "resetAndRelink",
      "comment": "Description copied from interface: RelinkableCallSite",
      "tagMap": {
        "param": [
          "\u003ccode\u003eguardedInvocation\u003c/code\u003e - the guarded invocation that the call site should use to build its target method handle.",
          "\u003ccode\u003erelinkAndInvoke\u003c/code\u003e - a relink-and-invoke method handle. This is a method handle matching the method type of the call site that is supplied by the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.dynalink/jdk/dynalink/DynamicLinker.html\" title\u003d\"class in jdk.dynalink\"\u003e\u003ccode\u003eDynamicLinker\u003c/code\u003e\u003c/a\u003e as a callback. It should be used by this call site as the ultimate fallback when it can\u0027t invoke its target with the passed arguments. The fallback method is such that when it\u0027s invoked, it\u0027ll try to obtain an adequate target \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.dynalink/jdk/dynalink/linker/GuardedInvocation.html\" title\u003d\"class in jdk.dynalink.linker\"\u003e\u003ccode\u003eGuardedInvocation\u003c/code\u003e\u003c/a\u003e for the invocation, and subsequently invoke \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.dynalink/jdk/dynalink/RelinkableCallSite.html#relink(jdk.dynalink.linker.GuardedInvocation,java.lang.invoke.MethodHandle)\"\u003e\u003ccode\u003eRelinkableCallSite.relink(GuardedInvocation, MethodHandle)\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.dynalink/jdk/dynalink/RelinkableCallSite.html#resetAndRelink(jdk.dynalink.linker.GuardedInvocation,java.lang.invoke.MethodHandle)\"\u003e\u003ccode\u003eRelinkableCallSite.resetAndRelink(GuardedInvocation, MethodHandle)\u003c/code\u003e\u003c/a\u003e, and finally invoke the target."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "jdk.dynalink.CallSiteDescriptor",
            "type": "Class"
          },
          "field": {
            "name": "descriptor"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new call site with monomorphic inline caching strategy.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edescriptor\u003c/code\u003e - the descriptor for this call site"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "jdk.dynalink.support.SimpleRelinkableCallSite",
  "comment": "A relinkable call site that implements monomorphic inline caching strategy, only being linked to a single \n\u003ca href\u003d\"../linker/GuardedInvocation.html\" title\u003d\"class in jdk.dynalink.linker\"\u003e\u003ccode\u003eGuardedInvocation\u003c/code\u003e\u003c/a\u003e at any given time. If the guard of that single invocation fails, or it has an invalidated switch point, or its invalidating exception triggered, then the call site will throw it away and ask its associated \n\u003ca href\u003d\"../DynamicLinker.html\" title\u003d\"class in jdk.dynalink\"\u003e\u003ccode\u003eDynamicLinker\u003c/code\u003e\u003c/a\u003e to relink it.",
  "tagMap": {}
}