{
  "packageName": "jdk.dynalink",
  "simpleName": "Operation",
  "moduleName": "jdk.dynalink",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "jdk.dynalink.NamespaceOperation",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "jdk.dynalink.Namespace",
            "type": "Class"
          },
          "field": {
            "name": "namespace"
          }
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "withNamespace",
      "comment": "Returns a NamespaceOperation using this operation as its base.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enamespace\u003c/code\u003e - the namespace that is the target of the namespace operation."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this operation is already a namespace operation or a named operation.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003enamespace\u003c/code\u003e is null."
        ],
        "return": [
          "a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.dynalink/jdk/dynalink/NamespaceOperation.html\" title\u003d\"class in jdk.dynalink\"\u003e\u003ccode\u003eNamespaceOperation\u003c/code\u003e\u003c/a\u003e with this operation as its base and the specified namespace as its target."
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.dynalink.NamespaceOperation",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "jdk.dynalink.Namespace",
            "type": "Class"
          },
          "field": {
            "name": "namespaces"
          },
          "varArgs": {}
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "withNamespaces",
      "comment": "Returns a NamespaceOperation using this operation as its base.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enamespaces\u003c/code\u003e - the namespaces that are the target of the namespace operation."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this operation is already a namespace operation or a named operation.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003enamespace\u003c/code\u003e or any of its elements is null."
        ],
        "return": [
          "a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.dynalink/jdk/dynalink/NamespaceOperation.html\" title\u003d\"class in jdk.dynalink\"\u003e\u003ccode\u003eNamespaceOperation\u003c/code\u003e\u003c/a\u003e with this operation as its base and the specified namespaces as its targets."
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.dynalink.NamedOperation",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "named",
      "comment": "Returns a NamedOperation using this operation as its base.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name that is the target of the named operation."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this operation is already a named operation.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e is null."
        ],
        "return": [
          "a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.dynalink/jdk/dynalink/NamedOperation.html\" title\u003d\"class in jdk.dynalink\"\u003e\u003ccode\u003eNamedOperation\u003c/code\u003e\u003c/a\u003e with this operation as its base and the specified name."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "jdk.dynalink.Operation",
  "comment": "An object that describes a dynamic operation. Dynalink defines a set of standard operations with the \n\u003ca href\u003d\"StandardOperation.html\" title\u003d\"enum class in jdk.dynalink\"\u003e\u003ccode\u003eStandardOperation\u003c/code\u003e\u003c/a\u003e class, as well as a way to express the target \n\u003ca href\u003d\"Namespace.html\" title\u003d\"interface in jdk.dynalink\"\u003e\u003ccode\u003enamespace(s)\u003c/code\u003e\u003c/a\u003e of an operation on an object using \n\u003ca href\u003d\"NamespaceOperation.html\" title\u003d\"class in jdk.dynalink\"\u003e\u003ccode\u003eNamespaceOperation\u003c/code\u003e\u003c/a\u003e and finally a way to attach a fixed target name to an operation using \n\u003ca href\u003d\"NamedOperation.html\" title\u003d\"class in jdk.dynalink\"\u003e\u003ccode\u003eNamedOperation\u003c/code\u003e\u003c/a\u003e. When presenting examples in this documentation, we will refer to standard operations using their name (e.g. \n\u003ccode\u003eGET\u003c/code\u003e), to namespace operations by separating their base operation with a colon from their namespace (e.g. \n\u003ccode\u003eGET:PROPERTY\u003c/code\u003e), or in case of multiple namespaces we will further separate those with the vertical line character (e.g. \n\u003ccode\u003eGET:PROPERTY|ELEMENT\u003c/code\u003e), and finally we will refer to named operations by separating the base operation and the name with the colon character (e.g. \n\u003ccode\u003eGET:PROPERTY|ELEMENT:color\u003c/code\u003e).",
  "tagMap": {}
}