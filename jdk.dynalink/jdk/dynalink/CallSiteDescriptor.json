{
  "packageName": "jdk.dynalink",
  "simpleName": "CallSiteDescriptor",
  "moduleName": "jdk.dynalink",
  "type": "CLASS",
  "superClass": {
    "name": "jdk.dynalink.SecureLookupSupplier",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "jdk.dynalink.Operation",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getOperation",
      "comment": "Returns the operation at the call site.",
      "tagMap": {
        "return": [
          "the operation at the call site."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.invoke.MethodType",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getMethodType",
      "comment": "The type of the method at the call site.",
      "tagMap": {
        "return": [
          "type of the method at the call site."
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.dynalink.CallSiteDescriptor",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.invoke.MethodType",
            "type": "Class"
          },
          "field": {
            "name": "newMethodType"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "changeMethodType",
      "comment": "Finds or creates a call site descriptor that only differs in its method type from this descriptor. Invokes changeMethodTypeInternal(MethodType).",
      "tagMap": {
        "param": [
          "\u003ccode\u003enewMethodType\u003c/code\u003e - the new method type"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003enewMethodType\u003c/code\u003e is null."
        ],
        "return": [
          "a call site descriptor with changed method type."
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.dynalink.CallSiteDescriptor",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.invoke.MethodType",
            "type": "Class"
          },
          "field": {
            "name": "newMethodType"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "changeMethodTypeInternal",
      "comment": "Finds or creates a call site descriptor that only differs in its method type from this descriptor. Subclasses must override this method to return an object of their exact class. If an overridden method changes something other than the method type in the descriptor (its class, lookup, or operation), or returns null, an AssertionError will be thrown from changeMethodType(MethodType).",
      "tagMap": {
        "param": [
          "\u003ccode\u003enewMethodType\u003c/code\u003e - the new method type"
        ],
        "return": [
          "a call site descriptor with the changed method type."
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.dynalink.CallSiteDescriptor",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "jdk.dynalink.Operation",
            "type": "Class"
          },
          "field": {
            "name": "newOperation"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "changeOperation",
      "comment": "Finds or creates a call site descriptor that only differs in its operation from this descriptor. Invokes changeOperationInternal(Operation).",
      "tagMap": {
        "param": [
          "\u003ccode\u003enewOperation\u003c/code\u003e - the new operation"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003enewOperation\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if the descriptor\u0027s lookup isn\u0027t the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/MethodHandles.html#publicLookup()\"\u003e\u003ccode\u003eMethodHandles.publicLookup()\u003c/code\u003e\u003c/a\u003e, and a security manager is present, and a check for \n\u003ccode\u003eRuntimePermission(\"dynalink.getLookup\")\u003c/code\u003e fails. This is necessary as changing the operation in the call site descriptor allows fabrication of descriptors for arbitrary operations with the lookup."
        ],
        "return": [
          "a call site descriptor with the changed operation."
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.dynalink.CallSiteDescriptor",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "jdk.dynalink.Operation",
            "type": "Class"
          },
          "field": {
            "name": "newOperation"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "changeOperationInternal",
      "comment": "Finds or creates a call site descriptor that only differs in its operation from this descriptor. Subclasses must override this method to return an object of their exact class. If an overridden method changes something other than the operation in the descriptor (its class, lookup, or method type), or returns null, an AssertionError will be thrown from changeOperation(Operation).",
      "tagMap": {
        "param": [
          "\u003ccode\u003enewOperation\u003c/code\u003e - the new operation"
        ],
        "return": [
          "a call site descriptor with the changed operation."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Returns true if this call site descriptor is equal to the passed object. It is considered equal if the other object is of the exact same class, their operations and method types are equal, and their lookups have the same MethodHandles.Lookup.lookupClass() and MethodHandles.Lookup.lookupModes().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the reference object with which to compare."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this object is the same as the obj argument; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns a value-based hash code of this call site descriptor computed from its operation, method type, and lookup object\u0027s lookup class and lookup modes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "value-based hash code for this call site descriptor."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns the string representation of this call site descriptor, of the format name(parameterTypes)returnType@lookup.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of the object."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.invoke.MethodHandles$Lookup",
            "type": "Class"
          },
          "field": {
            "name": "lookup"
          }
        },
        {
          "type": {
            "name": "jdk.dynalink.Operation",
            "type": "Class"
          },
          "field": {
            "name": "operation"
          }
        },
        {
          "type": {
            "name": "java.lang.invoke.MethodType",
            "type": "Class"
          },
          "field": {
            "name": "methodType"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new call site descriptor.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elookup\u003c/code\u003e - the lookup object describing the class the call site belongs to. When creating descriptors from a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/package-summary.html\"\u003e\u003ccode\u003ejava.lang.invoke\u003c/code\u003e\u003c/a\u003e bootstrap method, it should be the lookup passed to the bootstrap.",
          "\u003ccode\u003eoperation\u003c/code\u003e - the dynamic operation at the call site.",
          "\u003ccode\u003emethodType\u003c/code\u003e - the method type of the call site. When creating descriptors from a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/package-summary.html\"\u003e\u003ccode\u003ejava.lang.invoke\u003c/code\u003e\u003c/a\u003e bootstrap method, it should be the method type passed to the bootstrap."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "jdk.dynalink.CallSiteDescriptor",
  "comment": "Call site descriptors contain all the information necessary for linking a call site. This information is normally passed as parameters to bootstrap methods and consists of the \n\u003ccode\u003eMethodHandles.Lookup\u003c/code\u003e object on the caller class in which the call site occurs, the dynamic operation at the call site, and the method type of the call site. \n\u003ccode\u003eCallSiteDescriptor\u003c/code\u003e objects are used in Dynalink to capture and store these parameters for subsequent use by the \n\u003ca href\u003d\"DynamicLinker.html\" title\u003d\"class in jdk.dynalink\"\u003e\u003ccode\u003eDynamicLinker\u003c/code\u003e\u003c/a\u003e. \n\u003cp\u003e The constructors of built-in \u003ca href\u003d\"RelinkableCallSite.html\" title\u003d\"interface in jdk.dynalink\"\u003e\u003ccode\u003eRelinkableCallSite\u003c/code\u003e\u003c/a\u003e implementations all take a call site descriptor. \u003c/p\u003e\n\u003cp\u003e Call site descriptors must be immutable. You can use this class as-is or you can subclass it, especially if you need to add further information to the descriptors (typically, values passed in additional parameters to the bootstrap method. Since the descriptors must be immutable, you can set up a cache for equivalent descriptors to have the call sites share them. \u003c/p\u003e\n\u003cp\u003e The class extends \u003ca href\u003d\"SecureLookupSupplier.html\" title\u003d\"class in jdk.dynalink\"\u003e\u003ccode\u003eSecureLookupSupplier\u003c/code\u003e\u003c/a\u003e for security-checked access to the \u003ccode\u003eMethodHandles.Lookup\u003c/code\u003e object it carries. This lookup should be used to find method handles to set as targets of the call site described by this descriptor.\u003c/p\u003e",
  "tagMap": {}
}