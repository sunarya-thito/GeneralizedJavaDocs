{
  "packageName": "jdk.dynalink",
  "simpleName": "DynamicLinker",
  "moduleName": "jdk.dynalink",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "T",
            "type": "Class"
          },
          "name": "callSite",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "upperBounds": [
            {
              "name": "jdk.dynalink.RelinkableCallSite",
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "link",
      "comment": "Links an invokedynamic call site. It will install a method handle into the call site that invokes the relinking mechanism of this linker. Next time the call site is invoked, it will be linked for the actual arguments it was invoked with.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the particular subclass of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.dynalink/jdk/dynalink/RelinkableCallSite.html\" title\u003d\"interface in jdk.dynalink\"\u003e\u003ccode\u003eRelinkableCallSite\u003c/code\u003e\u003c/a\u003e for which to create a link."
        ],
        "param": [
          "\u003ccode\u003ecallSite\u003c/code\u003e - the call site to link."
        ],
        "return": [
          "the callSite, for easy call chaining."
        ]
      }
    },
    {
      "returnType": {
        "name": "jdk.dynalink.linker.LinkerServices",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLinkerServices",
      "comment": "Returns the object representing the linker services of this class that are normally exposed to individual language-specific linkers. While as a user of this class you normally only care about the link(RelinkableCallSite) method, in certain circumstances you might want to use the lower level services directly; either to lookup specific method handles, to access the type converters, and so on.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the object representing the linker services of this class."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.StackTraceElement",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getLinkedCallSiteLocation",
      "comment": "Returns a stack trace element describing the location of the invokedynamic call site currently being linked on the current thread. The operation is potentially expensive as it needs to generate a stack trace to inspect it and is intended for use in diagnostics code. For \"free-floating\" call sites (not associated with an invokedynamic instruction), the result is not well-defined.",
      "annotations": [],
      "tagMap": {
        "return": [
          "a stack trace element describing the location of the call site currently being linked, or null if it is not invoked while a call site is being linked."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "jdk.dynalink.DynamicLinker",
  "annotations": [],
  "tagMap": {}
}