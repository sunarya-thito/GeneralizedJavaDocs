{
  "packageName": "com.sun.security.auth",
  "simpleName": "PrincipalComparator",
  "moduleName": "jdk.security.auth",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.security.auth.Subject",
            "type": "Class"
          },
          "field": {
            "name": "subject"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "implies",
      "comment": "Check if the specified Subject is implied by this object.",
      "tagMap": {
        "return": [
          "true if the specified \n\u003ccode\u003eSubject\u003c/code\u003e is implied by this object, or false otherwise."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.security.auth.PrincipalComparator",
  "comment": "An object that implements the \n\u003ccode\u003ejava.security.Principal\u003c/code\u003e interface typically also implements this interface to provide a means for comparing that object to a specified \n\u003ccode\u003eSubject\u003c/code\u003e. \n\u003cp\u003e The comparison is achieved via the \u003ccode\u003eimplies\u003c/code\u003e method. The implementation of the \u003ccode\u003eimplies\u003c/code\u003e method determines whether this object \"implies\" the specified \u003ccode\u003eSubject\u003c/code\u003e. One example application of this method may be for a \"group\" object to imply a particular \u003ccode\u003eSubject\u003c/code\u003e if that \u003ccode\u003eSubject\u003c/code\u003e belongs to the group. Another example application of this method would be for \"role\" object to imply a particular \u003ccode\u003eSubject\u003c/code\u003e if that \u003ccode\u003eSubject\u003c/code\u003e is currently acting in that role. \u003c/p\u003e\n\u003cp\u003e Although classes that implement this interface typically also implement the \u003ccode\u003ejava.security.Principal\u003c/code\u003e interface, it is not required. In other words, classes may implement the \u003ccode\u003ejava.security.Principal\u003c/code\u003e interface by itself, the \u003ccode\u003ePrincipalComparator\u003c/code\u003e interface by itself, or both at the same time.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Principal.html\" title\u003d\"interface in java.security\"\u003e\u003ccode\u003ePrincipal\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/security/auth/Subject.html\" title\u003d\"class in javax.security.auth\"\u003e\u003ccode\u003eSubject\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}