{
  "packageName": "com.sun.security.auth.login",
  "simpleName": "ConfigFile",
  "moduleName": "jdk.security.auth",
  "type": "CLASS",
  "superClass": {
    "name": "javax.security.auth.login.Configuration",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.security.auth.login.AppConfigurationEntry",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAppConfigurationEntry",
      "comment": "Retrieve an entry from the Configuration using an application name as an index.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/security/auth/login/Configuration.html#getAppConfigurationEntry(java.lang.String)\"\u003egetAppConfigurationEntry\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/security/auth/login/Configuration.html\" title\u003d\"class in javax.security.auth.login\"\u003eConfiguration\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eapplicationName\u003c/code\u003e - the name used to index the \n\u003ccode\u003eConfiguration\u003c/code\u003e"
        ],
        "return": [
          "an array of \n\u003ccode\u003eAppConfigurationEntry\u003c/code\u003e which correspond to the stacked configuration of \n\u003ccode\u003eLoginModule\u003c/code\u003es for this application, or null if this application has no configured \n\u003ccode\u003eLoginModule\u003c/code\u003es."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "refresh",
      "comment": "Refresh and reload the Configuration by re-reading all of the login configurations.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/security/auth/login/Configuration.html#refresh()\"\u003erefresh\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/security/auth/login/Configuration.html\" title\u003d\"class in javax.security.auth.login\"\u003eConfiguration\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if the caller does not have permission to refresh the \n\u003ccode\u003eConfiguration\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create a new Configuration object.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eConfiguration\u003c/code\u003e can not be initialized"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.URI",
            "type": "Class"
          },
          "name": "uri",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create a new Configuration object from the specified URI.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003euri\u003c/code\u003e - the \n\u003ccode\u003eURI\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eConfiguration\u003c/code\u003e can not be initialized",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003euri\u003c/code\u003e is null"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "com.sun.security.auth.login.ConfigFile",
  "comment": "This class represents a default implementation for \n\u003ccode\u003ejavax.security.auth.login.Configuration\u003c/code\u003e. \n\u003cp\u003e This object stores the runtime login configuration representation, and is the amalgamation of multiple static login configurations that resides in files. The algorithm for locating the login configuration file(s) and reading their information into this \u003ccode\u003eConfiguration\u003c/code\u003e object is: \u003c/p\u003e\n\u003col\u003e \n \u003cli\u003e Loop through the security properties, \u003ci\u003elogin.config.url.1\u003c/i\u003e, \u003ci\u003elogin.config.url.2\u003c/i\u003e, ..., \u003ci\u003elogin.config.url.X\u003c/i\u003e. Each property value specifies a \u003ccode\u003eURL\u003c/code\u003e pointing to a login configuration file to be loaded. Read in and load each configuration. \u003c/li\u003e\n \u003cli\u003e The system property \u003ccode\u003e\u003cspan id\u003d\"java.security.auth.login.config\" class\u003d\"search-tag-result\"\u003ejava.security.auth.login.config\u003c/span\u003e\u003c/code\u003e may also be set to a \u003ccode\u003eURL\u003c/code\u003e pointing to another login configuration file (which is the case when a user uses the -D switch at runtime). If this property is defined, and its use is allowed by the security property file (the Security property, \u003ci\u003epolicy.allowSystemProperty\u003c/i\u003e is set to \u003ci\u003etrue\u003c/i\u003e), also load that login configuration. \u003c/li\u003e\n \u003cli\u003e If the \u003ci\u003ejava.security.auth.login.config\u003c/i\u003e property is defined using \"\u003d\u003d\" (rather than \"\u003d\"), then ignore all other specified login configurations and only load this configuration. \u003c/li\u003e\n \u003cli\u003e If no system or security properties were set, try to read from the file, ${user.home}/.java.login.config, where ${user.home} is the value represented by the \"user.home\" System property. \u003c/li\u003e\n\u003c/ol\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The configuration syntax supported by this implementation is exactly that syntax specified in the \u003ccode\u003ejavax.security.auth.login.Configuration\u003c/code\u003e class. In addition, the security property \u003ci\u003epolicy.expandProperties\u003c/i\u003e can be used to control whether system properties in the configuration file are expanded. If not set, the default value is \u003ci\u003etrue\u003c/i\u003e which means that properties will be expanded.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/security/auth/login/LoginContext.html\" title\u003d\"class in javax.security.auth.login\"\u003e\u003ccode\u003eLoginContext\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Security.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003esecurity properties\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}