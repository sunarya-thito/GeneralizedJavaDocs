{
  "packageName": "java.rmi.server",
  "simpleName": "UnicastRemoteObject",
  "moduleName": "java.rmi",
  "type": "CLASS",
  "superClass": {
    "name": "java.rmi.server.RemoteServer",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.CloneNotSupportedException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Returns a clone of the remote object that is distinct from the original.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/CloneNotSupportedException.html\" title\u003d\"class in java.lang\"\u003eCloneNotSupportedException\u003c/a\u003e\u003c/code\u003e - if clone failed due to a RemoteException."
        ],
        "return": [
          "the new remote object"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.rmi.server.RemoteStub",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.rmi.RemoteException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.rmi.Remote",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "exportObject",
      "comment": "Exports the remote object to make it available to receive incoming calls using an anonymous port. This method will always return a statically generated stub. The object is exported with a server socket created using the RMISocketFactory class.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the remote object to be exported"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/RemoteException.html\" title\u003d\"class in java.rmi\"\u003eRemoteException\u003c/a\u003e\u003c/code\u003e - if export fails"
        ],
        "return": [
          "remote object stub"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.rmi.Remote",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.rmi.RemoteException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.rmi.Remote",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "port"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "exportObject",
      "comment": "Exports the remote object to make it available to receive incoming calls, using the particular supplied port. The object is exported with a server socket created using the RMISocketFactory class.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the remote object to be exported",
          "\u003ccode\u003eport\u003c/code\u003e - the port to export the object on"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/RemoteException.html\" title\u003d\"class in java.rmi\"\u003eRemoteException\u003c/a\u003e\u003c/code\u003e - if export fails"
        ],
        "return": [
          "remote object stub"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.rmi.Remote",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.rmi.RemoteException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.rmi.Remote",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "port"
          }
        },
        {
          "type": {
            "name": "java.rmi.server.RMIClientSocketFactory",
            "type": "Class"
          },
          "field": {
            "name": "csf"
          }
        },
        {
          "type": {
            "name": "java.rmi.server.RMIServerSocketFactory",
            "type": "Class"
          },
          "field": {
            "name": "ssf"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "exportObject",
      "comment": "Exports the remote object to make it available to receive incoming calls, using a transport specified by the given socket factory. Either socket factory may be null, in which case the corresponding client or server socket creation method of RMISocketFactory is used instead.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the remote object to be exported",
          "\u003ccode\u003eport\u003c/code\u003e - the port to export the object on",
          "\u003ccode\u003ecsf\u003c/code\u003e - the client-side socket factory for making calls to the remote object",
          "\u003ccode\u003essf\u003c/code\u003e - the server-side socket factory for receiving remote calls"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/RemoteException.html\" title\u003d\"class in java.rmi\"\u003eRemoteException\u003c/a\u003e\u003c/code\u003e - if export fails"
        ],
        "return": [
          "remote object stub"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.rmi.Remote",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.rmi.RemoteException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.rmi.Remote",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "port"
          }
        },
        {
          "type": {
            "name": "java.io.ObjectInputFilter",
            "type": "Class"
          },
          "field": {
            "name": "filter"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "exportObject",
      "comment": "Exports the remote object to make it available to receive incoming calls, using the particular supplied port and filter. The object is exported with a server socket created using the RMISocketFactory class.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the remote object to be exported",
          "\u003ccode\u003eport\u003c/code\u003e - the port to export the object on",
          "\u003ccode\u003efilter\u003c/code\u003e - an ObjectInputFilter applied when deserializing invocation arguments; may be \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/RemoteException.html\" title\u003d\"class in java.rmi\"\u003eRemoteException\u003c/a\u003e\u003c/code\u003e - if export fails"
        ],
        "return": [
          "remote object stub"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.rmi.Remote",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.rmi.RemoteException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.rmi.Remote",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "port"
          }
        },
        {
          "type": {
            "name": "java.rmi.server.RMIClientSocketFactory",
            "type": "Class"
          },
          "field": {
            "name": "csf"
          }
        },
        {
          "type": {
            "name": "java.rmi.server.RMIServerSocketFactory",
            "type": "Class"
          },
          "field": {
            "name": "ssf"
          }
        },
        {
          "type": {
            "name": "java.io.ObjectInputFilter",
            "type": "Class"
          },
          "field": {
            "name": "filter"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "exportObject",
      "comment": "Exports the remote object to make it available to receive incoming calls, using a transport specified by the given socket factory and filter. Either socket factory may be null, in which case the corresponding client or server socket creation method of RMISocketFactory is used instead.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the remote object to be exported",
          "\u003ccode\u003eport\u003c/code\u003e - the port to export the object on",
          "\u003ccode\u003ecsf\u003c/code\u003e - the client-side socket factory for making calls to the remote object",
          "\u003ccode\u003essf\u003c/code\u003e - the server-side socket factory for receiving remote calls",
          "\u003ccode\u003efilter\u003c/code\u003e - an ObjectInputFilter applied when deserializing invocation arguments; may be \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/RemoteException.html\" title\u003d\"class in java.rmi\"\u003eRemoteException\u003c/a\u003e\u003c/code\u003e - if export fails"
        ],
        "return": [
          "remote object stub"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.rmi.NoSuchObjectException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.rmi.Remote",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "force"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "unexportObject",
      "comment": "Removes the remote object, obj, from the RMI runtime. If successful, the object can no longer accept incoming RMI calls. If the force parameter is true, the object is forcibly unexported even if there are pending calls to the remote object or the remote object still has calls in progress. If the force parameter is false, the object is only unexported if there are no pending or in progress calls to the object.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the remote object to be unexported",
          "\u003ccode\u003eforce\u003c/code\u003e - if true, unexports the object even if there are pending or in-progress calls; if false, only unexports the object if there are no pending or in-progress calls"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/NoSuchObjectException.html\" title\u003d\"class in java.rmi\"\u003eNoSuchObjectException\u003c/a\u003e\u003c/code\u003e - if the remote object is not currently exported"
        ],
        "return": [
          "true if operation is successful, false otherwise"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.rmi.RemoteException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Creates and exports a new UnicastRemoteObject object using an anonymous port. The object is exported with a server socket created using the RMISocketFactory class.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/RemoteException.html\" title\u003d\"class in java.rmi\"\u003eRemoteException\u003c/a\u003e\u003c/code\u003e - if failed to export object"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.rmi.RemoteException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "port"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Creates and exports a new UnicastRemoteObject object using the particular supplied port. The object is exported with a server socket created using the RMISocketFactory class.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eport\u003c/code\u003e - the port number on which the remote object receives calls (if \n\u003ccode\u003eport\u003c/code\u003e is zero, an anonymous port is chosen)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/RemoteException.html\" title\u003d\"class in java.rmi\"\u003eRemoteException\u003c/a\u003e\u003c/code\u003e - if failed to export object"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.rmi.RemoteException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "port"
          }
        },
        {
          "type": {
            "name": "java.rmi.server.RMIClientSocketFactory",
            "type": "Class"
          },
          "field": {
            "name": "csf"
          }
        },
        {
          "type": {
            "name": "java.rmi.server.RMIServerSocketFactory",
            "type": "Class"
          },
          "field": {
            "name": "ssf"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Creates and exports a new UnicastRemoteObject object using the particular supplied port and socket factories. Either socket factory may be null, in which case the corresponding client or server socket creation method of RMISocketFactory is used instead.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eport\u003c/code\u003e - the port number on which the remote object receives calls (if \n\u003ccode\u003eport\u003c/code\u003e is zero, an anonymous port is chosen)",
          "\u003ccode\u003ecsf\u003c/code\u003e - the client-side socket factory for making calls to the remote object",
          "\u003ccode\u003essf\u003c/code\u003e - the server-side socket factory for receiving remote calls"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/RemoteException.html\" title\u003d\"class in java.rmi\"\u003eRemoteException\u003c/a\u003e\u003c/code\u003e - if failed to export object"
        ],
        "since": [
          "1.2"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.rmi.server.UnicastRemoteObject",
  "comment": "Used for exporting a remote object with JRMP and obtaining a stub that communicates to the remote object. Stubs are generated at runtime using dynamic proxy objects. \n\u003cp\u003e\u003cstrong\u003eDeprecated: Static Stubs.\u003c/strong\u003e \u003cem\u003eSupport for statically generated stubs is deprecated. This includes the API in this class that requires the use of static stubs, as well as the runtime support for loading static stubs. Generating stubs dynamically is preferred, using one of the non-deprecated ways of exporting objects as listed below. \u003c/em\u003e \u003c/p\u003e\n\u003cp\u003eThere are eight ways to export remote objects: \u003c/p\u003e\n\u003col\u003e \n \u003cli\u003eSubclassing \u003ccode\u003eUnicastRemoteObject\u003c/code\u003e and calling the \u003ca href\u003d\"#%3Cinit%3E()\"\u003e\u003ccode\u003eUnicastRemoteObject()\u003c/code\u003e\u003c/a\u003e constructor. \u003c/li\u003e\n \u003cli\u003eSubclassing \u003ccode\u003eUnicastRemoteObject\u003c/code\u003e and calling the \u003ca href\u003d\"#%3Cinit%3E(int)\"\u003e\u003ccode\u003eUnicastRemoteObject(port)\u003c/code\u003e\u003c/a\u003e constructor. \u003c/li\u003e\n \u003cli\u003eSubclassing \u003ccode\u003eUnicastRemoteObject\u003c/code\u003e and calling the \u003ca href\u003d\"#%3Cinit%3E(int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)\"\u003e\u003ccode\u003eUnicastRemoteObject(port, csf, ssf)\u003c/code\u003e\u003c/a\u003e constructor. \u003c/li\u003e\n \u003cli\u003eCalling the \u003ca href\u003d\"#exportObject(java.rmi.Remote)\"\u003e\u003ccode\u003eexportObject(Remote)\u003c/code\u003e\u003c/a\u003e method. \u003cstrong\u003eDeprecated.\u003c/strong\u003e \u003c/li\u003e\n \u003cli\u003eCalling the \u003ca href\u003d\"#exportObject(java.rmi.Remote,int)\"\u003e\u003ccode\u003eexportObject(Remote, port)\u003c/code\u003e\u003c/a\u003e method. \u003c/li\u003e\n \u003cli\u003eCalling the \u003ca href\u003d\"#exportObject(java.rmi.Remote,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)\"\u003e\u003ccode\u003eexportObject(Remote, port, csf, ssf)\u003c/code\u003e\u003c/a\u003e method. \u003c/li\u003e\n \u003cli\u003eCalling the \u003ca href\u003d\"#exportObject(java.rmi.Remote,int,java.io.ObjectInputFilter)\"\u003e\u003ccode\u003eexportObject(Remote, port, filter)\u003c/code\u003e\u003c/a\u003e method. \u003c/li\u003e\n \u003cli\u003eCalling the \u003ca href\u003d\"#exportObject(java.rmi.Remote,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory,java.io.ObjectInputFilter)\"\u003e\u003ccode\u003eexportObject(Remote, port, csf, ssf, filter)\u003c/code\u003e\u003c/a\u003e method. \u003c/li\u003e\n\u003c/ol\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eThe fourth technique, \u003ca href\u003d\"#exportObject(java.rmi.Remote)\"\u003e\u003ccode\u003eexportObject(Remote)\u003c/code\u003e\u003c/a\u003e, always uses statically generated stubs and is deprecated. \u003c/p\u003e\n\u003cp\u003eThe other techniques all use the following approach: if the \u003ccode\u003ejava.rmi.server.ignoreStubClasses\u003c/code\u003e property is \u003ccode\u003etrue\u003c/code\u003e (case insensitive) or if a static stub cannot be found, stubs are generated dynamically using \u003ca href\u003d\"../../../../java.base/java/lang/reflect/Proxy.html\" title\u003d\"class in java.lang.reflect\"\u003e\u003ccode\u003eProxy\u003c/code\u003e\u003c/a\u003e objects. Otherwise, static stubs are used. \u003c/p\u003e\n\u003cp\u003eThe default value of the \u003ccode\u003ejava.rmi.server.ignoreStubClasses\u003c/code\u003e property is \u003ccode\u003efalse\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003eStatically generated stubs are typically pregenerated from the remote object\u0027s class. A static stub is loaded and an instance of that stub class is constructed as described below. \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003eA \"root class\" is determined as follows: if the remote object\u0027s class directly implements an interface that extends \u003ca href\u003d\"../Remote.html\" title\u003d\"interface in java.rmi\"\u003e\u003ccode\u003eRemote\u003c/code\u003e\u003c/a\u003e, then the remote object\u0027s class is the root class; otherwise, the root class is the most derived superclass of the remote object\u0027s class that directly implements an interface that extends \u003ccode\u003eRemote\u003c/code\u003e. \u003c/li\u003e\n \u003cli\u003eThe name of the stub class to load is determined by concatenating the binary name of the root class with the suffix \u003ccode\u003e_Stub\u003c/code\u003e. \u003c/li\u003e\n \u003cli\u003eThe stub class is loaded by name using the class loader of the root class. The stub class must be public, it must extend \u003ca href\u003d\"RemoteStub.html\" title\u003d\"class in java.rmi.server\"\u003e\u003ccode\u003eRemoteStub\u003c/code\u003e\u003c/a\u003e, it must reside in a package that is exported to at least the \u003ccode\u003ejava.rmi\u003c/code\u003e module, and it must have a public constructor that has one parameter of type \u003ca href\u003d\"RemoteRef.html\" title\u003d\"interface in java.rmi.server\"\u003e\u003ccode\u003eRemoteRef\u003c/code\u003e\u003c/a\u003e. \u003c/li\u003e\n \u003cli\u003eFinally, an instance of the stub class is constructed with a \u003ca href\u003d\"RemoteRef.html\" title\u003d\"interface in java.rmi.server\"\u003e\u003ccode\u003eRemoteRef\u003c/code\u003e\u003c/a\u003e. \u003c/li\u003e\n \u003cli\u003eIf the appropriate stub class could not be found, or if the stub class could not be loaded, or if a problem occurs creating the stub instance, a \u003ca href\u003d\"../StubNotFoundException.html\" title\u003d\"class in java.rmi\"\u003e\u003ccode\u003eStubNotFoundException\u003c/code\u003e\u003c/a\u003e is thrown. \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eStubs are dynamically generated by constructing an instance of a \u003ca href\u003d\"../../../../java.base/java/lang/reflect/Proxy.html\" title\u003d\"class in java.lang.reflect\"\u003e\u003ccode\u003eProxy\u003c/code\u003e\u003c/a\u003e with the following characteristics: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003eThe proxy\u0027s class is defined according to the specifications for the \u003ca href\u003d\"../../../../java.base/java/lang/reflect/Proxy.html#membership\"\u003e \u003ccode\u003eProxy\u003c/code\u003e \u003c/a\u003e class, using the class loader of the remote object\u0027s class. \u003c/li\u003e\n \u003cli\u003eThe proxy implements all the remote interfaces implemented by the remote object\u0027s class. \u003c/li\u003e\n \u003cli\u003eEach remote interface must either be public and reside in a package that is \u003ca href\u003d\"../../../../java.base/java/lang/Module.html#isExported(java.lang.String,java.lang.Module)\"\u003eexported\u003c/a\u003e to at least the \u003ccode\u003ejava.rmi\u003c/code\u003e module, or it must reside in a package that is \u003ca href\u003d\"../../../../java.base/java/lang/Module.html#isOpen(java.lang.String,java.lang.Module)\"\u003eopen\u003c/a\u003e to at least the \u003ccode\u003ejava.rmi\u003c/code\u003e module. \u003c/li\u003e\n \u003cli\u003eThe proxy\u0027s invocation handler is a \u003ca href\u003d\"RemoteObjectInvocationHandler.html\" title\u003d\"class in java.rmi.server\"\u003e\u003ccode\u003eRemoteObjectInvocationHandler\u003c/code\u003e\u003c/a\u003e instance constructed with a \u003ca href\u003d\"RemoteRef.html\" title\u003d\"interface in java.rmi.server\"\u003e\u003ccode\u003eRemoteRef\u003c/code\u003e\u003c/a\u003e. \u003c/li\u003e\n \u003cli\u003eIf the proxy could not be created, a \u003ca href\u003d\"../StubNotFoundException.html\" title\u003d\"class in java.rmi\"\u003e\u003ccode\u003eStubNotFoundException\u003c/code\u003e\u003c/a\u003e will be thrown. \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e Exported remote objects receive method invocations from the stubs as described in the RMI specification. Each invocation\u0027s operation and parameters are unmarshaled using a custom \u003ca href\u003d\"../../../../java.base/java/io/ObjectInputStream.html\" title\u003d\"class in java.io\"\u003e\u003ccode\u003eObjectInputStream\u003c/code\u003e\u003c/a\u003e. If an \u003ca href\u003d\"../../../../java.base/java/io/ObjectInputFilter.html\" title\u003d\"interface in java.io\"\u003e\u003ccode\u003eObjectInputFilter\u003c/code\u003e\u003c/a\u003e is provided and is not \u003ccode\u003enull\u003c/code\u003e when the object is exported, it is used to filter the parameters as they are unmarshaled from the stream. The filter is used for all invocations and all parameters regardless of the method being invoked or the parameter values. If no filter is provided or is \u003ccode\u003enull\u003c/code\u003e for the exported object then the \u003ccode\u003eObjectInputStream\u003c/code\u003e default filter, if any, is used. The default filter is configured with \u003ca href\u003d\"../../../../java.base/java/io/ObjectInputFilter.Config.html#setSerialFilter(java.io.ObjectInputFilter)\"\u003e\u003ccode\u003eObjectInputFilter.Config.setSerialFilter\u003c/code\u003e\u003c/a\u003e. If the filter rejects any of the parameters, the \u003ccode\u003eInvalidClassException\u003c/code\u003e thrown by \u003ccode\u003eObjectInputStream\u003c/code\u003e is reported as the cause of an \u003ca href\u003d\"../UnmarshalException.html\" title\u003d\"class in java.rmi\"\u003e\u003ccode\u003eUnmarshalException\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.rmi.server.UnicastRemoteObject\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "implNote": [
      "Depending upon which constructor or static method is used for exporting an object, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/server/RMISocketFactory.html\" title\u003d\"class in java.rmi.server\"\u003e\u003ccode\u003eRMISocketFactory\u003c/code\u003e\u003c/a\u003e may be used for creating sockets. By default, server sockets created by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/server/RMISocketFactory.html\" title\u003d\"class in java.rmi.server\"\u003e\u003ccode\u003eRMISocketFactory\u003c/code\u003e\u003c/a\u003e listen on all network interfaces. See the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/server/RMISocketFactory.html\" title\u003d\"class in java.rmi.server\"\u003e\u003ccode\u003eRMISocketFactory\u003c/code\u003e\u003c/a\u003e class and the section \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/specs/rmi/server.html#rmi-socket-factories\"\u003eRMI Socket Factories\u003c/a\u003e in the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/specs/rmi/index.html\"\u003eJava RMI Specification\u003c/a\u003e."
    ],
    "since": [
      "1.1"
    ]
  }
}