{
  "packageName": "java.rmi.server",
  "simpleName": "RMISocketFactory",
  "moduleName": "java.rmi",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.net.Socket",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "host"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "port"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createSocket",
      "comment": "Creates a client socket connected to the specified host and port.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/server/RMIClientSocketFactory.html#createSocket(java.lang.String,int)\"\u003ecreateSocket\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/server/RMIClientSocketFactory.html\" title\u003d\"interface in java.rmi.server\"\u003eRMIClientSocketFactory\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ehost\u003c/code\u003e - the host name",
          "\u003ccode\u003eport\u003c/code\u003e - the port number"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs during socket creation"
        ],
        "return": [
          "a socket connected to the specified host and port."
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.ServerSocket",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "port"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createServerSocket",
      "comment": "Create a server socket on the specified port (port 0 indicates an anonymous port).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/server/RMIServerSocketFactory.html#createServerSocket(int)\"\u003ecreateServerSocket\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/server/RMIServerSocketFactory.html\" title\u003d\"interface in java.rmi.server\"\u003eRMIServerSocketFactory\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eport\u003c/code\u003e - the port number"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs during server socket creation"
        ],
        "return": [
          "the server socket on the specified port"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.rmi.server.RMISocketFactory",
            "type": "Class"
          },
          "field": {
            "name": "fac"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "setSocketFactory",
      "comment": "Set the global socket factory from which RMI gets sockets (if the remote object is not associated with a specific client and/or server socket factory). The RMI socket factory can only be set once. Note: The RMISocketFactory may only be set if the current security manager allows setting a socket factory; if disallowed, a SecurityException will be thrown.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/server/RMISocketFactory.html#getSocketFactory()\"\u003e\u003ccode\u003egetSocketFactory()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkSetFactory()\"\u003e\u003ccode\u003eSecurityManager.checkSetFactory()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003efac\u003c/code\u003e - the socket factory"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the RMI socket factory is already set",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and its \n\u003ccode\u003echeckSetFactory\u003c/code\u003e method doesn\u0027t allow the operation."
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.rmi.server.RMISocketFactory",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getSocketFactory",
      "comment": "Returns the socket factory set by the setSocketFactory method. Returns null if no socket factory has been set.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/server/RMISocketFactory.html#setSocketFactory(java.rmi.server.RMISocketFactory)\"\u003e\u003ccode\u003esetSocketFactory(RMISocketFactory)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the socket factory"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.rmi.server.RMISocketFactory",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getDefaultSocketFactory",
      "comment": "Returns a reference to the default socket factory used by this RMI implementation. This will be the factory used by the RMI runtime when getSocketFactory returns null.",
      "tagMap": {
        "return": [
          "the default RMI socket factory"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.rmi.server.RMIFailureHandler",
            "type": "Class"
          },
          "field": {
            "name": "fh"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "setFailureHandler",
      "comment": "Sets the failure handler to be called by the RMI runtime if server socket creation fails. By default, if no failure handler is installed and server socket creation fails, the RMI runtime does attempt to recreate the server socket. If there is a security manager, this method first calls the security manager\u0027s checkSetFactory method to ensure the operation is allowed. This could result in a SecurityException.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/server/RMISocketFactory.html#getFailureHandler()\"\u003e\u003ccode\u003egetFailureHandler()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/server/RMIFailureHandler.html#failure(java.lang.Exception)\"\u003e\u003ccode\u003eRMIFailureHandler.failure(Exception)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003efh\u003c/code\u003e - the failure handler"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and its \n\u003ccode\u003echeckSetFactory\u003c/code\u003e method doesn\u0027t allow the operation."
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.rmi.server.RMIFailureHandler",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getFailureHandler",
      "comment": "Returns the handler for socket creation failure set by the setFailureHandler method.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/server/RMISocketFactory.html#setFailureHandler(java.rmi.server.RMIFailureHandler)\"\u003e\u003ccode\u003esetFailureHandler(RMIFailureHandler)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the failure handler"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an RMISocketFactory.",
      "tagMap": {
        "since": [
          "1.1"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.rmi.server.RMISocketFactory",
  "comment": "An \n\u003ccode\u003eRMISocketFactory\u003c/code\u003e instance is used by the RMI runtime in order to obtain client and server sockets for RMI calls. An application may use the \n\u003ccode\u003esetSocketFactory\u003c/code\u003e method to request that the RMI runtime use its socket factory instance instead of the default implementation. \n\u003cp\u003eThe default socket factory implementation creates a direct socket connection to the remote host. \u003c/p\u003e\n\u003cp\u003eThe default socket factory implementation creates server sockets that are bound to the wildcard address, which accepts requests from all network interfaces.\u003c/p\u003e",
  "tagMap": {
    "implNote": [
      "\u003cp\u003eYou can use the \u003ccode\u003eRMISocketFactory\u003c/code\u003e class to create a server socket that is bound to a specific address, restricting the origin of requests. For example, the following code implements a socket factory that binds server sockets to an IPv4 loopback address. This restricts RMI to processing requests only from the local host. \u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\n     class LoopbackSocketFactory extends RMISocketFactory {\n         public ServerSocket createServerSocket(int port) throws IOException {\n             return new ServerSocket(port, 5, InetAddress.getByName(\"127.0.0.1\"));\n         }\n\n         public Socket createSocket(String host, int port) throws IOException {\n             // just call the default client socket factory\n             return RMISocketFactory.getDefaultSocketFactory()\n                                    .createSocket(host, port);\n         }\n     }\n\n     // ...\n\n     RMISocketFactory.setSocketFactory(new LoopbackSocketFactory());\n \u003c/code\u003e\u003c/pre\u003e Set the \n\u003ccode\u003e\u003cspan id\u003d\"java.rmi.server.hostname\" class\u003d\"search-tag-result\"\u003ejava.rmi.server.hostname\u003c/span\u003e\u003c/code\u003e system property to \n\u003ccode\u003e127.0.0.1\u003c/code\u003e to ensure that the generated stubs connect to the right network interface.\n\u003cp\u003e\u003c/p\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}