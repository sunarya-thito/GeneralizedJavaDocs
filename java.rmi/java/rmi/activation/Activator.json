{
  "packageName": "java.rmi.activation",
  "simpleName": "Activator",
  "moduleName": "java.rmi",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.rmi.Remote",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.rmi.MarshalledObject",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "java.rmi.Remote",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.rmi.activation.ActivationException",
          "type": "Class"
        },
        {
          "name": "java.rmi.activation.UnknownObjectException",
          "type": "Class"
        },
        {
          "name": "java.rmi.RemoteException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.rmi.activation.ActivationID",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "force"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "activate",
      "comment": "Activate the object associated with the activation identifier, id. If the activator knows the object to be active already, and force is false , the stub with a \"live\" reference is returned immediately to the caller; otherwise, if the activator does not know that corresponding the remote object is active, the activator uses the activation descriptor information (previously registered) to determine the group (VM) in which the object should be activated. If an ActivationInstantiator corresponding to the object\u0027s group descriptor already exists, the activator invokes the activation group\u0027s newInstance method passing it the object\u0027s id and descriptor. If the activation group for the object\u0027s group descriptor does not yet exist, the activator starts an ActivationInstantiator executing (by spawning a child process, for example). When the activator receives the activation group\u0027s call back (via the ActivationSystem\u0027s activeGroup method) specifying the activation group\u0027s reference, the activator can then invoke that activation instantiator\u0027s newInstance method to forward each pending activation request to the activation group and return the result (a marshalled remote object reference, a stub) to the caller. Note that the activator receives a \"marshalled\" object instead of a Remote object so that the activator does not need to load the code for that object, or participate in distributed garbage collection for that object. If the activator kept a strong reference to the remote object, the activator would then prevent the object from being garbage collected under the normal distributed garbage collection mechanism.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eid\u003c/code\u003e - the activation identifier for the object being activated",
          "\u003ccode\u003eforce\u003c/code\u003e - if true, the activator contacts the group to obtain the remote object\u0027s reference; if false, returning the cached value is allowed."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/activation/ActivationException.html\" title\u003d\"class in java.rmi.activation\"\u003eActivationException\u003c/a\u003e\u003c/code\u003e - if object activation fails",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/activation/UnknownObjectException.html\" title\u003d\"class in java.rmi.activation\"\u003eUnknownObjectException\u003c/a\u003e\u003c/code\u003e - if object is unknown (not registered)",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/RemoteException.html\" title\u003d\"class in java.rmi\"\u003eRemoteException\u003c/a\u003e\u003c/code\u003e - if remote call fails"
        ],
        "return": [
          "the remote object (a stub) in a marshalled form"
        ],
        "since": [
          "1.2"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.rmi.activation.Activator",
  "comment": "The \n\u003ccode\u003eActivator\u003c/code\u003e facilitates remote object activation. A \"faulting\" remote reference calls the activator\u0027s \n\u003ccode\u003eactivate\u003c/code\u003e method to obtain a \"live\" reference to a \"activatable\" remote object. Upon receiving a request for activation, the activator looks up the activation descriptor for the activation identifier, \n\u003ccode\u003eid\u003c/code\u003e, determines the group in which the object should be activated initiates object re-creation via the group\u0027s \n\u003ccode\u003eActivationInstantiator\u003c/code\u003e (via a call to the \n\u003ccode\u003enewInstance\u003c/code\u003e method). The activator initiates the execution of activation groups as necessary. For example, if an activation group for a specific group identifier is not already executing, the activator initiates the execution of a VM for the group. \n\u003cp\u003e The \u003ccode\u003eActivator\u003c/code\u003e works closely with \u003ccode\u003eActivationSystem\u003c/code\u003e, which provides a means for registering groups and objects within those groups, and \u003ccode\u003eActivationMonitor\u003c/code\u003e, which receives information about active and inactive objects and inactive groups. \u003c/p\u003e\n\u003cp\u003e The activator is responsible for monitoring and detecting when activation groups fail so that it can remove stale remote references to groups and active object\u0027s within those groups.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/activation/ActivationInstantiator.html\" title\u003d\"interface in java.rmi.activation\"\u003e\u003ccode\u003eActivationInstantiator\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/activation/ActivationGroupDesc.html\" title\u003d\"class in java.rmi.activation\"\u003e\u003ccode\u003eActivationGroupDesc\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.rmi/java/rmi/activation/ActivationGroupID.html\" title\u003d\"class in java.rmi.activation\"\u003e\u003ccode\u003eActivationGroupID\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}