{
  "packageName": "java.awt.datatransfer",
  "simpleName": "FlavorTable",
  "moduleName": "java.datatransfer",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.awt.datatransfer.FlavorMap",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.datatransfer.DataFlavor",
            "type": "Class"
          },
          "name": "flav",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNativesForFlavor",
      "comment": "Returns a List of String natives to which the specified DataFlavor corresponds. The List will be sorted from best native to worst. That is, the first native will best reflect data in the specified flavor to the underlying native platform. The returned List is a modifiable copy of this FlavorTable\u0027s internal data. Client code is free to modify the List without affecting this object.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eflav\u003c/code\u003e - the \n\u003ccode\u003eDataFlavor\u003c/code\u003e whose corresponding natives should be returned. If \n\u003ccode\u003enull\u003c/code\u003e is specified, all natives currently known to this \n\u003ccode\u003eFlavorTable\u003c/code\u003e are returned in a non-deterministic order."
        ],
        "return": [
          "a \n\u003ccode\u003ejava.util.List\u003c/code\u003e of \n\u003ccode\u003ejava.lang.String\u003c/code\u003e objects which are platform-specific representations of platform-specific data formats"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.awt.datatransfer.DataFlavor",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "nat",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getFlavorsForNative",
      "comment": "Returns a List of DataFlavors to which the specified String corresponds. The List will be sorted from best DataFlavor to worst. That is, the first DataFlavor will best reflect data in the specified native to a Java application. The returned List is a modifiable copy of this FlavorTable\u0027s internal data. Client code is free to modify the List without affecting this object.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enat\u003c/code\u003e - the native whose corresponding \n\u003ccode\u003eDataFlavor\u003c/code\u003es should be returned. If \n\u003ccode\u003enull\u003c/code\u003e is specified, all \n\u003ccode\u003eDataFlavor\u003c/code\u003es currently known to this \n\u003ccode\u003eFlavorTable\u003c/code\u003e are returned in a non-deterministic order."
        ],
        "return": [
          "a \n\u003ccode\u003ejava.util.List\u003c/code\u003e of \n\u003ccode\u003eDataFlavor\u003c/code\u003e objects into which platform-specific data in the specified, platform-specific native can be translated"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.awt.datatransfer.FlavorTable",
  "comment": "A FlavorMap which relaxes the traditional 1-to-1 restriction of a Map. A flavor is permitted to map to any number of natives, and likewise a native is permitted to map to any number of flavors. FlavorTables need not be symmetric, but typically are.",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}