{
  "packageName": "com.sun.jdi.connect.spi",
  "simpleName": "ListenKey",
  "moduleName": "jdk.jdi",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "address",
      "comment": "Returns a string representation of the listen key.",
      "tagMap": {}
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor for subclasses to call.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1033,
  "name": "com.sun.jdi.connect.spi.TransportService$ListenKey",
  "comment": "A \n\u003ci\u003elisten key\u003c/i\u003e. \n\u003cp\u003e A \u003ccode\u003eTransportService\u003c/code\u003e may listen on multiple, yet different, addresses at the same time. To uniquely identify each \u003ccode\u003elistener\u003c/code\u003e a listen key is created each time that \u003ca href\u003d\"TransportService.html#startListening(java.lang.String)\"\u003e\u003ccode\u003estartListening\u003c/code\u003e\u003c/a\u003e is called. The listen key is used in calls to the \u003ca href\u003d\"TransportService.html#accept(com.sun.jdi.connect.spi.TransportService.ListenKey,long,long)\"\u003e\u003ccode\u003eaccept\u003c/code\u003e\u003c/a\u003e method to accept inbound connections to that listener. A listen key is valid until it is used as an argument to \u003ca href\u003d\"TransportService.html#stopListening(com.sun.jdi.connect.spi.TransportService.ListenKey)\"\u003e\u003ccode\u003estopListening\u003c/code\u003e\u003c/a\u003e to stop the transport service from listening on an address.\u003c/p\u003e",
  "tagMap": {}
}