{
  "packageName": "com.sun.jdi",
  "simpleName": "ModuleReference",
  "moduleName": "jdk.jdi",
  "type": "INTERFACE",
  "superClass": {
    "name": "com.sun.jdi.ObjectReference",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "name",
      "comment": "Returns the module name. This method returns null if this module is an unnamed module.",
      "tagMap": {
        "return": [
          "the name of this module."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.jdi.ClassLoaderReference",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "classLoader",
      "comment": "Returns the ClassLoaderReference object for this module.",
      "tagMap": {
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ClassLoaderReference.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eClassLoaderReference\u003c/code\u003e\u003c/a\u003e object for this module."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.jdi.ModuleReference",
  "comment": "A module in the target VM. \n\u003cp\u003e Any method on \u003ccode\u003eModuleReference\u003c/code\u003e which directly or indirectly takes \u003ccode\u003eModuleReference\u003c/code\u003e as a parameter may throw \u003ca href\u003d\"VMDisconnectedException.html\" title\u003d\"class in com.sun.jdi\"\u003e\u003ccode\u003eVMDisconnectedException\u003c/code\u003e\u003c/a\u003e if the target VM is disconnected and the \u003ca href\u003d\"event/VMDisconnectEvent.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eVMDisconnectEvent\u003c/code\u003e\u003c/a\u003e has been or is available to be read from the \u003ca href\u003d\"event/EventQueue.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eEventQueue\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e Any method on \u003ccode\u003eModuleReference\u003c/code\u003e which directly or indirectly takes \u003ccode\u003eModuleReference\u003c/code\u003e as a parameter may throw \u003ca href\u003d\"VMOutOfMemoryException.html\" title\u003d\"class in com.sun.jdi\"\u003e\u003ccode\u003eVMOutOfMemoryException\u003c/code\u003e\u003c/a\u003e if the target VM has run out of memory. \u003c/p\u003e\n\u003cp\u003e Any method on \u003ccode\u003eModuleReference\u003c/code\u003e or which directly or indirectly takes \u003ccode\u003eModuleReference\u003c/code\u003e as a parameter may throw \u003ca href\u003d\"InvalidModuleException.html\" title\u003d\"class in com.sun.jdi\"\u003e\u003ccode\u003eInvalidModuleException\u003c/code\u003e\u003c/a\u003e if the mirrored module has been unloaded. Not all target virtual machines support this class. Use \u003ca href\u003d\"VirtualMachine.html#canGetModuleInfo()\"\u003e\u003ccode\u003eVirtualMachine.canGetModuleInfo()\u003c/code\u003e\u003c/a\u003e to determine if the class is supported.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "9"
    ]
  }
}