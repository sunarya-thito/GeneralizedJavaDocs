{
  "packageName": "com.sun.jdi.event",
  "simpleName": "ThreadStartEvent",
  "moduleName": "jdk.jdi",
  "type": "INTERFACE",
  "superClass": {
    "name": "com.sun.jdi.event.Event",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "com.sun.jdi.ThreadReference",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "thread",
      "comment": "Returns the thread which has started.",
      "tagMap": {
        "return": [
          "a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ThreadReference.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eThreadReference\u003c/code\u003e\u003c/a\u003e which mirrors the event\u0027s thread in the target VM."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.jdi.event.ThreadStartEvent",
  "comment": "Notification of a new running thread in the target VM. The new thread can be the result of a call to \n\u003ccode\u003e\u003ca href\u003d\"../../../../../java.base/java/lang/Thread.html#start()\"\u003e\u003ccode\u003eThread.start()\u003c/code\u003e\u003c/a\u003e\u003c/code\u003e or the result of attaching a new thread to the VM though JNI. The notification is generated by the new thread some time before its execution starts. Because of this timing, it is possible to receive other events for the thread before this event is received. (Notably, \n\u003ca href\u003d\"MethodEntryEvent.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eMethodEntryEvent\u003c/code\u003e\u003c/a\u003es and \n\u003ca href\u003d\"MethodExitEvent.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eMethodExitEvent\u003c/code\u003e\u003c/a\u003es might occur during thread initialization.) It is also possible for \n\u003ca href\u003d\"../VirtualMachine.html#allThreads()\"\u003e\u003ccode\u003eVirtualMachine.allThreads()\u003c/code\u003e\u003c/a\u003e to return a new started thread before this event is received. \n\u003cp\u003e Note that this event gives no information about the creation of the thread object which may have happened much earlier, depending on the VM being debugged.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/event/EventQueue.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eEventQueue\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eVirtualMachine\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ThreadReference.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eThreadReference\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}