{
  "packageName": "com.sun.jdi.request",
  "simpleName": "BreakpointRequest",
  "moduleName": "jdk.jdi",
  "type": "INTERFACE",
  "interfaces": [
    {
      "name": "com.sun.jdi.request.EventRequest",
      "type": "Class"
    },
    {
      "name": "com.sun.jdi.Locatable",
      "type": "Class"
    }
  ],
  "members": [
    {
      "returnType": {
        "name": "com.sun.jdi.Location",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "location",
      "comment": "Returns the location of the requested breakpoint.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/Locatable.html#location()\"\u003elocation\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/Locatable.html\" title\u003d\"interface in com.sun.jdi\"\u003eLocatable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/Location.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eLocation\u003c/code\u003e\u003c/a\u003e where this breakpoint has been set."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addThreadFilter",
      "comment": "Restricts the events generated by this request to those in the given thread.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ethread\u003c/code\u003e - the thread to filter on."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/request/InvalidRequestStateException.html\" title\u003d\"class in com.sun.jdi.request\"\u003eInvalidRequestStateException\u003c/a\u003e\u003c/code\u003e - if this request is currently enabled or has been deleted. Filters may be added only to disabled requests."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addInstanceFilter",
      "comment": "Restricts the events generated by this request to those in which the currently executing instance is the object specified. Not all targets support this operation. Use VirtualMachine.canUseInstanceFilters() to determine if the operation is supported.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003einstance\u003c/code\u003e - the object which must be the current instance in order to pass this filter."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the target virtual machine does not support this operation.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/request/InvalidRequestStateException.html\" title\u003d\"class in com.sun.jdi.request\"\u003eInvalidRequestStateException\u003c/a\u003e\u003c/code\u003e - if this request is currently enabled or has been deleted. Filters may be added only to disabled requests."
        ],
        "since": [
          "1.4"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.jdi.request.BreakpointRequest",
  "comment": "Identifies a \n\u003ca href\u003d\"../Location.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eLocation\u003c/code\u003e\u003c/a\u003e in the target VM at which execution should be stopped. When an enabled BreakpointRequest is satisfied, an \n\u003ca href\u003d\"../event/EventSet.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eevent set\u003c/code\u003e\u003c/a\u003e containing an \n\u003ca href\u003d\"../event/BreakpointEvent.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eBreakpointEvent\u003c/code\u003e\u003c/a\u003e will be placed on the \n\u003ca href\u003d\"../event/EventQueue.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eEventQueue\u003c/code\u003e\u003c/a\u003e and the application is interrupted. The collection of existing breakpoints is managed by the \n\u003ca href\u003d\"EventRequestManager.html\" title\u003d\"interface in com.sun.jdi.request\"\u003e\u003ccode\u003eEventRequestManager\u003c/code\u003e\u003c/a\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/Location.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eLocation\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/event/BreakpointEvent.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eBreakpointEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/event/EventQueue.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eEventQueue\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/request/EventRequestManager.html\" title\u003d\"interface in com.sun.jdi.request\"\u003e\u003ccode\u003eEventRequestManager\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}