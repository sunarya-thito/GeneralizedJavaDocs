{
  "packageName": "com.sun.jdi",
  "simpleName": "VirtualMachine",
  "moduleName": "jdk.jdi",
  "type": "INTERFACE",
  "superClass": {
    "name": "com.sun.jdi.Mirror",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TRACE_NONE",
      "comment": "All tracing is disabled.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#com.sun.jdi.VirtualMachine.TRACE_NONE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TRACE_SENDS",
      "comment": "Tracing enabled for JDWP packets sent to target VM.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#com.sun.jdi.VirtualMachine.TRACE_SENDS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TRACE_RECEIVES",
      "comment": "Tracing enabled for JDWP packets received from target VM.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#com.sun.jdi.VirtualMachine.TRACE_RECEIVES\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TRACE_EVENTS",
      "comment": "Tracing enabled for internal event handling.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#com.sun.jdi.VirtualMachine.TRACE_EVENTS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TRACE_REFTYPES",
      "comment": "Tracing enabled for internal managment of reference types.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#com.sun.jdi.VirtualMachine.TRACE_REFTYPES\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TRACE_OBJREFS",
      "comment": "Tracing enabled for internal management of object references.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#com.sun.jdi.VirtualMachine.TRACE_OBJREFS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "TRACE_ALL",
      "comment": "All tracing is enabled.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#com.sun.jdi.VirtualMachine.TRACE_ALL\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "com.sun.jdi.ModuleReference",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "allModules",
      "comment": "Returns all modules. For each module in the target VM a ModuleReference will be placed in the returned list. Not all target virtual machines support this operation. Use canGetModuleInfo() to determine if the operation is supported.",
      "tagMap": {
        "implSpec": [
          "The default implementation throws \n\u003ccode\u003eUnsupportedOperationException\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the target virtual machine does not support this operation."
        ],
        "return": [
          "a list of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ModuleReference.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eModuleReference\u003c/code\u003e\u003c/a\u003e objects, each mirroring a module in the target VM."
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "com.sun.jdi.ReferenceType",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "className"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "classesByName",
      "comment": "Returns the loaded reference types that match a given name. The name must be fully qualified (for example, java.lang.String). The returned list will contain a ReferenceType for each class or interface found with the given name. The search is confined to loaded classes only; no attempt is made to load a class of the given name. The returned list will include reference types loaded at least to the point of preparation and types (like array) for which preparation is not defined.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eclassName\u003c/code\u003e - the class/interface name to search for"
        ],
        "return": [
          "a list of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ReferenceType.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eReferenceType\u003c/code\u003e\u003c/a\u003e objects, each mirroring a type in the target VM with the given name."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "com.sun.jdi.ReferenceType",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "allClasses",
      "comment": "Returns all loaded types in the target VM. The returned list includes all reference types, including hidden classes or interfaces, loaded at least to the point of preparation and types (like array) for which preparation is not defined.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/specs/jvmti/jvmti.html#GetLoadedClasses\"\u003e JVM TI GetLoadedClasses\u003c/a\u003e regarding how class and interface creation can be triggered"
        ],
        "return": [
          "a list of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ReferenceType.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eReferenceType\u003c/code\u003e\u003c/a\u003e objects, each mirroring a loaded type in the target VM."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.jdi.ReferenceType",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "name": "byte",
                "type": "Class",
                "arrayDimensions": [
                  {}
                ]
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "classToBytes"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "redefineClasses",
      "comment": "All classes given are redefined according to the definitions supplied. A method in a redefined class is called \u0027equivalent\u0027 (to the old version of the method) if their bytecodes are the same except for indicies into the constant pool, and the referenced constants are equal. Otherwise, the new method is called \u0027non-equivalent\u0027. If a redefined method has active stack frames, those active frames continue to run the bytecodes of the previous version of the method. If the new version of such a method is non-equivalent, then a method from one of these active frames is called \u0027obsolete\u0027 and Method.isObsolete() will return true when called on one of these methods. If resetting such a frame is desired, use ThreadReference.popFrames(StackFrame) to pop the old obsolete method execution from the stack. New invocations of redefined methods will always invoke the new versions. This function does not cause any initialization except that which would occur under the customary JVM semantics. In other words, redefining a class does not cause its initializers to be run. The values of preexisting static variables will remain as they were prior to the call. However, completely uninitialized (new) static variables will be assigned their default value. If a redefined class has instances then all those instances will have the fields defined by the redefined class at the completion of the call. Preexisting fields will retain their previous values. Any new fields will have their default values; no instance initializers or constructors are run. Threads need not be suspended. No events are generated by this function. All breakpoints in the redefined classes are deleted. Not all target virtual machines support this operation. Use canRedefineClasses() to determine if the operation is supported. Use canAddMethod() to determine if the redefinition can add methods. Use canUnrestrictedlyRedefineClasses() to determine if the redefinition can change the schema, delete methods, change the class hierarchy, etc.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/Method.html#isObsolete()\"\u003e\u003ccode\u003eMethod.isObsolete()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ThreadReference.html#popFrames(com.sun.jdi.StackFrame)\"\u003e\u003ccode\u003eThreadReference.popFrames(com.sun.jdi.StackFrame)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#canRedefineClasses()\"\u003e\u003ccode\u003ecanRedefineClasses()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#canAddMethod()\"\u003e\u003ccode\u003ecanAddMethod()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#canUnrestrictedlyRedefineClasses()\"\u003e\u003ccode\u003ecanUnrestrictedlyRedefineClasses()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eclassToBytes\u003c/code\u003e - A map from \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ReferenceType.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eReferenceType\u003c/code\u003e\u003c/a\u003e to array of byte. The bytes represent the new class definition and are in Java Virtual Machine class file format."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the target virtual machine does not support this operation. \n\u003cul\u003e \n \u003cli\u003eIf \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#canRedefineClasses()\"\u003e\u003ccode\u003ecanRedefineClasses()\u003c/code\u003e\u003c/a\u003e is false any call of this method will throw this exception. \u003c/li\u003e\n \u003cli\u003eIf \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#canAddMethod()\"\u003e\u003ccode\u003ecanAddMethod()\u003c/code\u003e\u003c/a\u003e is false attempting to add a method will throw this exception. \u003c/li\u003e\n \u003cli\u003eIf \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#canUnrestrictedlyRedefineClasses()\"\u003e\u003ccode\u003ecanUnrestrictedlyRedefineClasses()\u003c/code\u003e\u003c/a\u003e is false attempting any of the unsupported class file changes described in \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/specs/jvmti.html#RedefineClasses\"\u003e JVM TI RedefineClasses\u003c/a\u003e will throw this exception. \u003c/li\u003e\n\u003c/ul\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NoClassDefFoundError.html\" title\u003d\"class in java.lang\"\u003eNoClassDefFoundError\u003c/a\u003e\u003c/code\u003e - if the bytes don\u0027t correspond to the reference type (the names don\u0027t match).",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/VerifyError.html\" title\u003d\"class in java.lang\"\u003eVerifyError\u003c/a\u003e\u003c/code\u003e - if a \"verifier\" detects that a class, though well formed, contains an internal inconsistency or security problem.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassFormatError.html\" title\u003d\"class in java.lang\"\u003eClassFormatError\u003c/a\u003e\u003c/code\u003e - if the bytes do not represent a valid class.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCircularityError.html\" title\u003d\"class in java.lang\"\u003eClassCircularityError\u003c/a\u003e\u003c/code\u003e - if a circularity has been detected while initializing a class.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedClassVersionError.html\" title\u003d\"class in java.lang\"\u003eUnsupportedClassVersionError\u003c/a\u003e\u003c/code\u003e - if the major and minor version numbers in bytes are not supported by the VM.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VMCannotBeModifiedException.html\" title\u003d\"class in com.sun.jdi\"\u003eVMCannotBeModifiedException\u003c/a\u003e\u003c/code\u003e - if the VirtualMachine is read-only - see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#canBeModified()\"\u003e\u003ccode\u003ecanBeModified()\u003c/code\u003e\u003c/a\u003e."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "com.sun.jdi.ThreadReference",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "allThreads",
      "comment": "Returns a list of the currently running threads. For each running thread in the target VM, a ThreadReference that mirrors it is placed in the list. The returned list contains threads created through java.lang.Thread, all native threads attached to the target VM through JNI, and system threads created by the target VM. Thread objects that have not yet been started (see Thread.start()) and thread objects that have completed their execution are not included in the returned list.",
      "tagMap": {
        "return": [
          "a list of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ThreadReference.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eThreadReference\u003c/code\u003e\u003c/a\u003e objects, one for each running thread in the mirrored VM."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "suspend",
      "comment": "Suspends the execution of the application running in this virtual machine. All threads currently running will be suspended. Unlike Thread.suspend(), suspends of both the virtual machine and individual threads are counted. Before a thread will run again, it must be resumed (through resume() or ThreadReference.resume()) the same number of times it has been suspended.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VMCannotBeModifiedException.html\" title\u003d\"class in com.sun.jdi\"\u003eVMCannotBeModifiedException\u003c/a\u003e\u003c/code\u003e - if the VirtualMachine is read-only - see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#canBeModified()\"\u003e\u003ccode\u003ecanBeModified()\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "resume",
      "comment": "Continues the execution of the application running in this virtual machine. All threads are resumed as documented in ThreadReference.resume().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#suspend()\"\u003e\u003ccode\u003esuspend()\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VMCannotBeModifiedException.html\" title\u003d\"class in com.sun.jdi\"\u003eVMCannotBeModifiedException\u003c/a\u003e\u003c/code\u003e - if the VirtualMachine is read-only - see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#canBeModified()\"\u003e\u003ccode\u003ecanBeModified()\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "com.sun.jdi.ThreadGroupReference",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "topLevelThreadGroups",
      "comment": "Returns each thread group which does not have a parent. For each top level thread group a ThreadGroupReference is placed in the returned list. This command may be used as the first step in building a tree (or trees) of the existing thread groups.",
      "tagMap": {
        "return": [
          "a list of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ThreadGroupReference.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eThreadGroupReference\u003c/code\u003e\u003c/a\u003e objects, one for each top level thread group."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.jdi.event.EventQueue",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "eventQueue",
      "comment": "Returns the event queue for this virtual machine. A virtual machine has only one EventQueue object, this method will return the same instance each time it is invoked.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VMCannotBeModifiedException.html\" title\u003d\"class in com.sun.jdi\"\u003eVMCannotBeModifiedException\u003c/a\u003e\u003c/code\u003e - if the VirtualMachine is read-only - see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#canBeModified()\"\u003e\u003ccode\u003ecanBeModified()\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/event/EventQueue.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eEventQueue\u003c/code\u003e\u003c/a\u003e for this virtual machine."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.jdi.request.EventRequestManager",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "eventRequestManager",
      "comment": "Returns the event request manager for this virtual machine. The EventRequestManager controls user settable events such as breakpoints. A virtual machine has only one EventRequestManager object, this method will return the same instance each time it is invoked.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VMCannotBeModifiedException.html\" title\u003d\"class in com.sun.jdi\"\u003eVMCannotBeModifiedException\u003c/a\u003e\u003c/code\u003e - if the VirtualMachine is read-only - see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#canBeModified()\"\u003e\u003ccode\u003ecanBeModified()\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/request/EventRequestManager.html\" title\u003d\"interface in com.sun.jdi.request\"\u003e\u003ccode\u003eEventRequestManager\u003c/code\u003e\u003c/a\u003e for this virtual machine."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.jdi.BooleanValue",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "mirrorOf",
      "comment": "Creates a BooleanValue for the given value. This value can be used for setting and comparing against a value retrieved from a variable or field in this virtual machine.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - a boolean for which to create the value"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/BooleanValue.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eBooleanValue\u003c/code\u003e\u003c/a\u003e for the given boolean."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.jdi.ByteValue",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "mirrorOf",
      "comment": "Creates a ByteValue for the given value. This value can be used for setting and comparing against a value retrieved from a variable or field in this virtual machine.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - a byte for which to create the value"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ByteValue.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eByteValue\u003c/code\u003e\u003c/a\u003e for the given byte."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.jdi.CharValue",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "mirrorOf",
      "comment": "Creates a CharValue for the given value. This value can be used for setting and comparing against a value retrieved from a variable or field in this virtual machine.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - a char for which to create the value"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/CharValue.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eCharValue\u003c/code\u003e\u003c/a\u003e for the given char."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.jdi.ShortValue",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "short",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "mirrorOf",
      "comment": "Creates a ShortValue for the given value. This value can be used for setting and comparing against a value retrieved from a variable or field in this virtual machine.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - a short for which to create the value"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ShortValue.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eShortValue\u003c/code\u003e\u003c/a\u003e for the given short."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.jdi.IntegerValue",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "mirrorOf",
      "comment": "Creates an IntegerValue for the given value. This value can be used for setting and comparing against a value retrieved from a variable or field in this virtual machine.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - an int for which to create the value"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/IntegerValue.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eIntegerValue\u003c/code\u003e\u003c/a\u003e for the given int."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.jdi.LongValue",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "mirrorOf",
      "comment": "Creates a LongValue for the given value. This value can be used for setting and comparing against a value retrieved from a variable or field in this virtual machine.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - a long for which to create the value"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/LongValue.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eLongValue\u003c/code\u003e\u003c/a\u003e for the given long."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.jdi.FloatValue",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "mirrorOf",
      "comment": "Creates a FloatValue for the given value. This value can be used for setting and comparing against a value retrieved from a variable or field in this virtual machine.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - a float for which to create the value"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/FloatValue.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eFloatValue\u003c/code\u003e\u003c/a\u003e for the given float."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.jdi.DoubleValue",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "mirrorOf",
      "comment": "Creates a DoubleValue for the given value. This value can be used for setting and comparing against a value retrieved from a variable or field in this virtual machine.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - a double for which to create the value"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/DoubleValue.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eDoubleValue\u003c/code\u003e\u003c/a\u003e for the given double."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.jdi.StringReference",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "mirrorOf",
      "comment": "Creates a string in this virtual machine. The created string can be used for setting and comparing against a string value retrieved from a variable or field in this virtual machine.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the string to be created"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VMCannotBeModifiedException.html\" title\u003d\"class in com.sun.jdi\"\u003eVMCannotBeModifiedException\u003c/a\u003e\u003c/code\u003e - if the VirtualMachine is read-only -see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#canBeModified()\"\u003e\u003ccode\u003ecanBeModified()\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/StringReference.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eStringReference\u003c/code\u003e\u003c/a\u003e that mirrors the newly created string in the target VM."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.jdi.VoidValue",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "mirrorOfVoid",
      "comment": "Creates a VoidValue. This value can be passed to ThreadReference.forceEarlyReturn(com.sun.jdi.Value) when a void method is to be exited.",
      "tagMap": {
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VoidValue.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eVoidValue\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Process",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "process",
      "comment": "Returns the Process object for this virtual machine if launched by a LaunchingConnector",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VMCannotBeModifiedException.html\" title\u003d\"class in com.sun.jdi\"\u003eVMCannotBeModifiedException\u003c/a\u003e\u003c/code\u003e - if the VirtualMachine is read-only -see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#canBeModified()\"\u003e\u003ccode\u003ecanBeModified()\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Process.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eProcess\u003c/code\u003e\u003c/a\u003e object for this virtual machine, or null if it was not launched by a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/connect/LaunchingConnector.html\" title\u003d\"interface in com.sun.jdi.connect\"\u003e\u003ccode\u003eLaunchingConnector\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "dispose",
      "comment": "Invalidates this virtual machine mirror. The communication channel to the target VM is closed, and the target VM prepares to accept another subsequent connection from this debugger or another debugger, including the following tasks: All event requests are cancelled. All threads suspended by suspend() or by ThreadReference.suspend() are resumed as many times as necessary for them to run. Garbage collection is re-enabled in all cases where it was disabled through ObjectReference.disableCollection(). Any current method invocations executing in the target VM are continued after the disconnection. Upon completion of any such method invocation, the invoking thread continues from the location where it was originally stopped. Resources originating in this VirtualMachine (ObjectReferences, ReferenceTypes, etc.) will become invalid.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "exitCode"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "exit",
      "comment": "Causes the mirrored VM to terminate with the given error code. All resources associated with this VirtualMachine are freed. If the mirrored VM is remote, the communication channel to it will be closed. Resources originating in this VirtualMachine (ObjectReferences, ReferenceTypes, etc.) will become invalid. Threads running in the mirrored VM are abruptly terminated. A thread death exception is not thrown and finally blocks are not run.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eexitCode\u003c/code\u003e - the exit code for the target VM. On some platforms, the exit code might be truncated, for example, to the lower order 8 bits."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VMCannotBeModifiedException.html\" title\u003d\"class in com.sun.jdi\"\u003eVMCannotBeModifiedException\u003c/a\u003e\u003c/code\u003e - if the VirtualMachine is read-only - see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#canBeModified()\"\u003e\u003ccode\u003ecanBeModified()\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canWatchFieldModification",
      "comment": "Determines if the target VM supports watchpoints for field modification.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canWatchFieldAccess",
      "comment": "Determines if the target VM supports watchpoints for field access.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canGetBytecodes",
      "comment": "Determines if the target VM supports the retrieval of a method\u0027s bytecodes.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canGetSyntheticAttribute",
      "comment": "Determines if the target VM supports the query of the synthetic attribute of a method or field.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canGetOwnedMonitorInfo",
      "comment": "Determines if the target VM supports the retrieval of the monitors owned by a thread.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canGetCurrentContendedMonitor",
      "comment": "Determines if the target VM supports the retrieval of the monitor for which a thread is currently waiting.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canGetMonitorInfo",
      "comment": "Determines if the target VM supports the retrieval of the monitor information for an object.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canUseInstanceFilters",
      "comment": "Determines if the target VM supports filtering events by specific instance object. For example, see BreakpointRequest.addInstanceFilter(com.sun.jdi.ObjectReference).",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canRedefineClasses",
      "comment": "Determines if the target VM supports any level of class redefinition.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#redefineClasses(java.util.Map)\"\u003e\u003ccode\u003eredefineClasses(java.util.Map\u0026lt;? extends com.sun.jdi.ReferenceType, byte[]\u0026gt;)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canAddMethod",
      "comment": "Determines if the target VM supports the addition of methods when performing class redefinition.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "15"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#redefineClasses(java.util.Map)\"\u003e\u003ccode\u003eredefineClasses(java.util.Map\u0026lt;? extends com.sun.jdi.ReferenceType, byte[]\u0026gt;)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canUnrestrictedlyRedefineClasses",
      "comment": "Determines if the target VM supports changes when performing class redefinition that are otherwise restricted by redefineClasses(java.util.Map\u003c? extends com.sun.jdi.ReferenceType, byte[]\u003e).",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "15"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#redefineClasses(java.util.Map)\"\u003e\u003ccode\u003eredefineClasses(java.util.Map\u0026lt;? extends com.sun.jdi.ReferenceType, byte[]\u0026gt;)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canPopFrames",
      "comment": "Determines if the target VM supports popping frames of a threads stack.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ThreadReference.html#popFrames(com.sun.jdi.StackFrame)\"\u003e\u003ccode\u003eThreadReference.popFrames(com.sun.jdi.StackFrame)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canGetSourceDebugExtension",
      "comment": "Determines if the target VM supports getting the source debug extension.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ReferenceType.html#sourceDebugExtension()\"\u003e\u003ccode\u003eReferenceType.sourceDebugExtension()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canRequestVMDeathEvent",
      "comment": "Determines if the target VM supports the creation of VMDeathRequests.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/request/EventRequestManager.html#createVMDeathRequest()\"\u003e\u003ccode\u003eEventRequestManager.createVMDeathRequest()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canGetMethodReturnValues",
      "comment": "Determines if the target VM supports the inclusion of return values in MethodExitEvents.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/request/EventRequestManager.html#createMethodExitRequest()\"\u003e\u003ccode\u003eEventRequestManager.createMethodExitRequest()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canGetInstanceInfo",
      "comment": "Determines if the target VM supports the accessing of class instances, instance counts, and referring objects.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#instanceCounts(java.util.List)\"\u003e\u003ccode\u003einstanceCounts(java.util.List\u0026lt;? extends com.sun.jdi.ReferenceType\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ReferenceType.html#instances(long)\"\u003e\u003ccode\u003eReferenceType.instances(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ObjectReference.html#referringObjects(long)\"\u003e\u003ccode\u003eObjectReference.referringObjects(long)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canUseSourceNameFilters",
      "comment": "Determines if the target VM supports the filtering of class prepare events by source name. see ClassPrepareRequest.addSourceNameFilter(java.lang.String).",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canForceEarlyReturn",
      "comment": "Determines if the target VM supports the forcing of a method to return early.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ThreadReference.html#forceEarlyReturn(com.sun.jdi.Value)\"\u003e\u003ccode\u003eThreadReference.forceEarlyReturn(Value)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canBeModified",
      "comment": "Determines if the target VM is a read-only VM. If a method which would modify the state of the VM is called on a read-only VM, then VMCannotBeModifiedException is thrown.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canRequestMonitorEvents",
      "comment": "Determines if the target VM supports the creation of MonitorContendedEnterRequests. MonitorContendedEnteredRequests. MonitorWaitRequests. MonitorWaitedRequests.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/request/EventRequestManager.html#createMonitorContendedEnterRequest()\"\u003e\u003ccode\u003eEventRequestManager.createMonitorContendedEnterRequest()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/request/EventRequestManager.html#createMonitorContendedEnteredRequest()\"\u003e\u003ccode\u003eEventRequestManager.createMonitorContendedEnteredRequest()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/request/EventRequestManager.html#createMonitorWaitRequest()\"\u003e\u003ccode\u003eEventRequestManager.createMonitorWaitRequest()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/request/EventRequestManager.html#createMonitorWaitedRequest()\"\u003e\u003ccode\u003eEventRequestManager.createMonitorWaitedRequest()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canGetMonitorFrameInfo",
      "comment": "Determines if the target VM supports getting which frame has acquired a monitor.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ThreadReference.html#ownedMonitorsAndFrames()\"\u003e\u003ccode\u003eThreadReference.ownedMonitorsAndFrames()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canGetClassFileVersion",
      "comment": "Determines if the target VM supports reading class file major and minor versions.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ReferenceType.html#majorVersion()\"\u003e\u003ccode\u003eReferenceType.majorVersion()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ReferenceType.html#minorVersion()\"\u003e\u003ccode\u003eReferenceType.minorVersion()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canGetConstantPool",
      "comment": "Determines if the target VM supports getting constant pool information of a class.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ReferenceType.html#constantPoolCount()\"\u003e\u003ccode\u003eReferenceType.constantPoolCount()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ReferenceType.html#constantPool()\"\u003e\u003ccode\u003eReferenceType.constantPool()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "canGetModuleInfo",
      "comment": "Determines if the target VM supports getting information about modules.",
      "tagMap": {
        "implSpec": [
          "The default implementation returns \n\u003ccode\u003efalse\u003c/code\u003e."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#allModules()\"\u003e\u003ccode\u003eallModules()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ReferenceType.html#module()\"\u003e\u003ccode\u003eReferenceType.module()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ModuleReference.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eModuleReference\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "stratum"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDefaultStratum",
      "comment": "Set this VM\u0027s default stratum (see Location for a discussion of strata). Overrides the per-class default set in the class file. Affects location queries (such as, Location.sourceName()) and the line boundaries used in single stepping.",
      "tagMap": {
        "param": [
          "\u003ccode\u003estratum\u003c/code\u003e - the stratum to set as VM default, or null to use per-class defaults."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the target virtual machine does not support this operation."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDefaultStratum",
      "comment": "Return this VM\u0027s default stratum.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#setDefaultStratum(java.lang.String)\"\u003e\u003ccode\u003esetDefaultStratum(String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ReferenceType.html#defaultStratum()\"\u003e\u003ccode\u003eReferenceType.defaultStratum()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003enull\u003c/code\u003e (meaning that the per-class default - \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ReferenceType.html#defaultStratum()\"\u003e\u003ccode\u003eReferenceType.defaultStratum()\u003c/code\u003e\u003c/a\u003e - should be used) unless the default stratum has been set with \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#setDefaultStratum(java.lang.String)\"\u003e\u003ccode\u003esetDefaultStratum(String)\u003c/code\u003e\u003c/a\u003e."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "com.sun.jdi.ReferenceType",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "refTypes"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "instanceCounts",
      "comment": "Returns the number of instances of each ReferenceType in the \u0027refTypes\u0027 list. Only instances that are reachable for the purposes of garbage collection are counted. Not all target virtual machines support this operation. Use canGetInstanceInfo() to determine if the operation is supported.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ReferenceType.html#instances(long)\"\u003e\u003ccode\u003eReferenceType.instances(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ObjectReference.html#referringObjects(long)\"\u003e\u003ccode\u003eObjectReference.referringObjects(long)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003erefTypes\u003c/code\u003e - the list of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ReferenceType.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eReferenceType\u003c/code\u003e\u003c/a\u003e objects for which counts are to be obtained."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the target virtual machine does not support this operation - see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/VirtualMachine.html#canGetInstanceInfo()\"\u003e\u003ccode\u003ecanGetInstanceInfo()\u003c/code\u003e\u003c/a\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the \u0027refTypes\u0027 list is null."
        ],
        "return": [
          "an array of \n\u003ccode\u003elong\u003c/code\u003e containing one element for each element in the \u0027refTypes\u0027 list. Element i of the array contains the number of instances in the target VM of the ReferenceType at position i in the \u0027refTypes\u0027 list. If the \u0027refTypes\u0027 list is empty, a zero-length array is returned. If a ReferenceType in refTypes has been garbage collected, zero is returned for its instance count."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "description",
      "comment": "Returns text information on the target VM and the debugger support that mirrors it. No specific format for this information is guaranteed. Typically, this string contains version information for the target VM and debugger interfaces. More precise information on VM and JDI versions is available through version(), VirtualMachineManager.majorInterfaceVersion(), and VirtualMachineManager.minorInterfaceVersion()",
      "tagMap": {
        "return": [
          "the description."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "version",
      "comment": "Returns the version of the Java Runtime Environment in the target VM as reported by the property java.version. For obtaining the JDI interface version, use VirtualMachineManager.majorInterfaceVersion() and VirtualMachineManager.minorInterfaceVersion()",
      "tagMap": {
        "return": [
          "the target VM version."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "name",
      "comment": "Returns the name of the target VM as reported by the property java.vm.name.",
      "tagMap": {
        "return": [
          "the target VM name."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "traceFlags"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setDebugTraceMode",
      "comment": "Traces the activities performed by the com.sun.jdi implementation. All trace information is output to System.err. The given trace flags are used to limit the output to only the information desired. The given flags are in effect and the corresponding trace will continue until the next call to this method. Output is implementation dependent and trace mode may be ignored.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etraceFlags\u003c/code\u003e - identifies which kinds of tracing to enable."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.jdi.VirtualMachine",
  "comment": "A virtual machine targeted for debugging. More precisely, a \n\u003ca href\u003d\"Mirror.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003emirror\u003c/code\u003e\u003c/a\u003e representing the composite state of the target VM. All other mirrors are associated with an instance of this interface. Access to all other mirrors is achieved directly or indirectly through an instance of this interface. Access to global VM properties and control of VM execution are supported directly by this interface. \n\u003cp\u003e Instances of this interface are created by instances of \u003ca href\u003d\"connect/Connector.html\" title\u003d\"interface in com.sun.jdi.connect\"\u003e\u003ccode\u003eConnector\u003c/code\u003e\u003c/a\u003e. For example, an \u003ca href\u003d\"connect/AttachingConnector.html\" title\u003d\"interface in com.sun.jdi.connect\"\u003e\u003ccode\u003eAttachingConnector\u003c/code\u003e\u003c/a\u003e attaches to a target VM and returns its virtual machine mirror. A Connector will typically create a VirtualMachine by invoking the VirtualMachineManager\u0027s \u003ca href\u003d\"VirtualMachineManager.html#createVirtualMachine(com.sun.jdi.connect.spi.Connection)\"\u003e\u003ccode\u003eVirtualMachineManager.createVirtualMachine(Connection)\u003c/code\u003e\u003c/a\u003e createVirtualMachine(Connection) method. \u003c/p\u003e\n\u003cp\u003e Note that a target VM launched by a launching connector is not guaranteed to be stable until after the \u003ca href\u003d\"event/VMStartEvent.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eVMStartEvent\u003c/code\u003e\u003c/a\u003e has been received. \u003c/p\u003e\n\u003cp\u003e Any method on \u003ccode\u003eVirtualMachine\u003c/code\u003e which takes \u003ccode\u003eVirtualMachine\u003c/code\u003e as an parameter may throw \u003ca href\u003d\"VMDisconnectedException.html\" title\u003d\"class in com.sun.jdi\"\u003e\u003ccode\u003eVMDisconnectedException\u003c/code\u003e\u003c/a\u003e if the target VM is disconnected and the \u003ca href\u003d\"event/VMDisconnectEvent.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eVMDisconnectEvent\u003c/code\u003e\u003c/a\u003e has been or is available to be read from the \u003ca href\u003d\"event/EventQueue.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eEventQueue\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e Any method on \u003ccode\u003eVirtualMachine\u003c/code\u003e which takes \u003ccode\u003eVirtualMachine\u003c/code\u003e as an parameter may throw \u003ca href\u003d\"VMOutOfMemoryException.html\" title\u003d\"class in com.sun.jdi\"\u003e\u003ccode\u003eVMOutOfMemoryException\u003c/code\u003e\u003c/a\u003e if the target VM has run out of memory.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.3"
    ]
  }
}