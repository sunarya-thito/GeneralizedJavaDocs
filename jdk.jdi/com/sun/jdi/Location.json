{
  "packageName": "com.sun.jdi",
  "simpleName": "Location",
  "moduleName": "jdk.jdi",
  "type": "INTERFACE",
  "interfaces": [
    {
      "name": "com.sun.jdi.Mirror",
      "type": "Class"
    },
    {
      "name": "java.lang.Comparable",
      "parameters": [
        {
          "name": "com.sun.jdi.Location",
          "type": "Class"
        }
      ],
      "type": "Class"
    }
  ],
  "members": [
    {
      "returnType": {
        "name": "com.sun.jdi.ReferenceType",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "declaringType",
      "comment": "Gets the type to which this Location belongs. Normally the declaring type is a ClassType, but executable locations also may exist within the static initializer of an InterfaceType.",
      "tagMap": {
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/ReferenceType.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eReferenceType\u003c/code\u003e\u003c/a\u003e containing this Location."
        ]
      }
    },
    {
      "returnType": {
        "name": "com.sun.jdi.Method",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "method",
      "comment": "Gets the method containing this Location.",
      "tagMap": {
        "return": [
          "the location\u0027s \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/Method.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eMethod\u003c/code\u003e\u003c/a\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "codeIndex",
      "comment": "Gets the code position within this location\u0027s method.",
      "tagMap": {
        "return": [
          "the long representing the position within the method or -1 if location is within a native method."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "com.sun.jdi.AbsentInformationException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "sourceName",
      "comment": "Gets an identifing name for the source corresponding to this location. This method is equivalent to sourceName(vm.getDefaultStratum()) - see sourceName(String) for more information.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/AbsentInformationException.html\" title\u003d\"class in com.sun.jdi\"\u003eAbsentInformationException\u003c/a\u003e\u003c/code\u003e - if the source name is not known"
        ],
        "return": [
          "a string specifying the source"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "com.sun.jdi.AbsentInformationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "stratum"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "sourceName",
      "comment": "Gets an identifing name for the source corresponding to this location. Interpretation of this string is the responsibility of the source repository mechanism. Returned name is for the specified stratum (see the class comment for a description of strata). The returned string is the unqualified name of the source file for this Location. For example, java.lang.Thread would return \"Thread.java\".",
      "tagMap": {
        "param": [
          "\u003ccode\u003estratum\u003c/code\u003e - The stratum to retrieve information from or \n\u003ccode\u003enull\u003c/code\u003e for the declaring type\u0027s default stratum."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/AbsentInformationException.html\" title\u003d\"class in com.sun.jdi\"\u003eAbsentInformationException\u003c/a\u003e\u003c/code\u003e - if the source name is not known"
        ],
        "return": [
          "a string specifying the source"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "com.sun.jdi.AbsentInformationException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "sourcePath",
      "comment": "Gets the path to the source corresponding to this location. This method is equivalent to sourcePath(vm.getDefaultStratum()) - see sourcePath(String) for more information.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/AbsentInformationException.html\" title\u003d\"class in com.sun.jdi\"\u003eAbsentInformationException\u003c/a\u003e\u003c/code\u003e - if the source name is not known"
        ],
        "return": [
          "a string specifying the source"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "com.sun.jdi.AbsentInformationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "stratum"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "sourcePath",
      "comment": "Gets the path to the source corresponding to this location. Interpretation of this string is the responsibility of the source repository mechanism. Returned path is for the specified stratum (see the class comment for a description of strata). In the reference implementation, for strata which do not explicitly specify source path (the Java programming language stratum never does), the returned string is the package name of declaringType() converted to a platform dependent path followed by the unqualified name of the source file for this Location (sourceName(stratum)). For example, on a Windows platform, java.lang.Thread would return \"java\\lang\\Thread.java\".",
      "tagMap": {
        "param": [
          "\u003ccode\u003estratum\u003c/code\u003e - The stratum to retrieve information from or \n\u003ccode\u003enull\u003c/code\u003e for the declaring type\u0027s default stratum."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/AbsentInformationException.html\" title\u003d\"class in com.sun.jdi\"\u003eAbsentInformationException\u003c/a\u003e\u003c/code\u003e - if the source name is not known"
        ],
        "return": [
          "a string specifying the source"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "lineNumber",
      "comment": "Gets the line number of this Location. This method is equivalent to lineNumber(vm.getDefaultStratum()) - see lineNumber(String) for more information.",
      "tagMap": {
        "return": [
          "an int specifying the line in the source, returns -1 if the information is not available; specifically, always returns -1 for native methods."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "stratum"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "lineNumber",
      "comment": "The line number of this Location. The line number is relative to the source specified by sourceName(stratum). Returned line number is for the specified stratum (see the class comment for a description of strata).",
      "tagMap": {
        "param": [
          "\u003ccode\u003estratum\u003c/code\u003e - The stratum to retrieve information from or \n\u003ccode\u003enull\u003c/code\u003e for the declaring type\u0027s default stratum."
        ],
        "return": [
          "an int specifying the line in the source, returns -1 if the information is not available; specifically, always returns -1 for native methods."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "equals",
      "comment": "Compares the specified Object with this Location for equality.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the reference object with which to compare."
        ],
        "return": [
          "true if the Object is a Location and if it refers to the same point in the same VM as this Location."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hashCode",
      "comment": "Returns the hash code value for this Location.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the integer hash code"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "com.sun.jdi.Location",
  "comment": "A point within the executing code of the target VM. Locations are used to identify the current position of a suspended thread (analogous to an instruction pointer or program counter register in native programs). They are also used to identify the position at which to set a breakpoint. \n\u003cp\u003e The availability of a line number for a location will depend on the level of debugging information available from the target VM. \u003c/p\u003e\n\u003cp\u003e Several mirror interfaces have locations. Each such mirror extends a \u003ca href\u003d\"Locatable.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eLocatable\u003c/code\u003e\u003c/a\u003e interface. \u003c/p\u003e\n\u003cp\u003e \u003ca id\u003d\"strata\"\u003e\u003cb\u003eStrata\u003c/b\u003e\u003c/a\u003e \u003c/p\u003e\n\u003cp\u003e The source information for a Location is dependent on the \u003ci\u003estratum\u003c/i\u003e which is used. A stratum is a source code level within a sequence of translations. For example, say the baz program is written in the programming language \"Foo\" then translated to the language \"Bar\" and finally translated into the Java programming language. The Java programming language stratum is named \u003ccode\u003e\"Java\"\u003c/code\u003e, let\u0027s say the other strata are named \"Foo\" and \"Bar\". A given location (as viewed by the \u003ca href\u003d\"#sourceName()\"\u003e\u003ccode\u003esourceName()\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"#lineNumber()\"\u003e\u003ccode\u003elineNumber()\u003c/code\u003e\u003c/a\u003e methods) might be at line 14 of \"baz.foo\" in the \u003ccode\u003e\"Foo\"\u003c/code\u003e stratum, line 23 of \"baz.bar\" in the \u003ccode\u003e\"Bar\"\u003c/code\u003e stratum and line 71 of the \u003ccode\u003e\"Java\"\u003c/code\u003e stratum. Note that while the Java programming language may have only one source file for a reference type, this restriction does not apply to other strata - thus each Location should be consulted to determine its source path. Queries which do not specify a stratum (\u003ca href\u003d\"#sourceName()\"\u003e\u003ccode\u003esourceName()\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#sourcePath()\"\u003e\u003ccode\u003esourcePath()\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"#lineNumber()\"\u003e\u003ccode\u003elineNumber()\u003c/code\u003e\u003c/a\u003e) use the VM\u0027s default stratum (\u003ca href\u003d\"VirtualMachine.html#getDefaultStratum()\"\u003e\u003ccode\u003eVirtualMachine.getDefaultStratum()\u003c/code\u003e\u003c/a\u003e). If the specified stratum (whether explicitly specified by a method parameter or implicitly as the VM\u0027s default) is \u003ccode\u003enull\u003c/code\u003e or is not available in the declaring type, the declaring type\u0027s default stratum is used (\u003ca href\u003d\"#declaringType()\"\u003e\u003ccode\u003edeclaringType()\u003c/code\u003e\u003c/a\u003e.\u003ca href\u003d\"ReferenceType.html#defaultStratum()\"\u003e\u003ccode\u003edefaultStratum()\u003c/code\u003e\u003c/a\u003e). Note that in the normal case, of code that originates as Java programming language source, there will be only one stratum (\u003ccode\u003e\"Java\"\u003c/code\u003e) and it will be returned as the default. To determine the available strata use \u003ca href\u003d\"ReferenceType.html#availableStrata()\"\u003e\u003ccode\u003eReferenceType.availableStrata()\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/request/EventRequestManager.html\" title\u003d\"interface in com.sun.jdi.request\"\u003e\u003ccode\u003eEventRequestManager\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/StackFrame.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eStackFrame\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/event/BreakpointEvent.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eBreakpointEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/event/ExceptionEvent.html\" title\u003d\"interface in com.sun.jdi.event\"\u003e\u003ccode\u003eExceptionEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jdi/com/sun/jdi/Locatable.html\" title\u003d\"interface in com.sun.jdi\"\u003e\u003ccode\u003eLocatable\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}