{
  "packageName": "javax.print",
  "simpleName": "SimpleDoc",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.print.DocFlavor",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDocFlavor",
      "comment": "Determines the doc flavor in which this doc object will supply its piece of print data.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/Doc.html#getDocFlavor()\"\u003egetDocFlavor\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/Doc.html\" title\u003d\"interface in javax.print\"\u003eDoc\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "doc flavor"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.print.attribute.DocAttributeSet",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttributes",
      "comment": "Obtains the set of printing attributes for this doc object. If the returned attribute set includes an instance of a particular attribute X, the printer must use that attribute value for this doc, overriding any value of attribute X in the job\u0027s attribute set. If the returned attribute set does not include an instance of a particular attribute X or if null is returned, the printer must consult the job\u0027s attribute set to obtain the value for attribute X, and if not found there, the printer must use an implementation-dependent default value. The returned attribute set is unmodifiable.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/Doc.html#getAttributes()\"\u003egetAttributes\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/Doc.html\" title\u003d\"interface in javax.print\"\u003eDoc\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "unmodifiable set of printing attributes for this doc, or \n\u003ccode\u003enull\u003c/code\u003e to obtain all attribute values from the job\u0027s attribute set"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPrintData",
      "comment": "Obtains the print data representation object that contains this doc object\u0027s piece of print data in the format corresponding to the supported doc flavor. The getPrintData() method returns an instance of the representation class whose name is given by getDocFlavor().getRepresentationClassName(), and the return value can be cast from class Object to that representation class.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/Doc.html#getPrintData()\"\u003egetPrintData\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/Doc.html\" title\u003d\"interface in javax.print\"\u003eDoc\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the representation class is a stream and there was an I/O error while constructing the stream"
        ],
        "return": [
          "print data representation object"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.Reader",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getReaderForText",
      "comment": "Obtains a reader for extracting character print data from this doc. The Doc implementation is required to support this method if the DocFlavor has one of the following print data representation classes, and return null otherwise: char[] java.lang.String java.io.Reader The doc\u0027s print data representation object is used to construct and return a Reader for reading the print data as a stream of characters from the print data representation object. However, if the print data representation object is itself a Reader then the print data representation object is simply returned.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/Doc.html#getReaderForText()\"\u003egetReaderForText\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/Doc.html\" title\u003d\"interface in javax.print\"\u003eDoc\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if there was an I/O error while creating the reader"
        ],
        "return": [
          "a \n\u003ccode\u003eReader\u003c/code\u003e for reading the print data characters from this doc. If a reader cannot be provided because this doc does not meet the criteria stated above, \n\u003ccode\u003enull\u003c/code\u003e is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.InputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getStreamForBytes",
      "comment": "Obtains an input stream for extracting byte print data from this doc. The Doc implementation is required to support this method if the DocFlavor has one of the following print data representation classes; otherwise this method returns null: byte[] java.io.InputStream The doc\u0027s print data representation object is obtained. Then, an input stream for reading the print data from the print data representation object as a stream of bytes is created and returned. However, if the print data representation object is itself an input stream then the print data representation object is simply returned.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/Doc.html#getStreamForBytes()\"\u003egetStreamForBytes\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/Doc.html\" title\u003d\"interface in javax.print\"\u003eDoc\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if there was an I/O error while creating the input stream"
        ],
        "return": [
          "an \n\u003ccode\u003eInputStream\u003c/code\u003e for reading the print data bytes from this doc. If an input stream cannot be provided because this doc does not meet the criteria stated above, \n\u003ccode\u003enull\u003c/code\u003e is returned."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "printData"
          }
        },
        {
          "type": {
            "name": "javax.print.DocFlavor",
            "type": "Class"
          },
          "field": {
            "name": "flavor"
          }
        },
        {
          "type": {
            "name": "javax.print.attribute.DocAttributeSet",
            "type": "Class"
          },
          "field": {
            "name": "attributes"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a SimpleDoc with the specified print data, doc flavor and doc attribute set.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprintData\u003c/code\u003e - the print data object",
          "\u003ccode\u003eflavor\u003c/code\u003e - the \n\u003ccode\u003eDocFlavor\u003c/code\u003e object",
          "\u003ccode\u003eattributes\u003c/code\u003e - a \n\u003ccode\u003eDocAttributeSet\u003c/code\u003e, which can be \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eflavor\u003c/code\u003e or \n\u003ccode\u003eprintData\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or the \n\u003ccode\u003eprintData\u003c/code\u003e does not correspond to the specified doc flavor--for example, the data is not of the type specified as the representation in the \n\u003ccode\u003eDocFlavor\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "javax.print.SimpleDoc",
  "comment": "This class is an implementation of interface \n\u003ccode\u003eDoc\u003c/code\u003e that can be used in many common printing requests. It can handle all of the presently defined \"pre-defined\" doc flavors defined as static variables in the \n\u003ccode\u003eDocFlavor\u003c/code\u003e class. \n\u003cp\u003e In particular this class implements certain required semantics of the \u003ccode\u003eDoc\u003c/code\u003e specification as follows: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003econstructs a stream for the service if requested and appropriate. \u003c/li\u003e\n \u003cli\u003eensures the same object is returned for each call on a method. \u003c/li\u003e\n \u003cli\u003eensures multiple threads can access the \u003ccode\u003eDoc\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003eperforms some validation of that the data matches the doc flavor. \u003c/li\u003e\n\u003c/ul\u003e Clients who want to re-use the doc object in other jobs, or need a \n\u003ccode\u003eMultiDoc\u003c/code\u003e will not want to use this class. \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e If the print data is a stream, or a print job requests data as a stream, then \u003ccode\u003eSimpleDoc\u003c/code\u003e does not monitor if the service properly closes the stream after data transfer completion or job termination. Clients may prefer to use provide their own implementation of doc that adds a listener to monitor job completion and to validate that resources such as streams are freed (ie closed).\u003c/p\u003e",
  "tagMap": {}
}