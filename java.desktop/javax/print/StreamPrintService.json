{
  "packageName": "javax.print",
  "simpleName": "StreamPrintService",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.io.OutputStream",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOutputStream",
      "comment": "Gets the output stream.",
      "tagMap": {
        "return": [
          "the stream to which this service will send formatted print data"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getOutputFormat",
      "comment": "Returns the document format emitted by this print service. Must be in mimetype format, compatible with the mime type components of DocFlavors",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/DocFlavor.html\" title\u003d\"class in javax.print\"\u003e\u003ccode\u003eDocFlavor\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "mime type identifying the output format"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "dispose",
      "comment": "Disposes this StreamPrintService. If a stream service cannot be re-used, it must be disposed to indicate this. Typically the client will call this method. Services which write data which cannot meaningfully be appended to may also dispose the stream. This does not close the stream. It just marks it as not for further use by this service.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isDisposed",
      "comment": "Returns a boolean indicating whether or not this StreamPrintService has been disposed. If this object has been disposed, will return true. Used by services and client applications to recognize streams to which no further data should be written.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this \n\u003ccode\u003eStreamPrintService\u003c/code\u003e has been disposed; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a StreamPrintService object.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - stream to which to send formatted print data"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.print.StreamPrintService",
  "comment": "This class extends \n\u003ca href\u003d\"PrintService.html\" title\u003d\"interface in javax.print\"\u003e\u003ccode\u003ePrintService\u003c/code\u003e\u003c/a\u003e and represents a print service that prints data in different formats to a client-provided output stream. This is principally intended for services where the output format is a document type suitable for viewing or archiving. The output format must be declared as a mime type. This is equivalent to an output document flavor where the representation class is always \"java.io.OutputStream\" An instance of the \n\u003ccode\u003eStreamPrintService\u003c/code\u003e class is obtained from a \n\u003ca href\u003d\"StreamPrintServiceFactory.html\" title\u003d\"class in javax.print\"\u003e\u003ccode\u003eStreamPrintServiceFactory\u003c/code\u003e\u003c/a\u003e instance. \n\u003cp\u003e Note that a \u003ccode\u003eStreamPrintService\u003c/code\u003e is different from a \u003ccode\u003ePrintService\u003c/code\u003e, which supports a \u003ca href\u003d\"attribute/standard/Destination.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eDestination\u003c/code\u003e\u003c/a\u003e attribute. A \u003ccode\u003eStreamPrintService\u003c/code\u003e always requires an output stream, whereas a \u003ccode\u003ePrintService\u003c/code\u003e optionally accepts a \u003ccode\u003eDestination\u003c/code\u003e. A \u003ccode\u003eStreamPrintService\u003c/code\u003e has no default destination for its formatted output. Additionally a \u003ccode\u003eStreamPrintService\u003c/code\u003e is expected to generate output in a format useful in other contexts. \u003ccode\u003eStreamPrintService\u003c/code\u003e\u0027s are not expected to support the \u003ccode\u003eDestination\u003c/code\u003e attribute.\u003c/p\u003e",
  "tagMap": {}
}