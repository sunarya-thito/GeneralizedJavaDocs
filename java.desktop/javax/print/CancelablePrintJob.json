{
  "packageName": "javax.print",
  "simpleName": "CancelablePrintJob",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.print.DocPrintJob",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "cancel",
      "comment": "Stops further processing of a print job. If a service supports this method it cannot be concluded that job cancellation will always succeed. A job may not be able to be cancelled once it has reached and passed some point in its processing. A successful cancellation means only that the entire job was not printed, some portion may already have printed when cancel returns. The service will throw a PrintException if the cancellation did not succeed. A job which has not yet been submitted for printing should throw this exception. Cancelling an already successfully cancelled Print Job is not considered an error and will always succeed. Cancellation in some services may be a lengthy process, involving requests to a server and processing of its print queue. Clients may wish to execute cancel in a thread which does not affect application execution.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/PrintException.html\" title\u003d\"class in javax.print\"\u003ePrintException\u003c/a\u003e\u003c/code\u003e - if the job could not be successfully cancelled"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.print.CancelablePrintJob",
  "comment": "This interface is used by a printing application to cancel a print job. This interface extends \n\u003ca href\u003d\"DocPrintJob.html\" title\u003d\"interface in javax.print\"\u003e\u003ccode\u003eDocPrintJob\u003c/code\u003e\u003c/a\u003e. A \n\u003ccode\u003eDocPrintJob\u003c/code\u003e implementation returned from a print service implements this interface if the print job can be cancelled. Before trying to cancel a print job, the client needs to test if the \n\u003ccode\u003eDocPrintJob\u003c/code\u003e object returned from the print service actually implements this interface. Clients should never assume that a \n\u003ccode\u003eDocPrintJob\u003c/code\u003e implements this interface. A print service might support cancellation only for certain types of print data and representation class names. This means that only some of the \n\u003ccode\u003eDocPrintJob\u003c/code\u003e objects returned from a service will implement this interface. \n\u003cp\u003e Service implementors are encouraged to implement this optional interface and to deliver a \u003ca href\u003d\"event/PrintJobEvent.html#JOB_CANCELED\"\u003e\u003ccode\u003ePrintJobEvent.JOB_CANCELED\u003c/code\u003e\u003c/a\u003e event to any listeners if a job is successfully cancelled with an implementation of this interface. Services should also note that an implementation of this method may be made from a separate client thread than that which made the print request. Thus the implementation of this interface must be made thread safe.\u003c/p\u003e",
  "tagMap": {}
}