{
  "packageName": "javax.print.attribute.standard",
  "simpleName": "MediaSize",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.print.attribute.Size2DSyntax",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.print.attribute.standard.MediaSizeName",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMediaSizeName",
      "comment": "Get the media name, if any, for this size.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the name for this media size, or \n\u003ccode\u003enull\u003c/code\u003e if no name was associated with this size (an anonymous size)"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.print.attribute.standard.MediaSize",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getMediaSizeForName",
      "comment": "Get the MediaSize for the specified named media.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emedia\u003c/code\u003e - the name of the media for which the size is sought"
        ],
        "return": [
          "size of the media, or \n\u003ccode\u003enull\u003c/code\u003e if this media is not associated with any size"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.print.attribute.standard.MediaSizeName",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "findMedia",
      "comment": "The specified dimensions are used to locate a matching MediaSize instance from amongst all the standard MediaSize instances. If there is no exact match, the closest match is used. The MediaSize is in turn used to locate the MediaSizeName object. This method may return null if the closest matching MediaSize has no corresponding Media instance. This method is useful for clients which have only dimensions and want to find a Media which corresponds to the dimensions.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - \n\u003ccode\u003eX\u003c/code\u003e dimension",
          "\u003ccode\u003ey\u003c/code\u003e - \n\u003ccode\u003eY\u003c/code\u003e dimension",
          "\u003ccode\u003eunits\u003c/code\u003e - unit conversion factor, e.g. \n\u003ccode\u003eSize2DSyntax.INCH\u003c/code\u003e or \n\u003ccode\u003eSize2DSyntax.MM\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ex \u0026lt;\u003d 0\u003c/code\u003e, \n\u003ccode\u003ey \u0026lt;\u003d 0\u003c/code\u003e, or \n\u003ccode\u003eunits \u0026lt; 1\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003eMediaSizeName\u003c/code\u003e matching these dimensions, or \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Returns whether this media size attribute is equivalent to the passed in object. To be equivalent, all of the following conditions must be true: object is not null. object is an instance of class MediaSize. This media size attribute\u0027s X dimension is equal to object\u0027s X dimension. This media size attribute\u0027s Y dimension is equal to object\u0027s Y dimension.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Size2DSyntax.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Size2DSyntax.html\" title\u003d\"class in javax.print.attribute\"\u003eSize2DSyntax\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobject\u003c/code\u003e - \n\u003ccode\u003eObject\u003c/code\u003e to compare to"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003eobject\u003c/code\u003e is equivalent to this media size attribute, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.print.attribute.Attribute",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getCategory",
      "comment": "Get the printing attribute class which is to be used as the \"category\" for this printing attribute value. For class MediaSize and any vendor-defined subclasses, the category is class MediaSize itself.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html#getCategory()\"\u003egetCategory\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html\" title\u003d\"interface in javax.print.attribute\"\u003eAttribute\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "printing attribute class (category), an instance of class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Class.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003ejava.lang.Class\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getName",
      "comment": "Get the name of the category of which this attribute value is an instance. For class MediaSize and any vendor-defined subclasses, the category name is \"media-size\".",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html#getName()\"\u003egetName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html\" title\u003d\"interface in javax.print.attribute\"\u003eAttribute\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "attribute category name"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "x",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "y",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "units",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a new media size attribute from the given floating-point values.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - \n\u003ccode\u003eX\u003c/code\u003e dimension",
          "\u003ccode\u003ey\u003c/code\u003e - \n\u003ccode\u003eY\u003c/code\u003e dimension",
          "\u003ccode\u003eunits\u003c/code\u003e - unit conversion factor, e.g. \n\u003ccode\u003eSize2DSyntax.INCH\u003c/code\u003e or \n\u003ccode\u003eSize2DSyntax.MM\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ex \u0026lt; 0\u003c/code\u003e or \n\u003ccode\u003ey \u0026lt; 0\u003c/code\u003e or \n\u003ccode\u003eunits \u0026lt; 1\u003c/code\u003e or \n\u003ccode\u003ex \u0026gt; y\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "x",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "y",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "units",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a new media size attribute from the given integer values.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - \n\u003ccode\u003eX\u003c/code\u003e dimension",
          "\u003ccode\u003ey\u003c/code\u003e - \n\u003ccode\u003eY\u003c/code\u003e dimension",
          "\u003ccode\u003eunits\u003c/code\u003e - unit conversion factor, e.g. \n\u003ccode\u003eSize2DSyntax.INCH\u003c/code\u003e or \n\u003ccode\u003eSize2DSyntax.MM\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ex \u0026lt; 0\u003c/code\u003e or \n\u003ccode\u003ey \u0026lt; 0\u003c/code\u003e or \n\u003ccode\u003eunits \u0026lt; 1\u003c/code\u003e or \n\u003ccode\u003ex \u0026gt; y\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "x",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "y",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "units",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.print.attribute.standard.MediaSizeName",
            "type": "Class"
          },
          "name": "media",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a new media size attribute from the given floating-point values.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - \n\u003ccode\u003eX\u003c/code\u003e dimension",
          "\u003ccode\u003ey\u003c/code\u003e - \n\u003ccode\u003eY\u003c/code\u003e dimension",
          "\u003ccode\u003eunits\u003c/code\u003e - unit conversion factor, e.g. \n\u003ccode\u003eSize2DSyntax.INCH\u003c/code\u003e or \n\u003ccode\u003eSize2DSyntax.MM\u003c/code\u003e",
          "\u003ccode\u003emedia\u003c/code\u003e - a media name to associate with this \n\u003ccode\u003eMediaSize\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ex \u0026lt; 0\u003c/code\u003e or \n\u003ccode\u003ey \u0026lt; 0\u003c/code\u003e or \n\u003ccode\u003eunits \u0026lt; 1\u003c/code\u003e or \n\u003ccode\u003ex \u0026gt; y\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "x",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "y",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "units",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.print.attribute.standard.MediaSizeName",
            "type": "Class"
          },
          "name": "media",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a new media size attribute from the given integer values.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - \n\u003ccode\u003eX\u003c/code\u003e dimension",
          "\u003ccode\u003ey\u003c/code\u003e - \n\u003ccode\u003eY\u003c/code\u003e dimension",
          "\u003ccode\u003eunits\u003c/code\u003e - unit conversion factor, e.g. \n\u003ccode\u003eSize2DSyntax.INCH\u003c/code\u003e or \n\u003ccode\u003eSize2DSyntax.MM\u003c/code\u003e",
          "\u003ccode\u003emedia\u003c/code\u003e - a media name to associate with this \n\u003ccode\u003eMediaSize\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ex \u0026lt; 0\u003c/code\u003e or \n\u003ccode\u003ey \u0026lt; 0\u003c/code\u003e or \n\u003ccode\u003eunits \u0026lt; 1\u003c/code\u003e or \n\u003ccode\u003ex \u0026gt; y\u003c/code\u003e"
        ]
      }
    }
  ],
  "innerClasses": [
    "javax.print.attribute.standard.MediaSize$ISO",
    "javax.print.attribute.standard.MediaSize$Other",
    "javax.print.attribute.standard.MediaSize$Engineering",
    "javax.print.attribute.standard.MediaSize$JIS",
    "javax.print.attribute.standard.MediaSize$NA"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.print.attribute.standard.MediaSize",
  "comment": "Class \n\u003ccode\u003eMediaSize\u003c/code\u003e is a two-dimensional size valued printing attribute class that indicates the dimensions of the medium in a portrait orientation, with the \n\u003ccode\u003eX\u003c/code\u003e dimension running along the bottom edge and the \n\u003ccode\u003eY\u003c/code\u003e dimension running along the left edge. Thus, the \n\u003ccode\u003eY\u003c/code\u003e dimension must be greater than or equal to the \n\u003ccode\u003eX\u003c/code\u003e dimension. Class \n\u003ccode\u003eMediaSize\u003c/code\u003e declares many standard media size values, organized into nested classes for ISO, JIS, North American, engineering, and other media. \n\u003cp\u003e \u003ccode\u003eMediaSize\u003c/code\u003e is not yet used to specify media. Its current role is as a mapping for named media (see \u003ca href\u003d\"MediaSizeName.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMediaSizeName\u003c/code\u003e\u003c/a\u003e). Clients can use the mapping method \u003ccode\u003eMediaSize.getMediaSizeForName(MediaSizeName)\u003c/code\u003e to find the physical dimensions of the \u003ccode\u003eMediaSizeName\u003c/code\u003e instances enumerated in this API. This is useful for clients which need this information to format \u0026amp; paginate printing.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.print.attribute.standard.MediaSize\"\u003eSerialized Form\u003c/a\u003e"
    ]
  }
}