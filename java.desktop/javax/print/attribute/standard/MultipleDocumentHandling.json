{
  "packageName": "javax.print.attribute.standard",
  "simpleName": "MultipleDocumentHandling",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.print.attribute.EnumSyntax",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.print.attribute.standard.MultipleDocumentHandling",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SINGLE_DOCUMENT",
      "comment": "Single document -- see above for further information.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.MultipleDocumentHandling",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SEPARATE_DOCUMENTS_UNCOLLATED_COPIES",
      "comment": "Separate documents uncollated copies -- see above for further information.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.MultipleDocumentHandling",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SEPARATE_DOCUMENTS_COLLATED_COPIES",
      "comment": "Separate documents collated copies -- see above for further information.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.MultipleDocumentHandling",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SINGLE_DOCUMENT_NEW_SHEET",
      "comment": "Single document new sheet -- see above for further information.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getStringTable",
      "comment": "Returns the string table for class MultipleDocumentHandling.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html#getStringTable()\"\u003egetStringTable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html\" title\u003d\"class in javax.print.attribute\"\u003eEnumSyntax\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the string table"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.print.attribute.EnumSyntax",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getEnumValueTable",
      "comment": "Returns the enumeration value table for class MultipleDocumentHandling.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html#getEnumValueTable()\"\u003egetEnumValueTable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html\" title\u003d\"class in javax.print.attribute\"\u003eEnumSyntax\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the value table"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.print.attribute.Attribute",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getCategory",
      "comment": "Get the printing attribute class which is to be used as the \"category\" for this printing attribute value. For class MultipleDocumentHandling and any vendor-defined subclasses, the category is class MultipleDocumentHandling itself.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html#getCategory()\"\u003egetCategory\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html\" title\u003d\"interface in javax.print.attribute\"\u003eAttribute\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "printing attribute class (category), an instance of class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Class.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003ejava.lang.Class\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getName",
      "comment": "Get the name of the category of which this attribute value is an instance. For class MultipleDocumentHandling and any vendor-defined subclasses, the category name is \"multiple-document-handling\".",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html#getName()\"\u003egetName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html\" title\u003d\"interface in javax.print.attribute\"\u003eAttribute\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "attribute category name"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Construct a new multiple document handling enumeration value with the given integer value.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - Integer value"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.print.attribute.standard.MultipleDocumentHandling",
  "comment": "Class \n\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e is a printing attribute class, an enumeration, that controls finishing operations and the placement of one or more print-stream pages into impressions and onto media sheets. When the value of the \n\u003ca href\u003d\"Copies.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eCopies\u003c/code\u003e\u003c/a\u003e attribute exceeds 1, \n\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e also controls the order in which the copies that result from processing the documents are produced. This attribute is relevant only for a multidoc print job consisting of two or more individual docs. \n\u003cp\u003e Briefly, \u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e determines the relationship between the multiple input (electronic) documents fed into a multidoc print job and the output (physical) document or documents produced by the multidoc print job. There are two possibilities: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003eThe multiple input documents are combined into a single output document. Finishing operations (\u003ca href\u003d\"Finishings.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eFinishings\u003c/code\u003e\u003c/a\u003e), are performed on this single output document. The \u003ca href\u003d\"Copies.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eCopies\u003c/code\u003e\u003c/a\u003e attribute tells how many copies of this single output document to produce. The \u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e values \u003ccode\u003eSINGLE_DOCUMENT\u003c/code\u003e and \u003ccode\u003eSINGLE_DOCUMENT_NEW_SHEET\u003c/code\u003e specify two variations of this possibility. \u003c/li\u003e\n \u003cli\u003eThe multiple input documents remain separate output documents. Finishing operations (\u003ca href\u003d\"Finishings.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eFinishings\u003c/code\u003e\u003c/a\u003e), are performed on each output document separately. The \u003ca href\u003d\"Copies.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eCopies\u003c/code\u003e\u003c/a\u003e attribute tells how many copies of each separate output document to produce. The \u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e values \u003ccode\u003eSEPARATE_DOCUMENTS_UNCOLLATED_COPIES\u003c/code\u003e and \u003ccode\u003eSEPARATE_DOCUMENTS_COLLATED_COPIES\u003c/code\u003e specify two variations of this possibility. \u003c/li\u003e\n\u003c/ul\u003e In the detailed explanations below, if \"\n\u003ccode\u003ea\u003c/code\u003e\" represents an instance of document data, then the result of processing the data in document \"\n\u003ccode\u003ea\u003c/code\u003e\" is a sequence of media sheets represented by \"\n\u003ccode\u003ea(*)\u003c/code\u003e\". \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The standard \u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e values are: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e\u003ca id\u003d\"sdfi\"\u003e\u003c/a\u003e\u003ca href\u003d\"#SINGLE_DOCUMENT\"\u003e\u003ccode\u003e\u003cb\u003eSINGLE_DOCUMENT\u003c/b\u003e\u003c/code\u003e\u003c/a\u003e. If a print job has multiple documents -- say, the document data is called \u003ccode\u003ea\u003c/code\u003e and \u003ccode\u003eb\u003c/code\u003e -- then the result of processing all the document data (\u003ccode\u003ea\u003c/code\u003e and then \u003ccode\u003eb\u003c/code\u003e) must be treated as a single sequence of media sheets for finishing operations; that is, finishing would be performed on the concatenation of the sequences \u003ccode\u003ea(*),b(*)\u003c/code\u003e. The printer must not force the data in each document instance to be formatted onto a new print-stream page, nor to start a new impression on a new media sheet. If more than one copy is made, the ordering of the sets of media sheets resulting from processing the document data must be \u003ccode\u003ea(*),b(*),a(*),b(*),...\u003c/code\u003e, and the printer object must force each copy (\u003ccode\u003ea(*),b(*)\u003c/code\u003e) to start on a new media sheet. \u003c/li\u003e\n \u003cli\u003e\u003ca id\u003d\"sducfi\"\u003e\u003c/a\u003e\u003ca href\u003d\"#SEPARATE_DOCUMENTS_UNCOLLATED_COPIES\"\u003e\u003ccode\u003e\u003cb\u003eSEPARATE_DOCUMENTS_UNCOLLATED_COPIES\u003c/b\u003e\u003c/code\u003e\u003c/a\u003e. If a print job has multiple documents -- say, the document data is called \u003ccode\u003ea\u003c/code\u003e and \u003ccode\u003eb\u003c/code\u003e -- then the result of processing the data in each document instance must be treated as a single sequence of media sheets for finishing operations; that is, the sets \u003ccode\u003ea(*)\u003c/code\u003e and \u003ccode\u003eb(*)\u003c/code\u003e would each be finished separately. The printer must force each copy of the result of processing the data in a single document to start on a new media sheet. If more than one copy is made, the ordering of the sets of media sheets resulting from processing the document data must be \u003ccode\u003ea(*),a(*),...,b(*),b(*)...\u003c/code\u003e. \u003c/li\u003e\n \u003cli\u003e\u003ca id\u003d\"sdccfi\"\u003e\u003c/a\u003e\u003ca href\u003d\"#SEPARATE_DOCUMENTS_COLLATED_COPIES\"\u003e\u003ccode\u003e\u003cb\u003eSEPARATE_DOCUMENTS_COLLATED_COPIES\u003c/b\u003e\u003c/code\u003e\u003c/a\u003e. If a print job has multiple documents -- say, the document data is called \u003ccode\u003ea\u003c/code\u003e and \u003ccode\u003eb\u003c/code\u003e -- then the result of processing the data in each document instance must be treated as a single sequence of media sheets for finishing operations; that is, the sets \u003ccode\u003ea(*)\u003c/code\u003e and \u003ccode\u003eb(*)\u003c/code\u003e would each be finished separately. The printer must force each copy of the result of processing the data in a single document to start on a new media sheet. If more than one copy is made, the ordering of the sets of media sheets resulting from processing the document data must be \u003ccode\u003ea(*),b(*),a(*),b(*),...\u003c/code\u003e. \u003c/li\u003e\n \u003cli\u003e\u003ca id\u003d\"sdnsfi\"\u003e\u003c/a\u003e\u003ca href\u003d\"#SINGLE_DOCUMENT_NEW_SHEET\"\u003e\u003ccode\u003e\u003cb\u003eSINGLE_DOCUMENT_NEW_SHEET\u003c/b\u003e\u003c/code\u003e\u003c/a\u003e. Same as SINGLE_DOCUMENT, except that the printer must ensure that the first impression of each document instance in the job is placed on a new media sheet. This value allows multiple documents to be stapled together with a single staple where each document starts on a new sheet. \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e \u003ccode\u003eSINGLE_DOCUMENT\u003c/code\u003e is the same as \u003ccode\u003eSEPARATE_DOCUMENTS_COLLATED_COPIES\u003c/code\u003e with respect to ordering of print-stream pages, but not media sheet generation, since \u003ccode\u003eSINGLE_DOCUMENT\u003c/code\u003e will put the first page of the next document on the back side of a sheet if an odd number of pages have been produced so far for the job, while \u003ccode\u003eSEPARATE_DOCUMENTS_COLLATED_COPIES\u003c/code\u003e always forces the next document or document copy on to a new sheet. \u003c/p\u003e\n\u003cp\u003e In addition, if a \u003ca href\u003d\"Finishings.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eFinishings\u003c/code\u003e\u003c/a\u003e attribute of \u003ca href\u003d\"Finishings.html#STAPLE\"\u003e\u003ccode\u003eSTAPLE\u003c/code\u003e\u003c/a\u003e is specified, then: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003eWith \u003ccode\u003eSINGLE_DOCUMENT\u003c/code\u003e, documents \u003ccode\u003ea\u003c/code\u003e and \u003ccode\u003eb\u003c/code\u003e are stapled together as a single document with no regard to new sheets. \u003c/li\u003e\n \u003cli\u003eWith \u003ccode\u003eSINGLE_DOCUMENT_NEW_SHEET\u003c/code\u003e, documents \u003ccode\u003ea\u003c/code\u003e and \u003ccode\u003eb\u003c/code\u003e are stapled together as a single document, but document \u003ccode\u003eb\u003c/code\u003e starts on a new sheet. \u003c/li\u003e\n \u003cli\u003eWith \u003ccode\u003eSEPARATE_DOCUMENTS_UNCOLLATED_COPIES\u003c/code\u003e and \u003ccode\u003eSEPARATE_DOCUMENTS_COLLATED_COPIES\u003c/code\u003e, documents \u003ccode\u003ea\u003c/code\u003e and \u003ccode\u003eb\u003c/code\u003e are stapled separately. \u003c/li\u003e\n\u003c/ul\u003e \n\u003ci\u003eNote:\u003c/i\u003e None of these values provide means to produce uncollated sheets within a document, i.e., where multiple copies of sheet \n\u003ci\u003en\u003c/i\u003e are produced before sheet \n\u003ci\u003en\u003c/i\u003e+1 of the same document. To specify that, see the \n\u003ca href\u003d\"SheetCollate.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eSheetCollate\u003c/code\u003e\u003c/a\u003e attribute. \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e \u003cb\u003eIPP Compatibility:\u003c/b\u003e The category name returned by \u003ccode\u003egetName()\u003c/code\u003e is the IPP attribute name. The enumeration\u0027s integer value is the IPP enum value. The \u003ccode\u003etoString()\u003c/code\u003e method returns the IPP string representation of the attribute value.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/standard/Copies.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eCopies\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/standard/Finishings.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eFinishings\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/standard/NumberUp.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eNumberUp\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/standard/PageRanges.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003ePageRanges\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/standard/SheetCollate.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eSheetCollate\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/standard/Sides.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eSides\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.print.attribute.standard.MultipleDocumentHandling\"\u003eSerialized Form\u003c/a\u003e"
    ]
  }
}