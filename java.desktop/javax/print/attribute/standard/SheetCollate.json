{
  "packageName": "javax.print.attribute.standard",
  "simpleName": "SheetCollate",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.print.attribute.EnumSyntax",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.print.attribute.standard.SheetCollate",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "UNCOLLATED",
      "comment": "Sheets within a document appear in uncollated order when multiple copies are printed.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.SheetCollate",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "COLLATED",
      "comment": "Sheets within a document appear in collated order when multiple copies are printed.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getStringTable",
      "comment": "Returns the string table for class SheetCollate.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html#getStringTable()\"\u003egetStringTable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html\" title\u003d\"class in javax.print.attribute\"\u003eEnumSyntax\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the string table"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.print.attribute.EnumSyntax",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getEnumValueTable",
      "comment": "Returns the enumeration value table for class SheetCollate.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html#getEnumValueTable()\"\u003egetEnumValueTable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html\" title\u003d\"class in javax.print.attribute\"\u003eEnumSyntax\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the value table"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.print.attribute.Attribute",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getCategory",
      "comment": "Get the printing attribute class which is to be used as the \"category\" for this printing attribute value. For class SheetCollate, the category is class SheetCollate itself.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html#getCategory()\"\u003egetCategory\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html\" title\u003d\"interface in javax.print.attribute\"\u003eAttribute\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "printing attribute class (category), an instance of class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Class.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003ejava.lang.Class\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getName",
      "comment": "Get the name of the category of which this attribute value is an instance. For class SheetCollate, the category name is \"sheet-collate\".",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html#getName()\"\u003egetName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html\" title\u003d\"interface in javax.print.attribute\"\u003eAttribute\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "attribute category name"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Construct a new sheet collate enumeration value with the given integer value.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - Integer value"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "javax.print.attribute.standard.SheetCollate",
  "comment": "Class \n\u003ccode\u003eSheetCollate\u003c/code\u003e is a printing attribute class, an enumeration, that specifies whether or not the media sheets of each copy of each printed document in a job are to be in sequence, when multiple copies of the document are specified by the \n\u003ca href\u003d\"Copies.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eCopies\u003c/code\u003e\u003c/a\u003e attribute. When \n\u003ccode\u003eSheetCollate\u003c/code\u003e is \n\u003ccode\u003eCOLLATED\u003c/code\u003e, each copy of each document is printed with the print-stream sheets in sequence. When \n\u003ccode\u003eSheetCollate\u003c/code\u003e is \n\u003ccode\u003eUNCOLLATED\u003c/code\u003e, each print-stream sheet is printed a number of times equal to the value of the \n\u003ca href\u003d\"Copies.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eCopies\u003c/code\u003e\u003c/a\u003e attribute in succession. For example, suppose a document produces two media sheets as output, \n\u003ca href\u003d\"Copies.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eCopies\u003c/code\u003e\u003c/a\u003e is 6, and \n\u003ccode\u003eSheetCollate\u003c/code\u003e is UNCOLLATED; in this case six copies of the first media sheet are printed followed by six copies of the second media sheet. \n\u003cp\u003e Whether the effect of sheet collation is achieved by placing copies of a document in multiple output bins or in the same output bin with implementation defined document separation is implementation dependent. Also whether it is achieved by making multiple passes over the job or by using an output sorter is implementation dependent. \u003c/p\u003e\n\u003cp\u003e If a printer does not support the \u003ccode\u003eSheetCollate\u003c/code\u003e attribute (meaning the client cannot specify any particular sheet collation), the printer must behave as though \u003ccode\u003eSheetCollate\u003c/code\u003e were always set to \u003ccode\u003eCOLLATED\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003e The \u003ccode\u003eSheetCollate\u003c/code\u003e attribute interacts with the \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e attribute. The \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e attribute describes the collation of entire documents, and the \u003ccode\u003eSheetCollate\u003c/code\u003e attribute describes the semantics of collating individual pages within a document. \u003c/p\u003e\n\u003cp\u003e The effect of a \u003ccode\u003eSheetCollate\u003c/code\u003e attribute on a multidoc print job (a job with multiple documents) depends on whether all the docs have the same sheet collation specified or whether different docs have different sheet collations specified, and on the (perhaps defaulted) value of the \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e attribute. \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003eIf all the docs have the same sheet collation specified, then the following combinations of \u003ccode\u003eSheetCollate\u003c/code\u003e and \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e are permitted, and the printer reports an error when the job is submitted if any other combination is specified: \n  \u003cul\u003e \n   \u003cli\u003eSheetCollate \u003d COLLATED, \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e \u003d SINGLE_DOCUMENT -- All the input docs will be combined into one output document. Multiple copies of the output document will be produced with pages in collated order, i.e. pages 1, 2, 3, . . ., 1, 2, 3, . . . \u003c/li\u003e\n   \u003cli\u003eSheetCollate \u003d COLLATED, \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e \u003d SINGLE_DOCUMENT_NEW_SHEET -- All the input docs will be combined into one output document, and the first impression of each input doc will always start on a new media sheet. Multiple copies of the output document will be produced with pages in collated order, i.e. pages 1, 2, 3, . . ., 1, 2, 3, . . . \u003c/li\u003e\n   \u003cli\u003eSheetCollate \u003d COLLATED, \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e \u003d SEPARATE_DOCUMENTS_UNCOLLATED_COPIES -- Each input doc will remain a separate output document. Multiple copies of each output document (call them A, B, . . .) will be produced with each document\u0027s pages in collated order, but the documents themselves in uncollated order, i.e. pages A1, A2, A3, . . ., A1, A2, A3, . . ., B1, B2, B3, . . ., B1, B2, B3, . . . \u003c/li\u003e\n   \u003cli\u003eSheetCollate \u003d COLLATED, \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e \u003d SEPARATE_DOCUMENTS_COLLATED_COPIES -- Each input doc will remain a separate output document. Multiple copies of each output document (call them A, B, . . .) will be produced with each document\u0027s pages in collated order, with the documents themselves also in collated order, i.e. pages A1, A2, A3, . . ., B1, B2, B3, . . ., A1, A2, A3, . . ., B1, B2, B3, . . . \u003c/li\u003e\n   \u003cli\u003eSheetCollate \u003d UNCOLLATED, \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e \u003d SINGLE_DOCUMENT -- All the input docs will be combined into one output document. Multiple copies of the output document will be produced with pages in uncollated order, i.e. pages 1, 1, . . ., 2, 2, . . ., 3, 3, . . . \u003c/li\u003e\n   \u003cli\u003eSheetCollate \u003d UNCOLLATED, \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e \u003d SINGLE_DOCUMENT_NEW_SHEET -- All the input docs will be combined into one output document, and the first impression of each input doc will always start on a new media sheet. Multiple copies of the output document will be produced with pages in uncollated order, i.e. pages 1, 1, . . ., 2, 2, . . ., 3, 3, . . . \u003c/li\u003e\n   \u003cli\u003eSheetCollate \u003d UNCOLLATED, \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e \u003d SEPARATE_DOCUMENTS_UNCOLLATED_COPIES -- Each input doc will remain a separate output document. Multiple copies of each output document (call them A, B, . . .) will be produced with each document\u0027s pages in uncollated order, with the documents themselves also in uncollated order, i.e. pages A1, A1, . . ., A2, A2, . . ., A3, A3, . . ., B1, B1, . . ., B2, B2, . . ., B3, B3, . . . \u003c/li\u003e\n  \u003c/ul\u003e \u003c/li\u003e\n \u003cli\u003eIf different docs have different sheet collations specified, then only one value of \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e is permitted, and the printer reports an error when the job is submitted if any other value is specified: \n  \u003cul\u003e \n   \u003cli\u003e\u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e \u003d SEPARATE_DOCUMENTS_UNCOLLATED_COPIES -- Each input doc will remain a separate output document. Multiple copies of each output document (call them A, B, . . .) will be produced with each document\u0027s pages in collated or uncollated order as the corresponding input doc\u0027s SheetCollate attribute specifies, and with the documents themselves in uncollated order. If document A had SheetCollate \u003d UNCOLLATED and document B had SheetCollate \u003d COLLATED, the following pages would be produced: A1, A1, . . ., A2, A2, . . ., A3, A3, . . ., B1, B2, B3, . . ., B1, B2, B3, . . . \u003c/li\u003e\n  \u003c/ul\u003e \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e \u003cb\u003eIPP Compatibility:\u003c/b\u003e SheetCollate is not an IPP attribute at present.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/standard/MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.print.attribute.standard.SheetCollate\"\u003eSerialized Form\u003c/a\u003e"
    ]
  }
}