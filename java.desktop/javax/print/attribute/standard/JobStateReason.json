{
  "packageName": "javax.print.attribute.standard",
  "simpleName": "JobStateReason",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.print.attribute.EnumSyntax",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_INCOMING",
      "comment": "The printer has created the Print Job, but the printer has not finished accessing or accepting all the print data yet.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_DATA_INSUFFICIENT",
      "comment": "The printer has created the Print Job, but the printer is expecting additional print data before it can move the job into the PROCESSING state. If a printer starts processing before it has received all data, the printer removes the JOB_DATA_INSUFFICIENT reason, but the JOB_INCOMING reason remains. If a printer starts processing after it has received all data, the printer removes the JOB_DATA_INSUFFICIENT and JOB_INCOMING reasons at the same time.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DOCUMENT_ACCESS_ERROR",
      "comment": "The printer could not access one or more documents passed by reference (i.e., the print data representation object is a URL). This reason is intended to cover any file access problem,including file does not exist and access denied because of an access control problem. Whether the printer aborts the job and moves the job to the ABORTED job state or prints all documents that are accessible and moves the job to the COMPLETED job state and adds the COMPLETED_WITH_ERRORS reason to the job\u0027s JobStateReasons attribute depends on implementation and/or site policy. This value should be supported if the printer supports doc flavors with URL print data representation objects.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SUBMISSION_INTERRUPTED",
      "comment": "The job was not completely submitted for some unforeseen reason. Possibilities include (1) the printer has crashed before the job was fully submitted by the client, (2) the printer or the document transfer method has crashed in some non-recoverable way before the document data was entirely transferred to the printer, (3) the client crashed before the job was fully submitted.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_OUTGOING",
      "comment": "The printer is transmitting the job to the output device.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_HOLD_UNTIL_SPECIFIED",
      "comment": "The value of the job\u0027s JobHoldUntil attribute was specified with a date-time that is still in the future. The job must not be a candidate for processing until this reason is removed and there are no other reasons to hold the job. This value should be supported if the JobHoldUntil job template attribute is supported.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "RESOURCES_ARE_NOT_READY",
      "comment": "At least one of the resources needed by the job, such as media, fonts, resource objects, etc., is not ready on any of the physical printers for which the job is a candidate. This condition may be detected when the job is accepted, or subsequently while the job is pending or processing, depending on implementation. The job may remain in its current state or be moved to the PENDING_HELD state, depending on implementation and/or job scheduling policy.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PRINTER_STOPPED_PARTLY",
      "comment": "The value of the printer\u0027s PrinterStateReasons attribute contains a PrinterStateReason value of STOPPED_PARTLY.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PRINTER_STOPPED",
      "comment": "The value of the printer\u0027s PrinterState attribute ia STOPPED.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_INTERPRETING",
      "comment": "The job is in the PROCESSING state, but more specifically, the printer ia interpreting the document data.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_QUEUED",
      "comment": "The job is in the PROCESSING state, but more specifically, the printer has queued the document data.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_TRANSFORMING",
      "comment": "The job is in the PROCESSING state, but more specifically, the printer is interpreting document data and producing another electronic representation.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_QUEUED_FOR_MARKER",
      "comment": "The job is in the PENDING_HELD, PENDING, or PROCESSING state, but more specifically, the printer has completed enough processing of the document to be able to start marking and the job is waiting for the marker. Systems that require human intervention to release jobs put the job into the PENDING_HELD job state. Systems that automatically select a job to use the marker put the job into the PENDING job state or keep the job in the PROCESSING job state while waiting for the marker, depending on implementation. All implementations put the job into (or back into) the PROCESSING state when marking does begin.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_PRINTING",
      "comment": "The output device is marking media. This value is useful for printers which spend a great deal of time processing (1) when no marking is happening and then want to show that marking is now happening or (2) when the job is in the process of being canceled or aborted while the job remains in the PROCESSING state, but the marking has not yet stopped so that impression or sheet counts are still increasing for the job.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_CANCELED_BY_USER",
      "comment": "The job was canceled by the owner of the job, i.e., by a user whose authenticated identity is the same as the value of the originating user that created the Print Job, or by some other authorized end-user, such as a member of the job owner\u0027s security group. This value should be supported.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_CANCELED_BY_OPERATOR",
      "comment": "The job was canceled by the operator, i.e., by a user who has been authenticated as having operator privileges (whether local or remote). If the security policy is to allow anyone to cancel anyone\u0027s job, then this value may be used when the job is canceled by someone other than the owner of the job. For such a security policy, in effect, everyone is an operator as far as canceling jobs is concerned. This value should be supported if the implementation permits canceling by someone other than the owner of the job.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_CANCELED_AT_DEVICE",
      "comment": "The job was canceled by an unidentified local user, i.e., a user at a console at the device. This value should be supported if the implementation supports canceling jobs at the console.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ABORTED_BY_SYSTEM",
      "comment": "The job was aborted by the system. Either the job (1) is in the process of being aborted, (2) has been aborted by the system and placed in the ABORTED state, or (3) has been aborted by the system and placed in the PENDING_HELD state, so that a user or operator can manually try the job again. This value should be supported.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "UNSUPPORTED_COMPRESSION",
      "comment": "The job was aborted by the system because the printer determined while attempting to decompress the document\u0027s data that the compression is actually not among those supported by the printer. This value must be supported, since Compression is a required doc description attribute.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "COMPRESSION_ERROR",
      "comment": "The job was aborted by the system because the printer encountered an error in the document data while decompressing it. If the printer posts this reason, the document data has already passed any tests that would have led to the UNSUPPORTED_COMPRESSION job state reason.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "UNSUPPORTED_DOCUMENT_FORMAT",
      "comment": "The job was aborted by the system because the document data\u0027s document format (doc flavor) is not among those supported by the printer. If the client specifies a doc flavor with a MIME type of \"application/octet-stream\", the printer may abort the job if the printer cannot determine the document data\u0027s actual format through auto-sensing (even if the printer supports the document format if specified explicitly). This value must be supported, since a doc flavor is required to be specified for each doc.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DOCUMENT_FORMAT_ERROR",
      "comment": "The job was aborted by the system because the printer encountered an error in the document data while processing it. If the printer posts this reason, the document data has already passed any tests that would have led to the UNSUPPORTED_DOCUMENT_FORMAT job state reason.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PROCESSING_TO_STOP_POINT",
      "comment": "The requester has canceled the job or the printer has aborted the job, but the printer is still performing some actions on the job until a specified stop point occurs or job termination/cleanup is completed. If the implementation requires some measurable time to cancel the job in the PROCESSING or PROCESSING_STOPPED job states, the printer must use this reason to indicate that the printer is still performing some actions on the job while the job remains in the PROCESSING or PROCESSING_STOPPED state. After all the job\u0027s job description attributes have stopped incrementing, the printer moves the job from the PROCESSING state to the CANCELED or ABORTED job states.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SERVICE_OFF_LINE",
      "comment": "The printer is off-line and accepting no jobs. All PENDING jobs are put into the PENDING_HELD state. This situation could be true if the service\u0027s or document transform\u0027s input is impaired or broken.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_COMPLETED_SUCCESSFULLY",
      "comment": "The job completed successfully. This value should be supported.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_COMPLETED_WITH_WARNINGS",
      "comment": "The job completed with warnings. This value should be supported if the implementation detects warnings.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_COMPLETED_WITH_ERRORS",
      "comment": "The job completed with errors (and possibly warnings too). This value should be supported if the implementation detects errors.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOB_RESTARTABLE",
      "comment": "This job is retained and is currently able to be restarted. If JOB_RESTARTABLE is contained in the job\u0027s JobStateReasons attribute, then the printer must accept a request to restart that job. This value should be supported if restarting jobs is supported. [The capability for restarting jobs is not in the Java Print Service API at present.]",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.JobStateReason",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "QUEUED_IN_DEVICE",
      "comment": "The job has been forwarded to a device or print system that is unable to send back status. The printer sets the job\u0027s JobState attribute to COMPLETED and adds the QUEUED_IN_DEVICE reason to the job\u0027s JobStateReasons attribute to indicate that the printer has no additional information about the job and never will have any better information.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getStringTable",
      "comment": "Returns the string table for class JobStateReason.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html#getStringTable()\"\u003egetStringTable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html\" title\u003d\"class in javax.print.attribute\"\u003eEnumSyntax\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the string table"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.print.attribute.EnumSyntax",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getEnumValueTable",
      "comment": "Returns the enumeration value table for class JobStateReason.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html#getEnumValueTable()\"\u003egetEnumValueTable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html\" title\u003d\"class in javax.print.attribute\"\u003eEnumSyntax\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the value table"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.print.attribute.Attribute",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getCategory",
      "comment": "Get the printing attribute class which is to be used as the \"category\" for this printing attribute value. For class JobStateReason and any vendor-defined subclasses, the category is class JobStateReason itself.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html#getCategory()\"\u003egetCategory\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html\" title\u003d\"interface in javax.print.attribute\"\u003eAttribute\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "printing attribute class (category), an instance of class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Class.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003ejava.lang.Class\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getName",
      "comment": "Get the name of the category of which this attribute value is an instance. For class JobStateReason and any vendor-defined subclasses, the category name is \"job-state-reason\".",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html#getName()\"\u003egetName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html\" title\u003d\"interface in javax.print.attribute\"\u003eAttribute\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "attribute category name"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Construct a new job state reason enumeration value with the given integer value.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - Integer value"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.print.attribute.standard.JobStateReason",
  "comment": "Class \n\u003ccode\u003eJobStateReason\u003c/code\u003e is a printing attribute class, an enumeration, that provides additional information about the job\u0027s current state, i.e., information that augments the value of the job\u0027s \n\u003ca href\u003d\"JobState.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eJobState\u003c/code\u003e\u003c/a\u003e attribute. Class \n\u003ccode\u003eJobStateReason\u003c/code\u003e defines standard job state reason values. A Print Service implementation only needs to report those job state reasons which are appropriate for the particular implementation; it does not have to report every defined job state reason. \n\u003cp\u003e Instances of \u003ccode\u003eJobStateReason\u003c/code\u003e do not appear in a Print Job\u0027s attribute set directly. Rather, a \u003ca href\u003d\"JobStateReasons.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eJobStateReasons\u003c/code\u003e\u003c/a\u003e attribute appears in the Print Job\u0027s attribute set. The \u003ca href\u003d\"JobStateReasons.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eJobStateReasons\u003c/code\u003e\u003c/a\u003e attribute contains zero, one, or more than one \u003ccode\u003eJobStateReason\u003c/code\u003e objects which pertain to the Print Job\u0027s status. The printer adds a JobStateReason object to the Print Job\u0027s \u003ca href\u003d\"JobStateReasons.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eJobStateReasons\u003c/code\u003e\u003c/a\u003e attribute when the corresponding condition becomes true of the Print Job, and the printer removes the \u003ccode\u003eJobStateReason\u003c/code\u003e object again when the corresponding condition becomes false, regardless of whether the Print Job\u0027s overall \u003ca href\u003d\"JobState.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eJobState\u003c/code\u003e\u003c/a\u003e also changed. \u003c/p\u003e\n\u003cp\u003e \u003cb\u003eIPP Compatibility:\u003c/b\u003e The category name returned by \u003ccode\u003egetName()\u003c/code\u003e is the IPP attribute name. The enumeration\u0027s integer value is the IPP enum value. The \u003ccode\u003etoString()\u003c/code\u003e method returns the IPP string representation of the attribute value.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.print.attribute.standard.JobStateReason\"\u003eSerialized Form\u003c/a\u003e"
    ]
  }
}