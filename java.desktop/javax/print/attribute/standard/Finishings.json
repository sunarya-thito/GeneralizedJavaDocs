{
  "packageName": "javax.print.attribute.standard",
  "simpleName": "Finishings",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.print.attribute.EnumSyntax",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "NONE",
      "comment": "Perform no binding.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "STAPLE",
      "comment": "Bind the document(s) with one or more staples. The exact number and placement of the staples is site-defined.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "COVER",
      "comment": "This value is specified when it is desired to select a non-printed (or pre-printed) cover for the document. This does not supplant the specification of a printed cover (on cover stock medium) by the document itself.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "BIND",
      "comment": "This value indicates that a binding is to be applied to the document; the type and placement of the binding is site-defined.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SADDLE_STITCH",
      "comment": "Bind the document(s) with one or more staples (wire stitches) along the middle fold. The exact number and placement of the staples and the middle fold is implementation- and/or site-defined.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "EDGE_STITCH",
      "comment": "Bind the document(s) with one or more staples (wire stitches) along one edge. The exact number and placement of the staples is implementation- and/or site- defined.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "STAPLE_TOP_LEFT",
      "comment": "Bind the document(s) with one or more staples in the top left corner.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "STAPLE_BOTTOM_LEFT",
      "comment": "Bind the document(s) with one or more staples in the bottom left corner.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "STAPLE_TOP_RIGHT",
      "comment": "Bind the document(s) with one or more staples in the top right corner.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "STAPLE_BOTTOM_RIGHT",
      "comment": "Bind the document(s) with one or more staples in the bottom right corner.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "EDGE_STITCH_LEFT",
      "comment": "Bind the document(s) with one or more staples (wire stitches) along the left edge. The exact number and placement of the staples is implementation- and/or site-defined.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "EDGE_STITCH_TOP",
      "comment": "Bind the document(s) with one or more staples (wire stitches) along the top edge. The exact number and placement of the staples is implementation- and/or site-defined.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "EDGE_STITCH_RIGHT",
      "comment": "Bind the document(s) with one or more staples (wire stitches) along the right edge. The exact number and placement of the staples is implementation- and/or site-defined.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "EDGE_STITCH_BOTTOM",
      "comment": "Bind the document(s) with one or more staples (wire stitches) along the bottom edge. The exact number and placement of the staples is implementation- and/or site-defined.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "STAPLE_DUAL_LEFT",
      "comment": "Bind the document(s) with two staples (wire stitches) along the left edge assuming a portrait document (see above).",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "STAPLE_DUAL_TOP",
      "comment": "Bind the document(s) with two staples (wire stitches) along the top edge assuming a portrait document (see above).",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "STAPLE_DUAL_RIGHT",
      "comment": "Bind the document(s) with two staples (wire stitches) along the right edge assuming a portrait document (see above).",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.print.attribute.standard.Finishings",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "STAPLE_DUAL_BOTTOM",
      "comment": "Bind the document(s) with two staples (wire stitches) along the bottom edge assuming a portrait document (see above).",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getStringTable",
      "comment": "Returns the string table for class Finishings.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html#getStringTable()\"\u003egetStringTable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html\" title\u003d\"class in javax.print.attribute\"\u003eEnumSyntax\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the string table"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.print.attribute.EnumSyntax",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getEnumValueTable",
      "comment": "Returns the enumeration value table for class Finishings.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html#getEnumValueTable()\"\u003egetEnumValueTable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html\" title\u003d\"class in javax.print.attribute\"\u003eEnumSyntax\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the value table"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getOffset",
      "comment": "Returns the lowest integer value used by class Finishings.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html#getOffset()\"\u003egetOffset\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/EnumSyntax.html\" title\u003d\"class in javax.print.attribute\"\u003eEnumSyntax\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the offset of the lowest enumeration value"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.print.attribute.Attribute",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getCategory",
      "comment": "Get the printing attribute class which is to be used as the \"category\" for this printing attribute value. For class Finishings and any vendor-defined subclasses, the category is class Finishings itself.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html#getCategory()\"\u003egetCategory\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html\" title\u003d\"interface in javax.print.attribute\"\u003eAttribute\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "printing attribute class (category), an instance of class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Class.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003ejava.lang.Class\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getName",
      "comment": "Get the name of the category of which this attribute value is an instance. For class Finishings and any vendor-defined subclasses, the category name is \"finishings\".",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html#getName()\"\u003egetName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html\" title\u003d\"interface in javax.print.attribute\"\u003eAttribute\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "attribute category name"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Construct a new finishings binding enumeration value with the given integer value.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - Integer value"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.print.attribute.standard.Finishings",
  "comment": "Class \n\u003ccode\u003eFinishings\u003c/code\u003e is a printing attribute class, an enumeration, that identifies whether the printer applies a finishing operation of some kind of binding to each copy of each printed document in the job. For multidoc print jobs (jobs with multiple documents), the \n\u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e attribute determines what constitutes a \"copy\" for purposes of finishing. \n\u003cp\u003e Standard Finishings values are: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e\u003ca href\u003d\"#NONE\"\u003e\u003ccode\u003eNONE\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#STAPLE\"\u003e\u003ccode\u003eSTAPLE\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#EDGE_STITCH\"\u003e\u003ccode\u003eEDGE_STITCH\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#BIND\"\u003e\u003ccode\u003eBIND\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#SADDLE_STITCH\"\u003e\u003ccode\u003eSADDLE_STITCH\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#COVER\"\u003e\u003ccode\u003eCOVER\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The following \u003ccode\u003eFinishings\u003c/code\u003e values are more specific; they indicate a corner or an edge as if the document were a portrait document: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e\u003ca href\u003d\"#STAPLE_TOP_LEFT\"\u003e\u003ccode\u003eSTAPLE_TOP_LEFT\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#EDGE_STITCH_LEFT\"\u003e\u003ccode\u003eEDGE_STITCH_LEFT\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#STAPLE_DUAL_LEFT\"\u003e\u003ccode\u003eSTAPLE_DUAL_LEFT\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#STAPLE_BOTTOM_LEFT\"\u003e\u003ccode\u003eSTAPLE_BOTTOM_LEFT\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#EDGE_STITCH_TOP\"\u003e\u003ccode\u003eEDGE_STITCH_TOP\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#STAPLE_DUAL_TOP\"\u003e\u003ccode\u003eSTAPLE_DUAL_TOP\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#STAPLE_TOP_RIGHT\"\u003e\u003ccode\u003eSTAPLE_TOP_RIGHT\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#EDGE_STITCH_RIGHT\"\u003e\u003ccode\u003eEDGE_STITCH_RIGHT\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#STAPLE_DUAL_RIGHT\"\u003e\u003ccode\u003eSTAPLE_DUAL_RIGHT\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#STAPLE_BOTTOM_RIGHT\"\u003e\u003ccode\u003eSTAPLE_BOTTOM_RIGHT\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#EDGE_STITCH_BOTTOM\"\u003e\u003ccode\u003eEDGE_STITCH_BOTTOM\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n \u003cli\u003e\u003ca href\u003d\"#STAPLE_DUAL_BOTTOM\"\u003e\u003ccode\u003eSTAPLE_DUAL_BOTTOM\u003c/code\u003e\u003c/a\u003e \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The STAPLE_\u003ci\u003eXXX\u003c/i\u003e values are specified with respect to the document as if the document were a portrait document. If the document is actually a landscape or a reverse-landscape document, the client supplies the appropriate transformed value. For example, to position a staple in the upper left hand corner of a landscape document when held for reading, the client supplies the \u003ccode\u003eSTAPLE_BOTTOM_LEFT\u003c/code\u003e value (since landscape is defined as a +90 degree rotation from portrait, i.e., anti-clockwise). On the other hand, to position a staple in the upper left hand corner of a reverse-landscape document when held for reading, the client supplies the \u003ccode\u003eSTAPLE_TOP_RIGHT\u003c/code\u003e value (since reverse-landscape is defined as a -90 degree rotation from portrait, i.e., clockwise). \u003c/p\u003e\n\u003cp\u003e The angle (vertical, horizontal, angled) of each staple with respect to the document depends on the implementation which may in turn depend on the value of the attribute. \u003c/p\u003e\n\u003cp\u003e The effect of a \u003ccode\u003eFinishings\u003c/code\u003e attribute on a multidoc print job (a job with multiple documents) depends on whether all the docs have the same binding specified or whether different docs have different bindings specified, and on the (perhaps defaulted) value of the \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e attribute. \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003eIf all the docs have the same binding specified, then any value of \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e makes sense, and the printer\u0027s processing depends on the \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e value: \n  \u003cul\u003e \n   \u003cli\u003e\u003ccode\u003eSINGLE_DOCUMENT\u003c/code\u003e -- All the input docs will be bound together as one output document with the specified binding. \u003c/li\u003e\n   \u003cli\u003e\u003ccode\u003eSINGLE_DOCUMENT_NEW_SHEET\u003c/code\u003e -- All the input docs will be bound together as one output document with the specified binding, and the first impression of each input doc will always start on a new media sheet. \u003c/li\u003e\n   \u003cli\u003e\u003ccode\u003eSEPARATE_DOCUMENTS_UNCOLLATED_COPIES\u003c/code\u003e -- Each input doc will be bound separately with the specified binding. \u003c/li\u003e\n   \u003cli\u003e\u003ccode\u003eSEPARATE_DOCUMENTS_COLLATED_COPIES\u003c/code\u003e -- Each input doc will be bound separately with the specified binding. \u003c/li\u003e\n  \u003c/ul\u003e \u003c/li\u003e\n \u003cli\u003eIf different docs have different bindings specified, then only two values of \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e make sense, and the printer reports an error when the job is submitted if any other value is specified: \n  \u003cul\u003e \n   \u003cli\u003e\u003ccode\u003eSEPARATE_DOCUMENTS_UNCOLLATED_COPIES\u003c/code\u003e -- Each input doc will be bound separately with its own specified binding. \u003c/li\u003e\n   \u003cli\u003e\u003ccode\u003eSEPARATE_DOCUMENTS_COLLATED_COPIES\u003c/code\u003e -- Each input doc will be bound separately with its own specified binding. \u003c/li\u003e\n  \u003c/ul\u003e \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e \u003cb\u003eIPP Compatibility:\u003c/b\u003e Class Finishings encapsulates some of the IPP enum values that can be included in an IPP \"finishings\" attribute, which is a set of enums. The category name returned by \u003ccode\u003egetName()\u003c/code\u003e is the IPP attribute name. The enumeration\u0027s integer value is the IPP enum value. The \u003ccode\u003etoString()\u003c/code\u003e method returns the IPP string representation of the attribute value. In IPP Finishings is a multi-value attribute, this API currently allows only one binding to be specified.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.print.attribute.standard.Finishings\"\u003eSerialized Form\u003c/a\u003e"
    ]
  }
}