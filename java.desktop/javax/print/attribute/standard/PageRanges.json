{
  "packageName": "javax.print.attribute.standard",
  "simpleName": "PageRanges",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.print.attribute.SetOfIntegerSyntax",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "object"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Returns whether this page ranges attribute is equivalent to the passed in object. To be equivalent, all of the following conditions must be true: object is not null. object is an instance of class PageRanges. This page ranges attribute\u0027s members and object\u0027s members are the same.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/SetOfIntegerSyntax.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/SetOfIntegerSyntax.html\" title\u003d\"class in javax.print.attribute\"\u003eSetOfIntegerSyntax\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobject\u003c/code\u003e - \n\u003ccode\u003eObject\u003c/code\u003e to compare to"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003eobject\u003c/code\u003e is equivalent to this page ranges attribute, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.print.attribute.Attribute",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getCategory",
      "comment": "Get the printing attribute class which is to be used as the \"category\" for this printing attribute value. For class PageRanges, the category is class PageRanges itself.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html#getCategory()\"\u003egetCategory\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html\" title\u003d\"interface in javax.print.attribute\"\u003eAttribute\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "printing attribute class (category), an instance of class \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Class.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003ejava.lang.Class\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getName",
      "comment": "Get the name of the category of which this attribute value is an instance. For class PageRanges, the category name is \"page-ranges\".",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html#getName()\"\u003egetName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Attribute.html\" title\u003d\"interface in javax.print.attribute\"\u003eAttribute\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "attribute category name"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {},
              {}
            ]
          },
          "field": {
            "name": "members"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a new page ranges attribute with the given members. The members are specified in \"array form;\" see class SetOfIntegerSyntax for an explanation of array form.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emembers\u003c/code\u003e - set members in array form"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003emembers\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or any element of \n\u003ccode\u003emembers\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if any element of \n\u003ccode\u003emembers\u003c/code\u003e is not a length-one or length-two array. Also if \n\u003ccode\u003emembers\u003c/code\u003e is a zero-length array or if any member of the set is less than 1."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "members"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a new page ranges attribute with the given members in string form. See class SetOfIntegerSyntax for explanation of the syntax.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emembers\u003c/code\u003e - set members in string form"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003emembers\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or any element of \n\u003ccode\u003emembers\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003emembers\u003c/code\u003e does not obey the proper syntax. Also if the constructed set-of-integer is a zero-length array or if any member of the set is less than 1."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "member"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a new page ranges attribute containing a single integer. That is, only the one page is to be printed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emember\u003c/code\u003e - set member"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003emember \u0026lt; 1\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "lowerBound"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "upperBound"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a new page ranges attribute containing a single range of integers. That is, only those pages in the one range are to be printed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elowerBound\u003c/code\u003e - lower bound of the range",
          "\u003ccode\u003eupperBound\u003c/code\u003e - upper bound of the range"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if a \n\u003ccode\u003enull\u003c/code\u003e range is specified or if a \n\u003ccode\u003enon-null\u003c/code\u003e range is specified with \n\u003ccode\u003elowerBound\u003c/code\u003e less than 1"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "javax.print.attribute.standard.PageRanges",
  "comment": "Class \n\u003ccode\u003ePageRanges\u003c/code\u003e is a printing attribute class, a set of integers, that identifies the range(s) of print-stream pages that the Printer object uses for each copy of each document which are to be printed. Nothing is printed for any pages identified that do not exist in the document(s). The attribute is associated with \n\u003ci\u003eprint-stream\u003c/i\u003e pages, not application-numbered pages (for example, the page numbers found in the headers and or footers for certain word processing applications). \n\u003cp\u003e In most cases, the exact pages to be printed will be generated by a device driver and this attribute would not be required. However, when printing an archived document which has already been formatted, the end user may elect to print just a subset of the pages contained in the document. In this case, if a page range of \u003ccode\u003e\"\u003ci\u003en\u003c/i\u003e-\u003ci\u003em\u003c/i\u003e\"\u003c/code\u003e is specified, the first page to be printed will be page \u003ci\u003en.\u003c/i\u003e All subsequent pages of the document will be printed through and including page \u003ci\u003em.\u003c/i\u003e \u003c/p\u003e\n\u003cp\u003e If a \u003ccode\u003ePageRanges\u003c/code\u003e attribute is not specified for a print job, all pages of the document will be printed. In other words, the default value for the \u003ccode\u003ePageRanges\u003c/code\u003e attribute is always \u003ccode\u003e{{1, Integer.MAX_VALUE}}\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003e The effect of a \u003ccode\u003ePageRanges\u003c/code\u003e attribute on a multidoc print job (a job with multiple documents) depends on whether all the docs have the same page ranges specified or whether different docs have different page ranges specified, and on the (perhaps defaulted) value of the \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e attribute. \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003eIf all the docs have the same page ranges specified, then any value of \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e makes sense, and the printer\u0027s processing depends on the \u003ca href\u003d\"MultipleDocumentHandling.html\" title\u003d\"class in javax.print.attribute.standard\"\u003e\u003ccode\u003eMultipleDocumentHandling\u003c/code\u003e\u003c/a\u003e value: \n  \u003cul\u003e \n   \u003cli\u003e\u003ccode\u003eSINGLE_DOCUMENT\u003c/code\u003e -- All the input docs will be combined together into one output document. The specified page ranges of that output document will be printed. \u003c/li\u003e\n   \u003cli\u003e\u003ccode\u003eSINGLE_DOCUMENT_NEW_SHEET\u003c/code\u003e -- All the input docs will be combined together into one output document, and the first impression of each input doc will always start on a new media sheet. The specified page ranges of that output document will be printed. \u003c/li\u003e\n   \u003cli\u003e\u003ccode\u003eSEPARATE_DOCUMENTS_UNCOLLATED_COPIES\u003c/code\u003e -- For each separate input doc, the specified page ranges will be printed. \u003c/li\u003e\n   \u003cli\u003e\u003ccode\u003eSEPARATE_DOCUMENTS_COLLATED_COPIES\u003c/code\u003e -- For each separate input doc, the specified page ranges will be printed. \u003c/li\u003e\n  \u003c/ul\u003e \n  \u003cul\u003e \n   \u003cli\u003e\u003ccode\u003eSEPARATE_DOCUMENTS_UNCOLLATED_COPIES\u003c/code\u003e -- For each separate input doc, its own specified page ranges will be printed. \u003c/li\u003e\n   \u003cli\u003e\u003ccode\u003eSEPARATE_DOCUMENTS_COLLATED_COPIES\u003c/code\u003e -- For each separate input doc, its own specified page ranges will be printed. \u003c/li\u003e\n  \u003c/ul\u003e \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e \u003cb\u003eIPP Compatibility:\u003c/b\u003e The PageRanges attribute\u0027s canonical array form gives the lower and upper bound for each range of pages to be included in and IPP \"page-ranges\" attribute. See class \u003ca href\u003d\"../SetOfIntegerSyntax.html\" title\u003d\"class in javax.print.attribute\"\u003e\u003ccode\u003eSetOfIntegerSyntax\u003c/code\u003e\u003c/a\u003e for an explanation of canonical array form. The category name returned by \u003ccode\u003egetName()\u003c/code\u003e gives the IPP attribute name.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.print.attribute.standard.PageRanges\"\u003eSerialized Form\u003c/a\u003e"
    ]
  }
}