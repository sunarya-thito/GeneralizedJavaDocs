{
  "packageName": "javax.print.attribute",
  "simpleName": "Size2DSyntax",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "INCH",
      "comment": "Value to indicate units of inches (in). It is actually the conversion factor by which to multiply inches to yield µm (25400).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.print.attribute.Size2DSyntax.INCH\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "MM",
      "comment": "Value to indicate units of millimeters (mm). It is actually the conversion factor by which to multiply mm to yield µm (1000).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.print.attribute.Size2DSyntax.MM\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "units"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSize",
      "comment": "Get this two-dimensional size attribute\u0027s dimensions in the given units as floating-point values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eunits\u003c/code\u003e - unit conversion factor, e.g. \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Size2DSyntax.html#INCH\"\u003e\u003ccode\u003eINCH\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Size2DSyntax.html#MM\"\u003e\u003ccode\u003eMM\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eunits \u0026lt; 1\u003c/code\u003e"
        ],
        "return": [
          "a two-element array with the \n\u003ccode\u003eX\u003c/code\u003e dimension at index 0 and the \n\u003ccode\u003eY\u003c/code\u003e dimension at index 1"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "units"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getX",
      "comment": "Returns this two-dimensional size attribute\u0027s X dimension in the given units as a floating-point value.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eunits\u003c/code\u003e - unit conversion factor, e.g. \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Size2DSyntax.html#INCH\"\u003e\u003ccode\u003eINCH\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Size2DSyntax.html#MM\"\u003e\u003ccode\u003eMM\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eunits \u0026lt; 1\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003eX\u003c/code\u003e dimension"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "units"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getY",
      "comment": "Returns this two-dimensional size attribute\u0027s Y dimension in the given units as a floating-point value.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eunits\u003c/code\u003e - unit conversion factor, e.g. \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Size2DSyntax.html#INCH\"\u003e\u003ccode\u003eINCH\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Size2DSyntax.html#MM\"\u003e\u003ccode\u003eMM\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eunits \u0026lt; 1\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003eY\u003c/code\u003e dimension"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "units"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "unitsName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string version of this two-dimensional size attribute in the given units. The string takes the form \"XxY U\", where X is the X dimension, Y is the Y dimension, and U is the units name. The values are displayed in floating point.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eunits\u003c/code\u003e - unit conversion factor, e.g. \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Size2DSyntax.html#INCH\"\u003e\u003ccode\u003eINCH\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Size2DSyntax.html#MM\"\u003e\u003ccode\u003eMM\u003c/code\u003e\u003c/a\u003e",
          "\u003ccode\u003eunitsName\u003c/code\u003e - units name string, e.g. \n\u003ccode\u003ein\u003c/code\u003e or \n\u003ccode\u003emm\u003c/code\u003e. If \n\u003ccode\u003enull\u003c/code\u003e, no units name is appended to the result"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eunits \u0026lt; 1\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003eString\u003c/code\u003e version of this two-dimensional size attribute"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "object"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Returns whether this two-dimensional size attribute is equivalent to the passed in object. To be equivalent, all of the following conditions must be true: object is not null. object is an instance of class Size2DSyntax This attribute\u0027s X dimension is equal to object\u0027s X dimension. This attribute\u0027s Y dimension is equal to object\u0027s Y dimension.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobject\u003c/code\u003e - \n\u003ccode\u003eObject\u003c/code\u003e to compare to"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003eobject\u003c/code\u003e is equivalent to this two-dimensional size attribute, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns a hash code value for this two-dimensional size attribute.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code value for this object."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string version of this two-dimensional size attribute. The string takes the form \"XxY um\", where X is the X dimension and Y is the Y dimension. The values are reported in the internal units of micrometers.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of the object."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getXMicrometers",
      "comment": "Returns this two-dimensional size attribute\u0027s X dimension in units of micrometers (µm). (For use in a subclass.)",
      "tagMap": {
        "return": [
          "\u003ccode\u003eX\u003c/code\u003e dimension (µm)"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getYMicrometers",
      "comment": "Returns this two-dimensional size attribute\u0027s Y dimension in units of micrometers (µm). (For use in a subclass.)",
      "tagMap": {
        "return": [
          "\u003ccode\u003eY\u003c/code\u003e dimension (µm)"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "units"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Construct a new two-dimensional size attribute from the given floating-point values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - \n\u003ccode\u003eX\u003c/code\u003e dimension",
          "\u003ccode\u003ey\u003c/code\u003e - \n\u003ccode\u003eY\u003c/code\u003e dimension",
          "\u003ccode\u003eunits\u003c/code\u003e - unit conversion factor, e.g. \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Size2DSyntax.html#INCH\"\u003e\u003ccode\u003eINCH\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Size2DSyntax.html#MM\"\u003e\u003ccode\u003eMM\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ex \u0026lt; 0\u003c/code\u003e or \n\u003ccode\u003ey \u0026lt; 0\u003c/code\u003e or \n\u003ccode\u003eunits \u0026lt; 1\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "units"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Construct a new two-dimensional size attribute from the given integer values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - \n\u003ccode\u003eX\u003c/code\u003e dimension",
          "\u003ccode\u003ey\u003c/code\u003e - \n\u003ccode\u003eY\u003c/code\u003e dimension",
          "\u003ccode\u003eunits\u003c/code\u003e - unit conversion factor, e.g. \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Size2DSyntax.html#INCH\"\u003e\u003ccode\u003eINCH\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/print/attribute/Size2DSyntax.html#MM\"\u003e\u003ccode\u003eMM\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ex \u0026lt; 0\u003c/code\u003e or \n\u003ccode\u003ey \u0026lt; 0\u003c/code\u003e or \n\u003ccode\u003eunits \u0026lt; 1\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.print.attribute.Size2DSyntax",
  "comment": "Class \n\u003ccode\u003eSize2DSyntax\u003c/code\u003e is an abstract base class providing the common implementation of all attributes denoting a size in two dimensions. \n\u003cp\u003e A two-dimensional size attribute\u0027s value consists of two items, the \u003ccode\u003eX\u003c/code\u003e dimension and the \u003ccode\u003eY\u003c/code\u003e dimension. A two-dimensional size attribute may be constructed by supplying the two values and indicating the units in which the values are measured. Methods are provided to return a two-dimensional size attribute\u0027s values, indicating the units in which the values are to be returned. The two most common size units are inches (in) and millimeters (mm), and exported constants \u003ca href\u003d\"#INCH\"\u003e\u003ccode\u003eINCH\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"#MM\"\u003e\u003ccode\u003eMM\u003c/code\u003e\u003c/a\u003e are provided for indicating those units. \u003c/p\u003e\n\u003cp\u003e Once constructed, a two-dimensional size attribute\u0027s value is immutable. \u003c/p\u003e\n\u003cp\u003e \u003cb\u003eDesign\u003c/b\u003e \u003c/p\u003e\n\u003cp\u003e A two-dimensional size attribute\u0027s \u003ccode\u003eX\u003c/code\u003e and \u003ccode\u003eY\u003c/code\u003e dimension values are stored internally as integers in units of micrometers (µm), where 1 micrometer \u003d 10\u003csup\u003e-6\u003c/sup\u003e meter \u003d 1/1000 millimeter \u003d 1/25400 inch. This permits dimensions to be represented exactly to a precision of 1/1000 mm (\u003d 1 µm) or 1/100 inch (\u003d 254 µm). If fractional inches are expressed in negative powers of two, this permits dimensions to be represented exactly to a precision of 1/8 inch (\u003d 3175 µm) but not 1/16 inch (because 1/16 inch does not equal an integral number of µm). \u003c/p\u003e\n\u003cp\u003e Storing the dimensions internally in common units of µm lets two size attributes be compared without regard to the units in which they were created; for example, 8.5 in will compare equal to 215.9 mm, as they both are stored as 215900 µm. For example, a lookup service can match resolution attributes based on equality of their serialized representations regardless of the units in which they were created. Using integers for internal storage allows precise equality comparisons to be done, which would not be guaranteed if an internal floating point representation were used. Note that if you\u0027re looking for \u003ccode\u003eU.S. letter\u003c/code\u003e sized media in metric units, you have to search for a media size of 215.9 x 279.4 mm; rounding off to an integral 216 x 279 mm will not match. \u003c/p\u003e\n\u003cp\u003e The exported constant \u003ca href\u003d\"#INCH\"\u003e\u003ccode\u003eINCH\u003c/code\u003e\u003c/a\u003e is actually the conversion factor by which to multiply a value in inches to get the value in µm. Likewise, the exported constant \u003ca href\u003d\"#MM\"\u003e\u003ccode\u003eMM\u003c/code\u003e\u003c/a\u003e is the conversion factor by which to multiply a value in mm to get the value in µm. A client can specify a resolution value in units other than inches or mm by supplying its own conversion factor. However, since the internal units of µm was chosen with supporting only the external units of inch and mm in mind, there is no guarantee that the conversion factor for the client\u0027s units will be an exact integer. If the conversion factor isn\u0027t an exact integer, resolution values in the client\u0027s units won\u0027t be stored precisely.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.print.attribute.Size2DSyntax\"\u003eSerialized Form\u003c/a\u003e"
    ]
  }
}