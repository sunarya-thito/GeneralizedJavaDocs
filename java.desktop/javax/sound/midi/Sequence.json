{
  "packageName": "javax.sound.midi",
  "simpleName": "Sequence",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "float",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PPQ",
      "comment": "The tempo-based timing type, for which the resolution is expressed in pulses (ticks) per quarter note.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#%3Cinit%3E(float,int)\"\u003e\u003ccode\u003eSequence(float, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.sound.midi.Sequence.PPQ\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "float",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SMPTE_24",
      "comment": "The SMPTE-based timing type with 24 frames per second (resolution is expressed in ticks per frame).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#%3Cinit%3E(float,int)\"\u003e\u003ccode\u003eSequence(float, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.sound.midi.Sequence.SMPTE_24\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "float",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SMPTE_25",
      "comment": "The SMPTE-based timing type with 25 frames per second (resolution is expressed in ticks per frame).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#%3Cinit%3E(float,int)\"\u003e\u003ccode\u003eSequence(float, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.sound.midi.Sequence.SMPTE_25\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "float",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SMPTE_30DROP",
      "comment": "The SMPTE-based timing type with 29.97 frames per second (resolution is expressed in ticks per frame).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#%3Cinit%3E(float,int)\"\u003e\u003ccode\u003eSequence(float, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.sound.midi.Sequence.SMPTE_30DROP\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "float",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SMPTE_30",
      "comment": "The SMPTE-based timing type with 30 frames per second (resolution is expressed in ticks per frame).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#%3Cinit%3E(float,int)\"\u003e\u003ccode\u003eSequence(float, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.sound.midi.Sequence.SMPTE_30\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "float",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "divisionType",
      "comment": "The timing division type of the sequence.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#PPQ\"\u003e\u003ccode\u003ePPQ\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_24\"\u003e\u003ccode\u003eSMPTE_24\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_25\"\u003e\u003ccode\u003eSMPTE_25\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_30DROP\"\u003e\u003ccode\u003eSMPTE_30DROP\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_30\"\u003e\u003ccode\u003eSMPTE_30\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#getDivisionType()\"\u003e\u003ccode\u003egetDivisionType()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "resolution",
      "comment": "The timing resolution of the sequence.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#getResolution()\"\u003e\u003ccode\u003egetResolution()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.util.Vector",
        "parameters": [
          {
            "name": "javax.sound.midi.Track",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "tracks",
      "comment": "The MIDI tracks in this sequence.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#getTracks()\"\u003e\u003ccode\u003egetTracks()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDivisionType",
      "comment": "Obtains the timing division type for this sequence.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#PPQ\"\u003e\u003ccode\u003ePPQ\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_24\"\u003e\u003ccode\u003eSMPTE_24\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_25\"\u003e\u003ccode\u003eSMPTE_25\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_30DROP\"\u003e\u003ccode\u003eSMPTE_30DROP\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_30\"\u003e\u003ccode\u003eSMPTE_30\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#%3Cinit%3E(float,int)\"\u003e\u003ccode\u003eSequence(float, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/MidiFileFormat.html#getDivisionType()\"\u003e\u003ccode\u003eMidiFileFormat.getDivisionType()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the division type (PPQ or one of the SMPTE types)"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getResolution",
      "comment": "Obtains the timing resolution for this sequence. If the sequence\u0027s division type is PPQ, the resolution is specified in ticks per beat. For SMTPE timing, the resolution is specified in ticks per frame.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#getDivisionType()\"\u003e\u003ccode\u003egetDivisionType()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#%3Cinit%3E(float,int)\"\u003e\u003ccode\u003eSequence(float, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/MidiFileFormat.html#getResolution()\"\u003e\u003ccode\u003eMidiFileFormat.getResolution()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the number of ticks per beat (PPQ) or per frame (SMPTE)"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.midi.Track",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createTrack",
      "comment": "Creates a new, initially empty track as part of this sequence. The track initially contains the meta-event End of Track. The newly created track is returned. All tracks in the sequence may be retrieved using getTracks(). Tracks may be removed from the sequence using deleteTrack(javax.sound.midi.Track).",
      "tagMap": {
        "return": [
          "the newly created track"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.midi.Track",
            "type": "Class"
          },
          "field": {
            "name": "track"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "deleteTrack",
      "comment": "Removes the specified track from the sequence.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#createTrack()\"\u003e\u003ccode\u003ecreateTrack()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#getTracks()\"\u003e\u003ccode\u003egetTracks()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etrack\u003c/code\u003e - the track to remove"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the track existed in the track and was removed, otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.midi.Track",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTracks",
      "comment": "Obtains an array containing all the tracks in this sequence. If the sequence contains no tracks, an array of length 0 is returned.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#createTrack()\"\u003e\u003ccode\u003ecreateTrack()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#deleteTrack(javax.sound.midi.Track)\"\u003e\u003ccode\u003edeleteTrack(javax.sound.midi.Track)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the array of tracks"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMicrosecondLength",
      "comment": "Obtains the duration of this sequence, expressed in microseconds.",
      "tagMap": {
        "return": [
          "this sequence\u0027s duration in microseconds"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTickLength",
      "comment": "Obtains the duration of this sequence, expressed in MIDI ticks.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#getMicrosecondLength()\"\u003e\u003ccode\u003egetMicrosecondLength()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "this sequence\u0027s length in ticks"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.midi.Patch",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPatchList",
      "comment": "Obtains a list of patches referenced in this sequence. This patch list may be used to load the required Instrument objects into a Synthesizer.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch%5B%5D)\"\u003e\u003ccode\u003eSynthesizer.loadInstruments(Soundbank, Patch[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an array of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Patch.html\" title\u003d\"class in javax.sound.midi\"\u003e\u003ccode\u003ePatch\u003c/code\u003e\u003c/a\u003e objects used in this sequence"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.sound.midi.InvalidMidiDataException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "divisionType"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "resolution"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new MIDI sequence with the specified timing division type and timing resolution. The division type must be one of the recognized MIDI timing types. For tempo-based timing, divisionType is PPQ (pulses per quarter note) and the resolution is specified in ticks per beat. For SMTPE timing, divisionType specifies the number of frames per second and the resolution is specified in ticks per frame. The sequence will contain no initial tracks. Tracks may be added to or removed from the sequence using createTrack() and deleteTrack(javax.sound.midi.Track).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#PPQ\"\u003e\u003ccode\u003ePPQ\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_24\"\u003e\u003ccode\u003eSMPTE_24\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_25\"\u003e\u003ccode\u003eSMPTE_25\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_30DROP\"\u003e\u003ccode\u003eSMPTE_30DROP\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_30\"\u003e\u003ccode\u003eSMPTE_30\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#getDivisionType()\"\u003e\u003ccode\u003egetDivisionType()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#getResolution()\"\u003e\u003ccode\u003egetResolution()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#getTracks()\"\u003e\u003ccode\u003egetTracks()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edivisionType\u003c/code\u003e - the timing division type (PPQ or one of the SMPTE types)",
          "\u003ccode\u003eresolution\u003c/code\u003e - the timing resolution"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/InvalidMidiDataException.html\" title\u003d\"class in javax.sound.midi\"\u003eInvalidMidiDataException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edivisionType\u003c/code\u003e is not valid"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "javax.sound.midi.InvalidMidiDataException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "divisionType"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "resolution"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "numTracks"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new MIDI sequence with the specified timing division type, timing resolution, and number of tracks. The division type must be one of the recognized MIDI timing types. For tempo-based timing, divisionType is PPQ (pulses per quarter note) and the resolution is specified in ticks per beat. For SMTPE timing, divisionType specifies the number of frames per second and the resolution is specified in ticks per frame. The sequence will be initialized with the number of tracks specified by numTracks. These tracks are initially empty (i.e. they contain only the meta-event End of Track). The tracks may be retrieved for editing using the getTracks() method. Additional tracks may be added, or existing tracks removed, using createTrack() and deleteTrack(javax.sound.midi.Track).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#PPQ\"\u003e\u003ccode\u003ePPQ\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_24\"\u003e\u003ccode\u003eSMPTE_24\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_25\"\u003e\u003ccode\u003eSMPTE_25\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_30DROP\"\u003e\u003ccode\u003eSMPTE_30DROP\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#SMPTE_30\"\u003e\u003ccode\u003eSMPTE_30\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#getDivisionType()\"\u003e\u003ccode\u003egetDivisionType()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#getResolution()\"\u003e\u003ccode\u003egetResolution()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edivisionType\u003c/code\u003e - the timing division type (PPQ or one of the SMPTE types)",
          "\u003ccode\u003eresolution\u003c/code\u003e - the timing resolution",
          "\u003ccode\u003enumTracks\u003c/code\u003e - the initial number of tracks in the sequence"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/InvalidMidiDataException.html\" title\u003d\"class in javax.sound.midi\"\u003eInvalidMidiDataException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edivisionType\u003c/code\u003e is not valid"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.sound.midi.Sequence",
  "comment": "A \n\u003ccode\u003eSequence\u003c/code\u003e is a data structure containing musical information (often an entire song or composition) that can be played back by a \n\u003ca href\u003d\"Sequencer.html\" title\u003d\"interface in javax.sound.midi\"\u003e\u003ccode\u003eSequencer\u003c/code\u003e\u003c/a\u003e object. Specifically, the \n\u003ccode\u003eSequence\u003c/code\u003e contains timing information and one or more tracks. Each \n\u003ca href\u003d\"Track.html\" title\u003d\"class in javax.sound.midi\"\u003e\u003ccode\u003etrack\u003c/code\u003e\u003c/a\u003e consists of a series of MIDI events (such as note-ons, note-offs, program changes, and meta-events). The sequence\u0027s timing information specifies the type of unit that is used to time-stamp the events in the sequence. \n\u003cp\u003e A \u003ccode\u003eSequence\u003c/code\u003e can be created from a MIDI file by reading the file into an input stream and invoking one of the \u003ccode\u003egetSequence\u003c/code\u003e methods of \u003ca href\u003d\"MidiSystem.html\" title\u003d\"class in javax.sound.midi\"\u003e\u003ccode\u003eMidiSystem\u003c/code\u003e\u003c/a\u003e. A sequence can also be built from scratch by adding new \u003ccode\u003eTracks\u003c/code\u003e to an empty \u003ccode\u003eSequence\u003c/code\u003e, and adding \u003ca href\u003d\"MidiEvent.html\" title\u003d\"class in javax.sound.midi\"\u003e\u003ccode\u003eMidiEvent\u003c/code\u003e\u003c/a\u003e objects to these \u003ccode\u003eTracks\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequencer.html#setSequence(java.io.InputStream)\"\u003e\u003ccode\u003eSequencer.setSequence(java.io.InputStream stream)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequencer.html#setSequence(javax.sound.midi.Sequence)\"\u003e\u003ccode\u003eSequencer.setSequence(Sequence sequence)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Track.html#add(javax.sound.midi.MidiEvent)\"\u003e\u003ccode\u003eTrack.add(MidiEvent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/MidiFileFormat.html\" title\u003d\"class in javax.sound.midi\"\u003e\u003ccode\u003eMidiFileFormat\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}