{
  "packageName": "javax.sound.midi",
  "simpleName": "Synthesizer",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.sound.midi.MidiDevice",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxPolyphony",
      "comment": "Obtains the maximum number of notes that this synthesizer can sound simultaneously.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#getVoiceStatus()\"\u003e\u003ccode\u003egetVoiceStatus()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the maximum number of simultaneous notes"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getLatency",
      "comment": "Obtains the processing latency incurred by this synthesizer, expressed in microseconds. This latency measures the worst-case delay between the time a MIDI message is delivered to the synthesizer and the time that the synthesizer actually produces the corresponding result. Although the latency is expressed in microseconds, a synthesizer\u0027s actual measured delay may vary over a wider range than this resolution suggests. For example, a synthesizer might have a worst-case delay of a few milliseconds or more.",
      "tagMap": {
        "return": [
          "the worst-case delay, in microseconds"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.midi.MidiChannel",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getChannels",
      "comment": "Obtains the set of MIDI channels controlled by this synthesizer. Each non-null element in the returned array is a MidiChannel that receives the MIDI messages sent on that channel number. The MIDI 1.0 specification provides for 16 channels, so this method returns an array of at least 16 elements. However, if this synthesizer doesn\u0027t make use of all 16 channels, some of the elements of the array might be null, so you should check each element before using it.",
      "tagMap": {
        "return": [
          "an array of the \n\u003ccode\u003eMidiChannel\u003c/code\u003e objects managed by this \n\u003ccode\u003eSynthesizer\u003c/code\u003e. Some of the array elements may be \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.midi.VoiceStatus",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getVoiceStatus",
      "comment": "Obtains the current status of the voices produced by this synthesizer. If this class of Synthesizer does not provide voice information, the returned array will always be of length 0. Otherwise, its length is always equal to the total number of voices, as returned by getMaxPolyphony(). (See the VoiceStatus class description for an explanation of synthesizer voices.)",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#getMaxPolyphony()\"\u003e\u003ccode\u003egetMaxPolyphony()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/VoiceStatus.html\" title\u003d\"class in javax.sound.midi\"\u003e\u003ccode\u003eVoiceStatus\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an array of \n\u003ccode\u003eVoiceStatus\u003c/code\u003e objects that supply information about the corresponding synthesizer voices"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.midi.Soundbank",
            "type": "Class"
          },
          "field": {
            "name": "soundbank"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isSoundbankSupported",
      "comment": "Informs the caller whether this synthesizer is capable of loading instruments from the specified soundbank. If the soundbank is unsupported, any attempts to load instruments from it will result in an IllegalArgumentException.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch%5B%5D)\"\u003e\u003ccode\u003eloadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadAllInstruments(javax.sound.midi.Soundbank)\"\u003e\u003ccode\u003eloadAllInstruments(javax.sound.midi.Soundbank)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#unloadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch%5B%5D)\"\u003e\u003ccode\u003eunloadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#unloadAllInstruments(javax.sound.midi.Soundbank)\"\u003e\u003ccode\u003eunloadAllInstruments(javax.sound.midi.Soundbank)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#getDefaultSoundbank()\"\u003e\u003ccode\u003egetDefaultSoundbank()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esoundbank\u003c/code\u003e - soundbank for which support is queried"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the soundbank is supported, otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.midi.Instrument",
            "type": "Class"
          },
          "field": {
            "name": "instrument"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "loadInstrument",
      "comment": "Makes a particular instrument available for synthesis. This instrument is loaded into the patch location specified by its Patch object, so that if a program-change message is received (or has been received) that causes that patch to be selected, subsequent notes will be played using the sound of instrument. If the specified instrument is already loaded, this method does nothing and returns true. The instrument must be part of a soundbank that this Synthesizer supports. (To make sure, you can use the getSoundbank method of Instrument and the isSoundbankSupported method of Synthesizer.)",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#unloadInstrument(javax.sound.midi.Instrument)\"\u003e\u003ccode\u003eunloadInstrument(javax.sound.midi.Instrument)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch%5B%5D)\"\u003e\u003ccode\u003eloadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadAllInstruments(javax.sound.midi.Soundbank)\"\u003e\u003ccode\u003eloadAllInstruments(javax.sound.midi.Soundbank)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#remapInstrument(javax.sound.midi.Instrument,javax.sound.midi.Instrument)\"\u003e\u003ccode\u003eremapInstrument(javax.sound.midi.Instrument, javax.sound.midi.Instrument)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/SoundbankResource.html#getSoundbank()\"\u003e\u003ccode\u003eSoundbankResource.getSoundbank()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/MidiChannel.html#programChange(int,int)\"\u003e\u003ccode\u003eMidiChannel.programChange(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003einstrument\u003c/code\u003e - instrument to load"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this \n\u003ccode\u003eSynthesizer\u003c/code\u003e doesn\u0027t support the specified instrument\u0027s soundbank"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the instrument is successfully loaded (or already had been), \n\u003ccode\u003efalse\u003c/code\u003e if the instrument could not be loaded (for example, if the synthesizer has insufficient memory to load it)"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.midi.Instrument",
            "type": "Class"
          },
          "field": {
            "name": "instrument"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "unloadInstrument",
      "comment": "Unloads a particular instrument.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadInstrument(javax.sound.midi.Instrument)\"\u003e\u003ccode\u003eloadInstrument(javax.sound.midi.Instrument)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#unloadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch%5B%5D)\"\u003e\u003ccode\u003eunloadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#unloadAllInstruments(javax.sound.midi.Soundbank)\"\u003e\u003ccode\u003eunloadAllInstruments(javax.sound.midi.Soundbank)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#getLoadedInstruments()\"\u003e\u003ccode\u003egetLoadedInstruments()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#remapInstrument(javax.sound.midi.Instrument,javax.sound.midi.Instrument)\"\u003e\u003ccode\u003eremapInstrument(javax.sound.midi.Instrument, javax.sound.midi.Instrument)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003einstrument\u003c/code\u003e - instrument to unload"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this \n\u003ccode\u003eSynthesizer\u003c/code\u003e doesn\u0027t support the specified instrument\u0027s soundbank"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.midi.Instrument",
            "type": "Class"
          },
          "field": {
            "name": "from"
          }
        },
        {
          "type": {
            "name": "javax.sound.midi.Instrument",
            "type": "Class"
          },
          "field": {
            "name": "to"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "remapInstrument",
      "comment": "Remaps an instrument. Instrument to takes the place of instrument from. For example, if from was located at bank number 2, program number 11, remapping causes that bank and program location to be occupied instead by to. If the function succeeds, instrument from is unloaded. To cancel the remapping reload instrument from by invoking one of loadInstrument(javax.sound.midi.Instrument), loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[]) or loadAllInstruments(javax.sound.midi.Soundbank).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadInstrument(javax.sound.midi.Instrument)\"\u003e\u003ccode\u003eloadInstrument(javax.sound.midi.Instrument)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch%5B%5D)\"\u003e\u003ccode\u003eloadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadAllInstruments(javax.sound.midi.Soundbank)\"\u003e\u003ccode\u003eloadAllInstruments(javax.sound.midi.Soundbank)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003efrom\u003c/code\u003e - the \n\u003ccode\u003eInstrument\u003c/code\u003e object to be replaced",
          "\u003ccode\u003eto\u003c/code\u003e - the \n\u003ccode\u003eInstrument\u003c/code\u003e object to be used in place of the old instrument, it should be loaded into the synthesizer"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if instrument \n\u003ccode\u003efrom\u003c/code\u003e or instrument \n\u003ccode\u003eto\u003c/code\u003e aren\u0027t supported by synthesizer or if instrument \n\u003ccode\u003eto\u003c/code\u003e is not loaded",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efrom\u003c/code\u003e or \n\u003ccode\u003eto\u003c/code\u003e parameters have null value"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the instrument successfully remapped, \n\u003ccode\u003efalse\u003c/code\u003e if feature is not implemented by synthesizer"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.midi.Soundbank",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDefaultSoundbank",
      "comment": "Obtains the default soundbank for the synthesizer, if one exists. (Some synthesizers provide a default or built-in soundbank.) If a synthesizer doesn\u0027t have a default soundbank, instruments must be loaded explicitly from an external soundbank.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#isSoundbankSupported(javax.sound.midi.Soundbank)\"\u003e\u003ccode\u003eisSoundbankSupported(javax.sound.midi.Soundbank)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "default soundbank, or \n\u003ccode\u003enull\u003c/code\u003e if one does not exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.midi.Instrument",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAvailableInstruments",
      "comment": "Obtains a list of instruments that come with the synthesizer. These instruments might be built into the synthesizer, or they might be part of a default soundbank provided with the synthesizer, etc. Note that you don\u0027t use this method to find out which instruments are currently loaded onto the synthesizer; for that purpose, you use getLoadedInstruments(). Nor does the method indicate all the instruments that can be loaded onto the synthesizer; it only indicates the subset that come with the synthesizer. To learn whether another instrument can be loaded, you can invoke isSoundbankSupported(), and if the instrument\u0027s Soundbank is supported, you can try loading the instrument.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#getLoadedInstruments()\"\u003e\u003ccode\u003egetLoadedInstruments()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#isSoundbankSupported(javax.sound.midi.Soundbank)\"\u003e\u003ccode\u003eisSoundbankSupported(Soundbank)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadInstrument(javax.sound.midi.Instrument)\"\u003e\u003ccode\u003eloadInstrument(javax.sound.midi.Instrument)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "list of available instruments. If the synthesizer has no instruments coming with it, an array of length 0 is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.midi.Instrument",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getLoadedInstruments",
      "comment": "Obtains a list of the instruments that are currently loaded onto this Synthesizer.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadInstrument(javax.sound.midi.Instrument)\"\u003e\u003ccode\u003eloadInstrument(javax.sound.midi.Instrument)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#getAvailableInstruments()\"\u003e\u003ccode\u003egetAvailableInstruments()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Soundbank.html#getInstruments()\"\u003e\u003ccode\u003eSoundbank.getInstruments()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a list of currently loaded instruments"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.midi.Soundbank",
            "type": "Class"
          },
          "field": {
            "name": "soundbank"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "loadAllInstruments",
      "comment": "Loads onto the Synthesizer all instruments contained in the specified Soundbank.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#isSoundbankSupported(javax.sound.midi.Soundbank)\"\u003e\u003ccode\u003eisSoundbankSupported(javax.sound.midi.Soundbank)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadInstrument(javax.sound.midi.Instrument)\"\u003e\u003ccode\u003eloadInstrument(javax.sound.midi.Instrument)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch%5B%5D)\"\u003e\u003ccode\u003eloadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esoundbank\u003c/code\u003e - the \n\u003ccode\u003eSoundbank\u003c/code\u003e whose are instruments are to be loaded"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the requested soundbank is incompatible with this synthesizer"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the instruments are all successfully loaded (or already had been), \n\u003ccode\u003efalse\u003c/code\u003e if any instrument could not be loaded (for example, if the \n\u003ccode\u003eSynthesizer\u003c/code\u003e had insufficient memory)"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.midi.Soundbank",
            "type": "Class"
          },
          "field": {
            "name": "soundbank"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "unloadAllInstruments",
      "comment": "Unloads all instruments contained in the specified Soundbank.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#isSoundbankSupported(javax.sound.midi.Soundbank)\"\u003e\u003ccode\u003eisSoundbankSupported(javax.sound.midi.Soundbank)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#unloadInstrument(javax.sound.midi.Instrument)\"\u003e\u003ccode\u003eunloadInstrument(javax.sound.midi.Instrument)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#unloadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch%5B%5D)\"\u003e\u003ccode\u003eunloadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esoundbank\u003c/code\u003e - soundbank containing instruments to unload"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - thrown if the soundbank is not supported"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.midi.Soundbank",
            "type": "Class"
          },
          "field": {
            "name": "soundbank"
          }
        },
        {
          "type": {
            "name": "javax.sound.midi.Patch",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "patchList"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "loadInstruments",
      "comment": "Loads the instruments referenced by the specified patches, from the specified Soundbank. Each of the Patch objects indicates a bank and program number; the Instrument that has the matching Patch is loaded into that bank and program location.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#isSoundbankSupported(javax.sound.midi.Soundbank)\"\u003e\u003ccode\u003eisSoundbankSupported(javax.sound.midi.Soundbank)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Instrument.html#getPatch()\"\u003e\u003ccode\u003eInstrument.getPatch()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadAllInstruments(javax.sound.midi.Soundbank)\"\u003e\u003ccode\u003eloadAllInstruments(javax.sound.midi.Soundbank)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadInstrument(javax.sound.midi.Instrument)\"\u003e\u003ccode\u003eloadInstrument(javax.sound.midi.Instrument)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Soundbank.html#getInstrument(javax.sound.midi.Patch)\"\u003e\u003ccode\u003eSoundbank.getInstrument(Patch)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Sequence.html#getPatchList()\"\u003e\u003ccode\u003eSequence.getPatchList()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esoundbank\u003c/code\u003e - the \n\u003ccode\u003eSoundbank\u003c/code\u003e containing the instruments to load",
          "\u003ccode\u003epatchList\u003c/code\u003e - list of patches for which instruments should be loaded"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - thrown if the soundbank is not supported"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the instruments are all successfully loaded (or already had been), \n\u003ccode\u003efalse\u003c/code\u003e if any instrument could not be loaded (for example, if the \n\u003ccode\u003eSynthesizer\u003c/code\u003e had insufficient memory)"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.midi.Soundbank",
            "type": "Class"
          },
          "field": {
            "name": "soundbank"
          }
        },
        {
          "type": {
            "name": "javax.sound.midi.Patch",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "patchList"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "unloadInstruments",
      "comment": "Unloads the instruments referenced by the specified patches, from the MIDI sound bank specified.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#unloadInstrument(javax.sound.midi.Instrument)\"\u003e\u003ccode\u003eunloadInstrument(javax.sound.midi.Instrument)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#unloadAllInstruments(javax.sound.midi.Soundbank)\"\u003e\u003ccode\u003eunloadAllInstruments(javax.sound.midi.Soundbank)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#isSoundbankSupported(javax.sound.midi.Soundbank)\"\u003e\u003ccode\u003eisSoundbankSupported(javax.sound.midi.Soundbank)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Instrument.html#getPatch()\"\u003e\u003ccode\u003eInstrument.getPatch()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Synthesizer.html#loadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch%5B%5D)\"\u003e\u003ccode\u003eloadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esoundbank\u003c/code\u003e - soundbank containing instruments to unload",
          "\u003ccode\u003epatchList\u003c/code\u003e - list of patches for which instruments should be unloaded"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - thrown if the soundbank is not supported"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.sound.midi.Synthesizer",
  "comment": "A \n\u003ccode\u003eSynthesizer\u003c/code\u003e generates sound. This usually happens when one of the \n\u003ccode\u003eSynthesizer\u003c/code\u003e\u0027s \n\u003ca href\u003d\"MidiChannel.html\" title\u003d\"interface in javax.sound.midi\"\u003e\u003ccode\u003eMidiChannel\u003c/code\u003e\u003c/a\u003e objects receives a \n\u003ca href\u003d\"MidiChannel.html#noteOn(int,int)\"\u003e\u003ccode\u003enoteOn\u003c/code\u003e\u003c/a\u003e message, either directly or via the \n\u003ccode\u003eSynthesizer\u003c/code\u003e object. Many \n\u003ccode\u003eSynthesizer\u003c/code\u003es support \n\u003ccode\u003eReceivers\u003c/code\u003e, through which MIDI events can be delivered to the \n\u003ccode\u003eSynthesizer\u003c/code\u003e. In such cases, the \n\u003ccode\u003eSynthesizer\u003c/code\u003e typically responds by sending a corresponding message to the appropriate \n\u003ccode\u003eMidiChannel\u003c/code\u003e, or by processing the event itself if the event isn\u0027t one of the MIDI channel messages. \n\u003cp\u003e The \u003ccode\u003eSynthesizer\u003c/code\u003e interface includes methods for loading and unloading instruments from soundbanks. An instrument is a specification for synthesizing a certain type of sound, whether that sound emulates a traditional instrument or is some kind of sound effect or other imaginary sound. A soundbank is a collection of instruments, organized by bank and program number (via the instrument\u0027s \u003ccode\u003ePatch\u003c/code\u003e object). Different \u003ccode\u003eSynthesizer\u003c/code\u003e classes might implement different sound-synthesis techniques, meaning that some instruments and not others might be compatible with a given synthesizer. Also, synthesizers may have a limited amount of memory for instruments, meaning that not every soundbank and instrument can be used by every synthesizer, even if the synthesis technique is compatible. To see whether the instruments from a certain soundbank can be played by a given synthesizer, invoke the \u003ca href\u003d\"#isSoundbankSupported(javax.sound.midi.Soundbank)\"\u003e\u003ccode\u003eisSoundbankSupported\u003c/code\u003e\u003c/a\u003e method of \u003ccode\u003eSynthesizer\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003e \"Loading\" an instrument means that that instrument becomes available for synthesizing notes. The instrument is loaded into the bank and program location specified by its \u003ccode\u003ePatch\u003c/code\u003e object. Loading does not necessarily mean that subsequently played notes will immediately have the sound of this newly loaded instrument. For the instrument to play notes, one of the synthesizer\u0027s \u003ccode\u003eMidiChannel\u003c/code\u003e objects must receive (or have received) a program-change message that causes that particular instrument\u0027s bank and program number to be selected.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/MidiSystem.html#getSynthesizer()\"\u003e\u003ccode\u003eMidiSystem.getSynthesizer()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Soundbank.html\" title\u003d\"interface in javax.sound.midi\"\u003e\u003ccode\u003eSoundbank\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Instrument.html\" title\u003d\"class in javax.sound.midi\"\u003e\u003ccode\u003eInstrument\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/MidiChannel.html#programChange(int,int)\"\u003e\u003ccode\u003eMidiChannel.programChange(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Receiver.html\" title\u003d\"interface in javax.sound.midi\"\u003e\u003ccode\u003eReceiver\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/Transmitter.html\" title\u003d\"interface in javax.sound.midi\"\u003e\u003ccode\u003eTransmitter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/midi/MidiDevice.html\" title\u003d\"interface in javax.sound.midi\"\u003e\u003ccode\u003eMidiDevice\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}