{
  "packageName": "javax.sound.midi",
  "simpleName": "MidiEvent",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.sound.midi.MidiMessage",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMessage",
      "comment": "Obtains the MIDI message contained in the event.",
      "tagMap": {
        "return": [
          "the MIDI message"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "tick"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setTick",
      "comment": "Sets the time-stamp for the event, in MIDI ticks.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etick\u003c/code\u003e - the new time-stamp, in MIDI ticks"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTick",
      "comment": "Obtains the time-stamp for the event, in MIDI ticks.",
      "tagMap": {
        "return": [
          "the time-stamp for the event, in MIDI ticks"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.sound.midi.MidiMessage",
            "type": "Class"
          },
          "field": {
            "name": "message"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "tick"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new MidiEvent.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - the MIDI message contained in the event",
          "\u003ccode\u003etick\u003c/code\u003e - the time-stamp for the event, in MIDI ticks"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.sound.midi.MidiEvent",
  "comment": "MIDI events contain a MIDI message and a corresponding time-stamp expressed in ticks, and can represent the MIDI event information stored in a MIDI file or a \n\u003ca href\u003d\"Sequence.html\" title\u003d\"class in javax.sound.midi\"\u003e\u003ccode\u003eSequence\u003c/code\u003e\u003c/a\u003e object. The duration of a tick is specified by the timing information contained in the MIDI file or \n\u003ccode\u003eSequence\u003c/code\u003e object. \n\u003cp\u003e In Java Sound, \u003ccode\u003eMidiEvent\u003c/code\u003e objects are typically contained in a \u003ca href\u003d\"Track.html\" title\u003d\"class in javax.sound.midi\"\u003e\u003ccode\u003eTrack\u003c/code\u003e\u003c/a\u003e, and \u003ccode\u003eTracks\u003c/code\u003e are likewise contained in a \u003ccode\u003eSequence\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {}
}