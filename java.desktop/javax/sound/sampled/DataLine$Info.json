{
  "packageName": "javax.sound.sampled",
  "simpleName": "Info",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.sound.sampled.Line$Info",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioFormat",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getFormats",
      "comment": "Obtains a set of audio formats supported by the data line. Note that isFormatSupported(AudioFormat) might return true for certain additional formats that are missing from the set returned by getFormats(). The reverse is not the case: isFormatSupported(AudioFormat) is guaranteed to return true for all formats returned by getFormats(). Some fields in the AudioFormat instances can be set to NOT_SPECIFIED if that field does not apply to the format, or if the format supports a wide range of values for that field. For example, a multi-channel device supporting up to 64 channels, could set the channel field in the AudioFormat instances returned by this method to NOT_SPECIFIED.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/DataLine.Info.html#isFormatSupported(javax.sound.sampled.AudioFormat)\"\u003e\u003ccode\u003eisFormatSupported(AudioFormat)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a set of supported audio formats"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class"
          },
          "name": "format",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isFormatSupported",
      "comment": "Indicates whether this data line supports a particular audio format. The default implementation of this method simply returns true if the specified format matches any of the supported formats.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/DataLine.Info.html#getFormats()\"\u003e\u003ccode\u003egetFormats()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioFormat.html#matches(javax.sound.sampled.AudioFormat)\"\u003e\u003ccode\u003eAudioFormat.matches(javax.sound.sampled.AudioFormat)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eformat\u003c/code\u003e - the audio format for which support is queried"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the format is supported, otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMinBufferSize",
      "comment": "Obtains the minimum buffer size supported by the data line.",
      "annotations": [],
      "tagMap": {
        "return": [
          "minimum buffer size in bytes, or \n\u003ccode\u003eAudioSystem.NOT_SPECIFIED\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMaxBufferSize",
      "comment": "Obtains the maximum buffer size supported by the data line.",
      "annotations": [],
      "tagMap": {
        "return": [
          "maximum buffer size in bytes, or \n\u003ccode\u003eAudioSystem.NOT_SPECIFIED\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.sound.sampled.Line$Info",
            "type": "Class"
          },
          "name": "info",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "matches",
      "comment": "Determines whether the specified info object matches this one. To match, the superclass match requirements must be met. In addition, this object\u0027s minimum buffer size must be at least as large as that of the object specified, its maximum buffer size must be at most as large as that of the object specified, and all of its formats must match formats supported by the object specified.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Line.Info.html#matches(javax.sound.sampled.Line.Info)\"\u003ematches\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Line.Info.html\" title\u003d\"class in javax.sound.sampled\"\u003eLine.Info\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003einfo\u003c/code\u003e - the info object which is being compared to this one"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this object matches the one specified, otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of the info object.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Line.Info.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Line.Info.html\" title\u003d\"class in javax.sound.sampled\"\u003eLine.Info\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of the info object"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "lineClass",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "formats",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "minBufferSize",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "maxBufferSize",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a data line\u0027s info object from the specified information, which includes a set of supported audio formats and a range for the buffer size. This constructor is typically used by mixer implementations when returning information about a supported line.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elineClass\u003c/code\u003e - the class of the data line described by the info object",
          "\u003ccode\u003eformats\u003c/code\u003e - set of formats supported",
          "\u003ccode\u003eminBufferSize\u003c/code\u003e - minimum buffer size supported by the data line, in bytes",
          "\u003ccode\u003emaxBufferSize\u003c/code\u003e - maximum buffer size supported by the data line, in bytes"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "lineClass",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class"
          },
          "name": "format",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "bufferSize",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a data line\u0027s info object from the specified information, which includes a single audio format and a desired buffer size. This constructor is typically used by an application to describe a desired line.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elineClass\u003c/code\u003e - the class of the data line described by the info object",
          "\u003ccode\u003eformat\u003c/code\u003e - desired format",
          "\u003ccode\u003ebufferSize\u003c/code\u003e - desired buffer size, in bytes"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "lineClass",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class"
          },
          "name": "format",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a data line\u0027s info object from the specified information, which includes a single audio format. This constructor is typically used by an application to describe a desired line.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elineClass\u003c/code\u003e - the class of the data line described by the info object",
          "\u003ccode\u003eformat\u003c/code\u003e - desired format"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 9,
  "name": "javax.sound.sampled.DataLine$Info",
  "comment": "Besides the class information inherited from its superclass, \n\u003ccode\u003eDataLine.Info\u003c/code\u003e provides additional information specific to data lines. This information includes: \n\u003cul\u003e \n \u003cli\u003ethe audio formats supported by the data line \u003c/li\u003e\n \u003cli\u003ethe minimum and maximum sizes of its internal buffer \u003c/li\u003e\n\u003c/ul\u003e Because a \n\u003ccode\u003eLine.Info\u003c/code\u003e knows the class of the line its describes, a \n\u003ccode\u003eDataLine.Info\u003c/code\u003e object can describe \n\u003ccode\u003eDataLine\u003c/code\u003e subinterfaces such as \n\u003ca href\u003d\"SourceDataLine.html\" title\u003d\"interface in javax.sound.sampled\"\u003e\u003ccode\u003eSourceDataLine\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"TargetDataLine.html\" title\u003d\"interface in javax.sound.sampled\"\u003e\u003ccode\u003eTargetDataLine\u003c/code\u003e\u003c/a\u003e, and \n\u003ca href\u003d\"Clip.html\" title\u003d\"interface in javax.sound.sampled\"\u003e\u003ccode\u003eClip\u003c/code\u003e\u003c/a\u003e. You can query a mixer for lines of any of these types, passing an appropriate instance of \n\u003ccode\u003eDataLine.Info\u003c/code\u003e as the argument to a method such as \n\u003ca href\u003d\"Mixer.html#getLine(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003eMixer.getLine(Line.Info)\u003c/code\u003e\u003c/a\u003e.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Line.Info.html\" title\u003d\"class in javax.sound.sampled\"\u003e\u003ccode\u003eLine.Info\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}