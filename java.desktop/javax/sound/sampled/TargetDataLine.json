{
  "packageName": "javax.sound.sampled",
  "simpleName": "TargetDataLine",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.sound.sampled.DataLine",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.LineUnavailableException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class"
          },
          "field": {
            "name": "format"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "bufferSize"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "open",
      "comment": "Opens the line with the specified format and requested buffer size, causing the line to acquire any required system resources and become operational. The buffer size is specified in bytes, but must represent an integral number of sample frames. Invoking this method with a requested buffer size that does not meet this requirement may result in an IllegalArgumentException. The actual buffer size for the open line may differ from the requested buffer size. The value actually set may be queried by subsequently calling DataLine.getBufferSize() If this operation succeeds, the line is marked as open, and an OPEN event is dispatched to the line\u0027s listeners. Invoking this method on a line that is already open is illegal and may result in an IllegalStateException. Some lines, once closed, cannot be reopened. Attempts to reopen such a line will always result in a LineUnavailableException.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/TargetDataLine.html#open(javax.sound.sampled.AudioFormat)\"\u003e\u003ccode\u003eopen(AudioFormat)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Line.html#open()\"\u003e\u003ccode\u003eLine.open()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Line.html#close()\"\u003e\u003ccode\u003eLine.close()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Line.html#isOpen()\"\u003e\u003ccode\u003eLine.isOpen()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineEvent.html\" title\u003d\"class in javax.sound.sampled\"\u003e\u003ccode\u003eLineEvent\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eformat\u003c/code\u003e - the desired audio format",
          "\u003ccode\u003ebufferSize\u003c/code\u003e - the desired buffer size, in bytes"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineUnavailableException.html\" title\u003d\"class in javax.sound.sampled\"\u003eLineUnavailableException\u003c/a\u003e\u003c/code\u003e - if the line cannot be opened due to resource restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the buffer size does not represent an integral number of sample frames, or if \n\u003ccode\u003eformat\u003c/code\u003e is not fully specified or invalid",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the line is already open",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if the line cannot be opened due to security restrictions"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.LineUnavailableException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class"
          },
          "field": {
            "name": "format"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "open",
      "comment": "Opens the line with the specified format, causing the line to acquire any required system resources and become operational. The implementation chooses a buffer size, which is measured in bytes but which encompasses an integral number of sample frames. The buffer size that the system has chosen may be queried by subsequently calling DataLine.getBufferSize() If this operation succeeds, the line is marked as open, and an OPEN event is dispatched to the line\u0027s listeners. Invoking this method on a line that is already open is illegal and may result in an IllegalStateException. Some lines, once closed, cannot be reopened. Attempts to reopen such a line will always result in a LineUnavailableException.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/TargetDataLine.html#open(javax.sound.sampled.AudioFormat,int)\"\u003e\u003ccode\u003eopen(AudioFormat, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Line.html#open()\"\u003e\u003ccode\u003eLine.open()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Line.html#close()\"\u003e\u003ccode\u003eLine.close()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Line.html#isOpen()\"\u003e\u003ccode\u003eLine.isOpen()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineEvent.html\" title\u003d\"class in javax.sound.sampled\"\u003e\u003ccode\u003eLineEvent\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eformat\u003c/code\u003e - the desired audio format"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineUnavailableException.html\" title\u003d\"class in javax.sound.sampled\"\u003eLineUnavailableException\u003c/a\u003e\u003c/code\u003e - if the line cannot be opened due to resource restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eformat\u003c/code\u003e is not fully specified or invalid",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the line is already open",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if the line cannot be opened due to security restrictions"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "off"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "len"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "read",
      "comment": "Reads audio data from the data line\u0027s input buffer. The requested number of bytes is read into the specified array, starting at the specified offset into the array in bytes. This method blocks until the requested amount of data has been read. However, if the data line is closed, stopped, drained, or flushed before the requested amount has been read, the method no longer blocks, but returns the number of bytes read thus far. The number of bytes that can be read without blocking can be ascertained using the available method of the DataLine interface. (While it is guaranteed that this number of bytes can be read without blocking, there is no guarantee that attempts to read additional data will block.) The number of bytes to be read must represent an integral number of sample frames, such that: [ bytes read ] % [frame size in bytes ] \u003d\u003d 0 The return value will always meet this requirement. A request to read a number of bytes representing a non-integral number of sample frames cannot be fulfilled and may result in an IllegalArgumentException.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/SourceDataLine.html#write(byte%5B%5D,int,int)\"\u003e\u003ccode\u003eSourceDataLine.write(byte[], int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/DataLine.html#available()\"\u003e\u003ccode\u003eDataLine.available()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - a byte array that will contain the requested input data when this method returns",
          "\u003ccode\u003eoff\u003c/code\u003e - the offset from the beginning of the array, in bytes",
          "\u003ccode\u003elen\u003c/code\u003e - the requested number of bytes to read"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the requested number of bytes does not represent an integral number of sample frames, or if \n\u003ccode\u003elen\u003c/code\u003e is negative",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eoff\u003c/code\u003e is negative, or \n\u003ccode\u003eoff+len\u003c/code\u003e is greater than the length of the array \n\u003ccode\u003eb\u003c/code\u003e"
        ],
        "return": [
          "the number of bytes actually read"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.sound.sampled.TargetDataLine",
  "comment": "A target data line is a type of \n\u003ca href\u003d\"DataLine.html\" title\u003d\"interface in javax.sound.sampled\"\u003e\u003ccode\u003eDataLine\u003c/code\u003e\u003c/a\u003e from which audio data can be read. The most common example is a data line that gets its data from an audio capture device. (The device is implemented as a mixer that writes to the target data line.) \n\u003cp\u003e Note that the naming convention for this interface reflects the relationship between the line and its mixer. From the perspective of an application, a target data line may act as a source for audio data. \u003c/p\u003e\n\u003cp\u003e The target data line can be obtained from a mixer by invoking the \u003ca href\u003d\"Mixer.html#getLine(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003egetLine\u003c/code\u003e\u003c/a\u003e method of \u003ccode\u003eMixer\u003c/code\u003e with an appropriate \u003ca href\u003d\"DataLine.Info.html\" title\u003d\"class in javax.sound.sampled\"\u003e\u003ccode\u003eDataLine.Info\u003c/code\u003e\u003c/a\u003e object. \u003c/p\u003e\n\u003cp\u003e The \u003ccode\u003eTargetDataLine\u003c/code\u003e interface provides a method for reading the captured data from the target data line\u0027s buffer. Applications that record audio should read data from the target data line quickly enough to keep the buffer from overflowing, which could cause discontinuities in the captured data that are perceived as clicks. Applications can use the \u003ca href\u003d\"DataLine.html#available()\"\u003e\u003ccode\u003eavailable\u003c/code\u003e\u003c/a\u003e method defined in the \u003ccode\u003eDataLine\u003c/code\u003e interface to determine the amount of data currently queued in the data line\u0027s buffer. If the buffer does overflow, the oldest queued data is discarded and replaced by new data.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Mixer.html\" title\u003d\"interface in javax.sound.sampled\"\u003e\u003ccode\u003eMixer\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/DataLine.html\" title\u003d\"interface in javax.sound.sampled\"\u003e\u003ccode\u003eDataLine\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/SourceDataLine.html\" title\u003d\"interface in javax.sound.sampled\"\u003e\u003ccode\u003eSourceDataLine\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}