{
  "packageName": "javax.sound.sampled.spi",
  "simpleName": "AudioFileWriter",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioFileFormat$Type",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getAudioFileTypes",
      "comment": "Obtains the file types for which file writing support is provided by this audio file writer.",
      "annotations": [],
      "tagMap": {
        "return": [
          "array of file types. If no file types are supported, an array of length 0 is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.sound.sampled.AudioFileFormat$Type",
            "type": "Class"
          },
          "name": "fileType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isFileTypeSupported",
      "comment": "Indicates whether file writing support for the specified file type is provided by this audio file writer.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efileType\u003c/code\u003e - the file type for which write capabilities are queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efileType\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the file type is supported, otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioFileFormat$Type",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.sound.sampled.AudioInputStream",
            "type": "Class"
          },
          "name": "stream",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getAudioFileTypes",
      "comment": "Obtains the file types that this audio file writer can write from the audio input stream specified.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the audio input stream for which audio file type support is queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003estream\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "array of file types. If no file types are supported, an array of length 0 is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.sound.sampled.AudioFileFormat$Type",
            "type": "Class"
          },
          "name": "fileType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.sound.sampled.AudioInputStream",
            "type": "Class"
          },
          "name": "stream",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isFileTypeSupported",
      "comment": "Indicates whether an audio file of the type specified can be written from the audio input stream indicated.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efileType\u003c/code\u003e - file type for which write capabilities are queried",
          "\u003ccode\u003estream\u003c/code\u003e - for which file writing support is queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efileType\u003c/code\u003e or \n\u003ccode\u003estream\u003c/code\u003e are \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the file type is supported for this audio input stream, otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.sound.sampled.AudioInputStream",
            "type": "Class"
          },
          "name": "stream",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.sound.sampled.AudioFileFormat$Type",
            "type": "Class"
          },
          "name": "fileType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "name": "out",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "write",
      "comment": "Writes a stream of bytes representing an audio file of the file type indicated to the output stream provided. Some file types require that the length be written into the file header, and cannot be written from start to finish unless the length is known in advance. An attempt to write such a file type will fail with an IOException if the length in the audio file format is AudioSystem.NOT_SPECIFIED.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/spi/AudioFileWriter.html#isFileTypeSupported(javax.sound.sampled.AudioFileFormat.Type,javax.sound.sampled.AudioInputStream)\"\u003e\u003ccode\u003eisFileTypeSupported(Type, AudioInputStream)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/spi/AudioFileWriter.html#getAudioFileTypes()\"\u003e\u003ccode\u003egetAudioFileTypes()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the audio input stream containing audio data to be written to the output stream",
          "\u003ccode\u003efileType\u003c/code\u003e - file type to be written to the output stream",
          "\u003ccode\u003eout\u003c/code\u003e - stream to which the file data should be written"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the file type is not supported by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003estream\u003c/code\u003e or \n\u003ccode\u003efileType\u003c/code\u003e or \n\u003ccode\u003eout\u003c/code\u003e are \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the number of bytes written to the output stream"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.sound.sampled.AudioInputStream",
            "type": "Class"
          },
          "name": "stream",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.sound.sampled.AudioFileFormat$Type",
            "type": "Class"
          },
          "name": "fileType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "name": "out",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "write",
      "comment": "Writes a stream of bytes representing an audio file of the file format indicated to the external file provided.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/spi/AudioFileWriter.html#isFileTypeSupported(javax.sound.sampled.AudioFileFormat.Type,javax.sound.sampled.AudioInputStream)\"\u003e\u003ccode\u003eisFileTypeSupported(Type, AudioInputStream)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/spi/AudioFileWriter.html#getAudioFileTypes()\"\u003e\u003ccode\u003egetAudioFileTypes()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the audio input stream containing audio data to be written to the file",
          "\u003ccode\u003efileType\u003c/code\u003e - file type to be written to the file",
          "\u003ccode\u003eout\u003c/code\u003e - external file to which the file data should be written"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the file format is not supported by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003estream\u003c/code\u003e or \n\u003ccode\u003efileType\u003c/code\u003e or \n\u003ccode\u003eout\u003c/code\u003e are \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the number of bytes written to the file"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for subclasses to call.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.sound.sampled.spi.AudioFileWriter",
  "annotations": [],
  "tagMap": {
    "since": [
      "1.3"
    ]
  }
}