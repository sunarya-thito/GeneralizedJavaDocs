{
  "packageName": "javax.sound.sampled.spi",
  "simpleName": "AudioFileReader",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioFileFormat",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.UnsupportedAudioFileException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "name": "stream",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getAudioFileFormat",
      "comment": "Obtains the audio file format of the input stream provided. The stream must point to valid audio file data. In general, audio file readers may need to read some data from the stream before determining whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and reset the stream\u0027s read pointer to its original position. If the input stream does not support this, this method may fail with an IOException.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/InputStream.html#markSupported()\"\u003e\u003ccode\u003eInputStream.markSupported()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/InputStream.html#mark(int)\"\u003e\u003ccode\u003eInputStream.mark(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the input stream from which file format information should be extracted"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/UnsupportedAudioFileException.html\" title\u003d\"class in javax.sound.sampled\"\u003eUnsupportedAudioFileException\u003c/a\u003e\u003c/code\u003e - if the stream does not point to valid audio file data recognized by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003estream\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eAudioFileFormat\u003c/code\u003e object describing the audio file format"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioFileFormat",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.UnsupportedAudioFileException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.URL",
            "type": "Class"
          },
          "name": "url",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getAudioFileFormat",
      "comment": "Obtains the audio file format of the URL provided. The URL must point to valid audio file data.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - the \n\u003ccode\u003eURL\u003c/code\u003e from which file format information should be extracted"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/UnsupportedAudioFileException.html\" title\u003d\"class in javax.sound.sampled\"\u003eUnsupportedAudioFileException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eURL\u003c/code\u003e does not point to valid audio file data recognized by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eurl\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eAudioFileFormat\u003c/code\u003e object describing the audio file format"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioFileFormat",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.UnsupportedAudioFileException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "name": "file",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getAudioFileFormat",
      "comment": "Obtains the audio file format of the File provided. The File must point to valid audio file data.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - the \n\u003ccode\u003eFile\u003c/code\u003e from which file format information should be extracted"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/UnsupportedAudioFileException.html\" title\u003d\"class in javax.sound.sampled\"\u003eUnsupportedAudioFileException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eFile\u003c/code\u003e does not point to valid audio file data recognized by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efile\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eAudioFileFormat\u003c/code\u003e object describing the audio file format"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioInputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.UnsupportedAudioFileException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "name": "stream",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getAudioInputStream",
      "comment": "Obtains an audio input stream from the input stream provided. The stream must point to valid audio file data. In general, audio file readers may need to read some data from the stream before determining whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and reset the stream\u0027s read pointer to its original position. If the input stream does not support this, this method may fail with an IOException.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/InputStream.html#markSupported()\"\u003e\u003ccode\u003eInputStream.markSupported()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/InputStream.html#mark(int)\"\u003e\u003ccode\u003eInputStream.mark(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the input stream from which the \n\u003ccode\u003eAudioInputStream\u003c/code\u003e should be constructed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/UnsupportedAudioFileException.html\" title\u003d\"class in javax.sound.sampled\"\u003eUnsupportedAudioFileException\u003c/a\u003e\u003c/code\u003e - if the stream does not point to valid audio file data recognized by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003estream\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eAudioInputStream\u003c/code\u003e object based on the audio file data contained in the input stream"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioInputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.UnsupportedAudioFileException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.URL",
            "type": "Class"
          },
          "name": "url",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getAudioInputStream",
      "comment": "Obtains an audio input stream from the URL provided. The URL must point to valid audio file data.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - the \n\u003ccode\u003eURL\u003c/code\u003e for which the \n\u003ccode\u003eAudioInputStream\u003c/code\u003e should be constructed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/UnsupportedAudioFileException.html\" title\u003d\"class in javax.sound.sampled\"\u003eUnsupportedAudioFileException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eURL\u003c/code\u003e does not point to valid audio file data recognized by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eurl\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eAudioInputStream\u003c/code\u003e object based on the audio file data pointed to by the \n\u003ccode\u003eURL\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioInputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.UnsupportedAudioFileException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "name": "file",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getAudioInputStream",
      "comment": "Obtains an audio input stream from the File provided. The File must point to valid audio file data.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - the \n\u003ccode\u003eFile\u003c/code\u003e for which the \n\u003ccode\u003eAudioInputStream\u003c/code\u003e should be constructed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/UnsupportedAudioFileException.html\" title\u003d\"class in javax.sound.sampled\"\u003eUnsupportedAudioFileException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eFile\u003c/code\u003e does not point to valid audio file data recognized by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efile\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eAudioInputStream\u003c/code\u003e object based on the audio file data pointed to by the File"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for subclasses to call.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.sound.sampled.spi.AudioFileReader",
  "comment": "Provider for audio file reading services. Classes providing concrete implementations can parse the format information from one or more types of audio file, and can produce audio input streams from files of these types.",
  "tagMap": {
    "since": [
      "1.3"
    ]
  }
}