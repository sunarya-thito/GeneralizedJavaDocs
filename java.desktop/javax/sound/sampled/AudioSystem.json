{
  "packageName": "javax.sound.sampled",
  "simpleName": "AudioSystem",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "NOT_SPECIFIED",
      "comment": "An integer that stands for an unknown numeric value. This value is appropriate only for signed quantities that do not normally take negative values. Examples include file sizes, frame sizes, buffer sizes, and sample rates. A number of Java Sound constructors accept a value of NOT_SPECIFIED for such parameters. Other methods may also accept or return this value, as documented.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.sound.sampled.AudioSystem.NOT_SPECIFIED\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.Mixer$Info",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getMixerInfo",
      "comment": "Obtains an array of mixer info objects that represents the set of audio mixers that are currently installed on the system.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getMixer(javax.sound.sampled.Mixer.Info)\"\u003e\u003ccode\u003egetMixer(javax.sound.sampled.Mixer.Info)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an array of info objects for the currently installed mixers. If no mixers are available on the system, an array of length 0 is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.Mixer",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.Mixer$Info",
            "type": "Class"
          },
          "field": {
            "name": "info"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getMixer",
      "comment": "Obtains the requested audio mixer.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getMixerInfo()\"\u003e\u003ccode\u003egetMixerInfo()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003einfo\u003c/code\u003e - a \n\u003ccode\u003eMixer.Info\u003c/code\u003e object representing the desired mixer, or \n\u003ccode\u003enull\u003c/code\u003e for the system default mixer"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if the requested mixer is unavailable because of security restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the info object does not represent a mixer installed on the system"
        ],
        "return": [
          "the requested mixer"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.Line$Info",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.Line$Info",
            "type": "Class"
          },
          "field": {
            "name": "info"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getSourceLineInfo",
      "comment": "Obtains information about all source lines of a particular type that are supported by the installed mixers.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Mixer.html#getSourceLineInfo(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003eMixer.getSourceLineInfo(Line.Info)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003einfo\u003c/code\u003e - a \n\u003ccode\u003eLine.Info\u003c/code\u003e object that specifies the kind of lines about which information is requested"
        ],
        "return": [
          "an array of \n\u003ccode\u003eLine.Info\u003c/code\u003e objects describing source lines matching the type requested. If no matching source lines are supported, an array of length 0 is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.Line$Info",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.Line$Info",
            "type": "Class"
          },
          "field": {
            "name": "info"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getTargetLineInfo",
      "comment": "Obtains information about all target lines of a particular type that are supported by the installed mixers.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Mixer.html#getTargetLineInfo(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003eMixer.getTargetLineInfo(Line.Info)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003einfo\u003c/code\u003e - a \n\u003ccode\u003eLine.Info\u003c/code\u003e object that specifies the kind of lines about which information is requested"
        ],
        "return": [
          "an array of \n\u003ccode\u003eLine.Info\u003c/code\u003e objects describing target lines matching the type requested. If no matching target lines are supported, an array of length 0 is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.Line$Info",
            "type": "Class"
          },
          "field": {
            "name": "info"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isLineSupported",
      "comment": "Indicates whether the system supports any lines that match the specified Line.Info object. A line is supported if any installed mixer supports it.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Mixer.html#isLineSupported(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003eMixer.isLineSupported(Line.Info)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003einfo\u003c/code\u003e - a \n\u003ccode\u003eLine.Info\u003c/code\u003e object describing the line for which support is queried"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if at least one matching line is supported, otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.Line",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.LineUnavailableException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.Line$Info",
            "type": "Class"
          },
          "field": {
            "name": "info"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getLine",
      "comment": "Obtains a line that matches the description in the specified Line.Info object. If a DataLine is requested, and info is an instance of DataLine.Info specifying at least one fully qualified audio format, the last one will be used as the default format of the returned DataLine. If system properties javax.sound.sampled.Clip, javax.sound.sampled.Port, javax.sound.sampled.SourceDataLine and javax.sound.sampled.TargetDataLine are defined or they are defined in the file \"sound.properties\", they are used to retrieve default lines. For details, refer to the class description. If the respective property is not set, or the mixer requested in the property is not installed or does not provide the requested line, all installed mixers are queried for the requested line type. A Line will be returned from the first mixer providing the requested line type.",
      "tagMap": {
        "param": [
          "\u003ccode\u003einfo\u003c/code\u003e - a \n\u003ccode\u003eLine.Info\u003c/code\u003e object describing the desired kind of line"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineUnavailableException.html\" title\u003d\"class in javax.sound.sampled\"\u003eLineUnavailableException\u003c/a\u003e\u003c/code\u003e - if a matching line is not available due to resource restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a matching line is not available due to security restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the system does not support at least one line matching the specified \n\u003ccode\u003eLine.Info\u003c/code\u003e object through any installed mixer"
        ],
        "return": [
          "a line of the requested kind"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.Clip",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.LineUnavailableException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getClip",
      "comment": "Obtains a clip that can be used for playing back an audio file or an audio stream. The returned clip will be provided by the default system mixer, or, if not possible, by any other mixer installed in the system that supports a Clip object. The returned clip must be opened with the open(AudioFormat) or open(AudioInputStream) method. This is a high-level method that uses getMixer and getLine internally. If the system property javax.sound.sampled.Clip is defined or it is defined in the file \"sound.properties\", it is used to retrieve the default clip. For details, refer to the class description.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getClip(javax.sound.sampled.Mixer.Info)\"\u003e\u003ccode\u003egetClip(Mixer.Info)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineUnavailableException.html\" title\u003d\"class in javax.sound.sampled\"\u003eLineUnavailableException\u003c/a\u003e\u003c/code\u003e - if a clip object is not available due to resource restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a clip object is not available due to security restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the system does not support at least one clip instance through any installed mixer"
        ],
        "return": [
          "the desired clip object"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.Clip",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.LineUnavailableException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.Mixer$Info",
            "type": "Class"
          },
          "field": {
            "name": "mixerInfo"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getClip",
      "comment": "Obtains a clip from the specified mixer that can be used for playing back an audio file or an audio stream. The returned clip must be opened with the open(AudioFormat) or open(AudioInputStream) method. This is a high-level method that uses getMixer and getLine internally.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getClip()\"\u003e\u003ccode\u003egetClip()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003emixerInfo\u003c/code\u003e - a \n\u003ccode\u003eMixer.Info\u003c/code\u003e object representing the desired mixer, or \n\u003ccode\u003enull\u003c/code\u003e for the system default mixer"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineUnavailableException.html\" title\u003d\"class in javax.sound.sampled\"\u003eLineUnavailableException\u003c/a\u003e\u003c/code\u003e - if a clip is not available from this mixer due to resource restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a clip is not available from this mixer due to security restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the system does not support at least one clip through the specified mixer"
        ],
        "return": [
          "a clip object from the specified mixer"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.SourceDataLine",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.LineUnavailableException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class"
          },
          "field": {
            "name": "format"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getSourceDataLine",
      "comment": "Obtains a source data line that can be used for playing back audio data in the format specified by the AudioFormat object. The returned line will be provided by the default system mixer, or, if not possible, by any other mixer installed in the system that supports a matching SourceDataLine object. The returned line should be opened with the open(AudioFormat) or open(AudioFormat, int) method. This is a high-level method that uses getMixer and getLine internally. The returned SourceDataLine\u0027s default audio format will be initialized with format. If the system property javax.sound.sampled.SourceDataLine is defined or it is defined in the file \"sound.properties\", it is used to retrieve the default source data line. For details, refer to the class description.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getSourceDataLine(javax.sound.sampled.AudioFormat,javax.sound.sampled.Mixer.Info)\"\u003e\u003ccode\u003egetSourceDataLine(AudioFormat, Mixer.Info)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eformat\u003c/code\u003e - an \n\u003ccode\u003eAudioFormat\u003c/code\u003e object specifying the supported audio format of the returned line, or \n\u003ccode\u003enull\u003c/code\u003e for any audio format"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineUnavailableException.html\" title\u003d\"class in javax.sound.sampled\"\u003eLineUnavailableException\u003c/a\u003e\u003c/code\u003e - if a matching source data line is not available due to resource restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a matching source data line is not available due to security restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the system does not support at least one source data line supporting the specified audio format through any installed mixer"
        ],
        "return": [
          "the desired \n\u003ccode\u003eSourceDataLine\u003c/code\u003e object"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.SourceDataLine",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.LineUnavailableException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class"
          },
          "field": {
            "name": "format"
          }
        },
        {
          "type": {
            "name": "javax.sound.sampled.Mixer$Info",
            "type": "Class"
          },
          "field": {
            "name": "mixerinfo"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getSourceDataLine",
      "comment": "Obtains a source data line that can be used for playing back audio data in the format specified by the AudioFormat object, provided by the mixer specified by the Mixer.Info object. The returned line should be opened with the open(AudioFormat) or open(AudioFormat, int) method. This is a high-level method that uses getMixer and getLine internally. The returned SourceDataLine\u0027s default audio format will be initialized with format.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getSourceDataLine(javax.sound.sampled.AudioFormat)\"\u003e\u003ccode\u003egetSourceDataLine(AudioFormat)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eformat\u003c/code\u003e - an \n\u003ccode\u003eAudioFormat\u003c/code\u003e object specifying the supported audio format of the returned line, or \n\u003ccode\u003enull\u003c/code\u003e for any audio format",
          "\u003ccode\u003emixerinfo\u003c/code\u003e - a \n\u003ccode\u003eMixer.Info\u003c/code\u003e object representing the desired mixer, or \n\u003ccode\u003enull\u003c/code\u003e for the system default mixer"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineUnavailableException.html\" title\u003d\"class in javax.sound.sampled\"\u003eLineUnavailableException\u003c/a\u003e\u003c/code\u003e - if a matching source data line is not available from the specified mixer due to resource restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a matching source data line is not available from the specified mixer due to security restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified mixer does not support at least one source data line supporting the specified audio format"
        ],
        "return": [
          "the desired \n\u003ccode\u003eSourceDataLine\u003c/code\u003e object"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.TargetDataLine",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.LineUnavailableException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class"
          },
          "field": {
            "name": "format"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getTargetDataLine",
      "comment": "Obtains a target data line that can be used for recording audio data in the format specified by the AudioFormat object. The returned line will be provided by the default system mixer, or, if not possible, by any other mixer installed in the system that supports a matching TargetDataLine object. The returned line should be opened with the open(AudioFormat) or open(AudioFormat, int) method. This is a high-level method that uses getMixer and getLine internally. The returned TargetDataLine\u0027s default audio format will be initialized with format. If the system property javax.sound.sampled.TargetDataLine is defined or it is defined in the file \"sound.properties\", it is used to retrieve the default target data line. For details, refer to the class description.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getTargetDataLine(javax.sound.sampled.AudioFormat,javax.sound.sampled.Mixer.Info)\"\u003e\u003ccode\u003egetTargetDataLine(AudioFormat, Mixer.Info)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioPermission.html\" title\u003d\"class in javax.sound.sampled\"\u003e\u003ccode\u003eAudioPermission\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eformat\u003c/code\u003e - an \n\u003ccode\u003eAudioFormat\u003c/code\u003e object specifying the supported audio format of the returned line, or \n\u003ccode\u003enull\u003c/code\u003e for any audio format"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineUnavailableException.html\" title\u003d\"class in javax.sound.sampled\"\u003eLineUnavailableException\u003c/a\u003e\u003c/code\u003e - if a matching target data line is not available due to resource restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a matching target data line is not available due to security restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the system does not support at least one target data line supporting the specified audio format through any installed mixer"
        ],
        "return": [
          "the desired \n\u003ccode\u003eTargetDataLine\u003c/code\u003e object"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.TargetDataLine",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.LineUnavailableException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class"
          },
          "field": {
            "name": "format"
          }
        },
        {
          "type": {
            "name": "javax.sound.sampled.Mixer$Info",
            "type": "Class"
          },
          "field": {
            "name": "mixerinfo"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getTargetDataLine",
      "comment": "Obtains a target data line that can be used for recording audio data in the format specified by the AudioFormat object, provided by the mixer specified by the Mixer.Info object. The returned line should be opened with the open(AudioFormat) or open(AudioFormat, int) method. This is a high-level method that uses getMixer and getLine internally. The returned TargetDataLine\u0027s default audio format will be initialized with format.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getTargetDataLine(javax.sound.sampled.AudioFormat)\"\u003e\u003ccode\u003egetTargetDataLine(AudioFormat)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioPermission.html\" title\u003d\"class in javax.sound.sampled\"\u003e\u003ccode\u003eAudioPermission\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eformat\u003c/code\u003e - an \n\u003ccode\u003eAudioFormat\u003c/code\u003e object specifying the supported audio format of the returned line, or \n\u003ccode\u003enull\u003c/code\u003e for any audio format",
          "\u003ccode\u003emixerinfo\u003c/code\u003e - a \n\u003ccode\u003eMixer.Info\u003c/code\u003e object representing the desired mixer, or \n\u003ccode\u003enull\u003c/code\u003e for the system default mixer"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineUnavailableException.html\" title\u003d\"class in javax.sound.sampled\"\u003eLineUnavailableException\u003c/a\u003e\u003c/code\u003e - if a matching target data line is not available from the specified mixer due to resource restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a matching target data line is not available from the specified mixer due to security restrictions",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified mixer does not support at least one target data line supporting the specified audio format"
        ],
        "return": [
          "the desired \n\u003ccode\u003eTargetDataLine\u003c/code\u003e object"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioFormat$Encoding",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat$Encoding",
            "type": "Class"
          },
          "field": {
            "name": "sourceEncoding"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getTargetEncodings",
      "comment": "Obtains the encodings that the system can obtain from an audio input stream with the specified encoding using the set of installed format converters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esourceEncoding\u003c/code\u003e - the encoding for which conversion support is queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esourceEncoding\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "array of encodings. If \n\u003ccode\u003esourceEncoding\u003c/code\u003e is not supported, an array of length 0 is returned. Otherwise, the array will have a length of at least 1, representing \n\u003ccode\u003esourceEncoding\u003c/code\u003e (no conversion)."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioFormat$Encoding",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class"
          },
          "field": {
            "name": "sourceFormat"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getTargetEncodings",
      "comment": "Obtains the encodings that the system can obtain from an audio input stream with the specified format using the set of installed format converters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esourceFormat\u003c/code\u003e - the audio format for which conversion is queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esourceFormat\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "array of encodings. If \n\u003ccode\u003esourceFormat\u003c/code\u003eis not supported, an array of length 0 is returned. Otherwise, the array will have a length of at least 1, representing the encoding of \n\u003ccode\u003esourceFormat\u003c/code\u003e (no conversion)."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat$Encoding",
            "type": "Class"
          },
          "field": {
            "name": "targetEncoding"
          }
        },
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class"
          },
          "field": {
            "name": "sourceFormat"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isConversionSupported",
      "comment": "Indicates whether an audio input stream of the specified encoding can be obtained from an audio input stream that has the specified format.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etargetEncoding\u003c/code\u003e - the desired encoding after conversion",
          "\u003ccode\u003esourceFormat\u003c/code\u003e - the audio format before conversion"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etargetEncoding\u003c/code\u003e or \n\u003ccode\u003esourceFormat\u003c/code\u003e are \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the conversion is supported, otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioInputStream",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat$Encoding",
            "type": "Class"
          },
          "field": {
            "name": "targetEncoding"
          }
        },
        {
          "type": {
            "name": "javax.sound.sampled.AudioInputStream",
            "type": "Class"
          },
          "field": {
            "name": "sourceStream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAudioInputStream",
      "comment": "Obtains an audio input stream of the indicated encoding, by converting the provided audio input stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getTargetEncodings(javax.sound.sampled.AudioFormat.Encoding)\"\u003e\u003ccode\u003egetTargetEncodings(AudioFormat.Encoding)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getTargetEncodings(javax.sound.sampled.AudioFormat)\"\u003e\u003ccode\u003egetTargetEncodings(AudioFormat)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#isConversionSupported(javax.sound.sampled.AudioFormat.Encoding,javax.sound.sampled.AudioFormat)\"\u003e\u003ccode\u003eisConversionSupported(AudioFormat.Encoding, AudioFormat)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getAudioInputStream(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioInputStream)\"\u003e\u003ccode\u003egetAudioInputStream(AudioFormat, AudioInputStream)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etargetEncoding\u003c/code\u003e - the desired encoding after conversion",
          "\u003ccode\u003esourceStream\u003c/code\u003e - the stream to be converted"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the conversion is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etargetEncoding\u003c/code\u003e or \n\u003ccode\u003esourceStream\u003c/code\u003e are \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an audio input stream of the indicated encoding"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioFormat",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat$Encoding",
            "type": "Class"
          },
          "field": {
            "name": "targetEncoding"
          }
        },
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class"
          },
          "field": {
            "name": "sourceFormat"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getTargetFormats",
      "comment": "Obtains the formats that have a particular encoding and that the system can obtain from a stream of the specified format using the set of installed format converters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etargetEncoding\u003c/code\u003e - the desired encoding after conversion",
          "\u003ccode\u003esourceFormat\u003c/code\u003e - the audio format before conversion"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etargetEncoding\u003c/code\u003e or \n\u003ccode\u003esourceFormat\u003c/code\u003e are \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "array of formats. If no formats of the specified encoding are supported, an array of length 0 is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class"
          },
          "field": {
            "name": "targetFormat"
          }
        },
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class"
          },
          "field": {
            "name": "sourceFormat"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isConversionSupported",
      "comment": "Indicates whether an audio input stream of a specified format can be obtained from an audio input stream of another specified format.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etargetFormat\u003c/code\u003e - the desired audio format after conversion",
          "\u003ccode\u003esourceFormat\u003c/code\u003e - the audio format before conversion"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etargetFormat\u003c/code\u003e or \n\u003ccode\u003esourceFormat\u003c/code\u003e are \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the conversion is supported, otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioInputStream",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioFormat",
            "type": "Class"
          },
          "field": {
            "name": "targetFormat"
          }
        },
        {
          "type": {
            "name": "javax.sound.sampled.AudioInputStream",
            "type": "Class"
          },
          "field": {
            "name": "sourceStream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAudioInputStream",
      "comment": "Obtains an audio input stream of the indicated format, by converting the provided audio input stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getTargetEncodings(javax.sound.sampled.AudioFormat)\"\u003e\u003ccode\u003egetTargetEncodings(AudioFormat)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getTargetFormats(javax.sound.sampled.AudioFormat.Encoding,javax.sound.sampled.AudioFormat)\"\u003e\u003ccode\u003egetTargetFormats(AudioFormat.Encoding, AudioFormat)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)\"\u003e\u003ccode\u003eisConversionSupported(AudioFormat, AudioFormat)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getAudioInputStream(javax.sound.sampled.AudioFormat.Encoding,javax.sound.sampled.AudioInputStream)\"\u003e\u003ccode\u003egetAudioInputStream(AudioFormat.Encoding, AudioInputStream)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etargetFormat\u003c/code\u003e - the desired audio format after conversion",
          "\u003ccode\u003esourceStream\u003c/code\u003e - the stream to be converted"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the conversion is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etargetFormat\u003c/code\u003e or \n\u003ccode\u003esourceStream\u003c/code\u003e are \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an audio input stream of the indicated format"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioFileFormat",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.UnsupportedAudioFileException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAudioFileFormat",
      "comment": "Obtains the audio file format of the provided input stream. The stream must point to valid audio file data. The implementation of this method may require multiple parsers to examine the stream to determine whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and reset the stream\u0027s read pointer to its original position. If the input stream does not support these operations, this method may fail with an IOException.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/InputStream.html#markSupported()\"\u003e\u003ccode\u003eInputStream.markSupported()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/InputStream.html#mark(int)\"\u003e\u003ccode\u003eInputStream.mark(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the input stream from which file format information should be extracted"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/UnsupportedAudioFileException.html\" title\u003d\"class in javax.sound.sampled\"\u003eUnsupportedAudioFileException\u003c/a\u003e\u003c/code\u003e - if the stream does not point to valid audio file data recognized by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an input/output exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003estream\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eAudioFileFormat\u003c/code\u003e object describing the stream\u0027s audio file format"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioFileFormat",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.UnsupportedAudioFileException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.URL",
            "type": "Class"
          },
          "field": {
            "name": "url"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAudioFileFormat",
      "comment": "Obtains the audio file format of the specified URL. The URL must point to valid audio file data.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - the \n\u003ccode\u003eURL\u003c/code\u003e from which file format information should be extracted"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/UnsupportedAudioFileException.html\" title\u003d\"class in javax.sound.sampled\"\u003eUnsupportedAudioFileException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eURL\u003c/code\u003e does not point to valid audio file data recognized by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an input/output exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eurl\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eAudioFileFormat\u003c/code\u003e object describing the audio file format"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioFileFormat",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.UnsupportedAudioFileException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "field": {
            "name": "file"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAudioFileFormat",
      "comment": "Obtains the audio file format of the specified File. The File must point to valid audio file data.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - the \n\u003ccode\u003eFile\u003c/code\u003e from which file format information should be extracted"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/UnsupportedAudioFileException.html\" title\u003d\"class in javax.sound.sampled\"\u003eUnsupportedAudioFileException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eFile\u003c/code\u003e does not point to valid audio file data recognized by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efile\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eAudioFileFormat\u003c/code\u003e object describing the audio file format"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioInputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.UnsupportedAudioFileException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAudioInputStream",
      "comment": "Obtains an audio input stream from the provided input stream. The stream must point to valid audio file data. The implementation of this method may require multiple parsers to examine the stream to determine whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and reset the stream\u0027s read pointer to its original position. If the input stream does not support these operation, this method may fail with an IOException.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/InputStream.html#markSupported()\"\u003e\u003ccode\u003eInputStream.markSupported()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/InputStream.html#mark(int)\"\u003e\u003ccode\u003eInputStream.mark(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the input stream from which the \n\u003ccode\u003eAudioInputStream\u003c/code\u003e should be constructed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/UnsupportedAudioFileException.html\" title\u003d\"class in javax.sound.sampled\"\u003eUnsupportedAudioFileException\u003c/a\u003e\u003c/code\u003e - if the stream does not point to valid audio file data recognized by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003estream\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eAudioInputStream\u003c/code\u003e object based on the audio file data contained in the input stream"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioInputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.UnsupportedAudioFileException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.URL",
            "type": "Class"
          },
          "field": {
            "name": "url"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAudioInputStream",
      "comment": "Obtains an audio input stream from the URL provided. The URL must point to valid audio file data.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - the \n\u003ccode\u003eURL\u003c/code\u003e for which the \n\u003ccode\u003eAudioInputStream\u003c/code\u003e should be constructed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/UnsupportedAudioFileException.html\" title\u003d\"class in javax.sound.sampled\"\u003eUnsupportedAudioFileException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eURL\u003c/code\u003e does not point to valid audio file data recognized by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eurl\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eAudioInputStream\u003c/code\u003e object based on the audio file data pointed to by the \n\u003ccode\u003eURL\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioInputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.sound.sampled.UnsupportedAudioFileException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "field": {
            "name": "file"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAudioInputStream",
      "comment": "Obtains an audio input stream from the provided File. The File must point to valid audio file data.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - the \n\u003ccode\u003eFile\u003c/code\u003e for which the \n\u003ccode\u003eAudioInputStream\u003c/code\u003e should be constructed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/UnsupportedAudioFileException.html\" title\u003d\"class in javax.sound.sampled\"\u003eUnsupportedAudioFileException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eFile\u003c/code\u003e does not point to valid audio file data recognized by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efile\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eAudioInputStream\u003c/code\u003e object based on the audio file data pointed to by the \n\u003ccode\u003eFile\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioFileFormat$Type",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAudioFileTypes",
      "comment": "Obtains the file types for which file writing support is provided by the system.",
      "tagMap": {
        "return": [
          "array of unique file types. If no file types are supported, an array of length 0 is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioFileFormat$Type",
            "type": "Class"
          },
          "field": {
            "name": "fileType"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isFileTypeSupported",
      "comment": "Indicates whether file writing support for the specified file type is provided by the system.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efileType\u003c/code\u003e - the file type for which write capabilities are queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efileType\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the file type is supported, otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.AudioFileFormat$Type",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioInputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAudioFileTypes",
      "comment": "Obtains the file types that the system can write from the audio input stream specified.",
      "tagMap": {
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the audio input stream for which audio file type support is queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003estream\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "array of file types. If no file types are supported, an array of length 0 is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioFileFormat$Type",
            "type": "Class"
          },
          "field": {
            "name": "fileType"
          }
        },
        {
          "type": {
            "name": "javax.sound.sampled.AudioInputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isFileTypeSupported",
      "comment": "Indicates whether an audio file of the specified file type can be written from the indicated audio input stream.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efileType\u003c/code\u003e - the file type for which write capabilities are queried",
          "\u003ccode\u003estream\u003c/code\u003e - the stream for which file-writing support is queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efileType\u003c/code\u003e or \n\u003ccode\u003estream\u003c/code\u003e are \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the file type is supported for this audio input stream, otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioInputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        },
        {
          "type": {
            "name": "javax.sound.sampled.AudioFileFormat$Type",
            "type": "Class"
          },
          "field": {
            "name": "fileType"
          }
        },
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "write",
      "comment": "Writes a stream of bytes representing an audio file of the specified file type to the output stream provided. Some file types require that the length be written into the file header; such files cannot be written from start to finish unless the length is known in advance. An attempt to write a file of such a type will fail with an IOException if the length in the audio file type is AudioSystem.NOT_SPECIFIED.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#isFileTypeSupported(javax.sound.sampled.AudioFileFormat.Type)\"\u003e\u003ccode\u003eisFileTypeSupported(javax.sound.sampled.AudioFileFormat.Type)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getAudioFileTypes()\"\u003e\u003ccode\u003egetAudioFileTypes()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the audio input stream containing audio data to be written to the file",
          "\u003ccode\u003efileType\u003c/code\u003e - the kind of audio file to write",
          "\u003ccode\u003eout\u003c/code\u003e - the stream to which the file data should be written"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an input/output exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the file type is not supported by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003estream\u003c/code\u003e or \n\u003ccode\u003efileType\u003c/code\u003e or \n\u003ccode\u003eout\u003c/code\u003e are \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the number of bytes written to the output stream"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.sound.sampled.AudioInputStream",
            "type": "Class"
          },
          "field": {
            "name": "stream"
          }
        },
        {
          "type": {
            "name": "javax.sound.sampled.AudioFileFormat$Type",
            "type": "Class"
          },
          "field": {
            "name": "fileType"
          }
        },
        {
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "write",
      "comment": "Writes a stream of bytes representing an audio file of the specified file type to the external file provided.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#isFileTypeSupported(javax.sound.sampled.AudioFileFormat.Type)\"\u003e\u003ccode\u003eisFileTypeSupported(javax.sound.sampled.AudioFileFormat.Type)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getAudioFileTypes()\"\u003e\u003ccode\u003egetAudioFileTypes()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the audio input stream containing audio data to be written to the file",
          "\u003ccode\u003efileType\u003c/code\u003e - the kind of audio file to write",
          "\u003ccode\u003eout\u003c/code\u003e - the external file to which the file data should be written"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O exception occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the file type is not supported by the system",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003estream\u003c/code\u003e or \n\u003ccode\u003efileType\u003c/code\u003e or \n\u003ccode\u003eout\u003c/code\u003e are \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the number of bytes written to the file"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.sound.sampled.AudioSystem",
  "comment": "The \n\u003ccode\u003eAudioSystem\u003c/code\u003e class acts as the entry point to the sampled-audio system resources. This class lets you query and access the mixers that are installed on the system. \n\u003ccode\u003eAudioSystem\u003c/code\u003e includes a number of methods for converting audio data between different formats, and for translating between audio files and streams. It also provides a method for obtaining a \n\u003ca href\u003d\"Line.html\" title\u003d\"interface in javax.sound.sampled\"\u003e\u003ccode\u003eLine\u003c/code\u003e\u003c/a\u003e directly from the \n\u003ccode\u003eAudioSystem\u003c/code\u003e without dealing explicitly with mixers. \n\u003cp\u003e Properties can be used to specify the default mixer for specific line types. Both system properties and a properties file are considered. The \"sound.properties\" properties file is read from an implementation-specific location (typically it is the \u003ccode\u003econf\u003c/code\u003e directory in the Java installation directory). The optional \"javax.sound.config.file\" system property can be used to specify the properties file that will be read as the initial configuration. If a property exists both as a system property and in the properties file, the system property takes precedence. If none is specified, a suitable default is chosen among the available devices. The syntax of the properties file is specified in \u003ca href\u003d\"../../../../java.base/java/util/Properties.html#load(java.io.InputStream)\"\u003e\u003ccode\u003eProperties.load\u003c/code\u003e\u003c/a\u003e. The following table lists the available property keys and which methods consider them: \u003c/p\u003e\n\u003ctable class\u003d\"striped\"\u003e \n \u003ccaption\u003e\n  Audio System Property Keys\n \u003c/caption\u003e \n \u003cthead\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"col\"\u003eProperty Key \u003c/th\u003e\n   \u003cth scope\u003d\"col\"\u003eInterface \u003c/th\u003e\n   \u003cth scope\u003d\"col\"\u003eAffected Method(s) \u003c/th\u003e\n  \u003c/tr\u003e\n \u003c/thead\u003e \n \u003ctbody\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003ejavax.sound.sampled.Clip\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003e\u003ca href\u003d\"Clip.html\" title\u003d\"interface in javax.sound.sampled\"\u003e\u003ccode\u003eClip\u003c/code\u003e\u003c/a\u003e \u003c/td\u003e\n   \u003ctd\u003e\u003ca href\u003d\"#getLine(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003egetLine(javax.sound.sampled.Line.Info)\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#getClip()\"\u003e\u003ccode\u003egetClip()\u003c/code\u003e\u003c/a\u003e \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003ejavax.sound.sampled.Port\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003e\u003ca href\u003d\"Port.html\" title\u003d\"interface in javax.sound.sampled\"\u003e\u003ccode\u003ePort\u003c/code\u003e\u003c/a\u003e \u003c/td\u003e\n   \u003ctd\u003e\u003ca href\u003d\"#getLine(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003egetLine(javax.sound.sampled.Line.Info)\u003c/code\u003e\u003c/a\u003e \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003ejavax.sound.sampled.SourceDataLine\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003e\u003ca href\u003d\"SourceDataLine.html\" title\u003d\"interface in javax.sound.sampled\"\u003e\u003ccode\u003eSourceDataLine\u003c/code\u003e\u003c/a\u003e \u003c/td\u003e\n   \u003ctd\u003e\u003ca href\u003d\"#getLine(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003egetLine(javax.sound.sampled.Line.Info)\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#getSourceDataLine(javax.sound.sampled.AudioFormat)\"\u003e\u003ccode\u003egetSourceDataLine(javax.sound.sampled.AudioFormat)\u003c/code\u003e\u003c/a\u003e \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003ejavax.sound.sampled.TargetDataLine\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003e\u003ca href\u003d\"TargetDataLine.html\" title\u003d\"interface in javax.sound.sampled\"\u003e\u003ccode\u003eTargetDataLine\u003c/code\u003e\u003c/a\u003e \u003c/td\u003e\n   \u003ctd\u003e\u003ca href\u003d\"#getLine(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003egetLine(javax.sound.sampled.Line.Info)\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#getTargetDataLine(javax.sound.sampled.AudioFormat)\"\u003e\u003ccode\u003egetTargetDataLine(javax.sound.sampled.AudioFormat)\u003c/code\u003e\u003c/a\u003e \u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e \n\u003c/table\u003e The property value consists of the provider class name and the mixer name, separated by the hash mark (\"#\"). The provider class name is the fully-qualified name of a concrete \n\u003ca href\u003d\"spi/MixerProvider.html\" title\u003d\"class in javax.sound.sampled.spi\"\u003e\u003ccode\u003emixer provider\u003c/code\u003e\u003c/a\u003e class. The mixer name is matched against the \n\u003ccode\u003eString\u003c/code\u003e returned by the \n\u003ccode\u003egetName\u003c/code\u003e method of \n\u003ccode\u003eMixer.Info\u003c/code\u003e. Either the class name, or the mixer name may be omitted. If only the class name is specified, the trailing hash mark is optional. \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e If the provider class is specified, and it can be successfully retrieved from the installed providers, the list of \u003ccode\u003eMixer.Info\u003c/code\u003e objects is retrieved from the provider. Otherwise, or when these mixers do not provide a subsequent match, the list is retrieved from \u003ca href\u003d\"#getMixerInfo()\"\u003e\u003ccode\u003egetMixerInfo()\u003c/code\u003e\u003c/a\u003e to contain all available \u003ccode\u003eMixer.Info\u003c/code\u003e objects. \u003c/p\u003e\n\u003cp\u003e If a mixer name is specified, the resulting list of \u003ccode\u003eMixer.Info\u003c/code\u003e objects is searched: the first one with a matching name, and whose \u003ccode\u003eMixer\u003c/code\u003e provides the respective line interface, will be returned. If no matching \u003ccode\u003eMixer.Info\u003c/code\u003e object is found, or the mixer name is not specified, the first mixer from the resulting list, which provides the respective line interface, will be returned. \u003c/p\u003e\n\u003cp\u003e For example, the property \u003ccode\u003ejavax.sound.sampled.Clip\u003c/code\u003e with a value \u003ccode\u003e\"com.sun.media.sound.MixerProvider#SunClip\"\u003c/code\u003e will have the following consequences when \u003ccode\u003egetLine\u003c/code\u003e is called requesting a \u003ccode\u003eClip\u003c/code\u003e instance: if the class \u003ccode\u003ecom.sun.media.sound.MixerProvider\u003c/code\u003e exists in the list of installed mixer providers, the first \u003ccode\u003eClip\u003c/code\u003e from the first mixer with name \u003ccode\u003e\"SunClip\"\u003c/code\u003e will be returned. If it cannot be found, the first \u003ccode\u003eClip\u003c/code\u003e from the first mixer of the specified provider will be returned, regardless of name. If there is none, the first \u003ccode\u003eClip\u003c/code\u003e from the first \u003ccode\u003eMixer\u003c/code\u003e with name \u003ccode\u003e\"SunClip\"\u003c/code\u003e in the list of all mixers (as returned by \u003ccode\u003egetMixerInfo\u003c/code\u003e) will be returned, or, if not found, the first \u003ccode\u003eClip\u003c/code\u003e of the first \u003ccode\u003eMixer\u003c/code\u003e that can be found in the list of all mixers is returned. If that fails, too, an \u003ccode\u003eIllegalArgumentException\u003c/code\u003e is thrown.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioFormat.html\" title\u003d\"class in javax.sound.sampled\"\u003e\u003ccode\u003eAudioFormat\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioInputStream.html\" title\u003d\"class in javax.sound.sampled\"\u003e\u003ccode\u003eAudioInputStream\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Mixer.html\" title\u003d\"interface in javax.sound.sampled\"\u003e\u003ccode\u003eMixer\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Line.html\" title\u003d\"interface in javax.sound.sampled\"\u003e\u003ccode\u003eLine\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Line.Info.html\" title\u003d\"class in javax.sound.sampled\"\u003e\u003ccode\u003eLine.Info\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}