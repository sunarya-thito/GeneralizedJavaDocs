{
  "packageName": "javax.sound.sampled",
  "simpleName": "LineEvent",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.EventObject",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.sound.sampled.Line",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getLine",
      "comment": "Obtains the audio line that is the source of this event.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the line responsible for this event"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.sound.sampled.LineEvent$Type",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getType",
      "comment": "Obtains the event\u0027s type.",
      "annotations": [],
      "tagMap": {
        "return": [
          "this event\u0027s type (\n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineEvent.Type.html#OPEN\"\u003e\u003ccode\u003eLineEvent.Type.OPEN\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineEvent.Type.html#CLOSE\"\u003e\u003ccode\u003eLineEvent.Type.CLOSE\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineEvent.Type.html#START\"\u003e\u003ccode\u003eLineEvent.Type.START\u003c/code\u003e\u003c/a\u003e, or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineEvent.Type.html#STOP\"\u003e\u003ccode\u003eLineEvent.Type.STOP\u003c/code\u003e\u003c/a\u003e)"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getFramePosition",
      "comment": "Obtains the position in the line\u0027s audio data when the event occurred, expressed in sample frames. For example, if a source line had already played back 14 sample frames at the time it was paused, the pause event would report the line\u0027s position as 14. The next frame to be processed would be frame number 14 using zero-based numbering, or 15 using one-based numbering. Note that this field is relevant only to certain events generated by data lines, such as START and STOP. For events generated by lines that do not count sample frames, and for any other events for which this value is not known, the position value should be AudioSystem.NOT_SPECIFIED.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the line\u0027s position as a sample frame number"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of the event.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/EventObject.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/EventObject.html\" title\u003d\"class in java.util\"\u003eEventObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of the event"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.sound.sampled.Line",
            "type": "Class"
          },
          "name": "line",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.sound.sampled.LineEvent$Type",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "position",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new event of the specified type, originating from the specified line.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eline\u003c/code\u003e - the source of this event",
          "\u003ccode\u003etype\u003c/code\u003e - the event type (\n\u003ccode\u003eOPEN\u003c/code\u003e, \n\u003ccode\u003eCLOSE\u003c/code\u003e, \n\u003ccode\u003eSTART\u003c/code\u003e, or \n\u003ccode\u003eSTOP\u003c/code\u003e)",
          "\u003ccode\u003eposition\u003c/code\u003e - the number of sample frames that the line had already processed when the event occurred, or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#NOT_SPECIFIED\"\u003e\u003ccode\u003eAudioSystem.NOT_SPECIFIED\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eline\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    }
  ],
  "innerClasses": [
    "javax.sound.sampled.LineEvent$Type"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.sound.sampled.LineEvent",
  "comment": "The \n\u003ccode\u003eLineEvent\u003c/code\u003e class encapsulates information that a line sends its listeners whenever the line opens, closes, starts, or stops. Each of these four state changes is represented by a corresponding type of event. A listener receives the event as a parameter to its \n\u003ca href\u003d\"LineListener.html#update(javax.sound.sampled.LineEvent)\"\u003e\u003ccode\u003eupdate\u003c/code\u003e\u003c/a\u003e method. By querying the event, the listener can learn the type of event, the line responsible for the event, and how much data the line had processed when the event occurred. \n\u003cp\u003e Although this class implements Serializable, attempts to serialize a \u003ccode\u003eLineEvent\u003c/code\u003e object will fail.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Line.html\" title\u003d\"interface in javax.sound.sampled\"\u003e\u003ccode\u003eLine\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/LineListener.html#update(javax.sound.sampled.LineEvent)\"\u003e\u003ccode\u003eLineListener.update(javax.sound.sampled.LineEvent)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}