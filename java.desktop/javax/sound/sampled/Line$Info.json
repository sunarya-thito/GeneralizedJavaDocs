{
  "packageName": "javax.sound.sampled",
  "simpleName": "Info",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLineClass",
      "comment": "Obtains the class of the line that this Line.Info object describes.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the described line\u0027s class"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "matches",
      "comment": "Indicates whether the specified info object matches this one. To match, the specified object must be identical to or a special case of this one. The specified info object must be either an instance of the same class as this one, or an instance of a sub-type of this one. In addition, the attributes of the specified object must be compatible with the capabilities of this one. Specifically, the routing configuration for the specified info object must be compatible with that of this one. Subclasses may add other criteria to determine whether the two objects match.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003einfo\u003c/code\u003e - the info object which is being compared to this one"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified object matches this one, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of the info object.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of the info object"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "lineClass",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an info object that describes a line of the specified class. This constructor is typically used by an application to describe a desired line.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elineClass\u003c/code\u003e - the class of the line that the new \n\u003ccode\u003eLine.Info\u003c/code\u003e object describes"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 9,
  "name": "javax.sound.sampled.Line$Info",
  "comment": "A \n\u003ccode\u003eLine.Info\u003c/code\u003e object contains information about a line. The only information provided by \n\u003ccode\u003eLine.Info\u003c/code\u003e itself is the Java class of the line. A subclass of \n\u003ccode\u003eLine.Info\u003c/code\u003e adds other kinds of information about the line. This additional information depends on which \n\u003ccode\u003eLine\u003c/code\u003e subinterface is implemented by the kind of line that the \n\u003ccode\u003eLine.Info\u003c/code\u003e subclass describes. \n\u003cp\u003e A \u003ccode\u003eLine.Info\u003c/code\u003e can be retrieved using various methods of the \u003ccode\u003eLine\u003c/code\u003e, \u003ccode\u003eMixer\u003c/code\u003e, and \u003ccode\u003eAudioSystem\u003c/code\u003e interfaces. Other such methods let you pass a \u003ccode\u003eLine.Info\u003c/code\u003e as an argument, to learn whether lines matching the specified configuration are available and to obtain them.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Line.html#getLineInfo()\"\u003e\u003ccode\u003eLine.getLineInfo()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Mixer.html#getSourceLineInfo()\"\u003e\u003ccode\u003eMixer.getSourceLineInfo()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Mixer.html#getTargetLineInfo()\"\u003e\u003ccode\u003eMixer.getTargetLineInfo()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Mixer.html#getLine(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003eMixer.getLine(Line.Info)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Mixer.html#getSourceLineInfo(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003eMixer.getSourceLineInfo(Line.Info)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Mixer.html#getTargetLineInfo(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003eMixer.getTargetLineInfo(Line.Info)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/Mixer.html#isLineSupported(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003eMixer.isLineSupported(Line.Info)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getLine(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003eAudioSystem.getLine(Line.Info)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getSourceLineInfo(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003eAudioSystem.getSourceLineInfo(Line.Info)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getTargetLineInfo(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003eAudioSystem.getTargetLineInfo(Line.Info)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#isLineSupported(javax.sound.sampled.Line.Info)\"\u003e\u003ccode\u003eAudioSystem.isLineSupported(Line.Info)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}