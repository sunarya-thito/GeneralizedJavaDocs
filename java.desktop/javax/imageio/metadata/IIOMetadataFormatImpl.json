{
  "packageName": "javax.imageio.metadata",
  "simpleName": "IIOMetadataFormatImpl",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "standardMetadataFormatName",
      "comment": "A String constant containing the standard format name, \"javax_imageio_1.0\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.imageio.metadata.IIOMetadataFormatImpl.standardMetadataFormatName\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "resourceBaseName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "setResourceBaseName",
      "comment": "Sets a new base name for locating ResourceBundles containing descriptions of elements and attributes for this format. Prior to the first time this method is called, the base name will be equal to this.getClass().getName() + \"Resources\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormatImpl.html#getResourceBaseName()\"\u003e\u003ccode\u003egetResourceBaseName()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eresourceBaseName\u003c/code\u003e - a \n\u003ccode\u003eString\u003c/code\u003e containing the new base name."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eresourceBaseName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getResourceBaseName",
      "comment": "Returns the currently set base name for locating ResourceBundles.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormatImpl.html#setResourceBaseName(java.lang.String)\"\u003e\u003ccode\u003esetResourceBaseName(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e containing the base name."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "parentName"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "childPolicy"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addElement",
      "comment": "Adds a new element type to this metadata document format with a child policy other than CHILD_POLICY_REPEAT.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the new element.",
          "\u003ccode\u003eparentName\u003c/code\u003e - the name of the element that will be the parent of the new element.",
          "\u003ccode\u003echildPolicy\u003c/code\u003e - one of the \n\u003ccode\u003eCHILD_POLICY_*\u003c/code\u003e constants, other than \n\u003ccode\u003eCHILD_POLICY_REPEAT\u003c/code\u003e, indicating the child policy of the new element."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eparentName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is not a legal element name for this format.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003echildPolicy\u003c/code\u003e is not one of the predefined constants."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "parentName"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "minChildren"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "maxChildren"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addElement",
      "comment": "Adds a new element type to this metadata document format with a child policy of CHILD_POLICY_REPEAT.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the new element.",
          "\u003ccode\u003eparentName\u003c/code\u003e - the name of the element that will be the parent of the new element.",
          "\u003ccode\u003eminChildren\u003c/code\u003e - the minimum number of children of the node.",
          "\u003ccode\u003emaxChildren\u003c/code\u003e - the maximum number of children of the node."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eparentName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is not a legal element name for this format.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eminChildren\u003c/code\u003e is negative or larger than \n\u003ccode\u003emaxChildren\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "parentName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addChildElement",
      "comment": "Adds an existing element to the list of legal children for a given parent node type.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentName\u003c/code\u003e - the name of the element that will be the new parent of the element.",
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element to be added as a child."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is not a legal element name for this format.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eparentName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is not a legal element name for this format."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "removeElement",
      "comment": "Removes an element from the format. If no element with the given name was present, nothing happens and no exception is thrown.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element to be removed."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dataType"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "required"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "defaultValue"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addAttribute",
      "comment": "Adds a new attribute to a previously defined element that may be set to an arbitrary value.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute being added.",
          "\u003ccode\u003edataType\u003c/code\u003e - the data type (string format) of the attribute, one of the \n\u003ccode\u003eDATATYPE_*\u003c/code\u003e constants.",
          "\u003ccode\u003erequired\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the attribute must be present.",
          "\u003ccode\u003edefaultValue\u003c/code\u003e - the default value for the attribute, or \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is not a legal element name for this format.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eattrName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edataType\u003c/code\u003e is not one of the predefined constants."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dataType"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "required"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "defaultValue"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "enumeratedValues"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addAttribute",
      "comment": "Adds a new attribute to a previously defined element that will be defined by a set of enumerated values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute being added.",
          "\u003ccode\u003edataType\u003c/code\u003e - the data type (string format) of the attribute, one of the \n\u003ccode\u003eDATATYPE_*\u003c/code\u003e constants.",
          "\u003ccode\u003erequired\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the attribute must be present.",
          "\u003ccode\u003edefaultValue\u003c/code\u003e - the default value for the attribute, or \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003eenumeratedValues\u003c/code\u003e - a \n\u003ccode\u003eList\u003c/code\u003e of \n\u003ccode\u003eString\u003c/code\u003es containing the legal values for the attribute."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is not a legal element name for this format.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eattrName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edataType\u003c/code\u003e is not one of the predefined constants.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eenumeratedValues\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eenumeratedValues\u003c/code\u003e does not contain at least one entry.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eenumeratedValues\u003c/code\u003e contains an element that is not a \n\u003ccode\u003eString\u003c/code\u003e or is \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dataType"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "required"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "defaultValue"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "minValue"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "maxValue"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "minInclusive"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "maxInclusive"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addAttribute",
      "comment": "Adds a new attribute to a previously defined element that will be defined by a range of values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute being added.",
          "\u003ccode\u003edataType\u003c/code\u003e - the data type (string format) of the attribute, one of the \n\u003ccode\u003eDATATYPE_*\u003c/code\u003e constants.",
          "\u003ccode\u003erequired\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the attribute must be present.",
          "\u003ccode\u003edefaultValue\u003c/code\u003e - the default value for the attribute, or \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003eminValue\u003c/code\u003e - the smallest (inclusive or exclusive depending on the value of \n\u003ccode\u003eminInclusive\u003c/code\u003e) legal value for the attribute, as a \n\u003ccode\u003eString\u003c/code\u003e.",
          "\u003ccode\u003emaxValue\u003c/code\u003e - the largest (inclusive or exclusive depending on the value of \n\u003ccode\u003eminInclusive\u003c/code\u003e) legal value for the attribute, as a \n\u003ccode\u003eString\u003c/code\u003e.",
          "\u003ccode\u003eminInclusive\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003eminValue\u003c/code\u003e is inclusive.",
          "\u003ccode\u003emaxInclusive\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003emaxValue\u003c/code\u003e is inclusive."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is not a legal element name for this format.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eattrName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edataType\u003c/code\u003e is not one of the predefined constants."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dataType"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "required"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "listMinLength"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "listMaxLength"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addAttribute",
      "comment": "Adds a new attribute to a previously defined element that will be defined by a list of values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute being added.",
          "\u003ccode\u003edataType\u003c/code\u003e - the data type (string format) of the attribute, one of the \n\u003ccode\u003eDATATYPE_*\u003c/code\u003e constants.",
          "\u003ccode\u003erequired\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the attribute must be present.",
          "\u003ccode\u003elistMinLength\u003c/code\u003e - the smallest legal number of list items.",
          "\u003ccode\u003elistMaxLength\u003c/code\u003e - the largest legal number of list items."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is not a legal element name for this format.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eattrName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edataType\u003c/code\u003e is not one of the predefined constants.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elistMinLength\u003c/code\u003e is negative or larger than \n\u003ccode\u003elistMaxLength\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "hasDefaultValue"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "defaultValue"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addBooleanAttribute",
      "comment": "Adds a new attribute to a previously defined element that will be defined by the enumerated values TRUE and FALSE, with a datatype of DATATYPE_BOOLEAN.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute being added.",
          "\u003ccode\u003ehasDefaultValue\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if a default value should be present.",
          "\u003ccode\u003edefaultValue\u003c/code\u003e - the default value for the attribute as a \n\u003ccode\u003eboolean\u003c/code\u003e, ignored if \n\u003ccode\u003ehasDefaultValue\u003c/code\u003e is \n\u003ccode\u003efalse\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is not a legal element name for this format.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eattrName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "removeAttribute",
      "comment": "Removes an attribute from a previously defined element. If no attribute with the given name was present in the given element, nothing happens and no exception is thrown.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute being removed."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is not a legal element name for this format."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "classType"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "required"
          }
        },
        {
          "type": {
            "name": "T",
            "type": "Class"
          },
          "field": {
            "name": "defaultValue"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addObjectValue",
      "comment": "Allows an Object reference of a given class type to be stored in nodes implementing the named element. The value of the Object is unconstrained other than by its class type. If an Object reference was previously allowed, the previous settings are overwritten.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the object."
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element.",
          "\u003ccode\u003eclassType\u003c/code\u003e - a \n\u003ccode\u003eClass\u003c/code\u003e variable indicating the legal class type for the object value.",
          "\u003ccode\u003erequired\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if an object value must be present.",
          "\u003ccode\u003edefaultValue\u003c/code\u003e - the default value for the \n\u003ccode\u003eObject\u003c/code\u003e reference, or \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is not a legal element name for this format."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "classType"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "required"
          }
        },
        {
          "type": {
            "name": "T",
            "type": "Class"
          },
          "field": {
            "name": "defaultValue"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "T",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "enumeratedValues"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addObjectValue",
      "comment": "Allows an Object reference of a given class type to be stored in nodes implementing the named element. The value of the Object must be one of the values given by enumeratedValues. If an Object reference was previously allowed, the previous settings are overwritten.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the object."
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element.",
          "\u003ccode\u003eclassType\u003c/code\u003e - a \n\u003ccode\u003eClass\u003c/code\u003e variable indicating the legal class type for the object value.",
          "\u003ccode\u003erequired\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if an object value must be present.",
          "\u003ccode\u003edefaultValue\u003c/code\u003e - the default value for the \n\u003ccode\u003eObject\u003c/code\u003e reference, or \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003eenumeratedValues\u003c/code\u003e - a \n\u003ccode\u003eList\u003c/code\u003e of \n\u003ccode\u003eObject\u003c/code\u003es containing the legal values for the object reference."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is not a legal element name for this format.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eenumeratedValues\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eenumeratedValues\u003c/code\u003e does not contain at least one entry.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eenumeratedValues\u003c/code\u003e contains an element that is not an instance of the class type denoted by \n\u003ccode\u003eclassType\u003c/code\u003e or is \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "classType"
          }
        },
        {
          "type": {
            "name": "T",
            "type": "Class"
          },
          "field": {
            "name": "defaultValue"
          }
        },
        {
          "type": {
            "name": "java.lang.Comparable",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "name": "T",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "minValue"
          }
        },
        {
          "type": {
            "name": "java.lang.Comparable",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "name": "T",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "maxValue"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "minInclusive"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "maxInclusive"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "upperBounds": [
            {
              "name": "java.lang.Object",
              "type": "Class"
            },
            {
              "name": "java.lang.Comparable",
              "parameters": [
                {
                  "lowerBounds": [
                    {
                      "name": "T",
                      "type": "Class"
                    }
                  ],
                  "type": "Wildcard"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addObjectValue",
      "comment": "Allows an Object reference of a given class type to be stored in nodes implementing the named element. The value of the Object must be within the range given by minValue and maxValue. Furthermore, the class type must implement the Comparable interface. If an Object reference was previously allowed, the previous settings are overwritten.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the object."
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element.",
          "\u003ccode\u003eclassType\u003c/code\u003e - a \n\u003ccode\u003eClass\u003c/code\u003e variable indicating the legal class type for the object value.",
          "\u003ccode\u003edefaultValue\u003c/code\u003e - the default value for the",
          "\u003ccode\u003eminValue\u003c/code\u003e - the smallest (inclusive or exclusive depending on the value of \n\u003ccode\u003eminInclusive\u003c/code\u003e) legal value for the object value, as a \n\u003ccode\u003eString\u003c/code\u003e.",
          "\u003ccode\u003emaxValue\u003c/code\u003e - the largest (inclusive or exclusive depending on the value of \n\u003ccode\u003eminInclusive\u003c/code\u003e) legal value for the object value, as a \n\u003ccode\u003eString\u003c/code\u003e.",
          "\u003ccode\u003eminInclusive\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003eminValue\u003c/code\u003e is inclusive.",
          "\u003ccode\u003emaxInclusive\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003emaxValue\u003c/code\u003e is inclusive."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is not a legal element name for this format."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "classType"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "arrayMinLength"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "arrayMaxLength"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addObjectValue",
      "comment": "Allows an Object reference of a given class type to be stored in nodes implementing the named element. The value of the Object must an array of objects of class type given by classType, with at least arrayMinLength and at most arrayMaxLength elements. If an Object reference was previously allowed, the previous settings are overwritten.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element.",
          "\u003ccode\u003eclassType\u003c/code\u003e - a \n\u003ccode\u003eClass\u003c/code\u003e variable indicating the legal class type for the object value.",
          "\u003ccode\u003earrayMinLength\u003c/code\u003e - the smallest legal length for the array.",
          "\u003ccode\u003earrayMaxLength\u003c/code\u003e - the largest legal length for the array."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementName\u003c/code\u003e is not a legal element name for this format."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "removeObjectValue",
      "comment": "Disallows an Object reference from being stored in nodes implementing the named element.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementName\u003c/code\u003e is not a legal element name for this format."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRootName",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getRootName()\"\u003egetRootName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getElementMinChildren",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getElementMinChildren(java.lang.String)\"\u003egetElementMinChildren\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried."
        ],
        "return": [
          "an \n\u003ccode\u003eint\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getElementMaxChildren",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getElementMaxChildren(java.lang.String)\"\u003egetElementMaxChildren\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried."
        ],
        "return": [
          "an \n\u003ccode\u003eint\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "locale"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getElementDescription",
      "comment": "Returns a String containing a description of the named element, or null. The description will be localized for the supplied Locale if possible. The default implementation will first locate a ResourceBundle using the current resource base name set by setResourceBaseName and the supplied Locale, using the fallback mechanism described in the comments for ResourceBundle.getBundle. If a ResourceBundle is found, the element name will be used as a key to its getString method, and the result returned. If no ResourceBundle is found, or no such key is present, null will be returned. If locale is null, the current default Locale returned by Locale.getLocale will be used.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormatImpl.html#setResourceBaseName(java.lang.String)\"\u003e\u003ccode\u003esetResourceBaseName(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getElementDescription(java.lang.String,java.util.Locale)\"\u003egetElementDescription\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element.",
          "\u003ccode\u003elocale\u003c/code\u003e - the \n\u003ccode\u003eLocale\u003c/code\u003e for which localization will be attempted."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is not a legal element name for this format."
        ],
        "return": [
          "the element description."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getChildPolicy",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getChildPolicy(java.lang.String)\"\u003egetChildPolicy\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried."
        ],
        "return": [
          "one of the \n\u003ccode\u003eCHILD_POLICY_*\u003c/code\u003e constants."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getChildNames",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getChildNames(java.lang.String)\"\u003egetChildNames\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried."
        ],
        "return": [
          "an array of \n\u003ccode\u003eString\u003c/code\u003es, or null."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttributeNames",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getAttributeNames(java.lang.String)\"\u003egetAttributeNames\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried."
        ],
        "return": [
          "an array of \n\u003ccode\u003eString\u003c/code\u003es."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttributeValueType",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getAttributeValueType(java.lang.String,java.lang.String)\"\u003egetAttributeValueType\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute being queried."
        ],
        "return": [
          "one of the \n\u003ccode\u003eVALUE_*\u003c/code\u003e constants."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttributeDataType",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getAttributeDataType(java.lang.String,java.lang.String)\"\u003egetAttributeDataType\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute being queried."
        ],
        "return": [
          "one of the \n\u003ccode\u003eDATATYPE_*\u003c/code\u003e constants."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isAttributeRequired",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#isAttributeRequired(java.lang.String,java.lang.String)\"\u003eisAttributeRequired\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute being queried."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the attribute must be present."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttributeDefaultValue",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getAttributeDefaultValue(java.lang.String,java.lang.String)\"\u003egetAttributeDefaultValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute being queried."
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e containing the default value, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttributeEnumerations",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getAttributeEnumerations(java.lang.String,java.lang.String)\"\u003egetAttributeEnumerations\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute being queried."
        ],
        "return": [
          "an array of \n\u003ccode\u003eString\u003c/code\u003es."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttributeMinValue",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getAttributeMinValue(java.lang.String,java.lang.String)\"\u003egetAttributeMinValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute being queried."
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e containing the smallest legal value for the attribute."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttributeMaxValue",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getAttributeMaxValue(java.lang.String,java.lang.String)\"\u003egetAttributeMaxValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried, as a \n\u003ccode\u003eString\u003c/code\u003e.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute being queried."
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e containing the largest legal value for the attribute."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttributeListMinLength",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getAttributeListMinLength(java.lang.String,java.lang.String)\"\u003egetAttributeListMinLength\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute being queried."
        ],
        "return": [
          "the smallest legal number of list items for the attribute."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttributeListMaxLength",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getAttributeListMaxLength(java.lang.String,java.lang.String)\"\u003egetAttributeListMaxLength\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute being queried."
        ],
        "return": [
          "the largest legal number of list items for the attribute."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "attrName"
          }
        },
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "locale"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttributeDescription",
      "comment": "Returns a String containing a description of the named attribute, or null. The description will be localized for the supplied Locale if possible. The default implementation will first locate a ResourceBundle using the current resource base name set by setResourceBaseName and the supplied Locale, using the fallback mechanism described in the comments for ResourceBundle.getBundle. If a ResourceBundle is found, the element name followed by a \"/\" character followed by the attribute name (elementName + \"/\" + attrName) will be used as a key to its getString method, and the result returned. If no ResourceBundle is found, or no such key is present, null will be returned. If locale is null, the current default Locale returned by Locale.getLocale will be used.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormatImpl.html#setResourceBaseName(java.lang.String)\"\u003e\u003ccode\u003esetResourceBaseName(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getAttributeDescription(java.lang.String,java.lang.String,java.util.Locale)\"\u003egetAttributeDescription\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element.",
          "\u003ccode\u003eattrName\u003c/code\u003e - the name of the attribute.",
          "\u003ccode\u003elocale\u003c/code\u003e - the \n\u003ccode\u003eLocale\u003c/code\u003e for which localization will be attempted, or \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is not a legal element name for this format.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eattrName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or is not a legal attribute name for this element."
        ],
        "return": [
          "the attribute description."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getObjectValueType",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eComparable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getObjectValueType(java.lang.String)\"\u003egetObjectValueType\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried."
        ],
        "return": [
          "one of the \n\u003ccode\u003eVALUE_*\u003c/code\u003e constants."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getObjectClass",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getObjectClass(java.lang.String)\"\u003egetObjectClass\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried."
        ],
        "return": [
          "a \n\u003ccode\u003eClass\u003c/code\u003e object."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getObjectDefaultValue",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getObjectDefaultValue(java.lang.String)\"\u003egetObjectDefaultValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried."
        ],
        "return": [
          "an \n\u003ccode\u003eObject\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getObjectEnumerations",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getObjectEnumerations(java.lang.String)\"\u003egetObjectEnumerations\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried."
        ],
        "return": [
          "an array of \n\u003ccode\u003eObject\u003c/code\u003es."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Comparable",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getObjectMinValue",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getObjectMinValue(java.lang.String)\"\u003egetObjectMinValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried."
        ],
        "return": [
          "the smallest legal value for the attribute."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Comparable",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getObjectMaxValue",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getObjectMaxValue(java.lang.String)\"\u003egetObjectMaxValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried."
        ],
        "return": [
          "the smallest legal value for the attribute."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getObjectArrayMinLength",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getObjectArrayMinLength(java.lang.String)\"\u003egetObjectArrayMinLength\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried."
        ],
        "return": [
          "the smallest valid array length for the \n\u003ccode\u003eObject\u003c/code\u003e reference."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "elementName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getObjectArrayMaxLength",
      "comment": "Description copied from interface: IIOMetadataFormat",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html#getObjectArrayMaxLength(java.lang.String)\"\u003egetObjectArrayMaxLength\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataFormat.html\" title\u003d\"interface in javax.imageio.metadata\"\u003eIIOMetadataFormat\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelementName\u003c/code\u003e - the name of the element being queried."
        ],
        "return": [
          "the largest valid array length for the \n\u003ccode\u003eObject\u003c/code\u003e reference."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.imageio.metadata.IIOMetadataFormat",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getStandardFormatInstance",
      "comment": "Returns an IIOMetadataFormat object describing the standard, plug-in neutral javax.imageio_1.0 metadata document format described in the comment of the javax.imageio.metadata package.",
      "tagMap": {
        "return": [
          "a predefined \n\u003ccode\u003eIIOMetadataFormat\u003c/code\u003e instance."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "rootName"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "childPolicy"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a blank IIOMetadataFormatImpl instance, with a given root element name and child policy (other than CHILD_POLICY_REPEAT). Additional elements, and their attributes and Object reference information may be added using the various add methods.",
      "tagMap": {
        "param": [
          "\u003ccode\u003erootName\u003c/code\u003e - the name of the root element.",
          "\u003ccode\u003echildPolicy\u003c/code\u003e - one of the \n\u003ccode\u003eCHILD_POLICY_*\u003c/code\u003e constants, other than \n\u003ccode\u003eCHILD_POLICY_REPEAT\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003erootName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003echildPolicy\u003c/code\u003e is not one of the predefined constants."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "rootName"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "minChildren"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "maxChildren"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a blank IIOMetadataFormatImpl instance, with a given root element name and a child policy of CHILD_POLICY_REPEAT. Additional elements, and their attributes and Object reference information may be added using the various add methods.",
      "tagMap": {
        "param": [
          "\u003ccode\u003erootName\u003c/code\u003e - the name of the root element.",
          "\u003ccode\u003eminChildren\u003c/code\u003e - the minimum number of children of the node.",
          "\u003ccode\u003emaxChildren\u003c/code\u003e - the maximum number of children of the node."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003erootName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eminChildren\u003c/code\u003e is negative or larger than \n\u003ccode\u003emaxChildren\u003c/code\u003e."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.imageio.metadata.IIOMetadataFormatImpl",
  "comment": "A concrete class providing a reusable implementation of the \n\u003ccode\u003eIIOMetadataFormat\u003c/code\u003e interface. In addition, a static instance representing the standard, plug-in neutral \n\u003ccode\u003ejavax_imageio_1.0\u003c/code\u003e format is provided by the \n\u003ccode\u003egetStandardFormatInstance\u003c/code\u003e method. \n\u003cp\u003e In order to supply localized descriptions of elements and attributes, a \u003ccode\u003eResourceBundle\u003c/code\u003e with a base name of \u003ccode\u003ethis.getClass().getName() + \"Resources\"\u003c/code\u003e should be supplied via the usual mechanism used by \u003ccode\u003eResourceBundle.getBundle\u003c/code\u003e. Briefly, the subclasser supplies one or more additional classes according to a naming convention (by default, the fully-qualified name of the subclass extending \u003ccode\u003eIIMetadataFormatImpl\u003c/code\u003e, plus the string \"Resources\", plus the country, language, and variant codes separated by underscores). At run time, calls to \u003ccode\u003egetElementDescription\u003c/code\u003e or \u003ccode\u003egetAttributeDescription\u003c/code\u003e will attempt to load such classes dynamically according to the supplied locale, and will use either the element name, or the element name followed by a \u0027/\u0027 character followed by the attribute name as a key. This key will be supplied to the \u003ccode\u003eResourceBundle\u003c/code\u003e\u0027s \u003ccode\u003egetString\u003c/code\u003e method, and the resulting localized description of the node or attribute is returned. \u003c/p\u003e\n\u003cp\u003e The subclass may supply a different base name for the resource bundles using the \u003ccode\u003esetResourceBaseName\u003c/code\u003e method. \u003c/p\u003e\n\u003cp\u003e A subclass may choose its own localization mechanism, if so desired, by overriding the supplied implementations of \u003ccode\u003egetElementDescription\u003c/code\u003e and \u003ccode\u003egetAttributeDescription\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ResourceBundle.html#getBundle(java.lang.String,java.util.Locale)\"\u003e\u003ccode\u003eResourceBundle.getBundle(String,Locale)\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}