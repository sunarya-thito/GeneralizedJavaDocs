{
  "packageName": "javax.imageio.metadata",
  "simpleName": "IIOMetadataController",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.imageio.metadata.IIOMetadata",
            "type": "Class"
          },
          "field": {
            "name": "metadata"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "activate",
      "comment": "Activates the controller. If true is returned, all settings in the IIOMetadata object should be ready for use in a write operation. If false is returned, no settings in the IIOMetadata object will be disturbed (i.e., the user canceled the operation).",
      "tagMap": {
        "param": [
          "\u003ccode\u003emetadata\u003c/code\u003e - the \n\u003ccode\u003eIIOMetadata\u003c/code\u003e object to be modified."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003emetadata\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or is not an instance of the correct class."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the \n\u003ccode\u003eIIOMetadata\u003c/code\u003e has been modified, \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.imageio.metadata.IIOMetadataController",
  "comment": "An interface to be implemented by objects that can determine the settings of an \n\u003ccode\u003eIIOMetadata\u003c/code\u003e object, either by putting up a GUI to obtain values from a user, or by other means. This interface merely specifies a generic \n\u003ccode\u003eactivate\u003c/code\u003e method that invokes the controller, without regard for how the controller obtains values (\n\u003ci\u003ei.e.\u003c/i\u003e, whether the controller puts up a GUI or merely computes a set of values is irrelevant to this interface). \n\u003cp\u003e Within the \u003ccode\u003eactivate\u003c/code\u003e method, a controller obtains initial values by querying the \u003ccode\u003eIIOMetadata\u003c/code\u003e object\u0027s settings, either using the XML DOM tree or a plug-in specific interface, modifies values by whatever means, then modifies the \u003ccode\u003eIIOMetadata\u003c/code\u003e object\u0027s settings, using either the \u003ccode\u003esetFromTree\u003c/code\u003e or \u003ccode\u003emergeTree\u003c/code\u003e methods, or a plug-in specific interface. In general, applications may expect that when the \u003ccode\u003eactivate\u003c/code\u003e method returns \u003ccode\u003etrue\u003c/code\u003e, the \u003ccode\u003eIIOMetadata\u003c/code\u003e object is ready for use in a write operation. \u003c/p\u003e\n\u003cp\u003e Vendors may choose to provide GUIs for the \u003ccode\u003eIIOMetadata\u003c/code\u003e subclasses they define for a particular plug-in. These can be set up as default controllers in the corresponding \u003ccode\u003eIIOMetadata\u003c/code\u003e subclasses. \u003c/p\u003e\n\u003cp\u003e Alternatively, an algorithmic process such as a database lookup or the parsing of a command line could be used as a controller, in which case the \u003ccode\u003eactivate\u003c/code\u003e method would simply look up or compute the settings, call methods on \u003ccode\u003eIIOMetadata\u003c/code\u003e to set its state, and return \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#setController(javax.imageio.metadata.IIOMetadataController)\"\u003e\u003ccode\u003eIIOMetadata.setController(javax.imageio.metadata.IIOMetadataController)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getController()\"\u003e\u003ccode\u003eIIOMetadata.getController()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getDefaultController()\"\u003e\u003ccode\u003eIIOMetadata.getDefaultController()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#hasController()\"\u003e\u003ccode\u003eIIOMetadata.hasController()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#activateController()\"\u003e\u003ccode\u003eIIOMetadata.activateController()\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}