{
  "packageName": "javax.imageio.metadata",
  "simpleName": "IIOMetadata",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "standardFormatSupported",
      "comment": "A boolean indicating whether the concrete subclass supports the standard metadata format, set via the constructor.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "nativeMetadataFormatName",
      "comment": "The name of the native metadata format for this object, initialized to null and set via the constructor.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "nativeMetadataFormatClassName",
      "comment": "The name of the class implementing IIOMetadataFormat and representing the native metadata format, initialized to null and set via the constructor.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "extraMetadataFormatNames",
      "comment": "An array of names of formats, other than the standard and native formats, that are supported by this plug-in, initialized to null and set via the constructor.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "extraMetadataFormatClassNames",
      "comment": "An array of names of classes implementing IIOMetadataFormat and representing the metadata formats, other than the standard and native formats, that are supported by this plug-in, initialized to null and set via the constructor.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.imageio.metadata.IIOMetadataController",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "defaultController",
      "comment": "An IIOMetadataController that is suggested for use as the controller for this IIOMetadata object. It may be retrieved via getDefaultController. To install the default controller, call setController(getDefaultController()). This instance variable should be set by subclasses that choose to provide their own default controller, usually a GUI, for setting parameters.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataController.html\" title\u003d\"interface in javax.imageio.metadata\"\u003e\u003ccode\u003eIIOMetadataController\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getDefaultController()\"\u003e\u003ccode\u003egetDefaultController()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.imageio.metadata.IIOMetadataController",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "controller",
      "comment": "The IIOMetadataController that will be used to provide settings for this IIOMetadata object when the activateController method is called. This value overrides any default controller, even when null.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataController.html\" title\u003d\"interface in javax.imageio.metadata\"\u003e\u003ccode\u003eIIOMetadataController\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#setController(javax.imageio.metadata.IIOMetadataController)\"\u003e\u003ccode\u003esetController(IIOMetadataController)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#hasController()\"\u003e\u003ccode\u003ehasController()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#activateController()\"\u003e\u003ccode\u003eactivateController()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isStandardMetadataFormatSupported",
      "comment": "Returns true if the standard metadata format is supported by getMetadataFormat, getAsTree, setFromTree, and mergeTree. The default implementation returns the value of the standardFormatSupported instance variable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getAsTree(java.lang.String)\"\u003e\u003ccode\u003egetAsTree(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#setFromTree(java.lang.String,org.w3c.dom.Node)\"\u003e\u003ccode\u003esetFromTree(java.lang.String, org.w3c.dom.Node)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#mergeTree(java.lang.String,org.w3c.dom.Node)\"\u003e\u003ccode\u003emergeTree(java.lang.String, org.w3c.dom.Node)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getMetadataFormat(java.lang.String)\"\u003e\u003ccode\u003egetMetadataFormat(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the standard metadata format is supported."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "isReadOnly",
      "comment": "Returns true if this object does not support the mergeTree, setFromTree, and reset methods.",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if this \n\u003ccode\u003eIIOMetadata\u003c/code\u003e object cannot be modified."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNativeMetadataFormatName",
      "comment": "Returns the name of the \"native\" metadata format for this plug-in, which typically allows for lossless encoding and transmission of the metadata stored in the format handled by this plug-in. If no such format is supported, null will be returned. The structure and contents of the \"native\" metadata format are defined by the plug-in that created this IIOMetadata object. Plug-ins for simple formats will usually create a dummy node for the root, and then a series of child nodes representing individual tags, chunks, or keyword/value pairs. A plug-in may choose whether or not to document its native format. The default implementation returns the value of the nativeMetadataFormatName instance variable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getExtraMetadataFormatNames()\"\u003e\u003ccode\u003egetExtraMetadataFormatNames()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getMetadataFormatNames()\"\u003e\u003ccode\u003egetMetadataFormatNames()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the name of the native format, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getExtraMetadataFormatNames",
      "comment": "Returns an array of Strings containing the names of additional metadata formats, other than the native and standard formats, recognized by this plug-in\u0027s getAsTree, setFromTree, and mergeTree methods. If there are no such additional formats, null is returned. The default implementation returns a clone of the extraMetadataFormatNames instance variable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getAsTree(java.lang.String)\"\u003e\u003ccode\u003egetAsTree(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#setFromTree(java.lang.String,org.w3c.dom.Node)\"\u003e\u003ccode\u003esetFromTree(java.lang.String, org.w3c.dom.Node)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#mergeTree(java.lang.String,org.w3c.dom.Node)\"\u003e\u003ccode\u003emergeTree(java.lang.String, org.w3c.dom.Node)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getNativeMetadataFormatName()\"\u003e\u003ccode\u003egetNativeMetadataFormatName()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getMetadataFormatNames()\"\u003e\u003ccode\u003egetMetadataFormatNames()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an array of \n\u003ccode\u003eString\u003c/code\u003es with length at least 1, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMetadataFormatNames",
      "comment": "Returns an array of Strings containing the names of all metadata formats, including the native and standard formats, recognized by this plug-in\u0027s getAsTree, setFromTree, and mergeTree methods. If there are no such formats, null is returned. The default implementation calls getNativeMetadataFormatName, isStandardMetadataFormatSupported, and getExtraMetadataFormatNames and returns the combined results.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getNativeMetadataFormatName()\"\u003e\u003ccode\u003egetNativeMetadataFormatName()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#isStandardMetadataFormatSupported()\"\u003e\u003ccode\u003eisStandardMetadataFormatSupported()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getExtraMetadataFormatNames()\"\u003e\u003ccode\u003egetExtraMetadataFormatNames()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an array of \n\u003ccode\u003eString\u003c/code\u003es."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.imageio.metadata.IIOMetadataFormat",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "formatName",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMetadataFormat",
      "comment": "Returns an IIOMetadataFormat object describing the given metadata format, or null if no description is available. The supplied name must be one of those returned by getMetadataFormatNames (i.e., either the native format name, the standard format name, or one of those returned by getExtraMetadataFormatNames). The default implementation checks the name against the global standard metadata format name, and returns that format if it is supported. Otherwise, it checks against the native format names followed by any additional format names. If a match is found, it retrieves the name of the IIOMetadataFormat class from nativeMetadataFormatClassName or extraMetadataFormatClassNames as appropriate, and constructs an instance of that class using its getInstance method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eformatName\u003c/code\u003e - the desired metadata format."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eformatName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or is not one of the names recognized by the plug-in.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the class corresponding to the format name cannot be loaded."
        ],
        "return": [
          "an \n\u003ccode\u003eIIOMetadataFormat\u003c/code\u003e object."
        ]
      }
    },
    {
      "returnType": {
        "name": "org.w3c.dom.Node",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "formatName",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getAsTree",
      "comment": "Returns an XML DOM Node object that represents the root of a tree of metadata contained within this object according to the conventions defined by a given metadata format. The names of the available metadata formats may be queried using the getMetadataFormatNames method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getMetadataFormatNames()\"\u003e\u003ccode\u003egetMetadataFormatNames()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#setFromTree(java.lang.String,org.w3c.dom.Node)\"\u003e\u003ccode\u003esetFromTree(java.lang.String, org.w3c.dom.Node)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#mergeTree(java.lang.String,org.w3c.dom.Node)\"\u003e\u003ccode\u003emergeTree(java.lang.String, org.w3c.dom.Node)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eformatName\u003c/code\u003e - the desired metadata format."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eformatName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or is not one of the names returned by \n\u003ccode\u003egetMetadataFormatNames\u003c/code\u003e."
        ],
        "return": [
          "an XML DOM \n\u003ccode\u003eNode\u003c/code\u003e object forming the root of a tree."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.imageio.metadata.IIOInvalidTreeException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "formatName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "org.w3c.dom.Node",
            "type": "Class"
          },
          "name": "root",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "mergeTree",
      "comment": "Alters the internal state of this IIOMetadata object from a tree of XML DOM Nodes whose syntax is defined by the given metadata format. The previous state is altered only as necessary to accommodate the nodes that are present in the given tree. If the tree structure or contents are invalid, an IIOInvalidTreeException will be thrown. As the semantics of how a tree or subtree may be merged with another tree are completely format-specific, plug-in authors may implement this method in whatever manner is most appropriate for the format, including simply replacing all existing state with the contents of the given tree.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getMetadataFormatNames()\"\u003e\u003ccode\u003egetMetadataFormatNames()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getAsTree(java.lang.String)\"\u003e\u003ccode\u003egetAsTree(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#setFromTree(java.lang.String,org.w3c.dom.Node)\"\u003e\u003ccode\u003esetFromTree(java.lang.String, org.w3c.dom.Node)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eformatName\u003c/code\u003e - the desired metadata format.",
          "\u003ccode\u003eroot\u003c/code\u003e - an XML DOM \n\u003ccode\u003eNode\u003c/code\u003e object forming the root of a tree."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if this object is read-only.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eformatName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or is not one of the names returned by \n\u003ccode\u003egetMetadataFormatNames\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eroot\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOInvalidTreeException.html\" title\u003d\"class in javax.imageio.metadata\"\u003eIIOInvalidTreeException\u003c/a\u003e\u003c/code\u003e - if the tree cannot be parsed successfully using the rules of the given format."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.imageio.metadata.IIOMetadataNode",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getStandardChromaNode",
      "comment": "Returns an IIOMetadataNode representing the chroma information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getStandardTree()\"\u003e\u003ccode\u003egetStandardTree()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eIIOMetadataNode\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.imageio.metadata.IIOMetadataNode",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getStandardCompressionNode",
      "comment": "Returns an IIOMetadataNode representing the compression information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getStandardTree()\"\u003e\u003ccode\u003egetStandardTree()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eIIOMetadataNode\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.imageio.metadata.IIOMetadataNode",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getStandardDataNode",
      "comment": "Returns an IIOMetadataNode representing the data format information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getStandardTree()\"\u003e\u003ccode\u003egetStandardTree()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eIIOMetadataNode\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.imageio.metadata.IIOMetadataNode",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getStandardDimensionNode",
      "comment": "Returns an IIOMetadataNode representing the dimension information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getStandardTree()\"\u003e\u003ccode\u003egetStandardTree()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eIIOMetadataNode\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.imageio.metadata.IIOMetadataNode",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getStandardDocumentNode",
      "comment": "Returns an IIOMetadataNode representing the document information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getStandardTree()\"\u003e\u003ccode\u003egetStandardTree()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eIIOMetadataNode\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.imageio.metadata.IIOMetadataNode",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getStandardTextNode",
      "comment": "Returns an IIOMetadataNode representing the textual information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getStandardTree()\"\u003e\u003ccode\u003egetStandardTree()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eIIOMetadataNode\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.imageio.metadata.IIOMetadataNode",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getStandardTileNode",
      "comment": "Returns an IIOMetadataNode representing the tiling information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getStandardTree()\"\u003e\u003ccode\u003egetStandardTree()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eIIOMetadataNode\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.imageio.metadata.IIOMetadataNode",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getStandardTransparencyNode",
      "comment": "Returns an IIOMetadataNode representing the transparency information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an \n\u003ccode\u003eIIOMetadataNode\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.imageio.metadata.IIOMetadataNode",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "getStandardTree",
      "comment": "A utility method to return a tree of IIOMetadataNodes representing the metadata contained within this object according to the conventions of the standard javax_imageio_1.0 metadata format. This method calls the various getStandard*Node methods to supply each of the subtrees rooted at the children of the root node. If any of those methods returns null, the corresponding subtree will be omitted. If all of them return null, a tree consisting of a single root node will be returned.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getStandardChromaNode()\"\u003e\u003ccode\u003egetStandardChromaNode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getStandardCompressionNode()\"\u003e\u003ccode\u003egetStandardCompressionNode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getStandardDataNode()\"\u003e\u003ccode\u003egetStandardDataNode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getStandardDimensionNode()\"\u003e\u003ccode\u003egetStandardDimensionNode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getStandardDocumentNode()\"\u003e\u003ccode\u003egetStandardDocumentNode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getStandardTextNode()\"\u003e\u003ccode\u003egetStandardTextNode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getStandardTileNode()\"\u003e\u003ccode\u003egetStandardTileNode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getStandardTransparencyNode()\"\u003e\u003ccode\u003egetStandardTransparencyNode()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eIIOMetadataNode\u003c/code\u003e representing the root of a metadata tree in the \n\u003ccode\u003ejavax_imageio_1.0\u003c/code\u003e format."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.imageio.metadata.IIOInvalidTreeException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "formatName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "org.w3c.dom.Node",
            "type": "Class"
          },
          "name": "root",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setFromTree",
      "comment": "Sets the internal state of this IIOMetadata object from a tree of XML DOM Nodes whose syntax is defined by the given metadata format. The previous state is discarded. If the tree\u0027s structure or contents are invalid, an IIOInvalidTreeException will be thrown. The default implementation calls reset followed by mergeTree(formatName, root).",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getMetadataFormatNames()\"\u003e\u003ccode\u003egetMetadataFormatNames()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getAsTree(java.lang.String)\"\u003e\u003ccode\u003egetAsTree(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#mergeTree(java.lang.String,org.w3c.dom.Node)\"\u003e\u003ccode\u003emergeTree(java.lang.String, org.w3c.dom.Node)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eformatName\u003c/code\u003e - the desired metadata format.",
          "\u003ccode\u003eroot\u003c/code\u003e - an XML DOM \n\u003ccode\u003eNode\u003c/code\u003e object forming the root of a tree."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if this object is read-only.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eformatName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or is not one of the names returned by \n\u003ccode\u003egetMetadataFormatNames\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eroot\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOInvalidTreeException.html\" title\u003d\"class in javax.imageio.metadata\"\u003eIIOInvalidTreeException\u003c/a\u003e\u003c/code\u003e - if the tree cannot be parsed successfully using the rules of the given format."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "reset",
      "comment": "Resets all the data stored in this object to default values, usually to the state this object was in immediately after construction, though the precise semantics are plug-in specific. Note that there are many possible default values, depending on how the object was created.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageReader.html#getStreamMetadata()\"\u003e\u003ccode\u003eImageReader.getStreamMetadata()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageReader.html#getImageMetadata(int)\"\u003e\u003ccode\u003eImageReader.getImageMetadata(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageWriter.html#getDefaultStreamMetadata(javax.imageio.ImageWriteParam)\"\u003e\u003ccode\u003eImageWriter.getDefaultStreamMetadata(javax.imageio.ImageWriteParam)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageWriter.html#getDefaultImageMetadata(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)\"\u003e\u003ccode\u003eImageWriter.getDefaultImageMetadata(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if this object is read-only."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.imageio.metadata.IIOMetadataController",
            "type": "Class"
          },
          "name": "controller",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setController",
      "comment": "Sets the IIOMetadataController to be used to provide settings for this IIOMetadata object when the activateController method is called, overriding any default controller. If the argument is null, no controller will be used, including any default. To restore the default, use setController(getDefaultController()). The default implementation sets the controller instance variable to the supplied value.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataController.html\" title\u003d\"interface in javax.imageio.metadata\"\u003e\u003ccode\u003eIIOMetadataController\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getController()\"\u003e\u003ccode\u003egetController()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getDefaultController()\"\u003e\u003ccode\u003egetDefaultController()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#hasController()\"\u003e\u003ccode\u003ehasController()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#activateController()\"\u003e\u003ccode\u003eactivateController()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003econtroller\u003c/code\u003e - An appropriate \n\u003ccode\u003eIIOMetadataController\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.imageio.metadata.IIOMetadataController",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getController",
      "comment": "Returns whatever IIOMetadataController is currently installed. This could be the default if there is one, null, or the argument of the most recent call to setController. The default implementation returns the value of the controller instance variable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataController.html\" title\u003d\"interface in javax.imageio.metadata\"\u003e\u003ccode\u003eIIOMetadataController\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#setController(javax.imageio.metadata.IIOMetadataController)\"\u003e\u003ccode\u003esetController(javax.imageio.metadata.IIOMetadataController)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getDefaultController()\"\u003e\u003ccode\u003egetDefaultController()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#hasController()\"\u003e\u003ccode\u003ehasController()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#activateController()\"\u003e\u003ccode\u003eactivateController()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the currently installed \n\u003ccode\u003eIIOMetadataController\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.imageio.metadata.IIOMetadataController",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDefaultController",
      "comment": "Returns the default IIOMetadataController, if there is one, regardless of the currently installed controller. If there is no default controller, returns null. The default implementation returns the value of the defaultController instance variable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataController.html\" title\u003d\"interface in javax.imageio.metadata\"\u003e\u003ccode\u003eIIOMetadataController\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#setController(javax.imageio.metadata.IIOMetadataController)\"\u003e\u003ccode\u003esetController(IIOMetadataController)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getController()\"\u003e\u003ccode\u003egetController()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#hasController()\"\u003e\u003ccode\u003ehasController()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#activateController()\"\u003e\u003ccode\u003eactivateController()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the default \n\u003ccode\u003eIIOMetadataController\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hasController",
      "comment": "Returns true if there is a controller installed for this IIOMetadata object. The default implementation returns true if the getController method returns a non-null value.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataController.html\" title\u003d\"interface in javax.imageio.metadata\"\u003e\u003ccode\u003eIIOMetadataController\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#setController(javax.imageio.metadata.IIOMetadataController)\"\u003e\u003ccode\u003esetController(IIOMetadataController)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getController()\"\u003e\u003ccode\u003egetController()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getDefaultController()\"\u003e\u003ccode\u003egetDefaultController()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#activateController()\"\u003e\u003ccode\u003eactivateController()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if a controller is installed."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "activateController",
      "comment": "Activates the installed IIOMetadataController for this IIOMetadata object and returns the resulting value. When this method returns true, all values for this IIOMetadata object will be ready for the next write operation. If false is returned, no settings in this object will have been disturbed (i.e., the user canceled the operation). Ordinarily, the controller will be a GUI providing a user interface for a subclass of IIOMetadata for a particular plug-in. Controllers need not be GUIs, however. The default implementation calls getController and the calls activate on the returned object if hasController returns true.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadataController.html\" title\u003d\"interface in javax.imageio.metadata\"\u003e\u003ccode\u003eIIOMetadataController\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#setController(javax.imageio.metadata.IIOMetadataController)\"\u003e\u003ccode\u003esetController(IIOMetadataController)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getController()\"\u003e\u003ccode\u003egetController()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#getDefaultController()\"\u003e\u003ccode\u003egetDefaultController()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/metadata/IIOMetadata.html#hasController()\"\u003e\u003ccode\u003ehasController()\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if there is no controller currently installed."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the controller completed normally."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs an empty IIOMetadata object. The subclass is responsible for supplying values for all protected instance variables that will allow any non-overridden default implementations of methods to satisfy their contracts. For example, extraMetadataFormatNames should not have length 0.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "standardMetadataFormatSupported",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "nativeMetadataFormatName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "nativeMetadataFormatClassName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "extraMetadataFormatNames",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "extraMetadataFormatClassNames",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs an IIOMetadata object with the given format names and format class names, as well as a boolean indicating whether the standard format is supported. This constructor does not attempt to check the class names for validity. Invalid class names may cause exceptions in subsequent calls to getMetadataFormat.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003estandardMetadataFormatSupported\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if this object can return or accept a DOM tree using the standard metadata format.",
          "\u003ccode\u003enativeMetadataFormatName\u003c/code\u003e - the name of the native metadata format, as a \n\u003ccode\u003eString\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if there is no native format.",
          "\u003ccode\u003enativeMetadataFormatClassName\u003c/code\u003e - the name of the class of the native metadata format, or \n\u003ccode\u003enull\u003c/code\u003e if there is no native format.",
          "\u003ccode\u003eextraMetadataFormatNames\u003c/code\u003e - an array of \n\u003ccode\u003eString\u003c/code\u003es indicating additional formats supported by this object, or \n\u003ccode\u003enull\u003c/code\u003e if there are none.",
          "\u003ccode\u003eextraMetadataFormatClassNames\u003c/code\u003e - an array of \n\u003ccode\u003eString\u003c/code\u003es indicating the class names of any additional formats supported by this object, or \n\u003ccode\u003enull\u003c/code\u003e if there are none."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eextraMetadataFormatNames\u003c/code\u003e has length 0.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eextraMetadataFormatNames\u003c/code\u003e and \n\u003ccode\u003eextraMetadataFormatClassNames\u003c/code\u003e are neither both \n\u003ccode\u003enull\u003c/code\u003e, nor of the same length."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.imageio.metadata.IIOMetadata",
  "comment": "An abstract class to be extended by objects that represent metadata (non-image data) associated with images and streams. Plug-ins represent metadata using opaque, plug-in specific objects. These objects, however, provide the ability to access their internal information as a tree of \n\u003ccode\u003eIIOMetadataNode\u003c/code\u003e objects that support the XML DOM interfaces as well as additional interfaces for storing non-textual data and retrieving information about legal data values. The format of such trees is plug-in dependent, but plug-ins may choose to support a plug-in neutral format described below. A single plug-in may support multiple metadata formats, whose names maybe determined by calling \n\u003ccode\u003egetMetadataFormatNames\u003c/code\u003e. The plug-in may also support a single special format, referred to as the \"native\" format, which is designed to encode its metadata losslessly. This format will typically be designed specifically to work with a specific file format, so that images may be loaded and saved in the same format with no loss of metadata, but may be less useful for transferring metadata between an \n\u003ccode\u003eImageReader\u003c/code\u003e and an \n\u003ccode\u003eImageWriter\u003c/code\u003e for different image formats. To convert between two native formats as losslessly as the image file formats will allow, an \n\u003ccode\u003eImageTranscoder\u003c/code\u003e object must be used.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageReader.html#getImageMetadata(int)\"\u003e\u003ccode\u003eImageReader.getImageMetadata(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageReader.html#getStreamMetadata()\"\u003e\u003ccode\u003eImageReader.getStreamMetadata()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageReader.html#readAll(int,javax.imageio.ImageReadParam)\"\u003e\u003ccode\u003eImageReader.readAll(int, javax.imageio.ImageReadParam)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageWriter.html#getDefaultStreamMetadata(javax.imageio.ImageWriteParam)\"\u003e\u003ccode\u003eImageWriter.getDefaultStreamMetadata(javax.imageio.ImageWriteParam)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageWriter.html#getDefaultImageMetadata(javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)\"\u003e\u003ccode\u003eImageWriter.getDefaultImageMetadata(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageWriter.html#write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)\"\u003e\u003ccode\u003eImageWriter.write(javax.imageio.metadata.IIOMetadata, javax.imageio.IIOImage, javax.imageio.ImageWriteParam)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageTranscoder.html#convertImageMetadata(javax.imageio.metadata.IIOMetadata,javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)\"\u003e\u003ccode\u003eImageTranscoder.convertImageMetadata(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageTranscoder.html#convertStreamMetadata(javax.imageio.metadata.IIOMetadata,javax.imageio.ImageWriteParam)\"\u003e\u003ccode\u003eImageTranscoder.convertStreamMetadata(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageWriteParam)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/IIOImage.html\" title\u003d\"class in javax.imageio\"\u003e\u003ccode\u003eIIOImage\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageTranscoder.html\" title\u003d\"interface in javax.imageio\"\u003e\u003ccode\u003eImageTranscoder\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}