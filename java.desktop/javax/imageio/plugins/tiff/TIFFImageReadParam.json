{
  "packageName": "javax.imageio.plugins.tiff",
  "simpleName": "TIFFImageReadParam",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.imageio.ImageReadParam",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.imageio.plugins.tiff.TIFFTagSet",
            "type": "Class"
          },
          "field": {
            "name": "tagSet"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addAllowedTagSet",
      "comment": "Adds a TIFFTagSet object to the list of allowed tag sets. Attempting to add a duplicate object to the list has no effect.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etagSet\u003c/code\u003e - a \n\u003ccode\u003eTIFFTagSet\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etagSet\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.imageio.plugins.tiff.TIFFTagSet",
            "type": "Class"
          },
          "field": {
            "name": "tagSet"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeAllowedTagSet",
      "comment": "Removes a TIFFTagSet object from the list of allowed tag sets. Removal is based on the equals method of the TIFFTagSet, which is normally defined as reference equality.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etagSet\u003c/code\u003e - a \n\u003ccode\u003eTIFFTagSet\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etagSet\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.imageio.plugins.tiff.TIFFTagSet",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAllowedTagSets",
      "comment": "Returns a List containing the allowed TIFFTagSet objects.",
      "tagMap": {
        "return": [
          "a \n\u003ccode\u003eList\u003c/code\u003e of \n\u003ccode\u003eTIFFTagSet\u003c/code\u003es."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "readUnknownTags"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setReadUnknownTags",
      "comment": "Set whether to read fields corresponding to TIFFTags not in the allowed TIFFTagSets. The default setting is false. If the TIFF ImageReader is ignoring metadata, then a setting of true is overridden as all metadata are ignored except those essential to reading the image itself.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ereadUnknownTags\u003c/code\u003e - Whether to read fields of unrecognized tags"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getReadUnknownTags",
      "comment": "Retrieve the setting of whether to read fields corresponding to unknown TIFFTags.",
      "tagMap": {
        "return": [
          "Whether to read fields of unrecognized tags"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a TIFFImageReadParam. Tags defined by the TIFFTagSets BaselineTIFFTagSet, FaxTIFFTagSet, ExifParentTIFFTagSet, and GeoTIFFTagSet will be supported.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.html\" title\u003d\"class in javax.imageio.plugins.tiff\"\u003e\u003ccode\u003eBaselineTIFFTagSet\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/plugins/tiff/FaxTIFFTagSet.html\" title\u003d\"class in javax.imageio.plugins.tiff\"\u003e\u003ccode\u003eFaxTIFFTagSet\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/plugins/tiff/ExifParentTIFFTagSet.html\" title\u003d\"class in javax.imageio.plugins.tiff\"\u003e\u003ccode\u003eExifParentTIFFTagSet\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/plugins/tiff/GeoTIFFTagSet.html\" title\u003d\"class in javax.imageio.plugins.tiff\"\u003e\u003ccode\u003eGeoTIFFTagSet\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "javax.imageio.plugins.tiff.TIFFImageReadParam",
  "comment": "A subclass of \n\u003ca href\u003d\"../../ImageReadParam.html\" title\u003d\"class in javax.imageio\"\u003e\u003ccode\u003eImageReadParam\u003c/code\u003e\u003c/a\u003e allowing control over the TIFF reading process. \n\u003cp\u003e Because TIFF is an extensible format, the reader requires information about any tags used by TIFF extensions in order to emit meaningful metadata. Also, TIFF extensions may define new compression types. Both types of information about extensions may be provided by this interface. \u003c/p\u003e\n\u003cp\u003e Additional TIFF tags must be organized into \u003ccode\u003eTIFFTagSet\u003c/code\u003es. A \u003ccode\u003eTIFFTagSet\u003c/code\u003e may be provided to the reader by means of the \u003ccode\u003eaddAllowedTagSet\u003c/code\u003e method. By default, the tag sets \u003ccode\u003eBaselineTIFFTagSet\u003c/code\u003e, \u003ccode\u003eFaxTIFFTagSet\u003c/code\u003e, \u003ccode\u003eExifParentTIFFTagSet\u003c/code\u003e, and \u003ccode\u003eGeoTIFFTagSet\u003c/code\u003e are included. \u003c/p\u003e\n\u003cp\u003e Forcing reading of fields corresponding to \u003ccode\u003eTIFFTag\u003c/code\u003es not in any of the allowed \u003ccode\u003eTIFFTagSet\u003c/code\u003es may be effected via \u003ca href\u003d\"#setReadUnknownTags(boolean)\"\u003e\u003ccode\u003esetReadUnknownTags\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "9"
    ]
  }
}