{
  "packageName": "javax.imageio.event",
  "simpleName": "IIOReadProgressListener",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.util.EventListener",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.imageio.ImageReader",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "minIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "sequenceStarted",
      "comment": "Reports that a sequence of read operations is beginning. ImageReader implementations are required to call this method exactly once from their readAll(Iterator) method.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eImageReader\u003c/code\u003e object calling this method.",
          "\u003ccode\u003eminIndex\u003c/code\u003e - the index of the first image to be read."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.imageio.ImageReader",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "sequenceComplete",
      "comment": "Reports that a sequence of read operations has completed. ImageReader implementations are required to call this method exactly once from their readAll(Iterator) method.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eImageReader\u003c/code\u003e object calling this method."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.imageio.ImageReader",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "imageIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "imageStarted",
      "comment": "Reports that an image read operation is beginning. All ImageReader implementations are required to call this method exactly once when beginning an image read operation.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eImageReader\u003c/code\u003e object calling this method.",
          "\u003ccode\u003eimageIndex\u003c/code\u003e - the index of the image being read within its containing input file or stream."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.imageio.ImageReader",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "percentageDone"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "imageProgress",
      "comment": "Reports the approximate degree of completion of the current read call of the associated ImageReader. The degree of completion is expressed as a percentage varying from 0.0F to 100.0F. The percentage should ideally be calculated in terms of the remaining time to completion, but it is usually more practical to use a more well-defined metric such as pixels decoded or portion of input stream consumed. In any case, a sequence of calls to this method during a given read operation should supply a monotonically increasing sequence of percentage values. It is not necessary to supply the exact values 0 and 100, as these may be inferred by the callee from other methods. Each particular ImageReader implementation may call this method at whatever frequency it desires. A rule of thumb is to call it around each 5 percent mark.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eImageReader\u003c/code\u003e object calling this method.",
          "\u003ccode\u003epercentageDone\u003c/code\u003e - the approximate percentage of decoding that has been completed."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.imageio.ImageReader",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "imageComplete",
      "comment": "Reports that the current image read operation has completed. All ImageReader implementations are required to call this method exactly once upon completion of each image read operation.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eImageReader\u003c/code\u003e object calling this method."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.imageio.ImageReader",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "imageIndex"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "thumbnailIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "thumbnailStarted",
      "comment": "Reports that a thumbnail read operation is beginning. All ImageReader implementations are required to call this method exactly once when beginning a thumbnail read operation.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eImageReader\u003c/code\u003e object calling this method.",
          "\u003ccode\u003eimageIndex\u003c/code\u003e - the index of the image being read within its containing input file or stream.",
          "\u003ccode\u003ethumbnailIndex\u003c/code\u003e - the index of the thumbnail being read."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.imageio.ImageReader",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "percentageDone"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "thumbnailProgress",
      "comment": "Reports the approximate degree of completion of the current getThumbnail call within the associated ImageReader. The semantics are identical to those of imageProgress.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eImageReader\u003c/code\u003e object calling this method.",
          "\u003ccode\u003epercentageDone\u003c/code\u003e - the approximate percentage of decoding that has been completed."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.imageio.ImageReader",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "thumbnailComplete",
      "comment": "Reports that a thumbnail read operation has completed. All ImageReader implementations are required to call this method exactly once upon completion of each thumbnail read operation.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eImageReader\u003c/code\u003e object calling this method."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.imageio.ImageReader",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "readAborted",
      "comment": "Reports that a read has been aborted via the reader\u0027s abort method. No further notifications will be given.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eImageReader\u003c/code\u003e object calling this method."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.imageio.event.IIOReadProgressListener",
  "comment": "An interface used by \n\u003ccode\u003eImageReader\u003c/code\u003e implementations to notify callers of their image and thumbnail reading methods of progress. \n\u003cp\u003e This interface receives general indications of decoding progress (via the \u003ccode\u003eimageProgress\u003c/code\u003e and \u003ccode\u003ethumbnailProgress\u003c/code\u003e methods), and events indicating when an entire image has been updated (via the \u003ccode\u003eimageStarted\u003c/code\u003e, \u003ccode\u003eimageComplete\u003c/code\u003e, \u003ccode\u003ethumbnailStarted\u003c/code\u003e and \u003ccode\u003ethumbnailComplete\u003c/code\u003e methods). Applications that wish to be informed of pixel updates as they happen (for example, during progressive decoding), should provide an \u003ccode\u003eIIOReadUpdateListener\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/event/IIOReadUpdateListener.html\" title\u003d\"interface in javax.imageio.event\"\u003e\u003ccode\u003eIIOReadUpdateListener\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageReader.html#addIIOReadProgressListener(javax.imageio.event.IIOReadProgressListener)\"\u003e\u003ccode\u003eImageReader.addIIOReadProgressListener(javax.imageio.event.IIOReadProgressListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageReader.html#removeIIOReadProgressListener(javax.imageio.event.IIOReadProgressListener)\"\u003e\u003ccode\u003eImageReader.removeIIOReadProgressListener(javax.imageio.event.IIOReadProgressListener)\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}