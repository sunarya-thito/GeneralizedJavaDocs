{
  "packageName": "javax.imageio.event",
  "simpleName": "IIOReadUpdateListener",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.util.EventListener",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "passStarted",
      "comment": "Reports that the current read operation is about to begin a progressive pass. Readers of formats that support progressive encoding should use this to notify clients when each pass is completed when reading a progressively encoded image. An estimate of the area that will be updated by the pass is indicated by the minX, minY, width, and height parameters. If the pass is interlaced, that is, it only updates selected rows or columns, the periodX and periodY parameters will indicate the degree of subsampling. The set of bands that may be affected is indicated by the value of bands.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eImageReader\u003c/code\u003e object calling this method.",
          "\u003ccode\u003etheImage\u003c/code\u003e - the \n\u003ccode\u003eBufferedImage\u003c/code\u003e being updated.",
          "\u003ccode\u003epass\u003c/code\u003e - the number of the pass that is about to begin, starting with 0.",
          "\u003ccode\u003eminPass\u003c/code\u003e - the index of the first pass that will be decoded.",
          "\u003ccode\u003emaxPass\u003c/code\u003e - the index of the last pass that will be decoded.",
          "\u003ccode\u003eminX\u003c/code\u003e - the X coordinate of the leftmost updated column of pixels.",
          "\u003ccode\u003eminY\u003c/code\u003e - the Y coordinate of the uppermost updated row of pixels.",
          "\u003ccode\u003eperiodX\u003c/code\u003e - the horizontal spacing between updated pixels; a value of 1 means no gaps.",
          "\u003ccode\u003eperiodY\u003c/code\u003e - the vertical spacing between updated pixels; a value of 1 means no gaps.",
          "\u003ccode\u003ebands\u003c/code\u003e - an array of \n\u003ccode\u003eint\u003c/code\u003es indicating the set bands that may be updated."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "imageUpdate",
      "comment": "Reports that a given region of the image has been updated. The application might choose to redisplay the specified area, for example, in order to provide a progressive display effect, or perform other incremental processing. Note that different image format readers may produce decoded pixels in a variety of different orders. Many readers will produce pixels in a simple top-to-bottom, left-to-right-order, but others may use multiple passes of interlacing, tiling, etc. The sequence of updates may even differ from call to call depending on network speeds, for example. A call to this method does not guarantee that all the specified pixels have actually been updated, only that some activity has taken place within some subregion of the one specified. The particular ImageReader implementation may choose how often to provide updates. Each update specifies that a given region of the image has been updated since the last update. A region is described by its spatial bounding box (minX, minY, width, and height); X and Y subsampling factors (periodX and periodY); and a set of updated bands (bands). For example, the update:  minX \u003d 10\n minY \u003d 20\n width \u003d 3\n height \u003d 4\n periodX \u003d 2\n periodY \u003d 3\n bands \u003d { 1, 3 }\n would indicate that bands 1 and 3 of the following pixels were updated:  (10, 20) (12, 20) (14, 20)\n (10, 23) (12, 23) (14, 23)\n (10, 26) (12, 26) (14, 26)\n (10, 29) (12, 29) (14, 29)",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eImageReader\u003c/code\u003e object calling this method.",
          "\u003ccode\u003etheImage\u003c/code\u003e - the \n\u003ccode\u003eBufferedImage\u003c/code\u003e being updated.",
          "\u003ccode\u003eminX\u003c/code\u003e - the X coordinate of the leftmost updated column of pixels.",
          "\u003ccode\u003eminY\u003c/code\u003e - the Y coordinate of the uppermost updated row of pixels.",
          "\u003ccode\u003ewidth\u003c/code\u003e - the number of updated pixels horizontally.",
          "\u003ccode\u003eheight\u003c/code\u003e - the number of updated pixels vertically.",
          "\u003ccode\u003eperiodX\u003c/code\u003e - the horizontal spacing between updated pixels; a value of 1 means no gaps.",
          "\u003ccode\u003eperiodY\u003c/code\u003e - the vertical spacing between updated pixels; a value of 1 means no gaps.",
          "\u003ccode\u003ebands\u003c/code\u003e - an array of \n\u003ccode\u003eint\u003c/code\u003es indicating which bands are being updated."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "passComplete",
      "comment": "Reports that the current read operation has completed a progressive pass. Readers of formats that support progressive encoding should use this to notify clients when each pass is completed when reading a progressively encoded image.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageReadParam.html#setSourceProgressivePasses(int,int)\"\u003e\u003ccode\u003eImageReadParam.setSourceProgressivePasses(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eImageReader\u003c/code\u003e object calling this method.",
          "\u003ccode\u003etheImage\u003c/code\u003e - the \n\u003ccode\u003eBufferedImage\u003c/code\u003e being updated."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "thumbnailPassStarted",
      "comment": "Reports that the current thumbnail read operation is about to begin a progressive pass. Readers of formats that support progressive encoding should use this to notify clients when each pass is completed when reading a progressively encoded thumbnail image.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/event/IIOReadUpdateListener.html#passStarted(javax.imageio.ImageReader,java.awt.image.BufferedImage,int,int,int,int,int,int,int,int%5B%5D)\"\u003e\u003ccode\u003epassStarted(javax.imageio.ImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int, int[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eImageReader\u003c/code\u003e object calling this method.",
          "\u003ccode\u003etheThumbnail\u003c/code\u003e - the \n\u003ccode\u003eBufferedImage\u003c/code\u003e thumbnail being updated.",
          "\u003ccode\u003epass\u003c/code\u003e - the number of the pass that is about to begin, starting with 0.",
          "\u003ccode\u003eminPass\u003c/code\u003e - the index of the first pass that will be decoded.",
          "\u003ccode\u003emaxPass\u003c/code\u003e - the index of the last pass that will be decoded.",
          "\u003ccode\u003eminX\u003c/code\u003e - the X coordinate of the leftmost updated column of pixels.",
          "\u003ccode\u003eminY\u003c/code\u003e - the Y coordinate of the uppermost updated row of pixels.",
          "\u003ccode\u003eperiodX\u003c/code\u003e - the horizontal spacing between updated pixels; a value of 1 means no gaps.",
          "\u003ccode\u003eperiodY\u003c/code\u003e - the vertical spacing between updated pixels; a value of 1 means no gaps.",
          "\u003ccode\u003ebands\u003c/code\u003e - an array of \n\u003ccode\u003eint\u003c/code\u003es indicating the set bands that may be updated."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "thumbnailUpdate",
      "comment": "Reports that a given region of a thumbnail image has been updated. The application might choose to redisplay the specified area, for example, in order to provide a progressive display effect, or perform other incremental processing.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/event/IIOReadUpdateListener.html#imageUpdate(javax.imageio.ImageReader,java.awt.image.BufferedImage,int,int,int,int,int,int,int%5B%5D)\"\u003e\u003ccode\u003eimageUpdate(javax.imageio.ImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eImageReader\u003c/code\u003e object calling this method.",
          "\u003ccode\u003etheThumbnail\u003c/code\u003e - the \n\u003ccode\u003eBufferedImage\u003c/code\u003e thumbnail being updated.",
          "\u003ccode\u003eminX\u003c/code\u003e - the X coordinate of the leftmost updated column of pixels.",
          "\u003ccode\u003eminY\u003c/code\u003e - the Y coordinate of the uppermost updated row of pixels.",
          "\u003ccode\u003ewidth\u003c/code\u003e - the number of updated pixels horizontally.",
          "\u003ccode\u003eheight\u003c/code\u003e - the number of updated pixels vertically.",
          "\u003ccode\u003eperiodX\u003c/code\u003e - the horizontal spacing between updated pixels; a value of 1 means no gaps.",
          "\u003ccode\u003eperiodY\u003c/code\u003e - the vertical spacing between updated pixels; a value of 1 means no gaps.",
          "\u003ccode\u003ebands\u003c/code\u003e - an array of \n\u003ccode\u003eint\u003c/code\u003es indicating which bands are being updated."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "thumbnailPassComplete",
      "comment": "Reports that the current thumbnail read operation has completed a progressive pass. Readers of formats that support progressive encoding should use this to notify clients when each pass is completed when reading a progressively encoded thumbnail image.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/event/IIOReadUpdateListener.html#passComplete(javax.imageio.ImageReader,java.awt.image.BufferedImage)\"\u003e\u003ccode\u003epassComplete(javax.imageio.ImageReader, java.awt.image.BufferedImage)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eImageReader\u003c/code\u003e object calling this method.",
          "\u003ccode\u003etheThumbnail\u003c/code\u003e - the \n\u003ccode\u003eBufferedImage\u003c/code\u003e thumbnail being updated."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.imageio.event.IIOReadUpdateListener",
  "comment": "An interface used by \n\u003ccode\u003eImageReader\u003c/code\u003e implementations to notify callers of their image and thumbnail reading methods of pixel updates.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageReader.html#addIIOReadUpdateListener(javax.imageio.event.IIOReadUpdateListener)\"\u003e\u003ccode\u003eImageReader.addIIOReadUpdateListener(javax.imageio.event.IIOReadUpdateListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/ImageReader.html#removeIIOReadUpdateListener(javax.imageio.event.IIOReadUpdateListener)\"\u003e\u003ccode\u003eImageReader.removeIIOReadUpdateListener(javax.imageio.event.IIOReadUpdateListener)\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}