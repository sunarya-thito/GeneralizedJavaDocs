{
  "packageName": "javax.imageio.spi",
  "simpleName": "IIOServiceProvider",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "vendorName",
      "comment": "A String to be returned from getVendorName, initially null. Constructors should set this to a non-null value.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "version",
      "comment": "A String to be returned from getVersion, initially null. Constructors should set this to a non-null value.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.imageio.spi.ServiceRegistry",
            "type": "Class"
          },
          "field": {
            "name": "registry"
          }
        },
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "category"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "onRegistration",
      "comment": "A callback that will be called exactly once after the Spi class has been instantiated and registered in a ServiceRegistry. This may be used to verify that the environment is suitable for this service, for example that native libraries can be loaded. If the service cannot function in the environment where it finds itself, it should deregister itself from the registry. Only the registry should call this method. The default implementation does nothing.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/spi/ServiceRegistry.html#registerServiceProvider(java.lang.Object)\"\u003e\u003ccode\u003eServiceRegistry.registerServiceProvider(Object provider)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/spi/RegisterableService.html#onRegistration(javax.imageio.spi.ServiceRegistry,java.lang.Class)\"\u003eonRegistration\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/spi/RegisterableService.html\" title\u003d\"interface in javax.imageio.spi\"\u003eRegisterableService\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eregistry\u003c/code\u003e - a \n\u003ccode\u003eServiceRegistry\u003c/code\u003e where this object has been registered.",
          "\u003ccode\u003ecategory\u003c/code\u003e - a \n\u003ccode\u003eClass\u003c/code\u003e object indicating the registry category under which this object has been registered."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.imageio.spi.ServiceRegistry",
            "type": "Class"
          },
          "field": {
            "name": "registry"
          }
        },
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "category"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "onDeregistration",
      "comment": "A callback that will be whenever the Spi class has been deregistered from a ServiceRegistry. Only the registry should call this method. The default implementation does nothing.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/spi/ServiceRegistry.html#deregisterServiceProvider(java.lang.Object)\"\u003e\u003ccode\u003eServiceRegistry.deregisterServiceProvider(Object provider)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/spi/RegisterableService.html#onDeregistration(javax.imageio.spi.ServiceRegistry,java.lang.Class)\"\u003eonDeregistration\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/spi/RegisterableService.html\" title\u003d\"interface in javax.imageio.spi\"\u003eRegisterableService\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eregistry\u003c/code\u003e - a \n\u003ccode\u003eServiceRegistry\u003c/code\u003e from which this object is being (wholly or partially) deregistered.",
          "\u003ccode\u003ecategory\u003c/code\u003e - a \n\u003ccode\u003eClass\u003c/code\u003e object indicating the registry category from which this object is being deregistered."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getVendorName",
      "comment": "Returns the name of the vendor responsible for creating this service provider and its associated implementation. Because the vendor name may be used to select a service provider, it is not localized. The default implementation returns the value of the vendorName instance variable.",
      "tagMap": {
        "return": [
          "a non-\n\u003ccode\u003enull String\u003c/code\u003e containing the name of the vendor."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getVersion",
      "comment": "Returns a string describing the version number of this service provider and its associated implementation. Because the version may be used by transcoders to identify the service providers they understand, this method is not localized. The default implementation returns the value of the version instance variable.",
      "tagMap": {
        "return": [
          "a non-\n\u003ccode\u003enull String\u003c/code\u003e containing the version of this service provider."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "locale"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getDescription",
      "comment": "Returns a brief, human-readable description of this service provider and its associated implementation. The resulting string should be localized for the supplied Locale, if possible.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elocale\u003c/code\u003e - a \n\u003ccode\u003eLocale\u003c/code\u003e for which the return value should be localized."
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e containing a description of this service provider."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "vendorName"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "version"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an IIOServiceProvider with a given vendor name and version identifier.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evendorName\u003c/code\u003e - the vendor name.",
          "\u003ccode\u003eversion\u003c/code\u003e - a version identifier."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003evendorName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eversion\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a blank IIOServiceProvider. It is up to the subclass to initialize instance variables and/or override method implementations in order to ensure that the getVendorName and getVersion methods will return non-null values.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.imageio.spi.IIOServiceProvider",
  "comment": "A superinterface for functionality common to all Image I/O service provider interfaces (SPIs). For more information on service provider classes, see the class comment for the \n\u003ccode\u003eIIORegistry\u003c/code\u003e class.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/spi/IIORegistry.html\" title\u003d\"class in javax.imageio.spi\"\u003e\u003ccode\u003eIIORegistry\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/spi/ImageReaderSpi.html\" title\u003d\"class in javax.imageio.spi\"\u003e\u003ccode\u003eImageReaderSpi\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/spi/ImageWriterSpi.html\" title\u003d\"class in javax.imageio.spi\"\u003e\u003ccode\u003eImageWriterSpi\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/spi/ImageTranscoderSpi.html\" title\u003d\"class in javax.imageio.spi\"\u003e\u003ccode\u003eImageTranscoderSpi\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/spi/ImageInputStreamSpi.html\" title\u003d\"class in javax.imageio.spi\"\u003e\u003ccode\u003eImageInputStreamSpi\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/imageio/spi/ImageOutputStreamSpi.html\" title\u003d\"class in javax.imageio.spi\"\u003e\u003ccode\u003eImageOutputStreamSpi\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}