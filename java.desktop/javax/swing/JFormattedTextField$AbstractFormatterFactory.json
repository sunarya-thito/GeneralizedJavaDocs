{
  "packageName": "javax.swing",
  "simpleName": "AbstractFormatterFactory",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.swing.JFormattedTextField$AbstractFormatter",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JFormattedTextField",
            "type": "Class"
          },
          "field": {
            "name": "tf"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getFormatter",
      "comment": "Returns an AbstractFormatter that can handle formatting of the passed in JFormattedTextField.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etf\u003c/code\u003e - JFormattedTextField requesting AbstractFormatter"
        ],
        "return": [
          "AbstractFormatter to handle formatting duties, a null return value implies the JFormattedTextField should behave like a normal JTextField"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for subclasses to call.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1033,
  "name": "javax.swing.JFormattedTextField$AbstractFormatterFactory",
  "comment": "Instances of \n\u003ccode\u003eAbstractFormatterFactory\u003c/code\u003e are used by \n\u003ccode\u003eJFormattedTextField\u003c/code\u003e to obtain instances of \n\u003ccode\u003eAbstractFormatter\u003c/code\u003e which in turn are used to format values. \n\u003ccode\u003eAbstractFormatterFactory\u003c/code\u003e can return different \n\u003ccode\u003eAbstractFormatter\u003c/code\u003es based on the state of the \n\u003ccode\u003eJFormattedTextField\u003c/code\u003e, perhaps returning different \n\u003ccode\u003eAbstractFormatter\u003c/code\u003es when the \n\u003ccode\u003eJFormattedTextField\u003c/code\u003e has focus vs when it doesn\u0027t have focus.",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}