{
  "packageName": "javax.swing",
  "simpleName": "UIDefaults",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.Hashtable",
    "parameters": [
      {
        "name": "java.lang.Object",
        "type": "Class"
      },
      {
        "name": "java.lang.Object",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "get",
      "comment": "Returns the value for key. If the value is a UIDefaults.LazyValue then the real value is computed with LazyValue.createValue(), the table entry is replaced, and the real value is returned. If the value is an UIDefaults.ActiveValue the table entry is not replaced - the value is computed with ActiveValue.createValue() for each get() call. If the key is not found in the table then it is searched for in the list of resource bundles maintained by this object. The resource bundles are searched most recently added first using the locale returned by getDefaultLocale. LazyValues and ActiveValues are not supported in the resource bundles.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.LazyValue.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eUIDefaults.LazyValue\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.ActiveValue.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eUIDefaults.ActiveValue\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Hashtable.html#get(java.lang.Object)\"\u003e\u003ccode\u003eHashtable.get(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#getDefaultLocale()\"\u003e\u003ccode\u003egetDefaultLocale()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#addResourceBundle(java.lang.String)\"\u003e\u003ccode\u003eaddResourceBundle(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Hashtable.html#get(java.lang.Object)\"\u003eget\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Hashtable.html\" title\u003d\"class in java.util\"\u003eHashtable\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#get(java.lang.Object)\"\u003eget\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key"
        ],
        "return": [
          "the value for \n\u003ccode\u003ekey\u003c/code\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "get",
      "comment": "Returns the value for key associated with the given locale. If the value is a UIDefaults.LazyValue then the real value is computed with LazyValue.createValue(), the table entry is replaced, and the real value is returned. If the value is an UIDefaults.ActiveValue the table entry is not replaced - the value is computed with ActiveValue.createValue() for each get() call. If the key is not found in the table then it is searched for in the list of resource bundles maintained by this object. The resource bundles are searched most recently added first using the given locale. LazyValues and ActiveValues are not supported in the resource bundles.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.LazyValue.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eUIDefaults.LazyValue\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.ActiveValue.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eUIDefaults.ActiveValue\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Hashtable.html#get(java.lang.Object)\"\u003e\u003ccode\u003eHashtable.get(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#addResourceBundle(java.lang.String)\"\u003e\u003ccode\u003eaddResourceBundle(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key",
          "\u003ccode\u003el\u003c/code\u003e - the desired \n\u003ccode\u003elocale\u003c/code\u003e"
        ],
        "return": [
          "the value for \n\u003ccode\u003ekey\u003c/code\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "put",
      "comment": "Sets the value of key to value for all locales. If key is a string and the new value isn\u0027t equal to the old one, fire a PropertyChangeEvent. If value is null, the key is removed from the table.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#putDefaults(java.lang.Object%5B%5D)\"\u003e\u003ccode\u003eputDefaults(java.lang.Object[])\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Hashtable.html#put(K,V)\"\u003e\u003ccode\u003eHashtable.put(K, V)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Hashtable.html#put(K,V)\"\u003eput\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Hashtable.html\" title\u003d\"class in java.util\"\u003eHashtable\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#put(K,V)\"\u003eput\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the unique \n\u003ccode\u003eObject\u003c/code\u003e who\u0027s value will be used to retrieve the data value associated with it",
          "\u003ccode\u003evalue\u003c/code\u003e - the new \n\u003ccode\u003eObject\u003c/code\u003e to store as data under that key"
        ],
        "return": [
          "the previous \n\u003ccode\u003eObject\u003c/code\u003e value, or \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "keyValueList"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "putDefaults",
      "comment": "Puts all of the key/value pairs in the database and unconditionally generates one PropertyChangeEvent. The events oldValue and newValue will be null and its propertyName will be \"UIDefaults\". The key/value pairs are added for all locales.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#put(java.lang.Object,java.lang.Object)\"\u003e\u003ccode\u003eput(java.lang.Object, java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Hashtable.html#put(K,V)\"\u003e\u003ccode\u003eHashtable.put(K, V)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekeyValueList\u003c/code\u003e - an array of key/value pairs"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Font",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getFont",
      "comment": "If the value of key is a Font return it, otherwise return null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e is a \n\u003ccode\u003eFont\u003c/code\u003e, return the \n\u003ccode\u003eFont\u003c/code\u003e object; otherwise return \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Font",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getFont",
      "comment": "If the value of key for the given Locale is a Font return it, otherwise return null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key",
          "\u003ccode\u003el\u003c/code\u003e - the desired locale"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e and \n\u003ccode\u003eLocale\u003c/code\u003e is a \n\u003ccode\u003eFont\u003c/code\u003e, return the \n\u003ccode\u003eFont\u003c/code\u003e object; otherwise return \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColor",
      "comment": "If the value of key is a Color return it, otherwise return null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e is a \n\u003ccode\u003eColor\u003c/code\u003e, return the \n\u003ccode\u003eColor\u003c/code\u003e object; otherwise return \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColor",
      "comment": "If the value of key for the given Locale is a Color return it, otherwise return null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key",
          "\u003ccode\u003el\u003c/code\u003e - the desired locale"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e and \n\u003ccode\u003eLocale\u003c/code\u003e is a \n\u003ccode\u003eColor\u003c/code\u003e, return the \n\u003ccode\u003eColor\u003c/code\u003e object; otherwise return \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.Icon",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIcon",
      "comment": "If the value of key is an Icon return it, otherwise return null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e is an \n\u003ccode\u003eIcon\u003c/code\u003e, return the \n\u003ccode\u003eIcon\u003c/code\u003e object; otherwise return \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.Icon",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIcon",
      "comment": "If the value of key for the given Locale is an Icon return it, otherwise return null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key",
          "\u003ccode\u003el\u003c/code\u003e - the desired locale"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e and \n\u003ccode\u003eLocale\u003c/code\u003e is an \n\u003ccode\u003eIcon\u003c/code\u003e, return the \n\u003ccode\u003eIcon\u003c/code\u003e object; otherwise return \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBorder",
      "comment": "If the value of key is a Border return it, otherwise return null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e is a \n\u003ccode\u003eBorder\u003c/code\u003e, return the \n\u003ccode\u003eBorder\u003c/code\u003e object; otherwise return \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBorder",
      "comment": "If the value of key for the given Locale is a Border return it, otherwise return null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key",
          "\u003ccode\u003el\u003c/code\u003e - the desired locale"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e and \n\u003ccode\u003eLocale\u003c/code\u003e is a \n\u003ccode\u003eBorder\u003c/code\u003e, return the \n\u003ccode\u003eBorder\u003c/code\u003e object; otherwise return \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getString",
      "comment": "If the value of key is a String return it, otherwise return null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e is a \n\u003ccode\u003eString\u003c/code\u003e, return the \n\u003ccode\u003eString\u003c/code\u003e object; otherwise return \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getString",
      "comment": "If the value of key for the given Locale is a String return it, otherwise return null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key",
          "\u003ccode\u003el\u003c/code\u003e - the desired \n\u003ccode\u003eLocale\u003c/code\u003e"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e for the given \n\u003ccode\u003eLocale\u003c/code\u003e is a \n\u003ccode\u003eString\u003c/code\u003e, return the \n\u003ccode\u003eString\u003c/code\u003e object; otherwise return \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getInt",
      "comment": "If the value of key is an Integer return its integer value, otherwise return 0.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e is an \n\u003ccode\u003eInteger\u003c/code\u003e, return its value, otherwise return 0"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getInt",
      "comment": "If the value of key for the given Locale is an Integer return its integer value, otherwise return 0.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key",
          "\u003ccode\u003el\u003c/code\u003e - the desired locale"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e and \n\u003ccode\u003eLocale\u003c/code\u003e is an \n\u003ccode\u003eInteger\u003c/code\u003e, return its value, otherwise return 0"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBoolean",
      "comment": "If the value of key is boolean, return the boolean value, otherwise return false.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - an \n\u003ccode\u003eObject\u003c/code\u003e specifying the key for the desired boolean value"
        ],
        "return": [
          "if the value of \n\u003ccode\u003ekey\u003c/code\u003e is boolean, return the boolean value, otherwise return false."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBoolean",
      "comment": "If the value of key for the given Locale is boolean, return the boolean value, otherwise return false.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - an \n\u003ccode\u003eObject\u003c/code\u003e specifying the key for the desired boolean value",
          "\u003ccode\u003el\u003c/code\u003e - the desired locale"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e and \n\u003ccode\u003eLocale\u003c/code\u003e is boolean, return the boolean value, otherwise return false."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Insets",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getInsets",
      "comment": "If the value of key is an Insets return it, otherwise return null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e is an \n\u003ccode\u003eInsets\u003c/code\u003e, return the \n\u003ccode\u003eInsets\u003c/code\u003e object; otherwise return \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Insets",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getInsets",
      "comment": "If the value of key for the given Locale is an Insets return it, otherwise return null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key",
          "\u003ccode\u003el\u003c/code\u003e - the desired locale"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e and \n\u003ccode\u003eLocale\u003c/code\u003e is an \n\u003ccode\u003eInsets\u003c/code\u003e, return the \n\u003ccode\u003eInsets\u003c/code\u003e object; otherwise return \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDimension",
      "comment": "If the value of key is a Dimension return it, otherwise return null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e is a \n\u003ccode\u003eDimension\u003c/code\u003e, return the \n\u003ccode\u003eDimension\u003c/code\u003e object; otherwise return \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDimension",
      "comment": "If the value of key for the given Locale is a Dimension return it, otherwise return null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the desired key",
          "\u003ccode\u003el\u003c/code\u003e - the desired locale"
        ],
        "return": [
          "if the value for \n\u003ccode\u003ekey\u003c/code\u003e and \n\u003ccode\u003eLocale\u003c/code\u003e is a \n\u003ccode\u003eDimension\u003c/code\u003e, return the \n\u003ccode\u003eDimension\u003c/code\u003e object; otherwise return \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.swing.plaf.ComponentUI",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "uiClassID"
          }
        },
        {
          "type": {
            "name": "java.lang.ClassLoader",
            "type": "Class"
          },
          "field": {
            "name": "uiClassLoader"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUIClass",
      "comment": "The value of get(uidClassID) must be the String name of a class that implements the corresponding ComponentUI class. If the class hasn\u0027t been loaded before, this method looks up the class with uiClassLoader.loadClass() if a non null class loader is provided, classForName() otherwise. If a mapping for uiClassID exists or if the specified class can\u0027t be found, return null. This method is used by getUI, it\u0027s usually not necessary to call it directly.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#getUI(javax.swing.JComponent)\"\u003e\u003ccode\u003egetUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003euiClassID\u003c/code\u003e - a string containing the class ID",
          "\u003ccode\u003euiClassLoader\u003c/code\u003e - the object which will load the class"
        ],
        "return": [
          "the value of \n\u003ccode\u003eClass.forName(get(uidClassID))\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.swing.plaf.ComponentUI",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "uiClassID"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUIClass",
      "comment": "Returns the L\u0026F class that renders this component.",
      "tagMap": {
        "param": [
          "\u003ccode\u003euiClassID\u003c/code\u003e - a string containing the class ID"
        ],
        "return": [
          "the Class object returned by \n\u003ccode\u003egetUIClass(uiClassID, null)\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "msg"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getUIError",
      "comment": "If getUI() fails for any reason, it calls this method before returning null. Subclasses may choose to do more or less here.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#getUI(javax.swing.JComponent)\"\u003e\u003ccode\u003egetUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003emsg\u003c/code\u003e - message string to print"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.plaf.ComponentUI",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUI",
      "comment": "Creates an ComponentUI implementation for the specified component. In other words create the look and feel specific delegate object for target. This is done in two steps: Look up the name of the ComponentUI implementation class under the value returned by target.getUIClassID(). Use the implementation classes static createUI() method to construct a look and feel delegate.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the \n\u003ccode\u003eJComponent\u003c/code\u003e which needs a UI"
        ],
        "return": [
          "the \n\u003ccode\u003eComponentUI\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.beans.PropertyChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "listener"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addPropertyChangeListener",
      "comment": "Adds a PropertyChangeListener to the listener list. The listener is registered for all properties. A PropertyChangeEvent will get fired whenever a default is changed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/PropertyChangeSupport.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003ePropertyChangeSupport\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elistener\u003c/code\u003e - the \n\u003ccode\u003ePropertyChangeListener\u003c/code\u003e to be added"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.beans.PropertyChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "listener"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removePropertyChangeListener",
      "comment": "Removes a PropertyChangeListener from the listener list. This removes a PropertyChangeListener that was registered for all properties.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/PropertyChangeSupport.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003ePropertyChangeSupport\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elistener\u003c/code\u003e - the \n\u003ccode\u003ePropertyChangeListener\u003c/code\u003e to be removed"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.beans.PropertyChangeListener",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPropertyChangeListeners",
      "comment": "Returns an array of all the PropertyChangeListeners added to this UIDefaults with addPropertyChangeListener().",
      "tagMap": {
        "return": [
          "all of the \n\u003ccode\u003ePropertyChangeListener\u003c/code\u003es added or an empty array if no listeners have been added"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "propertyName"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "oldValue"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "newValue"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "firePropertyChange",
      "comment": "Support for reporting bound property changes. If oldValue and newValue are not equal and the PropertyChangeEventx listener list isn\u0027t empty, then fire a PropertyChange event to each listener.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/PropertyChangeSupport.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003ePropertyChangeSupport\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003epropertyName\u003c/code\u003e - the programmatic name of the property that was changed",
          "\u003ccode\u003eoldValue\u003c/code\u003e - the old value of the property",
          "\u003ccode\u003enewValue\u003c/code\u003e - the new value of the property"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "bundleName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addResourceBundle",
      "comment": "Adds a resource bundle to the list of resource bundles that are searched for localized values. Resource bundles are searched in the reverse order they were added, using the system class loader. In other words, the most recently added bundle is searched first.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ResourceBundle.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eResourceBundle\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#removeResourceBundle(java.lang.String)\"\u003e\u003ccode\u003eremoveResourceBundle(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ResourceBundle.html#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)\"\u003e\u003ccode\u003eResourceBundle.getBundle(String, Locale, ClassLoader)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ebundleName\u003c/code\u003e - the base name of the resource bundle to be added"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "bundleName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeResourceBundle",
      "comment": "Removes a resource bundle from the list of resource bundles that are searched for localized defaults.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ResourceBundle.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eResourceBundle\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#addResourceBundle(java.lang.String)\"\u003e\u003ccode\u003eaddResourceBundle(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ebundleName\u003c/code\u003e - the base name of the resource bundle to be removed"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDefaultLocale",
      "comment": "Sets the default locale. The default locale is used in retrieving localized values via get methods that do not take a locale argument. As of release 1.4, Swing UI objects should retrieve localized values using the locale of their component rather than the default locale. The default locale exists to provide compatibility with pre 1.4 behaviour.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#getDefaultLocale()\"\u003e\u003ccode\u003egetDefaultLocale()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#get(java.lang.Object)\"\u003e\u003ccode\u003eget(Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#get(java.lang.Object,java.util.Locale)\"\u003e\u003ccode\u003eget(Object,Locale)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the new default locale"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Locale",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDefaultLocale",
      "comment": "Returns the default locale. The default locale is used in retrieving localized values via get methods that do not take a locale argument. As of release 1.4, Swing UI objects should retrieve localized values using the locale of their component rather than the default locale. The default locale exists to provide compatibility with pre 1.4 behaviour.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#setDefaultLocale(java.util.Locale)\"\u003e\u003ccode\u003esetDefaultLocale(java.util.Locale)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#get(java.lang.Object)\"\u003e\u003ccode\u003eget(Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#get(java.lang.Object,java.util.Locale)\"\u003e\u003ccode\u003eget(Object,Locale)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the default locale"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an empty defaults table.",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "initialCapacity"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "loadFactor"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an empty defaults table with the specified initial capacity and load factor.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Hashtable.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashtable\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003einitialCapacity\u003c/code\u003e - the initial capacity of the defaults table",
          "\u003ccode\u003eloadFactor\u003c/code\u003e - the load factor of the defaults table"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "keyValueList"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a defaults table initialized with the specified key/value pairs. For example:         Object[] uiDefaults \u003d {\n             \"Font\", new Font(\"Dialog\", Font.BOLD, 12),\n            \"Color\", Color.red,\n             \"five\", Integer.valueOf(5)\n        }\n        UIDefaults myDefaults \u003d new UIDefaults(uiDefaults);",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekeyValueList\u003c/code\u003e - an array of objects containing the key/value pairs"
        ]
      }
    }
  ],
  "innerClasses": [
    "javax.swing.UIDefaults$ActiveValue",
    "javax.swing.UIDefaults$LazyValue",
    "javax.swing.UIDefaults$ProxyLazyValue",
    "javax.swing.UIDefaults$LazyInputMap"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.UIDefaults",
  "comment": "A table of defaults for Swing components. Applications can set/get default values via the \n\u003ccode\u003eUIManager\u003c/code\u003e. \n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIManager.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eUIManager\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}