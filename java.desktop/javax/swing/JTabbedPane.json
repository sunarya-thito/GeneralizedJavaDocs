{
  "packageName": "javax.swing",
  "simpleName": "JTabbedPane",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.JComponent",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WRAP_TAB_LAYOUT",
      "comment": "The tab layout policy for wrapping tabs in multiple runs when all tabs will not fit within a single run.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JTabbedPane.WRAP_TAB_LAYOUT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SCROLL_TAB_LAYOUT",
      "comment": "Tab layout policy for providing a subset of available tabs when all the tabs will not fit within a single run. If all the tabs do not fit within a single run the look and feel will provide a way to navigate to hidden tabs.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "tabPlacement",
      "comment": "Where the tabs are placed.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setTabPlacement(int)\"\u003e\u003ccode\u003esetTabPlacement(int)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.swing.SingleSelectionModel",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "model",
      "comment": "The default selection model",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.event.ChangeListener",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "changeListener",
      "comment": "The changeListener is the listener we add to the model.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.event.ChangeEvent",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 132,
      "name": "changeEvent",
      "comment": "Only one ChangeEvent is needed per TabPane instance since the event\u0027s only (read-only) state is the source property. The source of events generated here is always \"this\".",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "javax.swing.plaf.TabbedPaneUI",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUI",
      "comment": "Returns the UI object which implements the L\u0026F for this component.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setUI(javax.swing.plaf.TabbedPaneUI)\"\u003e\u003ccode\u003esetUI(javax.swing.plaf.TabbedPaneUI)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getUI()\"\u003egetUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eTabbedPaneUI\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setUI",
      "comment": "Sets the UI object which implements the L\u0026F for this component.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "hidden",
              "value": true
            },
            {
              "name": "visualUpdate",
              "value": true
            },
            {
              "name": "escription",
              "value": "The UI object that implements the tabbedpane\u0027s LookAndFeel"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#getUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eUIDefaults.getUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eui\u003c/code\u003e - the new UI object"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "updateUI",
      "comment": "Resets the UI property to a value from the current look and feel.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#updateUI()\"\u003e\u003ccode\u003eJComponent.updateUI()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#updateUI()\"\u003eupdateUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUIClassID",
      "comment": "Returns the name of the UI class that implements the L\u0026F for this component.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getUIClassID()\"\u003e\u003ccode\u003eJComponent.getUIClassID()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#getUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eUIDefaults.getUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getUIClassID()\"\u003egetUIClassID\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the string \"TabbedPaneUI\""
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.event.ChangeListener",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createChangeListener",
      "comment": "Subclasses that want to handle ChangeEvents differently can override this to return a subclass of ModelListener or another ChangeListener implementation.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#fireStateChanged()\"\u003e\u003ccode\u003efireStateChanged()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eChangeListener\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addChangeListener",
      "comment": "Adds a ChangeListener to this tabbedpane.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#fireStateChanged()\"\u003e\u003ccode\u003efireStateChanged()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#removeChangeListener(javax.swing.event.ChangeListener)\"\u003e\u003ccode\u003eremoveChangeListener(javax.swing.event.ChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the \n\u003ccode\u003eChangeListener\u003c/code\u003e to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeChangeListener",
      "comment": "Removes a ChangeListener from this tabbedpane.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#fireStateChanged()\"\u003e\u003ccode\u003efireStateChanged()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#addChangeListener(javax.swing.event.ChangeListener)\"\u003e\u003ccode\u003eaddChangeListener(javax.swing.event.ChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the \n\u003ccode\u003eChangeListener\u003c/code\u003e to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.event.ChangeListener",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getChangeListeners",
      "comment": "Returns an array of all the ChangeListeners added to this JTabbedPane with addChangeListener.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "return": [
          "all of the \n\u003ccode\u003eChangeListener\u003c/code\u003es added or an empty array if no listeners have been added"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "fireStateChanged",
      "comment": "Sends a ChangeEvent, with this JTabbedPane as the source, to each registered listener. This method is called each time there is a change to either the selected index or the selected tab in the JTabbedPane. Usually, the selected index and selected tab change together. However, there are some cases, such as tab addition, where the selected index changes and the same tab remains selected. There are other cases, such as deleting the selected tab, where the index remains the same, but a new tab moves to that index. Events are fired for all of these cases.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#addChangeListener(javax.swing.event.ChangeListener)\"\u003e\u003ccode\u003eaddChangeListener(javax.swing.event.ChangeListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/EventListenerList.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eEventListenerList\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.SingleSelectionModel",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getModel",
      "comment": "Returns the model associated with this tabbedpane.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setModel(javax.swing.SingleSelectionModel)\"\u003e\u003ccode\u003esetModel(javax.swing.SingleSelectionModel)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eSingleSelectionModel\u003c/code\u003e associated with this tabbedpane"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setModel",
      "comment": "Sets the model to be used with this tabbedpane.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "escription",
              "value": "The tabbedpane\u0027s SingleSelectionModel."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getModel()\"\u003e\u003ccode\u003egetModel()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003emodel\u003c/code\u003e - the model to be used"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTabPlacement",
      "comment": "Returns the placement of the tabs for this tabbedpane.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setTabPlacement(int)\"\u003e\u003ccode\u003esetTabPlacement(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eint\u003c/code\u003e specifying the placement for the tabs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setTabPlacement",
      "comment": "Sets the tab placement for this tabbedpane. Possible values are: JTabbedPane.TOP JTabbedPane.BOTTOM JTabbedPane.LEFT JTabbedPane.RIGHT The default value, if not set, is SwingConstants.TOP.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "visualUpdate",
              "value": true
            },
            {
              "name": "enumerationValues",
              "value": [
                "JTabbedPane.TOP",
                "JTabbedPane.LEFT",
                "JTabbedPane.BOTTOM",
                "JTabbedPane.RIGHT"
              ]
            },
            {
              "name": "escription",
              "value": "The tabbedpane\u0027s tab placement."
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003etabPlacement\u003c/code\u003e - the placement for the tabs relative to the content"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if tab placement value isn\u0027t one of the above valid values"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTabLayoutPolicy",
      "comment": "Returns the policy used by the tabbedpane to layout the tabs when all the tabs will not fit within a single run.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setTabLayoutPolicy(int)\"\u003e\u003ccode\u003esetTabLayoutPolicy(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eint\u003c/code\u003e specifying the policy used to layout the tabs"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setTabLayoutPolicy",
      "comment": "Sets the policy which the tabbedpane will use in laying out the tabs when all the tabs will not fit within a single run. Possible values are: JTabbedPane.WRAP_TAB_LAYOUT JTabbedPane.SCROLL_TAB_LAYOUT The default value, if not set by the UI, is JTabbedPane.WRAP_TAB_LAYOUT. Some look and feels might only support a subset of the possible layout policies, in which case the value of this property may be ignored.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "visualUpdate",
              "value": true
            },
            {
              "name": "enumerationValues",
              "value": [
                "JTabbedPane.WRAP_TAB_LAYOUT",
                "JTabbedPane.SCROLL_TAB_LAYOUT"
              ]
            },
            {
              "name": "escription",
              "value": "The tabbedpane\u0027s policy for laying out the tabs"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getTabLayoutPolicy()\"\u003e\u003ccode\u003egetTabLayoutPolicy()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etabLayoutPolicy\u003c/code\u003e - the policy used to layout the tabs"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if layoutPolicy value isn\u0027t one of the above valid values"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSelectedIndex",
      "comment": "Returns the currently selected index for this tabbedpane. Returns -1 if there is no currently selected tab.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setSelectedIndex(int)\"\u003e\u003ccode\u003esetSelectedIndex(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the index of the selected tab"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSelectedIndex",
      "comment": "Sets the selected index for this tabbedpane. The index must be a valid tab index or -1, which indicates that no tab should be selected (can also be used when there are no tabs in the tabbedpane). If a -1 value is specified when the tabbedpane contains one or more tabs, then the results will be implementation defined.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            },
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "escription",
              "value": "The tabbedpane\u0027s selected tab index."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getSelectedIndex()\"\u003e\u003ccode\u003egetSelectedIndex()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SingleSelectionModel.html#setSelectedIndex(int)\"\u003e\u003ccode\u003eSingleSelectionModel.setSelectedIndex(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index to be selected"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; -1 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSelectedComponent",
      "comment": "Returns the currently selected component for this tabbedpane. Returns null if there is no currently selected tab.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setSelectedComponent(java.awt.Component)\"\u003e\u003ccode\u003esetSelectedComponent(java.awt.Component)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the component corresponding to the selected tab"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSelectedComponent",
      "comment": "Sets the selected component for this tabbedpane. This will automatically set the selectedIndex to the index corresponding to the specified component.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            },
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "escription",
              "value": "The tabbedpane\u0027s selected component."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getSelectedComponent()\"\u003e\u003ccode\u003egetSelectedComponent()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the selected \n\u003ccode\u003eComponent\u003c/code\u003e for this \n\u003ccode\u003eTabbedPane\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if component not found in tabbed pane"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "insertTab",
      "comment": "Inserts a new tab for the given component, at the given index, represented by the given title and/or icon, either of which may be null.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String)\"\u003e\u003ccode\u003eaddTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#removeTabAt(int)\"\u003e\u003ccode\u003eremoveTabAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etitle\u003c/code\u003e - the title to be displayed on the tab",
          "\u003ccode\u003eicon\u003c/code\u003e - the icon to be displayed on the tab",
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component to be displayed when this tab is clicked.",
          "\u003ccode\u003etip\u003c/code\u003e - the tooltip to be displayed for this tab",
          "\u003ccode\u003eindex\u003c/code\u003e - the position to insert this new tab (\n\u003ccode\u003e\u0026gt; 0 and \u0026lt;\u003d getTabCount()\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the index is out of range (\n\u003ccode\u003e\u0026lt; 0 or \u0026gt; getTabCount()\u003c/code\u003e)"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addTab",
      "comment": "Adds a component and tip represented by a title and/or icon, either of which can be null. Cover method for insertTab.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,int)\"\u003e\u003ccode\u003einsertTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#removeTabAt(int)\"\u003e\u003ccode\u003eremoveTabAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etitle\u003c/code\u003e - the title to be displayed in this tab",
          "\u003ccode\u003eicon\u003c/code\u003e - the icon to be displayed in this tab",
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component to be displayed when this tab is clicked",
          "\u003ccode\u003etip\u003c/code\u003e - the tooltip to be displayed for this tab"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addTab",
      "comment": "Adds a component represented by a title and/or icon, either of which can be null. Cover method for insertTab.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,int)\"\u003e\u003ccode\u003einsertTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#removeTabAt(int)\"\u003e\u003ccode\u003eremoveTabAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etitle\u003c/code\u003e - the title to be displayed in this tab",
          "\u003ccode\u003eicon\u003c/code\u003e - the icon to be displayed in this tab",
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component to be displayed when this tab is clicked"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addTab",
      "comment": "Adds a component represented by a title and no icon. Cover method for insertTab.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,int)\"\u003e\u003ccode\u003einsertTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#removeTabAt(int)\"\u003e\u003ccode\u003eremoveTabAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etitle\u003c/code\u003e - the title to be displayed in this tab",
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component to be displayed when this tab is clicked"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a component with a tab title defaulting to the name of the component which is the result of calling component.getName. Cover method for insertTab.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,int)\"\u003e\u003ccode\u003einsertTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#removeTabAt(int)\"\u003e\u003ccode\u003eremoveTabAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#add(java.awt.Component)\"\u003eadd\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component to be displayed when this tab is clicked"
        ],
        "return": [
          "the component"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a component with the specified tab title. Cover method for insertTab.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,int)\"\u003e\u003ccode\u003einsertTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#removeTabAt(int)\"\u003e\u003ccode\u003eremoveTabAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#add(java.lang.String,java.awt.Component)\"\u003eadd\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etitle\u003c/code\u003e - the title to be displayed in this tab",
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component to be displayed when this tab is clicked"
        ],
        "return": [
          "the component"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a component at the specified tab index with a tab title defaulting to the name of the component. Cover method for insertTab.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,int)\"\u003e\u003ccode\u003einsertTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#removeTabAt(int)\"\u003e\u003ccode\u003eremoveTabAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#add(java.awt.Component,int)\"\u003eadd\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component to be displayed when this tab is clicked",
          "\u003ccode\u003eindex\u003c/code\u003e - the position to insert this new tab"
        ],
        "return": [
          "the component"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a component to the tabbed pane. If constraints is a String or an Icon, it will be used for the tab title, otherwise the component\u0027s name will be used as the tab title. Cover method for insertTab.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,int)\"\u003e\u003ccode\u003einsertTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#removeTabAt(int)\"\u003e\u003ccode\u003eremoveTabAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#add(java.awt.Component,java.lang.Object)\"\u003eadd\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component to be displayed when this tab is clicked",
          "\u003ccode\u003econstraints\u003c/code\u003e - the object to be displayed in the tab"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a component at the specified tab index. If constraints is a String or an Icon, it will be used for the tab title, otherwise the component\u0027s name will be used as the tab title. Cover method for insertTab.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,int)\"\u003e\u003ccode\u003einsertTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#removeTabAt(int)\"\u003e\u003ccode\u003eremoveTabAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#add(java.awt.Component,java.lang.Object,int)\"\u003eadd\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component to be displayed when this tab is clicked",
          "\u003ccode\u003econstraints\u003c/code\u003e - the object to be displayed in the tab",
          "\u003ccode\u003eindex\u003c/code\u003e - the position to insert this new tab"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeTabAt",
      "comment": "Removes the tab at index. After the component associated with index is removed, its visibility is reset to true to ensure it will be visible if added to other containers.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String)\"\u003e\u003ccode\u003eaddTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,int)\"\u003e\u003ccode\u003einsertTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the tab to be removed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the specified Component from the JTabbedPane. The method does nothing if the component is null.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String)\"\u003e\u003ccode\u003eaddTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#removeTabAt(int)\"\u003e\u003ccode\u003eremoveTabAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#remove(java.awt.Component)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component to remove from the tabbedpane"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the tab and component which corresponds to the specified index.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String)\"\u003e\u003ccode\u003eaddTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#removeTabAt(int)\"\u003e\u003ccode\u003eremoveTabAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#remove(int)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the component to remove from the \n\u003ccode\u003etabbedpane\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeAll",
      "comment": "Removes all the tabs and their corresponding components from the tabbedpane.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String)\"\u003e\u003ccode\u003eaddTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#removeTabAt(int)\"\u003e\u003ccode\u003eremoveTabAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#removeAll()\"\u003eremoveAll\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTabCount",
      "comment": "Returns the number of tabs in this tabbedpane.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "return": [
          "an integer specifying the number of tabbed pages"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTabRunCount",
      "comment": "Returns the number of tab runs currently used to display the tabs.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "return": [
          "an integer giving the number of rows if the \n\u003ccode\u003etabPlacement\u003c/code\u003e is \n\u003ccode\u003eTOP\u003c/code\u003e or \n\u003ccode\u003eBOTTOM\u003c/code\u003e and the number of columns if \n\u003ccode\u003etabPlacement\u003c/code\u003e is \n\u003ccode\u003eLEFT\u003c/code\u003e or \n\u003ccode\u003eRIGHT\u003c/code\u003e, or 0 if there is no UI set on this \n\u003ccode\u003etabbedpane\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTitleAt",
      "comment": "Returns the tab title at index.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setTitleAt(int,java.lang.String)\"\u003e\u003ccode\u003esetTitleAt(int, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the item being queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ],
        "return": [
          "the title at \n\u003ccode\u003eindex\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.Icon",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIconAt",
      "comment": "Returns the tab icon at index.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setIconAt(int,javax.swing.Icon)\"\u003e\u003ccode\u003esetIconAt(int, javax.swing.Icon)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the item being queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ],
        "return": [
          "the icon at \n\u003ccode\u003eindex\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.Icon",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDisabledIconAt",
      "comment": "Returns the tab disabled icon at index. If the tab disabled icon doesn\u0027t exist at index this will forward the call to the look and feel to construct an appropriate disabled Icon from the corresponding enabled Icon. Some look and feels might not render the disabled Icon, in which case it won\u0027t be created.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setDisabledIconAt(int,javax.swing.Icon)\"\u003e\u003ccode\u003esetDisabledIconAt(int, javax.swing.Icon)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the item being queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ],
        "return": [
          "the icon at \n\u003ccode\u003eindex\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getToolTipTextAt",
      "comment": "Returns the tab tooltip text at index.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setToolTipTextAt(int,java.lang.String)\"\u003e\u003ccode\u003esetToolTipTextAt(int, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the item being queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ],
        "return": [
          "a string containing the tool tip text at \n\u003ccode\u003eindex\u003c/code\u003e"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBackgroundAt",
      "comment": "Returns the tab background color at index.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setBackgroundAt(int,java.awt.Color)\"\u003e\u003ccode\u003esetBackgroundAt(int, java.awt.Color)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the item being queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eColor\u003c/code\u003e of the tab background at \n\u003ccode\u003eindex\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getForegroundAt",
      "comment": "Returns the tab foreground color at index.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setForegroundAt(int,java.awt.Color)\"\u003e\u003ccode\u003esetForegroundAt(int, java.awt.Color)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the item being queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eColor\u003c/code\u003e of the tab foreground at \n\u003ccode\u003eindex\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isEnabledAt",
      "comment": "Returns whether or not the tab at index is currently enabled.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setEnabledAt(int,boolean)\"\u003e\u003ccode\u003esetEnabledAt(int, boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the item being queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ],
        "return": [
          "true if the tab at \n\u003ccode\u003eindex\u003c/code\u003e is enabled; false otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getComponentAt",
      "comment": "Returns the component at index.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setComponentAt(int,java.awt.Component)\"\u003e\u003ccode\u003esetComponentAt(int, java.awt.Component)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the item being queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eComponent\u003c/code\u003e at \n\u003ccode\u003eindex\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMnemonicAt",
      "comment": "Returns the keyboard mnemonic for accessing the specified tab. The mnemonic is the key which when combined with the look and feel\u0027s mouseless modifier (usually Alt) will activate the specified tab.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setDisplayedMnemonicIndexAt(int,int)\"\u003e\u003ccode\u003esetDisplayedMnemonicIndexAt(int,int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setMnemonicAt(int,int)\"\u003e\u003ccode\u003esetMnemonicAt(int,int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etabIndex\u003c/code\u003e - the index of the tab that the mnemonic refers to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range (\n\u003ccode\u003etabIndex\u003c/code\u003e \u0026lt; 0 || \n\u003ccode\u003etabIndex\u003c/code\u003e \u0026gt;\u003d tab count)"
        ],
        "return": [
          "the key code which represents the mnemonic; -1 if a mnemonic is not specified for the tab"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDisplayedMnemonicIndexAt",
      "comment": "Returns the character, as an index, that the look and feel should provide decoration for as representing the mnemonic character.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setDisplayedMnemonicIndexAt(int,int)\"\u003e\u003ccode\u003esetDisplayedMnemonicIndexAt(int,int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setMnemonicAt(int,int)\"\u003e\u003ccode\u003esetMnemonicAt(int,int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etabIndex\u003c/code\u003e - the index of the tab that the mnemonic refers to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range (\n\u003ccode\u003etabIndex\u003c/code\u003e \u0026lt; 0 || \n\u003ccode\u003etabIndex\u003c/code\u003e \u0026gt;\u003d tab count)"
        ],
        "return": [
          "index representing mnemonic character if one exists; otherwise returns -1"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Rectangle",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBoundsAt",
      "comment": "Returns the tab bounds at index. If the tab at this index is not currently visible in the UI, then returns null. If there is no UI set on this tabbedpane, then returns null.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index to be queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eRectangle\u003c/code\u003e containing the tab bounds at \n\u003ccode\u003eindex\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if tab at \n\u003ccode\u003eindex\u003c/code\u003e is not currently visible in the UI, or if there is no UI set on this \n\u003ccode\u003etabbedpane\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setTitleAt",
      "comment": "Sets the title at index to title which can be null. The title is not shown if a tab component for this tab was specified. An internal exception is raised if there is no tab at that index.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "visualUpdate",
              "value": true
            },
            {
              "name": "escription",
              "value": "The title at the specified tab index."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getTitleAt(int)\"\u003e\u003ccode\u003egetTitleAt(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setTabComponentAt(int,java.awt.Component)\"\u003e\u003ccode\u003esetTabComponentAt(int, java.awt.Component)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the tab index where the title should be set",
          "\u003ccode\u003etitle\u003c/code\u003e - the title to be displayed in the tab"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setIconAt",
      "comment": "Sets the icon at index to icon which can be null. This does not set disabled icon at icon. If the new Icon is different than the current Icon and disabled icon is not explicitly set, the LookAndFeel will be asked to generate a disabled Icon. To explicitly set disabled icon, use setDisableIconAt(). The icon is not shown if a tab component for this tab was specified. An internal exception is raised if there is no tab at that index.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "visualUpdate",
              "value": true
            },
            {
              "name": "escription",
              "value": "The icon at the specified tab index."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setDisabledIconAt(int,javax.swing.Icon)\"\u003e\u003ccode\u003esetDisabledIconAt(int, javax.swing.Icon)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getIconAt(int)\"\u003e\u003ccode\u003egetIconAt(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getDisabledIconAt(int)\"\u003e\u003ccode\u003egetDisabledIconAt(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setTabComponentAt(int,java.awt.Component)\"\u003e\u003ccode\u003esetTabComponentAt(int, java.awt.Component)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the tab index where the icon should be set",
          "\u003ccode\u003eicon\u003c/code\u003e - the icon to be displayed in the tab"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDisabledIconAt",
      "comment": "Sets the disabled icon at index to icon which can be null. An internal exception is raised if there is no tab at that index.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "visualUpdate",
              "value": true
            },
            {
              "name": "escription",
              "value": "The disabled icon at the specified tab index."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getDisabledIconAt(int)\"\u003e\u003ccode\u003egetDisabledIconAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the tab index where the disabled icon should be set",
          "\u003ccode\u003edisabledIcon\u003c/code\u003e - the icon to be displayed in the tab when disabled"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setToolTipTextAt",
      "comment": "Sets the tooltip text at index to toolTipText which can be null. An internal exception is raised if there is no tab at that index.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "escription",
              "value": "The tooltip text at the specified tab index."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getToolTipTextAt(int)\"\u003e\u003ccode\u003egetToolTipTextAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the tab index where the tooltip text should be set",
          "\u003ccode\u003etoolTipText\u003c/code\u003e - the tooltip text to be displayed for the tab"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setBackgroundAt",
      "comment": "Sets the background color at index to background which can be null, in which case the tab\u0027s background color will default to the background color of the tabbedpane. An internal exception is raised if there is no tab at that index. It is up to the look and feel to honor this property, some may choose to ignore it.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "visualUpdate",
              "value": true
            },
            {
              "name": "escription",
              "value": "The background color at the specified tab index."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getBackgroundAt(int)\"\u003e\u003ccode\u003egetBackgroundAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the tab index where the background should be set",
          "\u003ccode\u003ebackground\u003c/code\u003e - the color to be displayed in the tab\u0027s background"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setForegroundAt",
      "comment": "Sets the foreground color at index to foreground which can be null, in which case the tab\u0027s foreground color will default to the foreground color of this tabbedpane. An internal exception is raised if there is no tab at that index. It is up to the look and feel to honor this property, some may choose to ignore it.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "visualUpdate",
              "value": true
            },
            {
              "name": "escription",
              "value": "The foreground color at the specified tab index."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getForegroundAt(int)\"\u003e\u003ccode\u003egetForegroundAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the tab index where the foreground should be set",
          "\u003ccode\u003eforeground\u003c/code\u003e - the color to be displayed as the tab\u0027s foreground"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setEnabledAt",
      "comment": "Sets whether or not the tab at index is enabled. An internal exception is raised if there is no tab at that index.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#isEnabledAt(int)\"\u003e\u003ccode\u003eisEnabledAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the tab index which should be enabled/disabled",
          "\u003ccode\u003eenabled\u003c/code\u003e - whether or not the tab should be enabled"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setComponentAt",
      "comment": "Sets the component at index to component. An internal exception is raised if there is no tab at that index.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "visualUpdate",
              "value": true
            },
            {
              "name": "escription",
              "value": "The component at the specified tab index."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getComponentAt(int)\"\u003e\u003ccode\u003egetComponentAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the tab index where this component is being placed",
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component for the tab"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDisplayedMnemonicIndexAt",
      "comment": "Provides a hint to the look and feel as to which character in the text should be decorated to represent the mnemonic. Not all look and feels may support this. A value of -1 indicates either there is no mnemonic for this tab, or you do not wish the mnemonic to be displayed for this tab. The value of this is updated as the properties relating to the mnemonic change (such as the mnemonic itself, the text...). You should only ever have to call this if you do not wish the default character to be underlined. For example, if the text at tab index 3 was \u0027Apple Price\u0027, with a mnemonic of \u0027p\u0027, and you wanted the \u0027P\u0027 to be decorated, as \u0027Apple Price\u0027, you would have to invoke setDisplayedMnemonicIndex(3, 6) after invoking setMnemonicAt(3, KeyEvent.VK_P). Note that it is the programmer\u0027s responsibility to ensure that each tab has a unique mnemonic or unpredictable results may occur.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "visualUpdate",
              "value": true
            },
            {
              "name": "escription",
              "value": "the index into the String to draw the keyboard character mnemonic at"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setMnemonicAt(int,int)\"\u003e\u003ccode\u003esetMnemonicAt(int,int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getDisplayedMnemonicIndexAt(int)\"\u003e\u003ccode\u003egetDisplayedMnemonicIndexAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etabIndex\u003c/code\u003e - the index of the tab that the mnemonic refers to",
          "\u003ccode\u003emnemonicIndex\u003c/code\u003e - index into the \n\u003ccode\u003eString\u003c/code\u003e to underline"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etabIndex\u003c/code\u003e is out of range (\n\u003ccode\u003etabIndex \u0026lt; 0 || tabIndex \u0026gt;\u003d tab count\u003c/code\u003e)",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - will be thrown if \n\u003ccode\u003emnemonicIndex\u003c/code\u003e is \u0026gt;\u003d length of the tab title , or \u0026lt; -1"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMnemonicAt",
      "comment": "Sets the keyboard mnemonic for accessing the specified tab. The mnemonic is the key which when combined with the look and feel\u0027s mouseless modifier (usually Alt) will activate the specified tab. A mnemonic must correspond to a single key on the keyboard and should be specified using one of the VK_XXX keycodes defined in java.awt.event.KeyEvent or one of the extended keycodes obtained through java.awt.event.KeyEvent.getExtendedKeyCodeForChar. Mnemonics are case-insensitive, therefore a key event with the corresponding keycode would cause the button to be activated whether or not the Shift modifier was pressed. This will update the displayed mnemonic property for the specified tab.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "visualUpdate",
              "value": true
            },
            {
              "name": "escription",
              "value": "The keyboard mnenmonic, as a KeyEvent VK constant, for the specified tab"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getMnemonicAt(int)\"\u003e\u003ccode\u003egetMnemonicAt(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setDisplayedMnemonicIndexAt(int,int)\"\u003e\u003ccode\u003esetDisplayedMnemonicIndexAt(int,int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etabIndex\u003c/code\u003e - the index of the tab that the mnemonic refers to",
          "\u003ccode\u003emnemonic\u003c/code\u003e - the key code which represents the mnemonic"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etabIndex\u003c/code\u003e is out of range (\n\u003ccode\u003etabIndex \u0026lt; 0 || tabIndex \u0026gt;\u003d tab count\u003c/code\u003e)"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "indexOfTab",
      "comment": "Returns the first tab index with a given title, or -1 if no tab has this title.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etitle\u003c/code\u003e - the title for the tab"
        ],
        "return": [
          "the first tab index which matches \n\u003ccode\u003etitle\u003c/code\u003e, or -1 if no tab has this title"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "indexOfTab",
      "comment": "Returns the first tab index with a given icon, or -1 if no tab has this icon.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eicon\u003c/code\u003e - the icon for the tab"
        ],
        "return": [
          "the first tab index which matches \n\u003ccode\u003eicon\u003c/code\u003e, or -1 if no tab has this icon"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "indexOfComponent",
      "comment": "Returns the index of the tab for the specified component. Returns -1 if there is no tab for this component.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component for the tab"
        ],
        "return": [
          "the first tab which matches this component, or -1 if there is no tab for this component"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "indexAtLocation",
      "comment": "Returns the tab index corresponding to the tab whose bounds intersect the specified location. Returns -1 if no tab intersects the location.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the x location relative to this tabbedpane",
          "\u003ccode\u003ey\u003c/code\u003e - the y location relative to this tabbedpane"
        ],
        "return": [
          "the tab index which intersects the location, or -1 if no tab intersects the location"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getToolTipText",
      "comment": "Returns the tooltip text for the component determined by the mouse event location.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getToolTipText(java.awt.event.MouseEvent)\"\u003egetToolTipText\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eevent\u003c/code\u003e - the \n\u003ccode\u003eMouseEvent\u003c/code\u003e that tells where the cursor is lingering"
        ],
        "return": [
          "the \n\u003ccode\u003eString\u003c/code\u003e containing the tooltip text"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "paramString",
      "comment": "Returns a string representation of this JTabbedPane. This method is intended to be used only for debugging purposes, and the content and format of the returned string may vary between implementations. The returned string may be empty but may not be null.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#paramString()\"\u003eparamString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this JTabbedPane."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.accessibility.AccessibleContext",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAccessibleContext",
      "comment": "Gets the AccessibleContext associated with this JTabbedPane. For tabbed panes, the AccessibleContext takes the form of an AccessibleJTabbedPane. A new AccessibleJTabbedPane instance is created if necessary.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html\" title\u003d\"class in java.awt\"\u003eComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html\" title\u003d\"interface in javax.accessibility\"\u003eAccessible\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an AccessibleJTabbedPane that serves as the AccessibleContext of this JTabbedPane"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setTabComponentAt",
      "comment": "Sets the component that is responsible for rendering the title for the specified tab. A null value means JTabbedPane will render the title and/or icon for the specified tab. A non-null value means the component will render the title and JTabbedPane will not render the title and/or icon. Note: The component must not be one that the developer has already added to the tabbed pane.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "visualUpdate",
              "value": true
            },
            {
              "name": "escription",
              "value": "The tab component at the specified tab index."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getTabComponentAt(int)\"\u003e\u003ccode\u003egetTabComponentAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the tab index where the component should be set",
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component to render the title for the specified tab"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if component has already been added to this \n\u003ccode\u003eJTabbedPane\u003c/code\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTabComponentAt",
      "comment": "Returns the tab component at index.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setTabComponentAt(int,java.awt.Component)\"\u003e\u003ccode\u003esetTabComponentAt(int, java.awt.Component)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the item being queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index is out of range \n\u003ccode\u003e(index \u0026lt; 0 || index \u0026gt;\u003d tab count)\u003c/code\u003e"
        ],
        "return": [
          "the tab component at \n\u003ccode\u003eindex\u003c/code\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "indexOfTabComponent",
      "comment": "Returns the index of the tab for the specified tab component. Returns -1 if there is no tab for this tab component.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#setTabComponentAt(int,java.awt.Component)\"\u003e\u003ccode\u003esetTabComponentAt(int, java.awt.Component)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#getTabComponentAt(int)\"\u003e\u003ccode\u003egetTabComponentAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etabComponent\u003c/code\u003e - the tab component for the tab"
        ],
        "return": [
          "the first tab which matches this tab component, or -1 if there is no tab for this tab component"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an empty TabbedPane with a default tab placement of JTabbedPane.TOP.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String)\"\u003e\u003ccode\u003eaddTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "tabPlacement",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an empty TabbedPane with the specified tab placement of either: JTabbedPane.TOP, JTabbedPane.BOTTOM, JTabbedPane.LEFT, or JTabbedPane.RIGHT.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String)\"\u003e\u003ccode\u003eaddTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etabPlacement\u003c/code\u003e - the placement for the tabs relative to the content"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "tabPlacement",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "tabLayoutPolicy",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an empty TabbedPane with the specified tab placement and tab layout policy. Tab placement may be either: JTabbedPane.TOP, JTabbedPane.BOTTOM, JTabbedPane.LEFT, or JTabbedPane.RIGHT. Tab layout policy may be either: JTabbedPane.WRAP_TAB_LAYOUT or JTabbedPane.SCROLL_TAB_LAYOUT.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTabbedPane.html#addTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String)\"\u003e\u003ccode\u003eaddTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etabPlacement\u003c/code\u003e - the placement for the tabs relative to the content",
          "\u003ccode\u003etabLayoutPolicy\u003c/code\u003e - the policy for laying out tabs when all tabs will not fit on one run"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if tab placement or tab layout policy are not one of the above supported values"
        ],
        "since": [
          "1.4"
        ]
      }
    }
  ],
  "innerClasses": [
    "javax.swing.JTabbedPane$ModelListener",
    "javax.swing.JTabbedPane$AccessibleJTabbedPane"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.JTabbedPane",
  "comment": "A component that lets the user switch between a group of components by clicking on a tab with a given title and/or icon. For examples and information on using tabbed panes see \n\u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html\"\u003eHow to Use Tabbed Panes\u003c/a\u003e, a section in \n\u003cem\u003eThe Java Tutorial\u003c/em\u003e. \n\u003cp\u003e Tabs/components are added to a \u003ccode\u003eTabbedPane\u003c/code\u003e object by using the \u003ccode\u003eaddTab\u003c/code\u003e and \u003ccode\u003einsertTab\u003c/code\u003e methods. A tab is represented by an index corresponding to the position it was added in, where the first tab has an index equal to 0 and the last tab has an index equal to the tab count minus 1. \u003c/p\u003e\n\u003cp\u003e The \u003ccode\u003eTabbedPane\u003c/code\u003e uses a \u003ccode\u003eSingleSelectionModel\u003c/code\u003e to represent the set of tab indices and the currently selected index. If the tab count is greater than 0, then there will always be a selected index, which by default will be initialized to the first tab. If the tab count is 0, then the selected index will be -1. \u003c/p\u003e\n\u003cp\u003e The tab title can be rendered by a \u003ccode\u003eComponent\u003c/code\u003e. For example, the following produce similar results: \u003c/p\u003e\n\u003cpre\u003e // In this case the look and feel renders the title for the tab.\n tabbedPane.addTab(\"Tab\", myComponent);\n // In this case the custom component is responsible for rendering the\n // title of the tab.\n tabbedPane.addTab(null, myComponent);\n tabbedPane.setTabComponentAt(0, new JLabel(\"Tab\"));\n \u003c/pre\u003e The latter is typically used when you want a more complex user interaction that requires custom components on the tab. For example, you could provide a custom component that animates or one that has widgets for closing the tab. \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e If you specify a component for a tab, the \u003ccode\u003eJTabbedPane\u003c/code\u003e will not render any text or icon you have specified for the tab. \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eNote:\u003c/strong\u003e Do not use \u003ccode\u003esetVisible\u003c/code\u003e directly on a tab component to make it visible, use \u003ccode\u003esetSelectedComponent\u003c/code\u003e or \u003ccode\u003esetSelectedIndex\u003c/code\u003e methods instead. \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Swing is not thread safe. For more information see \u003ca href\u003d\"package-summary.html#threading\"\u003eSwing\u0027s Threading Policy\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SingleSelectionModel.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eSingleSelectionModel\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}