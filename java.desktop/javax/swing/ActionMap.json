{
  "packageName": "javax.swing",
  "simpleName": "ActionMap",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.ActionMap",
            "type": "Class"
          },
          "name": "map",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setParent",
      "comment": "Sets this ActionMap\u0027s parent.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emap\u003c/code\u003e - the \n\u003ccode\u003eActionMap\u003c/code\u003e that is the parent of this one"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.ActionMap",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getParent",
      "comment": "Returns this ActionMap\u0027s parent.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eActionMap\u003c/code\u003e that is the parent of this one, or null if this \n\u003ccode\u003eActionMap\u003c/code\u003e has no parent"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Action",
            "type": "Class"
          },
          "name": "action",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "put",
      "comment": "Adds a binding for key to action. If action is null, this removes the current binding for key. In most instances, key will be action.getValue(NAME).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - a key",
          "\u003ccode\u003eaction\u003c/code\u003e - a binding for \n\u003ccode\u003ekey\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.Action",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "get",
      "comment": "Returns the binding for key, messaging the parent ActionMap if the binding is not locally defined.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - a key"
        ],
        "return": [
          "the binding for \n\u003ccode\u003ekey\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the binding for key from this ActionMap.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - a key"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clear",
      "comment": "Removes all the mappings from this ActionMap.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "keys",
      "comment": "Returns the Action names that are bound in this ActionMap.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an array of the keys"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "size",
      "comment": "Returns the number of bindings in this ActionMap.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the number of bindings in this \n\u003ccode\u003eActionMap\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "allKeys",
      "comment": "Returns an array of the keys defined in this ActionMap and its parent. This method differs from keys() in that this method includes the keys defined in the parent.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an array of the keys"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an ActionMap with no parent and no mappings.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.ActionMap",
  "comment": "\u003ccode\u003eActionMap\u003c/code\u003e provides mappings from \n\u003ccode\u003eObject\u003c/code\u003es (called \n\u003cem\u003ekeys\u003c/em\u003e or \n\u003cem\u003e\u003ccode\u003eAction\u003c/code\u003e names\u003c/em\u003e) to \n\u003ccode\u003eAction\u003c/code\u003es. An \n\u003ccode\u003eActionMap\u003c/code\u003e is usually used with an \n\u003ccode\u003eInputMap\u003c/code\u003e to locate a particular action when a key is pressed. As with \n\u003ccode\u003eInputMap\u003c/code\u003e, an \n\u003ccode\u003eActionMap\u003c/code\u003e can have a parent that is searched for keys not defined in the \n\u003ccode\u003eActionMap\u003c/code\u003e. \n\u003cp\u003eAs with \u003ccode\u003eInputMap\u003c/code\u003e if you create a cycle, eg: \u003c/p\u003e\n\u003cpre\u003e   ActionMap am \u003d new ActionMap();\n   ActionMap bm \u003d new ActionMap():\n   am.setParent(bm);\n   bm.setParent(am);\n \u003c/pre\u003e some of the methods will cause a StackOverflowError to be thrown.\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/InputMap.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eInputMap\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}