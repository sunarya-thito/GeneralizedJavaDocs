{
  "packageName": "javax.swing.table",
  "simpleName": "TableModel",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getRowCount",
      "comment": "Returns the number of rows in the model. A JTable uses this method to determine how many rows it should display. This method should be quick, as it is called frequently during rendering.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#getColumnCount()\"\u003e\u003ccode\u003egetColumnCount()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the number of rows in the model"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getColumnCount",
      "comment": "Returns the number of columns in the model. A JTable uses this method to determine how many columns it should create and display by default.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#getRowCount()\"\u003e\u003ccode\u003egetRowCount()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the number of columns in the model"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getColumnName",
      "comment": "Returns the name of the column at columnIndex. This is used to initialize the table\u0027s column header name. Note: this name does not need to be unique; two columns in a table can have the same name.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the index of the column"
        ],
        "return": [
          "the name of the column"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getColumnClass",
      "comment": "Returns the most specific superclass for all the cell values in the column. This is used by the JTable to set up a default renderer and editor for the column.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the index of the column"
        ],
        "return": [
          "the common ancestor class of the object values in the model."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "rowIndex"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isCellEditable",
      "comment": "Returns true if the cell at rowIndex and columnIndex is editable. Otherwise, setValueAt on the cell will not change the value of that cell.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#setValueAt(java.lang.Object,int,int)\"\u003e\u003ccode\u003esetValueAt(java.lang.Object, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003erowIndex\u003c/code\u003e - the row whose value to be queried",
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the column whose value to be queried"
        ],
        "return": [
          "true if the cell is editable"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "rowIndex"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getValueAt",
      "comment": "Returns the value for the cell at columnIndex and rowIndex.",
      "tagMap": {
        "param": [
          "\u003ccode\u003erowIndex\u003c/code\u003e - the row whose value is to be queried",
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the column whose value is to be queried"
        ],
        "return": [
          "the value Object at the specified cell"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "aValue"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "rowIndex"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "columnIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setValueAt",
      "comment": "Sets the value in the cell at columnIndex and rowIndex to aValue.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#getValueAt(int,int)\"\u003e\u003ccode\u003egetValueAt(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#isCellEditable(int,int)\"\u003e\u003ccode\u003eisCellEditable(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eaValue\u003c/code\u003e - the new value",
          "\u003ccode\u003erowIndex\u003c/code\u003e - the row whose value is to be changed",
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the column whose value is to be changed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.TableModelListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addTableModelListener",
      "comment": "Adds a listener to the list that is notified each time a change to the data model occurs.",
      "tagMap": {
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the TableModelListener"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.TableModelListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeTableModelListener",
      "comment": "Removes a listener from the list that is notified each time a change to the data model occurs.",
      "tagMap": {
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the TableModelListener"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.swing.table.TableModel",
  "comment": "The \n\u003ccode\u003eTableModel\u003c/code\u003e interface specifies the methods the \n\u003ccode\u003eJTable\u003c/code\u003e will use to interrogate a tabular data model. \n\u003cp\u003e The \u003ccode\u003eJTable\u003c/code\u003e can be set up to display any data model which implements the \u003ccode\u003eTableModel\u003c/code\u003e interface with a couple of lines of code: \u003c/p\u003e\n\u003cpre\u003e      TableModel myData \u003d new MyTableModel();\n      JTable table \u003d new JTable(myData);\n  \u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e For further documentation, see \u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/components/table.html#data\"\u003eCreating a Table Model\u003c/a\u003e in \u003cem\u003eThe Java Tutorial\u003c/em\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTable.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJTable\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}