{
  "packageName": "javax.swing.table",
  "simpleName": "DefaultTableModel",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.table.AbstractTableModel",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.util.Vector",
        "parameters": [
          {
            "name": "java.util.Vector",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "dataVector",
      "comment": "The Vector of Vectors of Object values.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.util.Vector",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "columnIdentifiers",
      "comment": "The Vector of column identifiers.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.util.Vector",
        "parameters": [
          {
            "name": "java.util.Vector",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDataVector",
      "comment": "Returns the Vector of Vectors that contains the table\u0027s data values. The vectors contained in the outer vector are each a single row of values. In other words, to get to the cell at row 1, column 5: ((Vector)getDataVector().elementAt(1)).elementAt(5);",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#newDataAvailable(javax.swing.event.TableModelEvent)\"\u003e\u003ccode\u003enewDataAvailable(javax.swing.event.TableModelEvent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#newRowsAdded(javax.swing.event.TableModelEvent)\"\u003e\u003ccode\u003enewRowsAdded(javax.swing.event.TableModelEvent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#setDataVector(java.util.Vector,java.util.Vector)\"\u003e\u003ccode\u003esetDataVector(java.util.Vector\u0026lt;? extends java.util.Vector\u0026gt;, java.util.Vector\u0026lt;?\u0026gt;)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the vector of vectors containing the tables data values"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "java.util.Vector",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "dataVector",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "columnIdentifiers",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDataVector",
      "comment": "Replaces the current dataVector instance variable with the new Vector of rows, dataVector. Each row is represented in dataVector as a Vector of Object values. columnIdentifiers are the names of the new columns. The first name in columnIdentifiers is mapped to column 0 in dataVector. Each row in dataVector is adjusted to match the number of columns in columnIdentifiers either by truncating the Vector if it is too long, or adding null values if it is too short. Note that passing in a null value for dataVector results in unspecified behavior, an possibly an exception.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#getDataVector()\"\u003e\u003ccode\u003egetDataVector()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edataVector\u003c/code\u003e - the new data vector",
          "\u003ccode\u003ecolumnIdentifiers\u003c/code\u003e - the names of the columns"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 2
          },
          "name": "dataVector",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "columnIdentifiers",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDataVector",
      "comment": "Replaces the value in the dataVector instance variable with the values in the array dataVector. The first index in the Object[][] array is the row index and the second is the column index. columnIdentifiers are the names of the new columns.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#setDataVector(java.util.Vector,java.util.Vector)\"\u003e\u003ccode\u003esetDataVector(Vector, Vector)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edataVector\u003c/code\u003e - the new data vector",
          "\u003ccode\u003ecolumnIdentifiers\u003c/code\u003e - the names of the columns"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.event.TableModelEvent",
            "type": "Class"
          },
          "name": "event",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newDataAvailable",
      "comment": "Equivalent to fireTableChanged.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eevent\u003c/code\u003e - the change event"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.event.TableModelEvent",
            "type": "Class"
          },
          "name": "e",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newRowsAdded",
      "comment": "Ensures that the new rows have the correct number of columns. This is accomplished by using the setSize method in Vector which truncates vectors which are too long, and appends nulls if they are too short. This method also sends out a tableChanged notification message to all the listeners.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#getDataVector()\"\u003e\u003ccode\u003egetDataVector()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - this \n\u003ccode\u003eTableModelEvent\u003c/code\u003e describes where the rows were added. If \n\u003ccode\u003enull\u003c/code\u003e it assumes all the rows were newly added"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.event.TableModelEvent",
            "type": "Class"
          },
          "name": "event",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "rowsRemoved",
      "comment": "Equivalent to fireTableChanged.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eevent\u003c/code\u003e - the change event"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "rowCount",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setNumRows",
      "comment": "Obsolete as of Java 2 platform v1.3. Please use setRowCount instead.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erowCount\u003c/code\u003e - the new number of rows"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "rowCount",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setRowCount",
      "comment": "Sets the number of rows in the model. If the new size is greater than the current size, new rows are added to the end of the model If the new size is less than the current size, all rows at index rowCount and greater are discarded.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#setColumnCount(int)\"\u003e\u003ccode\u003esetColumnCount(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003erowCount\u003c/code\u003e - number of rows in the model"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "rowData",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addRow",
      "comment": "Adds a row to the end of the model. The new row will contain null values unless rowData is specified. Notification of the row being added will be generated.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erowData\u003c/code\u003e - optional data of the row being added"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "rowData",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addRow",
      "comment": "Adds a row to the end of the model. The new row will contain null values unless rowData is specified. Notification of the row being added will be generated.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erowData\u003c/code\u003e - optional data of the row being added"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "row",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "rowData",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "insertRow",
      "comment": "Inserts a row at row in the model. The new row will contain null values unless rowData is specified. Notification of the row being added will be generated.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erow\u003c/code\u003e - the row index of the row to be inserted",
          "\u003ccode\u003erowData\u003c/code\u003e - optional data of the row being added"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the row was invalid"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "row",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "rowData",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "insertRow",
      "comment": "Inserts a row at row in the model. The new row will contain null values unless rowData is specified. Notification of the row being added will be generated.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erow\u003c/code\u003e - the row index of the row to be inserted",
          "\u003ccode\u003erowData\u003c/code\u003e - optional data of the row being added"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the row was invalid"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "start",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "end",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "to",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "moveRow",
      "comment": "Moves one or more rows from the inclusive range start to end to the to position in the model. After the move, the row that was at index start will be at index to. This method will send a tableChanged notification message to all the listeners.   Examples of moves:\n\n  1. moveRow(1,3,5);\n          a|B|C|D|e|f|g|h|i|j|k   - before\n          a|e|f|g|h|B|C|D|i|j|k   - after\n\n  2. moveRow(6,7,1);\n          a|b|c|d|e|f|G|H|i|j|k   - before\n          a|G|H|b|c|d|e|f|i|j|k   - after",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003estart\u003c/code\u003e - the starting row index to be moved",
          "\u003ccode\u003eend\u003c/code\u003e - the ending row index to be moved",
          "\u003ccode\u003eto\u003c/code\u003e - the destination of the rows to be moved"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if any of the elements would be moved out of the table\u0027s range"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "row",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeRow",
      "comment": "Removes the row at row from the model. Notification of the row being removed will be sent to all the listeners.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erow\u003c/code\u003e - the row index of the row to be removed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the row was invalid"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "columnIdentifiers",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setColumnIdentifiers",
      "comment": "Replaces the column identifiers in the model. If the number of newIdentifiers is greater than the current number of columns, new columns are added to the end of each row in the model. If the number of newIdentifiers is less than the current number of columns, all the extra columns at the end of a row are discarded.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#setNumRows(int)\"\u003e\u003ccode\u003esetNumRows(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIdentifiers\u003c/code\u003e - vector of column identifiers. If \n\u003ccode\u003enull\u003c/code\u003e, set the model to zero columns"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "newIdentifiers",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setColumnIdentifiers",
      "comment": "Replaces the column identifiers in the model. If the number of newIdentifiers is greater than the current number of columns, new columns are added to the end of each row in the model. If the number of newIdentifiers is less than the current number of columns, all the extra columns at the end of a row are discarded.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#setNumRows(int)\"\u003e\u003ccode\u003esetNumRows(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewIdentifiers\u003c/code\u003e - array of column identifiers. If \n\u003ccode\u003enull\u003c/code\u003e, set the model to zero columns"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "columnCount",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setColumnCount",
      "comment": "Sets the number of columns in the model. If the new size is greater than the current size, new columns are added to the end of the model with null cell values. If the new size is less than the current size, all columns at index columnCount and greater are discarded.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#setColumnCount(int)\"\u003e\u003ccode\u003esetColumnCount(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnCount\u003c/code\u003e - the new number of columns in the model"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "columnName",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addColumn",
      "comment": "Adds a column to the model. The new column will have the identifier columnName, which may be null. This method will send a tableChanged notification message to all the listeners. This method is a cover for addColumn(Object, Vector) which uses null as the data vector.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecolumnName\u003c/code\u003e - the identifier of the column being added"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "columnName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "columnData",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addColumn",
      "comment": "Adds a column to the model. The new column will have the identifier columnName, which may be null. columnData is the optional vector of data for the column. If it is null the column is filled with null values. Otherwise, the new data will be added to model starting with the first element going to row 0, etc. This method will send a tableChanged notification message to all the listeners.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecolumnName\u003c/code\u003e - the identifier of the column being added",
          "\u003ccode\u003ecolumnData\u003c/code\u003e - optional data of the column being added"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "columnName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "columnData",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addColumn",
      "comment": "Adds a column to the model. The new column will have the identifier columnName. columnData is the optional array of data for the column. If it is null the column is filled with null values. Otherwise, the new data will be added to model starting with the first element going to row 0, etc. This method will send a tableChanged notification message to all the listeners.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#addColumn(java.lang.Object,java.util.Vector)\"\u003e\u003ccode\u003eaddColumn(Object, Vector)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnName\u003c/code\u003e - identifier of the newly created column",
          "\u003ccode\u003ecolumnData\u003c/code\u003e - new data to be added to the column"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRowCount",
      "comment": "Returns the number of rows in this data table.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#getColumnCount()\"\u003e\u003ccode\u003eTableModel.getColumnCount()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#getRowCount()\"\u003egetRowCount\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html\" title\u003d\"interface in javax.swing.table\"\u003eTableModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the number of rows in the model"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColumnCount",
      "comment": "Returns the number of columns in this data table.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#getRowCount()\"\u003e\u003ccode\u003eTableModel.getRowCount()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#getColumnCount()\"\u003egetColumnCount\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html\" title\u003d\"interface in javax.swing.table\"\u003eTableModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the number of columns in the model"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "column",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColumnName",
      "comment": "Returns the column name.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/AbstractTableModel.html#getColumnName(int)\"\u003egetColumnName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/AbstractTableModel.html\" title\u003d\"class in javax.swing.table\"\u003eAbstractTableModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#getColumnName(int)\"\u003egetColumnName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html\" title\u003d\"interface in javax.swing.table\"\u003eTableModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumn\u003c/code\u003e - the column being queried"
        ],
        "return": [
          "a name for this column using the string value of the appropriate member in \n\u003ccode\u003ecolumnIdentifiers\u003c/code\u003e. If \n\u003ccode\u003ecolumnIdentifiers\u003c/code\u003e does not have an entry for this index, returns the default name provided by the superclass."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "row",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "column",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isCellEditable",
      "comment": "Returns true regardless of parameter values.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#setValueAt(java.lang.Object,int,int)\"\u003e\u003ccode\u003esetValueAt(java.lang.Object, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/AbstractTableModel.html#isCellEditable(int,int)\"\u003eisCellEditable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/AbstractTableModel.html\" title\u003d\"class in javax.swing.table\"\u003eAbstractTableModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#isCellEditable(int,int)\"\u003eisCellEditable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html\" title\u003d\"interface in javax.swing.table\"\u003eTableModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003erow\u003c/code\u003e - the row whose value is to be queried",
          "\u003ccode\u003ecolumn\u003c/code\u003e - the column whose value is to be queried"
        ],
        "return": [
          "true"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "row",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "column",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getValueAt",
      "comment": "Returns an attribute value for the cell at row and column.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#getValueAt(int,int)\"\u003egetValueAt\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html\" title\u003d\"interface in javax.swing.table\"\u003eTableModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003erow\u003c/code\u003e - the row whose value is to be queried",
          "\u003ccode\u003ecolumn\u003c/code\u003e - the column whose value is to be queried"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if an invalid row or column was given"
        ],
        "return": [
          "the value Object at the specified cell"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "aValue",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "row",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "column",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setValueAt",
      "comment": "Sets the object value for the cell at column and row. aValue is the new value. This method will generate a tableChanged notification.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#getValueAt(int,int)\"\u003e\u003ccode\u003eTableModel.getValueAt(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#isCellEditable(int,int)\"\u003e\u003ccode\u003eTableModel.isCellEditable(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/AbstractTableModel.html#setValueAt(java.lang.Object,int,int)\"\u003esetValueAt\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/AbstractTableModel.html\" title\u003d\"class in javax.swing.table\"\u003eAbstractTableModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#setValueAt(java.lang.Object,int,int)\"\u003esetValueAt\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html\" title\u003d\"interface in javax.swing.table\"\u003eTableModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaValue\u003c/code\u003e - the new value; this can be null",
          "\u003ccode\u003erow\u003c/code\u003e - the row whose value is to be changed",
          "\u003ccode\u003ecolumn\u003c/code\u003e - the column whose value is to be changed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if an invalid row or column was given"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Vector",
        "parameters": [
          {
            "name": "java.lang.Object",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "anArray",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 12,
      "name": "convertToVector",
      "comment": "Returns a vector that contains the same objects as the array.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eanArray\u003c/code\u003e - the array to be converted"
        ],
        "return": [
          "the new vector; if \n\u003ccode\u003eanArray\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, returns \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Vector",
        "parameters": [
          {
            "name": "java.util.Vector",
            "parameters": [
              {
                "name": "java.lang.Object",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 2
          },
          "name": "anArray",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 12,
      "name": "convertToVector",
      "comment": "Returns a vector of vectors that contains the same objects as the array.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eanArray\u003c/code\u003e - the double array to be converted"
        ],
        "return": [
          "the new vector of vectors; if \n\u003ccode\u003eanArray\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, returns \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a default DefaultTableModel which is a table of zero columns and zero rows.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "rowCount",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "columnCount",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a DefaultTableModel with rowCount and columnCount of null object values.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#setValueAt(java.lang.Object,int,int)\"\u003e\u003ccode\u003esetValueAt(java.lang.Object, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003erowCount\u003c/code\u003e - the number of rows the table holds",
          "\u003ccode\u003ecolumnCount\u003c/code\u003e - the number of columns the table holds"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "columnNames",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "rowCount",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a DefaultTableModel with as many columns as there are elements in columnNames and rowCount of null object values. Each column\u0027s name will be taken from the columnNames vector.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#setDataVector(java.util.Vector,java.util.Vector)\"\u003e\u003ccode\u003esetDataVector(java.util.Vector\u0026lt;? extends java.util.Vector\u0026gt;, java.util.Vector\u0026lt;?\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#setValueAt(java.lang.Object,int,int)\"\u003e\u003ccode\u003esetValueAt(java.lang.Object, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnNames\u003c/code\u003e - \n\u003ccode\u003evector\u003c/code\u003e containing the names of the new columns; if this is \n\u003ccode\u003enull\u003c/code\u003e then the model has no columns",
          "\u003ccode\u003erowCount\u003c/code\u003e - the number of rows the table holds"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "columnNames",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "rowCount",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a DefaultTableModel with as many columns as there are elements in columnNames and rowCount of null object values. Each column\u0027s name will be taken from the columnNames array.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#setDataVector(java.util.Vector,java.util.Vector)\"\u003e\u003ccode\u003esetDataVector(java.util.Vector\u0026lt;? extends java.util.Vector\u0026gt;, java.util.Vector\u0026lt;?\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#setValueAt(java.lang.Object,int,int)\"\u003e\u003ccode\u003esetValueAt(java.lang.Object, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnNames\u003c/code\u003e - \n\u003ccode\u003earray\u003c/code\u003e containing the names of the new columns; if this is \n\u003ccode\u003enull\u003c/code\u003e then the model has no columns",
          "\u003ccode\u003erowCount\u003c/code\u003e - the number of rows the table holds"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "java.util.Vector",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "data",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "columnNames",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a DefaultTableModel and initializes the table by passing data and columnNames to the setDataVector method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#getDataVector()\"\u003e\u003ccode\u003egetDataVector()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#setDataVector(java.util.Vector,java.util.Vector)\"\u003e\u003ccode\u003esetDataVector(java.util.Vector\u0026lt;? extends java.util.Vector\u0026gt;, java.util.Vector\u0026lt;?\u0026gt;)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - the data of the table, a \n\u003ccode\u003eVector\u003c/code\u003e of \n\u003ccode\u003eVector\u003c/code\u003es of \n\u003ccode\u003eObject\u003c/code\u003e values",
          "\u003ccode\u003ecolumnNames\u003c/code\u003e - \n\u003ccode\u003evector\u003c/code\u003e containing the names of the new columns"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 2
          },
          "name": "data",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "columnNames",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a DefaultTableModel and initializes the table by passing data and columnNames to the setDataVector method. The first index in the Object[][] array is the row index and the second is the column index.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#getDataVector()\"\u003e\u003ccode\u003egetDataVector()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#setDataVector(java.util.Vector,java.util.Vector)\"\u003e\u003ccode\u003esetDataVector(java.util.Vector\u0026lt;? extends java.util.Vector\u0026gt;, java.util.Vector\u0026lt;?\u0026gt;)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - the data of the table",
          "\u003ccode\u003ecolumnNames\u003c/code\u003e - the names of the columns"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.table.DefaultTableModel",
  "comment": "This is an implementation of \n\u003ccode\u003eTableModel\u003c/code\u003e that uses a \n\u003ccode\u003eVector\u003c/code\u003e of \n\u003ccode\u003eVectors\u003c/code\u003e to store the cell value objects. \n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e \u003ccode\u003eDefaultTableModel\u003c/code\u003e returns a column class of \u003ccode\u003eObject\u003c/code\u003e. When \u003ccode\u003eDefaultTableModel\u003c/code\u003e is used with a \u003ccode\u003eTableRowSorter\u003c/code\u003e this will result in extensive use of \u003ccode\u003etoString\u003c/code\u003e, which for non-\u003ccode\u003eString\u003c/code\u003e data types is expensive. If you use \u003ccode\u003eDefaultTableModel\u003c/code\u003e with a \u003ccode\u003eTableRowSorter\u003c/code\u003e you are strongly encouraged to override \u003ccode\u003egetColumnClass\u003c/code\u003e to return the appropriate type. \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html\" title\u003d\"interface in javax.swing.table\"\u003e\u003ccode\u003eTableModel\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/DefaultTableModel.html#getDataVector()\"\u003e\u003ccode\u003egetDataVector()\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}