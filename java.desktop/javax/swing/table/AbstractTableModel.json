{
  "packageName": "javax.swing.table",
  "simpleName": "AbstractTableModel",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.swing.event.EventListenerList",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "listenerList",
      "comment": "List of listeners",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "column",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColumnName",
      "comment": "Returns a default name for the column using spreadsheet conventions: A, B, C, ... Z, AA, AB, etc. If column cannot be found, returns an empty string.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#getColumnName(int)\"\u003egetColumnName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html\" title\u003d\"interface in javax.swing.table\"\u003eTableModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumn\u003c/code\u003e - the column being queried"
        ],
        "return": [
          "a string containing the default name of \n\u003ccode\u003ecolumn\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "columnName",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "findColumn",
      "comment": "Returns a column given its name. Implementation is naive so this should be overridden if this method is to be called often. This method is not in the TableModel interface and is not used by the JTable.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecolumnName\u003c/code\u003e - string containing name of column to be located"
        ],
        "return": [
          "the column with \n\u003ccode\u003ecolumnName\u003c/code\u003e, or -1 if not found"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "columnIndex",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColumnClass",
      "comment": "Returns Object.class regardless of columnIndex.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#getColumnClass(int)\"\u003egetColumnClass\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html\" title\u003d\"interface in javax.swing.table\"\u003eTableModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the column being queried"
        ],
        "return": [
          "the Object.class"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "rowIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "columnIndex",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isCellEditable",
      "comment": "Returns false. This is the default implementation for all cells.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#setValueAt(java.lang.Object,int,int)\"\u003e\u003ccode\u003eTableModel.setValueAt(java.lang.Object, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#isCellEditable(int,int)\"\u003eisCellEditable\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html\" title\u003d\"interface in javax.swing.table\"\u003eTableModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003erowIndex\u003c/code\u003e - the row being queried",
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - the column being queried"
        ],
        "return": [
          "false"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "aValue",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "rowIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "columnIndex",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setValueAt",
      "comment": "This empty implementation is provided so users don\u0027t have to implement this method if their data model is not editable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#getValueAt(int,int)\"\u003e\u003ccode\u003eTableModel.getValueAt(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#isCellEditable(int,int)\"\u003e\u003ccode\u003eTableModel.isCellEditable(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#setValueAt(java.lang.Object,int,int)\"\u003esetValueAt\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html\" title\u003d\"interface in javax.swing.table\"\u003eTableModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaValue\u003c/code\u003e - value to assign to cell",
          "\u003ccode\u003erowIndex\u003c/code\u003e - row of cell",
          "\u003ccode\u003ecolumnIndex\u003c/code\u003e - column of cell"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.event.TableModelListener",
            "type": "Class"
          },
          "name": "l",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addTableModelListener",
      "comment": "Adds a listener to the list that\u0027s notified each time a change to the data model occurs.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#addTableModelListener(javax.swing.event.TableModelListener)\"\u003eaddTableModelListener\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html\" title\u003d\"interface in javax.swing.table\"\u003eTableModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the TableModelListener"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.event.TableModelListener",
            "type": "Class"
          },
          "name": "l",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeTableModelListener",
      "comment": "Removes a listener from the list that\u0027s notified each time a change to the data model occurs.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html#removeTableModelListener(javax.swing.event.TableModelListener)\"\u003eremoveTableModelListener\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html\" title\u003d\"interface in javax.swing.table\"\u003eTableModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the TableModelListener"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.event.TableModelListener",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTableModelListeners",
      "comment": "Returns an array of all the table model listeners registered on this model.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/AbstractTableModel.html#addTableModelListener(javax.swing.event.TableModelListener)\"\u003e\u003ccode\u003eaddTableModelListener(javax.swing.event.TableModelListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/AbstractTableModel.html#removeTableModelListener(javax.swing.event.TableModelListener)\"\u003e\u003ccode\u003eremoveTableModelListener(javax.swing.event.TableModelListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "all of this model\u0027s \n\u003ccode\u003eTableModelListener\u003c/code\u003es or an empty array if no table model listeners are currently registered"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "fireTableDataChanged",
      "comment": "Notifies all listeners that all cell values in the table\u0027s rows may have changed. The number of rows may also have changed and the JTable should redraw the table from scratch. The structure of the table (as in the order of the columns) is assumed to be the same.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableModelEvent.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eTableModelEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/EventListenerList.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eEventListenerList\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTable.html#tableChanged(javax.swing.event.TableModelEvent)\"\u003e\u003ccode\u003eJTable.tableChanged(TableModelEvent)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "fireTableStructureChanged",
      "comment": "Notifies all listeners that the table\u0027s structure has changed. The number of columns in the table, and the names and types of the new columns may be different from the previous state. If the JTable receives this event and its autoCreateColumnsFromModel flag is set it discards any table columns that it had and reallocates default columns in the order they appear in the model. This is the same as calling setModel(TableModel) on the JTable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableModelEvent.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eTableModelEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/EventListenerList.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eEventListenerList\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "firstRow",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "lastRow",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "fireTableRowsInserted",
      "comment": "Notifies all listeners that rows in the range [firstRow, lastRow], inclusive, have been inserted.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableModelEvent.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eTableModelEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/EventListenerList.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eEventListenerList\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003efirstRow\u003c/code\u003e - the first row",
          "\u003ccode\u003elastRow\u003c/code\u003e - the last row"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "firstRow",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "lastRow",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "fireTableRowsUpdated",
      "comment": "Notifies all listeners that rows in the range [firstRow, lastRow], inclusive, have been updated.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableModelEvent.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eTableModelEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/EventListenerList.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eEventListenerList\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003efirstRow\u003c/code\u003e - the first row",
          "\u003ccode\u003elastRow\u003c/code\u003e - the last row"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "firstRow",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "lastRow",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "fireTableRowsDeleted",
      "comment": "Notifies all listeners that rows in the range [firstRow, lastRow], inclusive, have been deleted.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableModelEvent.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eTableModelEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/EventListenerList.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eEventListenerList\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003efirstRow\u003c/code\u003e - the first row",
          "\u003ccode\u003elastRow\u003c/code\u003e - the last row"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "row",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "column",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "fireTableCellUpdated",
      "comment": "Notifies all listeners that the value of the cell at [row, column] has been updated.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableModelEvent.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eTableModelEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/EventListenerList.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eEventListenerList\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003erow\u003c/code\u003e - row of cell which has been updated",
          "\u003ccode\u003ecolumn\u003c/code\u003e - column of cell which has been updated"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.event.TableModelEvent",
            "type": "Class"
          },
          "name": "e",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "fireTableChanged",
      "comment": "Forwards the given notification event to all TableModelListeners that registered themselves as listeners for this table model.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/AbstractTableModel.html#addTableModelListener(javax.swing.event.TableModelListener)\"\u003e\u003ccode\u003eaddTableModelListener(javax.swing.event.TableModelListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableModelEvent.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eTableModelEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/EventListenerList.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eEventListenerList\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event to be forwarded"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "listenerType",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "upperBounds": [
            {
              "name": "java.util.EventListener",
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getListeners",
      "comment": "Returns an array of all the objects currently registered as FooListeners upon this AbstractTableModel. FooListeners are registered using the addFooListener method. You can specify the listenerType argument with a class literal, such as FooListener.class. For example, you can query a model m for its table model listeners with the following code: TableModelListener[] tmls \u003d (TableModelListener[])(m.getListeners(TableModelListener.class)); If no such listeners exist, this method returns an empty array.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the listener type"
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/AbstractTableModel.html#getTableModelListeners()\"\u003e\u003ccode\u003egetTableModelListeners()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elistenerType\u003c/code\u003e - the type of listeners requested"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elistenerType\u003c/code\u003e doesn\u0027t specify a class or interface that implements \n\u003ccode\u003ejava.util.EventListener\u003c/code\u003e"
        ],
        "return": [
          "an array of all objects registered as \n\u003ccode\u003e\u003cem\u003eFoo\u003c/em\u003eListener\u003c/code\u003es on this component, or an empty array if no such listeners have been added"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for subclasses to call.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.swing.table.AbstractTableModel",
  "comment": "This abstract class provides default implementations for most of the methods in the \n\u003ccode\u003eTableModel\u003c/code\u003e interface. It takes care of the management of listeners and provides some conveniences for generating \n\u003ccode\u003eTableModelEvents\u003c/code\u003e and dispatching them to the listeners. To create a concrete \n\u003ccode\u003eTableModel\u003c/code\u003e as a subclass of \n\u003ccode\u003eAbstractTableModel\u003c/code\u003e you need only provide implementations for the following three methods: \n\u003cpre\u003e  public int getRowCount();\n  public int getColumnCount();\n  public Object getValueAt(int row, int column);\n  \u003c/pre\u003e \n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {}
}