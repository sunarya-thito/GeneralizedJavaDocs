{
  "packageName": "javax.swing.table",
  "simpleName": "TableCellEditor",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.swing.CellEditor",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JTable",
            "type": "Class"
          },
          "field": {
            "name": "table"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "isSelected"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "row"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "column"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTableCellEditorComponent",
      "comment": "Sets an initial value for the editor. This will cause the editor to stopEditing and lose any partially edited value if the editor is editing when this method is called. Returns the component that should be added to the client\u0027s Component hierarchy. Once installed in the client\u0027s hierarchy this component will then be able to draw and receive user input.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etable\u003c/code\u003e - the \n\u003ccode\u003eJTable\u003c/code\u003e that is asking the editor to edit; can be \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003evalue\u003c/code\u003e - the value of the cell to be edited; it is up to the specific editor to interpret and draw the value. For example, if value is the string \"true\", it could be rendered as a string or it could be rendered as a check box that is checked. \n\u003ccode\u003enull\u003c/code\u003e is a valid value",
          "\u003ccode\u003eisSelected\u003c/code\u003e - true if the cell is to be rendered with highlighting",
          "\u003ccode\u003erow\u003c/code\u003e - the row of the cell being edited",
          "\u003ccode\u003ecolumn\u003c/code\u003e - the column of the cell being edited"
        ],
        "return": [
          "the component for editing"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.swing.table.TableCellEditor",
  "comment": "This interface defines the method any object that would like to be an editor of values for components such as \n\u003ccode\u003eJListBox\u003c/code\u003e, \n\u003ccode\u003eJComboBox\u003c/code\u003e, \n\u003ccode\u003eJTree\u003c/code\u003e, or \n\u003ccode\u003eJTable\u003c/code\u003e needs to implement.",
  "tagMap": {}
}