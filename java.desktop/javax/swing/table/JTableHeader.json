{
  "packageName": "javax.swing.table",
  "simpleName": "JTableHeader",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.JComponent",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.swing.JTable",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "table",
      "comment": "The table for which this object is the header; the default is null.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.table.TableColumnModel",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "columnModel",
      "comment": "The TableColumnModel of the table header.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "reorderingAllowed",
      "comment": "If true, reordering of columns are allowed by the user; the default is true.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "resizingAllowed",
      "comment": "If true, resizing of columns are allowed by the user; the default is true.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "updateTableInRealTime",
      "comment": "Obsolete as of Java 2 platform v1.3. Real time repaints, in response to column dragging or resizing, are now unconditional.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.table.TableColumn",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 132,
      "name": "resizingColumn",
      "comment": "The index of the column being resized. null if not resizing.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.table.TableColumn",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 132,
      "name": "draggedColumn",
      "comment": "The index of the column being dragged. null if not dragging.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 132,
      "name": "draggedDistance",
      "comment": "The distance from its original position the column has been dragged.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.JTable",
            "type": "Class"
          },
          "name": "table",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setTable",
      "comment": "Sets the table associated with this header.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "escription",
              "value": "The table associated with this header."
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003etable\u003c/code\u003e - the new table"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JTable",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTable",
      "comment": "Returns the table associated with this header.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003etable\u003c/code\u003e property"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "reorderingAllowed",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setReorderingAllowed",
      "comment": "Sets whether the user can drag column headers to reorder columns.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "escription",
              "value": "Whether the user can drag column headers to reorder columns."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/JTableHeader.html#getReorderingAllowed()\"\u003e\u003ccode\u003egetReorderingAllowed()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ereorderingAllowed\u003c/code\u003e - true if the table view should allow reordering; otherwise false"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getReorderingAllowed",
      "comment": "Returns true if the user is allowed to rearrange columns by dragging their headers, false otherwise. The default is true. You can rearrange columns programmatically regardless of this setting.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/JTableHeader.html#setReorderingAllowed(boolean)\"\u003e\u003ccode\u003esetReorderingAllowed(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003ereorderingAllowed\u003c/code\u003e property"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "resizingAllowed",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setResizingAllowed",
      "comment": "Sets whether the user can resize columns by dragging between headers.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "escription",
              "value": "Whether the user can resize columns by dragging between headers."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/JTableHeader.html#getResizingAllowed()\"\u003e\u003ccode\u003egetResizingAllowed()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eresizingAllowed\u003c/code\u003e - true if table view should allow resizing"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getResizingAllowed",
      "comment": "Returns true if the user is allowed to resize columns by dragging between their headers, false otherwise. The default is true. You can resize columns programmatically regardless of this setting.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/JTableHeader.html#setResizingAllowed(boolean)\"\u003e\u003ccode\u003esetResizingAllowed(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eresizingAllowed\u003c/code\u003e property"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.table.TableColumn",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDraggedColumn",
      "comment": "Returns the dragged column, if and only if, a drag is in process, otherwise returns null.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/JTableHeader.html#getDraggedDistance()\"\u003e\u003ccode\u003egetDraggedDistance()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the dragged column, if a drag is in process, otherwise returns \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDraggedDistance",
      "comment": "Returns the column\u0027s horizontal distance from its original position, if and only if, a drag is in process. Otherwise, the the return value is meaningless.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/JTableHeader.html#getDraggedColumn()\"\u003e\u003ccode\u003egetDraggedColumn()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the column\u0027s horizontal distance from its original position, if a drag is in process, otherwise the return value is meaningless"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.table.TableColumn",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getResizingColumn",
      "comment": "Returns the resizing column. If no column is being resized this method returns null.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the resizing column, if a resize is in process, otherwise returns \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "flag",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setUpdateTableInRealTime",
      "comment": "Obsolete as of Java 2 platform v1.3. Real time repaints, in response to column dragging or resizing, are now unconditional.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eflag\u003c/code\u003e - true if tableView should update the body of the table in real time"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUpdateTableInRealTime",
      "comment": "Obsolete as of Java 2 platform v1.3. Real time repaints, in response to column dragging or resizing, are now unconditional.",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if the table updates in real time"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.table.TableCellRenderer",
            "type": "Class"
          },
          "name": "defaultRenderer",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDefaultRenderer",
      "comment": "Sets the default renderer to be used when no headerRenderer is defined by a TableColumn.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edefaultRenderer\u003c/code\u003e - the default renderer"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.table.TableCellRenderer",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDefaultRenderer",
      "comment": "Returns the default renderer used when no headerRenderer is defined by a TableColumn.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the default renderer"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "name": "point",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "columnAtPoint",
      "comment": "Returns the index of the column that point lies in, or -1 if it lies out of bounds.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epoint\u003c/code\u003e - if this \n\u003ccode\u003epoint\u003c/code\u003e lies within a column, the index of that column will be returned; otherwise it is out of bounds and -1 is returned"
        ],
        "return": [
          "the index of the column that \n\u003ccode\u003epoint\u003c/code\u003e lies in, or -1 if it lies out of bounds"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Rectangle",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "column",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHeaderRect",
      "comment": "Returns the rectangle containing the header tile at column. When the column parameter is out of bounds this method uses the same conventions as the JTable method getCellRect.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTable.html#getCellRect(int,int,boolean)\"\u003e\u003ccode\u003eJTable.getCellRect(int, int, boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumn\u003c/code\u003e - index of the column"
        ],
        "return": [
          "the rectangle containing the header tile at \n\u003ccode\u003ecolumn\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.event.MouseEvent",
            "type": "Class"
          },
          "name": "event",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getToolTipText",
      "comment": "Allows the renderer\u0027s tips to be used if there is text set.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getToolTipText(java.awt.event.MouseEvent)\"\u003egetToolTipText\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eevent\u003c/code\u003e - the location of the event identifies the proper renderer and, therefore, the proper tip"
        ],
        "return": [
          "the tool tip for this component"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPreferredSize",
      "comment": "Returns the preferred size of the table header. This is the size required to display the header and requested for the viewport. The returned Dimension width will always be calculated by the underlying TableHeaderUI, regardless of any width specified by JComponent.setPreferredSize(java.awt.Dimension)",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#setPreferredSize(java.awt.Dimension)\"\u003e\u003ccode\u003eJComponent.setPreferredSize(java.awt.Dimension)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003e\u003ccode\u003eComponentUI\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getPreferredSize()\"\u003egetPreferredSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the size"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.plaf.TableHeaderUI",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUI",
      "comment": "Returns the look and feel (L\u0026F) object that renders this component.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getUI()\"\u003egetUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eTableHeaderUI\u003c/code\u003e object that renders this component"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.plaf.TableHeaderUI",
            "type": "Class"
          },
          "name": "ui",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setUI",
      "comment": "Sets the look and feel (L\u0026F) object that renders this component.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#getUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eUIDefaults.getUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eui\u003c/code\u003e - the \n\u003ccode\u003eTableHeaderUI\u003c/code\u003e L\u0026amp;F object"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "updateUI",
      "comment": "Notification from the UIManager that the look and feel (L\u0026F) has changed. Replaces the current UI object with the latest version from the UIManager.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#updateUI()\"\u003e\u003ccode\u003eJComponent.updateUI()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#updateUI()\"\u003eupdateUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUIClassID",
      "comment": "Returns the suffix used to construct the name of the look and feel (L\u0026F) class used to render this component.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getUIClassID()\"\u003e\u003ccode\u003eJComponent.getUIClassID()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#getUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eUIDefaults.getUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getUIClassID()\"\u003egetUIClassID\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the string \"TableHeaderUI\""
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.table.TableColumnModel",
            "type": "Class"
          },
          "name": "columnModel",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setColumnModel",
      "comment": "Sets the column model for this table to newModel and registers for listener notifications from the new column model.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "escription",
              "value": "The object governing the way columns appear in the view."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/JTableHeader.html#getColumnModel()\"\u003e\u003ccode\u003egetColumnModel()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolumnModel\u003c/code\u003e - the new data source for this table"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003enewModel\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.table.TableColumnModel",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColumnModel",
      "comment": "Returns the TableColumnModel that contains all column information of this table header.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/JTableHeader.html#setColumnModel(javax.swing.table.TableColumnModel)\"\u003e\u003ccode\u003esetColumnModel(javax.swing.table.TableColumnModel)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003ecolumnModel\u003c/code\u003e property"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.event.TableColumnModelEvent",
            "type": "Class"
          },
          "name": "e",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "columnAdded",
      "comment": "Invoked when a column is added to the table column model. Application code will not use these methods explicitly, they are used internally by JTable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableColumnModelListener.html\" title\u003d\"interface in javax.swing.event\"\u003e\u003ccode\u003eTableColumnModelListener\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableColumnModelListener.html#columnAdded(javax.swing.event.TableColumnModelEvent)\"\u003ecolumnAdded\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableColumnModelListener.html\" title\u003d\"interface in javax.swing.event\"\u003eTableColumnModelListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event received"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.event.TableColumnModelEvent",
            "type": "Class"
          },
          "name": "e",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "columnRemoved",
      "comment": "Invoked when a column is removed from the table column model. Application code will not use these methods explicitly, they are used internally by JTable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableColumnModelListener.html\" title\u003d\"interface in javax.swing.event\"\u003e\u003ccode\u003eTableColumnModelListener\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableColumnModelListener.html#columnRemoved(javax.swing.event.TableColumnModelEvent)\"\u003ecolumnRemoved\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableColumnModelListener.html\" title\u003d\"interface in javax.swing.event\"\u003eTableColumnModelListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event received"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.event.TableColumnModelEvent",
            "type": "Class"
          },
          "name": "e",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "columnMoved",
      "comment": "Invoked when a column is repositioned. Application code will not use these methods explicitly, they are used internally by JTable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableColumnModelListener.html\" title\u003d\"interface in javax.swing.event\"\u003e\u003ccode\u003eTableColumnModelListener\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableColumnModelListener.html#columnMoved(javax.swing.event.TableColumnModelEvent)\"\u003ecolumnMoved\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableColumnModelListener.html\" title\u003d\"interface in javax.swing.event\"\u003eTableColumnModelListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event received"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.event.ChangeEvent",
            "type": "Class"
          },
          "name": "e",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "columnMarginChanged",
      "comment": "Invoked when a column is moved due to a margin change. Application code will not use these methods explicitly, they are used internally by JTable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableColumnModelListener.html\" title\u003d\"interface in javax.swing.event\"\u003e\u003ccode\u003eTableColumnModelListener\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableColumnModelListener.html#columnMarginChanged(javax.swing.event.ChangeEvent)\"\u003ecolumnMarginChanged\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableColumnModelListener.html\" title\u003d\"interface in javax.swing.event\"\u003eTableColumnModelListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event received"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.event.ListSelectionEvent",
            "type": "Class"
          },
          "name": "e",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "columnSelectionChanged",
      "comment": "Invoked when the selection model of the TableColumnModel is changed. This method currently has no effect (the header is not redrawn). Application code will not use these methods explicitly, they are used internally by JTable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableColumnModelListener.html\" title\u003d\"interface in javax.swing.event\"\u003e\u003ccode\u003eTableColumnModelListener\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableColumnModelListener.html#columnSelectionChanged(javax.swing.event.ListSelectionEvent)\"\u003ecolumnSelectionChanged\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TableColumnModelListener.html\" title\u003d\"interface in javax.swing.event\"\u003eTableColumnModelListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event received"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.table.TableColumnModel",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createDefaultColumnModel",
      "comment": "Returns the default column model object which is a DefaultTableColumnModel. A subclass can override this method to return a different column model object",
      "annotations": [],
      "tagMap": {
        "return": [
          "the default column model object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.table.TableCellRenderer",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createDefaultRenderer",
      "comment": "Returns a default renderer to be used when no header renderer is defined by a TableColumn.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the default table column renderer"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "initializeLocalVars",
      "comment": "Initializes the local variables and properties with default values. Used by the constructor methods.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "resizeAndRepaint",
      "comment": "Sizes the header and marks it as needing display. Equivalent to revalidate followed by repaint.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.table.TableColumn",
            "type": "Class"
          },
          "name": "aColumn",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDraggedColumn",
      "comment": "Sets the header\u0027s draggedColumn to aColumn. Application code will not use this method explicitly, it is used internally by the column dragging mechanism.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eaColumn\u003c/code\u003e - the column being dragged, or \n\u003ccode\u003enull\u003c/code\u003e if no column is being dragged"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "distance",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDraggedDistance",
      "comment": "Sets the header\u0027s draggedDistance to distance.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edistance\u003c/code\u003e - the distance dragged"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.table.TableColumn",
            "type": "Class"
          },
          "name": "aColumn",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setResizingColumn",
      "comment": "Sets the header\u0027s resizingColumn to aColumn. Application code will not use this method explicitly, it is used internally by the column sizing mechanism.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eaColumn\u003c/code\u003e - the column being resized, or \n\u003ccode\u003enull\u003c/code\u003e if no column is being resized"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "paramString",
      "comment": "Returns a string representation of this JTableHeader. This method is intended to be used only for debugging purposes, and the content and format of the returned string may vary between implementations. The returned string may be empty but may not be null. Overriding paramString to provide information about the specific new aspects of the JFC components.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#paramString()\"\u003eparamString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this \n\u003ccode\u003eJTableHeader\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.accessibility.AccessibleContext",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAccessibleContext",
      "comment": "Gets the AccessibleContext associated with this JTableHeader. For JTableHeaders, the AccessibleContext takes the form of an AccessibleJTableHeader. A new AccessibleJTableHeader instance is created if necessary.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html\" title\u003d\"class in java.awt\"\u003eComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html\" title\u003d\"interface in javax.accessibility\"\u003eAccessible\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an AccessibleJTableHeader that serves as the AccessibleContext of this JTableHeader"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a JTableHeader with a default TableColumnModel.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/JTableHeader.html#createDefaultColumnModel()\"\u003e\u003ccode\u003ecreateDefaultColumnModel()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.table.TableColumnModel",
            "type": "Class"
          },
          "name": "cm",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a JTableHeader which is initialized with cm as the column model. If cm is null this method will initialize the table header with a default TableColumnModel.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/JTableHeader.html#createDefaultColumnModel()\"\u003e\u003ccode\u003ecreateDefaultColumnModel()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecm\u003c/code\u003e - the column model for the table"
        ]
      }
    }
  ],
  "innerClasses": [
    "javax.swing.table.JTableHeader$AccessibleJTableHeader"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.table.JTableHeader",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTable.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJTable\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}