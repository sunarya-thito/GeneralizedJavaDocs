{
  "packageName": "javax.swing",
  "simpleName": "JRadioButton",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.JToggleButton",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "updateUI",
      "comment": "Resets the UI property to a value from the current look and feel.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#updateUI()\"\u003e\u003ccode\u003eJComponent.updateUI()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JToggleButton.html#updateUI()\"\u003eupdateUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JToggleButton.html\" title\u003d\"class in javax.swing\"\u003eJToggleButton\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUIClassID",
      "comment": "Returns the name of the L\u0026F class that renders this component.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            },
            {
              "name": "expert",
              "value": true
            },
            {
              "name": "escription",
              "value": "A string that specifies the name of the L\u0026F class."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getUIClassID()\"\u003e\u003ccode\u003eJComponent.getUIClassID()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#getUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eUIDefaults.getUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JToggleButton.html#getUIClassID()\"\u003egetUIClassID\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JToggleButton.html\" title\u003d\"class in javax.swing\"\u003eJToggleButton\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the string \"RadioButtonUI\""
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "paramString",
      "comment": "Returns a string representation of this JRadioButton. This method is intended to be used only for debugging purposes, and the content and format of the returned string may vary between implementations. The returned string may be empty but may not be null.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JToggleButton.html#paramString()\"\u003eparamString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JToggleButton.html\" title\u003d\"class in javax.swing\"\u003eJToggleButton\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this JRadioButton."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.accessibility.AccessibleContext",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAccessibleContext",
      "comment": "Gets the AccessibleContext associated with this JRadioButton. For JRadioButtons, the AccessibleContext takes the form of an AccessibleJRadioButton. A new AccessibleJRadioButton instance is created if necessary.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            },
            {
              "name": "expert",
              "value": true
            },
            {
              "name": "escription",
              "value": "The AccessibleContext associated with this Button"
            }
          ]
        }
      ],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JToggleButton.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JToggleButton.html\" title\u003d\"class in javax.swing\"\u003eJToggleButton\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html\" title\u003d\"interface in javax.accessibility\"\u003eAccessible\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an AccessibleJRadioButton that serves as the AccessibleContext of this JRadioButton"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an initially unselected radio button with no set text.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "icon",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an initially unselected radio button with the specified image but no text.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eicon\u003c/code\u003e - the image that the button should display"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Action",
            "type": "Class"
          },
          "name": "a",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a radiobutton where properties are taken from the Action supplied.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ea\u003c/code\u003e - an \n\u003ccode\u003eAction\u003c/code\u003e"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "icon",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "selected",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a radio button with the specified image and selection state, but no text.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eicon\u003c/code\u003e - the image that the button should display",
          "\u003ccode\u003eselected\u003c/code\u003e - if true, the button is initially selected; otherwise, the button is initially unselected"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "text",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an unselected radio button with the specified text.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the string displayed on the radio button"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "text",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "selected",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a radio button with the specified text and selection state.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the string displayed on the radio button",
          "\u003ccode\u003eselected\u003c/code\u003e - if true, the button is initially selected; otherwise, the button is initially unselected"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "text",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "icon",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a radio button that has the specified text and image, and that is initially unselected.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the string displayed on the radio button",
          "\u003ccode\u003eicon\u003c/code\u003e - the image that the button should display"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "text",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "icon",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "selected",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a radio button that has the specified text, image, and selection state.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - the string displayed on the radio button",
          "\u003ccode\u003eicon\u003c/code\u003e - the image that the button should display",
          "\u003ccode\u003eselected\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e, the button is initially selected otherwise, the button is initially unselected"
        ]
      }
    }
  ],
  "innerClasses": [
    "javax.swing.JRadioButton$AccessibleJRadioButton"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.JRadioButton",
  "comment": "An implementation of a radio button -- an item that can be selected or deselected, and which displays its state to the user. Used with a \n\u003ca href\u003d\"ButtonGroup.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eButtonGroup\u003c/code\u003e\u003c/a\u003e object to create a group of buttons in which only one button at a time can be selected. (Create a ButtonGroup object and use its \n\u003ccode\u003eadd\u003c/code\u003e method to include the JRadioButton objects in the group.) \n\u003cblockquote\u003e \n \u003cstrong\u003eNote:\u003c/strong\u003e The ButtonGroup object is a logical grouping -- not a physical grouping. To create a button panel, you should still create a \n \u003ca href\u003d\"JPanel.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJPanel\u003c/code\u003e\u003c/a\u003e or similar container-object and add a \n \u003ca href\u003d\"border/Border.html\" title\u003d\"interface in javax.swing.border\"\u003e\u003ccode\u003eBorder\u003c/code\u003e\u003c/a\u003e to it to set it off from surrounding components. \n\u003c/blockquote\u003e \n\u003cp\u003e Buttons can be configured, and to some degree controlled, by \u003ccode\u003e\u003ca href\u003d\"Action.html\"\u003eAction\u003c/a\u003e\u003c/code\u003es. Using an \u003ccode\u003eAction\u003c/code\u003e with a button has many benefits beyond directly configuring a button. Refer to \u003ca href\u003d\"Action.html#buttonActions\"\u003e Swing Components Supporting \u003ccode\u003eAction\u003c/code\u003e\u003c/a\u003e for more details, and you can find more information in \u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/misc/action.html\"\u003eHow to Use Actions\u003c/a\u003e, a section in \u003cem\u003eThe Java Tutorial\u003c/em\u003e. \u003c/p\u003e\n\u003cp\u003e See \u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/components/button.html\"\u003eHow to Use Buttons, Check Boxes, and Radio Buttons\u003c/a\u003e in \u003cem\u003eThe Java Tutorial\u003c/em\u003e for further documentation. \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Swing is not thread safe. For more information see \u003ca href\u003d\"package-summary.html#threading\"\u003eSwing\u0027s Threading Policy\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ButtonGroup.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eButtonGroup\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JCheckBox.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJCheckBox\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}