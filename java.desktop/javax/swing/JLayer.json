{
  "packageName": "javax.swing",
  "simpleName": "JLayer",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.JComponent",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "owner": "javax.swing.JLayer",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getView",
      "comment": "Returns the JLayer\u0027s view component or null. This is a bound property.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setView(V)\"\u003e\u003ccode\u003esetView(Component)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eJLayer\u003c/code\u003e\u0027s view component or \n\u003ccode\u003enull\u003c/code\u003e if none exists"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "owner": "javax.swing.JLayer",
            "name": "V",
            "type": "Variable"
          },
          "field": {
            "name": "view"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setView",
      "comment": "Sets the JLayer\u0027s view component, which can be null. This is a bound property.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#getView()\"\u003e\u003ccode\u003egetView()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eview\u003c/code\u003e - the view component for this \n\u003ccode\u003eJLayer\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.plaf.LayerUI",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "owner": "javax.swing.JLayer",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "ui"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setUI",
      "comment": "Sets the LayerUI which will perform painting and receive input events for this JLayer.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eui\u003c/code\u003e - the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html\" title\u003d\"class in javax.swing.plaf\"\u003e\u003ccode\u003eLayerUI\u003c/code\u003e\u003c/a\u003e for this \n\u003ccode\u003eJLayer\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.plaf.LayerUI",
        "parameters": [
          {
            "lowerBounds": [
              {
                "owner": "javax.swing.JLayer",
                "name": "V",
                "type": "Variable"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUI",
      "comment": "Returns the LayerUI for this JLayer.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getUI()\"\u003egetUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eLayerUI\u003c/code\u003e for this \n\u003ccode\u003eJLayer\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JPanel",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getGlassPane",
      "comment": "Returns the JLayer\u0027s glassPane component or null. This is a bound property.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setGlassPane(javax.swing.JPanel)\"\u003e\u003ccode\u003esetGlassPane(JPanel)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eJLayer\u003c/code\u003e\u0027s glassPane component or \n\u003ccode\u003enull\u003c/code\u003e if none exists"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JPanel",
            "type": "Class"
          },
          "field": {
            "name": "glassPane"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setGlassPane",
      "comment": "Sets the JLayer\u0027s glassPane component, which can be null. This is a bound property.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#getGlassPane()\"\u003e\u003ccode\u003egetGlassPane()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eglassPane\u003c/code\u003e - the glassPane component of this \n\u003ccode\u003eJLayer\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JPanel",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createGlassPane",
      "comment": "Called by the constructor methods to create a default glassPane. By default this method creates a new JPanel with visibility set to true and opacity set to false.",
      "tagMap": {
        "return": [
          "the default \n\u003ccode\u003eglassPane\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.LayoutManager",
            "type": "Class"
          },
          "field": {
            "name": "mgr"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLayout",
      "comment": "Sets the layout manager for this container. This method is overridden to prevent the layout manager from being set. Note: If mgr is non-null, this method will throw an exception as layout managers are not supported on a JLayer.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#doLayout()\"\u003e\u003ccode\u003eContainer.doLayout()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#getLayout()\"\u003e\u003ccode\u003eContainer.getLayout()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#invalidate()\"\u003e\u003ccode\u003eContainer.invalidate()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#setLayout(java.awt.LayoutManager)\"\u003esetLayout\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003emgr\u003c/code\u003e - the specified layout manager"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - this method is not supported"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.border.Border",
            "type": "Class"
          },
          "field": {
            "name": "border"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setBorder",
      "comment": "Delegates its functionality to the getView().setBorder(Border) method, if the view component is an instance of javax.swing.JComponent, otherwise this method is a no-op.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#getView()\"\u003e\u003ccode\u003egetView()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#setBorder(javax.swing.border.Border)\"\u003e\u003ccode\u003eJComponent.setBorder(Border)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#setBorder(javax.swing.border.Border)\"\u003esetBorder\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eborder\u003c/code\u003e - the border to be rendered for the \n\u003ccode\u003eview\u003c/code\u003e component"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBorder",
      "comment": "Delegates its functionality to the getView().getBorder() method, if the view component is an instance of javax.swing.JComponent, otherwise returns null.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#getView()\"\u003e\u003ccode\u003egetView()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setBorder(javax.swing.border.Border)\"\u003e\u003ccode\u003esetBorder(javax.swing.border.Border)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getBorder()\"\u003e\u003ccode\u003eJComponent.getBorder()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getBorder()\"\u003egetBorder\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the border object for the \n\u003ccode\u003eview\u003c/code\u003e component"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "comp"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "constraints"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addImpl",
      "comment": "This method is not supported by JLayer and always throws UnsupportedOperationException",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setView(V)\"\u003e\u003ccode\u003esetView(Component)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setGlassPane(javax.swing.JPanel)\"\u003e\u003ccode\u003esetGlassPane(JPanel)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#addImpl(java.awt.Component,java.lang.Object,int)\"\u003eaddImpl\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomp\u003c/code\u003e - the component to be added",
          "\u003ccode\u003econstraints\u003c/code\u003e - an object expressing layout constraints for this component",
          "\u003ccode\u003eindex\u003c/code\u003e - the position in the container\u0027s list at which to insert the component, where \n\u003ccode\u003e-1\u003c/code\u003e means append to the end"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - this method is not supported"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "isPaintingOrigin",
      "comment": "Always returns true to cause painting to originate from JLayer, or one of its ancestors.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#isPaintingOrigin()\"\u003e\u003ccode\u003eJComponent.isPaintingOrigin()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#isPaintingOrigin()\"\u003eisPaintingOrigin\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "paintImmediately",
      "comment": "Delegates its functionality to the LayerUI.paintImmediately(int, int, int, int, JLayer) method, if LayerUI is set.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#repaint(long,int,int,int,int)\"\u003e\u003ccode\u003eJComponent.repaint(long, int, int, int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#isPaintingOrigin()\"\u003e\u003ccode\u003eJComponent.isPaintingOrigin()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#paintImmediately(int,int,int,int)\"\u003epaintImmediately\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the x value of the region to be painted",
          "\u003ccode\u003ey\u003c/code\u003e - the y value of the region to be painted",
          "\u003ccode\u003ew\u003c/code\u003e - the width of the region to be painted",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the region to be painted"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Image",
            "type": "Class"
          },
          "field": {
            "name": "img"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "infoflags"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "imageUpdate",
      "comment": "Delegates its functionality to the LayerUI.imageUpdate(java.awt.Image, int, int, int, int, int, JLayer) method, if the LayerUI is set.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageObserver.html\" title\u003d\"interface in java.awt.image\"\u003e\u003ccode\u003eImageObserver\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Graphics.html#drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)\"\u003e\u003ccode\u003eGraphics.drawImage(Image, int, int, Color, java.awt.image.ImageObserver)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Graphics.html#drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)\"\u003e\u003ccode\u003eGraphics.drawImage(Image, int, int, java.awt.image.ImageObserver)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Graphics.html#drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)\"\u003e\u003ccode\u003eGraphics.drawImage(Image, int, int, int, int, Color, java.awt.image.ImageObserver)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Graphics.html#drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)\"\u003e\u003ccode\u003eGraphics.drawImage(Image, int, int, int, int, java.awt.image.ImageObserver)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageObserver.html#imageUpdate(java.awt.Image,int,int,int,int,int)\"\u003e\u003ccode\u003eImageObserver.imageUpdate(java.awt.Image, int, int, int, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#imageUpdate(java.awt.Image,int,int,int,int,int)\"\u003eimageUpdate\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html\" title\u003d\"class in java.awt\"\u003eComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageObserver.html#imageUpdate(java.awt.Image,int,int,int,int,int)\"\u003eimageUpdate\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageObserver.html\" title\u003d\"interface in java.awt.image\"\u003eImageObserver\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eimg\u003c/code\u003e - the image being observed",
          "\u003ccode\u003einfoflags\u003c/code\u003e - see \n\u003ccode\u003eimageUpdate\u003c/code\u003e for more information",
          "\u003ccode\u003ex\u003c/code\u003e - the \n\u003ci\u003ex\u003c/i\u003e coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - the \n\u003ci\u003ey\u003c/i\u003e coordinate",
          "\u003ccode\u003ew\u003c/code\u003e - the width",
          "\u003ccode\u003eh\u003c/code\u003e - the height"
        ],
        "return": [
          "\u003ccode\u003efalse\u003c/code\u003e if the infoflags indicate that the image is completely loaded; \n\u003ccode\u003etrue\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "paint",
      "comment": "Delegates all painting to the LayerUI object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#paintComponent(java.awt.Graphics)\"\u003e\u003ccode\u003eJComponent.paintComponent(java.awt.Graphics)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#paintBorder(java.awt.Graphics)\"\u003e\u003ccode\u003eJComponent.paintBorder(java.awt.Graphics)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#paintChildren(java.awt.Graphics)\"\u003e\u003ccode\u003eJComponent.paintChildren(java.awt.Graphics)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getComponentGraphics(java.awt.Graphics)\"\u003e\u003ccode\u003eJComponent.getComponentGraphics(java.awt.Graphics)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#repaint(long,int,int,int,int)\"\u003e\u003ccode\u003eJComponent.repaint(long, int, int, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#paint(java.awt.Graphics)\"\u003epaint\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eg\u003c/code\u003e - the \n\u003ccode\u003eGraphics\u003c/code\u003e to render to"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "paintComponent",
      "comment": "This method is empty, because all painting is done by paint(Graphics) and ComponentUI.update(Graphics, JComponent) methods",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#paint(java.awt.Graphics)\"\u003e\u003ccode\u003eJComponent.paint(java.awt.Graphics)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003e\u003ccode\u003eComponentUI\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#paintComponent(java.awt.Graphics)\"\u003epaintComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eg\u003c/code\u003e - the \n\u003ccode\u003eGraphics\u003c/code\u003e object to protect"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isOptimizedDrawingEnabled",
      "comment": "The JLayer overrides the default implementation of this method (in JComponent) to return false. This ensures that the drawing machinery will call the JLayer\u0027s paint implementation rather than messaging the JLayer\u0027s children directly.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#isOptimizedDrawingEnabled()\"\u003eisOptimizedDrawingEnabled\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "false"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.beans.PropertyChangeEvent",
            "type": "Class"
          },
          "field": {
            "name": "evt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "propertyChange",
      "comment": "This method gets called when a bound property is changed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/PropertyChangeListener.html#propertyChange(java.beans.PropertyChangeEvent)\"\u003epropertyChange\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/PropertyChangeListener.html\" title\u003d\"interface in java.beans\"\u003ePropertyChangeListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eevt\u003c/code\u003e - A PropertyChangeEvent object describing the event source and the property that has changed."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "layerEventMask"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLayerEventMask",
      "comment": "Enables the events from JLayer and all its descendants defined by the specified event mask parameter to be delivered to the LayerUI.eventDispatched(AWTEvent, JLayer) method. Events are delivered provided that LayerUI is set for this JLayer and the JLayer is displayable. The following example shows how to correctly use this method in the LayerUI implementations:     public void installUI(JComponent c) {\n       super.installUI(c);\n       JLayer l \u003d (JLayer) c;\n       // this LayerUI will receive only key and focus events\n       l.setLayerEventMask(AWTEvent.KEY_EVENT_MASK | AWTEvent.FOCUS_EVENT_MASK);\n    }\n\n    public void uninstallUI(JComponent c) {\n       super.uninstallUI(c);\n       JLayer l \u003d (JLayer) c;\n       // JLayer must be returned to its initial state\n       l.setLayerEventMask(0);\n    }\n By default JLayer receives no events and its event mask is 0.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#getLayerEventMask()\"\u003e\u003ccode\u003egetLayerEventMask()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#eventDispatched(java.awt.AWTEvent,javax.swing.JLayer)\"\u003e\u003ccode\u003eLayerUI.eventDispatched(AWTEvent, JLayer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#isDisplayable()\"\u003e\u003ccode\u003eComponent.isDisplayable()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elayerEventMask\u003c/code\u003e - the bitmask of event types to receive"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLayerEventMask",
      "comment": "Returns the bitmap of event mask to receive by this JLayer and its LayerUI. It means that LayerUI.eventDispatched(AWTEvent, JLayer) method will only receive events that match the event mask. By default JLayer receives no events.",
      "tagMap": {
        "return": [
          "the bitmask of event types to receive for this \n\u003ccode\u003eJLayer\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "updateUI",
      "comment": "Delegates its functionality to the LayerUI.updateUI(JLayer) method, if LayerUI is set.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#setUI(javax.swing.plaf.ComponentUI)\"\u003e\u003ccode\u003eJComponent.setUI(javax.swing.plaf.ComponentUI)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIManager.html#getLookAndFeel()\"\u003e\u003ccode\u003eUIManager.getLookAndFeel()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIManager.html#getUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eUIManager.getUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#updateUI()\"\u003eupdateUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPreferredScrollableViewportSize",
      "comment": "Returns the preferred size of the viewport for a view component. If the view component of this layer implements Scrollable, this method delegates its implementation to the view component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Scrollable.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eScrollable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Scrollable.html#getPreferredScrollableViewportSize()\"\u003egetPreferredScrollableViewportSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Scrollable.html\" title\u003d\"interface in javax.swing\"\u003eScrollable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the preferred size of the viewport for a view component"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Rectangle",
            "type": "Class"
          },
          "field": {
            "name": "visibleRect"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "orientation"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "direction"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getScrollableBlockIncrement",
      "comment": "Returns a scroll increment, which is required for components that display logical rows or columns in order to completely expose one block of rows or columns, depending on the value of orientation. If the view component of this layer implements Scrollable, this method delegates its implementation to the view component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Scrollable.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eScrollable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Scrollable.html#getScrollableBlockIncrement(java.awt.Rectangle,int,int)\"\u003egetScrollableBlockIncrement\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Scrollable.html\" title\u003d\"interface in javax.swing\"\u003eScrollable\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003evisibleRect\u003c/code\u003e - The view area visible within the viewport",
          "\u003ccode\u003eorientation\u003c/code\u003e - Either SwingConstants.VERTICAL or SwingConstants.HORIZONTAL.",
          "\u003ccode\u003edirection\u003c/code\u003e - Less than zero to scroll up/left, greater than zero for down/right."
        ],
        "return": [
          "the \"block\" increment for scrolling in the specified direction"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getScrollableTracksViewportHeight",
      "comment": "Returns false to indicate that the height of the viewport does not determine the height of the layer, unless the preferred height of the layer is smaller than the height of the viewport. If the view component of this layer implements Scrollable, this method delegates its implementation to the view component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Scrollable.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eScrollable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Scrollable.html#getScrollableTracksViewportHeight()\"\u003egetScrollableTracksViewportHeight\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Scrollable.html\" title\u003d\"interface in javax.swing\"\u003eScrollable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "whether the layer should track the height of the viewport"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getScrollableTracksViewportWidth",
      "comment": "Returns false to indicate that the width of the viewport does not determine the width of the layer, unless the preferred width of the layer is smaller than the width of the viewport. If the view component of this layer implements Scrollable, this method delegates its implementation to the view component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Scrollable.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eScrollable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Scrollable.html#getScrollableTracksViewportWidth()\"\u003egetScrollableTracksViewportWidth\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Scrollable.html\" title\u003d\"interface in javax.swing\"\u003eScrollable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "whether the layer should track the width of the viewport"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Rectangle",
            "type": "Class"
          },
          "field": {
            "name": "visibleRect"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "orientation"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "direction"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getScrollableUnitIncrement",
      "comment": "Returns a scroll increment, which is required for components that display logical rows or columns in order to completely expose one new row or column, depending on the value of orientation. Ideally, components should handle a partially exposed row or column by returning the distance required to completely expose the item. Scrolling containers, like JScrollPane, will use this method each time the user requests a unit scroll. If the view component of this layer implements Scrollable, this method delegates its implementation to the view component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Scrollable.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eScrollable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Scrollable.html#getScrollableUnitIncrement(java.awt.Rectangle,int,int)\"\u003egetScrollableUnitIncrement\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Scrollable.html\" title\u003d\"interface in javax.swing\"\u003eScrollable\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003evisibleRect\u003c/code\u003e - The view area visible within the viewport",
          "\u003ccode\u003eorientation\u003c/code\u003e - Either SwingConstants.VERTICAL or SwingConstants.HORIZONTAL.",
          "\u003ccode\u003edirection\u003c/code\u003e - Less than zero to scroll up/left, greater than zero for down/right."
        ],
        "return": [
          "The \"unit\" increment for scrolling in the specified direction. This value should always be positive."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "doLayout",
      "comment": "Delegates its functionality to the LayerUI.doLayout(JLayer) method, if LayerUI is set.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#layoutContainer(java.awt.Container)\"\u003e\u003ccode\u003eLayoutManager.layoutContainer(java.awt.Container)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#setLayout(java.awt.LayoutManager)\"\u003e\u003ccode\u003eContainer.setLayout(java.awt.LayoutManager)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#validate()\"\u003e\u003ccode\u003eContainer.validate()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#doLayout()\"\u003edoLayout\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.accessibility.AccessibleContext",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAccessibleContext",
      "comment": "Gets the AccessibleContext associated with this JLayer.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html\" title\u003d\"class in java.awt\"\u003eComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html\" title\u003d\"interface in javax.accessibility\"\u003eAccessible\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the AccessibleContext associated with this \n\u003ccode\u003eJLayer\u003c/code\u003e."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new JLayer object with a null view component and default LayerUI.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setView(V)\"\u003e\u003ccode\u003esetView(V)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setUI(javax.swing.plaf.LayerUI)\"\u003e\u003ccode\u003esetUI(javax.swing.plaf.LayerUI\u0026lt;? super V\u0026gt;)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "owner": "javax.swing.JLayer",
            "name": "V",
            "type": "Variable"
          },
          "field": {
            "name": "view"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new JLayer object with default LayerUI.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setUI(javax.swing.plaf.LayerUI)\"\u003e\u003ccode\u003esetUI(javax.swing.plaf.LayerUI\u0026lt;? super V\u0026gt;)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eview\u003c/code\u003e - the component to be decorated by this \n\u003ccode\u003eJLayer\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "owner": "javax.swing.JLayer",
            "name": "V",
            "type": "Variable"
          },
          "field": {
            "name": "view"
          }
        },
        {
          "type": {
            "name": "javax.swing.plaf.LayerUI",
            "parameters": [
              {
                "owner": "javax.swing.JLayer",
                "name": "V",
                "type": "Variable"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "ui"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new JLayer object with the specified view component and LayerUI object.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eview\u003c/code\u003e - the component to be decorated",
          "\u003ccode\u003eui\u003c/code\u003e - the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html\" title\u003d\"class in javax.swing.plaf\"\u003e\u003ccode\u003eLayerUI\u003c/code\u003e\u003c/a\u003e delegate to be used by this \n\u003ccode\u003eJLayer\u003c/code\u003e"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "V",
      "upperBounds": [
        {
          "name": "java.awt.Component",
          "type": "Class"
        }
      ],
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "javax.swing.JLayer",
  "comment": "\u003ccode\u003eJLayer\u003c/code\u003e is a universal decorator for Swing components which enables you to implement various advanced painting effects as well as receive notifications of all \n\u003ccode\u003eAWTEvent\u003c/code\u003es generated within its borders. \n\u003cp\u003e \u003ccode\u003eJLayer\u003c/code\u003e delegates the handling of painting and input events to a \u003ca href\u003d\"plaf/LayerUI.html\" title\u003d\"class in javax.swing.plaf\"\u003e\u003ccode\u003eLayerUI\u003c/code\u003e\u003c/a\u003e object, which performs the actual decoration. \u003c/p\u003e\n\u003cp\u003e The custom painting implemented in the \u003ccode\u003eLayerUI\u003c/code\u003e and events notification work for the JLayer itself and all its subcomponents. This combination enables you to enrich existing components by adding new advanced functionality such as temporary locking of a hierarchy, data tips for compound components, enhanced mouse scrolling etc and so on. \u003c/p\u003e\n\u003cp\u003e \u003ccode\u003eJLayer\u003c/code\u003e is a good solution if you only need to do custom painting over compound component or catch input events from its subcomponents. \u003c/p\u003e\n\u003cpre\u003e import javax.swing.*;\n import javax.swing.plaf.LayerUI;\n import java.awt.*;\n\n public class JLayerSample {\n\n     private static JLayer\u0026lt;JComponent\u0026gt; createLayer() {\n         // This custom layerUI will fill the layer with translucent green\n         // and print out all mouseMotion events generated within its borders\n         LayerUI\u0026lt;JComponent\u0026gt; layerUI \u003d new LayerUI\u0026lt;JComponent\u0026gt;() {\n\n             public void paint(Graphics g, JComponent c) {\n                 // paint the layer as is\n                 super.paint(g, c);\n                 // fill it with the translucent green\n                 g.setColor(new Color(0, 128, 0, 128));\n                 g.fillRect(0, 0, c.getWidth(), c.getHeight());\n             }\n\n             public void installUI(JComponent c) {\n                 super.installUI(c);\n                 // enable mouse motion events for the layer\u0027s subcomponents\n                 ((JLayer) c).setLayerEventMask(AWTEvent.MOUSE_MOTION_EVENT_MASK);\n             }\n\n             public void uninstallUI(JComponent c) {\n                 super.uninstallUI(c);\n                 // reset the layer event mask\n                 ((JLayer) c).setLayerEventMask(0);\n             }\n\n             // overridden method which catches MouseMotion events\n             public void eventDispatched(AWTEvent e, JLayer\u0026lt;? extends JComponent\u0026gt; l) {\n                 System.out.println(\"AWTEvent detected: \" + e);\n             }\n         };\n         // create a component to be decorated with the layer\n         JPanel panel \u003d new JPanel();\n         panel.add(new JButton(\"JButton\"));\n\n         // create the layer for the panel using our custom layerUI\n         return new JLayer\u0026lt;JComponent\u0026gt;(panel, layerUI);\n     }\n\n     private static void createAndShowGUI() {\n         final JFrame frame \u003d new JFrame();\n         frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n\n         // work with the layer as with any other Swing component\n         frame.add(createLayer());\n\n         frame.setSize(200, 200);\n         frame.setLocationRelativeTo(null);\n         frame.setVisible(true);\n     }\n\n     public static void main(String[] args) throws Exception {\n         SwingUtilities.invokeAndWait(new Runnable() {\n             public void run() {\n                 createAndShowGUI();\n             }\n         });\n     }\n }\n \u003c/pre\u003e \n\u003cb\u003eNote:\u003c/b\u003e \n\u003ccode\u003eJLayer\u003c/code\u003e doesn\u0027t support the following methods: \n\u003cul\u003e \n \u003cli\u003e\u003ca href\u003d\"../../java/awt/Container.html#add(java.awt.Component)\"\u003e\u003ccode\u003eContainer.add(java.awt.Component)\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e \n \u003cli\u003e\u003ca href\u003d\"../../java/awt/Container.html#add(java.lang.String,java.awt.Component)\"\u003e\u003ccode\u003eContainer.add(String, java.awt.Component)\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e \n \u003cli\u003e\u003ca href\u003d\"../../java/awt/Container.html#add(java.awt.Component,int)\"\u003e\u003ccode\u003eContainer.add(java.awt.Component, int)\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e \n \u003cli\u003e\u003ca href\u003d\"../../java/awt/Container.html#add(java.awt.Component,java.lang.Object)\"\u003e\u003ccode\u003eContainer.add(java.awt.Component, Object)\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e \n \u003cli\u003e\u003ca href\u003d\"../../java/awt/Container.html#add(java.awt.Component,java.lang.Object,int)\"\u003e\u003ccode\u003eContainer.add(java.awt.Component, Object, int)\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e \n\u003c/ul\u003e using any of them will cause \n\u003ccode\u003eUnsupportedOperationException\u003c/code\u003e to be thrown, to add a component to \n\u003ccode\u003eJLayer\u003c/code\u003e use \n\u003ca href\u003d\"#setView(V)\"\u003e\u003ccode\u003esetView(Component)\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"#setGlassPane(javax.swing.JPanel)\"\u003e\u003ccode\u003esetGlassPane(JPanel)\u003c/code\u003e\u003c/a\u003e.\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#%3Cinit%3E(V)\"\u003e\u003ccode\u003eJLayer(Component)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setView(V)\"\u003e\u003ccode\u003esetView(Component)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#getView()\"\u003e\u003ccode\u003egetView()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html\" title\u003d\"class in javax.swing.plaf\"\u003e\u003ccode\u003eLayerUI\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#%3Cinit%3E(V,javax.swing.plaf.LayerUI)\"\u003e\u003ccode\u003eJLayer(Component, LayerUI)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setUI(javax.swing.plaf.LayerUI)\"\u003e\u003ccode\u003esetUI(javax.swing.plaf.LayerUI)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#getUI()\"\u003e\u003ccode\u003egetUI()\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.7"
    ]
  }
}