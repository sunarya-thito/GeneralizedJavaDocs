{
  "packageName": "javax.swing",
  "simpleName": "BorderFactory",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createLineBorder",
      "comment": "Creates a line border with the specified color.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecolor\u003c/code\u003e - a \n\u003ccode\u003eColor\u003c/code\u003e to use for the line"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createLineBorder",
      "comment": "Creates a line border with the specified color and width. The width applies to all four sides of the border. To specify widths individually for the top, bottom, left, and right, use createMatteBorder(int,int,int,int,Color).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecolor\u003c/code\u003e - a \n\u003ccode\u003eColor\u003c/code\u003e to use for the line",
          "\u003ccode\u003ethickness\u003c/code\u003e - an integer specifying the width in pixels"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createLineBorder",
      "comment": "Creates a line border with the specified color, thickness, and corner shape.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/LineBorder.html#%3Cinit%3E(java.awt.Color,int,boolean)\"\u003e\u003ccode\u003eLineBorder(Color, int, boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecolor\u003c/code\u003e - the color of the border",
          "\u003ccode\u003ethickness\u003c/code\u003e - the thickness of the border",
          "\u003ccode\u003erounded\u003c/code\u003e - whether or not border corners should be round"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createRaisedBevelBorder",
      "comment": "Creates a border with a raised beveled edge, using brighter shades of the component\u0027s current background color for highlighting, and darker shading for shadows. (In a raised border, highlights are on top and shadows are underneath.)",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createLoweredBevelBorder",
      "comment": "Creates a border with a lowered beveled edge, using brighter shades of the component\u0027s current background color for highlighting, and darker shading for shadows. (In a lowered border, shadows are on top and highlights are underneath.)",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createBevelBorder",
      "comment": "Creates a beveled border of the specified type, using brighter shades of the component\u0027s current background color for highlighting, and darker shading for shadows. (In a lowered border, shadows are on top and highlights are underneath.)",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - an integer specifying either \n\u003ccode\u003eBevelBorder.LOWERED\u003c/code\u003e or \n\u003ccode\u003eBevelBorder.RAISED\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createBevelBorder",
      "comment": "Creates a beveled border of the specified type, using the specified highlighting and shadowing. The outer edge of the highlighted area uses a brighter shade of the highlight color. The inner edge of the shadow area uses a brighter shade of the shadow color.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - an integer specifying either \n\u003ccode\u003eBevelBorder.LOWERED\u003c/code\u003e or \n\u003ccode\u003eBevelBorder.RAISED\u003c/code\u003e",
          "\u003ccode\u003ehighlight\u003c/code\u003e - a \n\u003ccode\u003eColor\u003c/code\u003e object for highlights",
          "\u003ccode\u003eshadow\u003c/code\u003e - a \n\u003ccode\u003eColor\u003c/code\u003e object for shadows"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createBevelBorder",
      "comment": "Creates a beveled border of the specified type, using the specified colors for the inner and outer highlight and shadow areas.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - an integer specifying either \n\u003ccode\u003eBevelBorder.LOWERED\u003c/code\u003e or \n\u003ccode\u003eBevelBorder.RAISED\u003c/code\u003e",
          "\u003ccode\u003ehighlightOuter\u003c/code\u003e - a \n\u003ccode\u003eColor\u003c/code\u003e object for the outer edge of the highlight area",
          "\u003ccode\u003ehighlightInner\u003c/code\u003e - a \n\u003ccode\u003eColor\u003c/code\u003e object for the inner edge of the highlight area",
          "\u003ccode\u003eshadowOuter\u003c/code\u003e - a \n\u003ccode\u003eColor\u003c/code\u003e object for the outer edge of the shadow area",
          "\u003ccode\u003eshadowInner\u003c/code\u003e - a \n\u003ccode\u003eColor\u003c/code\u003e object for the inner edge of the shadow area"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createRaisedSoftBevelBorder",
      "comment": "Creates a beveled border with a raised edge and softened corners, using brighter shades of the component\u0027s current background color for highlighting, and darker shading for shadows. In a raised border, highlights are on top and shadows are underneath.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createLoweredSoftBevelBorder",
      "comment": "Creates a beveled border with a lowered edge and softened corners, using brighter shades of the component\u0027s current background color for highlighting, and darker shading for shadows. In a lowered border, shadows are on top and highlights are underneath.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createSoftBevelBorder",
      "comment": "Creates a beveled border of the specified type with softened corners, using brighter shades of the component\u0027s current background color for highlighting, and darker shading for shadows. The type is either BevelBorder.RAISED or BevelBorder.LOWERED.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/BevelBorder.html#%3Cinit%3E(int)\"\u003e\u003ccode\u003eBevelBorder(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - a type of a bevel"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object or \n\u003ccode\u003enull\u003c/code\u003e if the specified type is not valid"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createSoftBevelBorder",
      "comment": "Creates a beveled border of the specified type with softened corners, using the specified highlighting and shadowing. The type is either BevelBorder.RAISED or BevelBorder.LOWERED. The outer edge of the highlight area uses a brighter shade of the highlight color. The inner edge of the shadow area uses a brighter shade of the shadow color.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/BevelBorder.html#%3Cinit%3E(int,java.awt.Color,java.awt.Color)\"\u003e\u003ccode\u003eBevelBorder(int, Color, Color)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - a type of a bevel",
          "\u003ccode\u003ehighlight\u003c/code\u003e - a basic color of the highlight area",
          "\u003ccode\u003eshadow\u003c/code\u003e - a basic color of the shadow area"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createSoftBevelBorder",
      "comment": "Creates a beveled border of the specified type with softened corners, using the specified colors for the inner and outer edges of the highlight and the shadow areas. The type is either BevelBorder.RAISED or BevelBorder.LOWERED. Note: The shadow inner and outer colors are switched for a lowered bevel border.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/BevelBorder.html#%3Cinit%3E(int,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color)\"\u003e\u003ccode\u003eBevelBorder(int, Color, Color, Color, Color)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - a type of a bevel",
          "\u003ccode\u003ehighlightOuter\u003c/code\u003e - a color of the outer edge of the highlight area",
          "\u003ccode\u003ehighlightInner\u003c/code\u003e - a color of the inner edge of the highlight area",
          "\u003ccode\u003eshadowOuter\u003c/code\u003e - a color of the outer edge of the shadow area",
          "\u003ccode\u003eshadowInner\u003c/code\u003e - a color of the inner edge of the shadow area"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createEtchedBorder",
      "comment": "Creates a border with an \"etched\" look using the component\u0027s current background color for highlighting and shading.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createEtchedBorder",
      "comment": "Creates a border with an \"etched\" look using the specified highlighting and shading colors.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ehighlight\u003c/code\u003e - a \n\u003ccode\u003eColor\u003c/code\u003e object for the border highlights",
          "\u003ccode\u003eshadow\u003c/code\u003e - a \n\u003ccode\u003eColor\u003c/code\u003e object for the border shadows"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createEtchedBorder",
      "comment": "Creates a border with an \"etched\" look using the component\u0027s current background color for highlighting and shading.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - one of \n\u003ccode\u003eEtchedBorder.RAISED\u003c/code\u003e, or \n\u003ccode\u003eEtchedBorder.LOWERED\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if type is not either \n\u003ccode\u003eEtchedBorder.RAISED\u003c/code\u003e or \n\u003ccode\u003eEtchedBorder.LOWERED\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createEtchedBorder",
      "comment": "Creates a border with an \"etched\" look using the specified highlighting and shading colors.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - one of \n\u003ccode\u003eEtchedBorder.RAISED\u003c/code\u003e, or \n\u003ccode\u003eEtchedBorder.LOWERED\u003c/code\u003e",
          "\u003ccode\u003ehighlight\u003c/code\u003e - a \n\u003ccode\u003eColor\u003c/code\u003e object for the border highlights",
          "\u003ccode\u003eshadow\u003c/code\u003e - a \n\u003ccode\u003eColor\u003c/code\u003e object for the border shadows"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.TitledBorder",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createTitledBorder",
      "comment": "Creates a new titled border with the specified title, the default border type (determined by the current look and feel), the default text position (determined by the current look and feel), the default justification (leading), and the default font and text color (determined by the current look and feel).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etitle\u003c/code\u003e - a \n\u003ccode\u003eString\u003c/code\u003e containing the text of the title"
        ],
        "return": [
          "the \n\u003ccode\u003eTitledBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.TitledBorder",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createTitledBorder",
      "comment": "Creates a new titled border with an empty title, the specified border object, the default text position (determined by the current look and feel), the default justification (leading), and the default font and text color (determined by the current look and feel).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eborder\u003c/code\u003e - the \n\u003ccode\u003eBorder\u003c/code\u003e object to add the title to; if \n\u003ccode\u003enull\u003c/code\u003e the \n\u003ccode\u003eBorder\u003c/code\u003e is determined by the current look and feel."
        ],
        "return": [
          "the \n\u003ccode\u003eTitledBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.TitledBorder",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createTitledBorder",
      "comment": "Adds a title to an existing border, with default positioning (determined by the current look and feel), default justification (leading) and the default font and text color (determined by the current look and feel).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eborder\u003c/code\u003e - the \n\u003ccode\u003eBorder\u003c/code\u003e object to add the title to",
          "\u003ccode\u003etitle\u003c/code\u003e - a \n\u003ccode\u003eString\u003c/code\u003e containing the text of the title"
        ],
        "return": [
          "the \n\u003ccode\u003eTitledBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.TitledBorder",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createTitledBorder",
      "comment": "Adds a title to an existing border, with the specified positioning and using the default font and text color (determined by the current look and feel).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eborder\u003c/code\u003e - the \n\u003ccode\u003eBorder\u003c/code\u003e object to add the title to",
          "\u003ccode\u003etitle\u003c/code\u003e - a \n\u003ccode\u003eString\u003c/code\u003e containing the text of the title",
          "\u003ccode\u003etitleJustification\u003c/code\u003e - an integer specifying the justification of the title -- one of the following: \n\u003cul\u003e \n \u003cli\u003e\u003ccode\u003eTitledBorder.LEFT\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.CENTER\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.RIGHT\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.LEADING\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.TRAILING\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.DEFAULT_JUSTIFICATION\u003c/code\u003e (leading) \u003c/li\u003e\n\u003c/ul\u003e",
          "\u003ccode\u003etitlePosition\u003c/code\u003e - an integer specifying the vertical position of the text in relation to the border -- one of the following: \n\u003cul\u003e \n \u003cli\u003e\u003ccode\u003e TitledBorder.ABOVE_TOP\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.TOP\u003c/code\u003e (sitting on the top line) \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.BELOW_TOP\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.ABOVE_BOTTOM\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.BOTTOM\u003c/code\u003e (sitting on the bottom line) \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.BELOW_BOTTOM\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.DEFAULT_POSITION\u003c/code\u003e (the title position is determined by the current look and feel) \u003c/li\u003e\n\u003c/ul\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eTitledBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.TitledBorder",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createTitledBorder",
      "comment": "Adds a title to an existing border, with the specified positioning and font, and using the default text color (determined by the current look and feel).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eborder\u003c/code\u003e - the \n\u003ccode\u003eBorder\u003c/code\u003e object to add the title to",
          "\u003ccode\u003etitle\u003c/code\u003e - a \n\u003ccode\u003eString\u003c/code\u003e containing the text of the title",
          "\u003ccode\u003etitleJustification\u003c/code\u003e - an integer specifying the justification of the title -- one of the following: \n\u003cul\u003e \n \u003cli\u003e\u003ccode\u003eTitledBorder.LEFT\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.CENTER\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.RIGHT\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.LEADING\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.TRAILING\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.DEFAULT_JUSTIFICATION\u003c/code\u003e (leading) \u003c/li\u003e\n\u003c/ul\u003e",
          "\u003ccode\u003etitlePosition\u003c/code\u003e - an integer specifying the vertical position of the text in relation to the border -- one of the following: \n\u003cul\u003e \n \u003cli\u003e\u003ccode\u003e TitledBorder.ABOVE_TOP\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.TOP\u003c/code\u003e (sitting on the top line) \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.BELOW_TOP\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.ABOVE_BOTTOM\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.BOTTOM\u003c/code\u003e (sitting on the bottom line) \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.BELOW_BOTTOM\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.DEFAULT_POSITION\u003c/code\u003e (the title position is determined by the current look and feel) \u003c/li\u003e\n\u003c/ul\u003e",
          "\u003ccode\u003etitleFont\u003c/code\u003e - a Font object specifying the title font"
        ],
        "return": [
          "the TitledBorder object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.TitledBorder",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createTitledBorder",
      "comment": "Adds a title to an existing border, with the specified positioning, font and color.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eborder\u003c/code\u003e - the \n\u003ccode\u003eBorder\u003c/code\u003e object to add the title to",
          "\u003ccode\u003etitle\u003c/code\u003e - a \n\u003ccode\u003eString\u003c/code\u003e containing the text of the title",
          "\u003ccode\u003etitleJustification\u003c/code\u003e - an integer specifying the justification of the title -- one of the following: \n\u003cul\u003e \n \u003cli\u003e\u003ccode\u003eTitledBorder.LEFT\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.CENTER\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.RIGHT\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.LEADING\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.TRAILING\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.DEFAULT_JUSTIFICATION\u003c/code\u003e (leading) \u003c/li\u003e\n\u003c/ul\u003e",
          "\u003ccode\u003etitlePosition\u003c/code\u003e - an integer specifying the vertical position of the text in relation to the border -- one of the following: \n\u003cul\u003e \n \u003cli\u003e\u003ccode\u003e TitledBorder.ABOVE_TOP\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.TOP\u003c/code\u003e (sitting on the top line) \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.BELOW_TOP\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.ABOVE_BOTTOM\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.BOTTOM\u003c/code\u003e (sitting on the bottom line) \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.BELOW_BOTTOM\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eTitledBorder.DEFAULT_POSITION\u003c/code\u003e (the title position is determined by the current look and feel) \u003c/li\u003e\n\u003c/ul\u003e",
          "\u003ccode\u003etitleFont\u003c/code\u003e - a \n\u003ccode\u003eFont\u003c/code\u003e object specifying the title font",
          "\u003ccode\u003etitleColor\u003c/code\u003e - a \n\u003ccode\u003eColor\u003c/code\u003e object specifying the title color"
        ],
        "return": [
          "the \n\u003ccode\u003eTitledBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createEmptyBorder",
      "comment": "Creates an empty border that takes up no space. (The width of the top, bottom, left, and right sides are all zero.)",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createEmptyBorder",
      "comment": "Creates an empty border that takes up space but which does no drawing, specifying the width of the top, left, bottom, and right sides.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etop\u003c/code\u003e - an integer specifying the width of the top, in pixels",
          "\u003ccode\u003eleft\u003c/code\u003e - an integer specifying the width of the left side, in pixels",
          "\u003ccode\u003ebottom\u003c/code\u003e - an integer specifying the width of the bottom, in pixels",
          "\u003ccode\u003eright\u003c/code\u003e - an integer specifying the width of the right side, in pixels"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.CompoundBorder",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createCompoundBorder",
      "comment": "Creates a compound border with a null inside edge and a null outside edge.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eCompoundBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.CompoundBorder",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createCompoundBorder",
      "comment": "Creates a compound border specifying the border objects to use for the outside and inside edges.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eoutsideBorder\u003c/code\u003e - a \n\u003ccode\u003eBorder\u003c/code\u003e object for the outer edge of the compound border",
          "\u003ccode\u003einsideBorder\u003c/code\u003e - a \n\u003ccode\u003eBorder\u003c/code\u003e object for the inner edge of the compound border"
        ],
        "return": [
          "the \n\u003ccode\u003eCompoundBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.MatteBorder",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createMatteBorder",
      "comment": "Creates a matte-look border using a solid color. (The difference between this border and a line border is that you can specify the individual border dimensions.)",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etop\u003c/code\u003e - an integer specifying the width of the top, in pixels",
          "\u003ccode\u003eleft\u003c/code\u003e - an integer specifying the width of the left side, in pixels",
          "\u003ccode\u003ebottom\u003c/code\u003e - an integer specifying the width of the right side, in pixels",
          "\u003ccode\u003eright\u003c/code\u003e - an integer specifying the width of the bottom, in pixels",
          "\u003ccode\u003ecolor\u003c/code\u003e - a \n\u003ccode\u003eColor\u003c/code\u003e to use for the border"
        ],
        "return": [
          "the \n\u003ccode\u003eMatteBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.MatteBorder",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createMatteBorder",
      "comment": "Creates a matte-look border that consists of multiple tiles of a specified icon. Multiple copies of the icon are placed side-by-side to fill up the border area. Note: If the icon doesn\u0027t load, the border area is painted gray.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etop\u003c/code\u003e - an integer specifying the width of the top, in pixels",
          "\u003ccode\u003eleft\u003c/code\u003e - an integer specifying the width of the left side, in pixels",
          "\u003ccode\u003ebottom\u003c/code\u003e - an integer specifying the width of the right side, in pixels",
          "\u003ccode\u003eright\u003c/code\u003e - an integer specifying the width of the bottom, in pixels",
          "\u003ccode\u003etileIcon\u003c/code\u003e - the \n\u003ccode\u003eIcon\u003c/code\u003e object used for the border tiles"
        ],
        "return": [
          "the \n\u003ccode\u003eMatteBorder\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createStrokeBorder",
      "comment": "Creates a border of the specified stroke. The component\u0027s foreground color will be used to render the border.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003estroke\u003c/code\u003e - the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/BasicStroke.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eBasicStroke\u003c/code\u003e\u003c/a\u003e object used to stroke a shape"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified \n\u003ccode\u003estroke\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createStrokeBorder",
      "comment": "Creates a border of the specified stroke and paint. If the specified paint is null, the component\u0027s foreground color will be used to render the border.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003estroke\u003c/code\u003e - the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/BasicStroke.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eBasicStroke\u003c/code\u003e\u003c/a\u003e object used to stroke a shape",
          "\u003ccode\u003epaint\u003c/code\u003e - the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Paint.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003ePaint\u003c/code\u003e\u003c/a\u003e object used to generate a color"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified \n\u003ccode\u003estroke\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createDashedBorder",
      "comment": "Creates a dashed border of the specified paint. If the specified paint is null, the component\u0027s foreground color will be used to render the border. The width of a dash line is equal to 1. The relative length of a dash line and the relative spacing between dash lines are equal to 1. A dash line is not rounded.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epaint\u003c/code\u003e - the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Paint.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003ePaint\u003c/code\u003e\u003c/a\u003e object used to generate a color"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createDashedBorder",
      "comment": "Creates a dashed border of the specified paint, relative length, and relative spacing. If the specified paint is null, the component\u0027s foreground color will be used to render the border. The width of a dash line is equal to 1. A dash line is not rounded.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epaint\u003c/code\u003e - the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Paint.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003ePaint\u003c/code\u003e\u003c/a\u003e object used to generate a color",
          "\u003ccode\u003elength\u003c/code\u003e - the relative length of a dash line",
          "\u003ccode\u003espacing\u003c/code\u003e - the relative spacing between dash lines"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified \n\u003ccode\u003elength\u003c/code\u003e is less than \n\u003ccode\u003e1\u003c/code\u003e, or if the specified \n\u003ccode\u003espacing\u003c/code\u003e is less than \n\u003ccode\u003e0\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createDashedBorder",
      "comment": "Creates a dashed border of the specified paint, thickness, line shape, relative length, and relative spacing. If the specified paint is null, the component\u0027s foreground color will be used to render the border.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epaint\u003c/code\u003e - the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Paint.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003ePaint\u003c/code\u003e\u003c/a\u003e object used to generate a color",
          "\u003ccode\u003ethickness\u003c/code\u003e - the width of a dash line",
          "\u003ccode\u003elength\u003c/code\u003e - the relative length of a dash line",
          "\u003ccode\u003espacing\u003c/code\u003e - the relative spacing between dash lines",
          "\u003ccode\u003erounded\u003c/code\u003e - whether or not line ends should be round"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified \n\u003ccode\u003ethickness\u003c/code\u003e is less than \n\u003ccode\u003e1\u003c/code\u003e, or if the specified \n\u003ccode\u003elength\u003c/code\u003e is less than \n\u003ccode\u003e1\u003c/code\u003e, or if the specified \n\u003ccode\u003espacing\u003c/code\u003e is less than \n\u003ccode\u003e0\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eBorder\u003c/code\u003e object"
        ],
        "since": [
          "1.7"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.BorderFactory",
  "comment": "Factory class for vending standard \n\u003ccode\u003eBorder\u003c/code\u003e objects. Wherever possible, this factory will hand out references to shared \n\u003ccode\u003eBorder\u003c/code\u003e instances. For further information and examples see \n\u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/components/border.html\"\u003eHow to Use Borders\u003c/a\u003e, a section in \n\u003cem\u003eThe Java Tutorial\u003c/em\u003e.",
  "tagMap": {
    "since": [
      "1.2"
    ]
  }
}