{
  "packageName": "javax.swing",
  "simpleName": "SpinnerListModel",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.AbstractSpinnerModel",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getList",
      "comment": "Returns the List that defines the sequence for this model.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerListModel.html#setList(java.util.List)\"\u003e\u003ccode\u003esetList(java.util.List\u0026lt;?\u0026gt;)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the value of the \n\u003ccode\u003elist\u003c/code\u003e property"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "list"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setList",
      "comment": "Changes the list that defines this sequence and resets the index of the models value to zero. Note that list is not copied, the model just stores a reference to it. This method fires a ChangeEvent if list is not equal to the current list.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerListModel.html#getList()\"\u003e\u003ccode\u003egetList()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elist\u003c/code\u003e - the sequence that this model represents"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elist\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or zero length"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getValue",
      "comment": "Returns the current element of the sequence.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#getValue()\"\u003e\u003ccode\u003eSpinnerModel.getValue()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerListModel.html#setValue(java.lang.Object)\"\u003e\u003ccode\u003esetValue(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#getValue()\"\u003egetValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html\" title\u003d\"interface in javax.swing\"\u003eSpinnerModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003evalue\u003c/code\u003e property"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "elt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setValue",
      "comment": "Changes the current element of the sequence and notifies ChangeListeners. If the specified value is not equal to an element of the underlying sequence then an IllegalArgumentException is thrown. In the following example the setValue call would cause an exception to be thrown:  String[] values \u003d {\"one\", \"two\", \"free\", \"four\"};\n SpinnerModel model \u003d new SpinnerListModel(values);\n model.setValue(\"TWO\");",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#setValue(java.lang.Object)\"\u003e\u003ccode\u003eSpinnerModel.setValue(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerListModel.html#getValue()\"\u003e\u003ccode\u003egetValue()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#setValue(java.lang.Object)\"\u003esetValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html\" title\u003d\"interface in javax.swing\"\u003eSpinnerModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelt\u003c/code\u003e - the sequence element that will be model\u0027s current value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified value isn\u0027t allowed"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNextValue",
      "comment": "Returns the next legal value of the underlying sequence or null if value is already the last element.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#getNextValue()\"\u003e\u003ccode\u003eSpinnerModel.getNextValue()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerListModel.html#getPreviousValue()\"\u003e\u003ccode\u003egetPreviousValue()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#getNextValue()\"\u003egetNextValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html\" title\u003d\"interface in javax.swing\"\u003eSpinnerModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the next legal value of the underlying sequence or \n\u003ccode\u003enull\u003c/code\u003e if value is already the last element"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPreviousValue",
      "comment": "Returns the previous element of the underlying sequence or null if value is already the first element.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#getPreviousValue()\"\u003e\u003ccode\u003eSpinnerModel.getPreviousValue()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerListModel.html#getNextValue()\"\u003e\u003ccode\u003egetNextValue()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#getPreviousValue()\"\u003egetPreviousValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html\" title\u003d\"interface in javax.swing\"\u003eSpinnerModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the previous element of the underlying sequence or \n\u003ccode\u003enull\u003c/code\u003e if value is already the first element"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "values"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a SpinnerModel whose sequence of values is defined by the specified List. The initial value (current element) of the model will be values.get(0). If values is null or has zero size, an IllegalArugmentException is thrown.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalues\u003c/code\u003e - the sequence this model represents"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003evalues\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or zero size"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "values"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a SpinnerModel whose sequence of values is defined by the specified array. The initial value of the model will be values[0]. If values is null or has zero length, an IllegalArgumentException is thrown.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalues\u003c/code\u003e - the sequence this model represents"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003evalues\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or zero length"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an effectively empty SpinnerListModel. The model\u0027s list will contain a single \"empty\" string element.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.SpinnerListModel",
  "comment": "A simple implementation of \n\u003ccode\u003eSpinnerModel\u003c/code\u003e whose values are defined by an array or a \n\u003ccode\u003eList\u003c/code\u003e. For example to create a model defined by an array of the names of the days of the week: \n\u003cpre\u003e String[] days \u003d new DateFormatSymbols().getWeekdays();\n SpinnerModel model \u003d new SpinnerListModel(Arrays.asList(days).subList(1, 8));\n \u003c/pre\u003e This class only stores a reference to the array or \n\u003ccode\u003eList\u003c/code\u003e so if an element of the underlying sequence changes, it\u0027s up to the application to notify the \n\u003ccode\u003eChangeListeners\u003c/code\u003e by calling \n\u003ccode\u003efireStateChanged\u003c/code\u003e. \n\u003cp\u003e This model inherits a \u003ccode\u003eChangeListener\u003c/code\u003e. The \u003ccode\u003eChangeListener\u003c/code\u003es are notified whenever the model\u0027s \u003ccode\u003evalue\u003c/code\u003e or \u003ccode\u003elist\u003c/code\u003e properties changes.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JSpinner.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJSpinner\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eSpinnerModel\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/AbstractSpinnerModel.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eAbstractSpinnerModel\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerNumberModel.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eSpinnerNumberModel\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerDateModel.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eSpinnerDateModel\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}