{
  "packageName": "javax.swing",
  "simpleName": "DynamicUtilTreeNode",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.tree.DefaultMutableTreeNode",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "hasChildren",
      "comment": "Does the this JTree have children? This property is currently not implemented.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "childValue",
      "comment": "Value to create children with.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "loadedChildren",
      "comment": "Have the children been loaded yet?",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.tree.DefaultMutableTreeNode",
            "type": "Class"
          },
          "name": "parent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "children",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createChildren",
      "comment": "Adds to parent all the children in children. If children is an array or vector all of its elements are added is children, otherwise if children is a hashtable all the key/value pairs are added in the order Enumeration returns them.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparent\u003c/code\u003e - the parent node",
          "\u003ccode\u003echildren\u003c/code\u003e - the children"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isLeaf",
      "comment": "Returns true if this node allows children. Whether the node allows children depends on how it was created.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JTree.DynamicUtilTreeNode.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJTree.DynamicUtilTreeNode\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/DefaultMutableTreeNode.html#isLeaf()\"\u003eisLeaf\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/DefaultMutableTreeNode.html\" title\u003d\"class in javax.swing.tree\"\u003eDefaultMutableTreeNode\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/TreeNode.html#isLeaf()\"\u003eisLeaf\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/TreeNode.html\" title\u003d\"interface in javax.swing.tree\"\u003eTreeNode\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if this node allows children, false otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getChildCount",
      "comment": "Returns the number of child nodes.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/DefaultMutableTreeNode.html#getChildCount()\"\u003egetChildCount\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/DefaultMutableTreeNode.html\" title\u003d\"class in javax.swing.tree\"\u003eDefaultMutableTreeNode\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/TreeNode.html#getChildCount()\"\u003egetChildCount\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/TreeNode.html\" title\u003d\"interface in javax.swing.tree\"\u003eTreeNode\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the number of child nodes"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "loadChildren",
      "comment": "Loads the children based on childValue. If childValue is a Vector or array each element is added as a child, if childValue is a Hashtable each key/value pair is added in the order that Enumeration returns the keys.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "javax.swing.tree.TreeNode",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "index",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getChildAt",
      "comment": "Subclassed to load the children, if necessary.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/DefaultMutableTreeNode.html#getChildAt(int)\"\u003egetChildAt\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/DefaultMutableTreeNode.html\" title\u003d\"class in javax.swing.tree\"\u003eDefaultMutableTreeNode\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/TreeNode.html#getChildAt(int)\"\u003egetChildAt\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/TreeNode.html\" title\u003d\"interface in javax.swing.tree\"\u003eTreeNode\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - an index into this node\u0027s child array"
        ],
        "return": [
          "the TreeNode in this node\u0027s child array at the specified index"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Enumeration",
        "parameters": [
          {
            "name": "javax.swing.tree.TreeNode",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "children",
      "comment": "Subclassed to load the children, if necessary.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/DefaultMutableTreeNode.html#children()\"\u003echildren\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/DefaultMutableTreeNode.html\" title\u003d\"class in javax.swing.tree\"\u003eDefaultMutableTreeNode\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/TreeNode.html#children()\"\u003echildren\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/TreeNode.html\" title\u003d\"interface in javax.swing.tree\"\u003eTreeNode\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an Enumeration of this node\u0027s children"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "children",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a node with the specified object as its value and with the specified children. For the node to allow children, the children-object must be an array of objects, a Vector, or a Hashtable -- even if empty. Otherwise, the node is not allowed to have children.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e that is the value for the new node",
          "\u003ccode\u003echildren\u003c/code\u003e - an array of \n\u003ccode\u003eObject\u003c/code\u003es, a \n\u003ccode\u003eVector\u003c/code\u003e, or a \n\u003ccode\u003eHashtable\u003c/code\u003e used to create the child nodes; if any other object is specified, or if the value is \n\u003ccode\u003enull\u003c/code\u003e, then the node is not allowed to have children"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 9,
  "name": "javax.swing.JTree$DynamicUtilTreeNode",
  "comment": "\u003ccode\u003eDynamicUtilTreeNode\u003c/code\u003e can wrap vectors/hashtables/arrays/strings and create the appropriate children tree nodes as necessary. It is dynamic in that it will only create the children as necessary. \n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {}
}