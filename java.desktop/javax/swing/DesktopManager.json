{
  "packageName": "javax.swing",
  "simpleName": "DesktopManager",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "openFrame",
      "comment": "If possible, display this frame in an appropriate location. Normally, this is not called, as the creator of the JInternalFrame will add the frame to the appropriate parent.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eJInternalFrame\u003c/code\u003e to be displayed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "closeFrame",
      "comment": "Generally, this call should remove the frame from its parent.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eJInternalFrame\u003c/code\u003e to be removed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "maximizeFrame",
      "comment": "Generally, the frame should be resized to match its parents bounds.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eJInternalFrame\u003c/code\u003e to be resized"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "minimizeFrame",
      "comment": "Generally, this indicates that the frame should be restored to its size and position prior to a maximizeFrame() call.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eJInternalFrame\u003c/code\u003e to be restored"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "iconifyFrame",
      "comment": "Generally, remove this frame from its parent and add an iconic representation.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eJInternalFrame\u003c/code\u003e to be iconified"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "deiconifyFrame",
      "comment": "Generally, remove any iconic representation that is present and restore the frame to it\u0027s original size and location.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eJInternalFrame\u003c/code\u003e to be de-iconified"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "activateFrame",
      "comment": "Generally, indicate that this frame has focus. This is usually called after the JInternalFrame\u0027s IS_SELECTED_PROPERTY has been set to true.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eJInternalFrame\u003c/code\u003e to be activated"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "deactivateFrame",
      "comment": "Generally, indicate that this frame has lost focus. This is usually called after the JInternalFrame\u0027s IS_SELECTED_PROPERTY has been set to false.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eJInternalFrame\u003c/code\u003e to be deactivated"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "beginDraggingFrame",
      "comment": "This method is normally called when the user has indicated that they will begin dragging a component around. This method should be called prior to any dragFrame() calls to allow the DesktopManager to prepare any necessary state. Normally f will be a JInternalFrame.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eJComponent\u003c/code\u003e being dragged"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "dragFrame",
      "comment": "The user has moved the frame. Calls to this method will be preceded by calls to beginDraggingFrame(). Normally f will be a JInternalFrame.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eJComponent\u003c/code\u003e being dragged",
          "\u003ccode\u003enewX\u003c/code\u003e - the new x-coordinate",
          "\u003ccode\u003enewY\u003c/code\u003e - the new y-coordinate"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "endDraggingFrame",
      "comment": "This method signals the end of the dragging session. Any state maintained by the DesktopManager can be removed here. Normally f will be a JInternalFrame.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eJComponent\u003c/code\u003e being dragged"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "beginResizingFrame",
      "comment": "This method is normally called when the user has indicated that they will begin resizing the frame. This method should be called prior to any resizeFrame() calls to allow the DesktopManager to prepare any necessary state. Normally f will be a JInternalFrame.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eJComponent\u003c/code\u003e being resized",
          "\u003ccode\u003edirection\u003c/code\u003e - the direction"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "resizeFrame",
      "comment": "The user has resized the component. Calls to this method will be preceded by calls to beginResizingFrame(). Normally f will be a JInternalFrame.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eJComponent\u003c/code\u003e being resized",
          "\u003ccode\u003enewX\u003c/code\u003e - the new x-coordinate",
          "\u003ccode\u003enewY\u003c/code\u003e - the new y-coordinate",
          "\u003ccode\u003enewWidth\u003c/code\u003e - the new width",
          "\u003ccode\u003enewHeight\u003c/code\u003e - the new height"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "endResizingFrame",
      "comment": "This method signals the end of the resize session. Any state maintained by the DesktopManager can be removed here. Normally f will be a JInternalFrame.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eJComponent\u003c/code\u003e being resized"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setBoundsForFrame",
      "comment": "This is a primitive reshape method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eJComponent\u003c/code\u003e being moved or resized",
          "\u003ccode\u003enewX\u003c/code\u003e - the new x-coordinate",
          "\u003ccode\u003enewY\u003c/code\u003e - the new y-coordinate",
          "\u003ccode\u003enewWidth\u003c/code\u003e - the new width",
          "\u003ccode\u003enewHeight\u003c/code\u003e - the new height"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.swing.DesktopManager",
  "comment": "DesktopManager objects are owned by a JDesktopPane object. They are responsible for implementing L\u0026amp;F specific behaviors for the JDesktopPane. JInternalFrame implementations should delegate specific behaviors to the DesktopManager. For instance, if a JInternalFrame was asked to iconify, it should try: \n\u003cpre\u003e    getDesktopPane().getDesktopManager().iconifyFrame(frame);\n \u003c/pre\u003e This delegation allows each L\u0026amp;F to provide custom behaviors for desktop-specific actions. (For example, how and where the internal frame\u0027s icon would appear.) \n\u003cp\u003eThis class provides a policy for the various JInternalFrame methods, it is not meant to be called directly rather the various JInternalFrame methods will call into the DesktopManager.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JDesktopPane.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJDesktopPane\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JInternalFrame.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJInternalFrame\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JInternalFrame.JDesktopIcon.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJInternalFrame.JDesktopIcon\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}