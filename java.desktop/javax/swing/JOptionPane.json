{
  "packageName": "javax.swing",
  "simpleName": "JOptionPane",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.JComponent",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "UNINITIALIZED_VALUE",
      "comment": "Indicates that the user has not yet selected a value.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DEFAULT_OPTION",
      "comment": "Type meaning Look and Feel should not supply any options -- only use the options from the JOptionPane.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.DEFAULT_OPTION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "YES_NO_OPTION",
      "comment": "Type used for showConfirmDialog.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.YES_NO_OPTION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "YES_NO_CANCEL_OPTION",
      "comment": "Type used for showConfirmDialog.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.YES_NO_CANCEL_OPTION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "OK_CANCEL_OPTION",
      "comment": "Type used for showConfirmDialog.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.OK_CANCEL_OPTION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "YES_OPTION",
      "comment": "Return value from class method if YES is chosen.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.YES_OPTION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "NO_OPTION",
      "comment": "Return value from class method if NO is chosen.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.NO_OPTION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "CANCEL_OPTION",
      "comment": "Return value from class method if CANCEL is chosen.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.CANCEL_OPTION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "OK_OPTION",
      "comment": "Return value form class method if OK is chosen.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.OK_OPTION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "CLOSED_OPTION",
      "comment": "Return value from class method if user closes window without selecting anything, more than likely this should be treated as either a CANCEL_OPTION or NO_OPTION.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.CLOSED_OPTION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ERROR_MESSAGE",
      "comment": "Used for error messages.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.ERROR_MESSAGE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "INFORMATION_MESSAGE",
      "comment": "Used for information messages.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.INFORMATION_MESSAGE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WARNING_MESSAGE",
      "comment": "Used for warning messages.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.WARNING_MESSAGE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "QUESTION_MESSAGE",
      "comment": "Used for questions.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.QUESTION_MESSAGE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PLAIN_MESSAGE",
      "comment": "No icon is used.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.PLAIN_MESSAGE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ICON_PROPERTY",
      "comment": "Bound property name for icon.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.ICON_PROPERTY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "MESSAGE_PROPERTY",
      "comment": "Bound property name for message.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.MESSAGE_PROPERTY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "VALUE_PROPERTY",
      "comment": "Bound property name for value.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.VALUE_PROPERTY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "OPTIONS_PROPERTY",
      "comment": "Bound property name for option.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.OPTIONS_PROPERTY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "INITIAL_VALUE_PROPERTY",
      "comment": "Bound property name for initialValue.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.INITIAL_VALUE_PROPERTY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "MESSAGE_TYPE_PROPERTY",
      "comment": "Bound property name for type.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.MESSAGE_TYPE_PROPERTY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "OPTION_TYPE_PROPERTY",
      "comment": "Bound property name for optionType.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.OPTION_TYPE_PROPERTY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SELECTION_VALUES_PROPERTY",
      "comment": "Bound property name for selectionValues.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.SELECTION_VALUES_PROPERTY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "INITIAL_SELECTION_VALUE_PROPERTY",
      "comment": "Bound property name for initialSelectionValue.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.INITIAL_SELECTION_VALUE_PROPERTY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "INPUT_VALUE_PROPERTY",
      "comment": "Bound property name for inputValue.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.INPUT_VALUE_PROPERTY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WANTS_INPUT_PROPERTY",
      "comment": "Bound property name for wantsInput.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.JOptionPane.WANTS_INPUT_PROPERTY\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.swing.Icon",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 132,
      "name": "icon",
      "comment": "Icon used in pane.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 132,
      "name": "message",
      "comment": "Message to display.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": 1
      },
      "memberType": "JavaField",
      "modifiers": 132,
      "name": "options",
      "comment": "Options to display to the user.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 132,
      "name": "initialValue",
      "comment": "Value that should be initially selected in options.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "messageType",
      "comment": "Message type.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "optionType",
      "comment": "Option type, one of DEFAULT_OPTION, YES_NO_OPTION, YES_NO_CANCEL_OPTION or OK_CANCEL_OPTION.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 132,
      "name": "value",
      "comment": "Currently selected value, will be a valid option, or UNINITIALIZED_VALUE or null.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": 1
      },
      "memberType": "JavaField",
      "modifiers": 132,
      "name": "selectionValues",
      "comment": "Array of values the user can choose from. Look and feel will provide the UI component to choose this from.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 132,
      "name": "inputValue",
      "comment": "Value the user has input.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 132,
      "name": "initialSelectionValue",
      "comment": "Initial value to select in selectionValues.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "wantsInput",
      "comment": "If true, a UI widget will be provided to the user to get input.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInputDialog",
      "comment": "Shows a question-message dialog requesting input from the user. The dialog uses the default frame, which usually means it is centered on the screen.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ],
        "return": [
          "user\u0027s input"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "initialSelectionValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInputDialog",
      "comment": "Shows a question-message dialog requesting input from the user, with the input value initialized to initialSelectionValue. The dialog uses the default frame, which usually means it is centered on the screen.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003einitialSelectionValue\u003c/code\u003e - the value used to initialize the input field"
        ],
        "return": [
          "user\u0027s input"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInputDialog",
      "comment": "Shows a question-message dialog requesting input from the user parented to parentComponent. The dialog is displayed on top of the Component\u0027s frame, and is usually positioned below the Component.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - the parent \n\u003ccode\u003eComponent\u003c/code\u003e for the dialog",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ],
        "return": [
          "user\u0027s input"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "initialSelectionValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInputDialog",
      "comment": "Shows a question-message dialog requesting input from the user and parented to parentComponent. The input value will be initialized to initialSelectionValue. The dialog is displayed on top of the Component\u0027s frame, and is usually positioned below the Component.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - the parent \n\u003ccode\u003eComponent\u003c/code\u003e for the dialog",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003einitialSelectionValue\u003c/code\u003e - the value used to initialize the input field"
        ],
        "return": [
          "user\u0027s input"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInputDialog",
      "comment": "Shows a dialog requesting input from the user parented to parentComponent with the dialog having the title title and message type messageType.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - the parent \n\u003ccode\u003eComponent\u003c/code\u003e for the dialog",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003etitle\u003c/code\u003e - the \n\u003ccode\u003eString\u003c/code\u003e to display in the dialog title bar",
          "\u003ccode\u003emessageType\u003c/code\u003e - the type of message that is to be displayed: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ],
        "return": [
          "user\u0027s input"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "icon",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "selectionValues",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "initialSelectionValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInputDialog",
      "comment": "Prompts the user for input in a blocking dialog where the initial selection, possible selections, and all other options can be specified. The user will able to choose from selectionValues, where null implies the user can input whatever they wish, usually by means of a JTextField. initialSelectionValue is the initial value to prompt the user with. It is up to the UI to decide how best to represent the selectionValues, but usually a JComboBox, JList, or JTextField will be used.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - the parent \n\u003ccode\u003eComponent\u003c/code\u003e for the dialog",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003etitle\u003c/code\u003e - the \n\u003ccode\u003eString\u003c/code\u003e to display in the dialog title bar",
          "\u003ccode\u003emessageType\u003c/code\u003e - the type of message to be displayed: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e",
          "\u003ccode\u003eicon\u003c/code\u003e - the \n\u003ccode\u003eIcon\u003c/code\u003e image to display",
          "\u003ccode\u003eselectionValues\u003c/code\u003e - an array of \n\u003ccode\u003eObject\u003c/code\u003es that gives the possible selections",
          "\u003ccode\u003einitialSelectionValue\u003c/code\u003e - the value used to initialize the input field"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ],
        "return": [
          "user\u0027s input, or \n\u003ccode\u003enull\u003c/code\u003e meaning the user canceled the input"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showMessageDialog",
      "comment": "Brings up an information-message dialog titled \"Message\".",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showMessageDialog",
      "comment": "Brings up a dialog that displays a message using a default icon determined by the messageType parameter.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003etitle\u003c/code\u003e - the title string for the dialog",
          "\u003ccode\u003emessageType\u003c/code\u003e - the type of message to be displayed: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "icon",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showMessageDialog",
      "comment": "Brings up a dialog displaying a message, specifying all parameters.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003etitle\u003c/code\u003e - the title string for the dialog",
          "\u003ccode\u003emessageType\u003c/code\u003e - the type of message to be displayed: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e",
          "\u003ccode\u003eicon\u003c/code\u003e - an icon to display in the dialog that helps the user identify the kind of message that is being displayed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showConfirmDialog",
      "comment": "Brings up a dialog with the options Yes, No and Cancel; with the title, Select an Option.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ],
        "return": [
          "an integer indicating the option selected by the user"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "optionType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showConfirmDialog",
      "comment": "Brings up a dialog where the number of choices is determined by the optionType parameter.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003etitle\u003c/code\u003e - the title string for the dialog",
          "\u003ccode\u003eoptionType\u003c/code\u003e - an int designating the options available on the dialog: \n\u003ccode\u003eYES_NO_OPTION\u003c/code\u003e, \n\u003ccode\u003eYES_NO_CANCEL_OPTION\u003c/code\u003e, or \n\u003ccode\u003eOK_CANCEL_OPTION\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ],
        "return": [
          "an int indicating the option selected by the user"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "optionType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showConfirmDialog",
      "comment": "Brings up a dialog where the number of choices is determined by the optionType parameter, where the messageType parameter determines the icon to display. The messageType parameter is primarily used to supply a default icon from the Look and Feel.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used.",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003etitle\u003c/code\u003e - the title string for the dialog",
          "\u003ccode\u003eoptionType\u003c/code\u003e - an integer designating the options available on the dialog: \n\u003ccode\u003eYES_NO_OPTION\u003c/code\u003e, \n\u003ccode\u003eYES_NO_CANCEL_OPTION\u003c/code\u003e, or \n\u003ccode\u003eOK_CANCEL_OPTION\u003c/code\u003e",
          "\u003ccode\u003emessageType\u003c/code\u003e - an integer designating the kind of message this is; primarily used to determine the icon from the pluggable Look and Feel: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ],
        "return": [
          "an integer indicating the option selected by the user"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "optionType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "icon",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showConfirmDialog",
      "comment": "Brings up a dialog with a specified icon, where the number of choices is determined by the optionType parameter. The messageType parameter is primarily used to supply a default icon from the look and feel.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003emessage\u003c/code\u003e - the Object to display",
          "\u003ccode\u003etitle\u003c/code\u003e - the title string for the dialog",
          "\u003ccode\u003eoptionType\u003c/code\u003e - an int designating the options available on the dialog: \n\u003ccode\u003eYES_NO_OPTION\u003c/code\u003e, \n\u003ccode\u003eYES_NO_CANCEL_OPTION\u003c/code\u003e, or \n\u003ccode\u003eOK_CANCEL_OPTION\u003c/code\u003e",
          "\u003ccode\u003emessageType\u003c/code\u003e - an int designating the kind of message this is, primarily used to determine the icon from the pluggable Look and Feel: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e",
          "\u003ccode\u003eicon\u003c/code\u003e - the icon to display in the dialog"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ],
        "return": [
          "an int indicating the option selected by the user"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "optionType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "icon",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "options",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "initialValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showOptionDialog",
      "comment": "Brings up a dialog with a specified icon, where the initial choice is determined by the initialValue parameter and the number of choices is determined by the optionType parameter. If optionType is YES_NO_OPTION, or YES_NO_CANCEL_OPTION and the options parameter is null, then the options are supplied by the look and feel. The messageType parameter is primarily used to supply a default icon from the look and feel.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003etitle\u003c/code\u003e - the title string for the dialog",
          "\u003ccode\u003eoptionType\u003c/code\u003e - an integer designating the options available on the dialog: \n\u003ccode\u003eDEFAULT_OPTION\u003c/code\u003e, \n\u003ccode\u003eYES_NO_OPTION\u003c/code\u003e, \n\u003ccode\u003eYES_NO_CANCEL_OPTION\u003c/code\u003e, or \n\u003ccode\u003eOK_CANCEL_OPTION\u003c/code\u003e",
          "\u003ccode\u003emessageType\u003c/code\u003e - an integer designating the kind of message this is, primarily used to determine the icon from the pluggable Look and Feel: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e",
          "\u003ccode\u003eicon\u003c/code\u003e - the icon to display in the dialog",
          "\u003ccode\u003eoptions\u003c/code\u003e - an array of objects indicating the possible choices the user can make; if the objects are components, they are rendered properly; non-\n\u003ccode\u003eString\u003c/code\u003e objects are rendered using their \n\u003ccode\u003etoString\u003c/code\u003e methods; if this parameter is \n\u003ccode\u003enull\u003c/code\u003e, the options are determined by the Look and Feel",
          "\u003ccode\u003einitialValue\u003c/code\u003e - the object that represents the default selection for the dialog; only meaningful if \n\u003ccode\u003eoptions\u003c/code\u003e is used; can be \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ],
        "return": [
          "an integer indicating the option chosen by the user, or \n\u003ccode\u003eCLOSED_OPTION\u003c/code\u003e if the user closed the dialog"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JDialog",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createDialog",
      "comment": "Creates and returns a new JDialog wrapping this centered on the parentComponent in the parentComponent\u0027s frame. title is the title of the returned dialog. The returned JDialog will not be resizable by the user, however programs can invoke setResizable on the JDialog instance to change this property. The returned JDialog will be set up such that once it is closed, or the user clicks on one of the buttons, the optionpane\u0027s value property will be set accordingly and the dialog will be closed. Each time the dialog is made visible, it will reset the option pane\u0027s value property to JOptionPane.UNINITIALIZED_VALUE to ensure the user\u0027s subsequent action closes the dialog properly.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the frame in which the dialog is displayed; if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003etitle\u003c/code\u003e - the title string for the dialog"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ],
        "return": [
          "a new \n\u003ccode\u003eJDialog\u003c/code\u003e containing this instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JDialog",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createDialog",
      "comment": "Creates and returns a new parentless JDialog with the specified title. The returned JDialog will not be resizable by the user, however programs can invoke setResizable on the JDialog instance to change this property. The returned JDialog will be set up such that once it is closed, or the user clicks on one of the buttons, the optionpane\u0027s value property will be set accordingly and the dialog will be closed. Each time the dialog is made visible, it will reset the option pane\u0027s value property to JOptionPane.UNINITIALIZED_VALUE to ensure the user\u0027s subsequent action closes the dialog properly.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etitle\u003c/code\u003e - the title string for the dialog"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ],
        "return": [
          "a new \n\u003ccode\u003eJDialog\u003c/code\u003e containing this instance"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInternalMessageDialog",
      "comment": "Brings up an internal confirmation dialog panel. The dialog is a information-message dialog titled \"Message\".",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003emessage\u003c/code\u003e - the object to display"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInternalMessageDialog",
      "comment": "Brings up an internal dialog panel that displays a message using a default icon determined by the messageType parameter.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003etitle\u003c/code\u003e - the title string for the dialog",
          "\u003ccode\u003emessageType\u003c/code\u003e - the type of message to be displayed: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "icon",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInternalMessageDialog",
      "comment": "Brings up an internal dialog panel displaying a message, specifying all parameters.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003etitle\u003c/code\u003e - the title string for the dialog",
          "\u003ccode\u003emessageType\u003c/code\u003e - the type of message to be displayed: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e",
          "\u003ccode\u003eicon\u003c/code\u003e - an icon to display in the dialog that helps the user identify the kind of message that is being displayed"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInternalConfirmDialog",
      "comment": "Brings up an internal dialog panel with the options Yes, No and Cancel; with the title, Select an Option.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display"
        ],
        "return": [
          "an integer indicating the option selected by the user"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "optionType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInternalConfirmDialog",
      "comment": "Brings up a internal dialog panel where the number of choices is determined by the optionType parameter.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003emessage\u003c/code\u003e - the object to display in the dialog; a \n\u003ccode\u003eComponent\u003c/code\u003e object is rendered as a \n\u003ccode\u003eComponent\u003c/code\u003e; a \n\u003ccode\u003eString\u003c/code\u003e object is rendered as a string; other objects are converted to a \n\u003ccode\u003eString\u003c/code\u003e using the \n\u003ccode\u003etoString\u003c/code\u003e method",
          "\u003ccode\u003etitle\u003c/code\u003e - the title string for the dialog",
          "\u003ccode\u003eoptionType\u003c/code\u003e - an integer designating the options available on the dialog: \n\u003ccode\u003eYES_NO_OPTION\u003c/code\u003e, or \n\u003ccode\u003eYES_NO_CANCEL_OPTION\u003c/code\u003e"
        ],
        "return": [
          "an integer indicating the option selected by the user"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "optionType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInternalConfirmDialog",
      "comment": "Brings up an internal dialog panel where the number of choices is determined by the optionType parameter, where the messageType parameter determines the icon to display. The messageType parameter is primarily used to supply a default icon from the Look and Feel.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003emessage\u003c/code\u003e - the object to display in the dialog; a \n\u003ccode\u003eComponent\u003c/code\u003e object is rendered as a \n\u003ccode\u003eComponent\u003c/code\u003e; a \n\u003ccode\u003eString\u003c/code\u003e object is rendered as a string; other objects are converted to a \n\u003ccode\u003eString\u003c/code\u003e using the \n\u003ccode\u003etoString\u003c/code\u003e method",
          "\u003ccode\u003etitle\u003c/code\u003e - the title string for the dialog",
          "\u003ccode\u003eoptionType\u003c/code\u003e - an integer designating the options available on the dialog: \n\u003ccode\u003eYES_NO_OPTION\u003c/code\u003e, or \n\u003ccode\u003eYES_NO_CANCEL_OPTION\u003c/code\u003e",
          "\u003ccode\u003emessageType\u003c/code\u003e - an integer designating the kind of message this is, primarily used to determine the icon from the pluggable Look and Feel: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e"
        ],
        "return": [
          "an integer indicating the option selected by the user"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "optionType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "icon",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInternalConfirmDialog",
      "comment": "Brings up an internal dialog panel with a specified icon, where the number of choices is determined by the optionType parameter. The messageType parameter is primarily used to supply a default icon from the look and feel.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the parentComponent has no Frame, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003emessage\u003c/code\u003e - the object to display in the dialog; a \n\u003ccode\u003eComponent\u003c/code\u003e object is rendered as a \n\u003ccode\u003eComponent\u003c/code\u003e; a \n\u003ccode\u003eString\u003c/code\u003e object is rendered as a string; other objects are converted to a \n\u003ccode\u003eString\u003c/code\u003e using the \n\u003ccode\u003etoString\u003c/code\u003e method",
          "\u003ccode\u003etitle\u003c/code\u003e - the title string for the dialog",
          "\u003ccode\u003eoptionType\u003c/code\u003e - an integer designating the options available on the dialog: \n\u003ccode\u003eYES_NO_OPTION\u003c/code\u003e, or \n\u003ccode\u003eYES_NO_CANCEL_OPTION\u003c/code\u003e.",
          "\u003ccode\u003emessageType\u003c/code\u003e - an integer designating the kind of message this is, primarily used to determine the icon from the pluggable Look and Feel: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e",
          "\u003ccode\u003eicon\u003c/code\u003e - the icon to display in the dialog"
        ],
        "return": [
          "an integer indicating the option selected by the user"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "optionType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "icon",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "options",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "initialValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInternalOptionDialog",
      "comment": "Brings up an internal dialog panel with a specified icon, where the initial choice is determined by the initialValue parameter and the number of choices is determined by the optionType parameter. If optionType is YES_NO_OPTION, or YES_NO_CANCEL_OPTION and the options parameter is null, then the options are supplied by the Look and Feel. The messageType parameter is primarily used to supply a default icon from the look and feel.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - determines the \n\u003ccode\u003eFrame\u003c/code\u003e in which the dialog is displayed; if \n\u003ccode\u003enull\u003c/code\u003e, or if the \n\u003ccode\u003eparentComponent\u003c/code\u003e has no \n\u003ccode\u003eFrame\u003c/code\u003e, a default \n\u003ccode\u003eFrame\u003c/code\u003e is used",
          "\u003ccode\u003emessage\u003c/code\u003e - the object to display in the dialog; a \n\u003ccode\u003eComponent\u003c/code\u003e object is rendered as a \n\u003ccode\u003eComponent\u003c/code\u003e; a \n\u003ccode\u003eString\u003c/code\u003e object is rendered as a string. Other objects are converted to a \n\u003ccode\u003eString\u003c/code\u003e using the \n\u003ccode\u003etoString\u003c/code\u003e method",
          "\u003ccode\u003etitle\u003c/code\u003e - the title string for the dialog",
          "\u003ccode\u003eoptionType\u003c/code\u003e - an integer designating the options available on the dialog: \n\u003ccode\u003eYES_NO_OPTION\u003c/code\u003e, or \n\u003ccode\u003eYES_NO_CANCEL_OPTION\u003c/code\u003e",
          "\u003ccode\u003emessageType\u003c/code\u003e - an integer designating the kind of message this is; primarily used to determine the icon from the pluggable Look and Feel: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e",
          "\u003ccode\u003eicon\u003c/code\u003e - the icon to display in the dialog",
          "\u003ccode\u003eoptions\u003c/code\u003e - an array of objects indicating the possible choices the user can make; if the objects are components, they are rendered properly; non-\n\u003ccode\u003eString\u003c/code\u003e objects are rendered using their \n\u003ccode\u003etoString\u003c/code\u003e methods; if this parameter is \n\u003ccode\u003enull\u003c/code\u003e, the options are determined by the Look and Feel",
          "\u003ccode\u003einitialValue\u003c/code\u003e - the object that represents the default selection for the dialog; only meaningful if \n\u003ccode\u003eoptions\u003c/code\u003e is used; can be \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an integer indicating the option chosen by the user, or \n\u003ccode\u003eCLOSED_OPTION\u003c/code\u003e if the user closed the Dialog"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInternalInputDialog",
      "comment": "Shows an internal question-message dialog requesting input from the user parented to parentComponent. The dialog is displayed in the Component\u0027s frame, and is usually positioned below the Component.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - the parent \n\u003ccode\u003eComponent\u003c/code\u003e for the dialog",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display"
        ],
        "return": [
          "user\u0027s input"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInternalInputDialog",
      "comment": "Shows an internal dialog requesting input from the user parented to parentComponent with the dialog having the title title and message type messageType.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - the parent \n\u003ccode\u003eComponent\u003c/code\u003e for the dialog",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003etitle\u003c/code\u003e - the \n\u003ccode\u003eString\u003c/code\u003e to display in the dialog title bar",
          "\u003ccode\u003emessageType\u003c/code\u003e - the type of message that is to be displayed: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE"
        ],
        "return": [
          "user\u0027s input"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "icon",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "selectionValues",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "initialSelectionValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "showInternalInputDialog",
      "comment": "Prompts the user for input in a blocking internal dialog where the initial selection, possible selections, and all other options can be specified. The user will able to choose from selectionValues, where null implies the user can input whatever they wish, usually by means of a JTextField. initialSelectionValue is the initial value to prompt the user with. It is up to the UI to decide how best to represent the selectionValues, but usually a JComboBox, JList, or JTextField will be used.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - the parent \n\u003ccode\u003eComponent\u003c/code\u003e for the dialog",
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003etitle\u003c/code\u003e - the \n\u003ccode\u003eString\u003c/code\u003e to display in the dialog title bar",
          "\u003ccode\u003emessageType\u003c/code\u003e - the type of message to be displayed: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e",
          "\u003ccode\u003eicon\u003c/code\u003e - the \n\u003ccode\u003eIcon\u003c/code\u003e image to display",
          "\u003ccode\u003eselectionValues\u003c/code\u003e - an array of \n\u003ccode\u003eObjects\u003c/code\u003e that gives the possible selections",
          "\u003ccode\u003einitialSelectionValue\u003c/code\u003e - the value used to initialize the input field"
        ],
        "return": [
          "user\u0027s input, or \n\u003ccode\u003enull\u003c/code\u003e meaning the user canceled the input"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JInternalFrame",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createInternalFrame",
      "comment": "Creates and returns an instance of JInternalFrame. The internal frame is created with the specified title, and wrapping the JOptionPane. The returned JInternalFrame is added to the JDesktopPane ancestor of parentComponent, or components parent if one its ancestors isn\u0027t a JDesktopPane, or if parentComponent doesn\u0027t have a parent then a RuntimeException is thrown.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - the parent \n\u003ccode\u003eComponent\u003c/code\u003e for the internal frame",
          "\u003ccode\u003etitle\u003c/code\u003e - the \n\u003ccode\u003eString\u003c/code\u003e to display in the frame\u0027s title bar"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimeException.html\" title\u003d\"class in java.lang\"\u003eRuntimeException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eparentComponent\u003c/code\u003e does not have a valid parent"
        ],
        "return": [
          "a \n\u003ccode\u003eJInternalFrame\u003c/code\u003e containing a \n\u003ccode\u003eJOptionPane\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Frame",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getFrameForComponent",
      "comment": "Returns the specified component\u0027s Frame.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#getRootFrame()\"\u003e\u003ccode\u003egetRootFrame()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - the \n\u003ccode\u003eComponent\u003c/code\u003e to check for a \n\u003ccode\u003eFrame\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eFrame\u003c/code\u003e that contains the component, or \n\u003ccode\u003egetRootFrame\u003c/code\u003e if the component is \n\u003ccode\u003enull\u003c/code\u003e, or does not have a valid \n\u003ccode\u003eFrame\u003c/code\u003e parent"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JDesktopPane",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "parentComponent",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getDesktopPaneForComponent",
      "comment": "Returns the specified component\u0027s desktop pane.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentComponent\u003c/code\u003e - the \n\u003ccode\u003eComponent\u003c/code\u003e to check for a desktop"
        ],
        "return": [
          "the \n\u003ccode\u003eJDesktopPane\u003c/code\u003e that contains the component, or \n\u003ccode\u003enull\u003c/code\u003e if the component is \n\u003ccode\u003enull\u003c/code\u003e or does not have an ancestor that is a \n\u003ccode\u003eJInternalFrame\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Frame",
            "type": "Class"
          },
          "name": "newRootFrame",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "setRootFrame",
      "comment": "Sets the frame to use for class methods in which a frame is not provided. Note: It is recommended that rather than using this method you supply a valid parent.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enewRootFrame\u003c/code\u003e - the default \n\u003ccode\u003eFrame\u003c/code\u003e to use"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Frame",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getRootFrame",
      "comment": "Returns the Frame to use for the class methods in which a frame is not provided.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setRootFrame(java.awt.Frame)\"\u003e\u003ccode\u003esetRootFrame(java.awt.Frame)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e"
        ],
        "return": [
          "the default \n\u003ccode\u003eFrame\u003c/code\u003e to use"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.plaf.OptionPaneUI",
            "type": "Class"
          },
          "name": "ui",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setUI",
      "comment": "Sets the UI object which implements the L\u0026F for this component.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "hidden",
              "value": true
            },
            {
              "name": "escription",
              "value": "The UI object that implements the optionpane\u0027s LookAndFeel"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#getUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eUIDefaults.getUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eui\u003c/code\u003e - the \n\u003ccode\u003eOptionPaneUI\u003c/code\u003e L\u0026amp;F object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.plaf.OptionPaneUI",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUI",
      "comment": "Returns the UI object which implements the L\u0026F for this component.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getUI()\"\u003egetUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eOptionPaneUI\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "updateUI",
      "comment": "Notification from the UIManager that the L\u0026F has changed. Replaces the current UI object with the latest version from the UIManager.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#updateUI()\"\u003e\u003ccode\u003eJComponent.updateUI()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#updateUI()\"\u003eupdateUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUIClassID",
      "comment": "Returns the name of the UI class that implements the L\u0026F for this component.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getUIClassID()\"\u003e\u003ccode\u003eJComponent.getUIClassID()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#getUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eUIDefaults.getUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getUIClassID()\"\u003egetUIClassID\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the string \"OptionPaneUI\""
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "newMessage",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMessage",
      "comment": "Sets the option pane\u0027s message-object.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "escription",
              "value": "The optionpane\u0027s message object."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#getMessage()\"\u003e\u003ccode\u003egetMessage()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewMessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMessage",
      "comment": "Returns the message-object this pane displays.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setMessage(java.lang.Object)\"\u003e\u003ccode\u003esetMessage(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eObject\u003c/code\u003e that is displayed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "newIcon",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setIcon",
      "comment": "Sets the icon to display. If non-null, the look and feel does not provide an icon.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "escription",
              "value": "The option pane\u0027s type icon."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#getIcon()\"\u003e\u003ccode\u003egetIcon()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewIcon\u003c/code\u003e - the \n\u003ccode\u003eIcon\u003c/code\u003e to display"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.Icon",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIcon",
      "comment": "Returns the icon this pane displays.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setIcon(javax.swing.Icon)\"\u003e\u003ccode\u003esetIcon(javax.swing.Icon)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eIcon\u003c/code\u003e that is displayed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "newValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setValue",
      "comment": "Sets the value the user has chosen.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "escription",
              "value": "The option pane\u0027s value object."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#getValue()\"\u003e\u003ccode\u003egetValue()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewValue\u003c/code\u003e - the chosen value"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getValue",
      "comment": "Returns the value the user has selected. UNINITIALIZED_VALUE implies the user has not yet made a choice, null means the user closed the window with out choosing anything. Otherwise the returned value will be one of the options defined in this object.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setValue(java.lang.Object)\"\u003e\u003ccode\u003esetValue(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eObject\u003c/code\u003e chosen by the user, \n\u003ccode\u003eUNINITIALIZED_VALUE\u003c/code\u003e if the user has not yet made a choice, or \n\u003ccode\u003enull\u003c/code\u003e if the user closed the window without making a choice"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "newOptions",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOptions",
      "comment": "Sets the options this pane displays. If an element in newOptions is a Component it is added directly to the pane, otherwise a button is created for the element.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "escription",
              "value": "The option pane\u0027s options objects."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#getOptions()\"\u003e\u003ccode\u003egetOptions()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewOptions\u003c/code\u003e - an array of \n\u003ccode\u003eObjects\u003c/code\u003e that create the buttons the user can click on, or arbitrary \n\u003ccode\u003eComponents\u003c/code\u003e to add to the pane"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOptions",
      "comment": "Returns the choices the user can make.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setOptions(java.lang.Object%5B%5D)\"\u003e\u003ccode\u003esetOptions(java.lang.Object[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the array of \n\u003ccode\u003eObjects\u003c/code\u003e that give the user\u0027s choices"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "newInitialValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setInitialValue",
      "comment": "Sets the initial value that is to be enabled -- the Component that has the focus when the pane is initially displayed.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "escription",
              "value": "The option pane\u0027s initial value object."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#getInitialValue()\"\u003e\u003ccode\u003egetInitialValue()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewInitialValue\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e that gets the initial keyboard focus"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getInitialValue",
      "comment": "Returns the initial value.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setInitialValue(java.lang.Object)\"\u003e\u003ccode\u003esetInitialValue(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eObject\u003c/code\u003e that gets the initial keyboard focus"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "newType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMessageType",
      "comment": "Sets the option pane\u0027s message type. The message type is used by the Look and Feel to determine the icon to display (if not supplied) as well as potentially how to lay out the parentComponent.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "escription",
              "value": "The option pane\u0027s message type."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#getMessageType()\"\u003e\u003ccode\u003egetMessageType()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewType\u003c/code\u003e - an integer specifying the kind of message to display: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimeException.html\" title\u003d\"class in java.lang\"\u003eRuntimeException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003enewType\u003c/code\u003e is not one of the legal values listed above"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMessageType",
      "comment": "Returns the message type.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setMessageType(int)\"\u003e\u003ccode\u003esetMessageType(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an integer specifying the message type"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "newType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOptionType",
      "comment": "Sets the options to display. The option type is used by the Look and Feel to determine what buttons to show (unless options are supplied).",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "escription",
              "value": "The option pane\u0027s option type."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#getOptionType()\"\u003e\u003ccode\u003egetOptionType()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setOptions(java.lang.Object%5B%5D)\"\u003e\u003ccode\u003esetOptions(java.lang.Object[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewType\u003c/code\u003e - an integer specifying the options the L\u0026amp;F is to display: \n\u003ccode\u003eDEFAULT_OPTION\u003c/code\u003e, \n\u003ccode\u003eYES_NO_OPTION\u003c/code\u003e, \n\u003ccode\u003eYES_NO_CANCEL_OPTION\u003c/code\u003e, or \n\u003ccode\u003eOK_CANCEL_OPTION\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimeException.html\" title\u003d\"class in java.lang\"\u003eRuntimeException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003enewType\u003c/code\u003e is not one of the legal values listed above"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOptionType",
      "comment": "Returns the type of options that are displayed.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setOptionType(int)\"\u003e\u003ccode\u003esetOptionType(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an integer specifying the user-selectable options"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "newValues",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSelectionValues",
      "comment": "Sets the input selection values for a pane that provides the user with a list of items to choose from. (The UI provides a widget for choosing one of the values.) A null value implies the user can input whatever they wish, usually by means of a JTextField. Sets wantsInput to true. Use setInitialSelectionValue to specify the initially-chosen value. After the pane as been enabled, inputValue is set to the value the user has selected.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "escription",
              "value": "The option pane\u0027s selection values."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setWantsInput(boolean)\"\u003e\u003ccode\u003esetWantsInput(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setInitialSelectionValue(java.lang.Object)\"\u003e\u003ccode\u003esetInitialSelectionValue(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#getSelectionValues()\"\u003e\u003ccode\u003egetSelectionValues()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewValues\u003c/code\u003e - an array of \n\u003ccode\u003eObjects\u003c/code\u003e the user to be displayed (usually in a list or combo-box) from which the user can make a selection"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSelectionValues",
      "comment": "Returns the input selection values.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setSelectionValues(java.lang.Object%5B%5D)\"\u003e\u003ccode\u003esetSelectionValues(java.lang.Object[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the array of \n\u003ccode\u003eObjects\u003c/code\u003e the user can select"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "newValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setInitialSelectionValue",
      "comment": "Sets the input value that is initially displayed as selected to the user. Only used if wantsInput is true.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "escription",
              "value": "The option pane\u0027s initial selection value object."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setSelectionValues(java.lang.Object%5B%5D)\"\u003e\u003ccode\u003esetSelectionValues(java.lang.Object[])\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#getInitialSelectionValue()\"\u003e\u003ccode\u003egetInitialSelectionValue()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewValue\u003c/code\u003e - the initially selected value"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getInitialSelectionValue",
      "comment": "Returns the input value that is displayed as initially selected to the user.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setInitialSelectionValue(java.lang.Object)\"\u003e\u003ccode\u003esetInitialSelectionValue(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setSelectionValues(java.lang.Object%5B%5D)\"\u003e\u003ccode\u003esetSelectionValues(java.lang.Object[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the initially selected value"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "newValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setInputValue",
      "comment": "Sets the input value that was selected or input by the user. Only used if wantsInput is true. Note that this method is invoked internally by the option pane (in response to user action) and should generally not be called by client programs. To set the input value initially displayed as selected to the user, use setInitialSelectionValue.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "escription",
              "value": "The option pane\u0027s input value object."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setSelectionValues(java.lang.Object%5B%5D)\"\u003e\u003ccode\u003esetSelectionValues(java.lang.Object[])\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setInitialSelectionValue(java.lang.Object)\"\u003e\u003ccode\u003esetInitialSelectionValue(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setWantsInput(boolean)\"\u003e\u003ccode\u003esetWantsInput(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#getInputValue()\"\u003e\u003ccode\u003egetInputValue()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewValue\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e used to set the value that the user specified (usually in a text field)"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getInputValue",
      "comment": "Returns the value the user has input, if wantsInput is true.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setSelectionValues(java.lang.Object%5B%5D)\"\u003e\u003ccode\u003esetSelectionValues(java.lang.Object[])\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setWantsInput(boolean)\"\u003e\u003ccode\u003esetWantsInput(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setInputValue(java.lang.Object)\"\u003e\u003ccode\u003esetInputValue(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eObject\u003c/code\u003e the user specified, if it was one of the objects, or a \n\u003ccode\u003eString\u003c/code\u003e if it was a value typed into a field"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMaxCharactersPerLineCount",
      "comment": "Returns the maximum number of characters to place on a line in a message. Default is to return Integer.MAX_VALUE. The value can be changed by overriding this method in a subclass.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "return": [
          "an integer giving the maximum number of characters on a line"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "newValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setWantsInput",
      "comment": "Sets the wantsInput property. If newValue is true, an input component (such as a text field or combo box) whose parent is parentComponent is provided to allow the user to input a value. If getSelectionValues returns a non-null array, the input value is one of the objects in that array. Otherwise the input value is whatever the user inputs. This is a bound property.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "escription",
              "value": "Flag which allows the user to input a value."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setSelectionValues(java.lang.Object%5B%5D)\"\u003e\u003ccode\u003esetSelectionValues(java.lang.Object[])\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setInputValue(java.lang.Object)\"\u003e\u003ccode\u003esetInputValue(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewValue\u003c/code\u003e - if true, an input component whose parent is \n\u003ccode\u003eparentComponent\u003c/code\u003e is provided to allow the user to input a value."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getWantsInput",
      "comment": "Returns the value of the wantsInput property.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JOptionPane.html#setWantsInput(boolean)\"\u003e\u003ccode\u003esetWantsInput(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "true if an input component will be provided"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "selectInitialValue",
      "comment": "Requests that the initial value be selected, which will set focus to the initial value. This method should be invoked after the window containing the option pane is made visible.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "paramString",
      "comment": "Returns a string representation of this JOptionPane. This method is intended to be used only for debugging purposes, and the content and format of the returned string may vary between implementations. The returned string may be empty but may not be null.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#paramString()\"\u003eparamString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this \n\u003ccode\u003eJOptionPane\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.accessibility.AccessibleContext",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAccessibleContext",
      "comment": "Returns the AccessibleContext associated with this JOptionPane. For option panes, the AccessibleContext takes the form of an AccessibleJOptionPane. A new AccessibleJOptionPane instance is created if necessary.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            },
            {
              "name": "expert",
              "value": true
            },
            {
              "name": "escription",
              "value": "The AccessibleContext associated with this option pane"
            }
          ]
        }
      ],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html\" title\u003d\"class in java.awt\"\u003eComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html\" title\u003d\"interface in javax.accessibility\"\u003eAccessible\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an AccessibleJOptionPane that serves as the AccessibleContext of this AccessibleJOptionPane"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a JOptionPane with a test message.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a instance of JOptionPane to display a message using the plain-message message type and the default options delivered by the UI.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an instance of JOptionPane to display a message with the specified message type and the default options,",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003emessageType\u003c/code\u003e - the type of message to be displayed: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "optionType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an instance of JOptionPane to display a message with the specified message type and options.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003emessageType\u003c/code\u003e - the type of message to be displayed: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e",
          "\u003ccode\u003eoptionType\u003c/code\u003e - the options to display in the pane: \n\u003ccode\u003eDEFAULT_OPTION\u003c/code\u003e, \n\u003ccode\u003eYES_NO_OPTION\u003c/code\u003e, \n\u003ccode\u003eYES_NO_CANCEL_OPTION\u003c/code\u003e, \n\u003ccode\u003eOK_CANCEL_OPTION\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "optionType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "icon",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an instance of JOptionPane to display a message with the specified message type, options, and icon.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003emessageType\u003c/code\u003e - the type of message to be displayed: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e",
          "\u003ccode\u003eoptionType\u003c/code\u003e - the options to display in the pane: \n\u003ccode\u003eDEFAULT_OPTION\u003c/code\u003e, \n\u003ccode\u003eYES_NO_OPTION\u003c/code\u003e, \n\u003ccode\u003eYES_NO_CANCEL_OPTION\u003c/code\u003e, \n\u003ccode\u003eOK_CANCEL_OPTION\u003c/code\u003e",
          "\u003ccode\u003eicon\u003c/code\u003e - the \n\u003ccode\u003eIcon\u003c/code\u003e image to display"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "optionType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "icon",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "options",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an instance of JOptionPane to display a message with the specified message type, icon, and options. None of the options is initially selected. The options objects should contain either instances of Components, (which are added directly) or Strings (which are wrapped in a JButton). If you provide Components, you must ensure that when the Component is clicked it messages setValue in the created JOptionPane.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003emessageType\u003c/code\u003e - the type of message to be displayed: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e",
          "\u003ccode\u003eoptionType\u003c/code\u003e - the options to display in the pane: \n\u003ccode\u003eDEFAULT_OPTION\u003c/code\u003e, \n\u003ccode\u003eYES_NO_OPTION\u003c/code\u003e, \n\u003ccode\u003eYES_NO_CANCEL_OPTION\u003c/code\u003e, \n\u003ccode\u003eOK_CANCEL_OPTION\u003c/code\u003e",
          "\u003ccode\u003eicon\u003c/code\u003e - the \n\u003ccode\u003eIcon\u003c/code\u003e image to display",
          "\u003ccode\u003eoptions\u003c/code\u003e - the choices the user can select"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "messageType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "optionType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Icon",
            "type": "Class"
          },
          "name": "icon",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "options",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "initialValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an instance of JOptionPane to display a message with the specified message type, icon, and options, with the initially-selected option specified.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to display",
          "\u003ccode\u003emessageType\u003c/code\u003e - the type of message to be displayed: \n\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e, \n\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e, or \n\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e",
          "\u003ccode\u003eoptionType\u003c/code\u003e - the options to display in the pane: \n\u003ccode\u003eDEFAULT_OPTION\u003c/code\u003e, \n\u003ccode\u003eYES_NO_OPTION\u003c/code\u003e, \n\u003ccode\u003eYES_NO_CANCEL_OPTION\u003c/code\u003e, \n\u003ccode\u003eOK_CANCEL_OPTION\u003c/code\u003e",
          "\u003ccode\u003eicon\u003c/code\u003e - the Icon image to display",
          "\u003ccode\u003eoptions\u003c/code\u003e - the choices the user can select",
          "\u003ccode\u003einitialValue\u003c/code\u003e - the choice that is initially selected; if \n\u003ccode\u003enull\u003c/code\u003e, then nothing will be initially selected; only meaningful if \n\u003ccode\u003eoptions\u003c/code\u003e is used"
        ]
      }
    }
  ],
  "innerClasses": [
    "javax.swing.JOptionPane$AccessibleJOptionPane"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.JOptionPane",
  "comment": "\u003ccode\u003eJOptionPane\u003c/code\u003e makes it easy to pop up a standard dialog box that prompts users for a value or informs them of something. For information about using \n\u003ccode\u003eJOptionPane\u003c/code\u003e, see \n\u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html\"\u003eHow to Make Dialogs\u003c/a\u003e, a section in \n\u003cem\u003eThe Java Tutorial\u003c/em\u003e. \n\u003cp\u003e While the \u003ccode\u003eJOptionPane\u003c/code\u003e class may appear complex because of the large number of methods, almost all uses of this class are one-line calls to one of the static \u003ccode\u003eshowXxxDialog\u003c/code\u003e methods shown below: \u003c/p\u003e\n\u003ctable class\u003d\"striped\"\u003e \n \u003ccaption\u003e\n  Common JOptionPane method names and their descriptions\n \u003c/caption\u003e \n \u003cthead\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"col\"\u003eMethod Name \u003c/th\u003e\n   \u003cth scope\u003d\"col\"\u003eDescription \u003c/th\u003e\n  \u003c/tr\u003e\n \u003c/thead\u003e \n \u003ctbody\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003eshowConfirmDialog \u003c/th\u003e\n   \u003ctd\u003eAsks a confirming question, like yes/no/cancel.\u003c/td\u003e \n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003eshowInputDialog \u003c/th\u003e\n   \u003ctd\u003ePrompt for some input. \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003eshowMessageDialog \u003c/th\u003e\n   \u003ctd\u003eTell the user about something that has happened. \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003eshowOptionDialog \u003c/th\u003e\n   \u003ctd\u003eThe Grand Unification of the above three. \u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e \n\u003c/table\u003e Each of these methods also comes in a \n\u003ccode\u003eshowInternalXXX\u003c/code\u003e flavor, which uses an internal frame to hold the dialog box (see \n\u003ca href\u003d\"JInternalFrame.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJInternalFrame\u003c/code\u003e\u003c/a\u003e). Multiple convenience methods have also been defined -- overloaded versions of the basic methods that use different parameter lists. \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e All dialogs are modal. Each \u003ccode\u003eshowXxxDialog\u003c/code\u003e method blocks the caller until the user\u0027s interaction is complete. \u003c/p\u003e\n\u003ctable class\u003d\"borderless\"\u003e \n \u003ccaption\u003e\n  Common dialog\n \u003c/caption\u003e \n \u003ctbody\u003e\n  \u003ctr\u003e \n   \u003ctd style\u003d\"background-color:#FFe0d0\" rowspan\u003d\"2\"\u003eicon\u003c/td\u003e \n   \u003ctd style\u003d\"background-color:#FFe0d0\"\u003emessage\u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003ctd style\u003d\"background-color:#FFe0d0\"\u003einput value\u003c/td\u003e \n  \u003c/tr\u003e \n  \u003ctr\u003e \n   \u003ctd style\u003d\"background-color:#FFe0d0\" colspan\u003d\"2\"\u003eoption buttons\u003c/td\u003e \n  \u003c/tr\u003e \n \u003c/tbody\u003e\n\u003c/table\u003e The basic appearance of one of these dialog boxes is generally similar to the picture above, although the various look-and-feels are ultimately responsible for the final result. In particular, the look-and-feels will adjust the layout to accommodate the option pane\u0027s \n\u003ccode\u003eComponentOrientation\u003c/code\u003e property. \n\u003cbr style\u003d\"clear:all\"\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e \u003cb\u003eParameters:\u003c/b\u003e\u003cbr\u003e The parameters to these methods follow consistent patterns: \u003c/p\u003e\n\u003cblockquote\u003e \n \u003cdl\u003e \n  \u003cdt\u003e\n   parentComponent\n  \u003c/dt\u003e\n  \u003cdd\u003e\n    Defines the \n   \u003ccode\u003eComponent\u003c/code\u003e that is to be the parent of this dialog box. It is used in two ways: the \n   \u003ccode\u003eFrame\u003c/code\u003e that contains it is used as the \n   \u003ccode\u003eFrame\u003c/code\u003e parent for the dialog box, and its screen coordinates are used in the placement of the dialog box. In general, the dialog box is placed just below the component. This parameter may be \n   \u003ccode\u003enull\u003c/code\u003e, in which case a default \n   \u003ccode\u003eFrame\u003c/code\u003e is used as the parent, and the dialog will be centered on the screen (depending on the L\u0026amp;F). \n  \u003c/dd\u003e\n  \u003cdt\u003e\n   message\n  \u003c/dt\u003e\n  \u003cdd\u003e\n    A descriptive message to be placed in the dialog box. In the most common usage, message is just a \n   \u003ccode\u003eString\u003c/code\u003e or \n   \u003ccode\u003eString\u003c/code\u003e constant. However, the type of this parameter is actually \n   \u003ccode\u003eObject\u003c/code\u003e. Its interpretation depends on its type: \n   \u003cdl\u003e \n    \u003cdt\u003e\n     Object[]\n    \u003c/dt\u003e\n    \u003cdd\u003e\n     An array of objects is interpreted as a series of messages (one per object) arranged in a vertical stack. The interpretation is recursive -- each object in the array is interpreted according to its type. \n    \u003c/dd\u003e\n    \u003cdt\u003e\n     Component\n    \u003c/dt\u003e\n    \u003cdd\u003e\n     The \n     \u003ccode\u003eComponent\u003c/code\u003e is displayed in the dialog. \n    \u003c/dd\u003e\n    \u003cdt\u003e\n     Icon\n    \u003c/dt\u003e\n    \u003cdd\u003e\n     The \n     \u003ccode\u003eIcon\u003c/code\u003e is wrapped in a \n     \u003ccode\u003eJLabel\u003c/code\u003e and displayed in the dialog. \n    \u003c/dd\u003e\n    \u003cdt\u003e\n     others\n    \u003c/dt\u003e\n    \u003cdd\u003e\n     The object is converted to a \n     \u003ccode\u003eString\u003c/code\u003e by calling its \n     \u003ccode\u003etoString\u003c/code\u003e method. The result is wrapped in a \n     \u003ccode\u003eJLabel\u003c/code\u003e and displayed. \n    \u003c/dd\u003e\n   \u003c/dl\u003e\n  \u003c/dd\u003e\n \u003c/dl\u003e \n \u003cdt\u003e\n  messageType\n \u003c/dt\u003e\n \u003cdd\u003e\n  Defines the style of the message. The Look and Feel manager may lay out the dialog differently depending on this value, and will often provide a default icon. The possible values are: \n  \u003cul\u003e \n   \u003cli\u003e\u003ccode\u003eERROR_MESSAGE\u003c/code\u003e \u003c/li\u003e\n   \u003cli\u003e\u003ccode\u003eINFORMATION_MESSAGE\u003c/code\u003e \u003c/li\u003e\n   \u003cli\u003e\u003ccode\u003eWARNING_MESSAGE\u003c/code\u003e \u003c/li\u003e\n   \u003cli\u003e\u003ccode\u003eQUESTION_MESSAGE\u003c/code\u003e \u003c/li\u003e\n   \u003cli\u003e\u003ccode\u003ePLAIN_MESSAGE\u003c/code\u003e \u003c/li\u003e\n  \u003c/ul\u003e \n \u003c/dd\u003e\n \u003cdt\u003e\n  optionType\n \u003c/dt\u003e\n \u003cdd\u003e\n  Defines the set of option buttons that appear at the bottom of the dialog box: \n  \u003cul\u003e \n   \u003cli\u003e\u003ccode\u003eDEFAULT_OPTION\u003c/code\u003e \u003c/li\u003e\n   \u003cli\u003e\u003ccode\u003eYES_NO_OPTION\u003c/code\u003e \u003c/li\u003e\n   \u003cli\u003e\u003ccode\u003eYES_NO_CANCEL_OPTION\u003c/code\u003e \u003c/li\u003e\n   \u003cli\u003e\u003ccode\u003eOK_CANCEL_OPTION\u003c/code\u003e \u003c/li\u003e\n  \u003c/ul\u003e You aren\u0027t limited to this set of option buttons. You can provide any buttons you want using the options parameter. \n \u003c/dd\u003e\n \u003cdt\u003e\n  options\n \u003c/dt\u003e\n \u003cdd\u003e\n  A more detailed description of the set of option buttons that will appear at the bottom of the dialog box. The usual value for the options parameter is an array of \n  \u003ccode\u003eString\u003c/code\u003es. But the parameter type is an array of \n  \u003ccode\u003eObjects\u003c/code\u003e. A button is created for each object depending on its type: \n  \u003cdl\u003e \n   \u003cdt\u003e\n    Component\n   \u003c/dt\u003e\n   \u003cdd\u003e\n    The component is added to the button row directly. \n   \u003c/dd\u003e\n   \u003cdt\u003e\n    Icon\n   \u003c/dt\u003e\n   \u003cdd\u003e\n    A \n    \u003ccode\u003eJButton\u003c/code\u003e is created with this as its label. \n   \u003c/dd\u003e\n   \u003cdt\u003e\n    other\n   \u003c/dt\u003e\n   \u003cdd\u003e\n    The \n    \u003ccode\u003eObject\u003c/code\u003e is converted to a string using its \n    \u003ccode\u003etoString\u003c/code\u003e method and the result is used to label a \n    \u003ccode\u003eJButton\u003c/code\u003e. \n   \u003c/dd\u003e\n  \u003c/dl\u003e\n \u003c/dd\u003e \n \u003cdt\u003e\n  icon\n \u003c/dt\u003e\n \u003cdd\u003e\n  A decorative icon to be placed in the dialog box. A default value for this is determined by the \n  \u003ccode\u003emessageType\u003c/code\u003e parameter. \n \u003c/dd\u003e\n \u003cdt\u003e\n  title\n \u003c/dt\u003e\n \u003cdd\u003e\n  The title for the dialog box. \n \u003c/dd\u003e\n \u003cdt\u003e\n  initialValue\n \u003c/dt\u003e\n \u003cdd\u003e\n  The default selection (input value). \n \u003c/dd\u003e \n\u003c/blockquote\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e When the selection is changed, \u003ccode\u003esetValue\u003c/code\u003e is invoked, which generates a \u003ccode\u003ePropertyChangeEvent\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003e If a \u003ccode\u003eJOptionPane\u003c/code\u003e has configured to all input \u003ccode\u003esetWantsInput\u003c/code\u003e the bound property \u003ccode\u003eJOptionPane.INPUT_VALUE_PROPERTY\u003c/code\u003e can also be listened to, to determine when the user has input or selected a value. \u003c/p\u003e\n\u003cp\u003e When one of the \u003ccode\u003eshowXxxDialog\u003c/code\u003e methods returns an integer, the possible values are: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e\u003ccode\u003eYES_OPTION\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eNO_OPTION\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eCANCEL_OPTION\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eOK_OPTION\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eCLOSED_OPTION\u003c/code\u003e \u003c/li\u003e\n\u003c/ul\u003e \n\u003cb\u003eExamples:\u003c/b\u003e \n\u003cdl\u003e \n \u003cdt\u003e\n  Show an error dialog that displays the message, \u0027alert\u0027: \n \u003c/dt\u003e\n \u003cdd\u003e\n  \u003ccode\u003e JOptionPane.showMessageDialog(null, \"alert\", \"alert\", JOptionPane.ERROR_MESSAGE); \u003c/code\u003e \n \u003c/dd\u003e\n \u003cdt\u003e\n  Show an internal information dialog with the message, \u0027information\u0027: \n \u003c/dt\u003e\n \u003cdd\u003e\n  \u003cpre\u003e JOptionPane.showInternalMessageDialog(frame, \"information\",\n             \"information\", JOptionPane.INFORMATION_MESSAGE);\n \u003c/pre\u003e \n \u003c/dd\u003e\n \u003cdt\u003e\n  Show an information panel with the options yes/no and message \u0027choose one\u0027: \n \u003c/dt\u003e\n \u003cdd\u003e\n  \u003cpre\u003eJOptionPane.showConfirmDialog(null,\n             \"choose one\", \"choose one\", JOptionPane.YES_NO_OPTION);\n \u003c/pre\u003e \n \u003c/dd\u003e\n \u003cdt\u003e\n  Show an internal information dialog with the options yes/no/cancel and message \u0027please choose one\u0027 and title information: \n \u003c/dt\u003e\n \u003cdd\u003e\n  \u003cpre\u003eJOptionPane.showInternalConfirmDialog(frame,\n             \"please choose one\", \"information\",\n             JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);\n \u003c/pre\u003e \n \u003c/dd\u003e\n \u003cdt\u003e\n  Show a warning dialog with the options OK, CANCEL, title \u0027Warning\u0027, and message \u0027Click OK to continue\u0027: \n \u003c/dt\u003e\n \u003cdd\u003e\n  \u003cpre\u003e Object[] options \u003d { \"OK\", \"CANCEL\" };\n JOptionPane.showOptionDialog(null, \"Click OK to continue\", \"Warning\",\n             JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,\n             null, options, options[0]);\n \u003c/pre\u003e \n \u003c/dd\u003e\n \u003cdt\u003e\n  Show a dialog asking the user to type in a String: \n \u003c/dt\u003e\n \u003cdd\u003e\n  \u003ccode\u003e String inputValue \u003d JOptionPane.showInputDialog(\"Please input a value\"); \u003c/code\u003e \n \u003c/dd\u003e\n \u003cdt\u003e\n  Show a dialog asking the user to select a String: \n \u003c/dt\u003e\n \u003cdd\u003e\n  \u003cpre\u003e Object[] possibleValues \u003d { \"First\", \"Second\", \"Third\" };\u003cbr\u003e\n Object selectedValue \u003d JOptionPane.showInputDialog(null,\n             \"Choose one\", \"Input\",\n             JOptionPane.INFORMATION_MESSAGE, null,\n             possibleValues, possibleValues[0]);\n \u003c/pre\u003e \n \u003c/dd\u003e\n\u003c/dl\u003e \n\u003cb\u003eDirect Use:\u003c/b\u003e\n\u003cbr\u003e To create and use an \n\u003ccode\u003eJOptionPane\u003c/code\u003e directly, the standard pattern is roughly as follows: \n\u003cpre\u003e     JOptionPane pane \u003d new JOptionPane(\u003ci\u003earguments\u003c/i\u003e);\n     pane.set\u003ci\u003e.Xxxx(...); // Configure\u003c/i\u003e\n     JDialog dialog \u003d pane.createDialog(\u003ci\u003eparentComponent, title\u003c/i\u003e);\n     dialog.show();\n     Object selectedValue \u003d pane.getValue();\n     if(selectedValue \u003d\u003d null)\n       return CLOSED_OPTION;\n     \u003ci\u003e//If there is \u003cb\u003enot\u003c/b\u003e an array of option buttons:\u003c/i\u003e\n     if(options \u003d\u003d null) {\n       if(selectedValue instanceof Integer)\n          return ((Integer)selectedValue).intValue();\n       return CLOSED_OPTION;\n     }\n     \u003ci\u003e//If there is an array of option buttons:\u003c/i\u003e\n     for(int counter \u003d 0, maxCounter \u003d options.length;\n        counter \u0026lt; maxCounter; counter++) {\n        if(options[counter].equals(selectedValue))\n        return counter;\n     }\n     return CLOSED_OPTION;\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Swing is not thread safe. For more information see \u003ca href\u003d\"package-summary.html#threading\"\u003eSwing\u0027s Threading Policy\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JInternalFrame.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJInternalFrame\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}