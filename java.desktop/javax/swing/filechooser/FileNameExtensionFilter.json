{
  "packageName": "javax.swing.filechooser",
  "simpleName": "FileNameExtensionFilter",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.filechooser.FileFilter",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "name": "f",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "accept",
      "comment": "Tests the specified file, returning true if the file is accepted, false otherwise. True is returned if the extension matches one of the file name extensions of this FileFilter, or the file is a directory.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/filechooser/FileFilter.html#accept(java.io.File)\"\u003eaccept\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/filechooser/FileFilter.html\" title\u003d\"class in javax.swing.filechooser\"\u003eFileFilter\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the \n\u003ccode\u003eFile\u003c/code\u003e to test"
        ],
        "return": [
          "true if the file is to be accepted, false otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDescription",
      "comment": "The description of this filter. For example: \"JPG and GIF Images.\"",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/filechooser/FileView.html#getName(java.io.File)\"\u003e\u003ccode\u003eFileView.getName(java.io.File)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/filechooser/FileFilter.html#getDescription()\"\u003egetDescription\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/filechooser/FileFilter.html\" title\u003d\"class in javax.swing.filechooser\"\u003eFileFilter\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the description of this filter"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getExtensions",
      "comment": "Returns the set of file name extensions files are tested against.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the set of file name extensions files are tested against"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of the FileNameExtensionFilter. This method is intended to be used for debugging purposes, and the content and format of the returned string may vary between implementations.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this \n\u003ccode\u003eFileNameExtensionFilter\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "description",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "extensions",
          "varargs": true
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a FileNameExtensionFilter with the specified description and file name extensions. The returned FileNameExtensionFilter will accept all directories and any file with a file name extension contained in extensions.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/filechooser/FileNameExtensionFilter.html#accept(java.io.File)\"\u003e\u003ccode\u003eaccept(java.io.File)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edescription\u003c/code\u003e - textual description for the filter, may be \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003eextensions\u003c/code\u003e - the accepted file name extensions"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if extensions is \n\u003ccode\u003enull\u003c/code\u003e, empty, contains \n\u003ccode\u003enull\u003c/code\u003e, or contains an empty string"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "javax.swing.filechooser.FileNameExtensionFilter",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/filechooser/FileFilter.html\" title\u003d\"class in javax.swing.filechooser\"\u003e\u003ccode\u003eFileFilter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFileChooser.html#setFileFilter(javax.swing.filechooser.FileFilter)\"\u003e\u003ccode\u003eJFileChooser.setFileFilter(javax.swing.filechooser.FileFilter)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFileChooser.html#addChoosableFileFilter(javax.swing.filechooser.FileFilter)\"\u003e\u003ccode\u003eJFileChooser.addChoosableFileFilter(javax.swing.filechooser.FileFilter)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFileChooser.html#getFileFilter()\"\u003e\u003ccode\u003eJFileChooser.getFileFilter()\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}