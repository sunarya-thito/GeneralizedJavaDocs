{
  "packageName": "javax.swing.filechooser",
  "simpleName": "FileView",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "name": "f",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getName",
      "comment": "The name of the file. Normally this would be simply f.getName().",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - a \n\u003ccode\u003eFile\u003c/code\u003e object"
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e representing the name of the file"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "name": "f",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDescription",
      "comment": "A human readable description of the file. For example, a file named jag.jpg might have a description that read: \"A JPEG image file of James Gosling\u0027s face\".",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - a \n\u003ccode\u003eFile\u003c/code\u003e object"
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e containing a description of the file or \n\u003ccode\u003enull\u003c/code\u003e if it is not available."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "name": "f",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTypeDescription",
      "comment": "A human readable description of the type of the file. For example, a jpg file might have a type description of: \"A JPEG Compressed Image File\"",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - a \n\u003ccode\u003eFile\u003c/code\u003e object"
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e containing a description of the type of the file or \n\u003ccode\u003enull\u003c/code\u003e if it is not available ."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.Icon",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "name": "f",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIcon",
      "comment": "The icon that represents this file in the JFileChooser.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - a \n\u003ccode\u003eFile\u003c/code\u003e object"
        ],
        "return": [
          "an \n\u003ccode\u003eIcon\u003c/code\u003e which represents the specified \n\u003ccode\u003eFile\u003c/code\u003e or \n\u003ccode\u003enull\u003c/code\u003e if it is not available."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "name": "f",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isTraversable",
      "comment": "Whether the directory is traversable or not. This might be useful, for example, if you want a directory to represent a compound document and don\u0027t want the user to descend into it.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/filechooser/FileSystemView.html#isTraversable(java.io.File)\"\u003e\u003ccode\u003eFileSystemView.isTraversable(java.io.File)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - a \n\u003ccode\u003eFile\u003c/code\u003e object representing a directory"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the directory is traversable, \n\u003ccode\u003efalse\u003c/code\u003e if it is not, and \n\u003ccode\u003enull\u003c/code\u003e if the file system should be checked."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for subclasses to call.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.swing.filechooser.FileView",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFileChooser.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJFileChooser\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}