{
  "packageName": "javax.swing",
  "simpleName": "JFrame",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.Frame",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.swing.JRootPane",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "rootPane",
      "comment": "The JRootPane instance that manages the contentPane and optional menuBar for this frame, as well as the glassPane.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JRootPane.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJRootPane\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eRootPaneContainer\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "rootPaneCheckingEnabled",
      "comment": "If true then calls to add and setLayout will be forwarded to the contentPane. This is initially false, but is set to true when the JFrame is constructed.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#isRootPaneCheckingEnabled()\"\u003e\u003ccode\u003eisRootPaneCheckingEnabled()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#setRootPaneCheckingEnabled(boolean)\"\u003e\u003ccode\u003esetRootPaneCheckingEnabled(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eRootPaneContainer\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleContext",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "accessibleContext",
      "comment": "The accessible context property.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "frameInit",
      "comment": "Called by the constructors to init the JFrame properly.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "javax.swing.JRootPane",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createRootPane",
      "comment": "Called by the constructor methods to create the default rootPane.",
      "annotations": [],
      "tagMap": {
        "return": [
          "a new \n\u003ccode\u003eJRootPane\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "processWindowEvent",
      "comment": "Processes window events occurring on this component. Hides the window or disposes of it, as specified by the setting of the defaultCloseOperation property.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#setDefaultCloseOperation(int)\"\u003e\u003ccode\u003esetDefaultCloseOperation(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Window.html#processWindowEvent(java.awt.event.WindowEvent)\"\u003e\u003ccode\u003eWindow.processWindowEvent(java.awt.event.WindowEvent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Window.html#processWindowEvent(java.awt.event.WindowEvent)\"\u003eprocessWindowEvent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Window.html\" title\u003d\"class in java.awt\"\u003eWindow\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the window event"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDefaultCloseOperation",
      "comment": "Sets the operation that will happen by default when the user initiates a \"close\" on this frame. You must specify one of the following choices: DO_NOTHING_ON_CLOSE (defined in WindowConstants): Don\u0027t do anything; require the program to handle the operation in the windowClosing method of a registered WindowListener object. HIDE_ON_CLOSE (defined in WindowConstants): Automatically hide the frame after invoking any registered WindowListener objects. DISPOSE_ON_CLOSE (defined in WindowConstants): Automatically hide and dispose the frame after invoking any registered WindowListener objects. EXIT_ON_CLOSE (defined in WindowConstants): Exit the application using the System exit method. Use this only in applications. The value is set to HIDE_ON_CLOSE by default. Changes to the value of this property cause the firing of a property change event, with property name \"defaultCloseOperation\". Note: When the last displayable window within the Java virtual machine (VM) is disposed of, the VM may terminate. See AWT Threading Issues for more information.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "preferred",
              "value": true
            },
            {
              "name": "enumerationValues",
              "value": [
                "WindowConstants.DO_NOTHING_ON_CLOSE",
                "WindowConstants.HIDE_ON_CLOSE",
                "WindowConstants.DISPOSE_ON_CLOSE",
                "WindowConstants.EXIT_ON_CLOSE"
              ]
            },
            {
              "name": "escription",
              "value": "The frame\u0027s default close operation."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Window.html#addWindowListener(java.awt.event.WindowListener)\"\u003e\u003ccode\u003eWindow.addWindowListener(java.awt.event.WindowListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#getDefaultCloseOperation()\"\u003e\u003ccode\u003egetDefaultCloseOperation()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/WindowConstants.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eWindowConstants\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Runtime.html#exit(int)\"\u003e\u003ccode\u003eRuntime.exit(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eoperation\u003c/code\u003e - the operation which should be performed when the user closes the frame"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if defaultCloseOperation value isn\u0027t one of the above valid values",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eEXIT_ON_CLOSE\u003c/code\u003e has been specified and the \n\u003ccode\u003eSecurityManager\u003c/code\u003e will not allow the caller to invoke \n\u003ccode\u003eSystem.exit\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDefaultCloseOperation",
      "comment": "Returns the operation that occurs when the user initiates a \"close\" on this frame.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#setDefaultCloseOperation(int)\"\u003e\u003ccode\u003esetDefaultCloseOperation(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an integer indicating the window-close operation"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setTransferHandler",
      "comment": "Sets the transferHandler property, which is a mechanism to support transfer of data into this component. Use null if the component does not support data transfer operations. If the system property suppressSwingDropSupport is false (the default) and the current drop target on this component is either null or not a user-set drop target, this method will change the drop target as follows: If newHandler is null it will clear the drop target. If not null it will install a new DropTarget. Note: When used with JFrame, TransferHandler only provides data import capability, as the data export related methods are currently typed to JComponent. Please see How to Use Drag and Drop and Data Transfer, a section in The Java Tutorial, for more information.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "hidden",
              "value": true
            },
            {
              "name": "escription",
              "value": "Mechanism for transfer of data into the component"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/TransferHandler.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eTransferHandler\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#getTransferHandler()\"\u003e\u003ccode\u003egetTransferHandler()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#setDropTarget(java.awt.dnd.DropTarget)\"\u003e\u003ccode\u003eComponent.setDropTarget(java.awt.dnd.DropTarget)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewHandler\u003c/code\u003e - the new \n\u003ccode\u003eTransferHandler\u003c/code\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.TransferHandler",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTransferHandler",
      "comment": "Gets the transferHandler property.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/TransferHandler.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eTransferHandler\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#setTransferHandler(javax.swing.TransferHandler)\"\u003e\u003ccode\u003esetTransferHandler(javax.swing.TransferHandler)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the value of the \n\u003ccode\u003etransferHandler\u003c/code\u003e property"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "update",
      "comment": "Just calls paint(g). This method was overridden to prevent an unnecessary call to clear the background.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#update(java.awt.Graphics)\"\u003e\u003ccode\u003eComponent.update(Graphics)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#update(java.awt.Graphics)\"\u003eupdate\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eg\u003c/code\u003e - the Graphics context in which to paint"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setJMenuBar",
      "comment": "Sets the menubar for this frame.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            },
            {
              "name": "hidden",
              "value": true
            },
            {
              "name": "escription",
              "value": "The menubar for accessing pulldown menus from this frame."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#getJMenuBar()\"\u003e\u003ccode\u003egetJMenuBar()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003emenubar\u003c/code\u003e - the menubar being placed in the frame"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JMenuBar",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getJMenuBar",
      "comment": "Returns the menubar set on this frame.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#setJMenuBar(javax.swing.JMenuBar)\"\u003e\u003ccode\u003esetJMenuBar(javax.swing.JMenuBar)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the menubar for this frame"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "isRootPaneCheckingEnabled",
      "comment": "Returns whether calls to add and setLayout are forwarded to the contentPane.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#addImpl(java.awt.Component,java.lang.Object,int)\"\u003e\u003ccode\u003eaddImpl(java.awt.Component, java.lang.Object, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#setLayout(java.awt.LayoutManager)\"\u003e\u003ccode\u003esetLayout(java.awt.LayoutManager)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#setRootPaneCheckingEnabled(boolean)\"\u003e\u003ccode\u003esetRootPaneCheckingEnabled(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eRootPaneContainer\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "true if \n\u003ccode\u003eadd\u003c/code\u003e and \n\u003ccode\u003esetLayout\u003c/code\u003e are forwarded; false otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "setRootPaneCheckingEnabled",
      "comment": "Sets whether calls to add and setLayout are forwarded to the contentPane.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "hidden",
              "value": true
            },
            {
              "name": "escription",
              "value": "Whether the add and setLayout methods are forwarded"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#addImpl(java.awt.Component,java.lang.Object,int)\"\u003e\u003ccode\u003eaddImpl(java.awt.Component, java.lang.Object, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#setLayout(java.awt.LayoutManager)\"\u003e\u003ccode\u003esetLayout(java.awt.LayoutManager)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#isRootPaneCheckingEnabled()\"\u003e\u003ccode\u003eisRootPaneCheckingEnabled()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eRootPaneContainer\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eenabled\u003c/code\u003e - true if \n\u003ccode\u003eadd\u003c/code\u003e and \n\u003ccode\u003esetLayout\u003c/code\u003e are forwarded, false if they should operate directly on the \n\u003ccode\u003eJFrame\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addImpl",
      "comment": "Adds the specified child Component. This method is overridden to conditionally forward calls to the contentPane. By default, children are added to the contentPane instead of the frame, refer to RootPaneContainer for details.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#setRootPaneCheckingEnabled(boolean)\"\u003e\u003ccode\u003esetRootPaneCheckingEnabled(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eRootPaneContainer\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#addImpl(java.awt.Component,java.lang.Object,int)\"\u003eaddImpl\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomp\u003c/code\u003e - the component to be enhanced",
          "\u003ccode\u003econstraints\u003c/code\u003e - the constraints to be respected",
          "\u003ccode\u003eindex\u003c/code\u003e - the index"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eindex\u003c/code\u003e is invalid",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if adding the container\u0027s parent to itself",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if adding a window to a container"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the specified component from the container. If comp is not the rootPane, this will forward the call to the contentPane. This will do nothing if comp is not a child of the JFrame or contentPane.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#add(java.awt.Component)\"\u003e\u003ccode\u003eContainer.add(java.awt.Component)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eRootPaneContainer\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#remove(java.awt.Component)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomp\u003c/code\u003e - the component to be removed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ecomp\u003c/code\u003e is null"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLayout",
      "comment": "Sets the LayoutManager. Overridden to conditionally forward the call to the contentPane. Refer to RootPaneContainer for more information.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#setRootPaneCheckingEnabled(boolean)\"\u003e\u003ccode\u003esetRootPaneCheckingEnabled(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eRootPaneContainer\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#setLayout(java.awt.LayoutManager)\"\u003esetLayout\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003emanager\u003c/code\u003e - the \n\u003ccode\u003eLayoutManager\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JRootPane",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRootPane",
      "comment": "Returns the rootPane object for this frame.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            },
            {
              "name": "hidden",
              "value": true
            },
            {
              "name": "escription",
              "value": "the RootPane object for this frame."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#setRootPane(javax.swing.JRootPane)\"\u003e\u003ccode\u003esetRootPane(javax.swing.JRootPane)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html#getRootPane()\"\u003e\u003ccode\u003eRootPaneContainer.getRootPane()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html#getRootPane()\"\u003egetRootPane\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003eRootPaneContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003erootPane\u003c/code\u003e property"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "setRootPane",
      "comment": "Sets the rootPane property. This method is called by the constructor.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#getRootPane()\"\u003e\u003ccode\u003egetRootPane()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eroot\u003c/code\u003e - the \n\u003ccode\u003erootPane\u003c/code\u003e object for this frame"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Container",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getContentPane",
      "comment": "Returns the contentPane object for this frame.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#setContentPane(java.awt.Container)\"\u003e\u003ccode\u003esetContentPane(java.awt.Container)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html#getContentPane()\"\u003e\u003ccode\u003eRootPaneContainer.getContentPane()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html#getContentPane()\"\u003egetContentPane\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003eRootPaneContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003econtentPane\u003c/code\u003e property"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setContentPane",
      "comment": "Sets the contentPane property. This method is called by the constructor. Swing\u0027s painting architecture requires an opaque JComponent in the containment hierarchy. This is typically provided by the content pane. If you replace the content pane it is recommended you replace it with an opaque JComponent.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            },
            {
              "name": "hidden",
              "value": true
            },
            {
              "name": "escription",
              "value": "The client area of the frame where child components are normally inserted."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#getContentPane()\"\u003e\u003ccode\u003egetContentPane()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html#setContentPane(java.awt.Container)\"\u003e\u003ccode\u003eRootPaneContainer.setContentPane(java.awt.Container)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JRootPane.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJRootPane\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html#setContentPane(java.awt.Container)\"\u003esetContentPane\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003eRootPaneContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003econtentPane\u003c/code\u003e - the \n\u003ccode\u003econtentPane\u003c/code\u003e object for this frame"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/IllegalComponentStateException.html\" title\u003d\"class in java.awt\"\u003eIllegalComponentStateException\u003c/a\u003e\u003c/code\u003e - (a runtime exception) if the content pane parameter is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JLayeredPane",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLayeredPane",
      "comment": "Returns the layeredPane object for this frame.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#setLayeredPane(javax.swing.JLayeredPane)\"\u003e\u003ccode\u003esetLayeredPane(javax.swing.JLayeredPane)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html#getLayeredPane()\"\u003e\u003ccode\u003eRootPaneContainer.getLayeredPane()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html#getLayeredPane()\"\u003egetLayeredPane\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003eRootPaneContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003elayeredPane\u003c/code\u003e property"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLayeredPane",
      "comment": "Sets the layeredPane property. This method is called by the constructor.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            },
            {
              "name": "hidden",
              "value": true
            },
            {
              "name": "escription",
              "value": "The pane that holds the various frame layers."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#getLayeredPane()\"\u003e\u003ccode\u003egetLayeredPane()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html#setLayeredPane(javax.swing.JLayeredPane)\"\u003e\u003ccode\u003eRootPaneContainer.setLayeredPane(javax.swing.JLayeredPane)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html#setLayeredPane(javax.swing.JLayeredPane)\"\u003esetLayeredPane\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003eRootPaneContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003elayeredPane\u003c/code\u003e - the \n\u003ccode\u003elayeredPane\u003c/code\u003e object for this frame"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/IllegalComponentStateException.html\" title\u003d\"class in java.awt\"\u003eIllegalComponentStateException\u003c/a\u003e\u003c/code\u003e - (a runtime exception) if the layered pane parameter is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getGlassPane",
      "comment": "Returns the glassPane object for this frame.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#setGlassPane(java.awt.Component)\"\u003e\u003ccode\u003esetGlassPane(java.awt.Component)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html#getGlassPane()\"\u003e\u003ccode\u003eRootPaneContainer.getGlassPane()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html#getGlassPane()\"\u003egetGlassPane\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003eRootPaneContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eglassPane\u003c/code\u003e property"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setGlassPane",
      "comment": "Sets the glassPane property. This method is called by the constructor.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            },
            {
              "name": "hidden",
              "value": true
            },
            {
              "name": "escription",
              "value": "A transparent pane used for menu rendering."
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#getGlassPane()\"\u003e\u003ccode\u003egetGlassPane()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html#setGlassPane(java.awt.Component)\"\u003e\u003ccode\u003eRootPaneContainer.setGlassPane(java.awt.Component)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html#setGlassPane(java.awt.Component)\"\u003esetGlassPane\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003eRootPaneContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eglassPane\u003c/code\u003e - the \n\u003ccode\u003eglassPane\u003c/code\u003e object for this frame"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Graphics",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getGraphics",
      "comment": "Creates a graphics context for this component. This method will return null if this component is currently not displayable.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#paint(java.awt.Graphics)\"\u003e\u003ccode\u003eComponent.paint(java.awt.Graphics)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getGraphics()\"\u003egetGraphics\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html\" title\u003d\"class in java.awt\"\u003eComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a graphics context for this component, or \n\u003ccode\u003enull\u003c/code\u003e if it has none"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "repaint",
      "comment": "Repaints the specified rectangle of this component within time milliseconds. Refer to RepaintManager for details on how the repaint is handled.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RepaintManager.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eRepaintManager\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#repaint(long,int,int,int,int)\"\u003erepaint\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html\" title\u003d\"class in java.awt\"\u003eComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etime\u003c/code\u003e - maximum time in milliseconds before update",
          "\u003ccode\u003ex\u003c/code\u003e - the \n\u003ci\u003ex\u003c/i\u003e coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - the \n\u003ci\u003ey\u003c/i\u003e coordinate",
          "\u003ccode\u003ewidth\u003c/code\u003e - the width",
          "\u003ccode\u003eheight\u003c/code\u003e - the height"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "setDefaultLookAndFeelDecorated",
      "comment": "Provides a hint as to whether or not newly created JFrames should have their Window decorations (such as borders, widgets to close the window, title...) provided by the current look and feel. If defaultLookAndFeelDecorated is true, the current LookAndFeel supports providing window decorations, and the current window manager supports undecorated windows, then newly created JFrames will have their Window decorations provided by the current LookAndFeel. Otherwise, newly created JFrames will have their Window decorations provided by the current window manager. You can get the same effect on a single JFrame by doing the following:     JFrame frame \u003d new JFrame();\n    frame.setUndecorated(true);\n    frame.getRootPane().setWindowDecorationStyle(JRootPane.FRAME);",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html#getSupportsWindowDecorations()\"\u003e\u003ccode\u003eLookAndFeel.getSupportsWindowDecorations()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edefaultLookAndFeelDecorated\u003c/code\u003e - A hint as to whether or not current look and feel should provide window decorations"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isDefaultLookAndFeelDecorated",
      "comment": "Returns true if newly created JFrames should have their Window decorations provided by the current look and feel. This is only a hint, as certain look and feels may not support this feature.",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if look and feel should provide Window decorations."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "paramString",
      "comment": "Returns a string representation of this JFrame. This method is intended to be used only for debugging purposes, and the content and format of the returned string may vary between implementations. The returned string may be empty but may not be null.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Frame.html#paramString()\"\u003eparamString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Frame.html\" title\u003d\"class in java.awt\"\u003eFrame\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this \n\u003ccode\u003eJFrame\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.accessibility.AccessibleContext",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAccessibleContext",
      "comment": "Gets the AccessibleContext associated with this JFrame. For JFrames, the AccessibleContext takes the form of an AccessibleJFrame. A new AccessibleJFrame instance is created if necessary.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Frame.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Frame.html\" title\u003d\"class in java.awt\"\u003eFrame\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html\" title\u003d\"interface in javax.accessibility\"\u003eAccessible\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an AccessibleJFrame that serves as the AccessibleContext of this JFrame"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new frame that is initially invisible. This constructor sets the component\u0027s locale property to the value returned by JComponent.getDefaultLocale.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#setSize(int,int)\"\u003e\u003ccode\u003eComponent.setSize(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#setVisible(boolean)\"\u003e\u003ccode\u003eComponent.setVisible(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getDefaultLocale()\"\u003e\u003ccode\u003eJComponent.getDefaultLocale()\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if GraphicsEnvironment.isHeadless() returns true."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.GraphicsConfiguration",
            "type": "Class"
          },
          "name": "gc",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a Frame in the specified GraphicsConfiguration of a screen device and a blank title. This constructor sets the component\u0027s locale property to the value returned by JComponent.getDefaultLocale.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getDefaultLocale()\"\u003e\u003ccode\u003eJComponent.getDefaultLocale()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003egc\u003c/code\u003e - the \n\u003ccode\u003eGraphicsConfiguration\u003c/code\u003e that is used to construct the new \n\u003ccode\u003eFrame\u003c/code\u003e; if \n\u003ccode\u003egc\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, the system default \n\u003ccode\u003eGraphicsConfiguration\u003c/code\u003e is assumed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003egc\u003c/code\u003e is not from a screen device. This exception is always thrown when GraphicsEnvironment.isHeadless() returns true."
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new, initially invisible Frame with the specified title. This constructor sets the component\u0027s locale property to the value returned by JComponent.getDefaultLocale.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#setSize(int,int)\"\u003e\u003ccode\u003eComponent.setSize(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#setVisible(boolean)\"\u003e\u003ccode\u003eComponent.setVisible(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getDefaultLocale()\"\u003e\u003ccode\u003eJComponent.getDefaultLocale()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etitle\u003c/code\u003e - the title for the frame"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if GraphicsEnvironment.isHeadless() returns true."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "title",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.GraphicsConfiguration",
            "type": "Class"
          },
          "name": "gc",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a JFrame with the specified title and the specified GraphicsConfiguration of a screen device. This constructor sets the component\u0027s locale property to the value returned by JComponent.getDefaultLocale.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getDefaultLocale()\"\u003e\u003ccode\u003eJComponent.getDefaultLocale()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etitle\u003c/code\u003e - the title to be displayed in the frame\u0027s border. A \n\u003ccode\u003enull\u003c/code\u003e value is treated as an empty string, \"\".",
          "\u003ccode\u003egc\u003c/code\u003e - the \n\u003ccode\u003eGraphicsConfiguration\u003c/code\u003e that is used to construct the new \n\u003ccode\u003eJFrame\u003c/code\u003e with; if \n\u003ccode\u003egc\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, the system default \n\u003ccode\u003eGraphicsConfiguration\u003c/code\u003e is assumed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003egc\u003c/code\u003e is not from a screen device. This exception is always thrown when GraphicsEnvironment.isHeadless() returns true."
        ],
        "since": [
          "1.3"
        ]
      }
    }
  ],
  "innerClasses": [
    "javax.swing.JFrame$AccessibleJFrame"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.JFrame",
  "comment": "An extended version of \n\u003ccode\u003ejava.awt.Frame\u003c/code\u003e that adds support for the JFC/Swing component architecture. You can find task-oriented documentation about using \n\u003ccode\u003eJFrame\u003c/code\u003e in \n\u003cem\u003eThe Java Tutorial\u003c/em\u003e, in the section \n\u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/components/frame.html\"\u003eHow to Make Frames\u003c/a\u003e. \n\u003cp\u003e The \u003ccode\u003eJFrame\u003c/code\u003e class is slightly incompatible with \u003ccode\u003eFrame\u003c/code\u003e. Like all other JFC/Swing top-level containers, a \u003ccode\u003eJFrame\u003c/code\u003e contains a \u003ccode\u003eJRootPane\u003c/code\u003e as its only child. The \u003cb\u003econtent pane\u003c/b\u003e provided by the root pane should, as a rule, contain all the non-menu components displayed by the \u003ccode\u003eJFrame\u003c/code\u003e. This is different from the AWT \u003ccode\u003eFrame\u003c/code\u003e case. As a convenience, the \u003ccode\u003eadd\u003c/code\u003e, \u003ccode\u003eremove\u003c/code\u003e, and \u003ccode\u003esetLayout\u003c/code\u003e methods of this class are overridden, so that they delegate calls to the corresponding methods of the \u003ccode\u003eContentPane\u003c/code\u003e. For example, you can add a child component to a frame as follows: \u003c/p\u003e\n\u003cpre\u003e       frame.add(child);\n \u003c/pre\u003e And the child will be added to the contentPane. The content pane will always be non-null. Attempting to set it to null will cause the JFrame to throw an exception. The default content pane will have a BorderLayout manager set on it. Refer to \n\u003ca href\u003d\"RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eRootPaneContainer\u003c/code\u003e\u003c/a\u003e for details on adding, removing and setting the \n\u003ccode\u003eLayoutManager\u003c/code\u003e of a \n\u003ccode\u003eJFrame\u003c/code\u003e. \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e Unlike a \u003ccode\u003eFrame\u003c/code\u003e, a \u003ccode\u003eJFrame\u003c/code\u003e has some notion of how to respond when the user attempts to close the window. The default behavior is to simply hide the JFrame when the user closes the window. To change the default behavior, you invoke the method \u003ca href\u003d\"#setDefaultCloseOperation(int)\"\u003e\u003ccode\u003esetDefaultCloseOperation(int)\u003c/code\u003e\u003c/a\u003e. To make the \u003ccode\u003eJFrame\u003c/code\u003e behave the same as a \u003ccode\u003eFrame\u003c/code\u003e instance, use \u003ccode\u003esetDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE)\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003e For more information on content panes and other features that root panes provide, see \u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/components/toplevel.html\"\u003eUsing Top-Level Containers\u003c/a\u003e in \u003cem\u003eThe Java Tutorial\u003c/em\u003e. \u003c/p\u003e\n\u003cp\u003e In a multi-screen environment, you can create a \u003ccode\u003eJFrame\u003c/code\u003e on a different screen device. See \u003ca href\u003d\"../../java/awt/Frame.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eFrame\u003c/code\u003e\u003c/a\u003e for more information. \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Swing is not thread safe. For more information see \u003ca href\u003d\"package-summary.html#threading\"\u003eSwing\u0027s Threading Policy\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JRootPane.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJRootPane\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JFrame.html#setDefaultCloseOperation(int)\"\u003e\u003ccode\u003esetDefaultCloseOperation(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowListener.html#windowClosing(java.awt.event.WindowEvent)\"\u003e\u003ccode\u003eWindowListener.windowClosing(java.awt.event.WindowEvent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RootPaneContainer.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eRootPaneContainer\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}