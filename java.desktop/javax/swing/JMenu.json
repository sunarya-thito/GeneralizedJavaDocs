{
  "packageName": "javax.swing",
  "simpleName": "JMenu",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.JMenuItem",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.swing.JMenu$WinListener",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "popupListener",
      "comment": "The window-closing listener for the popup.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenu.WinListener.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJMenu.WinListener\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "updateUI",
      "comment": "Resets the UI property with a value from the current look and feel.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#updateUI()\"\u003e\u003ccode\u003eJComponent.updateUI()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html#updateUI()\"\u003eupdateUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html\" title\u003d\"class in javax.swing\"\u003eJMenuItem\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUIClassID",
      "comment": "Returns the name of the L\u0026F class that renders this component.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getUIClassID()\"\u003e\u003ccode\u003eJComponent.getUIClassID()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#getUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eUIDefaults.getUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html#getUIClassID()\"\u003egetUIClassID\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html\" title\u003d\"class in javax.swing\"\u003eJMenuItem\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the string \"MenuUI\""
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setModel",
      "comment": "Sets the data model for the \"menu button\" -- the label that the user clicks to open or close the menu.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/AbstractButton.html#getModel()\"\u003e\u003ccode\u003eAbstractButton.getModel()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/AbstractButton.html#setModel(javax.swing.ButtonModel)\"\u003esetModel\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/AbstractButton.html\" title\u003d\"class in javax.swing\"\u003eAbstractButton\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enewModel\u003c/code\u003e - the \n\u003ccode\u003eButtonModel\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isSelected",
      "comment": "Returns true if the menu is currently selected (highlighted).",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/AbstractButton.html#isSelected()\"\u003eisSelected\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/AbstractButton.html\" title\u003d\"class in javax.swing\"\u003eAbstractButton\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if the menu is selected, else false"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSelected",
      "comment": "Sets the selection status of the menu.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "expert",
              "value": true
            },
            {
              "name": "hidden",
              "value": true
            },
            {
              "name": "escription",
              "value": "When the menu is selected, its popup child is shown."
            }
          ]
        }
      ],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/AbstractButton.html#setSelected(boolean)\"\u003esetSelected\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/AbstractButton.html\" title\u003d\"class in javax.swing\"\u003eAbstractButton\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - true to select (highlight) the menu; false to de-select the menu"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isPopupMenuVisible",
      "comment": "Returns true if the menu\u0027s popup window is visible.",
      "annotations": [],
      "tagMap": {
        "return": [
          "true if the menu is visible, else false"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPopupMenuVisible",
      "comment": "Sets the visibility of the menu\u0027s popup. If the menu is not enabled, this method will have no effect.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            },
            {
              "name": "expert",
              "value": true
            },
            {
              "name": "hidden",
              "value": true
            },
            {
              "name": "escription",
              "value": "The popup menu\u0027s visibility"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - a boolean value -- true to make the menu visible, false to hide it"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Point",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getPopupMenuOrigin",
      "comment": "Computes the origin for the JMenu\u0027s popup menu. This method uses Look and Feel properties named Menu.menuPopupOffsetX, Menu.menuPopupOffsetY, Menu.submenuPopupOffsetX, and Menu.submenuPopupOffsetY to adjust the exact location of popup.",
      "annotations": [],
      "tagMap": {
        "return": [
          "a \n\u003ccode\u003ePoint\u003c/code\u003e in the coordinate space of the menu which should be used as the origin of the \n\u003ccode\u003eJMenu\u003c/code\u003e\u0027s popup menu"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDelay",
      "comment": "Returns the suggested delay, in milliseconds, before submenus are popped up or down. Each look and feel (L\u0026F) may determine its own policy for observing the delay property. In most cases, the delay is not observed for top level menus or while dragging. The default for delay is 0. This method is a property of the look and feel code and is used to manage the idiosyncrasies of the various UI implementations.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003edelay\u003c/code\u003e property"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDelay",
      "comment": "Sets the suggested delay before the menu\u0027s PopupMenu is popped up or down. Each look and feel (L\u0026F) may determine it\u0027s own policy for observing the delay property. In most cases, the delay is not observed for top level menus or while dragging. This method is a property of the look and feel code and is used to manage the idiosyncrasies of the various UI implementations.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            },
            {
              "name": "expert",
              "value": true
            },
            {
              "name": "escription",
              "value": "The delay between menu selection and making the popup menu visible"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ed\u003c/code\u003e - the number of milliseconds to delay"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ed\u003c/code\u003e is less than 0"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMenuLocation",
      "comment": "Sets the location of the popup component.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the x coordinate of the popup\u0027s new position",
          "\u003ccode\u003ey\u003c/code\u003e - the y coordinate of the popup\u0027s new position"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JMenuItem",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Appends a menu item to the end of this menu. Returns the menu item added.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emenuItem\u003c/code\u003e - the \n\u003ccode\u003eJMenuitem\u003c/code\u003e to be added"
        ],
        "return": [
          "the \n\u003ccode\u003eJMenuItem\u003c/code\u003e added"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Appends a component to the end of this menu. Returns the component added.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#addImpl(java.awt.Component,java.lang.Object,int)\"\u003e\u003ccode\u003eContainer.addImpl(java.awt.Component, java.lang.Object, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#invalidate()\"\u003e\u003ccode\u003eContainer.invalidate()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#validate()\"\u003e\u003ccode\u003eContainer.validate()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#revalidate()\"\u003e\u003ccode\u003eJComponent.revalidate()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#add(java.awt.Component)\"\u003eadd\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the \n\u003ccode\u003eComponent\u003c/code\u003e to add"
        ],
        "return": [
          "the \n\u003ccode\u003eComponent\u003c/code\u003e added"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds the specified component to this container at the given position. If index equals -1, the component will be appended to the end.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenu.html#remove(javax.swing.JMenuItem)\"\u003e\u003ccode\u003eremove(javax.swing.JMenuItem)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#add(java.awt.Component,int)\"\u003e\u003ccode\u003eContainer.add(Component, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#add(java.awt.Component,int)\"\u003eadd\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the \n\u003ccode\u003eComponent\u003c/code\u003e to add",
          "\u003ccode\u003eindex\u003c/code\u003e - the position at which to insert the component"
        ],
        "return": [
          "the \n\u003ccode\u003eComponent\u003c/code\u003e added"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JMenuItem",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Creates a new menu item with the specified text and appends it to the end of this menu.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the string for the menu item to be added"
        ],
        "return": [
          "the new \n\u003ccode\u003eJMenuItem\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JMenuItem",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Creates a new menu item attached to the specified Action object and appends it to the end of this menu.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Action.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eAction\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ea\u003c/code\u003e - the \n\u003ccode\u003eAction\u003c/code\u003e for the menu item to be added"
        ],
        "return": [
          "the new \n\u003ccode\u003eJMenuItem\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JMenuItem",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createActionComponent",
      "comment": "Factory method which creates the JMenuItem for Actions added to the JMenu.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Action.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eAction\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ea\u003c/code\u003e - the \n\u003ccode\u003eAction\u003c/code\u003e for the menu item to be added"
        ],
        "return": [
          "the new menu item"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.beans.PropertyChangeListener",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createActionChangeListener",
      "comment": "Returns a properly configured PropertyChangeListener which updates the control as changes to the Action occur.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - a menu item for which to create a \n\u003ccode\u003ePropertyChangeListener\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003ePropertyChangeListener\u003c/code\u003e for \n\u003ccode\u003eb\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addSeparator",
      "comment": "Appends a new separator to the end of the menu.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "insert",
      "comment": "Inserts a new menu item with the specified text at a given position.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the text for the menu item to add",
          "\u003ccode\u003epos\u003c/code\u003e - an integer specifying the position at which to add the new menu item"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - when the value of \n\u003ccode\u003epos\u003c/code\u003e \u0026lt; 0"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JMenuItem",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "insert",
      "comment": "Inserts the specified JMenuitem at a given position.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emi\u003c/code\u003e - the \n\u003ccode\u003eJMenuitem\u003c/code\u003e to add",
          "\u003ccode\u003epos\u003c/code\u003e - an integer specifying the position at which to add the new \n\u003ccode\u003eJMenuitem\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the value of \n\u003ccode\u003epos\u003c/code\u003e \u0026lt; 0"
        ],
        "return": [
          "the new menu item"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JMenuItem",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "insert",
      "comment": "Inserts a new menu item attached to the specified Action object at a given position.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ea\u003c/code\u003e - the \n\u003ccode\u003eAction\u003c/code\u003e object for the menu item to add",
          "\u003ccode\u003epos\u003c/code\u003e - an integer specifying the position at which to add the new menu item"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the value of \n\u003ccode\u003epos\u003c/code\u003e \u0026lt; 0"
        ],
        "return": [
          "the new menu item"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "insertSeparator",
      "comment": "Inserts a separator at the specified position.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - an integer specifying the position at which to insert the menu separator"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the value of \n\u003ccode\u003eindex\u003c/code\u003e \u0026lt; 0"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JMenuItem",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getItem",
      "comment": "Returns the JMenuItem at the specified position. If the component at pos is not a menu item, null is returned. This method is included for AWT compatibility.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - an integer specifying the position"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the value of \n\u003ccode\u003epos\u003c/code\u003e \u0026lt; 0"
        ],
        "return": [
          "the menu item at the specified position; or \n\u003ccode\u003enull\u003c/code\u003e if the item as the specified position is not a menu item"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getItemCount",
      "comment": "Returns the number of items on the menu, including separators. This method is included for AWT compatibility.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenu.html#getMenuComponentCount()\"\u003e\u003ccode\u003egetMenuComponentCount()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an integer equal to the number of items on the menu"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isTearOff",
      "comment": "Returns true if the menu can be torn off. This method is not yet implemented.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Error.html\" title\u003d\"class in java.lang\"\u003eError\u003c/a\u003e\u003c/code\u003e - if invoked -- this method is not yet implemented"
        ],
        "return": [
          "true if the menu can be torn off, else false"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the specified menu item from this menu. If there is no popup menu, this method will have no effect.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eitem\u003c/code\u003e - the \n\u003ccode\u003eJMenuItem\u003c/code\u003e to be removed from the menu"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the menu item at the specified index from this menu.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#add(java.awt.Component)\"\u003e\u003ccode\u003eContainer.add(java.awt.Component)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#invalidate()\"\u003e\u003ccode\u003eContainer.invalidate()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#validate()\"\u003e\u003ccode\u003eContainer.validate()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#getComponentCount()\"\u003e\u003ccode\u003eContainer.getComponentCount()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#remove(int)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position of the item to be removed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the value of \n\u003ccode\u003epos\u003c/code\u003e \u0026lt; 0, or if \n\u003ccode\u003epos\u003c/code\u003e is greater than the number of menu items"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the component c from this menu.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#add(java.awt.Component)\"\u003e\u003ccode\u003eContainer.add(java.awt.Component)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#invalidate()\"\u003e\u003ccode\u003eContainer.invalidate()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#validate()\"\u003e\u003ccode\u003eContainer.validate()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#remove(int)\"\u003e\u003ccode\u003eContainer.remove(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#remove(java.awt.Component)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component to be removed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeAll",
      "comment": "Removes all menu items from this menu.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#add(java.awt.Component)\"\u003e\u003ccode\u003eContainer.add(java.awt.Component)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#remove(int)\"\u003e\u003ccode\u003eContainer.remove(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#invalidate()\"\u003e\u003ccode\u003eContainer.invalidate()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#removeAll()\"\u003eremoveAll\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMenuComponentCount",
      "comment": "Returns the number of components on the menu.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "return": [
          "an integer containing the number of components on the menu"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMenuComponent",
      "comment": "Returns the component at position n.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003en\u003c/code\u003e - the position of the component to be returned"
        ],
        "return": [
          "the component requested, or \n\u003ccode\u003enull\u003c/code\u003e if there is no popup menu"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMenuComponents",
      "comment": "Returns an array of Components of the menu\u0027s subcomponents. Note that this returns all Components in the popup menu, including separators.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "return": [
          "an array of \n\u003ccode\u003eComponent\u003c/code\u003es or an empty array if there is no popup menu"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isTopLevelMenu",
      "comment": "Returns true if the menu is a \u0027top-level menu\u0027, that is, if it is the direct child of a menubar.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "return": [
          "true if the menu is activated from the menu bar; false if the menu is activated from a menu item on another menu"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isMenuComponent",
      "comment": "Returns true if the specified component exists in the submenu hierarchy.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the \n\u003ccode\u003eComponent\u003c/code\u003e to be tested"
        ],
        "return": [
          "true if the \n\u003ccode\u003eComponent\u003c/code\u003e exists, false otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JPopupMenu",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPopupMenu",
      "comment": "Returns the popupmenu associated with this menu. If there is no popupmenu, it will create one.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eJPopupMenu\u003c/code\u003e associated with this menu"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addMenuListener",
      "comment": "Adds a listener for menu events.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to be added"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeMenuListener",
      "comment": "Removes a listener for menu events.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to be removed"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.event.MenuListener",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMenuListeners",
      "comment": "Returns an array of all the MenuListeners added to this JMenu with addMenuListener().",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "return": [
          "all of the \n\u003ccode\u003eMenuListener\u003c/code\u003es added or an empty array if no listeners have been added"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "fireMenuSelected",
      "comment": "Notifies all listeners that have registered interest for notification on this event type. The event instance is created lazily.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/EventListenerList.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eEventListenerList\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Error.html\" title\u003d\"class in java.lang\"\u003eError\u003c/a\u003e\u003c/code\u003e - if there is a \n\u003ccode\u003enull\u003c/code\u003e listener"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "fireMenuDeselected",
      "comment": "Notifies all listeners that have registered interest for notification on this event type. The event instance is created lazily.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/EventListenerList.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eEventListenerList\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Error.html\" title\u003d\"class in java.lang\"\u003eError\u003c/a\u003e\u003c/code\u003e - if there is a \n\u003ccode\u003enull\u003c/code\u003e listener"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "fireMenuCanceled",
      "comment": "Notifies all listeners that have registered interest for notification on this event type. The event instance is created lazily.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/EventListenerList.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eEventListenerList\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Error.html\" title\u003d\"class in java.lang\"\u003eError\u003c/a\u003e\u003c/code\u003e - if there is a \n\u003ccode\u003enull\u003c/code\u003e listener"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JMenu$WinListener",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createWinListener",
      "comment": "Creates a window-closing listener for the popup.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenu.WinListener.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJMenu.WinListener\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ep\u003c/code\u003e - the \n\u003ccode\u003eJPopupMenu\u003c/code\u003e"
        ],
        "return": [
          "the new window-closing listener"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "menuSelectionChanged",
      "comment": "Messaged when the menubar selection changes to activate or deactivate this menu. Overrides JMenuItem.menuSelectionChanged.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/MenuSelectionManager.html#setSelectedPath(javax.swing.MenuElement%5B%5D)\"\u003e\u003ccode\u003eMenuSelectionManager.setSelectedPath(MenuElement[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html#menuSelectionChanged(boolean)\"\u003emenuSelectionChanged\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html\" title\u003d\"class in javax.swing\"\u003eJMenuItem\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/MenuElement.html#menuSelectionChanged(boolean)\"\u003emenuSelectionChanged\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/MenuElement.html\" title\u003d\"interface in javax.swing\"\u003eMenuElement\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eisIncluded\u003c/code\u003e - true if this menu is active, false if it is not"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.MenuElement",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSubElements",
      "comment": "Returns an array of MenuElements containing the submenu for this menu component. If popup menu is null returns an empty array. This method is required to conform to the MenuElement interface. Note that since JSeparators do not conform to the MenuElement interface, this array will only contain JMenuItems.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html#getSubElements()\"\u003egetSubElements\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html\" title\u003d\"class in javax.swing\"\u003eJMenuItem\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/MenuElement.html#getSubElements()\"\u003egetSubElements\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/MenuElement.html\" title\u003d\"interface in javax.swing\"\u003eMenuElement\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an array of \n\u003ccode\u003eMenuElement\u003c/code\u003e objects"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getComponent",
      "comment": "Returns the java.awt.Component used to paint this MenuElement. The returned component is used to convert events and detect if an event is inside a menu component.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html#getComponent()\"\u003egetComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html\" title\u003d\"class in javax.swing\"\u003eJMenuItem\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/MenuElement.html#getComponent()\"\u003egetComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/MenuElement.html\" title\u003d\"interface in javax.swing\"\u003eMenuElement\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eComponent\u003c/code\u003e that paints this menu item"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "applyComponentOrientation",
      "comment": "Sets the ComponentOrientation property of this menu and all components contained within it. This includes all components returned by getMenuComponents.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#setComponentOrientation(java.awt.ComponentOrientation)\"\u003e\u003ccode\u003eComponent.setComponentOrientation(java.awt.ComponentOrientation)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getComponentOrientation()\"\u003e\u003ccode\u003eComponent.getComponentOrientation()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#applyComponentOrientation(java.awt.ComponentOrientation)\"\u003eapplyComponentOrientation\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003eContainer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eo\u003c/code\u003e - the new component orientation of this menu and the components contained within it."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eorientation\u003c/code\u003e is null."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setAccelerator",
      "comment": "setAccelerator is not defined for JMenu. Use setMnemonic instead.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html#setAccelerator(javax.swing.KeyStroke)\"\u003esetAccelerator\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html\" title\u003d\"class in javax.swing\"\u003eJMenuItem\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekeyStroke\u003c/code\u003e - the keystroke combination which will invoke the \n\u003ccode\u003eJMenuItem\u003c/code\u003e\u0027s actionlisteners without navigating the menu hierarchy"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Error.html\" title\u003d\"class in java.lang\"\u003eError\u003c/a\u003e\u003c/code\u003e - if invoked -- this method is not defined for JMenu. Use \n\u003ccode\u003esetMnemonic\u003c/code\u003e instead"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "processKeyEvent",
      "comment": "Processes key stroke events such as mnemonics and accelerators.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eKeyEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyListener.html\" title\u003d\"interface in java.awt.event\"\u003e\u003ccode\u003eKeyListener\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/KeyboardFocusManager.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eKeyboardFocusManager\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/DefaultKeyboardFocusManager.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eDefaultKeyboardFocusManager\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#processEvent(java.awt.AWTEvent)\"\u003e\u003ccode\u003eComponent.processEvent(java.awt.AWTEvent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#dispatchEvent(java.awt.AWTEvent)\"\u003e\u003ccode\u003eComponent.dispatchEvent(java.awt.AWTEvent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#addKeyListener(java.awt.event.KeyListener)\"\u003e\u003ccode\u003eComponent.addKeyListener(java.awt.event.KeyListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#enableEvents(long)\"\u003e\u003ccode\u003eComponent.enableEvents(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#isShowing()\"\u003e\u003ccode\u003eComponent.isShowing()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#processKeyEvent(java.awt.event.KeyEvent)\"\u003eprocessKeyEvent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html\" title\u003d\"class in javax.swing\"\u003eJComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eevt\u003c/code\u003e - the key event to be processed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "doClick",
      "comment": "Programmatically performs a \"click\". This overrides the method AbstractButton.doClick in order to make the menu pop up.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/AbstractButton.html#doClick(int)\"\u003edoClick\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/AbstractButton.html\" title\u003d\"class in javax.swing\"\u003eAbstractButton\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epressTime\u003c/code\u003e - indicates the number of milliseconds the button was pressed for"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "paramString",
      "comment": "Returns a string representation of this JMenu. This method is intended to be used only for debugging purposes, and the content and format of the returned string may vary between implementations. The returned string may be empty but may not be null.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html#paramString()\"\u003eparamString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html\" title\u003d\"class in javax.swing\"\u003eJMenuItem\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this JMenu."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.accessibility.AccessibleContext",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAccessibleContext",
      "comment": "Gets the AccessibleContext associated with this JMenu. For JMenus, the AccessibleContext takes the form of an AccessibleJMenu. A new AccessibleJMenu instance is created if necessary.",
      "annotations": [
        {
          "type": {
            "name": "BeanProperty",
            "type": "Class"
          },
          "values": [
            {
              "name": "bound",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html\" title\u003d\"class in javax.swing\"\u003eJMenuItem\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html\" title\u003d\"interface in javax.accessibility\"\u003eAccessible\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an AccessibleJMenu that serves as the AccessibleContext of this JMenu"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new JMenu with no text.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "s",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new JMenu with the supplied string as its text.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the text for the menu label"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Action",
            "type": "Class"
          },
          "name": "a",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a menu whose properties are taken from the Action supplied.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ea\u003c/code\u003e - an \n\u003ccode\u003eAction\u003c/code\u003e"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "s",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "b",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new JMenu with the supplied string as its text and specified as a tear-off menu or not.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the text for the menu label",
          "\u003ccode\u003eb\u003c/code\u003e - can the menu be torn off (not yet implemented)"
        ]
      }
    }
  ],
  "innerClasses": [
    "javax.swing.JMenu$AccessibleJMenu",
    "javax.swing.JMenu$WinListener"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.JMenu",
  "comment": "An implementation of a menu -- a popup window containing \n\u003ccode\u003eJMenuItem\u003c/code\u003es that is displayed when the user selects an item on the \n\u003ccode\u003eJMenuBar\u003c/code\u003e. In addition to \n\u003ccode\u003eJMenuItem\u003c/code\u003es, a \n\u003ccode\u003eJMenu\u003c/code\u003e can also contain \n\u003ccode\u003eJSeparator\u003c/code\u003es. \n\u003cp\u003e In essence, a menu is a button with an associated \u003ccode\u003eJPopupMenu\u003c/code\u003e. When the \"button\" is pressed, the \u003ccode\u003eJPopupMenu\u003c/code\u003e appears. If the \"button\" is on the \u003ccode\u003eJMenuBar\u003c/code\u003e, the menu is a top-level window. If the \"button\" is another menu item, then the \u003ccode\u003eJPopupMenu\u003c/code\u003e is \"pull-right\" menu. \u003c/p\u003e\n\u003cp\u003e Menus can be configured, and to some degree controlled, by \u003ccode\u003e\u003ca href\u003d\"Action.html\"\u003eAction\u003c/a\u003e\u003c/code\u003es. Using an \u003ccode\u003eAction\u003c/code\u003e with a menu has many benefits beyond directly configuring a menu. Refer to \u003ca href\u003d\"Action.html#buttonActions\"\u003e Swing Components Supporting \u003ccode\u003eAction\u003c/code\u003e\u003c/a\u003e for more details, and you can find more information in \u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/misc/action.html\"\u003eHow to Use Actions\u003c/a\u003e, a section in \u003cem\u003eThe Java Tutorial\u003c/em\u003e. \u003c/p\u003e\n\u003cp\u003e For information and examples of using menus see \u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html\"\u003eHow to Use Menus\u003c/a\u003e, a section in \u003cem\u003eThe Java Tutorial.\u003c/em\u003e \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Swing is not thread safe. For more information see \u003ca href\u003d\"package-summary.html#threading\"\u003eSwing\u0027s Threading Policy\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuItem.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJMenuItem\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JSeparator.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJSeparator\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JMenuBar.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJMenuBar\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JPopupMenu.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJPopupMenu\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}