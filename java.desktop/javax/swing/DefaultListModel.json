{
  "packageName": "javax.swing",
  "simpleName": "DefaultListModel",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.AbstractListModel",
    "parameters": [
      {
        "name": "E",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSize",
      "comment": "Returns the number of components in this list. This method is identical to size, which implements the List interface defined in the 1.2 Collections framework. This method exists in conjunction with setSize so that size is identifiable as a JavaBean property.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/DefaultListModel.html#size()\"\u003e\u003ccode\u003esize()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the number of components in this list"
        ]
      }
    },
    {
      "returnType": {
        "owner": "javax.swing.DefaultListModel",
        "name": "E",
        "type": "Variable"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getElementAt",
      "comment": "Returns the component at the specified index. Note: Although this method is not deprecated, the preferred method to use is get(int), which implements the List interface defined in the 1.2 Collections framework.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/DefaultListModel.html#get(int)\"\u003e\u003ccode\u003eget(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - an index into this list"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eindex\u003c/code\u003e is negative or greater than the current size of this list"
        ],
        "return": [
          "the component at the specified index"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "anArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "copyInto",
      "comment": "Copies the components of this list into the specified array. The array must be big enough to hold all the objects in this list, else an IndexOutOfBoundsException is thrown.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#copyInto(java.lang.Object%5B%5D)\"\u003e\u003ccode\u003eVector.copyInto(Object[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eanArray\u003c/code\u003e - the array into which the components get copied"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "trimToSize",
      "comment": "Trims the capacity of this list to be the list\u0027s current size.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#trimToSize()\"\u003e\u003ccode\u003eVector.trimToSize()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "minCapacity"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "ensureCapacity",
      "comment": "Increases the capacity of this list, if necessary, to ensure that it can hold at least the number of components specified by the minimum capacity argument.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#ensureCapacity(int)\"\u003e\u003ccode\u003eVector.ensureCapacity(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eminCapacity\u003c/code\u003e - the desired minimum capacity"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "newSize"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSize",
      "comment": "Sets the size of this list.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#setSize(int)\"\u003e\u003ccode\u003eVector.setSize(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewSize\u003c/code\u003e - the new size of this list"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "capacity",
      "comment": "Returns the current capacity of this list.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#capacity()\"\u003e\u003ccode\u003eVector.capacity()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the current capacity"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "size",
      "comment": "Returns the number of components in this list.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#size()\"\u003e\u003ccode\u003eVector.size()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the number of components in this list"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isEmpty",
      "comment": "Tests whether this list has any components.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#isEmpty()\"\u003e\u003ccode\u003eVector.isEmpty()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if and only if this list has no components, that is, its size is zero; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Enumeration",
        "parameters": [
          {
            "owner": "javax.swing.DefaultListModel",
            "name": "E",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "elements",
      "comment": "Returns an enumeration of the components of this list.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#elements()\"\u003e\u003ccode\u003eVector.elements()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an enumeration of the components of this list"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "elem"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "contains",
      "comment": "Tests whether the specified object is a component in this list.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#contains(java.lang.Object)\"\u003e\u003ccode\u003eVector.contains(Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eelem\u003c/code\u003e - an object"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified object is the same as a component in this list"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "elem"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "indexOf",
      "comment": "Searches for the first occurrence of elem.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#indexOf(java.lang.Object)\"\u003e\u003ccode\u003eVector.indexOf(Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eelem\u003c/code\u003e - an object"
        ],
        "return": [
          "the index of the first occurrence of the argument in this list; returns \n\u003ccode\u003e-1\u003c/code\u003e if the object is not found"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "elem"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "indexOf",
      "comment": "Searches for the first occurrence of elem, beginning the search at index.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#indexOf(java.lang.Object,int)\"\u003e\u003ccode\u003eVector.indexOf(Object,int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eelem\u003c/code\u003e - the desired component",
          "\u003ccode\u003eindex\u003c/code\u003e - the index from which to begin searching"
        ],
        "return": [
          "the index where the first occurrence of \n\u003ccode\u003eelem\u003c/code\u003e is found after \n\u003ccode\u003eindex\u003c/code\u003e; returns \n\u003ccode\u003e-1\u003c/code\u003e if the \n\u003ccode\u003eelem\u003c/code\u003e is not found in the list"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "elem"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "lastIndexOf",
      "comment": "Returns the index of the last occurrence of elem.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#lastIndexOf(java.lang.Object)\"\u003e\u003ccode\u003eVector.lastIndexOf(Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eelem\u003c/code\u003e - the desired component"
        ],
        "return": [
          "the index of the last occurrence of \n\u003ccode\u003eelem\u003c/code\u003e in the list; returns \n\u003ccode\u003eelem\u003c/code\u003e if the object is not found"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "elem"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "lastIndexOf",
      "comment": "Searches backwards for elem, starting from the specified index, and returns an index to it.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#lastIndexOf(java.lang.Object,int)\"\u003e\u003ccode\u003eVector.lastIndexOf(Object,int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eelem\u003c/code\u003e - the desired component",
          "\u003ccode\u003eindex\u003c/code\u003e - the index to start searching from"
        ],
        "return": [
          "the index of the last occurrence of the \n\u003ccode\u003eelem\u003c/code\u003e in this list at position less than \n\u003ccode\u003eindex\u003c/code\u003e; returns \n\u003ccode\u003e-1\u003c/code\u003e if the object is not found"
        ]
      }
    },
    {
      "returnType": {
        "owner": "javax.swing.DefaultListModel",
        "name": "E",
        "type": "Variable"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "elementAt",
      "comment": "Returns the component at the specified index. Note: Although this method is not deprecated, the preferred method to use is get(int), which implements the List interface defined in the 1.2 Collections framework.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/DefaultListModel.html#get(int)\"\u003e\u003ccode\u003eget(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#elementAt(int)\"\u003e\u003ccode\u003eVector.elementAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - an index into this list"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the index is negative or not less than the size of the list"
        ],
        "return": [
          "the component at the specified index"
        ]
      }
    },
    {
      "returnType": {
        "owner": "javax.swing.DefaultListModel",
        "name": "E",
        "type": "Variable"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "firstElement",
      "comment": "Returns the first component of this list.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#firstElement()\"\u003e\u003ccode\u003eVector.firstElement()\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NoSuchElementException.html\" title\u003d\"class in java.util\"\u003eNoSuchElementException\u003c/a\u003e\u003c/code\u003e - if this vector has no components"
        ],
        "return": [
          "the first component of this list"
        ]
      }
    },
    {
      "returnType": {
        "owner": "javax.swing.DefaultListModel",
        "name": "E",
        "type": "Variable"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "lastElement",
      "comment": "Returns the last component of the list.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#lastElement()\"\u003e\u003ccode\u003eVector.lastElement()\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NoSuchElementException.html\" title\u003d\"class in java.util\"\u003eNoSuchElementException\u003c/a\u003e\u003c/code\u003e - if this vector has no components"
        ],
        "return": [
          "the last component of the list"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "owner": "javax.swing.DefaultListModel",
            "name": "E",
            "type": "Variable"
          },
          "field": {
            "name": "element"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setElementAt",
      "comment": "Sets the component at the specified index of this list to be the specified element. The previous component at that position is discarded. Note: Although this method is not deprecated, the preferred method to use is set(int,Object), which implements the List interface defined in the 1.2 Collections framework.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/DefaultListModel.html#set(int,E)\"\u003e\u003ccode\u003eset(int,Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#setElementAt(E,int)\"\u003e\u003ccode\u003eVector.setElementAt(Object,int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eelement\u003c/code\u003e - what the component is to be set to",
          "\u003ccode\u003eindex\u003c/code\u003e - the specified index"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the index is invalid"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeElementAt",
      "comment": "Deletes the component at the specified index. Note: Although this method is not deprecated, the preferred method to use is remove(int), which implements the List interface defined in the 1.2 Collections framework.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/DefaultListModel.html#remove(int)\"\u003e\u003ccode\u003eremove(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#removeElementAt(int)\"\u003e\u003ccode\u003eVector.removeElementAt(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the object to remove"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the index is invalid"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "owner": "javax.swing.DefaultListModel",
            "name": "E",
            "type": "Variable"
          },
          "field": {
            "name": "element"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "insertElementAt",
      "comment": "Inserts the specified element as a component in this list at the specified index. Note: Although this method is not deprecated, the preferred method to use is add(int,Object), which implements the List interface defined in the 1.2 Collections framework.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/DefaultListModel.html#add(int,E)\"\u003e\u003ccode\u003eadd(int,Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#insertElementAt(E,int)\"\u003e\u003ccode\u003eVector.insertElementAt(Object,int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eelement\u003c/code\u003e - the component to insert",
          "\u003ccode\u003eindex\u003c/code\u003e - where to insert the new component"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the index was invalid"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "owner": "javax.swing.DefaultListModel",
            "name": "E",
            "type": "Variable"
          },
          "field": {
            "name": "element"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addElement",
      "comment": "Adds the specified component to the end of this list.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#addElement(E)\"\u003e\u003ccode\u003eVector.addElement(Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eelement\u003c/code\u003e - the component to be added"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeElement",
      "comment": "Removes the first (lowest-indexed) occurrence of the argument from this list.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#removeElement(java.lang.Object)\"\u003e\u003ccode\u003eVector.removeElement(Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the component to be removed"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the argument was a component of this list; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeAllElements",
      "comment": "Removes all components from this list and sets its size to zero. Note: Although this method is not deprecated, the preferred method to use is clear, which implements the List interface defined in the 1.2 Collections framework.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/DefaultListModel.html#clear()\"\u003e\u003ccode\u003eclear()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#removeAllElements()\"\u003e\u003ccode\u003eVector.removeAllElements()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string that displays and identifies this object\u0027s properties.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a String representation of this object"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toArray",
      "comment": "Returns an array containing all of the elements in this list in the correct order.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Vector.html#toArray()\"\u003e\u003ccode\u003eVector.toArray()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an array containing the elements of the list"
        ]
      }
    },
    {
      "returnType": {
        "owner": "javax.swing.DefaultListModel",
        "name": "E",
        "type": "Variable"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "get",
      "comment": "Returns the element at the specified position in this list.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - index of element to return"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the index is out of range (\n\u003ccode\u003eindex \u0026amp;lt; 0 || index \u0026amp;gt;\u003d size()\u003c/code\u003e)"
        ],
        "return": [
          "the element at the specified position in this list"
        ]
      }
    },
    {
      "returnType": {
        "owner": "javax.swing.DefaultListModel",
        "name": "E",
        "type": "Variable"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        },
        {
          "type": {
            "owner": "javax.swing.DefaultListModel",
            "name": "E",
            "type": "Variable"
          },
          "field": {
            "name": "element"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "set",
      "comment": "Replaces the element at the specified position in this list with the specified element.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - index of element to replace",
          "\u003ccode\u003eelement\u003c/code\u003e - element to be stored at the specified position"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the index is out of range (\n\u003ccode\u003eindex \u0026amp;lt; 0 || index \u0026amp;gt;\u003d size()\u003c/code\u003e)"
        ],
        "return": [
          "the element previously at the specified position"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        },
        {
          "type": {
            "owner": "javax.swing.DefaultListModel",
            "name": "E",
            "type": "Variable"
          },
          "field": {
            "name": "element"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Inserts the specified element at the specified position in this list.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - index at which the specified element is to be inserted",
          "\u003ccode\u003eelement\u003c/code\u003e - element to be inserted"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the index is out of range (\n\u003ccode\u003eindex \u0026amp;lt; 0 || index \u0026amp;gt; size()\u003c/code\u003e)"
        ]
      }
    },
    {
      "returnType": {
        "owner": "javax.swing.DefaultListModel",
        "name": "E",
        "type": "Variable"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the element at the specified position in this list. Returns the element that was removed from the list",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the element to removed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the index is out of range (\n\u003ccode\u003eindex \u0026amp;lt; 0 || index \u0026amp;gt;\u003d size()\u003c/code\u003e)"
        ],
        "return": [
          "the element previously at the specified position"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clear",
      "comment": "Removes all of the elements from this list. The list will be empty after this call returns (unless it throws an exception).",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "fromIndex"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "toIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeRange",
      "comment": "Deletes the components at the specified range of indexes. The removal is inclusive, so specifying a range of (1,5) removes the component at index 1 and the component at index 5, as well as all components in between.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/DefaultListModel.html#remove(int)\"\u003e\u003ccode\u003eremove(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003efromIndex\u003c/code\u003e - the index of the lower end of the range",
          "\u003ccode\u003etoIndex\u003c/code\u003e - the index of the upper end of the range"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the index was invalid",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromIndex \u0026amp;gt; toIndex\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Collection",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.DefaultListModel",
                    "name": "E",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addAll",
      "comment": "Adds all of the elements present in the collection to the list.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the collection which contains the elements to add"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ec\u003c/code\u003e is null"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        },
        {
          "type": {
            "name": "java.util.Collection",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.DefaultListModel",
                    "name": "E",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addAll",
      "comment": "Adds all of the elements present in the collection, starting from the specified index.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - index at which to insert the first element from the specified collection",
          "\u003ccode\u003ec\u003c/code\u003e - the collection which contains the elements to add"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eindex\u003c/code\u003e does not fall within the range of number of elements currently held",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ec\u003c/code\u003e is null"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a DefaultListModel.",
      "tagMap": {}
    }
  ],
  "genericParameters": [
    {
      "name": "E",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.DefaultListModel",
  "comment": "This class loosely implements the \n\u003ccode\u003ejava.util.Vector\u003c/code\u003e API, in that it implements the 1.1.x version of \n\u003ccode\u003ejava.util.Vector\u003c/code\u003e, has no collection class support, and notifies the \n\u003ccode\u003eListDataListener\u003c/code\u003es when changes occur. Presently it delegates to a \n\u003ccode\u003eVector\u003c/code\u003e, in a future release it will be a real Collection implementation. \n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.2"
    ]
  }
}