{
  "packageName": "javax.swing",
  "simpleName": "PopupFactory",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.PopupFactory",
            "type": "Class"
          },
          "field": {
            "name": "factory"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "setSharedInstance",
      "comment": "Sets the PopupFactory that will be used to obtain Popups. This will throw an IllegalArgumentException if factory is null.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/PopupFactory.html#getPopup(java.awt.Component,java.awt.Component,int,int)\"\u003e\u003ccode\u003egetPopup(java.awt.Component, java.awt.Component, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003efactory\u003c/code\u003e - Shared PopupFactory"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efactory\u003c/code\u003e is null"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.PopupFactory",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getSharedInstance",
      "comment": "Returns the shared PopupFactory which can be used to obtain Popups.",
      "tagMap": {
        "return": [
          "Shared PopupFactory"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.Popup",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "owner"
          }
        },
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "contents"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPopup",
      "comment": "Creates a Popup for the Component owner containing the Component contents. owner is used to determine which Window the new Popup will parent the Component the Popup creates to. A null owner implies there is no valid parent. x and y specify the preferred initial location to place the Popup at. Based on screen size, or other paramaters, the Popup may not display at x and y.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eowner\u003c/code\u003e - Component mouse coordinates are relative to, may be null",
          "\u003ccode\u003econtents\u003c/code\u003e - Contents of the Popup",
          "\u003ccode\u003ex\u003c/code\u003e - Initial x screen coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Initial y screen coordinate"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if contents is null"
        ],
        "return": [
          "Popup containing Contents"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.Popup",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "owner"
          }
        },
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "contents"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "isHeavyWeightPopup"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getPopup",
      "comment": "Creates a Popup for the Component owner containing the Component contents. The window containing the component owner will be used as the parent window. A null owner implies there is no valid parent. x and y specify the preferred initial location to place the Popup at. Based on screen size, or other parameters, the Popup may not display at x and y. isHeavyWeightPopup specifies if the Popup will be heavyweight. Passing true will force the Popup type to be heavyweight, otherwise Popup type will be selected by Popup factory. Lightweight Popup windows are more efficient than heavyweight (native peer) windows, but lightweight and heavyweight components do not mix well in a GUI. This method is intended to be used only by PopupFactory sub-classes.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eowner\u003c/code\u003e - Component mouse coordinates are relative to, may be null",
          "\u003ccode\u003econtents\u003c/code\u003e - Contents of the Popup",
          "\u003ccode\u003ex\u003c/code\u003e - Initial x screen coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - Initial y screen coordinate",
          "\u003ccode\u003eisHeavyWeightPopup\u003c/code\u003e - true if Popup should be heavy weight, otherwise popup type will be selected by popup factory."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if contents is null"
        ],
        "return": [
          "Popup containing Contents"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a PopupFactory.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.PopupFactory",
  "comment": "\u003ccode\u003ePopupFactory\u003c/code\u003e, as the name implies, is used to obtain instances of \n\u003ccode\u003ePopup\u003c/code\u003es. \n\u003ccode\u003ePopup\u003c/code\u003es are used to display a \n\u003ccode\u003eComponent\u003c/code\u003e above all other \n\u003ccode\u003eComponent\u003c/code\u003es in a particular containment hierarchy. The general contract is that once you have obtained a \n\u003ccode\u003ePopup\u003c/code\u003e from a \n\u003ccode\u003ePopupFactory\u003c/code\u003e, you must invoke \n\u003ccode\u003ehide\u003c/code\u003e on the \n\u003ccode\u003ePopup\u003c/code\u003e. The typical usage is: \n\u003cpre\u003e   PopupFactory factory \u003d PopupFactory.getSharedInstance();\n   Popup popup \u003d factory.getPopup(owner, contents, x, y);\n   popup.show();\n   ...\n   popup.hide();\n \u003c/pre\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Popup.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003ePopup\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}