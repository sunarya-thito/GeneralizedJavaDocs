{
  "packageName": "javax.swing",
  "simpleName": "InputMap",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.InputMap",
            "type": "Class"
          },
          "field": {
            "name": "map"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setParent",
      "comment": "Sets this InputMap\u0027s parent.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emap\u003c/code\u003e - the \n\u003ccode\u003eInputMap\u003c/code\u003e that is the parent of this one"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.InputMap",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getParent",
      "comment": "Gets this InputMap\u0027s parent.",
      "tagMap": {
        "return": [
          "map the \n\u003ccode\u003eInputMap\u003c/code\u003e that is the parent of this one, or null if this \n\u003ccode\u003eInputMap\u003c/code\u003e has no parent"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.KeyStroke",
            "type": "Class"
          },
          "field": {
            "name": "keyStroke"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "actionMapKey"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "put",
      "comment": "Adds a binding for keyStroke to actionMapKey. If actionMapKey is null, this removes the current binding for keyStroke.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekeyStroke\u003c/code\u003e - a \n\u003ccode\u003eKeyStroke\u003c/code\u003e",
          "\u003ccode\u003eactionMapKey\u003c/code\u003e - an action map key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.KeyStroke",
            "type": "Class"
          },
          "field": {
            "name": "keyStroke"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "get",
      "comment": "Returns the binding for keyStroke, messaging the parent InputMap if the binding is not locally defined.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekeyStroke\u003c/code\u003e - the \n\u003ccode\u003eKeyStroke\u003c/code\u003e for which to get the binding"
        ],
        "return": [
          "the binding for \n\u003ccode\u003ekeyStroke\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.KeyStroke",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the binding for key from this InputMap.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the \n\u003ccode\u003eKeyStroke\u003c/code\u003e for which to remove the binding"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clear",
      "comment": "Removes all the mappings from this InputMap.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "javax.swing.KeyStroke",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "keys",
      "comment": "Returns the KeyStrokes that are bound in this InputMap.",
      "tagMap": {
        "return": [
          "an array of the \n\u003ccode\u003eKeyStroke\u003c/code\u003es that are bound in this \n\u003ccode\u003eInputMap\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "size",
      "comment": "Returns the number of KeyStroke bindings.",
      "tagMap": {
        "return": [
          "the number of \n\u003ccode\u003eKeyStroke\u003c/code\u003e bindings"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.KeyStroke",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "allKeys",
      "comment": "Returns an array of the KeyStrokes defined in this InputMap and its parent. This differs from keys() in that this method includes the keys defined in the parent.",
      "tagMap": {
        "return": [
          "an array of the \n\u003ccode\u003eKeyStroke\u003c/code\u003es defined in this \n\u003ccode\u003eInputMap\u003c/code\u003e and its parent"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an InputMap with no parent and no mappings.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.InputMap",
  "comment": "\u003ccode\u003eInputMap\u003c/code\u003e provides a binding between an input event (currently only \n\u003ccode\u003eKeyStroke\u003c/code\u003es are used) and an \n\u003ccode\u003eObject\u003c/code\u003e. \n\u003ccode\u003eInputMap\u003c/code\u003es are usually used with an \n\u003ccode\u003eActionMap\u003c/code\u003e, to determine an \n\u003ccode\u003eAction\u003c/code\u003e to perform when a key is pressed. An \n\u003ccode\u003eInputMap\u003c/code\u003e can have a parent that is searched for bindings not defined in the \n\u003ccode\u003eInputMap\u003c/code\u003e. \n\u003cp\u003eAs with \u003ccode\u003eActionMap\u003c/code\u003e if you create a cycle, eg: \u003c/p\u003e\n\u003cpre\u003e   InputMap am \u003d new InputMap();\n   InputMap bm \u003d new InputMap():\n   am.setParent(bm);\n   bm.setParent(am);\n \u003c/pre\u003e some of the methods will cause a StackOverflowError to be thrown.\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.3"
    ]
  }
}