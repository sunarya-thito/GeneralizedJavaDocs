{
  "packageName": "javax.swing.text",
  "simpleName": "StringContent",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "length",
      "comment": "Returns the length of the content.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html#length()\"\u003e\u003ccode\u003eAbstractDocument.Content.length()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html#length()\"\u003elength\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html\" title\u003d\"interface in javax.swing.text\"\u003eAbstractDocument.Content\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the length \u0026gt;\u003d 1"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.undo.UndoableEdit",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.text.BadLocationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "where"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "str"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "insertString",
      "comment": "Inserts a string into the content.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html#insertString(int,java.lang.String)\"\u003e\u003ccode\u003eAbstractDocument.Content.insertString(int, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html#insertString(int,java.lang.String)\"\u003einsertString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html\" title\u003d\"interface in javax.swing.text\"\u003eAbstractDocument.Content\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ewhere\u003c/code\u003e - the starting position \u0026gt;\u003d 0 \u0026amp;\u0026amp; \u0026lt; length()",
          "\u003ccode\u003estr\u003c/code\u003e - the non-null string to insert"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if the specified position is invalid"
        ],
        "return": [
          "an UndoableEdit object for undoing"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.undo.UndoableEdit",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.text.BadLocationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "where"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "nitems"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes part of the content. where + nitems must be \u003c length().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html#remove(int,int)\"\u003e\u003ccode\u003eAbstractDocument.Content.remove(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html#remove(int,int)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html\" title\u003d\"interface in javax.swing.text\"\u003eAbstractDocument.Content\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ewhere\u003c/code\u003e - the starting position \u0026gt;\u003d 0",
          "\u003ccode\u003enitems\u003c/code\u003e - the number of characters to remove \u0026gt;\u003d 0"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if the specified position is invalid"
        ],
        "return": [
          "an UndoableEdit object for undoing"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.text.BadLocationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "where"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "len"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getString",
      "comment": "Retrieves a portion of the content. where + len must be \u003c\u003d length().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html#getString(int,int)\"\u003e\u003ccode\u003eAbstractDocument.Content.getString(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html#getString(int,int)\"\u003egetString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html\" title\u003d\"interface in javax.swing.text\"\u003eAbstractDocument.Content\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ewhere\u003c/code\u003e - the starting position \u0026gt;\u003d 0",
          "\u003ccode\u003elen\u003c/code\u003e - the length to retrieve \u0026gt;\u003d 0"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if the specified position is invalid"
        ],
        "return": [
          "a string representing the content; may be empty"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.text.BadLocationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "where"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "len"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.Segment",
            "type": "Class"
          },
          "field": {
            "name": "chars"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getChars",
      "comment": "Retrieves a portion of the content. where + len must be \u003c\u003d length()",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html#getChars(int,int,javax.swing.text.Segment)\"\u003e\u003ccode\u003eAbstractDocument.Content.getChars(int, int, javax.swing.text.Segment)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html#getChars(int,int,javax.swing.text.Segment)\"\u003egetChars\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html\" title\u003d\"interface in javax.swing.text\"\u003eAbstractDocument.Content\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ewhere\u003c/code\u003e - the starting position \u0026gt;\u003d 0",
          "\u003ccode\u003elen\u003c/code\u003e - the number of characters to retrieve \u0026gt;\u003d 0",
          "\u003ccode\u003echars\u003c/code\u003e - the Segment object to return the characters in"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if the specified position is invalid"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.Position",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.text.BadLocationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offset"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createPosition",
      "comment": "Creates a position within the content that will track change as the content is mutated.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html#createPosition(int)\"\u003ecreatePosition\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractDocument.Content.html\" title\u003d\"interface in javax.swing.text\"\u003eAbstractDocument.Content\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eoffset\u003c/code\u003e - the offset to create a position for \u0026gt;\u003d 0"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if the specified position is invalid"
        ],
        "return": [
          "the position"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Vector",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Vector",
            "type": "Class"
          },
          "field": {
            "name": "v"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offset"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "length"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getPositionsInRange",
      "comment": "Returns a Vector containing instances of UndoPosRef for the Positions in the range offset to offset + length. If v is not null the matching Positions are placed in there. The vector with the resulting Positions are returned. This is meant for internal usage, and is generally not of interest to subclasses.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ev\u003c/code\u003e - the Vector to use, with a new one created on null",
          "\u003ccode\u003eoffset\u003c/code\u003e - the starting offset \u0026gt;\u003d 0",
          "\u003ccode\u003elength\u003c/code\u003e - the length \u0026gt;\u003d 0"
        ],
        "return": [
          "the set of instances"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Vector",
            "type": "Class"
          },
          "field": {
            "name": "positions"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "updateUndoPositions",
      "comment": "Resets the location for all the UndoPosRef instances in positions. This is meant for internal usage, and is generally not of interest to subclasses.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epositions\u003c/code\u003e - the positions of the instances"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new StringContent object. Initial size defaults to 10.",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "initialLength"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new StringContent object, with the initial size specified. If the length is \u003c 1, a size of 1 is used.",
      "tagMap": {
        "param": [
          "\u003ccode\u003einitialLength\u003c/code\u003e - the initial size"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "javax.swing.text.StringContent",
  "comment": "An implementation of the AbstractDocument.Content interface that is a brute force implementation that is useful for relatively small documents and/or debugging. It manages the character content as a simple character array. It is also quite inefficient. \n\u003cp\u003e It is generally recommended that the gap buffer or piece table implementations be used instead. This buffer does not scale up to large sizes. \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {}
}