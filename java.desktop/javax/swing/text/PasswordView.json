{
  "packageName": "javax.swing.text",
  "simpleName": "PasswordView",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.text.FieldView",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.text.BadLocationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "p0"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "p1"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "drawUnselectedText",
      "comment": "Renders the given range in the model as normal unselected text. This sets the foreground color and echos the characters using the value returned by getEchoChar().",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/PlainView.html#drawUnselectedText(java.awt.Graphics,int,int,int,int)\"\u003edrawUnselectedText\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/PlainView.html\" title\u003d\"class in javax.swing.text\"\u003ePlainView\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eg\u003c/code\u003e - the graphics context",
          "\u003ccode\u003ex\u003c/code\u003e - the starting X coordinate \u0026gt;\u003d 0",
          "\u003ccode\u003ey\u003c/code\u003e - the starting Y coordinate \u0026gt;\u003d 0",
          "\u003ccode\u003ep0\u003c/code\u003e - the starting offset in the model \u0026gt;\u003d 0",
          "\u003ccode\u003ep1\u003c/code\u003e - the ending offset in the model \u0026gt;\u003d p0"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if p0 or p1 are out of range"
        ],
        "return": [
          "the X location of the end of the range \u0026gt;\u003d 0"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.text.BadLocationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "p0"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "p1"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "drawSelectedText",
      "comment": "Renders the given range in the model as selected text. This is implemented to render the text in the color specified in the hosting component. It assumes the highlighter will render the selected background. Uses the result of getEchoChar() to display the characters.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/PlainView.html#drawSelectedText(java.awt.Graphics,int,int,int,int)\"\u003edrawSelectedText\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/PlainView.html\" title\u003d\"class in javax.swing.text\"\u003ePlainView\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eg\u003c/code\u003e - the graphics context",
          "\u003ccode\u003ex\u003c/code\u003e - the starting X coordinate \u0026gt;\u003d 0",
          "\u003ccode\u003ey\u003c/code\u003e - the starting Y coordinate \u0026gt;\u003d 0",
          "\u003ccode\u003ep0\u003c/code\u003e - the starting offset in the model \u0026gt;\u003d 0",
          "\u003ccode\u003ep1\u003c/code\u003e - the ending offset in the model \u0026gt;\u003d p0"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if p0 or p1 are out of range"
        ],
        "return": [
          "the X location of the end of the range \u0026gt;\u003d 0"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "char",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "drawEchoCharacter",
      "comment": "Renders the echo character, or whatever graphic should be used to display the password characters. The color in the Graphics object is set to the appropriate foreground color for selected or unselected text.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eg\u003c/code\u003e - the graphics context",
          "\u003ccode\u003ex\u003c/code\u003e - the starting X coordinate \u0026gt;\u003d 0",
          "\u003ccode\u003ey\u003c/code\u003e - the starting Y coordinate \u0026gt;\u003d 0",
          "\u003ccode\u003ec\u003c/code\u003e - the echo character"
        ],
        "return": [
          "the updated X position \u0026gt;\u003d 0"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Graphics2D",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "char",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "drawEchoCharacter",
      "comment": "Renders the echo character, or whatever graphic should be used to display the password characters. The color in the Graphics object is set to the appropriate foreground color for selected or unselected text.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eg\u003c/code\u003e - the graphics context",
          "\u003ccode\u003ex\u003c/code\u003e - the starting X coordinate \n\u003ccode\u003e\u0026gt;\u003d 0\u003c/code\u003e",
          "\u003ccode\u003ey\u003c/code\u003e - the starting Y coordinate \n\u003ccode\u003e\u0026gt;\u003d 0\u003c/code\u003e",
          "\u003ccode\u003ec\u003c/code\u003e - the echo character"
        ],
        "return": [
          "the updated X position \n\u003ccode\u003e\u0026gt;\u003d 0\u003c/code\u003e"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Shape",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.text.BadLocationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "java.awt.Shape",
            "type": "Class"
          },
          "field": {
            "name": "a"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.Position$Bias",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "modelToView",
      "comment": "Provides a mapping from the document model coordinate space to the coordinate space of the view mapped to it.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/View.html#modelToView(int,java.awt.Shape,javax.swing.text.Position.Bias)\"\u003e\u003ccode\u003eView.modelToView(int, java.awt.Shape, javax.swing.text.Position.Bias)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/FieldView.html#modelToView(int,java.awt.Shape,javax.swing.text.Position.Bias)\"\u003emodelToView\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/FieldView.html\" title\u003d\"class in javax.swing.text\"\u003eFieldView\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003epos\u003c/code\u003e - the position to convert \u0026gt;\u003d 0",
          "\u003ccode\u003ea\u003c/code\u003e - the allocated region to render into",
          "\u003ccode\u003eb\u003c/code\u003e - the bias toward the previous character or the next character represented by the offset, in case the position is a boundary of two views; \n\u003ccode\u003eb\u003c/code\u003e will have one of these values: \n\u003cul\u003e \n \u003cli\u003e \u003ccode\u003ePosition.Bias.Forward\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e \u003ccode\u003ePosition.Bias.Backward\u003c/code\u003e \u003c/li\u003e\n\u003c/ul\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if the given position does not represent a valid location in the associated document"
        ],
        "return": [
          "the bounding box of the given position"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "fx"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "fy"
          }
        },
        {
          "type": {
            "name": "java.awt.Shape",
            "type": "Class"
          },
          "field": {
            "name": "a"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.Position$Bias",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "bias"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "viewToModel",
      "comment": "Provides a mapping from the view coordinate space to the logical coordinate space of the model.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/View.html#viewToModel(float,float,java.awt.Shape,javax.swing.text.Position.Bias%5B%5D)\"\u003e\u003ccode\u003eView.viewToModel(float, float, java.awt.Shape, javax.swing.text.Position.Bias[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/FieldView.html#viewToModel(float,float,java.awt.Shape,javax.swing.text.Position.Bias%5B%5D)\"\u003eviewToModel\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/FieldView.html\" title\u003d\"class in javax.swing.text\"\u003eFieldView\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efx\u003c/code\u003e - the X coordinate \u0026gt;\u003d 0.0f",
          "\u003ccode\u003efy\u003c/code\u003e - the Y coordinate \u0026gt;\u003d 0.0f",
          "\u003ccode\u003ea\u003c/code\u003e - the allocated region to render into",
          "\u003ccode\u003ebias\u003c/code\u003e - the returned bias"
        ],
        "return": [
          "the location within the model that best represents the given point in the view"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "axis"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPreferredSpan",
      "comment": "Determines the preferred span for this view along an axis.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/FieldView.html#getPreferredSpan(int)\"\u003egetPreferredSpan\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/FieldView.html\" title\u003d\"class in javax.swing.text\"\u003eFieldView\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaxis\u003c/code\u003e - may be either View.X_AXIS or View.Y_AXIS"
        ],
        "return": [
          "the span the view would like to be rendered into \u0026gt;\u003d 0. Typically the view is told to render into the span that is returned, although there is no guarantee. The parent may choose to resize or break the view."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.Element",
            "type": "Class"
          },
          "field": {
            "name": "elem"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new view wrapped on an element.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eelem\u003c/code\u003e - the element"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.text.PasswordView",
  "comment": "Implements a View suitable for use in JPasswordField UI implementations. This is basically a field ui that renders its contents as the echo character specified in the associated component (if it can narrow the component to a JPasswordField).",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/View.html\" title\u003d\"class in javax.swing.text\"\u003e\u003ccode\u003eView\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}