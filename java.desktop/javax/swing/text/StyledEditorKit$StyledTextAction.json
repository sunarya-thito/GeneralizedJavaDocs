{
  "packageName": "javax.swing.text",
  "simpleName": "StyledTextAction",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.text.TextAction",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.swing.JEditorPane",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.ActionEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "getEditor",
      "comment": "Gets the target editor for an action.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the action event"
        ],
        "return": [
          "the editor"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.StyledDocument",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JEditorPane",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "getStyledDocument",
      "comment": "Gets the document associated with an editor pane.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the editor"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - for the wrong document type"
        ],
        "return": [
          "the document"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.StyledEditorKit",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JEditorPane",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "getStyledEditorKit",
      "comment": "Gets the editor kit associated with an editor pane.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the editor pane"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - for the wrong document type"
        ],
        "return": [
          "the kit"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JEditorPane",
            "type": "Class"
          },
          "field": {
            "name": "editor"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.AttributeSet",
            "type": "Class"
          },
          "field": {
            "name": "attr"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "replace"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "setCharacterAttributes",
      "comment": "Applies the given attributes to character content. If there is a selection, the attributes are applied to the selection range. If there is no selection, the attributes are applied to the input attribute set which defines the attributes for any new text that gets inserted.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eeditor\u003c/code\u003e - the editor",
          "\u003ccode\u003eattr\u003c/code\u003e - the attributes",
          "\u003ccode\u003ereplace\u003c/code\u003e - if true, then replace the existing attributes first"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JEditorPane",
            "type": "Class"
          },
          "field": {
            "name": "editor"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.AttributeSet",
            "type": "Class"
          },
          "field": {
            "name": "attr"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "replace"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "setParagraphAttributes",
      "comment": "Applies the given attributes to paragraphs. If there is a selection, the attributes are applied to the paragraphs that intersect the selection. if there is no selection, the attributes are applied to the paragraph at the current caret position.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eeditor\u003c/code\u003e - the editor",
          "\u003ccode\u003eattr\u003c/code\u003e - the attributes",
          "\u003ccode\u003ereplace\u003c/code\u003e - if true, replace the existing attributes first"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "nm"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new StyledTextAction from a string action name.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enm\u003c/code\u003e - the name of the action"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1033,
  "name": "javax.swing.text.StyledEditorKit$StyledTextAction",
  "comment": "An action that assumes it\u0027s being fired on a JEditorPane with a StyledEditorKit (or subclass) installed. This has some convenience methods for causing character or paragraph level attribute changes. The convenience methods will throw an IllegalArgumentException if the assumption of a StyledDocument, a JEditorPane, or a StyledEditorKit fail to be true. \n\u003cp\u003e The component that gets acted upon by the action will be the source of the ActionEvent if the source can be narrowed to a JEditorPane type. If the source can\u0027t be narrowed, the most recently focused text component is changed. If neither of these are the case, the action cannot be performed. \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {}
}