{
  "packageName": "javax.swing.text.html.parser",
  "simpleName": "DTD",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "name",
      "comment": "the name of the DTD",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.util.Vector",
        "parameters": [
          {
            "name": "javax.swing.text.html.parser.Element",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "elements",
      "comment": "The vector of elements",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.util.Hashtable",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          },
          {
            "name": "javax.swing.text.html.parser.Element",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "elementHash",
      "comment": "The hash table contains the name of element and the corresponding element.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.util.Hashtable",
        "parameters": [
          {
            "name": "java.lang.Object",
            "type": "Class"
          },
          {
            "name": "javax.swing.text.html.parser.Entity",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "entityHash",
      "comment": "The hash table contains an Object and the corresponding Entity",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "pcdata",
      "comment": "The element corresponding to pcdata.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "html",
      "comment": "The element corresponding to html.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "meta",
      "comment": "The element corresponding to meta.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "base",
      "comment": "The element corresponding to base.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "isindex",
      "comment": "The element corresponding to isindex.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "head",
      "comment": "The element corresponding to head.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "body",
      "comment": "The element corresponding to body.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "applet",
      "comment": "The element corresponding to applet.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "param",
      "comment": "The element corresponding to param.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "p",
      "comment": "The element corresponding to p.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "title",
      "comment": "The element corresponding to title.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "FILE_VERSION",
      "comment": "The version of a file",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.text.html.parser.DTD.FILE_VERSION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getName",
      "comment": "Gets the name of the DTD.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the name of the DTD"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.parser.Entity",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getEntity",
      "comment": "Gets an entity by name.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the entity name"
        ],
        "return": [
          "the \n\u003ccode\u003eEntity\u003c/code\u003e corresponding to the \n\u003ccode\u003ename\u003c/code\u003e \n\u003ccode\u003eString\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.parser.Entity",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "ch",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getEntity",
      "comment": "Gets a character entity.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ech\u003c/code\u003e - the character"
        ],
        "return": [
          "the \n\u003ccode\u003eEntity\u003c/code\u003e corresponding to the \n\u003ccode\u003ech\u003c/code\u003e character"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getElement",
      "comment": "Gets an element by name. A new element is created if the element doesn\u0027t exist.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the requested \n\u003ccode\u003eString\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eElement\u003c/code\u003e corresponding to \n\u003ccode\u003ename\u003c/code\u003e, which may be newly created"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "index",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getElement",
      "comment": "Gets an element by index.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the requested index"
        ],
        "return": [
          "the \n\u003ccode\u003eElement\u003c/code\u003e corresponding to \n\u003ccode\u003eindex\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.parser.Entity",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "char",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "data",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "defineEntity",
      "comment": "Defines an entity. If the Entity specified by name, type, and data exists, it is returned; otherwise a new Entity is created and is returned.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the \n\u003ccode\u003eEntity\u003c/code\u003e as a \n\u003ccode\u003eString\u003c/code\u003e",
          "\u003ccode\u003etype\u003c/code\u003e - the type of the \n\u003ccode\u003eEntity\u003c/code\u003e",
          "\u003ccode\u003edata\u003c/code\u003e - the \n\u003ccode\u003eEntity\u003c/code\u003e\u0027s data"
        ],
        "return": [
          "the \n\u003ccode\u003eEntity\u003c/code\u003e requested or a new \n\u003ccode\u003eEntity\u003c/code\u003e if not found"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "omitStart",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "omitEnd",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.html.parser.ContentModel",
            "type": "Class"
          },
          "name": "content",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.BitSet",
            "type": "Class"
          },
          "name": "exclusions",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.BitSet",
            "type": "Class"
          },
          "name": "inclusions",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.html.parser.AttributeList",
            "type": "Class"
          },
          "name": "atts",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "defineElement",
      "comment": "Returns the Element which matches the specified parameters. If one doesn\u0027t exist, a new one is created and returned.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the \n\u003ccode\u003eElement\u003c/code\u003e",
          "\u003ccode\u003etype\u003c/code\u003e - the type of the \n\u003ccode\u003eElement\u003c/code\u003e",
          "\u003ccode\u003eomitStart\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if start should be omitted",
          "\u003ccode\u003eomitEnd\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if end should be omitted",
          "\u003ccode\u003econtent\u003c/code\u003e - the \n\u003ccode\u003eContentModel\u003c/code\u003e",
          "\u003ccode\u003eexclusions\u003c/code\u003e - the set of elements that must not occur inside the element",
          "\u003ccode\u003einclusions\u003c/code\u003e - the set of elements that can occur inside the element",
          "\u003ccode\u003eatts\u003c/code\u003e - the \n\u003ccode\u003eAttributeList\u003c/code\u003e specifying the \n\u003ccode\u003eElement\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eElement\u003c/code\u003e specified"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.html.parser.AttributeList",
            "type": "Class"
          },
          "name": "atts",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "defineAttributes",
      "comment": "Defines attributes for an Element.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the \n\u003ccode\u003eElement\u003c/code\u003e",
          "\u003ccode\u003eatts\u003c/code\u003e - the \n\u003ccode\u003eAttributeList\u003c/code\u003e specifying the \n\u003ccode\u003eElement\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.parser.Entity",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "ch",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "defEntity",
      "comment": "Creates and returns a character Entity.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the entity\u0027s name",
          "\u003ccode\u003etype\u003c/code\u003e - the entity\u0027s type",
          "\u003ccode\u003ech\u003c/code\u003e - the entity\u0027s value (character)"
        ],
        "return": [
          "the new character \n\u003ccode\u003eEntity\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.parser.Entity",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "str",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "defEntity",
      "comment": "Creates and returns an Entity.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the entity\u0027s name",
          "\u003ccode\u003etype\u003c/code\u003e - the entity\u0027s type",
          "\u003ccode\u003estr\u003c/code\u003e - the entity\u0027s data section"
        ],
        "return": [
          "the new \n\u003ccode\u003eEntity\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "omitStart",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "omitEnd",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.html.parser.ContentModel",
            "type": "Class"
          },
          "name": "content",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "exclusions",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "inclusions",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.html.parser.AttributeList",
            "type": "Class"
          },
          "name": "atts",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "defElement",
      "comment": "Creates and returns an Element.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the element\u0027s name",
          "\u003ccode\u003etype\u003c/code\u003e - the element\u0027s type",
          "\u003ccode\u003eomitStart\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the element needs no starting tag",
          "\u003ccode\u003eomitEnd\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the element needs no closing tag",
          "\u003ccode\u003econtent\u003c/code\u003e - the element\u0027s content",
          "\u003ccode\u003eexclusions\u003c/code\u003e - the elements that must be excluded from the content of the element",
          "\u003ccode\u003einclusions\u003c/code\u003e - the elements that can be included as the content of the element",
          "\u003ccode\u003eatts\u003c/code\u003e - the attributes of the element"
        ],
        "return": [
          "the new \n\u003ccode\u003eElement\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.parser.AttributeList",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "modifier",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "values",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.html.parser.AttributeList",
            "type": "Class"
          },
          "name": "atts",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "defAttributeList",
      "comment": "Creates and returns an AttributeList responding to a new attribute.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the attribute\u0027s name",
          "\u003ccode\u003etype\u003c/code\u003e - the attribute\u0027s type",
          "\u003ccode\u003emodifier\u003c/code\u003e - the attribute\u0027s modifier",
          "\u003ccode\u003evalue\u003c/code\u003e - the default value of the attribute",
          "\u003ccode\u003evalues\u003c/code\u003e - the allowed values for the attribute (multiple values could be separated by \u0027|\u0027)",
          "\u003ccode\u003eatts\u003c/code\u003e - the previous attribute of the element; to be placed to \n\u003ccode\u003eAttributeList.next\u003c/code\u003e, creating a linked list"
        ],
        "return": [
          "the new \n\u003ccode\u003eAttributeList\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.parser.ContentModel",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "obj",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.html.parser.ContentModel",
            "type": "Class"
          },
          "name": "next",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "defContentModel",
      "comment": "Creates and returns a new content model.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the type of the new content model",
          "\u003ccode\u003eobj\u003c/code\u003e - the content of the content model",
          "\u003ccode\u003enext\u003c/code\u003e - pointer to the next content model"
        ],
        "return": [
          "the new \n\u003ccode\u003eContentModel\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of this DTD.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the string representation of this DTD"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.html.parser.DTD",
            "type": "Class"
          },
          "name": "dtd",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "putDTDHash",
      "comment": "Put a name and appropriate DTD to hashtable.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the DTD",
          "\u003ccode\u003edtd\u003c/code\u003e - the DTD"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.parser.DTD",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getDTD",
      "comment": "Returns a DTD with the specified name. If a DTD with that name doesn\u0027t exist, one is created and returned. Any uppercase characters in the name are converted to lowercase.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the DTD"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs"
        ],
        "return": [
          "the DTD which corresponds to \n\u003ccode\u003ename\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.DataInputStream",
            "type": "Class"
          },
          "name": "in",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "read",
      "comment": "Recreates a DTD from an archived format.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ein\u003c/code\u003e - the \n\u003ccode\u003eDataInputStream\u003c/code\u003e to read from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Creates a new DTD with the specified name.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name, as a \n\u003ccode\u003eString\u003c/code\u003e of the new DTD"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.text.html.parser.DTD",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/parser/Element.html\" title\u003d\"class in javax.swing.text.html.parser\"\u003e\u003ccode\u003eElement\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/parser/AttributeList.html\" title\u003d\"class in javax.swing.text.html.parser\"\u003e\u003ccode\u003eAttributeList\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/parser/ContentModel.html\" title\u003d\"class in javax.swing.text.html.parser\"\u003e\u003ccode\u003eContentModel\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/parser/Parser.html\" title\u003d\"class in javax.swing.text.html.parser\"\u003e\u003ccode\u003eParser\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}