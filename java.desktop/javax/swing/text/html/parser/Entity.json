{
  "packageName": "javax.swing.text.html.parser",
  "simpleName": "Entity",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "name",
      "comment": "The name of the entity.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "type",
      "comment": "The type of the entity.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "char",
        "type": "Class",
        "arrayDimensions": 1
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "data",
      "comment": "The char array of data.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getName",
      "comment": "Gets the name of the entity.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the name of the entity, as a \n\u003ccode\u003eString\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getType",
      "comment": "Gets the type of the entity.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the type of the entity"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isParameter",
      "comment": "Returns true if it is a parameter entity.",
      "annotations": [],
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if it is a parameter entity"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isGeneral",
      "comment": "Returns true if it is a general entity.",
      "annotations": [],
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if it is a general entity"
        ]
      }
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getData",
      "comment": "Returns the data.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003edata\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getString",
      "comment": "Returns the data as a String.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the data as a \n\u003ccode\u003eString\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "nm",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "name2type",
      "comment": "Converts nm string to the corresponding entity type. If the string does not have a corresponding entity type, returns the type corresponding to \"CDATA\". Valid entity types are: \"PUBLIC\", \"CDATA\", \"SDATA\", \"PI\", \"STARTTAG\", \"ENDTAG\", \"MS\", \"MD\", \"SYSTEM\".",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enm\u003c/code\u003e - the string to be converted"
        ],
        "return": [
          "the corresponding entity type, or the type corresponding to \"CDATA\", if none exists"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "char",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "data",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an entity.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the entity",
          "\u003ccode\u003etype\u003c/code\u003e - the type of the entity",
          "\u003ccode\u003edata\u003c/code\u003e - the char array of data"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "javax.swing.text.html.parser.Entity",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/parser/DTD.html\" title\u003d\"class in javax.swing.text.html.parser\"\u003e\u003ccode\u003eDTD\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}