{
  "packageName": "javax.swing.text.html.parser",
  "simpleName": "ContentModel",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "type",
      "comment": "Type. Either \u0027*\u0027, \u0027?\u0027, \u0027+\u0027, \u0027,\u0027, \u0027|\u0027, \u0027\u0026\u0027.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "content",
      "comment": "The content. Either an Element or a ContentModel.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.text.html.parser.ContentModel",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "next",
      "comment": "The next content model (in a \u0027,\u0027, \u0027|\u0027 or \u0027\u0026\u0027 expression).",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "empty",
      "comment": "Return true if the content model could match an empty input stream.",
      "annotations": [],
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the content model could match an empty input stream"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "name": "javax.swing.text.html.parser.Element",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "elemVec",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getElements",
      "comment": "Update elemVec with the list of elements that are part of the this contentModel.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelemVec\u003c/code\u003e - the list of elements"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "token",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "first",
      "comment": "Return true if the token could potentially be the first token in the input stream.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etoken\u003c/code\u003e - the token"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the token could potentially be the first token in the input stream"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "first",
      "comment": "Return the element that must be next.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the element that must be next"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Convert to a string.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the string representation of this \n\u003ccode\u003eContentModel\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates ContentModel",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.html.parser.Element",
            "type": "Class"
          },
          "name": "content",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create a content model for an element.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003econtent\u003c/code\u003e - the element"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.html.parser.ContentModel",
            "type": "Class"
          },
          "name": "content",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create a content model of a particular type.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the type",
          "\u003ccode\u003econtent\u003c/code\u003e - the content"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "content",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.html.parser.ContentModel",
            "type": "Class"
          },
          "name": "next",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create a content model of a particular type.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the type",
          "\u003ccode\u003econtent\u003c/code\u003e - the content",
          "\u003ccode\u003enext\u003c/code\u003e - the next content model"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "javax.swing.text.html.parser.ContentModel",
  "comment": "A representation of a content model. A content model is basically a restricted BNF expression. It is restricted in the sense that it must be deterministic. This means that you don\u0027t have to represent it as a finite state automaton.\n\u003cp\u003e See Annex H on page 556 of the SGML handbook for more information.\u003c/p\u003e",
  "tagMap": {}
}