{
  "packageName": "javax.swing.text.html.parser",
  "simpleName": "TagElement",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "breaksFlow",
      "comment": "Returns true if this tag causes a line break to the flow of data, otherwise returns false.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this tag causes a line break to the flow of data, otherwise returns \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isPreformatted",
      "comment": "Returns true if this tag is pre-formatted.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this tag is pre-formatted, otherwise returns \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.parser.Element",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getElement",
      "comment": "Returns the element.",
      "tagMap": {
        "return": [
          "the element"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.HTML$Tag",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHTMLTag",
      "comment": "Returns the tag constant corresponding to the name of the element",
      "tagMap": {
        "return": [
          "the tag constant corresponding to the name of the \n\u003ccode\u003eelement\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "fictional",
      "comment": "Returns true if the tag is fictional.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the tag is fictional."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.html.parser.Element",
            "type": "Class"
          },
          "field": {
            "name": "elem"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a generic HTML TagElement class with fictional equals to false.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eelem\u003c/code\u003e - an element"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.html.parser.Element",
            "type": "Class"
          },
          "field": {
            "name": "elem"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "fictional"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a generic HTML TagElement class.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eelem\u003c/code\u003e - an element",
          "\u003ccode\u003efictional\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e the tag is inserted by error recovery."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.text.html.parser.TagElement",
  "comment": "A generic HTML TagElement class. The methods define how white space is interpreted around the tag.",
  "tagMap": {}
}