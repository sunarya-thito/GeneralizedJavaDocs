{
  "packageName": "javax.swing.text.html",
  "simpleName": "HTML",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "NULL_ATTRIBUTE_VALUE",
      "comment": "NULL_ATTRIBUTE_VALUE used in cases where the value for the attribute has not been specified.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.text.html.HTML.NULL_ATTRIBUTE_VALUE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.HTML$Tag",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAllTags",
      "comment": "Returns the set of actual HTML tags that are recognized by the default HTML reader. This set does not include tags that are manufactured by the reader.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the set of actual HTML tags that are recognized by the default HTML reader"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.HTML$Tag",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "tagName",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getTag",
      "comment": "Fetches a tag constant for a well-known tag name (i.e. one of the tags in the set {A, ADDRESS, APPLET, AREA, B, BASE, BASEFONT, BIG, BLOCKQUOTE, BODY, BR, CAPTION, CENTER, CITE, CODE, DD, DFN, DIR, DIV, DL, DT, EM, FONT, FORM, FRAME, FRAMESET, H1, H2, H3, H4, H5, H6, HEAD, HR, HTML, I, IMG, INPUT, ISINDEX, KBD, LI, LINK, MAP, MENU, META, NOBR, NOFRAMES, OBJECT, OL, OPTION, P, PARAM, PRE, SAMP, SCRIPT, SELECT, SMALL, SPAN, STRIKE, S, STRONG, STYLE, SUB, SUP, TABLE, TD, TEXTAREA, TH, TITLE, TR, TT, U, UL, VAR}. If the given name does not represent one of the well-known tags, then null will be returned.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etagName\u003c/code\u003e - the \n\u003ccode\u003eString\u003c/code\u003e name requested"
        ],
        "return": [
          "a tag constant corresponding to the \n\u003ccode\u003etagName\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if not found"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.AttributeSet",
            "type": "Class"
          },
          "name": "attr",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.html.HTML$Attribute",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "def",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getIntegerAttributeValue",
      "comment": "Fetches an integer attribute value. Attribute values are stored as a string, and this is a convenience method to convert to an actual integer.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eattr\u003c/code\u003e - the set of attributes to use to try to fetch a value",
          "\u003ccode\u003ekey\u003c/code\u003e - the key to use to fetch the value",
          "\u003ccode\u003edef\u003c/code\u003e - the default value to use if the attribute isn\u0027t defined or there is an error converting to an integer"
        ],
        "return": [
          "an attribute value"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.HTML$Attribute",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAllAttributeKeys",
      "comment": "Returns the set of HTML attributes recognized.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the set of HTML attributes recognized"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.html.HTML$Attribute",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "attName",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAttributeKey",
      "comment": "Fetches an attribute constant for a well-known attribute name (i.e. one of the attributes in the set {FACE, COMMENT, SIZE, COLOR, CLEAR, BACKGROUND, BGCOLOR, TEXT, LINK, VLINK, ALINK, WIDTH, HEIGHT, ALIGN, NAME, HREF, REL, REV, TITLE, TARGET, SHAPE, COORDS, ISMAP, NOHREF, ALT, ID, SRC, HSPACE, VSPACE, USEMAP, LOWSRC, CODEBASE, CODE, ARCHIVE, VALUE, VALUETYPE, TYPE, CLASS, STYLE, LANG, DIR, DECLARE, CLASSID, DATA, CODETYPE, STANDBY, BORDER, SHAPES, NOSHADE, COMPACT, START, ACTION, METHOD, ENCTYPE, CHECKED, MAXLENGTH, MULTIPLE, SELECTED, ROWS, COLS, DUMMY, CELLSPACING, CELLPADDING, VALIGN, HALIGN, NOWRAP, ROWSPAN, COLSPAN, PROMPT, HTTPEQUIV, CONTENT, LANGUAGE, VERSION, N, FRAMEBORDER, MARGINWIDTH, MARGINHEIGHT, SCROLLING, NORESIZE, MEDIA, ENDTAG}). If the given name does not represent one of the well-known attributes, then null will be returned.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eattName\u003c/code\u003e - the \n\u003ccode\u003eString\u003c/code\u003e requested"
        ],
        "return": [
          "the \n\u003ccode\u003eAttribute\u003c/code\u003e corresponding to \n\u003ccode\u003eattName\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a HTML.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "innerClasses": [
    "javax.swing.text.html.HTML$Attribute",
    "javax.swing.text.html.HTML$Tag",
    "javax.swing.text.html.HTML$UnknownTag"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.text.html.HTML",
  "comment": "Constants used in the \n\u003ccode\u003eHTMLDocument\u003c/code\u003e. These are basically tag and attribute definitions.",
  "tagMap": {}
}