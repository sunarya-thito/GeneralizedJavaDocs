{
  "packageName": "javax.swing.text.html",
  "simpleName": "HTMLWriter",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.text.AbstractWriter",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "write",
      "comment": "Iterates over the Element tree and controls the writing out of all the tags and its attributes.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractWriter.html#write()\"\u003ewrite\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractWriter.html\" title\u003d\"class in javax.swing.text\"\u003eAbstractWriter\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - on any I/O error",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if pos represents an invalid location within the document."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "writeAttributes",
      "comment": "Writes out the attribute set. Ignores all attributes with a key of type HTML.Tag, attributes with a key of type StyleConstants, and attributes with a key of type HTML.Attribute.ENDTAG.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractWriter.html#writeAttributes(javax.swing.text.AttributeSet)\"\u003ewriteAttributes\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractWriter.html\" title\u003d\"class in javax.swing.text\"\u003eAbstractWriter\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eattr\u003c/code\u003e - an AttributeSet"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - on any I/O error"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "emptyTag",
      "comment": "Writes out all empty elements (all tags that have no corresponding end tag).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelem\u003c/code\u003e - an Element"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - on any I/O error",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if pos represents an invalid location within the document."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "isBlockTag",
      "comment": "Determines if the HTML.Tag associated with the element is a block tag.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eattr\u003c/code\u003e - an AttributeSet"
        ],
        "return": [
          "true if tag is block tag, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "startTag",
      "comment": "Writes out a start tag for the element. Ignores all synthesized elements.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelem\u003c/code\u003e - an Element"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - on any I/O error",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if pos represents an invalid location within the document."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "textAreaContent",
      "comment": "Writes out text that is contained in a TEXTAREA form element.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eattr\u003c/code\u003e - an AttributeSet"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - on any I/O error",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if pos represents an invalid location within the document."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "text",
      "comment": "Writes out text. If a range is specified when the constructor is invoked, then only the appropriate range of text is written out.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractWriter.html#text(javax.swing.text.Element)\"\u003etext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractWriter.html\" title\u003d\"class in javax.swing.text\"\u003eAbstractWriter\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eelem\u003c/code\u003e - an Element"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - on any I/O error",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if pos represents an invalid location within the document."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "selectContent",
      "comment": "Writes out the content of the SELECT form element.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eattr\u003c/code\u003e - the AttributeSet associated with the form element"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - on any I/O error"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "writeOption",
      "comment": "Writes out the content of the Option form element.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eoption\u003c/code\u003e - an Option"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - on any I/O error"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "endTag",
      "comment": "Writes out an end tag for the element.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelem\u003c/code\u003e - an Element"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - on any I/O error"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "comment",
      "comment": "Writes out comments.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelem\u003c/code\u003e - an Element"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - on any I/O error",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if pos represents an invalid location within the document."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "synthesizedElement",
      "comment": "Returns true if the element is a synthesized element. Currently we are only testing for the p-implied tag.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelem\u003c/code\u003e - an element"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the element is a synthesized element."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "matchNameAttribute",
      "comment": "Returns true if the StyleConstants.NameAttribute is equal to the tag that is passed in as a parameter.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eattr\u003c/code\u003e - a set of attributes",
          "\u003ccode\u003etag\u003c/code\u003e - an HTML tag"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the StyleConstants.NameAttribute is equal to the tag that is passed in as a parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "writeEmbeddedTags",
      "comment": "Searches for embedded tags in the AttributeSet and writes them out. It also stores these tags in a vector so that when appropriate the corresponding end tags can be written out.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eattr\u003c/code\u003e - a set of attributes"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - on any I/O error"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "closeOutUnwantedEmbeddedTags",
      "comment": "Searches the attribute set and for each tag that is stored in the tag vector. If the tag is not found, then the tag is removed from the vector and a corresponding end tag is written out.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eattr\u003c/code\u003e - a set of attributes"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - on any I/O error"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "writeLineSeparator",
      "comment": "Writes the line separator. This is overriden to make sure we don\u0027t replace the newline content in case it is outside normal ascii.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractWriter.html#writeLineSeparator()\"\u003ewriteLineSeparator\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractWriter.html\" title\u003d\"class in javax.swing.text\"\u003eAbstractWriter\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - on any I/O error"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "output",
      "comment": "This method is overriden to map any character entities, such as \u003c to \u0026lt;. super.output will be invoked to write the content.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractWriter.html#output(char%5B%5D,int,int)\"\u003eoutput\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AbstractWriter.html\" title\u003d\"class in javax.swing.text\"\u003eAbstractWriter\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003echars\u003c/code\u003e - characters to output",
          "\u003ccode\u003estart\u003c/code\u003e - starting index",
          "\u003ccode\u003elength\u003c/code\u003e - length of output"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - on any I/O error"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.Writer",
            "type": "Class"
          },
          "name": "w",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.html.HTMLDocument",
            "type": "Class"
          },
          "name": "doc",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new HTMLWriter.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ew\u003c/code\u003e - a Writer",
          "\u003ccode\u003edoc\u003c/code\u003e - an HTMLDocument"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.Writer",
            "type": "Class"
          },
          "name": "w",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.html.HTMLDocument",
            "type": "Class"
          },
          "name": "doc",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "pos",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "len",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new HTMLWriter.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ew\u003c/code\u003e - a Writer",
          "\u003ccode\u003edoc\u003c/code\u003e - an HTMLDocument",
          "\u003ccode\u003epos\u003c/code\u003e - the document location from which to fetch the content",
          "\u003ccode\u003elen\u003c/code\u003e - the amount to write out"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.text.html.HTMLWriter",
  "comment": "This is a writer for HTMLDocuments.",
  "tagMap": {}
}