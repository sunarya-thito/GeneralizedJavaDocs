{
  "packageName": "javax.swing.text.html",
  "simpleName": "HTMLReader",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.text.html.HTMLEditorKit$ParserCallback",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.util.Vector",
        "parameters": [
          {
            "name": "javax.swing.text.DefaultStyledDocument$ElementSpec",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "parseBuffer",
      "comment": "Buffer to keep building elements.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.text.MutableAttributeSet",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "charAttr",
      "comment": "Current character attribute set.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.text.BadLocationException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "flush",
      "comment": "The last method called on the reader. It allows any pending changes to be flushed into the document. Since this is currently loading synchronously, the entire set of changes are pushed in at this point.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/HTMLEditorKit.ParserCallback.html#flush()\"\u003eflush\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/HTMLEditorKit.ParserCallback.html\" title\u003d\"class in javax.swing.text.html\"\u003eHTMLEditorKit.ParserCallback\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if the given position does not represent a valid location in the associated document."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "data"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "handleText",
      "comment": "Called by the parser to indicate a block of text was encountered.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/HTMLEditorKit.ParserCallback.html#handleText(char%5B%5D,int)\"\u003ehandleText\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/HTMLEditorKit.ParserCallback.html\" title\u003d\"class in javax.swing.text.html\"\u003eHTMLEditorKit.ParserCallback\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - a data",
          "\u003ccode\u003epos\u003c/code\u003e - a position"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.html.HTML$Tag",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.MutableAttributeSet",
            "type": "Class"
          },
          "field": {
            "name": "a"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "handleStartTag",
      "comment": "Callback from the parser. Route to the appropriate handler for the tag.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/HTMLEditorKit.ParserCallback.html#handleStartTag(javax.swing.text.html.HTML.Tag,javax.swing.text.MutableAttributeSet,int)\"\u003ehandleStartTag\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/HTMLEditorKit.ParserCallback.html\" title\u003d\"class in javax.swing.text.html\"\u003eHTMLEditorKit.ParserCallback\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - an HTML tag",
          "\u003ccode\u003ea\u003c/code\u003e - a set of attributes",
          "\u003ccode\u003epos\u003c/code\u003e - a position"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.html.HTML$Tag",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "handleEndTag",
      "comment": "Callback from the parser. Route to the appropriate handler for the tag.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/HTMLEditorKit.ParserCallback.html#handleEndTag(javax.swing.text.html.HTML.Tag,int)\"\u003ehandleEndTag\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/HTMLEditorKit.ParserCallback.html\" title\u003d\"class in javax.swing.text.html\"\u003eHTMLEditorKit.ParserCallback\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - an HTML tag",
          "\u003ccode\u003epos\u003c/code\u003e - a position"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.html.HTML$Tag",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.MutableAttributeSet",
            "type": "Class"
          },
          "field": {
            "name": "a"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "handleSimpleTag",
      "comment": "Callback from the parser. Route to the appropriate handler for the tag.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/HTMLEditorKit.ParserCallback.html#handleSimpleTag(javax.swing.text.html.HTML.Tag,javax.swing.text.MutableAttributeSet,int)\"\u003ehandleSimpleTag\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/HTMLEditorKit.ParserCallback.html\" title\u003d\"class in javax.swing.text.html\"\u003eHTMLEditorKit.ParserCallback\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - an HTML tag",
          "\u003ccode\u003ea\u003c/code\u003e - a set of attributes",
          "\u003ccode\u003epos\u003c/code\u003e - a position"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "eol"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "handleEndOfLineString",
      "comment": "This is invoked after the stream has been parsed, but before flush. eol will be one of \\n, \\r or \\r\\n, which ever is encountered the most in parsing the stream.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/HTMLEditorKit.ParserCallback.html#handleEndOfLineString(java.lang.String)\"\u003ehandleEndOfLineString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/html/HTMLEditorKit.ParserCallback.html\" title\u003d\"class in javax.swing.text.html\"\u003eHTMLEditorKit.ParserCallback\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eeol\u003c/code\u003e - value of eol"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.html.HTML$Tag",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.html.HTMLDocument$HTMLReader$TagAction",
            "type": "Class"
          },
          "field": {
            "name": "a"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "registerTag",
      "comment": "Registers a handler for the given tag. By default all of the well-known tags will have been registered. This can be used to change the handling of a particular tag or to add support for custom tags.",
      "tagMap": {
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - an HTML tag",
          "\u003ccode\u003ea\u003c/code\u003e - tag action handler"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "pushCharacterStyle",
      "comment": "Pushes the current character style on a stack in preparation for forming a new nested character style.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "popCharacterStyle",
      "comment": "Pops a previously pushed character style off the stack to return to a previous style.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "textAreaContent",
      "comment": "Adds the given content to the textarea document. This method gets called when we are in a textarea context. Therefore all text that is seen belongs to the text area and is hence added to the TextAreaDocument associated with the text area.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - the given content"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "preContent",
      "comment": "Adds the given content that was encountered in a PRE element. This synthesizes lines to hold the runs of text, and makes calls to addContent to actually add the text.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - the given content"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.html.HTML$Tag",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.MutableAttributeSet",
            "type": "Class"
          },
          "field": {
            "name": "attr"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "blockOpen",
      "comment": "Adds an instruction to the parse buffer to create a block element with the given attributes.",
      "tagMap": {
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - an HTML tag",
          "\u003ccode\u003eattr\u003c/code\u003e - the attribute set"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.html.HTML$Tag",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "blockClose",
      "comment": "Adds an instruction to the parse buffer to close out a block element of the given type.",
      "tagMap": {
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - the HTML tag"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "data"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offs"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "length"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addContent",
      "comment": "Adds some text with the current character attributes.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - the content to add",
          "\u003ccode\u003eoffs\u003c/code\u003e - the initial offset",
          "\u003ccode\u003elength\u003c/code\u003e - the length"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "data"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offs"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "length"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "generateImpliedPIfNecessary"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addContent",
      "comment": "Adds some text with the current character attributes.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - the content to add",
          "\u003ccode\u003eoffs\u003c/code\u003e - the initial offset",
          "\u003ccode\u003elength\u003c/code\u003e - the length",
          "\u003ccode\u003egenerateImpliedPIfNecessary\u003c/code\u003e - whether to generate implied paragraphs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.html.HTML$Tag",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.MutableAttributeSet",
            "type": "Class"
          },
          "field": {
            "name": "a"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addSpecialElement",
      "comment": "Adds content that is basically specified entirely in the attribute set.",
      "tagMap": {
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - an HTML tag",
          "\u003ccode\u003ea\u003c/code\u003e - the attribute set"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offset"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an HTMLReader using default pop and push depth and no tag to insert.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eoffset\u003c/code\u003e - the starting offset"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offset"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "popDepth"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "pushDepth"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.html.HTML$Tag",
            "type": "Class"
          },
          "field": {
            "name": "insertTag"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an HTMLReader.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eoffset\u003c/code\u003e - the starting offset",
          "\u003ccode\u003epopDepth\u003c/code\u003e - how many parents to ascend before insert new element",
          "\u003ccode\u003epushDepth\u003c/code\u003e - how many parents to descend (relative to popDepth) before inserting",
          "\u003ccode\u003einsertTag\u003c/code\u003e - a tag to insert (may be null)"
        ]
      }
    }
  ],
  "innerClasses": [
    "javax.swing.text.html.HTMLDocument$HTMLReader$ParagraphAction",
    "javax.swing.text.html.HTMLDocument$HTMLReader$FormAction",
    "javax.swing.text.html.HTMLDocument$HTMLReader$SpecialAction",
    "javax.swing.text.html.HTMLDocument$HTMLReader$IsindexAction",
    "javax.swing.text.html.HTMLDocument$HTMLReader$CharacterAction",
    "javax.swing.text.html.HTMLDocument$HTMLReader$TagAction",
    "javax.swing.text.html.HTMLDocument$HTMLReader$BlockAction",
    "javax.swing.text.html.HTMLDocument$HTMLReader$HiddenAction",
    "javax.swing.text.html.HTMLDocument$HTMLReader$PreAction"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.text.html.HTMLDocument$HTMLReader",
  "comment": "An HTML reader to load an HTML document with an HTML element structure. This is a set of callbacks from the parser, implemented to create a set of elements tagged with attributes. The parse builds up tokens (ElementSpec) that describe the element subtree desired, and burst it into the document under the protection of a write lock using the insert method on the document outer class. \n\u003cp\u003e The reader can be configured by registering actions (of type \u003ccode\u003eHTMLDocument.HTMLReader.TagAction\u003c/code\u003e) that describe how to handle the action. The idea behind the actions provided is that the most natural text editing operations can be provided if the element structure boils down to paragraphs with runs of some kind of style in them. Some things are more naturally specified structurally, so arbitrary structure should be allowed above the paragraphs, but will need to be edited with structural actions. The implication of this is that some of the HTML elements specified in the stream being parsed will be collapsed into attributes, and in some cases paragraphs will be synthesized. When HTML elements have been converted to attributes, the attribute key will be of type HTML.Tag, and the value will be of type AttributeSet so that no information is lost. This enables many of the existing actions to work so that the user can type input, hit the return key, backspace, delete, etc and have a reasonable result. Selections can be created, and attributes applied or removed, etc. With this in mind, the work done by the reader can be categorized into the following kinds of tasks: \u003c/p\u003e\n\u003cdl\u003e \n \u003cdt\u003e\n  Block \n \u003c/dt\u003e\n \u003cdd\u003e\n  Build the structure like it\u0027s specified in the stream. This produces elements that contain other elements. \n \u003c/dd\u003e\n \u003cdt\u003e\n  Paragraph \n \u003c/dt\u003e\n \u003cdd\u003e\n  Like block except that it\u0027s expected that the element will be used with a paragraph view so a paragraph element won\u0027t need to be synthesized. \n \u003c/dd\u003e\n \u003cdt\u003e\n  Character \n \u003c/dt\u003e\n \u003cdd\u003e\n  Contribute the element as an attribute that will start and stop at arbitrary text locations. This will ultimately be mixed into a run of text, with all of the currently flattened HTML character elements. \n \u003c/dd\u003e\n \u003cdt\u003e\n  Special \n \u003c/dt\u003e\n \u003cdd\u003e\n  Produce an embedded graphical element. \n \u003c/dd\u003e\n \u003cdt\u003e\n  Form \n \u003c/dt\u003e\n \u003cdd\u003e\n  Produce an element that is like the embedded graphical element, except that it also has a component model associated with it. \n \u003c/dd\u003e\n \u003cdt\u003e\n  Hidden \n \u003c/dt\u003e\n \u003cdd\u003e\n  Create an element that is hidden from view when the document is being viewed read-only, and visible when the document is being edited. This is useful to keep the model from losing information, and used to store things like comments and unrecognized tags. \n \u003c/dd\u003e\n\u003c/dl\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e Currently, \u0026lt;APPLET\u0026gt;, \u0026lt;PARAM\u0026gt;, \u0026lt;MAP\u0026gt;, \u0026lt;AREA\u0026gt;, \u0026lt;LINK\u0026gt;, \u0026lt;SCRIPT\u0026gt; and \u0026lt;STYLE\u0026gt; are unsupported. \u003c/p\u003e\n\u003cp\u003e The assignment of the actions described is shown in the following table for the tags defined in \u003ccode\u003eHTML.Tag\u003c/code\u003e. \u003c/p\u003e\n\u003ctable class\u003d\"striped\"\u003e \n \u003ccaption\u003e\n  HTML tags and assigned actions\n \u003c/caption\u003e \n \u003cthead\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"col\"\u003eTag \u003c/th\u003e\n   \u003cth scope\u003d\"col\"\u003eAction \u003c/th\u003e\n  \u003c/tr\u003e\n \u003c/thead\u003e \n \u003ctbody\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.A\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.ADDRESS\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.APPLET\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eHiddenAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.AREA\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eAreaAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.B\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.BASE\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBaseAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.BASEFONT\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.BIG\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.BLOCKQUOTE\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.BODY\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.BR\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eSpecialAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.CAPTION\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.CENTER\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.CITE\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.CODE\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.DD\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.DFN\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.DIR\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.DIV\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.DL\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.DT\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eParagraphAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.EM\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.FONT\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.FORM\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eAs of 1.4 a BlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.FRAME\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eSpecialAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.FRAMESET\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.H1\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eParagraphAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.H2\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eParagraphAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.H3\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eParagraphAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.H4\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eParagraphAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.H5\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eParagraphAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.H6\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eParagraphAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.HEAD\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eHeadAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.HR\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eSpecialAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.HTML\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.I\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.IMG\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eSpecialAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.INPUT\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eFormAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.ISINDEX\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eIsndexAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.KBD\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.LI\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.LINK\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eLinkAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.MAP\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eMapAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.MENU\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.META\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eMetaAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.NOFRAMES\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.OBJECT\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eSpecialAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.OL\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.OPTION\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eFormAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.P\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eParagraphAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.PARAM\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eHiddenAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.PRE\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003ePreAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.SAMP\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.SCRIPT\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eHiddenAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.SELECT\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eFormAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.SMALL\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.STRIKE\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.S\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.STRONG\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.STYLE\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eStyleAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.SUB\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.SUP\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.TABLE\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.TD\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.TEXTAREA\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eFormAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.TH\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.TITLE\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eTitleAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.TR\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.TT\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.U\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.UL\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eBlockAction \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003e\u003ccode\u003eHTML.Tag.VAR\u003c/code\u003e \u003c/th\u003e\n   \u003ctd\u003eCharacterAction \u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e \n\u003c/table\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e Once \u0026lt;/html\u0026gt; is encountered, the Actions are no longer notified.\u003c/p\u003e",
  "tagMap": {}
}