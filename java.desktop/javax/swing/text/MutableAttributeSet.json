{
  "packageName": "javax.swing.text",
  "simpleName": "MutableAttributeSet",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.swing.text.AttributeSet",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addAttribute",
      "comment": "Creates a new attribute set similar to this one except that it contains an attribute with the given name and value. The object must be immutable, or not mutated by any client.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name",
          "\u003ccode\u003evalue\u003c/code\u003e - the value"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.AttributeSet",
            "type": "Class"
          },
          "field": {
            "name": "attributes"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addAttributes",
      "comment": "Creates a new attribute set similar to this one except that it contains the given attributes and values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eattributes\u003c/code\u003e - the set of attributes"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeAttribute",
      "comment": "Removes an attribute with the given name.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the attribute name"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Enumeration",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "names"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeAttributes",
      "comment": "Removes an attribute set with the given names.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enames\u003c/code\u003e - the set of names"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.AttributeSet",
            "type": "Class"
          },
          "field": {
            "name": "attributes"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeAttributes",
      "comment": "Removes a set of attributes with the given name.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eattributes\u003c/code\u003e - the set of attributes"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.AttributeSet",
            "type": "Class"
          },
          "field": {
            "name": "parent"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setResolveParent",
      "comment": "Sets the resolving parent. This is the set of attributes to resolve through if an attribute isn\u0027t defined locally.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eparent\u003c/code\u003e - the parent"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.swing.text.MutableAttributeSet",
  "comment": "A generic interface for a mutable collection of unique attributes. Implementations will probably want to provide a constructor of the form: \n\u003cpre\u003e\u003ccode\u003e\n public XXXAttributeSet(ConstAttributeSet source);\u003c/code\u003e\u003c/pre\u003e",
  "tagMap": {}
}