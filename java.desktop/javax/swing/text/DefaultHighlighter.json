{
  "packageName": "javax.swing.text",
  "simpleName": "DefaultHighlighter",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.text.LayeredHighlighter",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.swing.text.LayeredHighlighter$LayerPainter",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DefaultPainter",
      "comment": "Default implementation of LayeredHighlighter.LayerPainter that can be used for painting highlights. As of 1.4 this field is final.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "name": "g",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "paint",
      "comment": "Renders the highlights.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eg\u003c/code\u003e - the graphics context"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "install",
      "comment": "Called when the UI is being installed into the interface of a JTextComponent. Installs the editor, and removes any existing highlights.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/Highlighter.html#install(javax.swing.text.JTextComponent)\"\u003e\u003ccode\u003eHighlighter.install(javax.swing.text.JTextComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the editor component"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "deinstall",
      "comment": "Called when the UI is being removed from the interface of a JTextComponent.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/Highlighter.html#deinstall(javax.swing.text.JTextComponent)\"\u003e\u003ccode\u003eHighlighter.deinstall(javax.swing.text.JTextComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.text.BadLocationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "p0",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "p1",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.Highlighter$HighlightPainter",
            "type": "Class"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addHighlight",
      "comment": "Adds a highlight to the view. Returns a tag that can be used to refer to the highlight.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ep0\u003c/code\u003e - the start offset of the range to highlight \u0026gt;\u003d 0",
          "\u003ccode\u003ep1\u003c/code\u003e - the end offset of the range to highlight \u0026gt;\u003d p0",
          "\u003ccode\u003ep\u003c/code\u003e - the painter to use to actually render the highlight"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if the specified location is invalid"
        ],
        "return": [
          "an object that can be used as a tag to refer to the highlight"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "tag",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeHighlight",
      "comment": "Removes a highlight from the view.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etag\u003c/code\u003e - the reference to the highlight"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeAllHighlights",
      "comment": "Removes all highlights.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.text.BadLocationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "tag",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "p0",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "p1",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "changeHighlight",
      "comment": "Changes a highlight.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etag\u003c/code\u003e - the highlight tag",
          "\u003ccode\u003ep0\u003c/code\u003e - the beginning of the range \u0026gt;\u003d 0",
          "\u003ccode\u003ep1\u003c/code\u003e - the end of the range \u0026gt;\u003d p0"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if the specified location is invalid"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.Highlighter$Highlight",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHighlights",
      "comment": "Makes a copy of the highlights. Does not actually clone each highlight, but only makes references to them.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/Highlighter.html#getHighlights()\"\u003e\u003ccode\u003eHighlighter.getHighlights()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the copy"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "name": "g",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "p0",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "p1",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Shape",
            "type": "Class"
          },
          "name": "viewBounds",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "name": "editor",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.View",
            "type": "Class"
          },
          "name": "view",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "paintLayeredHighlights",
      "comment": "When leaf Views (such as LabelView) are rendering they should call into this method. If a highlight is in the given region it will be drawn immediately.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/LayeredHighlighter.html#paintLayeredHighlights(java.awt.Graphics,int,int,java.awt.Shape,javax.swing.text.JTextComponent,javax.swing.text.View)\"\u003epaintLayeredHighlights\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/LayeredHighlighter.html\" title\u003d\"class in javax.swing.text\"\u003eLayeredHighlighter\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eg\u003c/code\u003e - Graphics used to draw",
          "\u003ccode\u003ep0\u003c/code\u003e - starting offset of view",
          "\u003ccode\u003ep1\u003c/code\u003e - ending offset of view",
          "\u003ccode\u003eviewBounds\u003c/code\u003e - Bounds of View",
          "\u003ccode\u003eeditor\u003c/code\u003e - JTextComponent",
          "\u003ccode\u003eview\u003c/code\u003e - View instance being rendered"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "newValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDrawsLayeredHighlights",
      "comment": "If true, highlights are drawn as the Views draw the text. That is the Views will call into paintLayeredHighlight which will result in a rectangle being drawn before the text is drawn (if the offsets are in a highlighted region that is). For this to work the painter supplied must be an instance of LayeredHighlightPainter.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enewValue\u003c/code\u003e - the new value"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDrawsLayeredHighlights",
      "comment": "Return the draw layered highlights.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the draw layered highlights"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new DefaultHighlighther object.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "innerClasses": [
    "javax.swing.text.DefaultHighlighter$DefaultHighlightPainter"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.text.DefaultHighlighter",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/Highlighter.html\" title\u003d\"interface in javax.swing.text\"\u003e\u003ccode\u003eHighlighter\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}