{
  "packageName": "javax.swing.text",
  "simpleName": "AttributeContext",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.swing.text.AttributeSet",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addAttribute",
      "comment": "Adds an attribute to the given set, and returns the new representative set.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/MutableAttributeSet.html#addAttribute(java.lang.Object,java.lang.Object)\"\u003e\u003ccode\u003eMutableAttributeSet.addAttribute(java.lang.Object, java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eold\u003c/code\u003e - the old attribute set",
          "\u003ccode\u003ename\u003c/code\u003e - the non-null attribute name",
          "\u003ccode\u003evalue\u003c/code\u003e - the attribute value"
        ],
        "return": [
          "the updated attribute set"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.AttributeSet",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addAttributes",
      "comment": "Adds a set of attributes to the element.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/MutableAttributeSet.html#addAttribute(java.lang.Object,java.lang.Object)\"\u003e\u003ccode\u003eMutableAttributeSet.addAttribute(java.lang.Object, java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eold\u003c/code\u003e - the old attribute set",
          "\u003ccode\u003eattr\u003c/code\u003e - the attributes to add"
        ],
        "return": [
          "the updated attribute set"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.AttributeSet",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeAttribute",
      "comment": "Removes an attribute from the set.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/MutableAttributeSet.html#removeAttribute(java.lang.Object)\"\u003e\u003ccode\u003eMutableAttributeSet.removeAttribute(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eold\u003c/code\u003e - the old attribute set",
          "\u003ccode\u003ename\u003c/code\u003e - the non-null attribute name"
        ],
        "return": [
          "the updated attribute set"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.AttributeSet",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeAttributes",
      "comment": "Removes a set of attributes for the element.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/MutableAttributeSet.html#removeAttributes(java.util.Enumeration)\"\u003e\u003ccode\u003eMutableAttributeSet.removeAttributes(java.util.Enumeration\u0026lt;?\u0026gt;)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eold\u003c/code\u003e - the old attribute set",
          "\u003ccode\u003enames\u003c/code\u003e - the attribute names"
        ],
        "return": [
          "the updated attribute set"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.AttributeSet",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeAttributes",
      "comment": "Removes a set of attributes for the element.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/MutableAttributeSet.html#removeAttributes(java.util.Enumeration)\"\u003e\u003ccode\u003eMutableAttributeSet.removeAttributes(java.util.Enumeration\u0026lt;?\u0026gt;)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eold\u003c/code\u003e - the old attribute set",
          "\u003ccode\u003eattrs\u003c/code\u003e - the attributes"
        ],
        "return": [
          "the updated attribute set"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.AttributeSet",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEmptySet",
      "comment": "Fetches an empty AttributeSet.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the attribute set"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "reclaim",
      "comment": "Reclaims an attribute set. This is a way for a MutableAttributeSet to mark that it no longer need a particular immutable set. This is only necessary in 1.1 where there are no weak references. A 1.1 implementation would call this in its finalize method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ea\u003c/code\u003e - the attribute set to reclaim"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 521,
  "name": "javax.swing.text.AbstractDocument$AttributeContext",
  "comment": "An interface that can be used to allow MutableAttributeSet implementations to use pluggable attribute compression techniques. Each mutation of the attribute set can be used to exchange a previous AttributeSet instance with another, preserving the possibility of the AttributeSet remaining immutable. An implementation is provided by the StyleContext class. The Element implementations provided by this class use this interface to provide their MutableAttributeSet implementations, so that different AttributeSet compression techniques can be employed. The method \n\u003ccode\u003egetAttributeContext\u003c/code\u003e should be implemented to return the object responsible for implementing the desired compression technique.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/StyleContext.html\" title\u003d\"class in javax.swing.text\"\u003e\u003ccode\u003eStyleContext\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}