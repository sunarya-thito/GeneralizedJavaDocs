{
  "packageName": "javax.swing.text",
  "simpleName": "DateFormatter",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.text.InternationalFormatter",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setFormat",
      "comment": "Sets the format that dictates the legal values that can be edited and displayed. If you have used the nullary constructor the value of this property will be determined for the current locale by way of the Dateformat.getDateInstance() method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eformat\u003c/code\u003e - DateFormat instance used for converting from/to Strings"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "This is shorthand for new DateFormatter(DateFormat.getDateInstance()).",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.text.DateFormat",
            "type": "Class"
          },
          "name": "format",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Returns a DateFormatter configured with the specified Format instance.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eformat\u003c/code\u003e - Format used to dictate legal values"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.text.DateFormatter",
  "comment": "DateFormatter is an \n\u003ccode\u003eInternationalFormatter\u003c/code\u003e that does its formatting by way of an instance of \n\u003ccode\u003ejava.text.DateFormat\u003c/code\u003e. \n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/DateFormat.html\" title\u003d\"class in java.text\"\u003e\u003ccode\u003eDateFormat\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}