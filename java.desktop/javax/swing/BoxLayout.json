{
  "packageName": "javax.swing",
  "simpleName": "BoxLayout",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "X_AXIS",
      "comment": "Specifies that components should be laid out left to right.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.BoxLayout.X_AXIS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "Y_AXIS",
      "comment": "Specifies that components should be laid out top to bottom.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.BoxLayout.Y_AXIS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "LINE_AXIS",
      "comment": "Specifies that components should be laid out in the direction of a line of text as determined by the target container\u0027s ComponentOrientation property.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.BoxLayout.LINE_AXIS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PAGE_AXIS",
      "comment": "Specifies that components should be laid out in the direction that lines flow across a page as determined by the target container\u0027s ComponentOrientation property.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.BoxLayout.PAGE_AXIS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Container",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getTarget",
      "comment": "Returns the container that uses this layout manager.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the container that uses this layout manager"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getAxis",
      "comment": "Returns the axis that was used to lay out components. Returns one of: BoxLayout.X_AXIS, BoxLayout.Y_AXIS, BoxLayout.LINE_AXIS or BoxLayout.PAGE_AXIS",
      "annotations": [],
      "tagMap": {
        "return": [
          "the axis that was used to lay out components"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "invalidateLayout",
      "comment": "Indicates that a child has changed its layout related information, and thus any cached calculations should be flushed. This method is called by AWT when the invalidate method is called on the Container. Since the invalidate method may be called asynchronously to the event thread, this method may be called asynchronously.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#invalidateLayout(java.awt.Container)\"\u003einvalidateLayout\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the affected container"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTError.html\" title\u003d\"class in java.awt\"\u003eAWTError\u003c/a\u003e\u003c/code\u003e - if the target isn\u0027t the container specified to the BoxLayout constructor"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addLayoutComponent",
      "comment": "Not used by this class.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#addLayoutComponent(java.lang.String,java.awt.Component)\"\u003eaddLayoutComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the component",
          "\u003ccode\u003ecomp\u003c/code\u003e - the component"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeLayoutComponent",
      "comment": "Not used by this class.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#removeLayoutComponent(java.awt.Component)\"\u003eremoveLayoutComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomp\u003c/code\u003e - the component"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addLayoutComponent",
      "comment": "Not used by this class.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#addLayoutComponent(java.awt.Component,java.lang.Object)\"\u003eaddLayoutComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomp\u003c/code\u003e - the component",
          "\u003ccode\u003econstraints\u003c/code\u003e - constraints"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "preferredLayoutSize",
      "comment": "Returns the preferred dimensions for this layout, given the components in the specified target container.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eContainer\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoxLayout.html#minimumLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003eminimumLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoxLayout.html#maximumLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003emaximumLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#preferredLayoutSize(java.awt.Container)\"\u003epreferredLayoutSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the container that needs to be laid out"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTError.html\" title\u003d\"class in java.awt\"\u003eAWTError\u003c/a\u003e\u003c/code\u003e - if the target isn\u0027t the container specified to the BoxLayout constructor"
        ],
        "return": [
          "the dimensions \u0026gt;\u003d 0 \u0026amp;\u0026amp; \u0026lt;\u003d Integer.MAX_VALUE"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "minimumLayoutSize",
      "comment": "Returns the minimum dimensions needed to lay out the components contained in the specified target container.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoxLayout.html#preferredLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003epreferredLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoxLayout.html#maximumLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003emaximumLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#minimumLayoutSize(java.awt.Container)\"\u003eminimumLayoutSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the container that needs to be laid out"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTError.html\" title\u003d\"class in java.awt\"\u003eAWTError\u003c/a\u003e\u003c/code\u003e - if the target isn\u0027t the container specified to the BoxLayout constructor"
        ],
        "return": [
          "the dimensions \u0026gt;\u003d 0 \u0026amp;\u0026amp; \u0026lt;\u003d Integer.MAX_VALUE"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "maximumLayoutSize",
      "comment": "Returns the maximum dimensions the target container can use to lay out the components it contains.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoxLayout.html#preferredLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003epreferredLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoxLayout.html#minimumLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003eminimumLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#maximumLayoutSize(java.awt.Container)\"\u003emaximumLayoutSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the container that needs to be laid out"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTError.html\" title\u003d\"class in java.awt\"\u003eAWTError\u003c/a\u003e\u003c/code\u003e - if the target isn\u0027t the container specified to the BoxLayout constructor"
        ],
        "return": [
          "the dimensions \u0026gt;\u003d 0 \u0026amp;\u0026amp; \u0026lt;\u003d Integer.MAX_VALUE"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLayoutAlignmentX",
      "comment": "Returns the alignment along the X axis for the container. If the box is horizontal, the default alignment will be returned. Otherwise, the alignment needed to place the children along the X axis will be returned.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#getLayoutAlignmentX(java.awt.Container)\"\u003egetLayoutAlignmentX\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the container"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTError.html\" title\u003d\"class in java.awt\"\u003eAWTError\u003c/a\u003e\u003c/code\u003e - if the target isn\u0027t the container specified to the BoxLayout constructor"
        ],
        "return": [
          "the alignment \u0026gt;\u003d 0.0f \u0026amp;\u0026amp; \u0026lt;\u003d 1.0f"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLayoutAlignmentY",
      "comment": "Returns the alignment along the Y axis for the container. If the box is vertical, the default alignment will be returned. Otherwise, the alignment needed to place the children along the Y axis will be returned.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#getLayoutAlignmentY(java.awt.Container)\"\u003egetLayoutAlignmentY\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the container"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTError.html\" title\u003d\"class in java.awt\"\u003eAWTError\u003c/a\u003e\u003c/code\u003e - if the target isn\u0027t the container specified to the BoxLayout constructor"
        ],
        "return": [
          "the alignment \u0026gt;\u003d 0.0f \u0026amp;\u0026amp; \u0026lt;\u003d 1.0f"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "layoutContainer",
      "comment": "Called by the AWT when the specified container needs to be laid out.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#layoutContainer(java.awt.Container)\"\u003elayoutContainer\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the container to lay out"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTError.html\" title\u003d\"class in java.awt\"\u003eAWTError\u003c/a\u003e\u003c/code\u003e - if the target isn\u0027t the container specified to the BoxLayout constructor"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "name": "target",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "axis",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a layout manager that will lay out components along the given axis.",
      "annotations": [
        {
          "type": {
            "name": "ConstructorProperties",
            "type": "Class"
          },
          "values": [
            {
              "name": "value",
              "value": [
                "target",
                "axis"
              ]
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the container that needs to be laid out",
          "\u003ccode\u003eaxis\u003c/code\u003e - the axis to lay out components along. Can be one of: \n\u003ccode\u003eBoxLayout.X_AXIS, BoxLayout.Y_AXIS, BoxLayout.LINE_AXIS\u003c/code\u003e or \n\u003ccode\u003eBoxLayout.PAGE_AXIS\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTError.html\" title\u003d\"class in java.awt\"\u003eAWTError\u003c/a\u003e\u003c/code\u003e - if the value of \n\u003ccode\u003eaxis\u003c/code\u003e is invalid"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.BoxLayout",
  "comment": "A layout manager that allows multiple components to be laid out either vertically or horizontally. The components will not wrap so, for example, a vertical arrangement of components will stay vertically arranged when the frame is resized. \n\u003cdiv style\u003d\"float:right;text-align:center\"\u003e \n \u003cp\u003e\u003cb\u003eExample:\u003c/b\u003e \u003c/p\u003e\n \u003cp\u003e\u003cimg src\u003d\"doc-files/BoxLayout-1.gif\" alt\u003d\"The following text describes this graphic.\" width\u003d\"191\" height\u003d\"201\"\u003e \u003c/p\u003e\n\u003c/div\u003e \n\u003cp\u003e Nesting multiple panels with different combinations of horizontal and vertical gives an effect similar to GridBagLayout, without the complexity. The diagram shows two panels arranged horizontally, each of which contains 3 components arranged vertically. \u003c/p\u003e\n\u003cp\u003e The BoxLayout manager is constructed with an axis parameter that specifies the type of layout that will be done. There are four choices: \u003c/p\u003e\n\u003cblockquote\u003e\n \u003cb\u003e\u003ccode\u003eX_AXIS\u003c/code\u003e\u003c/b\u003e - Components are laid out horizontally from left to right.\n\u003c/blockquote\u003e \n\u003cblockquote\u003e\n \u003cb\u003e\u003ccode\u003eY_AXIS\u003c/code\u003e\u003c/b\u003e - Components are laid out vertically from top to bottom.\n\u003c/blockquote\u003e \n\u003cblockquote\u003e\n \u003cb\u003e\u003ccode\u003eLINE_AXIS\u003c/code\u003e\u003c/b\u003e - Components are laid out the way words are laid out in a line, based on the container\u0027s \n \u003ccode\u003eComponentOrientation\u003c/code\u003e property. If the container\u0027s \n \u003ccode\u003eComponentOrientation\u003c/code\u003e is horizontal then components are laid out horizontally, otherwise they are laid out vertically. For horizontal orientations, if the container\u0027s \n \u003ccode\u003eComponentOrientation\u003c/code\u003e is left to right then components are laid out left to right, otherwise they are laid out right to left. For vertical orientations components are always laid out from top to bottom.\n\u003c/blockquote\u003e \n\u003cblockquote\u003e\n \u003cb\u003e\u003ccode\u003ePAGE_AXIS\u003c/code\u003e\u003c/b\u003e - Components are laid out the way text lines are laid out on a page, based on the container\u0027s \n \u003ccode\u003eComponentOrientation\u003c/code\u003e property. If the container\u0027s \n \u003ccode\u003eComponentOrientation\u003c/code\u003e is horizontal then components are laid out vertically, otherwise they are laid out horizontally. For horizontal orientations, if the container\u0027s \n \u003ccode\u003eComponentOrientation\u003c/code\u003e is left to right then components are laid out left to right, otherwise they are laid out right to left.\u0026nbsp; For vertical orientations components are always laid out from top to bottom.\n\u003c/blockquote\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e For all directions, components are arranged in the same order as they were added to the container. \u003c/p\u003e\n\u003cp\u003e BoxLayout attempts to arrange components at their preferred widths (for horizontal layout) or heights (for vertical layout). For a horizontal layout, if not all the components are the same height, BoxLayout attempts to make all the components as high as the highest component. If that\u0027s not possible for a particular component, then BoxLayout aligns that component vertically, according to the component\u0027s Y alignment. By default, a component has a Y alignment of 0.5, which means that the vertical center of the component should have the same Y coordinate as the vertical centers of other components with 0.5 Y alignment. \u003c/p\u003e\n\u003cp\u003e Similarly, for a vertical layout, BoxLayout attempts to make all components in the column as wide as the widest component. If that fails, it aligns them horizontally according to their X alignments. For \u003ccode\u003ePAGE_AXIS\u003c/code\u003e layout, horizontal alignment is done based on the leading edge of the component. In other words, an X alignment value of 0.0 means the left edge of a component if the container\u0027s \u003ccode\u003eComponentOrientation\u003c/code\u003e is left to right and it means the right edge of the component otherwise. \u003c/p\u003e\n\u003cp\u003e Instead of using BoxLayout directly, many programs use the Box class. The Box class is a lightweight container that uses a BoxLayout. It also provides handy methods to help you use BoxLayout well. Adding components to multiple nested boxes is a powerful way to get the arrangement you want. \u003c/p\u003e\n\u003cp\u003e For further information and examples see \u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/layout/box.html\"\u003eHow to Use BoxLayout\u003c/a\u003e, a section in \u003cem\u003eThe Java Tutorial.\u003c/em\u003e \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Box.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eBox\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/ComponentOrientation.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eComponentOrientation\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getAlignmentX()\"\u003e\u003ccode\u003eJComponent.getAlignmentX()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getAlignmentY()\"\u003e\u003ccode\u003eJComponent.getAlignmentY()\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}