{
  "packageName": "javax.swing",
  "simpleName": "ScrollPaneLayout",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.swing.JViewport",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "viewport",
      "comment": "The scrollpane\u0027s viewport child. Default is an empty JViewport.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#setViewport(javax.swing.JViewport)\"\u003e\u003ccode\u003eJScrollPane.setViewport(javax.swing.JViewport)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.swing.JScrollBar",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "vsb",
      "comment": "The scrollpane\u0027s vertical scrollbar child. Default is a JScrollBar.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#setVerticalScrollBar(javax.swing.JScrollBar)\"\u003e\u003ccode\u003eJScrollPane.setVerticalScrollBar(javax.swing.JScrollBar)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.swing.JScrollBar",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "hsb",
      "comment": "The scrollpane\u0027s horizontal scrollbar child. Default is a JScrollBar.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#setHorizontalScrollBar(javax.swing.JScrollBar)\"\u003e\u003ccode\u003eJScrollPane.setHorizontalScrollBar(javax.swing.JScrollBar)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.swing.JViewport",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "rowHead",
      "comment": "The row header child. Default is null.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#setRowHeader(javax.swing.JViewport)\"\u003e\u003ccode\u003eJScrollPane.setRowHeader(javax.swing.JViewport)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.swing.JViewport",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "colHead",
      "comment": "The column header child. Default is null.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#setColumnHeader(javax.swing.JViewport)\"\u003e\u003ccode\u003eJScrollPane.setColumnHeader(javax.swing.JViewport)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "lowerLeft",
      "comment": "The component to display in the lower left corner. Default is null.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#setCorner(java.lang.String,java.awt.Component)\"\u003e\u003ccode\u003eJScrollPane.setCorner(java.lang.String, java.awt.Component)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "lowerRight",
      "comment": "The component to display in the lower right corner. Default is null.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#setCorner(java.lang.String,java.awt.Component)\"\u003e\u003ccode\u003eJScrollPane.setCorner(java.lang.String, java.awt.Component)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "upperLeft",
      "comment": "The component to display in the upper left corner. Default is null.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#setCorner(java.lang.String,java.awt.Component)\"\u003e\u003ccode\u003eJScrollPane.setCorner(java.lang.String, java.awt.Component)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "upperRight",
      "comment": "The component to display in the upper right corner. Default is null.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#setCorner(java.lang.String,java.awt.Component)\"\u003e\u003ccode\u003eJScrollPane.setCorner(java.lang.String, java.awt.Component)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "vsbPolicy",
      "comment": "The display policy for the vertical scrollbar. The default is ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED. This field is obsolete, please use the JScrollPane field instead.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#setVerticalScrollBarPolicy(int)\"\u003e\u003ccode\u003eJScrollPane.setVerticalScrollBarPolicy(int)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "hsbPolicy",
      "comment": "The display policy for the horizontal scrollbar. The default is ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED. This field is obsolete, please use the JScrollPane field instead.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#setHorizontalScrollBarPolicy(int)\"\u003e\u003ccode\u003eJScrollPane.setHorizontalScrollBarPolicy(int)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JScrollPane",
            "type": "Class"
          },
          "field": {
            "name": "sp"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "syncWithScrollPane",
      "comment": "This method is invoked after the ScrollPaneLayout is set as the LayoutManager of a JScrollPane. It initializes all of the internal fields that are ordinarily set by addLayoutComponent. For example:  ScrollPaneLayout mySPLayout \u003d new ScrollPanelLayout() {\n     public void layoutContainer(Container p) {\n         super.layoutContainer(p);\n         // do some extra work here ...\n     }\n };\n scrollpane.setLayout(mySPLayout):",
      "tagMap": {
        "param": [
          "\u003ccode\u003esp\u003c/code\u003e - an instance of the \n\u003ccode\u003eJScrollPane\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "oldC"
          }
        },
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "newC"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "addSingletonComponent",
      "comment": "Removes an existing component. When a new component, such as the left corner, or vertical scrollbar, is added, the old one, if it exists, must be removed. This method returns newC. If oldC is not equal to newC and is non-null, it will be removed from its parent.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eoldC\u003c/code\u003e - the \n\u003ccode\u003eComponent\u003c/code\u003e to replace",
          "\u003ccode\u003enewC\u003c/code\u003e - the \n\u003ccode\u003eComponent\u003c/code\u003e to add"
        ],
        "return": [
          "the \n\u003ccode\u003enewC\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        },
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addLayoutComponent",
      "comment": "Adds the specified component to the layout. The layout is identified using one of: ScrollPaneConstants.VIEWPORT ScrollPaneConstants.VERTICAL_SCROLLBAR ScrollPaneConstants.HORIZONTAL_SCROLLBAR ScrollPaneConstants.ROW_HEADER ScrollPaneConstants.COLUMN_HEADER ScrollPaneConstants.LOWER_LEFT_CORNER ScrollPaneConstants.LOWER_RIGHT_CORNER ScrollPaneConstants.UPPER_LEFT_CORNER ScrollPaneConstants.UPPER_RIGHT_CORNER",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#addLayoutComponent(java.lang.String,java.awt.Component)\"\u003eaddLayoutComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the component identifier",
          "\u003ccode\u003ec\u003c/code\u003e - the component to be added"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003es\u003c/code\u003e is an invalid key"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeLayoutComponent",
      "comment": "Removes the specified component from the layout.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#removeLayoutComponent(java.awt.Component)\"\u003eremoveLayoutComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getVerticalScrollBarPolicy",
      "comment": "Returns the vertical scrollbar-display policy.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ScrollPaneLayout.html#setVerticalScrollBarPolicy(int)\"\u003e\u003ccode\u003esetVerticalScrollBarPolicy(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an integer giving the display policy"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setVerticalScrollBarPolicy",
      "comment": "Sets the vertical scrollbar-display policy. The options are: ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS Note: Applications should use the JScrollPane version of this method. It only exists for backwards compatibility with the Swing 1.0.2 (and earlier) versions of this class.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - an integer giving the display policy"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ex\u003c/code\u003e is an invalid vertical scroll bar policy, as listed above"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHorizontalScrollBarPolicy",
      "comment": "Returns the horizontal scrollbar-display policy.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ScrollPaneLayout.html#setHorizontalScrollBarPolicy(int)\"\u003e\u003ccode\u003esetHorizontalScrollBarPolicy(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an integer giving the display policy"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setHorizontalScrollBarPolicy",
      "comment": "Sets the horizontal scrollbar-display policy. The options are: ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS Note: Applications should use the JScrollPane version of this method. It only exists for backwards compatibility with the Swing 1.0.2 (and earlier) versions of this class.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - an int giving the display policy"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ex\u003c/code\u003e is not a valid horizontal scrollbar policy, as listed above"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JViewport",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getViewport",
      "comment": "Returns the JViewport object that displays the scrollable contents.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#getViewport()\"\u003e\u003ccode\u003eJScrollPane.getViewport()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eJViewport\u003c/code\u003e object that displays the scrollable contents"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JScrollBar",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHorizontalScrollBar",
      "comment": "Returns the JScrollBar object that handles horizontal scrolling.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#getHorizontalScrollBar()\"\u003e\u003ccode\u003eJScrollPane.getHorizontalScrollBar()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eJScrollBar\u003c/code\u003e object that handles horizontal scrolling"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JScrollBar",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getVerticalScrollBar",
      "comment": "Returns the JScrollBar object that handles vertical scrolling.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#getVerticalScrollBar()\"\u003e\u003ccode\u003eJScrollPane.getVerticalScrollBar()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eJScrollBar\u003c/code\u003e object that handles vertical scrolling"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JViewport",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRowHeader",
      "comment": "Returns the JViewport object that is the row header.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#getRowHeader()\"\u003e\u003ccode\u003eJScrollPane.getRowHeader()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eJViewport\u003c/code\u003e object that is the row header"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JViewport",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColumnHeader",
      "comment": "Returns the JViewport object that is the column header.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#getColumnHeader()\"\u003e\u003ccode\u003eJScrollPane.getColumnHeader()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eJViewport\u003c/code\u003e object that is the column header"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCorner",
      "comment": "Returns the Component at the specified corner.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html#getCorner(java.lang.String)\"\u003e\u003ccode\u003eJScrollPane.getCorner(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the \n\u003ccode\u003eString\u003c/code\u003e specifying the corner"
        ],
        "return": [
          "the \n\u003ccode\u003eComponent\u003c/code\u003e at the specified corner, as defined in \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ScrollPaneConstants.html\" title\u003d\"interface in javax.swing\"\u003e\u003ccode\u003eScrollPaneConstants\u003c/code\u003e\u003c/a\u003e; if \n\u003ccode\u003ekey\u003c/code\u003e is not one of the four corners, \n\u003ccode\u003enull\u003c/code\u003e is returned"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "parent"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "preferredLayoutSize",
      "comment": "The preferred size of a ScrollPane is the size of the insets, plus the preferred size of the viewport, plus the preferred size of the visible headers, plus the preferred size of the scrollbars that will appear given the current view and the current scrollbar displayPolicies. Note that the rowHeader is calculated as part of the preferred width and the colHeader is calculated as part of the preferred size.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ViewportLayout.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eViewportLayout\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003eLayoutManager\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#preferredLayoutSize(java.awt.Container)\"\u003epreferredLayoutSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eparent\u003c/code\u003e - the \n\u003ccode\u003eContainer\u003c/code\u003e that will be laid out"
        ],
        "return": [
          "a \n\u003ccode\u003eDimension\u003c/code\u003e object specifying the preferred size of the viewport and any scrollbars"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "parent"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "minimumLayoutSize",
      "comment": "The minimum size of a ScrollPane is the size of the insets plus minimum size of the viewport, plus the scrollpane\u0027s viewportBorder insets, plus the minimum size of the visible headers, plus the minimum size of the scrollbars whose displayPolicy isn\u0027t NEVER.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#preferredLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003eLayoutManager.preferredLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#minimumLayoutSize(java.awt.Container)\"\u003eminimumLayoutSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eparent\u003c/code\u003e - the \n\u003ccode\u003eContainer\u003c/code\u003e that will be laid out"
        ],
        "return": [
          "a \n\u003ccode\u003eDimension\u003c/code\u003e object specifying the minimum size"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "parent"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "layoutContainer",
      "comment": "Lays out the scrollpane. The positioning of components depends on the following constraints: The row header, if present and visible, gets its preferred width and the viewport\u0027s height. The column header, if present and visible, gets its preferred height and the viewport\u0027s width. If a vertical scrollbar is needed, i.e. if the viewport\u0027s extent height is smaller than its view height or if the displayPolicy is ALWAYS, it\u0027s treated like the row header with respect to its dimensions and is made visible. If a horizontal scrollbar is needed, it is treated like the column header (see the paragraph above regarding the vertical scrollbar). If the scrollpane has a non-null viewportBorder, then space is allocated for that. The viewport gets the space available after accounting for the previous constraints. The corner components, if provided, are aligned with the ends of the scrollbars and headers. If there is a vertical scrollbar, the right corners appear; if there is a horizontal scrollbar, the lower corners appear; a row header gets left corners, and a column header gets upper corners.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#layoutContainer(java.awt.Container)\"\u003elayoutContainer\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eparent\u003c/code\u003e - the \n\u003ccode\u003eContainer\u003c/code\u003e to lay out"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Rectangle",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JScrollPane",
            "type": "Class"
          },
          "field": {
            "name": "scrollpane"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getViewportBorderBounds",
      "comment": "Returns the bounds of the border around the specified scroll pane\u0027s viewport.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003escrollpane\u003c/code\u003e - an instance of the \n\u003ccode\u003eJScrollPane\u003c/code\u003e"
        ],
        "return": [
          "the size and position of the viewport border"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a ScrollPaneLayout.",
      "tagMap": {}
    }
  ],
  "innerClasses": [
    "javax.swing.ScrollPaneLayout$UIResource"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.ScrollPaneLayout",
  "comment": "The layout manager used by \n\u003ccode\u003eJScrollPane\u003c/code\u003e. \n\u003ccode\u003eJScrollPaneLayout\u003c/code\u003e is responsible for nine components: a viewport, two scrollbars, a row header, a column header, and four \"corner\" components. \n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JScrollPane.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJScrollPane\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JViewport.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJViewport\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}