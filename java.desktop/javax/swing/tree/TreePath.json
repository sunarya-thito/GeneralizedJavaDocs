{
  "packageName": "javax.swing.tree",
  "simpleName": "TreePath",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPath",
      "comment": "Returns an ordered array of the elements of this TreePath. The first element is the root.",
      "tagMap": {
        "return": [
          "an array of the elements in this \n\u003ccode\u003eTreePath\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLastPathComponent",
      "comment": "Returns the last element of this path.",
      "tagMap": {
        "return": [
          "the last element in the path"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPathCount",
      "comment": "Returns the number of elements in the path.",
      "tagMap": {
        "return": [
          "the number of elements in the path"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPathComponent",
      "comment": "Returns the path element at the specified index.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the element requested"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the index is outside the range of this path"
        ],
        "return": [
          "the element at the specified index"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "o"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares this TreePath to the specified object. This returns true if o is a TreePath with the exact same elements (as determined by using equals on each element of the path).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eo\u003c/code\u003e - the object to compare"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this object is the same as the obj argument; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns the hash code of this TreePath. The hash code of a TreePath is the hash code of the last element in the path.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the hashCode for the object"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.tree.TreePath",
            "type": "Class"
          },
          "field": {
            "name": "aTreePath"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isDescendant",
      "comment": "Returns true if aTreePath is a descendant of this TreePath. A TreePath P1 is a descendant of a TreePath P2 if P1 contains all of the elements that make up P2\u0027s path. For example, if this object has the path [a, b], and aTreePath has the path [a, b, c], then aTreePath is a descendant of this object. However, if aTreePath has the path [a], then it is not a descendant of this object. By this definition a TreePath is always considered a descendant of itself. That is, aTreePath.isDescendant(aTreePath) returns true.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eaTreePath\u003c/code\u003e - the \n\u003ccode\u003eTreePath\u003c/code\u003e to check"
        ],
        "return": [
          "true if \n\u003ccode\u003eaTreePath\u003c/code\u003e is a descendant of this path"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.tree.TreePath",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "child"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "pathByAddingChild",
      "comment": "Returns a new path containing all the elements of this path plus child. child is the last element of the newly created TreePath.",
      "tagMap": {
        "param": [
          "\u003ccode\u003echild\u003c/code\u003e - the path element to add"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003echild\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "a new path containing all the elements of this path plus \n\u003ccode\u003echild\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.tree.TreePath",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getParentPath",
      "comment": "Returns the TreePath of the parent. A return value of null indicates this is the root node.",
      "tagMap": {
        "return": [
          "the parent path"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string that displays and identifies this object\u0027s properties.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a String representation of this object"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "path"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a TreePath from an array. The array uniquely identifies the path to a node.",
      "annotations": [
        {
          "type": "ConstructorProperties",
          "values": [
            {
              "name": "value",
              "value": "path"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003epath\u003c/code\u003e - an array of objects representing the path to a node"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003epath\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, empty, or contains a \n\u003ccode\u003enull\u003c/code\u003e value"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "lastPathComponent"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a TreePath containing a single element. This is used to construct a TreePath identifying the root.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/TreePath.html#%3Cinit%3E(java.lang.Object)\"\u003e\u003ccode\u003eTreePath(Object[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elastPathComponent\u003c/code\u003e - the root"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elastPathComponent\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.swing.tree.TreePath",
            "type": "Class"
          },
          "field": {
            "name": "parent"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "lastPathComponent"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Creates a TreePath with the specified parent and element.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eparent\u003c/code\u003e - the path to the parent, or \n\u003ccode\u003enull\u003c/code\u003e to indicate the root",
          "\u003ccode\u003elastPathComponent\u003c/code\u003e - the last path element"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elastPathComponent\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "path"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "length"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Creates a TreePath from an array. The returned TreePath represents the elements of the array from 0 to length - 1. This constructor is used internally, and generally not useful outside of subclasses.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epath\u003c/code\u003e - the array to create the \n\u003ccode\u003eTreePath\u003c/code\u003e from",
          "\u003ccode\u003elength\u003c/code\u003e - identifies the number of elements in \n\u003ccode\u003epath\u003c/code\u003e to create the \n\u003ccode\u003eTreePath\u003c/code\u003e from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003epath\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elength - 1\u003c/code\u003e is outside the range of the array",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if any of the elements from \n\u003ccode\u003e0\u003c/code\u003e to \n\u003ccode\u003elength - 1\u003c/code\u003e are \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Creates an empty TreePath. This is provided for subclasses that represent paths in a different manner. Subclasses that use this constructor must override getLastPathComponent, and getParentPath.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.tree.TreePath",
  "comment": "\u003ccode\u003eTreePath\u003c/code\u003e represents an array of objects that uniquely identify the path to a node in a tree. The elements of the array are ordered with the root as the first element of the array. For example, a file on the file system is uniquely identified based on the array of parent directories and the name of the file. The path \n\u003ccode\u003e/tmp/foo/bar\u003c/code\u003e could be represented by a \n\u003ccode\u003eTreePath\u003c/code\u003e as \n\u003ccode\u003enew TreePath(new Object[] {\"tmp\", \"foo\", \"bar\"})\u003c/code\u003e. \n\u003cp\u003e \u003ccode\u003eTreePath\u003c/code\u003e is used extensively by \u003ccode\u003eJTree\u003c/code\u003e and related classes. For example, \u003ccode\u003eJTree\u003c/code\u003e represents the selection as an array of \u003ccode\u003eTreePath\u003c/code\u003es. When used with \u003ccode\u003eJTree\u003c/code\u003e, the elements of the path are the objects returned from the \u003ccode\u003eTreeModel\u003c/code\u003e. When \u003ccode\u003eJTree\u003c/code\u003e is paired with \u003ccode\u003eDefaultTreeModel\u003c/code\u003e, the elements of the path are \u003ccode\u003eTreeNode\u003c/code\u003es. The following example illustrates extracting the user object from the selection of a \u003ccode\u003eJTree\u003c/code\u003e: \u003c/p\u003e\n\u003cpre\u003e   DefaultMutableTreeNode root \u003d ...;\n   DefaultTreeModel model \u003d new DefaultTreeModel(root);\n   JTree tree \u003d new JTree(model);\n   ...\n   TreePath selectedPath \u003d tree.getSelectionPath();\n   DefaultMutableTreeNode selectedNode \u003d\n       ((DefaultMutableTreeNode)selectedPath.getLastPathComponent()).\n       getUserObject();\n \u003c/pre\u003e Subclasses typically need override only \n\u003ccode\u003e getLastPathComponent\u003c/code\u003e, and \n\u003ccode\u003egetParentPath\u003c/code\u003e. As \n\u003ccode\u003eJTree\u003c/code\u003e internally creates \n\u003ccode\u003eTreePath\u003c/code\u003es at various points, it\u0027s generally not useful to subclass \n\u003ccode\u003eTreePath\u003c/code\u003e and use with \n\u003ccode\u003eJTree\u003c/code\u003e. \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e While \u003ccode\u003eTreePath\u003c/code\u003e is serializable, a \u003ccode\u003e NotSerializableException\u003c/code\u003e is thrown if any elements of the path are not serializable. \u003c/p\u003e\n\u003cp\u003e For further information and examples of using tree paths, see \u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html\"\u003eHow to Use Trees\u003c/a\u003e in \u003cem\u003eThe Java Tutorial.\u003c/em\u003e \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {}
}