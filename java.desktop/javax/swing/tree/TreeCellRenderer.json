{
  "packageName": "javax.swing.tree",
  "simpleName": "TreeCellRenderer",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JTree",
            "type": "Class"
          },
          "field": {
            "name": "tree"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "selected"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "expanded"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "leaf"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "row"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "hasFocus"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTreeCellRendererComponent",
      "comment": "Sets the value of the current tree cell to value. If selected is true, the cell will be drawn as if selected. If expanded is true the node is currently expanded and if leaf is true the node represents a leaf and if hasFocus is true the node currently has focus. tree is the JTree the receiver is being configured for. Returns the Component that the renderer uses to draw the value. The TreeCellRenderer is also responsible for rendering the the cell representing the tree\u0027s current DnD drop location if it has one. If this renderer cares about rendering the DnD drop location, it should query the tree directly to see if the given row represents the drop location:      JTree.DropLocation dropLocation \u003d tree.getDropLocation();\n     if (dropLocation !\u003d null\n             \u0026\u0026 dropLocation.getChildIndex() \u003d\u003d -1\n             \u0026\u0026 tree.getRowForPath(dropLocation.getPath()) \u003d\u003d row) {\n\n         // this row represents the current drop location\n         // so render it specially, perhaps with a different color\n     }",
      "tagMap": {
        "param": [
          "\u003ccode\u003etree\u003c/code\u003e - the receiver is being configured for",
          "\u003ccode\u003evalue\u003c/code\u003e - the value to render",
          "\u003ccode\u003eselected\u003c/code\u003e - whether node is selected",
          "\u003ccode\u003eexpanded\u003c/code\u003e - whether node is expanded",
          "\u003ccode\u003eleaf\u003c/code\u003e - whether node is a lead node",
          "\u003ccode\u003erow\u003c/code\u003e - row index",
          "\u003ccode\u003ehasFocus\u003c/code\u003e - whether node has focus"
        ],
        "return": [
          "the \n\u003ccode\u003eComponent\u003c/code\u003e that the renderer uses to draw the value"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.swing.tree.TreeCellRenderer",
  "comment": "Defines the requirements for an object that displays a tree node. See \n\u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html\"\u003eHow to Use Trees\u003c/a\u003e in \n\u003cem\u003eThe Java Tutorial\u003c/em\u003e for an example of implementing a tree cell renderer that displays custom icons.",
  "tagMap": {}
}