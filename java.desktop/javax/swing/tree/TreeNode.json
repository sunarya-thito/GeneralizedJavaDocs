{
  "packageName": "javax.swing.tree",
  "simpleName": "TreeNode",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.swing.tree.TreeNode",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "childIndex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getChildAt",
      "comment": "Returns the child TreeNode at index childIndex.",
      "tagMap": {
        "param": [
          "\u003ccode\u003echildIndex\u003c/code\u003e - index of child"
        ],
        "return": [
          "the child node at given index"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getChildCount",
      "comment": "Returns the number of children TreeNodes the receiver contains.",
      "tagMap": {
        "return": [
          "the number of children the receiver contains"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.tree.TreeNode",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getParent",
      "comment": "Returns the parent TreeNode of the receiver.",
      "tagMap": {
        "return": [
          "the parent of the receiver"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.tree.TreeNode",
            "type": "Class"
          },
          "field": {
            "name": "node"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getIndex",
      "comment": "Returns the index of node in the receivers children. If the receiver does not contain node, -1 will be returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enode\u003c/code\u003e - node to be loked for"
        ],
        "return": [
          "index of specified node"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAllowsChildren",
      "comment": "Returns true if the receiver allows children.",
      "tagMap": {
        "return": [
          "whether the receiver allows children"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isLeaf",
      "comment": "Returns true if the receiver is a leaf.",
      "tagMap": {
        "return": [
          "whether the receiver is a leaf"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Enumeration",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "javax.swing.tree.TreeNode",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "children",
      "comment": "Returns the children of the receiver as an Enumeration.",
      "tagMap": {
        "return": [
          "the children of the receiver as an \n\u003ccode\u003eEnumeration\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.swing.tree.TreeNode",
  "comment": "Defines the requirements for an object that can be used as a tree node in a JTree. \n\u003cp\u003e Implementations of \u003ccode\u003eTreeNode\u003c/code\u003e that override \u003ccode\u003eequals\u003c/code\u003e will typically need to override \u003ccode\u003ehashCode\u003c/code\u003e as well. Refer to \u003ca href\u003d\"TreeModel.html\" title\u003d\"interface in javax.swing.tree\"\u003e\u003ccode\u003eTreeModel\u003c/code\u003e\u003c/a\u003e for more information. For further information and examples of using tree nodes, see \u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html\"\u003eHow to Use Tree Nodes\u003c/a\u003e in \u003cem\u003eThe Java Tutorial.\u003c/em\u003e\u003c/p\u003e",
  "tagMap": {}
}