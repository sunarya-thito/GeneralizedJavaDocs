{
  "packageName": "javax.swing",
  "simpleName": "SpinnerModel",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getValue",
      "comment": "The current element of the sequence. This element is usually displayed by the editor part of a JSpinner.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#setValue(java.lang.Object)\"\u003e\u003ccode\u003esetValue(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the current spinner value."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setValue",
      "comment": "Changes current value of the model, typically this value is displayed by the editor part of a JSpinner. If the SpinnerModel implementation doesn\u0027t support the specified value then an IllegalArgumentException is thrown. For example a SpinnerModel for numbers might only support values that are integer multiples of ten. In that case, model.setValue(new Number(11)) would throw an exception.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#getValue()\"\u003e\u003ccode\u003egetValue()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - new value for the spinner"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003evalue\u003c/code\u003e isn\u0027t allowed"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNextValue",
      "comment": "Return the object in the sequence that comes after the object returned by getValue(). If the end of the sequence has been reached then return null. Calling this method does not effect value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#getValue()\"\u003e\u003ccode\u003egetValue()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#getPreviousValue()\"\u003e\u003ccode\u003egetPreviousValue()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the next legal value or null if one doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPreviousValue",
      "comment": "Return the object in the sequence that comes before the object returned by getValue(). If the end of the sequence has been reached then return null. Calling this method does not effect value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#getValue()\"\u003e\u003ccode\u003egetValue()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#getNextValue()\"\u003e\u003ccode\u003egetNextValue()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the previous legal value or null if one doesn\u0027t exist"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.ChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addChangeListener",
      "comment": "Adds a ChangeListener to the model\u0027s listener list. The ChangeListeners must be notified when models value changes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#removeChangeListener(javax.swing.event.ChangeListener)\"\u003e\u003ccode\u003eremoveChangeListener(javax.swing.event.ChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the ChangeListener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.ChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeChangeListener",
      "comment": "Removes a ChangeListener from the model\u0027s listener list.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerModel.html#addChangeListener(javax.swing.event.ChangeListener)\"\u003e\u003ccode\u003eaddChangeListener(javax.swing.event.ChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the ChangeListener to remove"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.swing.SpinnerModel",
  "comment": "A model for a potentially unbounded sequence of object values. This model is similar to \n\u003ccode\u003eListModel\u003c/code\u003e however there are some important differences: \n\u003cul\u003e \n \u003cli\u003e The number of sequence elements isn\u0027t necessarily bounded. \u003c/li\u003e\n \u003cli\u003e The model doesn\u0027t support indexed random access to sequence elements. Only three sequence values are accessible at a time: current, next and previous. \u003c/li\u003e\n \u003cli\u003e The current sequence element, can be set. \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e A \u003ccode\u003eSpinnerModel\u003c/code\u003e has three properties, only the first is read/write. \u003c/p\u003e\n\u003cdl\u003e \n \u003cdt\u003e\n  \u003ccode\u003evalue\u003c/code\u003e \n \u003c/dt\u003e\n \u003cdd\u003e\n  The current element of the sequence. \n \u003c/dd\u003e\n \u003cdt\u003e\n  \u003ccode\u003enextValue\u003c/code\u003e \n \u003c/dt\u003e\n \u003cdd\u003e\n  The following element or null if \n  \u003ccode\u003evalue\u003c/code\u003e is the last element of the sequence. \n \u003c/dd\u003e\n \u003cdt\u003e\n  \u003ccode\u003epreviousValue\u003c/code\u003e \n \u003c/dt\u003e\n \u003cdd\u003e\n  The preceding element or null if \n  \u003ccode\u003evalue\u003c/code\u003e is the first element of the sequence. \n \u003c/dd\u003e\n\u003c/dl\u003e When the \n\u003ccode\u003evalue\u003c/code\u003e property changes, \n\u003ccode\u003eChangeListeners\u003c/code\u003e are notified. \n\u003ccode\u003eSpinnerModel\u003c/code\u003e may choose to notify the \n\u003ccode\u003eChangeListeners\u003c/code\u003e under other circumstances.\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JSpinner.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJSpinner\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/AbstractSpinnerModel.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eAbstractSpinnerModel\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerListModel.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eSpinnerListModel\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerNumberModel.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eSpinnerNumberModel\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpinnerDateModel.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eSpinnerDateModel\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}