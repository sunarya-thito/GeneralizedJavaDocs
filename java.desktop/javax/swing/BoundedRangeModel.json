{
  "packageName": "javax.swing",
  "simpleName": "BoundedRangeModel",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMinimum",
      "comment": "Returns the minimum acceptable value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#setMinimum(int)\"\u003e\u003ccode\u003esetMinimum(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the value of the minimum property"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "newMinimum"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setMinimum",
      "comment": "Sets the model\u0027s minimum to newMinimum. The other three properties may be changed as well, to ensure that:  minimum \u003c\u003d value \u003c\u003d value+extent \u003c\u003d maximum\n Notifies any listeners if the model changes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#getMinimum()\"\u003e\u003ccode\u003egetMinimum()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#addChangeListener(javax.swing.event.ChangeListener)\"\u003e\u003ccode\u003eaddChangeListener(javax.swing.event.ChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewMinimum\u003c/code\u003e - the model\u0027s new minimum"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaximum",
      "comment": "Returns the model\u0027s maximum. Note that the upper limit on the model\u0027s value is (maximum - extent).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#setMaximum(int)\"\u003e\u003ccode\u003esetMaximum(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#setExtent(int)\"\u003e\u003ccode\u003esetExtent(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the value of the maximum property."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "newMaximum"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setMaximum",
      "comment": "Sets the model\u0027s maximum to newMaximum. The other three properties may be changed as well, to ensure that  minimum \u003c\u003d value \u003c\u003d value+extent \u003c\u003d maximum\n Notifies any listeners if the model changes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#getMaximum()\"\u003e\u003ccode\u003egetMaximum()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#addChangeListener(javax.swing.event.ChangeListener)\"\u003e\u003ccode\u003eaddChangeListener(javax.swing.event.ChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewMaximum\u003c/code\u003e - the model\u0027s new maximum"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getValue",
      "comment": "Returns the model\u0027s current value. Note that the upper limit on the model\u0027s value is maximum - extent and the lower limit is minimum.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#setValue(int)\"\u003e\u003ccode\u003esetValue(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the model\u0027s value"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "newValue"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setValue",
      "comment": "Sets the model\u0027s current value to newValue if newValue satisfies the model\u0027s constraints. Those constraints are:  minimum \u003c\u003d value \u003c\u003d value+extent \u003c\u003d maximum\n Otherwise, if newValue is less than minimum it\u0027s set to minimum, if its greater than maximum then it\u0027s set to maximum, and if it\u0027s greater than value+extent then it\u0027s set to value+extent. When a BoundedRange model is used with a scrollbar the value specifies the origin of the scrollbar knob (aka the \"thumb\" or \"elevator\"). The value usually represents the origin of the visible part of the object being scrolled. Notifies any listeners if the model changes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#getValue()\"\u003e\u003ccode\u003egetValue()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewValue\u003c/code\u003e - the model\u0027s new value"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setValueIsAdjusting",
      "comment": "This attribute indicates that any upcoming changes to the value of the model should be considered a single event. This attribute will be set to true at the start of a series of changes to the value, and will be set to false when the value has finished changing. Normally this allows a listener to only take action when the final value change in committed, instead of having to do updates for all intermediate values. Sliders and scrollbars use this property when a drag is underway.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - true if the upcoming changes to the value property are part of a series"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getValueIsAdjusting",
      "comment": "Returns true if the current changes to the value property are part of a series of changes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#setValueIsAdjusting(boolean)\"\u003e\u003ccode\u003esetValueIsAdjusting(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the valueIsAdjustingProperty."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getExtent",
      "comment": "Returns the model\u0027s extent, the length of the inner range that begins at the model\u0027s value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#setExtent(int)\"\u003e\u003ccode\u003esetExtent(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#setValue(int)\"\u003e\u003ccode\u003esetValue(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the value of the model\u0027s extent property"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "newExtent"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setExtent",
      "comment": "Sets the model\u0027s extent. The newExtent is forced to be greater than or equal to zero and less than or equal to maximum - value. When a BoundedRange model is used with a scrollbar the extent defines the length of the scrollbar knob (aka the \"thumb\" or \"elevator\"). The extent usually represents how much of the object being scrolled is visible. When used with a slider, the extent determines how much the value can \"jump\", for example when the user presses PgUp or PgDn. Notifies any listeners if the model changes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#getExtent()\"\u003e\u003ccode\u003egetExtent()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#setValue(int)\"\u003e\u003ccode\u003esetValue(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewExtent\u003c/code\u003e - the model\u0027s new extent"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "extent"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "min"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "max"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "adjusting"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setRangeProperties",
      "comment": "This method sets all of the model\u0027s data with a single method call. The method results in a single change event being generated. This is convenient when you need to adjust all the model data simultaneously and do not want individual change events to occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#setValue(int)\"\u003e\u003ccode\u003esetValue(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#setExtent(int)\"\u003e\u003ccode\u003esetExtent(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#setMinimum(int)\"\u003e\u003ccode\u003esetMinimum(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#setMaximum(int)\"\u003e\u003ccode\u003esetMaximum(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#setValueIsAdjusting(boolean)\"\u003e\u003ccode\u003esetValueIsAdjusting(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - an int giving the current value",
          "\u003ccode\u003eextent\u003c/code\u003e - an int giving the amount by which the value can \"jump\"",
          "\u003ccode\u003emin\u003c/code\u003e - an int giving the minimum value",
          "\u003ccode\u003emax\u003c/code\u003e - an int giving the maximum value",
          "\u003ccode\u003eadjusting\u003c/code\u003e - a boolean, true if a series of changes are in progress"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.ChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addChangeListener",
      "comment": "Adds a ChangeListener to the model\u0027s listener list.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#removeChangeListener(javax.swing.event.ChangeListener)\"\u003e\u003ccode\u003eremoveChangeListener(javax.swing.event.ChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the ChangeListener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.ChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeChangeListener",
      "comment": "Removes a ChangeListener from the model\u0027s listener list.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/BoundedRangeModel.html#addChangeListener(javax.swing.event.ChangeListener)\"\u003e\u003ccode\u003eaddChangeListener(javax.swing.event.ChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the ChangeListener to remove"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.swing.BoundedRangeModel",
  "comment": "Defines the data model used by components like \n\u003ccode\u003eSlider\u003c/code\u003es and \n\u003ccode\u003eProgressBar\u003c/code\u003es. Defines four interrelated integer properties: minimum, maximum, extent and value. These four integers define two nested ranges like this: \n\u003cpre\u003e minimum \u0026lt;\u003d value \u0026lt;\u003d value+extent \u0026lt;\u003d maximum\n \u003c/pre\u003e The outer range is \n\u003ccode\u003eminimum,maximum\u003c/code\u003e and the inner range is \n\u003ccode\u003evalue,value+extent\u003c/code\u003e. The inner range must lie within the outer one, i.e. \n\u003ccode\u003evalue\u003c/code\u003e must be less than or equal to \n\u003ccode\u003emaximum\u003c/code\u003e and \n\u003ccode\u003evalue+extent\u003c/code\u003e must greater than or equal to \n\u003ccode\u003eminimum\u003c/code\u003e, and \n\u003ccode\u003emaximum\u003c/code\u003e must be greater than or equal to \n\u003ccode\u003eminimum\u003c/code\u003e. There are a few features of this model that one might find a little surprising. These quirks exist for the convenience of the Swing BoundedRangeModel clients, such as \n\u003ccode\u003eSlider\u003c/code\u003e and \n\u003ccode\u003eScrollBar\u003c/code\u003e. \n\u003cul\u003e \n \u003cli\u003e The minimum and maximum set methods \"correct\" the other three properties to accommodate their new value argument. For example setting the model\u0027s minimum may change its maximum, value, and extent properties (in that order), to maintain the constraints specified above. \u003c/li\u003e\n \u003cli\u003e The value and extent set methods \"correct\" their argument to fit within the limits defined by the other three properties. For example if \u003ccode\u003evalue \u003d\u003d maximum\u003c/code\u003e, \u003ccode\u003esetExtent(10)\u003c/code\u003e would change the extent (back) to zero. \u003c/li\u003e\n \u003cli\u003e The four BoundedRangeModel values are defined as Java Beans properties however Swing ChangeEvents are used to notify clients of changes rather than PropertyChangeEvents. This was done to keep the overhead of monitoring a BoundedRangeModel low. Changes are often reported at MouseDragged rates. \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e For an example of specifying custom bounded range models used by sliders, see \u003ca href\u003d\"http://www.oracle.com/technetwork/java/architecture-142923.html#separable\"\u003eSeparable model architecture\u003c/a\u003e in \u003cem\u003eA Swing Architecture Overview.\u003c/em\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/DefaultBoundedRangeModel.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eDefaultBoundedRangeModel\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}