{
  "packageName": "javax.swing",
  "simpleName": "SpringLayout",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "NORTH",
      "comment": "Specifies the top edge of a component\u0027s bounding rectangle.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.SpringLayout.NORTH\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SOUTH",
      "comment": "Specifies the bottom edge of a component\u0027s bounding rectangle.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.SpringLayout.SOUTH\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "EAST",
      "comment": "Specifies the right edge of a component\u0027s bounding rectangle.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.SpringLayout.EAST\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WEST",
      "comment": "Specifies the left edge of a component\u0027s bounding rectangle.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.SpringLayout.WEST\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "HORIZONTAL_CENTER",
      "comment": "Specifies the horizontal center of a component\u0027s bounding rectangle.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.SpringLayout.HORIZONTAL_CENTER\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "VERTICAL_CENTER",
      "comment": "Specifies the vertical center of a component\u0027s bounding rectangle.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.SpringLayout.VERTICAL_CENTER\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "BASELINE",
      "comment": "Specifies the baseline of a component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.SpringLayout.BASELINE\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WIDTH",
      "comment": "Specifies the width of a component\u0027s bounding rectangle.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.SpringLayout.WIDTH\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "HEIGHT",
      "comment": "Specifies the height of a component\u0027s bounding rectangle.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.SpringLayout.HEIGHT\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addLayoutComponent",
      "comment": "Has no effect, since this layout manager does not use a per-component string.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#addLayoutComponent(java.lang.String,java.awt.Component)\"\u003eaddLayoutComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the string to be associated with the component",
          "\u003ccode\u003ec\u003c/code\u003e - the component to be added"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeLayoutComponent",
      "comment": "Removes the constraints associated with the specified component.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#removeLayoutComponent(java.awt.Component)\"\u003eremoveLayoutComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component being removed from the container"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "parent"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "minimumLayoutSize",
      "comment": "Description copied from interface: LayoutManager",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#preferredLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003eLayoutManager.preferredLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#minimumLayoutSize(java.awt.Container)\"\u003eminimumLayoutSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eparent\u003c/code\u003e - the component to be laid out"
        ],
        "return": [
          "the minimum dimension for the container"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "parent"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "preferredLayoutSize",
      "comment": "Description copied from interface: LayoutManager",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#minimumLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003eLayoutManager.minimumLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#preferredLayoutSize(java.awt.Container)\"\u003epreferredLayoutSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eparent\u003c/code\u003e - the container to be laid out"
        ],
        "return": [
          "the preferred dimension for the container"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "parent"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "maximumLayoutSize",
      "comment": "Description copied from interface: LayoutManager2",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getMaximumSize()\"\u003e\u003ccode\u003eComponent.getMaximumSize()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003eLayoutManager\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#maximumLayoutSize(java.awt.Container)\"\u003emaximumLayoutSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eparent\u003c/code\u003e - the target container"
        ],
        "return": [
          "the maximum size of the container"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "component"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "constraints"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addLayoutComponent",
      "comment": "If constraints is an instance of SpringLayout.Constraints, associates the constraints with the specified component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.Constraints.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eSpringLayout.Constraints\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#addLayoutComponent(java.awt.Component,java.lang.Object)\"\u003eaddLayoutComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component being added",
          "\u003ccode\u003econstraints\u003c/code\u003e - the component\u0027s constraints"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLayoutAlignmentX",
      "comment": "Returns 0.5f (centered).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#getLayoutAlignmentX(java.awt.Container)\"\u003egetLayoutAlignmentX\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ep\u003c/code\u003e - the target container"
        ],
        "return": [
          "the x-axis alignment preference"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLayoutAlignmentY",
      "comment": "Returns 0.5f (centered).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#getLayoutAlignmentY(java.awt.Container)\"\u003egetLayoutAlignmentY\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ep\u003c/code\u003e - the target container"
        ],
        "return": [
          "the y-axis alignment preference"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "invalidateLayout",
      "comment": "Description copied from interface: LayoutManager2",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#invalidateLayout(java.awt.Container)\"\u003einvalidateLayout\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ep\u003c/code\u003e - the target container"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "e1"
          }
        },
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "c1"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "pad"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "e2"
          }
        },
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "c2"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "putConstraint",
      "comment": "Links edge e1 of component c1 to edge e2 of component c2, with a fixed distance between the edges. This constraint will cause the assignment      value(e1, c1) \u003d value(e2, c2) + pad to take place during all subsequent layout operations.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#putConstraint(java.lang.String,java.awt.Component,javax.swing.Spring,java.lang.String,java.awt.Component)\"\u003e\u003ccode\u003eputConstraint(String, Component, Spring, String, Component)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ee1\u003c/code\u003e - the edge of the dependent",
          "\u003ccode\u003ec1\u003c/code\u003e - the component of the dependent",
          "\u003ccode\u003epad\u003c/code\u003e - the fixed distance between dependent and anchor",
          "\u003ccode\u003ee2\u003c/code\u003e - the edge of the anchor",
          "\u003ccode\u003ec2\u003c/code\u003e - the component of the anchor"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "e1"
          }
        },
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "c1"
          }
        },
        {
          "type": {
            "name": "javax.swing.Spring",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "e2"
          }
        },
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "c2"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "putConstraint",
      "comment": "Links edge e1 of component c1 to edge e2 of component c2. As edge (e2, c2) changes value, edge (e1, c1) will be calculated by taking the (spring) sum of (e2, c2) and s. Each edge must have one of the following values: SpringLayout.NORTH, SpringLayout.SOUTH, SpringLayout.EAST, SpringLayout.WEST, SpringLayout.VERTICAL_CENTER, SpringLayout.HORIZONTAL_CENTER or SpringLayout.BASELINE.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#putConstraint(java.lang.String,java.awt.Component,int,java.lang.String,java.awt.Component)\"\u003e\u003ccode\u003eputConstraint(String, Component, int, String, Component)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#NORTH\"\u003e\u003ccode\u003eNORTH\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#SOUTH\"\u003e\u003ccode\u003eSOUTH\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#EAST\"\u003e\u003ccode\u003eEAST\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#WEST\"\u003e\u003ccode\u003eWEST\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#VERTICAL_CENTER\"\u003e\u003ccode\u003eVERTICAL_CENTER\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#HORIZONTAL_CENTER\"\u003e\u003ccode\u003eHORIZONTAL_CENTER\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#BASELINE\"\u003e\u003ccode\u003eBASELINE\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ee1\u003c/code\u003e - the edge of the dependent",
          "\u003ccode\u003ec1\u003c/code\u003e - the component of the dependent",
          "\u003ccode\u003es\u003c/code\u003e - the spring linking dependent and anchor",
          "\u003ccode\u003ee2\u003c/code\u003e - the edge of the anchor",
          "\u003ccode\u003ec2\u003c/code\u003e - the component of the anchor"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.SpringLayout$Constraints",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getConstraints",
      "comment": "Returns the constraints for the specified component. Note that, unlike the GridBagLayout getConstraints method, this method does not clone constraints. If no constraints have been associated with this component, this method returns a default constraints object positioned at 0,0 relative to the parent\u0027s Insets and its width/height constrained to the minimum, maximum, and preferred sizes of the component. The size characteristics are not frozen at the time this method is called; instead this method returns a constraints object whose characteristics track the characteristics of the component as they change.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component whose constraints will be returned"
        ],
        "return": [
          "the constraints for the specified component"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.Spring",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "edgeName"
          }
        },
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getConstraint",
      "comment": "Returns the spring controlling the distance between the specified edge of the component and the top or left edge of its parent. This method, instead of returning the current binding for the edge, returns a proxy that tracks the characteristics of the edge even if the edge is subsequently rebound. Proxies are intended to be used in builder environments where it is useful to allow the user to define the constraints for a layout in any order. Proxies do, however, provide the means to create cyclic dependencies amongst the constraints of a layout. Such cycles are detected internally by SpringLayout so that the layout operation always terminates.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#NORTH\"\u003e\u003ccode\u003eNORTH\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#SOUTH\"\u003e\u003ccode\u003eSOUTH\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#EAST\"\u003e\u003ccode\u003eEAST\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#WEST\"\u003e\u003ccode\u003eWEST\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#VERTICAL_CENTER\"\u003e\u003ccode\u003eVERTICAL_CENTER\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#HORIZONTAL_CENTER\"\u003e\u003ccode\u003eHORIZONTAL_CENTER\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.html#BASELINE\"\u003e\u003ccode\u003eBASELINE\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eedgeName\u003c/code\u003e - must be one of \n\u003ccode\u003eSpringLayout.NORTH\u003c/code\u003e, \n\u003ccode\u003eSpringLayout.SOUTH\u003c/code\u003e, \n\u003ccode\u003eSpringLayout.EAST\u003c/code\u003e, \n\u003ccode\u003eSpringLayout.WEST\u003c/code\u003e, \n\u003ccode\u003eSpringLayout.VERTICAL_CENTER\u003c/code\u003e, \n\u003ccode\u003eSpringLayout.HORIZONTAL_CENTER\u003c/code\u003e or \n\u003ccode\u003eSpringLayout.BASELINE\u003c/code\u003e",
          "\u003ccode\u003ec\u003c/code\u003e - the component whose edge spring is desired"
        ],
        "return": [
          "a proxy for the spring controlling the distance between the specified edge and the top or left edge of its parent"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "parent"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "layoutContainer",
      "comment": "Description copied from interface: LayoutManager",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#layoutContainer(java.awt.Container)\"\u003elayoutContainer\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eparent\u003c/code\u003e - the container to be laid out"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new SpringLayout.",
      "tagMap": {}
    }
  ],
  "innerClasses": [
    "javax.swing.SpringLayout$Constraints"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.SpringLayout",
  "comment": "A \n\u003ccode\u003eSpringLayout\u003c/code\u003e lays out the children of its associated container according to a set of constraints. See \n\u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/layout/spring.html\"\u003eHow to Use SpringLayout\u003c/a\u003e in \n\u003cem\u003eThe Java Tutorial\u003c/em\u003e for examples of using \n\u003ccode\u003eSpringLayout\u003c/code\u003e. \n\u003cp\u003e Each constraint, represented by a \u003ccode\u003eSpring\u003c/code\u003e object, controls the vertical or horizontal distance between two component edges. The edges can belong to any child of the container, or to the container itself. For example, the allowable width of a component can be expressed using a constraint that controls the distance between the west (left) and east (right) edges of the component. The allowable \u003cem\u003ey\u003c/em\u003e coordinates for a component can be expressed by constraining the distance between the north (top) edge of the component and the north edge of its container. \u003c/p\u003e\n\u003cp\u003e Every child of a \u003ccode\u003eSpringLayout\u003c/code\u003e-controlled container, as well as the container itself, has exactly one set of constraints associated with it. These constraints are represented by a \u003ccode\u003eSpringLayout.Constraints\u003c/code\u003e object. By default, \u003ccode\u003eSpringLayout\u003c/code\u003e creates constraints that make their associated component have the minimum, preferred, and maximum sizes returned by the component\u0027s \u003ca href\u003d\"../../java/awt/Component.html#getMinimumSize()\"\u003e\u003ccode\u003eComponent.getMinimumSize()\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../../java/awt/Component.html#getPreferredSize()\"\u003e\u003ccode\u003eComponent.getPreferredSize()\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"../../java/awt/Component.html#getMaximumSize()\"\u003e\u003ccode\u003eComponent.getMaximumSize()\u003c/code\u003e\u003c/a\u003e methods. The \u003cem\u003ex\u003c/em\u003e and \u003cem\u003ey\u003c/em\u003e positions are initially not constrained, so that until you constrain them the \u003ccode\u003eComponent\u003c/code\u003e will be positioned at 0,0 relative to the \u003ccode\u003eInsets\u003c/code\u003e of the parent \u003ccode\u003eContainer\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003e You can change a component\u0027s constraints in several ways. You can use one of the \u003ca href\u003d\"#putConstraint(java.lang.String,java.awt.Component,int,java.lang.String,java.awt.Component)\"\u003e\u003ccode\u003eputConstraint\u003c/code\u003e\u003c/a\u003e methods to establish a spring linking the edges of two components within the same container. Or you can get the appropriate \u003ccode\u003eSpringLayout.Constraints\u003c/code\u003e object using \u003ca href\u003d\"#getConstraints(java.awt.Component)\"\u003e\u003ccode\u003egetConstraints\u003c/code\u003e\u003c/a\u003e and then modify one or more of its springs. Or you can get the spring for a particular edge of a component using \u003ca href\u003d\"#getConstraint(java.lang.String,java.awt.Component)\"\u003e\u003ccode\u003egetConstraint\u003c/code\u003e\u003c/a\u003e, and modify it. You can also associate your own \u003ccode\u003eSpringLayout.Constraints\u003c/code\u003e object with a component by specifying the constraints object when you add the component to its container (using \u003ca href\u003d\"../../java/awt/Container.html#add(java.awt.Component,java.lang.Object)\"\u003e\u003ccode\u003eContainer.add(Component, Object)\u003c/code\u003e\u003c/a\u003e). \u003c/p\u003e\n\u003cp\u003e The \u003ccode\u003eSpring\u003c/code\u003e object representing each constraint has a minimum, preferred, maximum, and current value. The current value of the spring is somewhere between the minimum and maximum values, according to the formula given in the \u003ca href\u003d\"Spring.html#sum(javax.swing.Spring,javax.swing.Spring)\"\u003e\u003ccode\u003eSpring.sum(javax.swing.Spring, javax.swing.Spring)\u003c/code\u003e\u003c/a\u003e method description. When the minimum, preferred, and maximum values are the same, the current value is always equal to them; this inflexible spring is called a \u003cem\u003estrut\u003c/em\u003e. You can create struts using the factory method \u003ca href\u003d\"Spring.html#constant(int)\"\u003e\u003ccode\u003eSpring.constant(int)\u003c/code\u003e\u003c/a\u003e. The \u003ccode\u003eSpring\u003c/code\u003e class also provides factory methods for creating other kinds of springs, including springs that depend on other springs. \u003c/p\u003e\n\u003cp\u003e In a \u003ccode\u003eSpringLayout\u003c/code\u003e, the position of each edge is dependent on the position of just one other edge. If a constraint is subsequently added to create a new binding for an edge, the previous binding is discarded and the edge remains dependent on a single edge. Springs should only be attached between edges of the container and its immediate children; the behavior of the \u003ccode\u003eSpringLayout\u003c/code\u003e when presented with constraints linking the edges of components from different containers (either internal or external) is undefined. \u003c/p\u003e\n\u003ch2\u003e SpringLayout vs. Other Layout Managers \u003c/h2\u003e \n\u003cblockquote\u003e \n \u003chr\u003e \n \u003cstrong\u003eNote:\u003c/strong\u003e Unlike many layout managers, \n \u003ccode\u003eSpringLayout\u003c/code\u003e doesn\u0027t automatically set the location of the components it manages. If you hand-code a GUI that uses \n \u003ccode\u003eSpringLayout\u003c/code\u003e, remember to initialize component locations by constraining the west/east and north/south locations. \n \u003cp\u003e Depending on the constraints you use, you may also need to set the size of the container explicitly. \u003c/p\u003e\n \u003chr\u003e \n \u003cp\u003e\u003c/p\u003e\n\u003c/blockquote\u003e \n\u003cp\u003e Despite the simplicity of \u003ccode\u003eSpringLayout\u003c/code\u003e, it can emulate the behavior of most other layout managers. For some features, such as the line breaking provided by \u003ccode\u003eFlowLayout\u003c/code\u003e, you\u0027ll need to create a special-purpose subclass of the \u003ccode\u003eSpring\u003c/code\u003e class. \u003c/p\u003e\n\u003cp\u003e \u003ccode\u003eSpringLayout\u003c/code\u003e also provides a way to solve many of the difficult layout problems that cannot be solved by nesting combinations of \u003ccode\u003eBox\u003c/code\u003ees. That said, \u003ccode\u003eSpringLayout\u003c/code\u003e honors the \u003ccode\u003eLayoutManager2\u003c/code\u003e contract correctly and so can be nested with other layout managers -- a technique that can be preferable to creating the constraints implied by the other layout managers. \u003c/p\u003e\n\u003cp\u003e The asymptotic complexity of the layout operation of a \u003ccode\u003eSpringLayout\u003c/code\u003e is linear in the number of constraints (and/or components). \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/Spring.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eSpring\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/SpringLayout.Constraints.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eSpringLayout.Constraints\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}