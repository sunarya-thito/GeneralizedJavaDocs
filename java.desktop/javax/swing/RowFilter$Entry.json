{
  "packageName": "javax.swing",
  "simpleName": "Entry",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "owner": "javax.swing.RowFilter$Entry",
        "name": "M",
        "type": "Variable"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getModel",
      "comment": "Returns the underlying model.",
      "tagMap": {
        "return": [
          "the model containing the data that this entry represents"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getValueCount",
      "comment": "Returns the number of values in the entry. For example, when used with a table this corresponds to the number of columns.",
      "tagMap": {
        "return": [
          "number of values in the object being filtered"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getValue",
      "comment": "Returns the value at the specified index. This may return null. When used with a table, index corresponds to the column number in the model.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the value to get"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index \u0026lt; 0 or \u0026gt;\u003d getValueCount"
        ],
        "return": [
          "value at the specified index"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getStringValue",
      "comment": "Returns the string value at the specified index. If filtering is being done based on String values this method is preferred to that of getValue as getValue(index).toString() may return a different result than getStringValue(index). This implementation calls getValue(index).toString() after checking for null. Subclasses that provide different string conversion should override this method if necessary.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the value to get"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if index \u0026lt; 0 || \u0026gt;\u003d getValueCount"
        ],
        "return": [
          "\u003ccode\u003enon-null\u003c/code\u003e string at the specified index"
        ]
      }
    },
    {
      "returnType": {
        "owner": "javax.swing.RowFilter$Entry",
        "name": "I",
        "type": "Variable"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getIdentifier",
      "comment": "Returns the identifer (in the model) of the entry. For a table this corresponds to the index of the row in the model, expressed as an Integer.",
      "tagMap": {
        "return": [
          "a model-based (not view-based) identifier for this entry"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an Entry.",
      "tagMap": {}
    }
  ],
  "genericParameters": [
    {
      "name": "M",
      "type": "Variable"
    },
    {
      "name": "I",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1033,
  "name": "javax.swing.RowFilter$Entry",
  "comment": "An \n\u003ccode\u003eEntry\u003c/code\u003e object is passed to instances of \n\u003ccode\u003eRowFilter\u003c/code\u003e, allowing the filter to get the value of the entry\u0027s data, and thus to determine whether the entry should be shown. An \n\u003ccode\u003eEntry\u003c/code\u003e object contains information about the model as well as methods for getting the underlying values from the model.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RowFilter.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eRowFilter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/DefaultRowSorter.html#setRowFilter(javax.swing.RowFilter)\"\u003e\u003ccode\u003eDefaultRowSorter.setRowFilter(javax.swing.RowFilter)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}