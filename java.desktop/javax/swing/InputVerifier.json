{
  "packageName": "javax.swing",
  "simpleName": "InputVerifier",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "name": "input",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "verify",
      "comment": "Checks whether the JComponent\u0027s input is valid. This method should have no side effects. It returns a boolean indicating the status of the argument\u0027s input.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#setInputVerifier(javax.swing.InputVerifier)\"\u003e\u003ccode\u003eJComponent.setInputVerifier(javax.swing.InputVerifier)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getInputVerifier()\"\u003e\u003ccode\u003eJComponent.getInputVerifier()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003einput\u003c/code\u003e - the JComponent to verify"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e when valid, \n\u003ccode\u003efalse\u003c/code\u003e when invalid"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "name": "input",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "shouldYieldFocus",
      "comment": "Calls verify(input) to ensure that the input is valid. This method can have side effects. In particular, this method is called when the user attempts to advance focus out of the argument component into another Swing component in this window. If this method returns true, then the focus is transferred normally; if it returns false, then the focus remains in the argument component.",
      "annotations": [
        {
          "type": {
            "name": "Deprecated",
            "type": "Class"
          },
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#setInputVerifier(javax.swing.InputVerifier)\"\u003e\u003ccode\u003eJComponent.setInputVerifier(javax.swing.InputVerifier)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getInputVerifier()\"\u003e\u003ccode\u003eJComponent.getInputVerifier()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003einput\u003c/code\u003e - the JComponent to verify"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e when valid, \n\u003ccode\u003efalse\u003c/code\u003e when invalid"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "name": "target",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "verifyTarget",
      "comment": "Checks whether the target JComponent that will be receiving the focus is ready to accept it. This method should be over-ridden only if it is necessary to validate the target of the focus transfer. This method should have no side effects. It returns a boolean indicating the status of the argument\u0027s input.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "By default this method returns \n\u003ccode\u003etrue\u003c/code\u003e."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#setInputVerifier(javax.swing.InputVerifier)\"\u003e\u003ccode\u003eJComponent.setInputVerifier(javax.swing.InputVerifier)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getInputVerifier()\"\u003e\u003ccode\u003eJComponent.getInputVerifier()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the target JComponent to verify"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e when valid, \n\u003ccode\u003efalse\u003c/code\u003e when invalid"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "name": "source",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "name": "target",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "shouldYieldFocus",
      "comment": "Is called by Swing if this InputVerifier is assigned to the source Swing component to check whether the requested focus transfer from the source to target is allowed. This method can have side effects. If this method returns true, then the focus is transferred normally; if it returns false, then the focus remains in the first argument component.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "The basic implementation of this method returns the conjunction of results obtained from \n\u003ccode\u003everify(input)\u003c/code\u003e and \n\u003ccode\u003everifyTarget(input)\u003c/code\u003e to ensure that both the source and the target components are in valid state."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#setInputVerifier(javax.swing.InputVerifier)\"\u003e\u003ccode\u003eJComponent.setInputVerifier(javax.swing.InputVerifier)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getInputVerifier()\"\u003e\u003ccode\u003eJComponent.getInputVerifier()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the source JComponent of the focus transfer",
          "\u003ccode\u003etarget\u003c/code\u003e - the target JComponent of the focus transfer"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e when valid, \n\u003ccode\u003efalse\u003c/code\u003e when invalid"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for subclasses to call.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.swing.InputVerifier",
  "annotations": [],
  "tagMap": {
    "since": [
      "1.3"
    ]
  }
}