{
  "packageName": "javax.swing",
  "simpleName": "MenuSelectionManager",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.swing.event.ChangeEvent",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 132,
      "name": "changeEvent",
      "comment": "Only one ChangeEvent is needed per button model instance since the event\u0027s only state is the source property. The source of events generated is always \"this\".",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.event.EventListenerList",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "listenerList",
      "comment": "The collection of registered listeners",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "javax.swing.MenuSelectionManager",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "defaultManager",
      "comment": "Returns the default menu selection manager.",
      "tagMap": {
        "return": [
          "a MenuSelectionManager object"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.MenuElement",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "path"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSelectedPath",
      "comment": "Changes the selection in the menu hierarchy. The elements in the array are sorted in order from the root menu element to the currently selected menu element. Note that this method is public but is used by the look and feel engine and should not be called by client applications.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epath\u003c/code\u003e - an array of \n\u003ccode\u003eMenuElement\u003c/code\u003e objects specifying the selected path"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.MenuElement",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSelectedPath",
      "comment": "Returns the path to the currently selected menu item",
      "tagMap": {
        "return": [
          "an array of MenuElement objects representing the selected path"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clearSelectedPath",
      "comment": "Tell the menu selection to close and unselect all the menu components. Call this method when a choice has been made",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.ChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addChangeListener",
      "comment": "Adds a ChangeListener to the button.",
      "tagMap": {
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to add"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.ChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeChangeListener",
      "comment": "Removes a ChangeListener from the button.",
      "tagMap": {
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the listener to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.event.ChangeListener",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getChangeListeners",
      "comment": "Returns an array of all the ChangeListeners added to this MenuSelectionManager with addChangeListener().",
      "tagMap": {
        "return": [
          "all of the \n\u003ccode\u003eChangeListener\u003c/code\u003es added or an empty array if no listeners have been added"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "fireStateChanged",
      "comment": "Notifies all listeners that have registered interest for notification on this event type. The event instance is created lazily.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/EventListenerList.html\" title\u003d\"class in javax.swing.event\"\u003e\u003ccode\u003eEventListenerList\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.MouseEvent",
            "type": "Class"
          },
          "field": {
            "name": "event"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "processMouseEvent",
      "comment": "When a MenuElement receives an event from a MouseListener, it should never process the event directly. Instead all MenuElements should call this method with the event.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eevent\u003c/code\u003e - a MouseEvent object"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "field": {
            "name": "sourcePoint"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "componentForPoint",
      "comment": "Returns the component in the currently selected path which contains sourcePoint.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - The component in whose coordinate space sourcePoint is given",
          "\u003ccode\u003esourcePoint\u003c/code\u003e - The point which is being tested"
        ],
        "return": [
          "The component in the currently selected path which contains sourcePoint (relative to the source component\u0027s coordinate space. If sourcePoint is not inside a component on the currently selected path, null is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.KeyEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "processKeyEvent",
      "comment": "When a MenuElement receives an event from a KeyListener, it should never process the event directly. Instead all MenuElements should call this method with the event.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - a KeyEvent object"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isComponentPartOfCurrentMenu",
      "comment": "Return true if c is part of the currently used menu",
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - a \n\u003ccode\u003eComponent\u003c/code\u003e"
        ],
        "return": [
          "true if \n\u003ccode\u003ec\u003c/code\u003e is part of the currently used menu, false otherwise"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a MenuSelectionManager.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.MenuSelectionManager",
  "comment": "A MenuSelectionManager owns the selection in menu hierarchy.",
  "tagMap": {
    "since": [
      "1.2"
    ]
  }
}