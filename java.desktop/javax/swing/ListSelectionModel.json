{
  "packageName": "javax.swing",
  "simpleName": "ListSelectionModel",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SINGLE_SELECTION",
      "comment": "A value for the selectionMode property: select one list index at a time.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#setSelectionMode(int)\"\u003e\u003ccode\u003esetSelectionMode(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.ListSelectionModel.SINGLE_SELECTION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SINGLE_INTERVAL_SELECTION",
      "comment": "A value for the selectionMode property: select one contiguous range of indices at a time.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#setSelectionMode(int)\"\u003e\u003ccode\u003esetSelectionMode(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "MULTIPLE_INTERVAL_SELECTION",
      "comment": "A value for the selectionMode property: select one or more contiguous ranges of indices at a time.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#setSelectionMode(int)\"\u003e\u003ccode\u003esetSelectionMode(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index0"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index1"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setSelectionInterval",
      "comment": "Changes the selection to be between index0 and index1 inclusive. index0 doesn\u0027t have to be less than or equal to index1. In SINGLE_SELECTION selection mode, only the second index is used. If this represents a change to the current selection, then each ListSelectionListener is notified of the change.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#addListSelectionListener(javax.swing.event.ListSelectionListener)\"\u003e\u003ccode\u003eaddListSelectionListener(javax.swing.event.ListSelectionListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex0\u003c/code\u003e - one end of the interval.",
          "\u003ccode\u003eindex1\u003c/code\u003e - other end of the interval"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index0"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index1"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addSelectionInterval",
      "comment": "Changes the selection to be the set union of the current selection and the indices between index0 and index1 inclusive. index0 doesn\u0027t have to be less than or equal to index1. In SINGLE_SELECTION selection mode, this is equivalent to calling setSelectionInterval, and only the second index is used. In SINGLE_INTERVAL_SELECTION selection mode, this method behaves like setSelectionInterval, unless the given interval is immediately adjacent to or overlaps the existing selection, and can therefore be used to grow the selection. If this represents a change to the current selection, then each ListSelectionListener is notified of the change.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#addListSelectionListener(javax.swing.event.ListSelectionListener)\"\u003e\u003ccode\u003eaddListSelectionListener(javax.swing.event.ListSelectionListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#setSelectionInterval(int,int)\"\u003e\u003ccode\u003esetSelectionInterval(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex0\u003c/code\u003e - one end of the interval.",
          "\u003ccode\u003eindex1\u003c/code\u003e - other end of the interval"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index0"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index1"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeSelectionInterval",
      "comment": "Changes the selection to be the set difference of the current selection and the indices between index0 and index1 inclusive. index0 doesn\u0027t have to be less than or equal to index1. In SINGLE_INTERVAL_SELECTION selection mode, if the removal would produce two disjoint selections, the removal is extended through the greater end of the selection. For example, if the selection is 0-10 and you supply indices 5,6 (in any order) the resulting selection is 0-4. If this represents a change to the current selection, then each ListSelectionListener is notified of the change.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#addListSelectionListener(javax.swing.event.ListSelectionListener)\"\u003e\u003ccode\u003eaddListSelectionListener(javax.swing.event.ListSelectionListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex0\u003c/code\u003e - one end of the interval.",
          "\u003ccode\u003eindex1\u003c/code\u003e - other end of the interval"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMinSelectionIndex",
      "comment": "Returns the first selected index or -1 if the selection is empty.",
      "tagMap": {
        "return": [
          "the first selected index or -1 if the selection is empty."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMaxSelectionIndex",
      "comment": "Returns the last selected index or -1 if the selection is empty.",
      "tagMap": {
        "return": [
          "the last selected index or -1 if the selection is empty."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isSelectedIndex",
      "comment": "Returns true if the specified index is selected.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - an index"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified index is selected"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAnchorSelectionIndex",
      "comment": "Return the first index argument from the most recent call to setSelectionInterval(), addSelectionInterval() or removeSelectionInterval(). The most recent index0 is considered the \"anchor\" and the most recent index1 is considered the \"lead\". Some interfaces display these indices specially, e.g. Windows95 displays the lead index with a dotted yellow outline.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#getLeadSelectionIndex()\"\u003e\u003ccode\u003egetLeadSelectionIndex()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#setSelectionInterval(int,int)\"\u003e\u003ccode\u003esetSelectionInterval(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#addSelectionInterval(int,int)\"\u003e\u003ccode\u003eaddSelectionInterval(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the anchor selection index"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setAnchorSelectionIndex",
      "comment": "Set the anchor selection index.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#getAnchorSelectionIndex()\"\u003e\u003ccode\u003egetAnchorSelectionIndex()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the anchor selection index"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getLeadSelectionIndex",
      "comment": "Return the second index argument from the most recent call to setSelectionInterval(), addSelectionInterval() or removeSelectionInterval().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#getAnchorSelectionIndex()\"\u003e\u003ccode\u003egetAnchorSelectionIndex()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#setSelectionInterval(int,int)\"\u003e\u003ccode\u003esetSelectionInterval(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#addSelectionInterval(int,int)\"\u003e\u003ccode\u003eaddSelectionInterval(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the lead selection index."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setLeadSelectionIndex",
      "comment": "Set the lead selection index.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#getLeadSelectionIndex()\"\u003e\u003ccode\u003egetLeadSelectionIndex()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the lead selection index"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clearSelection",
      "comment": "Change the selection to the empty set. If this represents a change to the current selection then notify each ListSelectionListener.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#addListSelectionListener(javax.swing.event.ListSelectionListener)\"\u003e\u003ccode\u003eaddListSelectionListener(javax.swing.event.ListSelectionListener)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isSelectionEmpty",
      "comment": "Returns true if no indices are selected.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if no indices are selected."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "length"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "before"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "insertIndexInterval",
      "comment": "Insert length indices beginning before/after index. This is typically called to sync the selection model with a corresponding change in the data model.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the beginning of the interval",
          "\u003ccode\u003elength\u003c/code\u003e - the length of the interval",
          "\u003ccode\u003ebefore\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e, interval inserts before the \n\u003ccode\u003eindex\u003c/code\u003e, otherwise, interval inserts after the \n\u003ccode\u003eindex\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index0"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index1"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeIndexInterval",
      "comment": "Remove the indices in the interval index0,index1 (inclusive) from the selection model. This is typically called to sync the selection model width a corresponding change in the data model.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex0\u003c/code\u003e - the beginning of the interval",
          "\u003ccode\u003eindex1\u003c/code\u003e - the end of the interval"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "valueIsAdjusting"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setValueIsAdjusting",
      "comment": "Sets the valueIsAdjusting property, which indicates whether or not upcoming selection changes should be considered part of a single change. The value of this property is used to initialize the valueIsAdjusting property of the ListSelectionEvents that are generated. For example, if the selection is being updated in response to a user drag, this property can be set to true when the drag is initiated and set to false when the drag is finished. During the drag, listeners receive events with a valueIsAdjusting property set to true. At the end of the drag, when the change is finalized, listeners receive an event with the value set to false. Listeners can use this pattern if they wish to update only when a change has been finalized. Setting this property to true begins a series of changes that is to be considered part of a single change. When the property is changed back to false, an event is sent out characterizing the entire selection change (if there was one), with the event\u0027s valueIsAdjusting property set to false.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#getValueIsAdjusting()\"\u003e\u003ccode\u003egetValueIsAdjusting()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/ListSelectionEvent.html#getValueIsAdjusting()\"\u003e\u003ccode\u003eListSelectionEvent.getValueIsAdjusting()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalueIsAdjusting\u003c/code\u003e - the new value of the property"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getValueIsAdjusting",
      "comment": "Returns true if the selection is undergoing a series of changes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#setValueIsAdjusting(boolean)\"\u003e\u003ccode\u003esetValueIsAdjusting(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "true if the selection is undergoing a series of changes"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "selectionMode"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setSelectionMode",
      "comment": "Sets the selection mode. The following list describes the accepted selection modes: ListSelectionModel.SINGLE_SELECTION - Only one list index can be selected at a time. In this mode, setSelectionInterval and addSelectionInterval are equivalent, both replacing the current selection with the index represented by the second argument (the \"lead\"). ListSelectionModel.SINGLE_INTERVAL_SELECTION - Only one contiguous interval can be selected at a time. In this mode, addSelectionInterval behaves like setSelectionInterval (replacing the current selection), unless the given interval is immediately adjacent to or overlaps the existing selection, and can therefore be used to grow it. ListSelectionModel.MULTIPLE_INTERVAL_SELECTION - In this mode, there\u0027s no restriction on what can be selected.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#getSelectionMode()\"\u003e\u003ccode\u003egetSelectionMode()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eselectionMode\u003c/code\u003e - the selection mode"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the selection mode isn\u0027t one of those allowed"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSelectionMode",
      "comment": "Returns the current selection mode.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#setSelectionMode(int)\"\u003e\u003ccode\u003esetSelectionMode(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the current selection mode"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.ListSelectionListener",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addListSelectionListener",
      "comment": "Add a listener to the list that\u0027s notified each time a change to the selection occurs.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#removeListSelectionListener(javax.swing.event.ListSelectionListener)\"\u003e\u003ccode\u003eremoveListSelectionListener(javax.swing.event.ListSelectionListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#setSelectionInterval(int,int)\"\u003e\u003ccode\u003esetSelectionInterval(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#addSelectionInterval(int,int)\"\u003e\u003ccode\u003eaddSelectionInterval(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#removeSelectionInterval(int,int)\"\u003e\u003ccode\u003eremoveSelectionInterval(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#clearSelection()\"\u003e\u003ccode\u003eclearSelection()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#insertIndexInterval(int,int,boolean)\"\u003e\u003ccode\u003einsertIndexInterval(int, int, boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#removeIndexInterval(int,int)\"\u003e\u003ccode\u003eremoveIndexInterval(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the ListSelectionListener"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.ListSelectionListener",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeListSelectionListener",
      "comment": "Remove a listener from the list that\u0027s notified each time a change to the selection occurs.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#addListSelectionListener(javax.swing.event.ListSelectionListener)\"\u003e\u003ccode\u003eaddListSelectionListener(javax.swing.event.ListSelectionListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the ListSelectionListener"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSelectedIndices",
      "comment": "Returns an array of all of the selected indices in the selection model, in increasing order.",
      "tagMap": {
        "implSpec": [
          "The default implementation iterates from minimum selected index \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#getMinSelectionIndex()\"\u003e\u003ccode\u003egetMinSelectionIndex()\u003c/code\u003e\u003c/a\u003e to maximum selected index \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#getMaxSelectionIndex()\"\u003e\u003ccode\u003egetMaxSelectionIndex()\u003c/code\u003e\u003c/a\u003e and returns the selected indices \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#isSelectedIndex(int)\"\u003e\u003ccode\u003eisSelectedIndex(int)\u003c/code\u003e\u003c/a\u003e in a newly allocated int array."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#removeSelectionInterval(int,int)\"\u003e\u003ccode\u003eremoveSelectionInterval(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#addListSelectionListener(javax.swing.event.ListSelectionListener)\"\u003e\u003ccode\u003eaddListSelectionListener(javax.swing.event.ListSelectionListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "all of the selected indices, in increasing order, or an empty array if nothing is selected"
        ],
        "since": [
          "11"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSelectedItemsCount",
      "comment": "Returns the number of selected items.",
      "tagMap": {
        "implSpec": [
          "The default implementation iterates from minimum selected index \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#getMinSelectionIndex()\"\u003e\u003ccode\u003egetMinSelectionIndex()\u003c/code\u003e\u003c/a\u003e to maximum selected index \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#getMaxSelectionIndex()\"\u003e\u003ccode\u003egetMaxSelectionIndex()\u003c/code\u003e\u003c/a\u003e and returns the number of selected indices \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/ListSelectionModel.html#isSelectedIndex(int)\"\u003e\u003ccode\u003eisSelectedIndex(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the number of selected items, 0 if no items are selected"
        ],
        "since": [
          "11"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.swing.ListSelectionModel",
  "comment": "This interface represents the current state of the selection for any of the components that display a list of values with stable indices. The selection is modeled as a set of intervals, each interval represents a contiguous range of selected list elements. The methods for modifying the set of selected intervals all take a pair of indices, index0 and index1, that represent a closed interval, i.e. the interval includes both index0 and index1.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/DefaultListSelectionModel.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eDefaultListSelectionModel\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}