{
  "packageName": "javax.swing.border",
  "simpleName": "AbstractBorder",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "name": "g",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "x",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "y",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "width",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "height",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "paintBorder",
      "comment": "This default implementation does no painting.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/Border.html#paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)\"\u003epaintBorder\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/Border.html\" title\u003d\"interface in javax.swing.border\"\u003eBorder\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component for which this border is being painted",
          "\u003ccode\u003eg\u003c/code\u003e - the paint graphics",
          "\u003ccode\u003ex\u003c/code\u003e - the x position of the painted border",
          "\u003ccode\u003ey\u003c/code\u003e - the y position of the painted border",
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of the painted border",
          "\u003ccode\u003eheight\u003c/code\u003e - the height of the painted border"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Insets",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBorderInsets",
      "comment": "This default implementation returns a new Insets object that is initialized by the getBorderInsets(Component,Insets) method. By default the top, left, bottom, and right fields are set to 0.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/Border.html#getBorderInsets(java.awt.Component)\"\u003egetBorderInsets\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/Border.html\" title\u003d\"interface in javax.swing.border\"\u003eBorder\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component for which this border insets value applies"
        ],
        "return": [
          "a new \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Insets.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eInsets\u003c/code\u003e\u003c/a\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Insets",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Insets",
            "type": "Class"
          },
          "name": "insets",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBorderInsets",
      "comment": "Reinitializes the insets parameter with this Border\u0027s current Insets.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component for which this border insets value applies",
          "\u003ccode\u003einsets\u003c/code\u003e - the object to be reinitialized"
        ],
        "return": [
          "the \n\u003ccode\u003einsets\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isBorderOpaque",
      "comment": "This default implementation returns false.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/Border.html#isBorderOpaque()\"\u003eisBorderOpaque\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/Border.html\" title\u003d\"interface in javax.swing.border\"\u003eBorder\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "false"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Rectangle",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "x",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "y",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "width",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "height",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getInteriorRectangle",
      "comment": "This convenience method calls the static method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component for which this border is being computed",
          "\u003ccode\u003ex\u003c/code\u003e - the x position of the border",
          "\u003ccode\u003ey\u003c/code\u003e - the y position of the border",
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of the border",
          "\u003ccode\u003eheight\u003c/code\u003e - the height of the border"
        ],
        "return": [
          "a \n\u003ccode\u003eRectangle\u003c/code\u003e containing the interior coordinates"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Rectangle",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.border.Border",
            "type": "Class"
          },
          "name": "b",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "x",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "y",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "width",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "height",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getInteriorRectangle",
      "comment": "Returns a rectangle using the arguments minus the insets of the border. This is useful for determining the area that components should draw in that will not intersect the border.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component for which this border is being computed",
          "\u003ccode\u003eb\u003c/code\u003e - the \n\u003ccode\u003eBorder\u003c/code\u003e object",
          "\u003ccode\u003ex\u003c/code\u003e - the x position of the border",
          "\u003ccode\u003ey\u003c/code\u003e - the y position of the border",
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of the border",
          "\u003ccode\u003eheight\u003c/code\u003e - the height of the border"
        ],
        "return": [
          "a \n\u003ccode\u003eRectangle\u003c/code\u003e containing the interior coordinates"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "width",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "height",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBaseline",
      "comment": "Returns the baseline. A return value less than 0 indicates the border does not have a reasonable baseline. The default implementation returns -1. Subclasses that support baseline should override appropriately. If a value \u003e\u003d 0 is returned, then the component has a valid baseline for any size \u003e\u003d the minimum size and getBaselineResizeBehavior can be used to determine how the baseline changes with size.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getBaseline(int,int)\"\u003e\u003ccode\u003eComponent.getBaseline(int,int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getBaselineResizeBehavior()\"\u003e\u003ccode\u003eComponent.getBaselineResizeBehavior()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - \n\u003ccode\u003eComponent\u003c/code\u003e baseline is being requested for",
          "\u003ccode\u003ewidth\u003c/code\u003e - the width to get the baseline for",
          "\u003ccode\u003eheight\u003c/code\u003e - the height to get the baseline for"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if width or height is \u0026lt; 0"
        ],
        "return": [
          "the baseline or \u0026lt; 0 indicating there is no reasonable baseline"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component$BaselineResizeBehavior",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBaselineResizeBehavior",
      "comment": "Returns an enum indicating how the baseline of a component changes as the size changes. This method is primarily meant for layout managers and GUI builders. The default implementation returns BaselineResizeBehavior.OTHER, subclasses that support baseline should override appropriately. Subclasses should never return null; if the baseline can not be calculated return BaselineResizeBehavior.OTHER. Callers should first ask for the baseline using getBaseline and if a value \u003e\u003d 0 is returned use this method. It is acceptable for this method to return a value other than BaselineResizeBehavior.OTHER even if getBaseline returns a value less than 0.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getBaseline(int,int)\"\u003e\u003ccode\u003eComponent.getBaseline(int,int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getBaselineResizeBehavior()\"\u003e\u003ccode\u003eComponent.getBaselineResizeBehavior()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - \n\u003ccode\u003eComponent\u003c/code\u003e to return baseline resize behavior for"
        ],
        "return": [
          "an enum indicating how the baseline changes as the border is resized"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for subclasses to call.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.swing.border.AbstractBorder",
  "annotations": [],
  "tagMap": {}
}