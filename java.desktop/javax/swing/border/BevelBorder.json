{
  "packageName": "javax.swing.border",
  "simpleName": "BevelBorder",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.border.AbstractBorder",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "RAISED",
      "comment": "Raised bevel type.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.border.BevelBorder.RAISED\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "LOWERED",
      "comment": "Lowered bevel type.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.border.BevelBorder.LOWERED\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "bevelType",
      "comment": "The bevel type.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "highlightOuter",
      "comment": "The color to use for the bevel outer highlight.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "highlightInner",
      "comment": "The color to use for the bevel inner highlight.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "shadowInner",
      "comment": "The color to use for the bevel inner shadow.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "shadowOuter",
      "comment": "the color to use for the bevel outer shadow",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "name": "g",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "x",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "y",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "width",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "height",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "paintBorder",
      "comment": "Paints the border for the specified component with the specified position and size.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/AbstractBorder.html#paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)\"\u003epaintBorder\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/AbstractBorder.html\" title\u003d\"class in javax.swing.border\"\u003eAbstractBorder\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/Border.html#paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)\"\u003epaintBorder\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/Border.html\" title\u003d\"interface in javax.swing.border\"\u003eBorder\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component for which this border is being painted",
          "\u003ccode\u003eg\u003c/code\u003e - the paint graphics",
          "\u003ccode\u003ex\u003c/code\u003e - the x position of the painted border",
          "\u003ccode\u003ey\u003c/code\u003e - the y position of the painted border",
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of the painted border",
          "\u003ccode\u003eheight\u003c/code\u003e - the height of the painted border"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Insets",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Insets",
            "type": "Class"
          },
          "name": "insets",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBorderInsets",
      "comment": "Reinitialize the insets parameter with this Border\u0027s current Insets.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/AbstractBorder.html#getBorderInsets(java.awt.Component,java.awt.Insets)\"\u003egetBorderInsets\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/AbstractBorder.html\" title\u003d\"class in javax.swing.border\"\u003eAbstractBorder\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component for which this border insets value applies",
          "\u003ccode\u003einsets\u003c/code\u003e - the object to be reinitialized"
        ],
        "return": [
          "the \n\u003ccode\u003einsets\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHighlightOuterColor",
      "comment": "Returns the outer highlight color of the bevel border when rendered on the specified component. If no highlight color was specified at instantiation, the highlight color is derived from the specified component\u0027s background color.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component for which the highlight may be derived"
        ],
        "return": [
          "the outer highlight \n\u003ccode\u003eColor\u003c/code\u003e"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHighlightInnerColor",
      "comment": "Returns the inner highlight color of the bevel border when rendered on the specified component. If no highlight color was specified at instantiation, the highlight color is derived from the specified component\u0027s background color.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component for which the highlight may be derived"
        ],
        "return": [
          "the inner highlight \n\u003ccode\u003eColor\u003c/code\u003e"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getShadowInnerColor",
      "comment": "Returns the inner shadow color of the bevel border when rendered on the specified component. If no shadow color was specified at instantiation, the shadow color is derived from the specified component\u0027s background color.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component for which the shadow may be derived"
        ],
        "return": [
          "the inner shadow \n\u003ccode\u003eColor\u003c/code\u003e"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getShadowOuterColor",
      "comment": "Returns the outer shadow color of the bevel border when rendered on the specified component. If no shadow color was specified at instantiation, the shadow color is derived from the specified component\u0027s background color.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component for which the shadow may be derived"
        ],
        "return": [
          "the outer shadow \n\u003ccode\u003eColor\u003c/code\u003e"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHighlightOuterColor",
      "comment": "Returns the outer highlight color of the bevel border. Will return null if no highlight color was specified at instantiation.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the outer highlight \n\u003ccode\u003eColor\u003c/code\u003e or \n\u003ccode\u003enull\u003c/code\u003e if no highlight color was specified"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHighlightInnerColor",
      "comment": "Returns the inner highlight color of the bevel border. Will return null if no highlight color was specified at instantiation.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the inner highlight \n\u003ccode\u003eColor\u003c/code\u003e or \n\u003ccode\u003enull\u003c/code\u003e if no highlight color was specified"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getShadowInnerColor",
      "comment": "Returns the inner shadow color of the bevel border. Will return null if no shadow color was specified at instantiation.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the inner shadow \n\u003ccode\u003eColor\u003c/code\u003e or \n\u003ccode\u003enull\u003c/code\u003e if no shadow color was specified"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getShadowOuterColor",
      "comment": "Returns the outer shadow color of the bevel border. Will return null if no shadow color was specified at instantiation.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the outer shadow \n\u003ccode\u003eColor\u003c/code\u003e or \n\u003ccode\u003enull\u003c/code\u003e if no shadow color was specified"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBevelType",
      "comment": "Returns the type of the bevel border.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the bevel border type, either \n\u003ccode\u003eRAISED\u003c/code\u003e or \n\u003ccode\u003eLOWERED\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isBorderOpaque",
      "comment": "Returns whether or not the border is opaque. This implementation returns true.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/AbstractBorder.html#isBorderOpaque()\"\u003eisBorderOpaque\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/AbstractBorder.html\" title\u003d\"class in javax.swing.border\"\u003eAbstractBorder\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/Border.html#isBorderOpaque()\"\u003eisBorderOpaque\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/Border.html\" title\u003d\"interface in javax.swing.border\"\u003eBorder\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "name": "g",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "x",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "y",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "width",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "height",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "paintRaisedBevel",
      "comment": "Paints a raised bevel for the specified component with the specified position and size.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component for which the raised bevel is being painted",
          "\u003ccode\u003eg\u003c/code\u003e - the paint graphics",
          "\u003ccode\u003ex\u003c/code\u003e - the x position of the raised bevel",
          "\u003ccode\u003ey\u003c/code\u003e - the y position of the raised bevel",
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of the raised bevel",
          "\u003ccode\u003eheight\u003c/code\u003e - the height of the raised bevel"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "name": "g",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "x",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "y",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "width",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "height",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "paintLoweredBevel",
      "comment": "Paints a lowered bevel for the specified component with the specified position and size.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component for which the lowered bevel is being painted",
          "\u003ccode\u003eg\u003c/code\u003e - the paint graphics",
          "\u003ccode\u003ex\u003c/code\u003e - the x position of the lowered bevel",
          "\u003ccode\u003ey\u003c/code\u003e - the y position of the lowered bevel",
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of the lowered bevel",
          "\u003ccode\u003eheight\u003c/code\u003e - the height of the lowered bevel"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "bevelType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a bevel border with the specified type and whose colors will be derived from the background color of the component passed into the paintBorder method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ebevelType\u003c/code\u003e - the type of bevel for the border"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "bevelType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Color",
            "type": "Class"
          },
          "name": "highlight",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Color",
            "type": "Class"
          },
          "name": "shadow",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a bevel border with the specified type, highlight and shadow colors.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ebevelType\u003c/code\u003e - the type of bevel for the border",
          "\u003ccode\u003ehighlight\u003c/code\u003e - the color to use for the bevel highlight",
          "\u003ccode\u003eshadow\u003c/code\u003e - the color to use for the bevel shadow"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "bevelType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Color",
            "type": "Class"
          },
          "name": "highlightOuterColor",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Color",
            "type": "Class"
          },
          "name": "highlightInnerColor",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Color",
            "type": "Class"
          },
          "name": "shadowOuterColor",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Color",
            "type": "Class"
          },
          "name": "shadowInnerColor",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a bevel border with the specified type, highlight and shadow colors.",
      "annotations": [
        {
          "type": {
            "name": "ConstructorProperties",
            "type": "Class"
          },
          "values": [
            {
              "name": "value",
              "value": [
                "bevelType",
                "highlightOuterColor",
                "highlightInnerColor",
                "shadowOuterColor",
                "shadowInnerColor"
              ]
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ebevelType\u003c/code\u003e - the type of bevel for the border",
          "\u003ccode\u003ehighlightOuterColor\u003c/code\u003e - the color to use for the bevel outer highlight",
          "\u003ccode\u003ehighlightInnerColor\u003c/code\u003e - the color to use for the bevel inner highlight",
          "\u003ccode\u003eshadowOuterColor\u003c/code\u003e - the color to use for the bevel outer shadow",
          "\u003ccode\u003eshadowInnerColor\u003c/code\u003e - the color to use for the bevel inner shadow"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.border.BevelBorder",
  "annotations": [],
  "tagMap": {}
}