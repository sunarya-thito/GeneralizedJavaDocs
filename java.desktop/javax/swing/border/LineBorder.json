{
  "packageName": "javax.swing.border",
  "simpleName": "LineBorder",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.border.AbstractBorder",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "thickness",
      "comment": "Thickness of the border.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "lineColor",
      "comment": "Color of the border.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "roundedCorners",
      "comment": "Whether or not the border has rounded corners.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createBlackLineBorder",
      "comment": "Convenience method for getting the Color.black LineBorder of thickness 1.",
      "annotations": [],
      "tagMap": {
        "return": [
          "a \n\u003ccode\u003eLineBorder\u003c/code\u003e with \n\u003ccode\u003eColor.black\u003c/code\u003e and thickness of 1"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.border.Border",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createGrayLineBorder",
      "comment": "Convenience method for getting the Color.gray LineBorder of thickness 1.",
      "annotations": [],
      "tagMap": {
        "return": [
          "a \n\u003ccode\u003eLineBorder\u003c/code\u003e with \n\u003ccode\u003eColor.gray\u003c/code\u003e and thickness of 1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "paintBorder",
      "comment": "Paints the border for the specified component with the specified position and size.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/AbstractBorder.html#paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)\"\u003epaintBorder\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/AbstractBorder.html\" title\u003d\"class in javax.swing.border\"\u003eAbstractBorder\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/Border.html#paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)\"\u003epaintBorder\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/Border.html\" title\u003d\"interface in javax.swing.border\"\u003eBorder\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component for which this border is being painted",
          "\u003ccode\u003eg\u003c/code\u003e - the paint graphics",
          "\u003ccode\u003ex\u003c/code\u003e - the x position of the painted border",
          "\u003ccode\u003ey\u003c/code\u003e - the y position of the painted border",
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of the painted border",
          "\u003ccode\u003eheight\u003c/code\u003e - the height of the painted border"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Insets",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBorderInsets",
      "comment": "Reinitialize the insets parameter with this Border\u0027s current Insets.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/AbstractBorder.html#getBorderInsets(java.awt.Component,java.awt.Insets)\"\u003egetBorderInsets\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/AbstractBorder.html\" title\u003d\"class in javax.swing.border\"\u003eAbstractBorder\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component for which this border insets value applies",
          "\u003ccode\u003einsets\u003c/code\u003e - the object to be reinitialized"
        ],
        "return": [
          "the \n\u003ccode\u003einsets\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLineColor",
      "comment": "Returns the color of the border.",
      "annotations": [],
      "tagMap": {
        "return": [
          "a \n\u003ccode\u003eColor\u003c/code\u003e object representing the color of this object"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getThickness",
      "comment": "Returns the thickness of the border.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the thickness of this border"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRoundedCorners",
      "comment": "Returns whether this border will be drawn with rounded corners.",
      "annotations": [],
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this border should have rounded corners"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isBorderOpaque",
      "comment": "Returns whether or not the border is opaque.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/AbstractBorder.html#isBorderOpaque()\"\u003eisBorderOpaque\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/AbstractBorder.html\" title\u003d\"class in javax.swing.border\"\u003eAbstractBorder\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/Border.html#isBorderOpaque()\"\u003eisBorderOpaque\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/border/Border.html\" title\u003d\"interface in javax.swing.border\"\u003eBorder\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the border is opaque, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Color",
            "type": "Class"
          },
          "name": "color",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a line border with the specified color and a thickness \u003d 1.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecolor\u003c/code\u003e - the color for the border"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Color",
            "type": "Class"
          },
          "name": "color",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "thickness",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a line border with the specified color and thickness.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecolor\u003c/code\u003e - the color of the border",
          "\u003ccode\u003ethickness\u003c/code\u003e - the thickness of the border"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Color",
            "type": "Class"
          },
          "name": "color",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "thickness",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "roundedCorners",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a line border with the specified color, thickness, and corner shape.",
      "annotations": [
        {
          "type": {
            "name": "ConstructorProperties",
            "type": "Class"
          },
          "values": [
            {
              "name": "value",
              "value": [
                "lineColor",
                "thickness",
                "roundedCorners"
              ]
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecolor\u003c/code\u003e - the color of the border",
          "\u003ccode\u003ethickness\u003c/code\u003e - the thickness of the border",
          "\u003ccode\u003eroundedCorners\u003c/code\u003e - whether or not border corners should be round"
        ],
        "since": [
          "1.3"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.border.LineBorder",
  "comment": "A class which implements a line border of arbitrary thickness and of a single color. \n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {}
}