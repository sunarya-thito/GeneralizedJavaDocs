{
  "packageName": "javax.swing.event",
  "simpleName": "TableModelEvent",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.EventObject",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "INSERT",
      "comment": "Identifies the addition of new rows or columns.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.event.TableModelEvent.INSERT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "UPDATE",
      "comment": "Identifies a change to existing data.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.event.TableModelEvent.UPDATE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DELETE",
      "comment": "Identifies the removal of rows or columns.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.event.TableModelEvent.DELETE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "HEADER_ROW",
      "comment": "Identifies the header row.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.event.TableModelEvent.HEADER_ROW\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ALL_COLUMNS",
      "comment": "Specifies all columns in a row or rows.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.event.TableModelEvent.ALL_COLUMNS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "type",
      "comment": "The type of the event.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "firstRow",
      "comment": "The first row that has changed.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "lastRow",
      "comment": "The last row that has changed.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "column",
      "comment": "The column for the event.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getFirstRow",
      "comment": "Returns the first row that changed. HEADER_ROW means the meta data, ie. names, types and order of the columns.",
      "tagMap": {
        "return": [
          "an integer signifying the first row changed"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLastRow",
      "comment": "Returns the last row that changed.",
      "tagMap": {
        "return": [
          "an integer signifying the last row changed"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColumn",
      "comment": "Returns the column for the event. If the return value is ALL_COLUMNS; it means every column in the specified rows changed.",
      "tagMap": {
        "return": [
          "an integer signifying which column is affected by this event"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getType",
      "comment": "Returns the type of event - one of: INSERT, UPDATE and DELETE.",
      "tagMap": {
        "return": [
          "the type of change to a table model, an \n\u003ccode\u003eINSERT\u003c/code\u003e or \n\u003ccode\u003eDELETE \u003c/code\u003e of row(s) or column(s) or \n\u003ccode\u003eUPDATE\u003c/code\u003e to data"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.swing.table.TableModel",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "All row data in the table has changed, listeners should discard any state that was based on the rows and requery the TableModel to get the new row count and all the appropriate values. The JTable will repaint the entire visible region on receiving this event, querying the model for the cell values that are visible. The structure of the table ie, the column names, types and order have not changed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eTableModel\u003c/code\u003e affected by this event"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.swing.table.TableModel",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "row"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "This row of data has been updated. To denote the arrival of a completely new table with a different structure use HEADER_ROW as the value for the row. When the JTable receives this event and its autoCreateColumnsFromModel flag is set it discards any TableColumns that it had and reallocates default ones in the order they appear in the model. This is the same as calling setModel(TableModel) on the JTable.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eTableModel\u003c/code\u003e affected by this event",
          "\u003ccode\u003erow\u003c/code\u003e - the row which has been updated"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.swing.table.TableModel",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "firstRow"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "lastRow"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "The data in rows [firstRow, lastRow] have been updated.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eTableModel\u003c/code\u003e affected by this event",
          "\u003ccode\u003efirstRow\u003c/code\u003e - the first row affected by this event",
          "\u003ccode\u003elastRow\u003c/code\u003e - the last row affected by this event"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.swing.table.TableModel",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "firstRow"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "lastRow"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "column"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "The cells in column column in the range [firstRow, lastRow] have been updated.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eTableModel\u003c/code\u003e affected by this event",
          "\u003ccode\u003efirstRow\u003c/code\u003e - the first row affected by this event",
          "\u003ccode\u003elastRow\u003c/code\u003e - the last row affected by this event",
          "\u003ccode\u003ecolumn\u003c/code\u003e - the column index of cells changed; \n\u003ccode\u003eALL_COLUMNS\u003c/code\u003e signifies all cells in the specified range of rows are changed."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.swing.table.TableModel",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "firstRow"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "lastRow"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "column"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "type"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "The cells from (firstRow, column) to (lastRow, column) have been changed. The column refers to the column index of the cell in the model\u0027s co-ordinate system. When column is ALL_COLUMNS, all cells in the specified range of rows are considered changed. The type should be one of: INSERT, UPDATE and DELETE.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the \n\u003ccode\u003eTableModel\u003c/code\u003e affected by this event",
          "\u003ccode\u003efirstRow\u003c/code\u003e - the first row affected by this event",
          "\u003ccode\u003elastRow\u003c/code\u003e - the last row affected by this event",
          "\u003ccode\u003ecolumn\u003c/code\u003e - the column index of cells changed; \n\u003ccode\u003eALL_COLUMNS\u003c/code\u003e signifies all cells in the specified range of rows are changed.",
          "\u003ccode\u003etype\u003c/code\u003e - the type of change signified by this even, \n\u003ccode\u003eINSERT\u003c/code\u003e, \n\u003ccode\u003eDELETE \u003c/code\u003e or \n\u003ccode\u003eUPDATE\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.event.TableModelEvent",
  "comment": "TableModelEvent is used to notify listeners that a table model has changed. The model event describes changes to a TableModel and all references to rows and columns are in the co-ordinate system of the model. Depending on the parameters used in the constructors, the TableModelevent can be used to specify the following types of changes: \n\u003cpre\u003e TableModelEvent(source);              //  The data, ie. all rows changed\n TableModelEvent(source, HEADER_ROW);  //  Structure change, reallocate TableColumns\n TableModelEvent(source, 1);           //  Row 1 changed\n TableModelEvent(source, 3, 6);        //  Rows 3 to 6 inclusive changed\n TableModelEvent(source, 2, 2, 6);     //  Cell at (2, 6) changed\n TableModelEvent(source, 3, 6, ALL_COLUMNS, INSERT); // Rows (3, 6) were inserted\n TableModelEvent(source, 3, 6, ALL_COLUMNS, DELETE); // Rows (3, 6) were deleted\n \u003c/pre\u003e It is possible to use other combinations of the parameters, not all of them are meaningful. By subclassing, you can add other information, for example: whether the event WILL happen or DID happen. This makes the specification of rows in DELETE events more useful but has not been included in the swing package as the JTable only needs post-event notification. \n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/table/TableModel.html\" title\u003d\"interface in javax.swing.table\"\u003e\u003ccode\u003eTableModel\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}