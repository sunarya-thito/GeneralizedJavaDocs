{
  "packageName": "javax.swing.event",
  "simpleName": "TreeSelectionEvent",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.EventObject",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.swing.tree.TreePath",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "paths",
      "comment": "Paths this event represents.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "areNew",
      "comment": "For each path identifies if that path is in fact new.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.tree.TreePath",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "oldLeadSelectionPath",
      "comment": "leadSelectionPath before the paths changed, may be null.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.tree.TreePath",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "newLeadSelectionPath",
      "comment": "leadSelectionPath after the paths changed, may be null.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "javax.swing.tree.TreePath",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPaths",
      "comment": "Returns the paths that have been added or removed from the selection.",
      "tagMap": {
        "return": [
          "copy of the array of \n\u003ccode\u003eTreePath\u003c/code\u003e obects for this event."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.tree.TreePath",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPath",
      "comment": "Returns the first path element.",
      "tagMap": {
        "return": [
          "the first \n\u003ccode\u003eTreePath\u003c/code\u003e element represented by this event"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isAddedPath",
      "comment": "Returns whether the path identified by getPath was added to the selection. A return value of true indicates the path identified by getPath was added to the selection. A return value of false indicates getPath was selected, but is no longer selected.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003egetPath\u003c/code\u003e was added to the selection, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.tree.TreePath",
            "type": "Class"
          },
          "field": {
            "name": "path"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isAddedPath",
      "comment": "Returns whether the specified path was added to the selection. A return value of true indicates the path identified by path was added to the selection. A return value of false indicates path is no longer selected. This method is only valid for the paths returned from getPaths(); invoking with a path not included in getPaths() throws an IllegalArgumentException.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TreeSelectionEvent.html#getPaths()\"\u003e\u003ccode\u003egetPaths()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003epath\u003c/code\u003e - the path to test"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003epath\u003c/code\u003e is not contained in \n\u003ccode\u003egetPaths\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003epath\u003c/code\u003e was added to the selection, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isAddedPath",
      "comment": "Returns whether the path at getPaths()[index] was added to the selection. A return value of true indicates the path was added to the selection. A return value of false indicates the path is no longer selected.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TreeSelectionEvent.html#getPaths()\"\u003e\u003ccode\u003egetPaths()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the path to test"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if index is outside the range of \n\u003ccode\u003egetPaths\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the path was added to the selection, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.tree.TreePath",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOldLeadSelectionPath",
      "comment": "Returns the path that was previously the lead path.",
      "tagMap": {
        "return": [
          "a \n\u003ccode\u003eTreePath\u003c/code\u003e containing the old lead selection path"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.tree.TreePath",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNewLeadSelectionPath",
      "comment": "Returns the current lead path.",
      "tagMap": {
        "return": [
          "a \n\u003ccode\u003eTreePath\u003c/code\u003e containing the new lead selection path"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "newSource"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "cloneWithSource",
      "comment": "Returns a copy of the receiver, but with the source being newSource.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enewSource\u003c/code\u003e - source of event"
        ],
        "return": [
          "an \n\u003ccode\u003eObject\u003c/code\u003e which is a copy of this event with the source being the \n\u003ccode\u003enewSource\u003c/code\u003e provided"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "javax.swing.tree.TreePath",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "paths"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "areNew"
          }
        },
        {
          "type": {
            "name": "javax.swing.tree.TreePath",
            "type": "Class"
          },
          "field": {
            "name": "oldLeadSelectionPath"
          }
        },
        {
          "type": {
            "name": "javax.swing.tree.TreePath",
            "type": "Class"
          },
          "field": {
            "name": "newLeadSelectionPath"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Represents a change in the selection of a TreeSelectionModel. paths identifies the paths that have been either added or removed from the selection.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - source of event",
          "\u003ccode\u003epaths\u003c/code\u003e - the paths that have changed in the selection",
          "\u003ccode\u003eareNew\u003c/code\u003e - a \n\u003ccode\u003eboolean\u003c/code\u003e array indicating whether the paths in \n\u003ccode\u003epaths\u003c/code\u003e are new to the selection",
          "\u003ccode\u003eoldLeadSelectionPath\u003c/code\u003e - the previous lead selection path",
          "\u003ccode\u003enewLeadSelectionPath\u003c/code\u003e - the new lead selection path"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "javax.swing.tree.TreePath",
            "type": "Class"
          },
          "field": {
            "name": "path"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "isNew"
          }
        },
        {
          "type": {
            "name": "javax.swing.tree.TreePath",
            "type": "Class"
          },
          "field": {
            "name": "oldLeadSelectionPath"
          }
        },
        {
          "type": {
            "name": "javax.swing.tree.TreePath",
            "type": "Class"
          },
          "field": {
            "name": "newLeadSelectionPath"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Represents a change in the selection of a TreeSelectionModel. path identifies the path that has been either added or removed from the selection.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - source of event",
          "\u003ccode\u003epath\u003c/code\u003e - the path that has changed in the selection",
          "\u003ccode\u003eisNew\u003c/code\u003e - whether or not the path is new to the selection, false means path was removed from the selection.",
          "\u003ccode\u003eoldLeadSelectionPath\u003c/code\u003e - the previous lead selection path",
          "\u003ccode\u003enewLeadSelectionPath\u003c/code\u003e - the new lead selection path"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.event.TreeSelectionEvent",
  "comment": "An event that characterizes a change in the current selection. The change is based on any number of paths. TreeSelectionListeners will generally query the source of the event for the new selected status of each potentially changed row. \n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/TreeSelectionListener.html\" title\u003d\"interface in javax.swing.event\"\u003e\u003ccode\u003eTreeSelectionListener\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/tree/TreeSelectionModel.html\" title\u003d\"interface in javax.swing.tree\"\u003e\u003ccode\u003eTreeSelectionModel\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}