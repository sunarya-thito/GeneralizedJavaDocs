{
  "packageName": "javax.swing.event",
  "simpleName": "RowSorterEvent",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.EventObject",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.swing.RowSorter",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSource",
      "comment": "Returns the source of the event as a RowSorter.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/EventObject.html#getSource()\"\u003egetSource\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/EventObject.html\" title\u003d\"class in java.util\"\u003eEventObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the source of the event as a \n\u003ccode\u003eRowSorter\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.event.RowSorterEvent$Type",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getType",
      "comment": "Returns the type of event.",
      "tagMap": {
        "return": [
          "the type of event"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "convertPreviousRowIndexToModel",
      "comment": "Returns the location of index in terms of the model prior to the sort. This method is only useful for events of type SORTED. This method will return -1 if the index is not valid, or the locations prior to the sort have not been provided.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index in terms of the view"
        ],
        "return": [
          "the index in terms of the model prior to the sort, or -1 if the location is not valid or the mapping was not provided."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPreviousRowCount",
      "comment": "Returns the number of rows before the sort. This method is only useful for events of type SORTED and if the last locations have not been provided will return 0.",
      "tagMap": {
        "return": [
          "the number of rows in terms of the view prior to the sort"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.swing.RowSorter",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a RowSorterEvent of type SORT_ORDER_CHANGED.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the source of the change"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esource\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.swing.RowSorter",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "javax.swing.event.RowSorterEvent$Type",
            "type": "Class"
          },
          "field": {
            "name": "type"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "previousRowIndexToModel"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a RowSorterEvent.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the source of the change",
          "\u003ccode\u003etype\u003c/code\u003e - the type of event",
          "\u003ccode\u003epreviousRowIndexToModel\u003c/code\u003e - the mapping from model indices to view indices prior to the sort, may be \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if source or \n\u003ccode\u003etype\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    }
  ],
  "innerClasses": [
    "javax.swing.event.RowSorterEvent$Type"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.event.RowSorterEvent",
  "comment": "\u003ccode\u003eRowSorterEvent\u003c/code\u003e provides notification of changes to a \n\u003ccode\u003eRowSorter\u003c/code\u003e. Two types of notification are possible: \n\u003cul\u003e \n \u003cli\u003e\u003ccode\u003eType.SORT_ORDER_CHANGED\u003c/code\u003e: indicates the sort order has changed. This is typically followed by a notification of: \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eType.SORTED\u003c/code\u003e: indicates the contents of the model have been transformed in some way. For example, the contents may have been sorted or filtered. \u003c/li\u003e\n\u003c/ul\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/RowSorter.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eRowSorter\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}