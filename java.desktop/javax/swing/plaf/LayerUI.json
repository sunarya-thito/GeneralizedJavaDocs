{
  "packageName": "javax.swing.plaf",
  "simpleName": "LayerUI",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.plaf.ComponentUI",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        },
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "paint",
      "comment": "Paints the specified component. Subclasses should override this method and use the specified Graphics object to render the content of the component. The default implementation paints the passed component as is.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#update(java.awt.Graphics,javax.swing.JComponent)\"\u003e\u003ccode\u003eComponentUI.update(java.awt.Graphics, javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#paint(java.awt.Graphics,javax.swing.JComponent)\"\u003epaint\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eg\u003c/code\u003e - the \n\u003ccode\u003eGraphics\u003c/code\u003e context in which to paint",
          "\u003ccode\u003ec\u003c/code\u003e - the component being painted"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.AWTEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "name": "javax.swing.JLayer",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.plaf.LayerUI",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "eventDispatched",
      "comment": "Processes AWTEvents for JLayer and all its descendants to this LayerUI instance. To enable the AWTEvents of a particular type, you call JLayer.setLayerEventMask(long) in installUI(javax.swing.JComponent) and set the layer event mask to 0 in uninstallUI(javax.swing.JComponent) after that. By default this method calls the appropriate process\u003cevent type\u003eEvent method for the given class of event. Note: Events are processed only for displayable JLayers.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setLayerEventMask(long)\"\u003e\u003ccode\u003eJLayer.setLayerEventMask(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#isDisplayable()\"\u003e\u003ccode\u003eComponent.isDisplayable()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#processComponentEvent(java.awt.event.ComponentEvent,javax.swing.JLayer)\"\u003e\u003ccode\u003eprocessComponentEvent(java.awt.event.ComponentEvent, javax.swing.JLayer\u0026lt;? extends V\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#processFocusEvent(java.awt.event.FocusEvent,javax.swing.JLayer)\"\u003e\u003ccode\u003eprocessFocusEvent(java.awt.event.FocusEvent, javax.swing.JLayer\u0026lt;? extends V\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#processKeyEvent(java.awt.event.KeyEvent,javax.swing.JLayer)\"\u003e\u003ccode\u003eprocessKeyEvent(java.awt.event.KeyEvent, javax.swing.JLayer\u0026lt;? extends V\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#processMouseEvent(java.awt.event.MouseEvent,javax.swing.JLayer)\"\u003e\u003ccode\u003eprocessMouseEvent(java.awt.event.MouseEvent, javax.swing.JLayer\u0026lt;? extends V\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#processMouseMotionEvent(java.awt.event.MouseEvent,javax.swing.JLayer)\"\u003e\u003ccode\u003eprocessMouseMotionEvent(java.awt.event.MouseEvent, javax.swing.JLayer\u0026lt;? extends V\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#processInputMethodEvent(java.awt.event.InputMethodEvent,javax.swing.JLayer)\"\u003e\u003ccode\u003eprocessInputMethodEvent(java.awt.event.InputMethodEvent, javax.swing.JLayer\u0026lt;? extends V\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#processHierarchyEvent(java.awt.event.HierarchyEvent,javax.swing.JLayer)\"\u003e\u003ccode\u003eprocessHierarchyEvent(java.awt.event.HierarchyEvent, javax.swing.JLayer\u0026lt;? extends V\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#processMouseWheelEvent(java.awt.event.MouseWheelEvent,javax.swing.JLayer)\"\u003e\u003ccode\u003eprocessMouseWheelEvent(java.awt.event.MouseWheelEvent, javax.swing.JLayer\u0026lt;? extends V\u0026gt;)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event to be dispatched",
          "\u003ccode\u003el\u003c/code\u003e - the layer this LayerUI is set to"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.ComponentEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "name": "javax.swing.JLayer",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.plaf.LayerUI",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "processComponentEvent",
      "comment": "Processes component events occurring on the JLayer or any of its subcomponents. This method is not called unless component events are enabled for the JLayer objects, this LayerUI is set to. Component events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that.  public void installUI(JComponent c) {\n    super.installUI(c);\n    JLayer l \u003d (JLayer) c;\n    l.setLayerEventMask(AWTEvent.COMPONENT_EVENT_MASK);\n }\n\n public void uninstallUI(JComponent c) {\n     super.uninstallUI(c);\n     JLayer l \u003d (JLayer) c;\n     l.setLayerEventMask(0);\n }",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setLayerEventMask(long)\"\u003e\u003ccode\u003eJLayer.setLayerEventMask(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003einstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#uninstallUI(javax.swing.JComponent)\"\u003e\u003ccode\u003euninstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the \n\u003ccode\u003eComponentEvent\u003c/code\u003e to be processed",
          "\u003ccode\u003el\u003c/code\u003e - the layer this \n\u003ccode\u003eLayerUI\u003c/code\u003e instance is set to"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.FocusEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "name": "javax.swing.JLayer",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.plaf.LayerUI",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "processFocusEvent",
      "comment": "Processes focus events occurring on the JLayer or any of its subcomponents. This method is not called unless focus events are enabled for the JLayer objects, this LayerUI is set to. Focus events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that.  public void installUI(JComponent c) {\n    super.installUI(c);\n    JLayer l \u003d (JLayer) c;\n    l.setLayerEventMask(AWTEvent.FOCUS_EVENT_MASK);\n }\n\n public void uninstallUI(JComponent c) {\n     super.uninstallUI(c);\n     JLayer l \u003d (JLayer) c;\n     l.setLayerEventMask(0);\n }",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setLayerEventMask(long)\"\u003e\u003ccode\u003eJLayer.setLayerEventMask(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003einstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#uninstallUI(javax.swing.JComponent)\"\u003e\u003ccode\u003euninstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the \n\u003ccode\u003eFocusEvent\u003c/code\u003e to be processed",
          "\u003ccode\u003el\u003c/code\u003e - the layer this \n\u003ccode\u003eLayerUI\u003c/code\u003e instance is set to"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.KeyEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "name": "javax.swing.JLayer",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.plaf.LayerUI",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "processKeyEvent",
      "comment": "Processes key events occurring on the JLayer or any of its subcomponents. This method is not called unless key events are enabled for the JLayer objects, this LayerUI is set to. Key events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that.  public void installUI(JComponent c) {\n    super.installUI(c);\n    JLayer l \u003d (JLayer) c;\n    l.setLayerEventMask(AWTEvent.KEY_EVENT_MASK);\n }\n\n public void uninstallUI(JComponent c) {\n     super.uninstallUI(c);\n     JLayer l \u003d (JLayer) c;\n     l.setLayerEventMask(0);\n }",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setLayerEventMask(long)\"\u003e\u003ccode\u003eJLayer.setLayerEventMask(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003einstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#uninstallUI(javax.swing.JComponent)\"\u003e\u003ccode\u003euninstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the \n\u003ccode\u003eKeyEvent\u003c/code\u003e to be processed",
          "\u003ccode\u003el\u003c/code\u003e - the layer this \n\u003ccode\u003eLayerUI\u003c/code\u003e instance is set to"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.MouseEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "name": "javax.swing.JLayer",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.plaf.LayerUI",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "processMouseEvent",
      "comment": "Processes mouse events occurring on the JLayer or any of its subcomponents. This method is not called unless mouse events are enabled for the JLayer objects, this LayerUI is set to. Mouse events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that.  public void installUI(JComponent c) {\n    super.installUI(c);\n    JLayer l \u003d (JLayer) c;\n    l.setLayerEventMask(AWTEvent.MOUSE_EVENT_MASK);\n }\n\n public void uninstallUI(JComponent c) {\n     super.uninstallUI(c);\n     JLayer l \u003d (JLayer) c;\n     l.setLayerEventMask(0);\n }",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setLayerEventMask(long)\"\u003e\u003ccode\u003eJLayer.setLayerEventMask(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003einstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#uninstallUI(javax.swing.JComponent)\"\u003e\u003ccode\u003euninstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the \n\u003ccode\u003eMouseEvent\u003c/code\u003e to be processed",
          "\u003ccode\u003el\u003c/code\u003e - the layer this \n\u003ccode\u003eLayerUI\u003c/code\u003e instance is set to"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.MouseEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "name": "javax.swing.JLayer",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.plaf.LayerUI",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "processMouseMotionEvent",
      "comment": "Processes mouse motion event occurring on the JLayer or any of its subcomponents. This method is not called unless mouse motion events are enabled for the JLayer objects, this LayerUI is set to. Mouse motion events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that.  public void installUI(JComponent c) {\n    super.installUI(c);\n    JLayer l \u003d (JLayer) c;\n    l.setLayerEventMask(AWTEvent.MOUSE_MOTION_EVENT_MASK);\n }\n\n public void uninstallUI(JComponent c) {\n     super.uninstallUI(c);\n     JLayer l \u003d (JLayer) c;\n     l.setLayerEventMask(0);\n }",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setLayerEventMask(long)\"\u003e\u003ccode\u003eJLayer.setLayerEventMask(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003einstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#uninstallUI(javax.swing.JComponent)\"\u003e\u003ccode\u003euninstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the \n\u003ccode\u003eMouseEvent\u003c/code\u003e to be processed",
          "\u003ccode\u003el\u003c/code\u003e - the layer this \n\u003ccode\u003eLayerUI\u003c/code\u003e instance is set to"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.MouseWheelEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "name": "javax.swing.JLayer",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.plaf.LayerUI",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "processMouseWheelEvent",
      "comment": "Processes mouse wheel event occurring on the JLayer or any of its subcomponents. This method is not called unless mouse wheel events are enabled for the JLayer objects, this LayerUI is set to. Mouse wheel events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that.  public void installUI(JComponent c) {\n    super.installUI(c);\n    JLayer l \u003d (JLayer) c;\n    l.setLayerEventMask(AWTEvent.MOUSE_WHEEL_EVENT_MASK);\n }\n\n public void uninstallUI(JComponent c) {\n     super.uninstallUI(c);\n     JLayer l \u003d (JLayer) c;\n     l.setLayerEventMask(0);\n }",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setLayerEventMask(long)\"\u003e\u003ccode\u003eJLayer.setLayerEventMask(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003einstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#uninstallUI(javax.swing.JComponent)\"\u003e\u003ccode\u003euninstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the \n\u003ccode\u003eMouseEvent\u003c/code\u003e to be processed",
          "\u003ccode\u003el\u003c/code\u003e - the layer this \n\u003ccode\u003eLayerUI\u003c/code\u003e instance is set to"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.InputMethodEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "name": "javax.swing.JLayer",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.plaf.LayerUI",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "processInputMethodEvent",
      "comment": "Processes input event occurring on the JLayer or any of its subcomponents. This method is not called unless input events are enabled for the JLayer objects, this LayerUI is set to. Input events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that.  public void installUI(JComponent c) {\n    super.installUI(c);\n    JLayer l \u003d (JLayer) c;\n    l.setLayerEventMask(AWTEvent.INPUT_METHOD_EVENT_MASK);\n }\n\n public void uninstallUI(JComponent c) {\n     super.uninstallUI(c);\n     JLayer l \u003d (JLayer) c;\n     l.setLayerEventMask(0);\n }",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setLayerEventMask(long)\"\u003e\u003ccode\u003eJLayer.setLayerEventMask(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003einstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#uninstallUI(javax.swing.JComponent)\"\u003e\u003ccode\u003euninstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the \n\u003ccode\u003eInputMethodEvent\u003c/code\u003e to be processed",
          "\u003ccode\u003el\u003c/code\u003e - the layer this \n\u003ccode\u003eLayerUI\u003c/code\u003e instance is set to"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.HierarchyEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "name": "javax.swing.JLayer",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.plaf.LayerUI",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "processHierarchyEvent",
      "comment": "Processes hierarchy event occurring on the JLayer or any of its subcomponents. This method is not called unless hierarchy events are enabled for the JLayer objects, this LayerUI is set to. Hierarchy events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that.  public void installUI(JComponent c) {\n    super.installUI(c);\n    JLayer l \u003d (JLayer) c;\n    l.setLayerEventMask(AWTEvent.HIERARCHY_EVENT_MASK);\n }\n\n public void uninstallUI(JComponent c) {\n     super.uninstallUI(c);\n     JLayer l \u003d (JLayer) c;\n     l.setLayerEventMask(0);\n }",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setLayerEventMask(long)\"\u003e\u003ccode\u003eJLayer.setLayerEventMask(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003einstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#uninstallUI(javax.swing.JComponent)\"\u003e\u003ccode\u003euninstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the \n\u003ccode\u003eHierarchyEvent\u003c/code\u003e to be processed",
          "\u003ccode\u003el\u003c/code\u003e - the layer this \n\u003ccode\u003eLayerUI\u003c/code\u003e instance is set to"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.HierarchyEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        },
        {
          "type": {
            "name": "javax.swing.JLayer",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.plaf.LayerUI",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "processHierarchyBoundsEvent",
      "comment": "Processes hierarchy bounds event occurring on the JLayer or any of its subcomponents. This method is not called unless hierarchy bounds events are enabled for the JLayer objects, this LayerUI is set to. Hierarchy bounds events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that.  public void installUI(JComponent c) {\n    super.installUI(c);\n    JLayer l \u003d (JLayer) c;\n    l.setLayerEventMask(AWTEvent.HIERARCHY_BOUNDS_EVENT_MASK);\n }\n\n public void uninstallUI(JComponent c) {\n     super.uninstallUI(c);\n     JLayer l \u003d (JLayer) c;\n     l.setLayerEventMask(0);\n }",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setLayerEventMask(long)\"\u003e\u003ccode\u003eJLayer.setLayerEventMask(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003einstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#uninstallUI(javax.swing.JComponent)\"\u003e\u003ccode\u003euninstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the \n\u003ccode\u003eHierarchyEvent\u003c/code\u003e to be processed",
          "\u003ccode\u003el\u003c/code\u003e - the layer this \n\u003ccode\u003eLayerUI\u003c/code\u003e instance is set to"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JLayer",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.plaf.LayerUI",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "updateUI",
      "comment": "Invoked when JLayer.updateUI() is called by the JLayer this LayerUI is set to.",
      "tagMap": {
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the \n\u003ccode\u003eJLayer\u003c/code\u003e which UI is updated"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "installUI",
      "comment": "Configures the JLayer this LayerUI is set to. The default implementation registers the passed JLayer component as a PropertyChangeListener for the property changes of this LayerUI.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#uninstallUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eComponentUI.uninstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#setUI(javax.swing.plaf.ComponentUI)\"\u003e\u003ccode\u003eJComponent.setUI(javax.swing.plaf.ComponentUI)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#updateUI()\"\u003e\u003ccode\u003eJComponent.updateUI()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#installUI(javax.swing.JComponent)\"\u003einstallUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the \n\u003ccode\u003eJLayer\u003c/code\u003e component where this UI delegate is being installed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "uninstallUI",
      "comment": "Reverses the configuration which was previously set in the installUI(JComponent) method. The default implementation unregisters the passed JLayer component as a PropertyChangeListener for the property changes of this LayerUI.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eComponentUI.installUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#updateUI()\"\u003e\u003ccode\u003eJComponent.updateUI()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#uninstallUI(javax.swing.JComponent)\"\u003euninstallUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component from which this UI delegate is being removed."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.beans.PropertyChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "listener"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addPropertyChangeListener",
      "comment": "Adds a PropertyChangeListener to the listener list. The listener is registered for all bound properties of this class. If listener is null, no exception is thrown and no action is performed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#removePropertyChangeListener(java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eremovePropertyChangeListener(java.beans.PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#getPropertyChangeListeners()\"\u003e\u003ccode\u003egetPropertyChangeListeners()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eaddPropertyChangeListener(String, java.beans.PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elistener\u003c/code\u003e - the property change listener to be added"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.beans.PropertyChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "listener"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removePropertyChangeListener",
      "comment": "Removes a PropertyChangeListener from the listener list. This method should be used to remove PropertyChangeListeners that were registered for all bound properties of this class. If listener is null, no exception is thrown and no action is performed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#addPropertyChangeListener(java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eaddPropertyChangeListener(java.beans.PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#getPropertyChangeListeners()\"\u003e\u003ccode\u003egetPropertyChangeListeners()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eremovePropertyChangeListener(String, PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elistener\u003c/code\u003e - the PropertyChangeListener to be removed"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.beans.PropertyChangeListener",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPropertyChangeListeners",
      "comment": "Returns an array of all the property change listeners registered on this component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#addPropertyChangeListener(java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eaddPropertyChangeListener(java.beans.PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#removePropertyChangeListener(java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eremovePropertyChangeListener(java.beans.PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#getPropertyChangeListeners(java.lang.String)\"\u003e\u003ccode\u003egetPropertyChangeListeners(String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "all of this ui\u0027s \n\u003ccode\u003ePropertyChangeListener\u003c/code\u003es or an empty array if no property change listeners are currently registered"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "propertyName"
          }
        },
        {
          "type": {
            "name": "java.beans.PropertyChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "listener"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addPropertyChangeListener",
      "comment": "Adds a PropertyChangeListener to the listener list for a specific property. If propertyName or listener is null, no exception is thrown and no action is taken.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eremovePropertyChangeListener(String, PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#getPropertyChangeListeners(java.lang.String)\"\u003e\u003ccode\u003egetPropertyChangeListeners(String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eaddPropertyChangeListener(String, PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003epropertyName\u003c/code\u003e - one of the property names listed above",
          "\u003ccode\u003elistener\u003c/code\u003e - the property change listener to be added"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "propertyName"
          }
        },
        {
          "type": {
            "name": "java.beans.PropertyChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "listener"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removePropertyChangeListener",
      "comment": "Removes a PropertyChangeListener from the listener list for a specific property. This method should be used to remove PropertyChangeListeners that were registered for a specific bound property. If propertyName or listener is null, no exception is thrown and no action is taken.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eaddPropertyChangeListener(String, PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#getPropertyChangeListeners(java.lang.String)\"\u003e\u003ccode\u003egetPropertyChangeListeners(String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#removePropertyChangeListener(java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eremovePropertyChangeListener(PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003epropertyName\u003c/code\u003e - a valid property name",
          "\u003ccode\u003elistener\u003c/code\u003e - the PropertyChangeListener to be removed"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.beans.PropertyChangeListener",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "propertyName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPropertyChangeListeners",
      "comment": "Returns an array of all the listeners which have been associated with the named property.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eaddPropertyChangeListener(String, PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eremovePropertyChangeListener(String, PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/LayerUI.html#getPropertyChangeListeners()\"\u003e\u003ccode\u003egetPropertyChangeListeners()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003epropertyName\u003c/code\u003e - The name of the property being listened to"
        ],
        "return": [
          "all of the \n\u003ccode\u003ePropertyChangeListener\u003c/code\u003es associated with the named property; if no such listeners have been added or if \n\u003ccode\u003epropertyName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, an empty array is returned"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "propertyName"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "oldValue"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "newValue"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "firePropertyChange",
      "comment": "Support for reporting bound property changes for Object properties. This method can be called when a bound property has changed and it will send the appropriate PropertyChangeEvent to any registered PropertyChangeListeners.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epropertyName\u003c/code\u003e - the property whose value has changed",
          "\u003ccode\u003eoldValue\u003c/code\u003e - the property\u0027s previous value",
          "\u003ccode\u003enewValue\u003c/code\u003e - the property\u0027s new value"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.beans.PropertyChangeEvent",
            "type": "Class"
          },
          "field": {
            "name": "evt"
          }
        },
        {
          "type": {
            "name": "javax.swing.JLayer",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.plaf.LayerUI",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "applyPropertyChange",
      "comment": "Notifies the LayerUI when any of its property are changed and enables updating every JLayer this LayerUI instance is set to.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eevt\u003c/code\u003e - the PropertyChangeEvent generated by this \n\u003ccode\u003eLayerUI\u003c/code\u003e",
          "\u003ccode\u003el\u003c/code\u003e - the \n\u003ccode\u003eJLayer\u003c/code\u003e this LayerUI is set to"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "width"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "height"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBaseline",
      "comment": "If the JLayer\u0027s view component is not null, this calls the view\u0027s getBaseline() method. Otherwise, the default implementation is called.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getBaseline(int,int)\"\u003e\u003ccode\u003eJComponent.getBaseline(int,int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#getBaseline(javax.swing.JComponent,int,int)\"\u003egetBaseline\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - \n\u003ccode\u003eJLayer\u003c/code\u003e to return baseline resize behavior for",
          "\u003ccode\u003ewidth\u003c/code\u003e - the width to get the baseline for",
          "\u003ccode\u003eheight\u003c/code\u003e - the height to get the baseline for"
        ],
        "return": [
          "baseline or a value \u0026lt; 0 indicating there is no reasonable baseline"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component$BaselineResizeBehavior",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBaselineResizeBehavior",
      "comment": "If the JLayer\u0027s view component is not null, this returns the result of the view\u0027s getBaselineResizeBehavior() method. Otherwise, the default implementation is called.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getBaseline(int,int)\"\u003e\u003ccode\u003eJComponent.getBaseline(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#getBaselineResizeBehavior(javax.swing.JComponent)\"\u003egetBaselineResizeBehavior\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - \n\u003ccode\u003eJLayer\u003c/code\u003e to return baseline resize behavior for"
        ],
        "return": [
          "an enum indicating how the baseline changes as the component size changes"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JLayer",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.plaf.LayerUI",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "doLayout",
      "comment": "Causes the passed instance of JLayer to lay out its components.",
      "tagMap": {
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the \n\u003ccode\u003eJLayer\u003c/code\u003e component where this UI delegate is being installed"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPreferredSize",
      "comment": "If the JLayer\u0027s view component is not null, this returns the result of the view\u0027s getPreferredSize() method. Otherwise, the default implementation is used.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getPreferredSize()\"\u003e\u003ccode\u003eJComponent.getPreferredSize()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#preferredLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003eLayoutManager.preferredLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#getPreferredSize(javax.swing.JComponent)\"\u003egetPreferredSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - \n\u003ccode\u003eJLayer\u003c/code\u003e to return preferred size for"
        ],
        "return": [
          "preferred size for the passed \n\u003ccode\u003eJLayer\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMinimumSize",
      "comment": "If the JLayer\u0027s view component is not null, this returns the result of the view\u0027s getMinimalSize() method. Otherwise, the default implementation is used.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getMinimumSize()\"\u003e\u003ccode\u003eJComponent.getMinimumSize()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#minimumLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003eLayoutManager.minimumLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#getPreferredSize(javax.swing.JComponent)\"\u003e\u003ccode\u003eComponentUI.getPreferredSize(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#getMinimumSize(javax.swing.JComponent)\"\u003egetMinimumSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - \n\u003ccode\u003eJLayer\u003c/code\u003e to return preferred size for"
        ],
        "return": [
          "minimal size for the passed \n\u003ccode\u003eJLayer\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMaximumSize",
      "comment": "If the JLayer\u0027s view component is not null, this returns the result of the view\u0027s getMaximumSize() method. Otherwise, the default implementation is used.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getMaximumSize()\"\u003e\u003ccode\u003eJComponent.getMaximumSize()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#maximumLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003eLayoutManager2.maximumLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#getMaximumSize(javax.swing.JComponent)\"\u003egetMaximumSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - \n\u003ccode\u003eJLayer\u003c/code\u003e to return preferred size for"
        ],
        "return": [
          "maximum size for the passed \n\u003ccode\u003eJLayer\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "width"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "height"
          }
        },
        {
          "type": {
            "name": "javax.swing.JLayer",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.plaf.LayerUI",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "paintImmediately",
      "comment": "Paints the specified region in the JLayer this LayerUI is set to, immediately. This method is to be overridden when the dirty region needs to be changed. The default implementation delegates its functionality to JComponent.paintImmediately(int, int, int, int).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#paintImmediately(int,int,int,int)\"\u003e\u003ccode\u003eJComponent.paintImmediately(int, int, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the x value of the region to be painted",
          "\u003ccode\u003ey\u003c/code\u003e - the y value of the region to be painted",
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of the region to be painted",
          "\u003ccode\u003eheight\u003c/code\u003e - the height of the region to be painted",
          "\u003ccode\u003el\u003c/code\u003e - a \n\u003ccode\u003eJLayer\u003c/code\u003e component"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Image",
            "type": "Class"
          },
          "field": {
            "name": "img"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "infoflags"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "javax.swing.JLayer",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "javax.swing.plaf.LayerUI",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "imageUpdate",
      "comment": "Delegates its functionality to the default implementation of the JLayer.imageUpdate method which is inherited from JLayer\u0027s base classes. This method is to be overridden instead of JLayer.imageUpdate. Note: This method is usually called not on the Event Dispatching Thread.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eimg\u003c/code\u003e - the image being observed",
          "\u003ccode\u003einfoflags\u003c/code\u003e - see imageUpdate for information",
          "\u003ccode\u003ex\u003c/code\u003e - the x coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - the y coordinate",
          "\u003ccode\u003ew\u003c/code\u003e - the width",
          "\u003ccode\u003eh\u003c/code\u003e - the height",
          "\u003ccode\u003el\u003c/code\u003e - a \n\u003ccode\u003eJLayer\u003c/code\u003e component"
        ],
        "return": [
          "false if the infoflags indicate that the image is completely loaded; true otherwise"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a LayerUI.",
      "tagMap": {}
    }
  ],
  "genericParameters": [
    {
      "name": "V",
      "upperBounds": [
        {
          "name": "java.awt.Component",
          "type": "Class"
        }
      ],
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.plaf.LayerUI",
  "comment": "The base class for all \n\u003ca href\u003d\"../JLayer.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJLayer\u003c/code\u003e\u003c/a\u003e\u0027s UI delegates. \n\u003cp\u003e \u003ca href\u003d\"#paint(java.awt.Graphics,javax.swing.JComponent)\"\u003e\u003ccode\u003epaint(java.awt.Graphics, javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e method performs the painting of the \u003ccode\u003eJLayer\u003c/code\u003e and \u003ca href\u003d\"#eventDispatched(java.awt.AWTEvent,javax.swing.JLayer)\"\u003e\u003ccode\u003eeventDispatched(AWTEvent, JLayer)\u003c/code\u003e\u003c/a\u003e method is notified about any \u003ccode\u003eAWTEvent\u003c/code\u003es which have been generated by a \u003ccode\u003eJLayer\u003c/code\u003e or any of its subcomponents. \u003c/p\u003e\n\u003cp\u003e The \u003ccode\u003eLayerUI\u003c/code\u003e differs from the UI delegates of the other components, because it is LookAndFeel independent and is not updated by default when the system LookAndFeel is changed. \u003c/p\u003e\n\u003cp\u003e The subclasses of \u003ccode\u003eLayerUI\u003c/code\u003e can either be stateless and shareable by multiple \u003ccode\u003eJLayer\u003c/code\u003es or not shareable.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setUI(javax.swing.plaf.LayerUI)\"\u003e\u003ccode\u003eJLayer.setUI(LayerUI)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#setView(V)\"\u003e\u003ccode\u003eJLayer.setView(Component)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JLayer.html#getView()\"\u003e\u003ccode\u003eJLayer.getView()\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.7"
    ]
  }
}