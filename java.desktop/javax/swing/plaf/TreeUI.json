{
  "packageName": "javax.swing.plaf",
  "simpleName": "TreeUI",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.plaf.ComponentUI",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.awt.Rectangle",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JTree",
            "type": "Class"
          },
          "field": {
            "name": "tree"
          }
        },
        {
          "type": {
            "name": "javax.swing.tree.TreePath",
            "type": "Class"
          },
          "field": {
            "name": "path"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getPathBounds",
      "comment": "Returns the Rectangle enclosing the label portion that the last item in path will be drawn into. Will return null if any component in path is currently valid.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etree\u003c/code\u003e - the \n\u003ccode\u003eJTree\u003c/code\u003e for \n\u003ccode\u003epath\u003c/code\u003e",
          "\u003ccode\u003epath\u003c/code\u003e - the \n\u003ccode\u003eTreePath\u003c/code\u003e identifying the node"
        ],
        "return": [
          "the \n\u003ccode\u003eRectangle\u003c/code\u003e enclosing the label portion that the last item in path will be drawn into, \n\u003ccode\u003enull\u003c/code\u003e if any component in path is currently valid."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.tree.TreePath",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JTree",
            "type": "Class"
          },
          "field": {
            "name": "tree"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "row"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getPathForRow",
      "comment": "Returns the path for passed in row. If row is not visible null is returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etree\u003c/code\u003e - a \n\u003ccode\u003eJTree\u003c/code\u003e object",
          "\u003ccode\u003erow\u003c/code\u003e - an integer specifying a row"
        ],
        "return": [
          "the \n\u003ccode\u003epath\u003c/code\u003e for \n\u003ccode\u003erow\u003c/code\u003e or \n\u003ccode\u003enull\u003c/code\u003e if \n\u003ccode\u003erow\u003c/code\u003e is not visible"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JTree",
            "type": "Class"
          },
          "field": {
            "name": "tree"
          }
        },
        {
          "type": {
            "name": "javax.swing.tree.TreePath",
            "type": "Class"
          },
          "field": {
            "name": "path"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getRowForPath",
      "comment": "Returns the row that the last item identified in path is visible at. Will return -1 if any of the elements in path are not currently visible.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etree\u003c/code\u003e - the \n\u003ccode\u003eJTree\u003c/code\u003e for \n\u003ccode\u003epath\u003c/code\u003e",
          "\u003ccode\u003epath\u003c/code\u003e - the \n\u003ccode\u003eTreePath\u003c/code\u003e object to look in"
        ],
        "return": [
          "an integer specifying the row at which the last item identified is visible, -1 if any of the elements in \n\u003ccode\u003epath\u003c/code\u003e are not currently visible"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JTree",
            "type": "Class"
          },
          "field": {
            "name": "tree"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getRowCount",
      "comment": "Returns the number of rows that are being displayed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etree\u003c/code\u003e - the \n\u003ccode\u003eJTree\u003c/code\u003e for which to count rows"
        ],
        "return": [
          "an integer specifying the number of row being displayed"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.tree.TreePath",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JTree",
            "type": "Class"
          },
          "field": {
            "name": "tree"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getClosestPathForLocation",
      "comment": "Returns the path to the node that is closest to x,y. If there is nothing currently visible this will return null, otherwise it\u0027ll always return a valid path. If you need to test if the returned object is exactly at x, y you should get the bounds for the returned path and test x, y against that.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etree\u003c/code\u003e - a \n\u003ccode\u003eJTree\u003c/code\u003e object",
          "\u003ccode\u003ex\u003c/code\u003e - an integer giving the number of pixels horizontally from the left edge of the display area",
          "\u003ccode\u003ey\u003c/code\u003e - an integer giving the number of pixels vertically from the top of the display area, minus any top margin"
        ],
        "return": [
          "the \n\u003ccode\u003eTreePath\u003c/code\u003e node closest to \n\u003ccode\u003ex,y\u003c/code\u003e or \n\u003ccode\u003enull\u003c/code\u003e if there is nothing currently visible"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JTree",
            "type": "Class"
          },
          "field": {
            "name": "tree"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "isEditing",
      "comment": "Returns true if the tree is being edited. The item that is being edited can be returned by getEditingPath().",
      "tagMap": {
        "param": [
          "\u003ccode\u003etree\u003c/code\u003e - a \n\u003ccode\u003eJTree\u003c/code\u003e object"
        ],
        "return": [
          "true if \n\u003ccode\u003etree\u003c/code\u003e is being edited"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JTree",
            "type": "Class"
          },
          "field": {
            "name": "tree"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "stopEditing",
      "comment": "Stops the current editing session. This has no effect if the tree isn\u0027t being edited. Returns true if the editor allows the editing session to stop.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etree\u003c/code\u003e - a \n\u003ccode\u003eJTree\u003c/code\u003e object"
        ],
        "return": [
          "true if the editor allows the editing session to stop"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JTree",
            "type": "Class"
          },
          "field": {
            "name": "tree"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "cancelEditing",
      "comment": "Cancels the current editing session. This has no effect if the tree isn\u0027t being edited.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etree\u003c/code\u003e - a \n\u003ccode\u003eJTree\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JTree",
            "type": "Class"
          },
          "field": {
            "name": "tree"
          }
        },
        {
          "type": {
            "name": "javax.swing.tree.TreePath",
            "type": "Class"
          },
          "field": {
            "name": "path"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "startEditingAtPath",
      "comment": "Selects the last item in path and tries to edit it. Editing will fail if the CellEditor won\u0027t allow it for the selected item.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etree\u003c/code\u003e - the \n\u003ccode\u003eJTree\u003c/code\u003e being edited",
          "\u003ccode\u003epath\u003c/code\u003e - the \n\u003ccode\u003eTreePath\u003c/code\u003e to be edited"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.tree.TreePath",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JTree",
            "type": "Class"
          },
          "field": {
            "name": "tree"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getEditingPath",
      "comment": "Returns the path to the element that is being edited.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etree\u003c/code\u003e - the \n\u003ccode\u003eJTree\u003c/code\u003e for which to return a path"
        ],
        "return": [
          "a \n\u003ccode\u003eTreePath\u003c/code\u003e containing the path to \n\u003ccode\u003etree\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for subclasses to call.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.swing.plaf.TreeUI",
  "comment": "Pluggable look and feel interface for JTree.",
  "tagMap": {}
}