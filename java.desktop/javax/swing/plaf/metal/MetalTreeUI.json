{
  "packageName": "javax.swing.plaf.metal",
  "simpleName": "MetalTreeUI",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.plaf.basic.BasicTreeUI",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.swing.plaf.ComponentUI",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createUI",
      "comment": "Constructs the MetalTreeUI.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - a component"
        ],
        "return": [
          "the instance of the \n\u003ccode\u003eMetalTreeUI\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "lineStyleFlag"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "decodeLineStyle",
      "comment": "Converts between the string passed into the client property and the internal representation (currently and int)",
      "tagMap": {
        "param": [
          "\u003ccode\u003elineStyleFlag\u003c/code\u003e - a flag"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "row"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "rowLevel"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "mouseX"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "mouseY"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "isLocationInExpandControl",
      "comment": "Returns true if a point with X coordinate mouseX and Y coordinate mouseY is in expanded control.",
      "tagMap": {
        "param": [
          "\u003ccode\u003erow\u003c/code\u003e - a row",
          "\u003ccode\u003erowLevel\u003c/code\u003e - a row level",
          "\u003ccode\u003emouseX\u003c/code\u003e - X coordinate",
          "\u003ccode\u003emouseY\u003c/code\u003e - Y coordinate"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if a point with X coordinate \n\u003ccode\u003emouseX\u003c/code\u003e and Y coordinate \n\u003ccode\u003emouseY\u003c/code\u003e is in expanded control."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        },
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "paintHorizontalSeparators",
      "comment": "Paints the horizontal separators.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eg\u003c/code\u003e - an instance of \n\u003ccode\u003eGraphics\u003c/code\u003e",
          "\u003ccode\u003ec\u003c/code\u003e - a component"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs the MetalTreeUI.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.plaf.metal.MetalTreeUI",
  "comment": "The metal look and feel implementation of \n\u003ccode\u003eTreeUI\u003c/code\u003e. \n\u003cp\u003e \u003ccode\u003eMetalTreeUI\u003c/code\u003e allows for configuring how to visually render the spacing and delineation between nodes. The following hints are supported: \u003c/p\u003e\n\u003ctable class\u003d\"striped\"\u003e \n \u003ccaption\u003e\n  Descriptions of supported hints: Angled, Horizontal, and None \n \u003c/caption\u003e \n \u003cthead\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"col\"\u003eHint \u003c/th\u003e\n   \u003cth scope\u003d\"col\"\u003eDescription \u003c/th\u003e\n  \u003c/tr\u003e\n \u003c/thead\u003e \n \u003ctbody\u003e \n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003eAngled \u003c/th\u003e\n   \u003ctd\u003eA line is drawn connecting the child to the parent. For handling of the root node refer to \u003ca href\u003d\"../../JTree.html#setRootVisible(boolean)\"\u003e\u003ccode\u003eJTree.setRootVisible(boolean)\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"../../JTree.html#setShowsRootHandles(boolean)\"\u003e\u003ccode\u003eJTree.setShowsRootHandles(boolean)\u003c/code\u003e\u003c/a\u003e. \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003eHorizontal \u003c/th\u003e\n   \u003ctd\u003eA horizontal line is drawn dividing the children of the root node. \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e \n   \u003cth scope\u003d\"row\"\u003eNone \u003c/th\u003e\n   \u003ctd\u003eDo not draw any visual indication between nodes. \u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e \n\u003c/table\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e As it is typically impractical to obtain the \u003ccode\u003eTreeUI\u003c/code\u003e from the \u003ccode\u003eJTree\u003c/code\u003e and cast to an instance of \u003ccode\u003eMetalTreeUI\u003c/code\u003e you enable this property via the client property \u003ccode\u003eJTree.lineStyle\u003c/code\u003e. For example, to switch to \u003ccode\u003eHorizontal\u003c/code\u003e style you would do: \u003ccode\u003etree.putClientProperty(\"JTree.lineStyle\", \"Horizontal\");\u003c/code\u003e \u003c/p\u003e\n\u003cp\u003e The default is \u003ccode\u003eAngled\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {}
}