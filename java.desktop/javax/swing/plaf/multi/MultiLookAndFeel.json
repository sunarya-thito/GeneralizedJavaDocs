{
  "packageName": "javax.swing.plaf.multi",
  "simpleName": "MultiLookAndFeel",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.LookAndFeel",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getName",
      "comment": "Returns a string, suitable for use in menus, that identifies this look and feel.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html#getName()\"\u003egetName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html\" title\u003d\"class in javax.swing\"\u003eLookAndFeel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string such as \"Multiplexing Look and Feel\""
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getID",
      "comment": "Returns a string, suitable for use by applications/services, that identifies this look and feel.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html#getID()\"\u003egetID\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html\" title\u003d\"class in javax.swing\"\u003eLookAndFeel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "\"Multiplex\""
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDescription",
      "comment": "Returns a one-line description of this look and feel.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html#getDescription()\"\u003egetDescription\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html\" title\u003d\"class in javax.swing\"\u003eLookAndFeel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a descriptive string such as \"Allows multiple UI instances per component instance\""
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isNativeLookAndFeel",
      "comment": "Returns false; this look and feel is not native to any platform.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html#isNativeLookAndFeel()\"\u003eisNativeLookAndFeel\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html\" title\u003d\"class in javax.swing\"\u003eLookAndFeel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isSupportedLookAndFeel",
      "comment": "Returns true; every platform permits this look and feel.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIManager.html#setLookAndFeel(javax.swing.LookAndFeel)\"\u003e\u003ccode\u003eUIManager.setLookAndFeel(javax.swing.LookAndFeel)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html#isSupportedLookAndFeel()\"\u003eisSupportedLookAndFeel\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html\" title\u003d\"class in javax.swing\"\u003eLookAndFeel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.UIDefaults",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDefaults",
      "comment": "Creates, initializes, and returns the look and feel specific defaults. For this look and feel, the defaults consist solely of mappings of UI class IDs (such as \"ButtonUI\") to ComponentUI class names (such as \"javax.swing.plaf.multi.MultiButtonUI\").",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getUIClassID()\"\u003e\u003ccode\u003eJComponent.getUIClassID()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html#getDefaults()\"\u003egetDefaults\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html\" title\u003d\"class in javax.swing\"\u003eLookAndFeel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an initialized \n\u003ccode\u003eUIDefaults\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.plaf.ComponentUI",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.plaf.ComponentUI",
            "type": "Class"
          },
          "field": {
            "name": "mui"
          }
        },
        {
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "name": "javax.swing.plaf.ComponentUI",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "uis"
          }
        },
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createUIs",
      "comment": "Creates the ComponentUI objects required to present the target component, placing the objects in the uis vector and returning the ComponentUI object that best represents the component\u0027s UI. This method finds the ComponentUI objects by invoking getDefaults().getUI(target) on each default and auxiliary look and feel currently in use. The first UI object this method adds to the uis vector is for the default look and feel. This method is invoked by the createUI method of MultiXxxxUI classes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIManager.html#getAuxiliaryLookAndFeels()\"\u003e\u003ccode\u003eUIManager.getAuxiliaryLookAndFeels()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIDefaults.html#getUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eUIDefaults.getUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/multi/MultiButtonUI.html#uis\"\u003e\u003ccode\u003eMultiButtonUI.uis\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/multi/MultiButtonUI.html#createUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eMultiButtonUI.createUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003emui\u003c/code\u003e - the \n\u003ccode\u003eComponentUI\u003c/code\u003e object that represents the complete UI for the \n\u003ccode\u003etarget\u003c/code\u003e component; this should be an instance of one of the \n\u003ccode\u003eMultiXxxxUI\u003c/code\u003e classes",
          "\u003ccode\u003euis\u003c/code\u003e - a \n\u003ccode\u003eVector\u003c/code\u003e; generally this is the \n\u003ccode\u003euis\u003c/code\u003e field of the \n\u003ccode\u003emui\u003c/code\u003e argument",
          "\u003ccode\u003etarget\u003c/code\u003e - a component whose UI is represented by \n\u003ccode\u003emui\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003emui\u003c/code\u003e if the component has any auxiliary UI objects; otherwise, returns the UI object for the default look and feel or \n\u003ccode\u003enull\u003c/code\u003e if the default UI object couldn\u0027t be found"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.plaf.ComponentUI",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.swing.plaf.ComponentUI",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "uis"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 12,
      "name": "uisToArray",
      "comment": "Creates an array, populates it with UI objects from the passed-in vector, and returns the array. If uis is null, this method returns an array with zero elements. If uis is an empty vector, this method returns null. A run-time error occurs if any objects in the uis vector are not of type ComponentUI.",
      "tagMap": {
        "param": [
          "\u003ccode\u003euis\u003c/code\u003e - a vector containing \n\u003ccode\u003eComponentUI\u003c/code\u003e objects"
        ],
        "return": [
          "an array equivalent to the passed-in vector"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a MultiLookAndFeel.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.plaf.multi.MultiLookAndFeel",
  "comment": "\u003cp\u003eA multiplexing look and feel that allows more than one UI to be associated with a component at the same time. The primary look and feel is called the \u003cem\u003edefault\u003c/em\u003e look and feel, and the other look and feels are called \u003cem\u003eauxiliary\u003c/em\u003e. \u003c/p\u003e\n\u003cp\u003e For further information, see \u003ca href\u003d\"doc-files/multi_tsc.html\" target\u003d\"_top\"\u003eUsing the Multiplexing Look and Feel.\u003c/a\u003e \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/UIManager.html#addAuxiliaryLookAndFeel(javax.swing.LookAndFeel)\"\u003e\u003ccode\u003eUIManager.addAuxiliaryLookAndFeel(javax.swing.LookAndFeel)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/multi/package-summary.html\"\u003e\u003ccode\u003ejavax.swing.plaf.multi\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}