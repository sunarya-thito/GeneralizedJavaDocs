{
  "packageName": "javax.swing.plaf.synth",
  "simpleName": "SynthSpinnerUI",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.plaf.basic.BasicSpinnerUI",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.swing.plaf.ComponentUI",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createUI",
      "comment": "Returns a new instance of SynthSpinnerUI.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#createUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eComponentUI.createUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the JSpinner (not used)"
        ],
        "return": [
          "a new SynthSpinnerUI object"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "installDefaults",
      "comment": "Initializes the JSpinner border, foreground, and background, properties based on the corresponding \"Spinner.*\" properties from defaults table. The JSpinners layout is set to the value returned by createLayout. This method is called by installUI.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/synth/SynthSpinnerUI.html#uninstallDefaults()\"\u003e\u003ccode\u003euninstallDefaults()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eBasicSpinnerUI.installUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createLayout()\"\u003e\u003ccode\u003eBasicSpinnerUI.createLayout()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html#installBorder(javax.swing.JComponent,java.lang.String)\"\u003e\u003ccode\u003eLookAndFeel.installBorder(javax.swing.JComponent, java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html#installColors(javax.swing.JComponent,java.lang.String,java.lang.String)\"\u003e\u003ccode\u003eLookAndFeel.installColors(javax.swing.JComponent, java.lang.String, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#installDefaults()\"\u003einstallDefaults\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html\" title\u003d\"class in javax.swing.plaf.basic\"\u003eBasicSpinnerUI\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "uninstallDefaults",
      "comment": "Sets the JSpinner\u0027s layout manager to null. This method is called by uninstallUI.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/synth/SynthSpinnerUI.html#installDefaults()\"\u003e\u003ccode\u003einstallDefaults()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#uninstallUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eBasicSpinnerUI.uninstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#uninstallDefaults()\"\u003euninstallDefaults\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html\" title\u003d\"class in javax.swing.plaf.basic\"\u003eBasicSpinnerUI\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JComponent",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createEditor",
      "comment": "This method is called by installUI to get the editor component of the JSpinner. By default it just returns JSpinner.getEditor(). Subclasses can override createEditor to return a component that contains the spinner\u0027s editor or null, if they\u0027re going to handle adding the editor to the JSpinner in an installUI override. Typically this method would be overridden to wrap the editor with a container with a custom border, since one can\u0027t assume that the editors border can be set directly. The replaceEditor method is called when the spinners editor is changed with JSpinner.setEditor. If you\u0027ve overriden this method, then you\u0027ll probably want to override replaceEditor as well.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eBasicSpinnerUI.installUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/synth/SynthSpinnerUI.html#replaceEditor(javax.swing.JComponent,javax.swing.JComponent)\"\u003e\u003ccode\u003ereplaceEditor(javax.swing.JComponent, javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JSpinner.html#getEditor()\"\u003e\u003ccode\u003eJSpinner.getEditor()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createEditor()\"\u003ecreateEditor\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html\" title\u003d\"class in javax.swing.plaf.basic\"\u003eBasicSpinnerUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the JSpinners editor JComponent, spinner.getEditor() by default"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "oldEditor"
          }
        },
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "newEditor"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "replaceEditor",
      "comment": "Called by the PropertyChangeListener when the JSpinner editor property changes. It\u0027s the responsibility of this method to remove the old editor and add the new one. By default this operation is just:  spinner.remove(oldEditor);\n spinner.add(newEditor, \"Editor\");\n The implementation of replaceEditor should be coordinated with the createEditor method.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/synth/SynthSpinnerUI.html#createEditor()\"\u003e\u003ccode\u003ecreateEditor()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createPropertyChangeListener()\"\u003e\u003ccode\u003eBasicSpinnerUI.createPropertyChangeListener()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#replaceEditor(javax.swing.JComponent,javax.swing.JComponent)\"\u003ereplaceEditor\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html\" title\u003d\"class in javax.swing.plaf.basic\"\u003eBasicSpinnerUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eoldEditor\u003c/code\u003e - an old instance of editor",
          "\u003ccode\u003enewEditor\u003c/code\u003e - a new instance of editor"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.plaf.synth.SynthContext",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getContext",
      "comment": "Returns the Context for the specified component.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/synth/SynthUI.html#getContext(javax.swing.JComponent)\"\u003egetContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/synth/SynthUI.html\" title\u003d\"interface in javax.swing.plaf.synth\"\u003eSynthUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - Component requesting SynthContext."
        ],
        "return": [
          "SynthContext describing component."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        },
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "update",
      "comment": "Notifies this UI delegate to repaint the specified component. This method paints the component background, then calls the paint(SynthContext,Graphics) method. In general, this method does not need to be overridden by subclasses. All Look and Feel rendering code should reside in the paint method.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/synth/SynthSpinnerUI.html#paint(javax.swing.plaf.synth.SynthContext,java.awt.Graphics)\"\u003e\u003ccode\u003epaint(SynthContext,Graphics)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#update(java.awt.Graphics,javax.swing.JComponent)\"\u003eupdate\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eg\u003c/code\u003e - the \n\u003ccode\u003eGraphics\u003c/code\u003e object used for painting",
          "\u003ccode\u003ec\u003c/code\u003e - the component being painted"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        },
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "paint",
      "comment": "Paints the specified component according to the Look and Feel. This method is not used by Synth Look and Feel. Painting is handled by the paint(SynthContext,Graphics) method.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/synth/SynthSpinnerUI.html#paint(javax.swing.plaf.synth.SynthContext,java.awt.Graphics)\"\u003e\u003ccode\u003epaint(SynthContext,Graphics)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#paint(java.awt.Graphics,javax.swing.JComponent)\"\u003epaint\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eg\u003c/code\u003e - the \n\u003ccode\u003eGraphics\u003c/code\u003e object used for painting",
          "\u003ccode\u003ec\u003c/code\u003e - the component being painted"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.plaf.synth.SynthContext",
            "type": "Class"
          },
          "field": {
            "name": "context"
          }
        },
        {
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "paint",
      "comment": "Paints the specified component. This implementation does nothing.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/synth/SynthSpinnerUI.html#update(java.awt.Graphics,javax.swing.JComponent)\"\u003e\u003ccode\u003eupdate(Graphics,JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003econtext\u003c/code\u003e - context for the component being painted",
          "\u003ccode\u003eg\u003c/code\u003e - the \n\u003ccode\u003eGraphics\u003c/code\u003e object used for painting"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.plaf.synth.SynthContext",
            "type": "Class"
          },
          "field": {
            "name": "context"
          }
        },
        {
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "paintBorder",
      "comment": "Paints the border.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/synth/SynthUI.html#paintBorder(javax.swing.plaf.synth.SynthContext,java.awt.Graphics,int,int,int,int)\"\u003epaintBorder\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/synth/SynthUI.html\" title\u003d\"interface in javax.swing.plaf.synth\"\u003eSynthUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003econtext\u003c/code\u003e - a component context",
          "\u003ccode\u003eg\u003c/code\u003e - \n\u003ccode\u003eGraphics\u003c/code\u003e to paint on",
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate",
          "\u003ccode\u003ew\u003c/code\u003e - width of the border",
          "\u003ccode\u003eh\u003c/code\u003e - height of the border"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.beans.PropertyChangeEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "propertyChange",
      "comment": "This method gets called when a bound property is changed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/PropertyChangeListener.html#propertyChange(java.beans.PropertyChangeEvent)\"\u003epropertyChange\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/PropertyChangeListener.html\" title\u003d\"interface in java.beans\"\u003ePropertyChangeListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - A PropertyChangeEvent object describing the event source and the property that has changed."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a SynthSpinnerUI.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.plaf.synth.SynthSpinnerUI",
  "comment": "Provides the Synth L\u0026amp;F UI delegate for \n\u003ca href\u003d\"../../JSpinner.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eJSpinner\u003c/code\u003e\u003c/a\u003e.",
  "tagMap": {
    "since": [
      "1.7"
    ]
  }
}