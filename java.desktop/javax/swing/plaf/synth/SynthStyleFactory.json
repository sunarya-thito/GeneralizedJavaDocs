{
  "packageName": "javax.swing.plaf.synth",
  "simpleName": "SynthStyleFactory",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.swing.plaf.synth.SynthStyle",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        },
        {
          "type": {
            "name": "javax.swing.plaf.synth.Region",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getStyle",
      "comment": "Returns the style for the specified Component.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - Component asking for",
          "\u003ccode\u003eid\u003c/code\u003e - Region identifier"
        ],
        "return": [
          "SynthStyle for region."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a SynthStyleFactory.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.swing.plaf.synth.SynthStyleFactory",
  "comment": "Factory used for obtaining \n\u003ccode\u003eSynthStyle\u003c/code\u003es. Each of the Synth \n\u003ccode\u003eComponentUI\u003c/code\u003es will call into the current \n\u003ccode\u003eSynthStyleFactory\u003c/code\u003e to obtain a \n\u003ccode\u003eSynthStyle\u003c/code\u003e for each of the distinct regions they have. \n\u003cp\u003e The following example creates a custom \u003ccode\u003eSynthStyleFactory\u003c/code\u003e that returns a different style based on the \u003ccode\u003eRegion\u003c/code\u003e: \u003c/p\u003e\n\u003cpre\u003e class MyStyleFactory extends SynthStyleFactory {\n     public SynthStyle getStyle(JComponent c, Region id) {\n         if (id \u003d\u003d Region.BUTTON) {\n             return buttonStyle;\n         }\n         else if (id \u003d\u003d Region.TREE) {\n             return treeStyle;\n         }\n         return defaultStyle;\n     }\n }\n SynthLookAndFeel laf \u003d new SynthLookAndFeel();\n UIManager.setLookAndFeel(laf);\n SynthLookAndFeel.setStyleFactory(new MyStyleFactory());\n \u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/synth/SynthLookAndFeel.html\" title\u003d\"class in javax.swing.plaf.synth\"\u003e\u003ccode\u003eSynthLookAndFeel\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/synth/SynthStyle.html\" title\u003d\"class in javax.swing.plaf.synth\"\u003e\u003ccode\u003eSynthStyle\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}