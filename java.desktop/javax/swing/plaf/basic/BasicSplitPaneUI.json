{
  "packageName": "javax.swing.plaf.basic",
  "simpleName": "BasicSplitPaneUI",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.plaf.SplitPaneUI",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 28,
      "name": "NON_CONTINUOUS_DIVIDER",
      "comment": "The divider used for non-continuous layout is added to the split pane with this object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.swing.plaf.basic.BasicSplitPaneUI.NON_CONTINUOUS_DIVIDER\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 12,
      "name": "KEYBOARD_DIVIDER_MOVE_OFFSET",
      "comment": "How far (relative) the divider does move when it is moved around by the cursor keys on the keyboard.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.JSplitPane",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "splitPane",
      "comment": "JSplitPane instance this instance is providing the look and feel for.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.plaf.basic.BasicSplitPaneUI$BasicHorizontalLayoutManager",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "layoutManager",
      "comment": "LayoutManager that is created and placed into the split pane.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.plaf.basic.BasicSplitPaneDivider",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "divider",
      "comment": "Instance of the divider for this JSplitPane.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.beans.PropertyChangeListener",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "propertyChangeListener",
      "comment": "Instance of the PropertyChangeListener for this JSplitPane.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.event.FocusListener",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "focusListener",
      "comment": "Instance of the FocusListener for this JSplitPane.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "dividerSize",
      "comment": "The size of the divider while the dragging session is valid.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "nonContinuousLayoutDivider",
      "comment": "Instance for the shadow of the divider when non continuous layout is being used.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "draggingHW",
      "comment": "Set to true in startDragging if any of the children (not including the nonContinuousLayoutDivider) are heavy weights.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "beginDragDividerLocation",
      "comment": "Location of the divider when the dragging session began.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.KeyStroke",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "upKey",
      "comment": "As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification for further details.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.KeyStroke",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "downKey",
      "comment": "As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification for further details.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.KeyStroke",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "leftKey",
      "comment": "As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification for further details.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.KeyStroke",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "rightKey",
      "comment": "As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification for further details.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.KeyStroke",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "homeKey",
      "comment": "As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification for further details.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.KeyStroke",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "endKey",
      "comment": "As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification for further details.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.swing.KeyStroke",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "dividerResizeToggleKey",
      "comment": "As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification for further details.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.event.ActionListener",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "keyboardUpLeftListener",
      "comment": "As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification for further details.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.event.ActionListener",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "keyboardDownRightListener",
      "comment": "As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification for further details.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.event.ActionListener",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "keyboardHomeListener",
      "comment": "As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification for further details.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.event.ActionListener",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "keyboardEndListener",
      "comment": "As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification for further details.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.event.ActionListener",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "keyboardResizeToggleListener",
      "comment": "As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification for further details.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "javax.swing.plaf.ComponentUI",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createUI",
      "comment": "Creates a new instance of BasicSplitPaneUI.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - a component"
        ],
        "return": [
          "a new instance of \n\u003ccode\u003eBasicSplitPaneUI\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "installUI",
      "comment": "Installs the UI.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#uninstallUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eComponentUI.uninstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#setUI(javax.swing.plaf.ComponentUI)\"\u003e\u003ccode\u003eJComponent.setUI(javax.swing.plaf.ComponentUI)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#updateUI()\"\u003e\u003ccode\u003eJComponent.updateUI()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#installUI(javax.swing.JComponent)\"\u003einstallUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component where this UI delegate is being installed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "installDefaults",
      "comment": "Installs the UI defaults.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "installListeners",
      "comment": "Installs the event listeners for the UI.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "installKeyboardActions",
      "comment": "Installs the keyboard actions for the UI.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "uninstallUI",
      "comment": "Uninstalls the UI.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eComponentUI.installUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#updateUI()\"\u003e\u003ccode\u003eJComponent.updateUI()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#uninstallUI(javax.swing.JComponent)\"\u003euninstallUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the component from which this UI delegate is being removed; this argument is often ignored, but might be used if the UI object is stateless and shared by multiple components"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "uninstallDefaults",
      "comment": "Uninstalls the UI defaults.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "uninstallListeners",
      "comment": "Uninstalls the event listeners for the UI.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "uninstallKeyboardActions",
      "comment": "Uninstalls the keyboard actions for the UI.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.beans.PropertyChangeListener",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createPropertyChangeListener",
      "comment": "Creates a PropertyChangeListener for the JSplitPane UI.",
      "tagMap": {
        "return": [
          "an instance of \n\u003ccode\u003ePropertyChangeListener\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.event.FocusListener",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createFocusListener",
      "comment": "Creates a FocusListener for the JSplitPane UI.",
      "tagMap": {
        "return": [
          "an instance of \n\u003ccode\u003eFocusListener\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.event.ActionListener",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createKeyboardUpLeftListener",
      "comment": "As of Java 2 platform v1.3 this method is no longer used. Subclassers previously using this method should instead create an Action wrapping the ActionListener, and register that Action by overriding installKeyboardActions and placing the Action in the SplitPane\u0027s ActionMap. Please refer to the key bindings specification for further details. Creates an ActionListener for the JSplitPane UI that listens for specific key presses.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "an instance of \n\u003ccode\u003eActionListener\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.event.ActionListener",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createKeyboardDownRightListener",
      "comment": "As of Java 2 platform v1.3 this method is no longer used. Subclassers previously using this method should instead create an Action wrapping the ActionListener, and register that Action by overriding installKeyboardActions and placing the Action in the SplitPane\u0027s ActionMap. Please refer to the key bindings specification for further details. Creates an ActionListener for the JSplitPane UI that listens for specific key presses.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "an instance of \n\u003ccode\u003eActionListener\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.event.ActionListener",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createKeyboardHomeListener",
      "comment": "As of Java 2 platform v1.3 this method is no longer used. Subclassers previously using this method should instead create an Action wrapping the ActionListener, and register that Action by overriding installKeyboardActions and placing the Action in the SplitPane\u0027s ActionMap. Please refer to the key bindings specification for further details. Creates an ActionListener for the JSplitPane UI that listens for specific key presses.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "an instance of \n\u003ccode\u003eActionListener\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.event.ActionListener",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createKeyboardEndListener",
      "comment": "As of Java 2 platform v1.3 this method is no longer used. Subclassers previously using this method should instead create an Action wrapping the ActionListener, and register that Action by overriding installKeyboardActions and placing the Action in the SplitPane\u0027s ActionMap. Please refer to the key bindings specification for further details. Creates an ActionListener for the JSplitPane UI that listens for specific key presses.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "an instance of \n\u003ccode\u003eActionListener\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.event.ActionListener",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createKeyboardResizeToggleListener",
      "comment": "As of Java 2 platform v1.3 this method is no longer used. Subclassers previously using this method should instead create an Action wrapping the ActionListener, and register that Action by overriding installKeyboardActions and placing the Action in the SplitPane\u0027s ActionMap. Please refer to the key bindings specification for further details. Creates an ActionListener for the JSplitPane UI that listens for specific key presses.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "an instance of \n\u003ccode\u003eActionListener\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOrientation",
      "comment": "Returns the orientation for the JSplitPane.",
      "tagMap": {
        "return": [
          "the orientation"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "orientation"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOrientation",
      "comment": "Set the orientation for the JSplitPane.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eorientation\u003c/code\u003e - the orientation"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isContinuousLayout",
      "comment": "Determines whether the JSplitPane is set to use a continuous layout.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if a continuous layout is set"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setContinuousLayout",
      "comment": "Turn continuous layout on/off.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e the continuous layout turns on"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLastDragLocation",
      "comment": "Returns the last drag location of the JSplitPane.",
      "tagMap": {
        "return": [
          "the last drag location"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLastDragLocation",
      "comment": "Set the last drag location of the JSplitPane.",
      "tagMap": {
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the drag location"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.plaf.basic.BasicSplitPaneDivider",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDivider",
      "comment": "Returns the divider between the top Components.",
      "tagMap": {
        "return": [
          "the divider between the top Components"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createDefaultNonContinuousLayoutDivider",
      "comment": "Returns the default non continuous layout divider, which is an instance of Canvas that fills in the background with dark gray.",
      "tagMap": {
        "return": [
          "the default non continuous layout divider"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "newDivider"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "setNonContinuousLayoutDivider",
      "comment": "Sets the divider to use when the JSplitPane is configured to not continuously layout. This divider will only be used during a dragging session. It is recommended that the passed in component be a heavy weight.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enewDivider\u003c/code\u003e - the new divider"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "newDivider"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "rememberSizes"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "setNonContinuousLayoutDivider",
      "comment": "Sets the divider to use.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enewDivider\u003c/code\u003e - the new divider",
          "\u003ccode\u003erememberSizes\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e the pane size is remembered"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNonContinuousLayoutDivider",
      "comment": "Returns the divider to use when the JSplitPane is configured to not continuously layout. This divider will only be used during a dragging session.",
      "tagMap": {
        "return": [
          "the divider"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JSplitPane",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSplitPane",
      "comment": "Returns the JSplitPane this instance is currently contained in.",
      "tagMap": {
        "return": [
          "the instance of \n\u003ccode\u003eJSplitPane\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.plaf.basic.BasicSplitPaneDivider",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createDefaultDivider",
      "comment": "Creates the default divider.",
      "tagMap": {
        "return": [
          "the default divider"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JSplitPane",
            "type": "Class"
          },
          "field": {
            "name": "jc"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "resetToPreferredSizes",
      "comment": "Messaged to reset the preferred sizes.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/SplitPaneUI.html#resetToPreferredSizes(javax.swing.JSplitPane)\"\u003eresetToPreferredSizes\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/SplitPaneUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eSplitPaneUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ejc\u003c/code\u003e - a \n\u003ccode\u003eJSplitPane\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JSplitPane",
            "type": "Class"
          },
          "field": {
            "name": "jc"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "location"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDividerLocation",
      "comment": "Sets the location of the divider to location.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/SplitPaneUI.html#setDividerLocation(javax.swing.JSplitPane,int)\"\u003esetDividerLocation\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/SplitPaneUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eSplitPaneUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ejc\u003c/code\u003e - a \n\u003ccode\u003eJSplitPane\u003c/code\u003e",
          "\u003ccode\u003elocation\u003c/code\u003e - an integer specifying the location of the divider"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JSplitPane",
            "type": "Class"
          },
          "field": {
            "name": "jc"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDividerLocation",
      "comment": "Returns the location of the divider, which may differ from what the splitpane thinks the location of the divider is.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/SplitPaneUI.html#getDividerLocation(javax.swing.JSplitPane)\"\u003egetDividerLocation\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/SplitPaneUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eSplitPaneUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ejc\u003c/code\u003e - a \n\u003ccode\u003eJSplitPane\u003c/code\u003e"
        ],
        "return": [
          "an integer specifying the location of the divider"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JSplitPane",
            "type": "Class"
          },
          "field": {
            "name": "jc"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMinimumDividerLocation",
      "comment": "Gets the minimum location of the divider.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/SplitPaneUI.html#getMinimumDividerLocation(javax.swing.JSplitPane)\"\u003egetMinimumDividerLocation\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/SplitPaneUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eSplitPaneUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ejc\u003c/code\u003e - a \n\u003ccode\u003eJSplitPane\u003c/code\u003e"
        ],
        "return": [
          "and integer specifying the minimum location of the divider"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JSplitPane",
            "type": "Class"
          },
          "field": {
            "name": "jc"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMaximumDividerLocation",
      "comment": "Gets the maximum location of the divider.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/SplitPaneUI.html#getMaximumDividerLocation(javax.swing.JSplitPane)\"\u003egetMaximumDividerLocation\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/SplitPaneUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eSplitPaneUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ejc\u003c/code\u003e - a \n\u003ccode\u003eJSplitPane\u003c/code\u003e"
        ],
        "return": [
          "an integer specifying the maximum location of the divider"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JSplitPane",
            "type": "Class"
          },
          "field": {
            "name": "sp"
          }
        },
        {
          "type": {
            "name": "java.awt.Graphics",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "finishedPaintingChildren",
      "comment": "Called when the specified split pane has finished painting its children.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/SplitPaneUI.html#finishedPaintingChildren(javax.swing.JSplitPane,java.awt.Graphics)\"\u003efinishedPaintingChildren\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/SplitPaneUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eSplitPaneUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esp\u003c/code\u003e - a \n\u003ccode\u003eJSplitPane\u003c/code\u003e",
          "\u003ccode\u003eg\u003c/code\u003e - the \n\u003ccode\u003eGraphics\u003c/code\u003e context"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "jc"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPreferredSize",
      "comment": "Returns the preferred size for the passed in component, This is passed off to the current layout manager.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getPreferredSize()\"\u003e\u003ccode\u003eJComponent.getPreferredSize()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#preferredLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003eLayoutManager.preferredLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#getPreferredSize(javax.swing.JComponent)\"\u003egetPreferredSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ejc\u003c/code\u003e - the component whose preferred size is being queried; this argument is often ignored, but might be used if the UI object is stateless and shared by multiple components"
        ],
        "return": [
          "a \n\u003ccode\u003eDimension\u003c/code\u003e object containing given component\u0027s preferred size appropriate for the look and feel"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "jc"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMinimumSize",
      "comment": "Returns the minimum size for the passed in component, This is passed off to the current layout manager.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getMinimumSize()\"\u003e\u003ccode\u003eJComponent.getMinimumSize()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#minimumLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003eLayoutManager.minimumLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#getPreferredSize(javax.swing.JComponent)\"\u003e\u003ccode\u003eComponentUI.getPreferredSize(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#getMinimumSize(javax.swing.JComponent)\"\u003egetMinimumSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ejc\u003c/code\u003e - the component whose minimum size is being queried; this argument is often ignored, but might be used if the UI object is stateless and shared by multiple components"
        ],
        "return": [
          "a \n\u003ccode\u003eDimension\u003c/code\u003e object or \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "jc"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMaximumSize",
      "comment": "Returns the maximum size for the passed in component, This is passed off to the current layout manager.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getMaximumSize()\"\u003e\u003ccode\u003eJComponent.getMaximumSize()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#maximumLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003eLayoutManager2.maximumLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#getMaximumSize(javax.swing.JComponent)\"\u003egetMaximumSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ejc\u003c/code\u003e - the component whose maximum size is being queried; this argument is often ignored, but might be used if the UI object is stateless and shared by multiple components"
        ],
        "return": [
          "a \n\u003ccode\u003eDimension\u003c/code\u003e object or \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Insets",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "field": {
            "name": "jc"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getInsets",
      "comment": "Returns the insets. The insets are returned from the border insets of the current border.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ejc\u003c/code\u003e - a component"
        ],
        "return": [
          "the insets"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "resetLayoutManager",
      "comment": "Resets the layout manager based on orientation and messages it with invalidateLayout to pull in appropriate Components.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "startDragging",
      "comment": "Should be messaged before the dragging session starts, resets lastDragLocation and dividerSize.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "location"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "dragDividerTo",
      "comment": "Messaged during a dragging session to move the divider to the passed in location. If continuousLayout is true the location is reset and the splitPane validated.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elocation\u003c/code\u003e - the location of divider"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "location"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "finishDraggingTo",
      "comment": "Messaged to finish the dragging session. If not continuous display the dividers location will be reset.",
      "tagMap": {
        "param": [
          "\u003ccode\u003elocation\u003c/code\u003e - the location of divider"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getDividerBorderSize",
      "comment": "As of Java 2 platform v1.3 this method is no longer used. Instead you should set the border on the divider. Returns the width of one side of the divider border.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "the width of one side of the divider border"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a BasicSplitPaneUI.",
      "tagMap": {}
    }
  ],
  "innerClasses": [
    "javax.swing.plaf.basic.BasicSplitPaneUI$BasicHorizontalLayoutManager",
    "javax.swing.plaf.basic.BasicSplitPaneUI$KeyboardHomeHandler",
    "javax.swing.plaf.basic.BasicSplitPaneUI$BasicVerticalLayoutManager",
    "javax.swing.plaf.basic.BasicSplitPaneUI$KeyboardEndHandler",
    "javax.swing.plaf.basic.BasicSplitPaneUI$PropertyHandler",
    "javax.swing.plaf.basic.BasicSplitPaneUI$FocusHandler",
    "javax.swing.plaf.basic.BasicSplitPaneUI$KeyboardDownRightHandler",
    "javax.swing.plaf.basic.BasicSplitPaneUI$KeyboardUpLeftHandler",
    "javax.swing.plaf.basic.BasicSplitPaneUI$KeyboardResizeToggleHandler"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.plaf.basic.BasicSplitPaneUI",
  "comment": "A Basic L\u0026amp;F implementation of the SplitPaneUI.",
  "tagMap": {}
}