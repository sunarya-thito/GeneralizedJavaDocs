{
  "packageName": "javax.swing.plaf.basic",
  "simpleName": "BasicHorizontalLayoutManager",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class",
        "arrayDimensions": 1
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "sizes",
      "comment": "The size of components.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Component",
        "type": "Class",
        "arrayDimensions": 1
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "components",
      "comment": "The components.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "name": "container",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "layoutContainer",
      "comment": "Does the actual layout.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#layoutContainer(java.awt.Container)\"\u003elayoutContainer\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003econtainer\u003c/code\u003e - the container to be laid out"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "place",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "component",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addLayoutComponent",
      "comment": "Adds the component at place. Place must be one of JSplitPane.LEFT, RIGHT, TOP, BOTTOM, or null (for the divider).",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#addLayoutComponent(java.lang.String,java.awt.Component)\"\u003eaddLayoutComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eplace\u003c/code\u003e - the string to be associated with the component",
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component to be added"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "name": "container",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "minimumLayoutSize",
      "comment": "Returns the minimum size needed to contain the children. The width is the sum of all the children\u0027s min widths and the height is the largest of the children\u0027s minimum heights.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#preferredLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003eLayoutManager.preferredLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#minimumLayoutSize(java.awt.Container)\"\u003eminimumLayoutSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003econtainer\u003c/code\u003e - the component to be laid out"
        ],
        "return": [
          "the minimum dimension for the container"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "name": "container",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "preferredLayoutSize",
      "comment": "Returns the preferred size needed to contain the children. The width is the sum of all the preferred widths of the children and the height is the largest preferred height of the children.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#minimumLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003eLayoutManager.minimumLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#preferredLayoutSize(java.awt.Container)\"\u003epreferredLayoutSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003econtainer\u003c/code\u003e - the container to be laid out"
        ],
        "return": [
          "the preferred dimension for the container"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "component",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeLayoutComponent",
      "comment": "Removes the specified component from our knowledge.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#removeLayoutComponent(java.awt.Component)\"\u003eremoveLayoutComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomponent\u003c/code\u003e - the component to be removed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "comp",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "constraints",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addLayoutComponent",
      "comment": "Adds the specified component to the layout, using the specified constraint object.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#addLayoutComponent(java.awt.Component,java.lang.Object)\"\u003eaddLayoutComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomp\u003c/code\u003e - the component to be added",
          "\u003ccode\u003econstraints\u003c/code\u003e - where/how the component is added to the layout."
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "name": "target",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLayoutAlignmentX",
      "comment": "Returns the alignment along the x axis. This specifies how the component would like to be aligned relative to other components. The value should be a number between 0 and 1 where 0 represents alignment along the origin, 1 is aligned the furthest away from the origin, 0.5 is centered, etc.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#getLayoutAlignmentX(java.awt.Container)\"\u003egetLayoutAlignmentX\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the target container"
        ],
        "return": [
          "the x-axis alignment preference"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "name": "target",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLayoutAlignmentY",
      "comment": "Returns the alignment along the y axis. This specifies how the component would like to be aligned relative to other components. The value should be a number between 0 and 1 where 0 represents alignment along the origin, 1 is aligned the furthest away from the origin, 0.5 is centered, etc.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#getLayoutAlignmentY(java.awt.Container)\"\u003egetLayoutAlignmentY\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the target container"
        ],
        "return": [
          "the y-axis alignment preference"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "invalidateLayout",
      "comment": "Does nothing. If the developer really wants to change the size of one of the views JSplitPane.resetToPreferredSizes should be messaged.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#invalidateLayout(java.awt.Container)\"\u003einvalidateLayout\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the target container"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "name": "target",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "maximumLayoutSize",
      "comment": "Returns the maximum layout size, which is Integer.MAX_VALUE in both directions.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getMaximumSize()\"\u003e\u003ccode\u003eComponent.getMaximumSize()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003eLayoutManager\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#maximumLayoutSize(java.awt.Container)\"\u003emaximumLayoutSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the target container"
        ],
        "return": [
          "the maximum size of the container"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "resetToPreferredSizes",
      "comment": "Marks the receiver so that the next time this instance is laid out it\u0027ll ask for the preferred sizes.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "index",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "resetSizeAt",
      "comment": "Resets the size of the Component at the passed in location.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of a component"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "newSizes",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "setSizes",
      "comment": "Sets the sizes to newSizes.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enewSizes\u003c/code\u003e - the new sizes"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getSizes",
      "comment": "Returns the sizes of the components.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the sizes of the components"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getPreferredSizeOfComponent",
      "comment": "Returns the width of the passed in Components preferred size.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - a component"
        ],
        "return": [
          "the preferred width of the component"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getSizeOfComponent",
      "comment": "Returns the width of the passed in component.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - a component"
        ],
        "return": [
          "the width of the component"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Dimension",
            "type": "Class"
          },
          "name": "containerSize",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Insets",
            "type": "Class"
          },
          "name": "insets",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getAvailableSize",
      "comment": "Returns the available width based on the container size and Insets.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003econtainerSize\u003c/code\u003e - a container size",
          "\u003ccode\u003einsets\u003c/code\u003e - an insets"
        ],
        "return": [
          "the available width"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Insets",
            "type": "Class"
          },
          "name": "insets",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getInitialLocation",
      "comment": "Returns the left inset, unless the Insets are null in which case 0 is returned.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003einsets\u003c/code\u003e - the insets"
        ],
        "return": [
          "the left inset"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "size",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "location",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Insets",
            "type": "Class"
          },
          "name": "insets",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Dimension",
            "type": "Class"
          },
          "name": "containerSize",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "setComponentToSize",
      "comment": "Sets the width of the component c to be size, placing its x location at location, y to the insets.top and height to the containerSize.height less the top and bottom insets.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - a component",
          "\u003ccode\u003esize\u003c/code\u003e - a new width",
          "\u003ccode\u003elocation\u003c/code\u003e - a new X coordinate",
          "\u003ccode\u003einsets\u003c/code\u003e - an insets",
          "\u003ccode\u003econtainerSize\u003c/code\u003e - a container size"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "updateComponents",
      "comment": "Determines the components. This should be called whenever a new instance of this is installed into an existing SplitPane.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.plaf.basic.BasicSplitPaneUI$BasicHorizontalLayoutManager",
  "comment": "LayoutManager for JSplitPanes that have an orientation of HORIZONTAL_SPLIT.",
  "tagMap": {}
}