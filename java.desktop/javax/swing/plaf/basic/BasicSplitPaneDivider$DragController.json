{
  "packageName": "javax.swing.plaf.basic",
  "simpleName": "DragController",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "isValid",
      "comment": "Returns true if the dragging session is valid.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the dragging session is valid"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.MouseEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "positionForMouseEvent",
      "comment": "Returns the new position to put the divider at based on the passed in MouseEvent.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - a mouse event"
        ],
        "return": [
          "the new position"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getNeededLocation",
      "comment": "Returns the x argument, since this is used for horizontal splits.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - an X coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - an Y coordinate"
        ],
        "return": [
          "the X argument"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "newX"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "newY"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "continueDrag",
      "comment": "Messages dragDividerTo with the new location for the mouse event.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enewX\u003c/code\u003e - an X coordinate",
          "\u003ccode\u003enewY\u003c/code\u003e - an Y coordinate"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.MouseEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "continueDrag",
      "comment": "Messages dragDividerTo with the new location for the mouse event.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - a mouse event"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "completeDrag",
      "comment": "Messages finishDraggingTo with the new location for the mouse event.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - an X coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - an Y coordinate"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.MouseEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "completeDrag",
      "comment": "Messages finishDraggingTo with the new location for the mouse event.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - a mouse event"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.MouseEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a new instance of DragController.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - a mouse event"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 4,
  "name": "javax.swing.plaf.basic.BasicSplitPaneDivider$DragController",
  "comment": "Handles the events during a dragging session for a HORIZONTAL_SPLIT oriented split pane. This continually messages \n\u003ccode\u003edragDividerTo\u003c/code\u003e and then when done messages \n\u003ccode\u003efinishDraggingTo\u003c/code\u003e. When an instance is created it should be messaged with \n\u003ccode\u003eisValid\u003c/code\u003e to insure that dragging can happen (dragging won\u0027t be allowed if the two views can not be resized). \n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {}
}