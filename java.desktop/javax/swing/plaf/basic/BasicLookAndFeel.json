{
  "packageName": "javax.swing.plaf.basic",
  "simpleName": "BasicLookAndFeel",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.LookAndFeel",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.swing.UIDefaults",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDefaults",
      "comment": "Returns the look and feel defaults. The returned UIDefaults is populated by invoking, in order, initClassDefaults, initSystemColorDefaults and initComponentDefaults. While this method is public, it should only be invoked by the UIManager when the look and feel is set as the current look and feel and after initialize has been invoked.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicLookAndFeel.html#initClassDefaults(javax.swing.UIDefaults)\"\u003e\u003ccode\u003einitClassDefaults(javax.swing.UIDefaults)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicLookAndFeel.html#initSystemColorDefaults(javax.swing.UIDefaults)\"\u003e\u003ccode\u003einitSystemColorDefaults(javax.swing.UIDefaults)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicLookAndFeel.html#initComponentDefaults(javax.swing.UIDefaults)\"\u003e\u003ccode\u003einitComponentDefaults(javax.swing.UIDefaults)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html#getDefaults()\"\u003egetDefaults\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html\" title\u003d\"class in javax.swing\"\u003eLookAndFeel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the look and feel defaults"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.UIDefaults",
            "type": "Class"
          },
          "name": "table",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "initClassDefaults",
      "comment": "Populates table with mappings from uiClassID to the fully qualified name of the ui class. The value for a particular uiClassID is \"javax.swing.plaf.basic.Basic + uiClassID\". For example, the value for the uiClassID TreeUI is \"javax.swing.plaf.basic.BasicTreeUI\".",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eLookAndFeel\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicLookAndFeel.html#getDefaults()\"\u003e\u003ccode\u003egetDefaults()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etable\u003c/code\u003e - the \n\u003ccode\u003eUIDefaults\u003c/code\u003e instance the entries are added to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etable\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.UIDefaults",
            "type": "Class"
          },
          "name": "table",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "initSystemColorDefaults",
      "comment": "Populates table with system colors. This creates an array of name-color pairs and invokes loadSystemColors. The name is a String that corresponds to the name of one of the static SystemColor fields in the SystemColor class. A name-color pair is created for every such SystemColor field. The color corresponds to a hex String as understood by Color.decode. For example, one of the name-color pairs is \"desktop\"-\"#005C5C\". This corresponds to the SystemColor field desktop, with a color value of new Color(0x005C5C). The following shows two of the name-color pairs:    String[] nameColorPairs \u003d new String[] {\n          \"desktop\", \"#005C5C\",\n    \"activeCaption\", \"#000080\" };\n   loadSystemColors(table, nameColorPairs, isNativeLookAndFeel());\n As previously stated, this invokes loadSystemColors with the supplied table and name-color pair array. The last argument to loadSystemColors indicates whether the value of the field in SystemColor should be used. This method passes the value of isNativeLookAndFeel() as the last argument to loadSystemColors.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/SystemColor.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eSystemColor\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicLookAndFeel.html#getDefaults()\"\u003e\u003ccode\u003egetDefaults()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicLookAndFeel.html#loadSystemColors(javax.swing.UIDefaults,java.lang.String%5B%5D,boolean)\"\u003e\u003ccode\u003eloadSystemColors(javax.swing.UIDefaults, java.lang.String[], boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etable\u003c/code\u003e - the \n\u003ccode\u003eUIDefaults\u003c/code\u003e object the values are added to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etable\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.UIDefaults",
            "type": "Class"
          },
          "name": "table",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "systemColors",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "useNative",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "loadSystemColors",
      "comment": "Populates table with the name-color pairs in systemColors. Refer to initSystemColorDefaults(UIDefaults) for details on the format of systemColors. An entry is added to table for each of the name-color pairs in systemColors. The entry key is the name of the name-color pair. The value of the entry corresponds to the color of the name-color pair. The value of the entry is calculated in one of two ways. With either approach the value is always a ColorUIResource. If useNative is false, the color is created by using Color.decode to convert the String into a Color. If decode can not convert the String into a Color ( NumberFormatException is thrown) then a ColorUIResource of black is used. If useNative is true, the color is the value of the field in SystemColor with the same name as the name of the name-color pair. If the field is not valid, a ColorUIResource of black is used.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicLookAndFeel.html#initSystemColorDefaults(javax.swing.UIDefaults)\"\u003e\u003ccode\u003einitSystemColorDefaults(javax.swing.UIDefaults)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/SystemColor.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eSystemColor\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#decode(java.lang.String)\"\u003e\u003ccode\u003eColor.decode(String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etable\u003c/code\u003e - the \n\u003ccode\u003eUIDefaults\u003c/code\u003e object the values are added to",
          "\u003ccode\u003esystemColors\u003c/code\u003e - array of \n\u003ccode\u003ename-color\u003c/code\u003e pairs as described in \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicLookAndFeel.html#initSystemColorDefaults(javax.swing.UIDefaults)\"\u003e\u003ccode\u003einitSystemColorDefaults(UIDefaults)\u003c/code\u003e\u003c/a\u003e",
          "\u003ccode\u003euseNative\u003c/code\u003e - whether the color is obtained from \n\u003ccode\u003eSystemColor\u003c/code\u003e or \n\u003ccode\u003eColor.decode\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esystemColors\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e; or \n\u003ccode\u003esystemColors\u003c/code\u003e is not empty, and \n\u003ccode\u003etable\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e; or one of the names of the \n\u003ccode\u003ename-color\u003c/code\u003e pairs is \n\u003ccode\u003enull\u003c/code\u003e; or \n\u003ccode\u003euseNative\u003c/code\u003e is \n\u003ccode\u003efalse\u003c/code\u003e and one of the \n\u003ccode\u003ecolors\u003c/code\u003e of the \n\u003ccode\u003ename-color\u003c/code\u003e pairs is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003euseNative\u003c/code\u003e is \n\u003ccode\u003efalse\u003c/code\u003e and \n\u003ccode\u003esystemColors.length\u003c/code\u003e is odd"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.UIDefaults",
            "type": "Class"
          },
          "name": "table",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "initComponentDefaults",
      "comment": "Populates table with the defaults for the basic look and feel.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etable\u003c/code\u003e - the \n\u003ccode\u003eUIDefaults\u003c/code\u003e to add the values to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etable\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.ActionMap",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getAudioActionMap",
      "comment": "Returns an ActionMap containing the audio actions for this look and feel. The returned ActionMap contains Actions that embody the ability to render an auditory cue. These auditory cues map onto user and system activities that may be useful for an end user to know about (such as a dialog box appearing). At the appropriate time, the ComponentUI is responsible for obtaining an Action out of the ActionMap and passing it to playSound. This method first looks up the ActionMap from the defaults using the key \"AuditoryCues.actionMap\". If the value is non-null, it is returned. If the value of the default \"AuditoryCues.actionMap\" is null and the value of the default \"AuditoryCues.cueList\" is non-null, an ActionMapUIResource is created and populated. Population is done by iterating over each of the elements of the \"AuditoryCues.cueList\" array, and invoking createAudioAction() to create an Action for each element. The resulting Action is placed in the ActionMapUIResource, using the array element as the key. For example, if the \"AuditoryCues.cueList\" array contains a single-element, \"audioKey\", the ActionMapUIResource is created, then populated by way of actionMap.put(cueList[0], createAudioAction(cueList[0])). If the value of the default \"AuditoryCues.actionMap\" is null and the value of the default \"AuditoryCues.cueList\" is null, an empty ActionMapUIResource is created.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicLookAndFeel.html#createAudioAction(java.lang.Object)\"\u003e\u003ccode\u003ecreateAudioAction(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicLookAndFeel.html#playSound(javax.swing.Action)\"\u003e\u003ccode\u003eplaySound(Action)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the value of the default \n\u003ccode\u003e\"AuditoryCues.actionMap\"\u003c/code\u003e is not an \n\u003ccode\u003eActionMap\u003c/code\u003e, or the value of the default \n\u003ccode\u003e\"AuditoryCues.cueList\"\u003c/code\u003e is not an \n\u003ccode\u003eObject[]\u003c/code\u003e"
        ],
        "return": [
          "an ActionMap containing \n\u003ccode\u003eActions\u003c/code\u003e responsible for playing auditory cues"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.Action",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createAudioAction",
      "comment": "Creates and returns an Action used to play a sound. If key is non-null, an Action is created using the value from the defaults with key key. The value identifies the sound resource to load when actionPerformed is invoked on the Action. The sound resource is loaded into a byte[] by way of getClass().getResourceAsStream().",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicLookAndFeel.html#playSound(javax.swing.Action)\"\u003e\u003ccode\u003eplaySound(Action)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key identifying the audio action"
        ],
        "return": [
          "an \n\u003ccode\u003eAction\u003c/code\u003e used to play the source, or \n\u003ccode\u003enull\u003c/code\u003e if \n\u003ccode\u003ekey\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.Action",
            "type": "Class"
          },
          "name": "audioAction",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "playSound",
      "comment": "If necessary, invokes actionPerformed on audioAction to play a sound. The actionPerformed method is invoked if the value of the \"AuditoryCues.playList\" default is a non-null Object[] containing a String entry equal to the name of the audioAction.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eaudioAction\u003c/code\u003e - an Action that knows how to render the audio associated with the system or user activity that is occurring; a value of \n\u003ccode\u003enull\u003c/code\u003e, is ignored"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eaudioAction\u003c/code\u003e is \n\u003ccode\u003enon-null\u003c/code\u003e and the value of the default \n\u003ccode\u003e\"AuditoryCues.playList\"\u003c/code\u003e is not an \n\u003ccode\u003eObject[]\u003c/code\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for subclasses to call.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.swing.plaf.basic.BasicLookAndFeel",
  "annotations": [],
  "tagMap": {}
}