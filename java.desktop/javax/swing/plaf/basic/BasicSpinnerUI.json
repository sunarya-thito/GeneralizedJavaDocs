{
  "packageName": "javax.swing.plaf.basic",
  "simpleName": "BasicSpinnerUI",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.plaf.SpinnerUI",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.swing.JSpinner",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "spinner",
      "comment": "The spinner that we\u0027re a UI delegate for. Initialized by the installUI method, and reset to null by uninstallUI.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003einstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#uninstallUI(javax.swing.JComponent)\"\u003e\u003ccode\u003euninstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.plaf.ComponentUI",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createUI",
      "comment": "Returns a new instance of BasicSpinnerUI. SpinnerListUI delegates are allocated one per JSpinner.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#createUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eComponentUI.createUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the JSpinner (not used)"
        ],
        "return": [
          "a new BasicSpinnerUI object"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "installUI",
      "comment": "Calls installDefaults, installListeners, and then adds the components returned by createNextButton, createPreviousButton, and createEditor.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#installDefaults()\"\u003e\u003ccode\u003einstallDefaults()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#installListeners()\"\u003e\u003ccode\u003einstallListeners()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createNextButton()\"\u003e\u003ccode\u003ecreateNextButton()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createPreviousButton()\"\u003e\u003ccode\u003ecreatePreviousButton()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createEditor()\"\u003e\u003ccode\u003ecreateEditor()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#installUI(javax.swing.JComponent)\"\u003einstallUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the JSpinner"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "uninstallUI",
      "comment": "Calls uninstallDefaults, uninstallListeners, and then removes all of the spinners children.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003eComponentUI.installUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#updateUI()\"\u003e\u003ccode\u003eJComponent.updateUI()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#uninstallUI(javax.swing.JComponent)\"\u003euninstallUI\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the JSpinner (not used)"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "installListeners",
      "comment": "Initializes PropertyChangeListener with a shared object that delegates interesting PropertyChangeEvents to protected methods. This method is called by installUI.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#replaceEditor(javax.swing.JComponent,javax.swing.JComponent)\"\u003e\u003ccode\u003ereplaceEditor(javax.swing.JComponent, javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#uninstallListeners()\"\u003e\u003ccode\u003euninstallListeners()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "uninstallListeners",
      "comment": "Removes the PropertyChangeListener added by installListeners. This method is called by uninstallUI.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#installListeners()\"\u003e\u003ccode\u003einstallListeners()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "installDefaults",
      "comment": "Initialize the JSpinner border, foreground, and background, properties based on the corresponding \"Spinner.*\" properties from defaults table. The JSpinners layout is set to the value returned by createLayout. This method is called by installUI.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#uninstallDefaults()\"\u003e\u003ccode\u003euninstallDefaults()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003einstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createLayout()\"\u003e\u003ccode\u003ecreateLayout()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html#installBorder(javax.swing.JComponent,java.lang.String)\"\u003e\u003ccode\u003eLookAndFeel.installBorder(javax.swing.JComponent, java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LookAndFeel.html#installColors(javax.swing.JComponent,java.lang.String,java.lang.String)\"\u003e\u003ccode\u003eLookAndFeel.installColors(javax.swing.JComponent, java.lang.String, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "uninstallDefaults",
      "comment": "Sets the JSpinner\u0027s layout manager to null. This method is called by uninstallUI.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#installDefaults()\"\u003e\u003ccode\u003einstallDefaults()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#uninstallUI(javax.swing.JComponent)\"\u003e\u003ccode\u003euninstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "installNextButtonListeners",
      "comment": "Installs the necessary listeners on the next button, c, to update the JSpinner in response to a user gesture.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createNextButton()\"\u003e\u003ccode\u003ecreateNextButton()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - Component to install the listeners on"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ec\u003c/code\u003e is null."
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "installPreviousButtonListeners",
      "comment": "Installs the necessary listeners on the previous button, c, to update the JSpinner in response to a user gesture.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createPreviousButton()\"\u003e\u003ccode\u003ecreatePreviousButton()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - Component to install the listeners on."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ec\u003c/code\u003e is null."
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.LayoutManager",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createLayout",
      "comment": "Creates a LayoutManager that manages the editor, nextButton, and previousButton children of the JSpinner. These three children must be added with a constraint that identifies their role: \"Editor\", \"Next\", and \"Previous\". The default layout manager can handle the absence of any of these children.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createNextButton()\"\u003e\u003ccode\u003ecreateNextButton()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createPreviousButton()\"\u003e\u003ccode\u003ecreatePreviousButton()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createEditor()\"\u003e\u003ccode\u003ecreateEditor()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a LayoutManager for the editor, next button, and previous button."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.beans.PropertyChangeListener",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createPropertyChangeListener",
      "comment": "Creates a PropertyChangeListener that can be added to the JSpinner itself. Typically, this listener will call replaceEditor when the \"editor\" property changes, since it\u0027s the SpinnerUI\u0027s responsibility to add the editor to the JSpinner (and remove the old one). This method is called by installListeners.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#installListeners()\"\u003e\u003ccode\u003einstallListeners()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "A PropertyChangeListener for the JSpinner itself"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createPreviousButton",
      "comment": "Creates a decrement button, i.e. component that replaces the spinner value with the object returned by spinner.getPreviousValue. By default the previousButton is a JButton. If the decrement button is not needed this method should return null.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003einstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createNextButton()\"\u003e\u003ccode\u003ecreateNextButton()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#installPreviousButtonListeners(java.awt.Component)\"\u003e\u003ccode\u003einstallPreviousButtonListeners(java.awt.Component)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a component that will replace the spinner\u0027s value with the previous value in the sequence, or \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createNextButton",
      "comment": "Creates an increment button, i.e. component that replaces the spinner value with the object returned by spinner.getNextValue. By default the nextButton is a JButton. If the increment button is not needed this method should return null.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003einstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createPreviousButton()\"\u003e\u003ccode\u003ecreatePreviousButton()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#installNextButtonListeners(java.awt.Component)\"\u003e\u003ccode\u003einstallNextButtonListeners(java.awt.Component)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a component that will replace the spinner\u0027s value with the next value in the sequence, or \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.JComponent",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createEditor",
      "comment": "This method is called by installUI to get the editor component of the JSpinner. By default it just returns JSpinner.getEditor(). Subclasses can override createEditor to return a component that contains the spinner\u0027s editor or null, if they\u0027re going to handle adding the editor to the JSpinner in an installUI override. Typically this method would be overridden to wrap the editor with a container with a custom border, since one can\u0027t assume that the editors border can be set directly. The replaceEditor method is called when the spinners editor is changed with JSpinner.setEditor. If you\u0027ve overriden this method, then you\u0027ll probably want to override replaceEditor as well.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#installUI(javax.swing.JComponent)\"\u003e\u003ccode\u003einstallUI(javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#replaceEditor(javax.swing.JComponent,javax.swing.JComponent)\"\u003e\u003ccode\u003ereplaceEditor(javax.swing.JComponent, javax.swing.JComponent)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JSpinner.html#getEditor()\"\u003e\u003ccode\u003eJSpinner.getEditor()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the JSpinners editor JComponent, spinner.getEditor() by default"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "replaceEditor",
      "comment": "Called by the PropertyChangeListener when the JSpinner editor property changes. It\u0027s the responsibility of this method to remove the old editor and add the new one. By default this operation is just:  spinner.remove(oldEditor);\n spinner.add(newEditor, \"Editor\");\n The implementation of replaceEditor should be coordinated with the createEditor method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createEditor()\"\u003e\u003ccode\u003ecreateEditor()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/basic/BasicSpinnerUI.html#createPropertyChangeListener()\"\u003e\u003ccode\u003ecreatePropertyChangeListener()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eoldEditor\u003c/code\u003e - an old instance of editor",
          "\u003ccode\u003enewEditor\u003c/code\u003e - a new instance of editor"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "installKeyboardActions",
      "comment": "Installs the keyboard Actions onto the JSpinner.",
      "annotations": [],
      "tagMap": {
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBaseline",
      "comment": "Returns the baseline.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getBaseline(int,int)\"\u003e\u003ccode\u003eJComponent.getBaseline(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#getBaseline(javax.swing.JComponent,int,int)\"\u003egetBaseline\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - \n\u003ccode\u003eJComponent\u003c/code\u003e baseline is being requested for",
          "\u003ccode\u003ewidth\u003c/code\u003e - the width to get the baseline for",
          "\u003ccode\u003eheight\u003c/code\u003e - the height to get the baseline for"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ec\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if width or height is \u0026lt; 0"
        ],
        "return": [
          "baseline or a value \u0026lt; 0 indicating there is no reasonable baseline"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component$BaselineResizeBehavior",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBaselineResizeBehavior",
      "comment": "Returns an enum indicating how the baseline of the component changes as the size changes.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/JComponent.html#getBaseline(int,int)\"\u003e\u003ccode\u003eJComponent.getBaseline(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html#getBaselineResizeBehavior(javax.swing.JComponent)\"\u003egetBaselineResizeBehavior\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/ComponentUI.html\" title\u003d\"class in javax.swing.plaf\"\u003eComponentUI\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - \n\u003ccode\u003eJComponent\u003c/code\u003e to return baseline resize behavior for"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ec\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an enum indicating how the baseline changes as the component size changes"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a BasicSpinnerUI.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.plaf.basic.BasicSpinnerUI",
  "comment": "The default Spinner UI delegate.",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}