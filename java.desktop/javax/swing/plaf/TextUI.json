{
  "packageName": "javax.swing.plaf",
  "simpleName": "TextUI",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.plaf.ComponentUI",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.awt.Rectangle",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.text.BadLocationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "modelToView",
      "comment": "Converts the given location in the model to a place in the view coordinate system.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - the text component for which this UI is installed",
          "\u003ccode\u003epos\u003c/code\u003e - the local location in the model to translate \u0026gt;\u003d 0"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if the given position does not represent a valid location in the associated document"
        ],
        "return": [
          "the coordinates as a \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Rectangle",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.text.BadLocationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.Position$Bias",
            "type": "Class"
          },
          "field": {
            "name": "bias"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "modelToView",
      "comment": "Converts the given location in the model to a place in the view coordinate system.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - the text component for which this UI is installed",
          "\u003ccode\u003epos\u003c/code\u003e - the local location in the model to translate \u0026gt;\u003d 0",
          "\u003ccode\u003ebias\u003c/code\u003e - the bias for the position"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if the given position does not represent a valid location in the associated document"
        ],
        "return": [
          "the coordinates as a \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.Rectangle2D",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.text.BadLocationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.Position$Bias",
            "type": "Class"
          },
          "field": {
            "name": "bias"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "modelToView2D",
      "comment": "Converts the given location in the model to a place in the view coordinate system.",
      "tagMap": {
        "implSpec": [
          "This implementation calls \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/TextUI.html#modelToView(javax.swing.text.JTextComponent,int,javax.swing.text.Position.Bias)\"\u003e\u003ccode\u003emodelToView(t, pos, bias)\u003c/code\u003e\u003c/a\u003e."
        ],
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - the text component for which this UI is installed",
          "\u003ccode\u003epos\u003c/code\u003e - the local location in the model to translate \n\u003ccode\u003e\u0026gt;\u003d 0\u003c/code\u003e",
          "\u003ccode\u003ebias\u003c/code\u003e - the bias for the position"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - if the given position does not represent a valid location in the associated document"
        ],
        "return": [
          "the coordinates as a \n\u003ccode\u003eRectangle2D\u003c/code\u003e"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "field": {
            "name": "pt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "viewToModel",
      "comment": "Converts the given place in the view coordinate system to the nearest representative location in the model.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - the text component for which this UI is installed",
          "\u003ccode\u003ept\u003c/code\u003e - the location in the view to translate. This should be in the same coordinate system as the mouse events."
        ],
        "return": [
          "the offset from the start of the document \u0026gt;\u003d 0"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "field": {
            "name": "pt"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.Position$Bias",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "biasReturn"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "viewToModel",
      "comment": "Provides a mapping from the view coordinate space to the logical coordinate space of the model.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - the text component for which this UI is installed",
          "\u003ccode\u003ept\u003c/code\u003e - the location in the view to translate. This should be in the same coordinate system as the mouse events.",
          "\u003ccode\u003ebiasReturn\u003c/code\u003e - filled in by this method to indicate whether the point given is closer to the previous or the next character in the model"
        ],
        "return": [
          "the location within the model that best represents the given point in the view \u0026gt;\u003d 0"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "java.awt.geom.Point2D",
            "type": "Class"
          },
          "field": {
            "name": "pt"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.Position$Bias",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "biasReturn"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "viewToModel2D",
      "comment": "Provides a mapping from the view coordinate space to the logical coordinate space of the model.",
      "tagMap": {
        "implSpec": [
          "This implementation calls \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/TextUI.html#viewToModel(javax.swing.text.JTextComponent,java.awt.Point,javax.swing.text.Position.Bias%5B%5D)\"\u003e\u003ccode\u003eviewToModel(t, new Point((int) pt.getX(), (int) pt.getY()), biasReturn)\u003c/code\u003e\u003c/a\u003e."
        ],
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - the text component for which this UI is installed",
          "\u003ccode\u003ept\u003c/code\u003e - the location in the view to translate.",
          "\u003ccode\u003ebiasReturn\u003c/code\u003e - filled in by this method to indicate whether the point given is closer to the previous or the next character in the model"
        ],
        "return": [
          "the location within the model that best represents the given point in the view \n\u003ccode\u003e\u0026gt;\u003d 0\u003c/code\u003e"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.text.BadLocationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "pos"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.Position$Bias",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "direction"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.Position$Bias",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "biasRet"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getNextVisualPositionFrom",
      "comment": "Provides a way to determine the next visually represented model location that one might place a caret. Some views may not be visible, they might not be in the same order found in the model, or they just might not allow access to some of the locations in the model.",
      "tagMap": {
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - the text component for which this UI is installed",
          "\u003ccode\u003epos\u003c/code\u003e - the position to convert \u0026gt;\u003d 0",
          "\u003ccode\u003eb\u003c/code\u003e - the bias for the position",
          "\u003ccode\u003edirection\u003c/code\u003e - the direction from the current position that can be thought of as the arrow keys typically found on a keyboard. This may be SwingConstants.WEST, SwingConstants.EAST, SwingConstants.NORTH, or SwingConstants.SOUTH",
          "\u003ccode\u003ebiasRet\u003c/code\u003e - an array to contain the bias for the returned position"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/BadLocationException.html\" title\u003d\"class in javax.swing.text\"\u003eBadLocationException\u003c/a\u003e\u003c/code\u003e - for a bad location within a document model",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - for an invalid direction"
        ],
        "return": [
          "the location within the model that best represents the next location visual position"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "p0"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "p1"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "damageRange",
      "comment": "Causes the portion of the view responsible for the given part of the model to be repainted.",
      "tagMap": {
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - the text component for which this UI is installed",
          "\u003ccode\u003ep0\u003c/code\u003e - the beginning of the range \u0026gt;\u003d 0",
          "\u003ccode\u003ep1\u003c/code\u003e - the end of the range \u0026gt;\u003d p0"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "p0"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "p1"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.Position$Bias",
            "type": "Class"
          },
          "field": {
            "name": "firstBias"
          }
        },
        {
          "type": {
            "name": "javax.swing.text.Position$Bias",
            "type": "Class"
          },
          "field": {
            "name": "secondBias"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "damageRange",
      "comment": "Causes the portion of the view responsible for the given part of the model to be repainted.",
      "tagMap": {
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - the text component for which this UI is installed",
          "\u003ccode\u003ep0\u003c/code\u003e - the beginning of the range \u0026gt;\u003d 0",
          "\u003ccode\u003ep1\u003c/code\u003e - the end of the range \u0026gt;\u003d p0",
          "\u003ccode\u003efirstBias\u003c/code\u003e - the bias of the first character position, toward the previous character or the next character",
          "\u003ccode\u003esecondBias\u003c/code\u003e - the bias of the second character position, toward the previous character or the next character"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.EditorKit",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getEditorKit",
      "comment": "Fetches the binding of services that set a policy for the type of document being edited. This contains things like the commands available, stream readers and writers, etc.",
      "tagMap": {
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - the text component for which this UI is installed"
        ],
        "return": [
          "the editor kit binding"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.View",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getRootView",
      "comment": "Fetches a View with the allocation of the associated text component (i.e. the root of the hierarchy) that can be traversed to determine how the model is being represented spatially.",
      "tagMap": {
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - the text component for which this UI is installed"
        ],
        "return": [
          "a \n\u003ccode\u003eView\u003c/code\u003e with the allocation of the associated text component"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "field": {
            "name": "pt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getToolTipText",
      "comment": "Returns the string to be used as the tooltip at the passed in location.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getToolTipText(java.awt.event.MouseEvent)\"\u003e\u003ccode\u003eJTextComponent.getToolTipText(java.awt.event.MouseEvent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - the text component for which this UI is installed",
          "\u003ccode\u003ept\u003c/code\u003e - a \n\u003ccode\u003ePoint\u003c/code\u003e specifying location for which to get a tooltip"
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e containing the tooltip"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.text.JTextComponent",
            "type": "Class"
          },
          "field": {
            "name": "t"
          }
        },
        {
          "type": {
            "name": "java.awt.geom.Point2D",
            "type": "Class"
          },
          "field": {
            "name": "pt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getToolTipText2D",
      "comment": "Returns the string to be used as the tooltip at the passed in location.",
      "tagMap": {
        "implSpec": [
          "This implementation calls \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/plaf/TextUI.html#getToolTipText(javax.swing.text.JTextComponent,java.awt.Point)\"\u003e\u003ccode\u003egetToolTipText(t, new Point((int) pt.getX(), (int) pt.getY())))\u003c/code\u003e\u003c/a\u003e."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/JTextComponent.html#getToolTipText(java.awt.event.MouseEvent)\"\u003e\u003ccode\u003eJTextComponent.getToolTipText(java.awt.event.MouseEvent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003et\u003c/code\u003e - the text component for which this UI is installed",
          "\u003ccode\u003ept\u003c/code\u003e - a \n\u003ccode\u003ePoint\u003c/code\u003e specifying location for which to get a tooltip"
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e containing the tooltip"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for subclasses to call.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.swing.plaf.TextUI",
  "comment": "Text editor user interface",
  "tagMap": {}
}