{
  "packageName": "javax.swing.undo",
  "simpleName": "UndoManager",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.undo.CompoundEdit",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLimit",
      "comment": "Returns the maximum number of edits this UndoManager holds. A value less than 0 indicates the number of edits is not limited.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#addEdit(javax.swing.undo.UndoableEdit)\"\u003e\u003ccode\u003eaddEdit(javax.swing.undo.UndoableEdit)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#setLimit(int)\"\u003e\u003ccode\u003esetLimit(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the maximum number of edits this \n\u003ccode\u003eUndoManager\u003c/code\u003e holds"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "discardAllEdits",
      "comment": "Empties the undo manager sending each edit a die message in the process.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/AbstractUndoableEdit.html#die()\"\u003e\u003ccode\u003eAbstractUndoableEdit.die()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "trimForLimit",
      "comment": "Reduces the number of queued edits to a range of size limit, centered on the index of the next edit.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "from"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "to"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "trimEdits",
      "comment": "Removes edits in the specified range. All edits in the given range (inclusive, and in reverse order) will have die invoked on them and are removed from the list of edits. This has no effect if from \u003e to.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efrom\u003c/code\u003e - the minimum index to remove",
          "\u003ccode\u003eto\u003c/code\u003e - the maximum index to remove"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLimit",
      "comment": "Sets the maximum number of edits this UndoManager holds. A value less than 0 indicates the number of edits is not limited. If edits need to be discarded to shrink the limit, die will be invoked on them in the reverse order they were added. The default is 100.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#isInProgress()\"\u003e\u003ccode\u003eCompoundEdit.isInProgress()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#end()\"\u003e\u003ccode\u003eend()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#addEdit(javax.swing.undo.UndoableEdit)\"\u003e\u003ccode\u003eaddEdit(javax.swing.undo.UndoableEdit)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#getLimit()\"\u003e\u003ccode\u003egetLimit()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the new limit"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimeException.html\" title\u003d\"class in java.lang\"\u003eRuntimeException\u003c/a\u003e\u003c/code\u003e - if this \n\u003ccode\u003eUndoManager\u003c/code\u003e is not in progress (\n\u003ccode\u003eend\u003c/code\u003e has been invoked)"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.undo.UndoableEdit",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "editToBeUndone",
      "comment": "Returns the next significant edit to be undone if undo is invoked. This returns null if there are no edits to be undone.",
      "tagMap": {
        "return": [
          "the next significant edit to be undone"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.undo.UndoableEdit",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "editToBeRedone",
      "comment": "Returns the next significant edit to be redone if redo is invoked. This returns null if there are no edits to be redone.",
      "tagMap": {
        "return": [
          "the next significant edit to be redone"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.undo.CannotUndoException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.swing.undo.UndoableEdit",
            "type": "Class"
          },
          "field": {
            "name": "edit"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "undoTo",
      "comment": "Undoes all changes from the index of the next edit to edit, updating the index of the next edit appropriately.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eedit\u003c/code\u003e - the edit to be undo to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CannotUndoException.html\" title\u003d\"class in javax.swing.undo\"\u003eCannotUndoException\u003c/a\u003e\u003c/code\u003e - if one of the edits throws \n\u003ccode\u003eCannotUndoException\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.undo.CannotRedoException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.swing.undo.UndoableEdit",
            "type": "Class"
          },
          "field": {
            "name": "edit"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "redoTo",
      "comment": "Redoes all changes from the index of the next edit to edit, updating the index of the next edit appropriately.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eedit\u003c/code\u003e - the edit to be redo to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CannotRedoException.html\" title\u003d\"class in javax.swing.undo\"\u003eCannotRedoException\u003c/a\u003e\u003c/code\u003e - if one of the edits throws \n\u003ccode\u003eCannotRedoException\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.undo.CannotRedoException",
          "type": "Class"
        },
        {
          "name": "javax.swing.undo.CannotUndoException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "undoOrRedo",
      "comment": "Convenience method that invokes one of undo or redo. If any edits have been undone (the index of the next edit is less than the length of the edits list) this invokes redo, otherwise it invokes undo.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#canUndoOrRedo()\"\u003e\u003ccode\u003ecanUndoOrRedo()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#getUndoOrRedoPresentationName()\"\u003e\u003ccode\u003egetUndoOrRedoPresentationName()\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CannotUndoException.html\" title\u003d\"class in javax.swing.undo\"\u003eCannotUndoException\u003c/a\u003e\u003c/code\u003e - if one of the edits throws \n\u003ccode\u003eCannotUndoException\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CannotRedoException.html\" title\u003d\"class in javax.swing.undo\"\u003eCannotRedoException\u003c/a\u003e\u003c/code\u003e - if one of the edits throws \n\u003ccode\u003eCannotRedoException\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "canUndoOrRedo",
      "comment": "Returns true if it is possible to invoke undo or redo.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#undoOrRedo()\"\u003e\u003ccode\u003eundoOrRedo()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "true if invoking \n\u003ccode\u003ecanUndoOrRedo\u003c/code\u003e is valid"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.undo.CannotUndoException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "undo",
      "comment": "Undoes the appropriate edits. If end has been invoked this calls through to the superclass, otherwise this invokes undo on all edits between the index of the next edit and the last significant edit, updating the index of the next edit appropriately.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#end()\"\u003e\u003ccode\u003eCompoundEdit.end()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#canUndo()\"\u003e\u003ccode\u003ecanUndo()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#editToBeUndone()\"\u003e\u003ccode\u003eeditToBeUndone()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#undo()\"\u003eundo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html\" title\u003d\"class in javax.swing.undo\"\u003eCompoundEdit\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoableEdit.html#undo()\"\u003eundo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoableEdit.html\" title\u003d\"interface in javax.swing.undo\"\u003eUndoableEdit\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CannotUndoException.html\" title\u003d\"class in javax.swing.undo\"\u003eCannotUndoException\u003c/a\u003e\u003c/code\u003e - if one of the edits throws \n\u003ccode\u003eCannotUndoException\u003c/code\u003e or there are no edits to be undone"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "canUndo",
      "comment": "Returns true if edits may be undone. If end has been invoked, this returns the value from super. Otherwise this returns true if there are any edits to be undone (editToBeUndone returns non-null).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#canUndo()\"\u003e\u003ccode\u003eCompoundEdit.canUndo()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#editToBeUndone()\"\u003e\u003ccode\u003eeditToBeUndone()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#canUndo()\"\u003ecanUndo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html\" title\u003d\"class in javax.swing.undo\"\u003eCompoundEdit\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoableEdit.html#canUndo()\"\u003ecanUndo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoableEdit.html\" title\u003d\"interface in javax.swing.undo\"\u003eUndoableEdit\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if there are edits to be undone"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.swing.undo.CannotRedoException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "redo",
      "comment": "Redoes the appropriate edits. If end has been invoked this calls through to the superclass. Otherwise this invokes redo on all edits between the index of the next edit and the next significant edit, updating the index of the next edit appropriately.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#end()\"\u003e\u003ccode\u003eCompoundEdit.end()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#canRedo()\"\u003e\u003ccode\u003ecanRedo()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#editToBeRedone()\"\u003e\u003ccode\u003eeditToBeRedone()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#redo()\"\u003eredo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html\" title\u003d\"class in javax.swing.undo\"\u003eCompoundEdit\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoableEdit.html#redo()\"\u003eredo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoableEdit.html\" title\u003d\"interface in javax.swing.undo\"\u003eUndoableEdit\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CannotRedoException.html\" title\u003d\"class in javax.swing.undo\"\u003eCannotRedoException\u003c/a\u003e\u003c/code\u003e - if one of the edits throws \n\u003ccode\u003eCannotRedoException\u003c/code\u003e or there are no edits to be redone"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "canRedo",
      "comment": "Returns true if edits may be redone. If end has been invoked, this returns the value from super. Otherwise, this returns true if there are any edits to be redone (editToBeRedone returns non-null).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#canRedo()\"\u003e\u003ccode\u003eCompoundEdit.canRedo()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#editToBeRedone()\"\u003e\u003ccode\u003eeditToBeRedone()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#canRedo()\"\u003ecanRedo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html\" title\u003d\"class in javax.swing.undo\"\u003eCompoundEdit\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoableEdit.html#canRedo()\"\u003ecanRedo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoableEdit.html\" title\u003d\"interface in javax.swing.undo\"\u003eUndoableEdit\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if there are edits to be redone"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.undo.UndoableEdit",
            "type": "Class"
          },
          "field": {
            "name": "anEdit"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addEdit",
      "comment": "Adds an UndoableEdit to this UndoManager, if it\u0027s possible. This removes all edits from the index of the next edit to the end of the edits list. If end has been invoked the edit is not added and false is returned. If end hasn\u0027t been invoked this returns true.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#end()\"\u003e\u003ccode\u003eCompoundEdit.end()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#addEdit(javax.swing.undo.UndoableEdit)\"\u003e\u003ccode\u003eCompoundEdit.addEdit(javax.swing.undo.UndoableEdit)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#addEdit(javax.swing.undo.UndoableEdit)\"\u003eaddEdit\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html\" title\u003d\"class in javax.swing.undo\"\u003eCompoundEdit\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoableEdit.html#addEdit(javax.swing.undo.UndoableEdit)\"\u003eaddEdit\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoableEdit.html\" title\u003d\"interface in javax.swing.undo\"\u003eUndoableEdit\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eanEdit\u003c/code\u003e - the edit to be added"
        ],
        "return": [
          "true if \n\u003ccode\u003eanEdit\u003c/code\u003e can be incorporated into this edit"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "end",
      "comment": "Turns this UndoManager into a normal CompoundEdit. This removes all edits that have been undone.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#end()\"\u003e\u003ccode\u003eCompoundEdit.end()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#end()\"\u003eend\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html\" title\u003d\"class in javax.swing.undo\"\u003eCompoundEdit\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUndoOrRedoPresentationName",
      "comment": "Convenience method that returns either getUndoPresentationName or getRedoPresentationName. If the index of the next edit equals the size of the edits list, getUndoPresentationName is returned, otherwise getRedoPresentationName is returned.",
      "tagMap": {
        "return": [
          "undo or redo name"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUndoPresentationName",
      "comment": "Returns a description of the undoable form of this edit. If end has been invoked this calls into super. Otherwise if there are edits to be undone, this returns the value from the next significant edit that will be undone. If there are no edits to be undone and end has not been invoked this returns the value from the UIManager property \"AbstractUndoableEdit.undoText\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#undo()\"\u003e\u003ccode\u003eundo()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#getUndoPresentationName()\"\u003e\u003ccode\u003eCompoundEdit.getUndoPresentationName()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#getUndoPresentationName()\"\u003egetUndoPresentationName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html\" title\u003d\"class in javax.swing.undo\"\u003eCompoundEdit\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoableEdit.html#getUndoPresentationName()\"\u003egetUndoPresentationName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoableEdit.html\" title\u003d\"interface in javax.swing.undo\"\u003eUndoableEdit\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a description of the undoable form of this edit"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRedoPresentationName",
      "comment": "Returns a description of the redoable form of this edit. If end has been invoked this calls into super. Otherwise if there are edits to be redone, this returns the value from the next significant edit that will be redone. If there are no edits to be redone and end has not been invoked this returns the value from the UIManager property \"AbstractUndoableEdit.redoText\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#redo()\"\u003e\u003ccode\u003eredo()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#getRedoPresentationName()\"\u003e\u003ccode\u003eCompoundEdit.getRedoPresentationName()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#getRedoPresentationName()\"\u003egetRedoPresentationName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html\" title\u003d\"class in javax.swing.undo\"\u003eCompoundEdit\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoableEdit.html#getRedoPresentationName()\"\u003egetRedoPresentationName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoableEdit.html\" title\u003d\"interface in javax.swing.undo\"\u003eUndoableEdit\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a description of the redoable form of this edit"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.swing.event.UndoableEditEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "undoableEditHappened",
      "comment": "An UndoableEditListener method. This invokes addEdit with e.getEdit().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/UndoManager.html#addEdit(javax.swing.undo.UndoableEdit)\"\u003e\u003ccode\u003eaddEdit(javax.swing.undo.UndoableEdit)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/UndoableEditListener.html#undoableEditHappened(javax.swing.event.UndoableEditEvent)\"\u003eundoableEditHappened\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/event/UndoableEditListener.html\" title\u003d\"interface in javax.swing.event\"\u003eUndoableEditListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the \n\u003ccode\u003eUndoableEditEvent\u003c/code\u003e the \n\u003ccode\u003eUndoableEditEvent\u003c/code\u003e will be added from"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string that displays and identifies this object\u0027s properties.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/undo/CompoundEdit.html\" title\u003d\"class in javax.swing.undo\"\u003eCompoundEdit\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a String representation of this object"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new UndoManager.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.undo.UndoManager",
  "comment": "\u003ccode\u003eUndoManager\u003c/code\u003e manages a list of \n\u003ccode\u003eUndoableEdits\u003c/code\u003e, providing a way to undo or redo the appropriate edits. There are two ways to add edits to an \n\u003ccode\u003eUndoManager\u003c/code\u003e. Add the edit directly using the \n\u003ccode\u003eaddEdit\u003c/code\u003e method, or add the \n\u003ccode\u003eUndoManager\u003c/code\u003e to a bean that supports \n\u003ccode\u003eUndoableEditListener\u003c/code\u003e. The following examples creates an \n\u003ccode\u003eUndoManager\u003c/code\u003e and adds it as an \n\u003ccode\u003eUndoableEditListener\u003c/code\u003e to a \n\u003ccode\u003eJTextField\u003c/code\u003e: \n\u003cpre\u003e   UndoManager undoManager \u003d new UndoManager();\n   JTextField tf \u003d ...;\n   tf.getDocument().addUndoableEditListener(undoManager);\n \u003c/pre\u003e \n\u003cp\u003e \u003ccode\u003eUndoManager\u003c/code\u003e maintains an ordered list of edits and the index of the next edit in that list. The index of the next edit is either the size of the current list of edits, or if \u003ccode\u003eundo\u003c/code\u003e has been invoked it corresponds to the index of the last significant edit that was undone. When \u003ccode\u003eundo\u003c/code\u003e is invoked all edits from the index of the next edit to the last significant edit are undone, in reverse order. For example, consider an \u003ccode\u003eUndoManager\u003c/code\u003e consisting of the following edits: \u003cb\u003eA\u003c/b\u003e \u003ci\u003eb\u003c/i\u003e \u003ci\u003ec\u003c/i\u003e \u003cb\u003eD\u003c/b\u003e. Edits with a upper-case letter in bold are significant, those in lower-case and italicized are insignificant. \u003c/p\u003e\n\u003cp\u003e \u003ca id\u003d\"figure1\"\u003e\u003c/a\u003e \u003c/p\u003e\n\u003ctable class\u003d\"borderless\"\u003e \n \u003ccaption style\u003d\"display:none\"\u003e\n  Figure 1\n \u003c/caption\u003e \n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e \u003cimg src\u003d\"doc-files/UndoManager-1.gif\" alt\u003e \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd style\u003d\"text-align:center\"\u003eFigure 1 \u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e As shown in \u003ca href\u003d\"#figure1\"\u003efigure 1\u003c/a\u003e, if \u003cb\u003eD\u003c/b\u003e was just added, the index of the next edit will be 4. Invoking \u003ccode\u003eundo\u003c/code\u003e results in invoking \u003ccode\u003eundo\u003c/code\u003e on \u003cb\u003eD\u003c/b\u003e and setting the index of the next edit to 3 (edit \u003ci\u003ec\u003c/i\u003e), as shown in the following figure. \u003c/p\u003e\n\u003cp\u003e \u003ca id\u003d\"figure2\"\u003e\u003c/a\u003e \u003c/p\u003e\n\u003ctable class\u003d\"borderless\"\u003e \n \u003ccaption style\u003d\"display:none\"\u003e\n  Figure 2\n \u003c/caption\u003e \n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e \u003cimg src\u003d\"doc-files/UndoManager-2.gif\" alt\u003e \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd style\u003d\"text-align:center\"\u003eFigure 2 \u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The last significant edit is \u003cb\u003eA\u003c/b\u003e, so that invoking \u003ccode\u003eundo\u003c/code\u003e again invokes \u003ccode\u003eundo\u003c/code\u003e on \u003ci\u003ec\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e, and \u003cb\u003eA\u003c/b\u003e, in that order, setting the index of the next edit to 0, as shown in the following figure. \u003c/p\u003e\n\u003cp\u003e \u003ca id\u003d\"figure3\"\u003e\u003c/a\u003e \u003c/p\u003e\n\u003ctable class\u003d\"borderless\"\u003e \n \u003ccaption style\u003d\"display:none\"\u003e\n  Figure 3\n \u003c/caption\u003e \n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e \u003cimg src\u003d\"doc-files/UndoManager-3.gif\" alt\u003e \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd style\u003d\"text-align:center\"\u003eFigure 3 \u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e Invoking \u003ccode\u003eredo\u003c/code\u003e results in invoking \u003ccode\u003eredo\u003c/code\u003e on all edits between the index of the next edit and the next significant edit (or the end of the list). Continuing with the previous example if \u003ccode\u003eredo\u003c/code\u003e were invoked, \u003ccode\u003eredo\u003c/code\u003e would in turn be invoked on \u003cb\u003eA\u003c/b\u003e, \u003ci\u003eb\u003c/i\u003e and \u003ci\u003ec\u003c/i\u003e. In addition the index of the next edit is set to 3 (as shown in \u003ca href\u003d\"#figure2\"\u003efigure 2\u003c/a\u003e). \u003c/p\u003e\n\u003cp\u003e Adding an edit to an \u003ccode\u003eUndoManager\u003c/code\u003e results in removing all edits from the index of the next edit to the end of the list. Continuing with the previous example, if a new edit, \u003ci\u003ee\u003c/i\u003e, is added the edit \u003cb\u003eD\u003c/b\u003e is removed from the list (after having \u003ccode\u003edie\u003c/code\u003e invoked on it). If \u003ci\u003ec\u003c/i\u003e is not incorporated by the next edit (\u003ccode\u003e\u003ci\u003ec\u003c/i\u003e.addEdit(\u003ci\u003ee\u003c/i\u003e)\u003c/code\u003e returns true), or replaced by it (\u003ccode\u003e\u003ci\u003ee\u003c/i\u003e.replaceEdit(\u003ci\u003ec\u003c/i\u003e)\u003c/code\u003e returns true), the new edit is added after \u003ci\u003ec\u003c/i\u003e, as shown in the following figure. \u003c/p\u003e\n\u003cp\u003e \u003ca id\u003d\"figure4\"\u003e\u003c/a\u003e \u003c/p\u003e\n\u003ctable class\u003d\"borderless\"\u003e \n \u003ccaption style\u003d\"display:none\"\u003e\n  Figure 4\n \u003c/caption\u003e \n \u003ctbody\u003e\n  \u003ctr\u003e\n   \u003ctd\u003e \u003cimg src\u003d\"doc-files/UndoManager-4.gif\" alt\u003e \u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n   \u003ctd style\u003d\"text-align:center\"\u003eFigure 4 \u003c/td\u003e\n  \u003c/tr\u003e\n \u003c/tbody\u003e\n\u003c/table\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e Once \u003ccode\u003eend\u003c/code\u003e has been invoked on an \u003ccode\u003eUndoManager\u003c/code\u003e the superclass behavior is used for all \u003ccode\u003eUndoableEdit\u003c/code\u003e methods. Refer to \u003ccode\u003eCompoundEdit\u003c/code\u003e for more details on its behavior. \u003c/p\u003e\n\u003cp\u003e Unlike the rest of Swing, this class is thread safe. \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eWarning:\u003c/strong\u003e Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeans has been added to the \u003ccode\u003ejava.beans\u003c/code\u003e package. Please see \u003ca href\u003d\"../../../java/beans/XMLEncoder.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eXMLEncoder\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {}
}