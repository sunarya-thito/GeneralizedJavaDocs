{
  "packageName": "javax.swing",
  "simpleName": "SequentialGroup",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.swing.GroupLayout$Group",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.swing.GroupLayout$SequentialGroup",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.GroupLayout$Group",
            "type": "Class"
          },
          "name": "group",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addGroup",
      "comment": "Adds a Group to this Group.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/GroupLayout.Group.html#addGroup(javax.swing.GroupLayout.Group)\"\u003eaddGroup\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/GroupLayout.Group.html\" title\u003d\"class in javax.swing\"\u003eGroupLayout.Group\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003egroup\u003c/code\u003e - the \n\u003ccode\u003eGroup\u003c/code\u003e to add"
        ],
        "return": [
          "this \n\u003ccode\u003eGroup\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.GroupLayout$SequentialGroup",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "useAsBaseline",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.GroupLayout$Group",
            "type": "Class"
          },
          "name": "group",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addGroup",
      "comment": "Adds a Group to this Group.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003egroup\u003c/code\u003e - the \n\u003ccode\u003eGroup\u003c/code\u003e to add",
          "\u003ccode\u003euseAsBaseline\u003c/code\u003e - whether the specified \n\u003ccode\u003eGroup\u003c/code\u003e should be used to calculate the baseline for this \n\u003ccode\u003eGroup\u003c/code\u003e"
        ],
        "return": [
          "this \n\u003ccode\u003eGroup\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.GroupLayout$SequentialGroup",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "component",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addComponent",
      "comment": "Adds a Component to this Group.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/GroupLayout.Group.html#addComponent(java.awt.Component)\"\u003eaddComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/GroupLayout.Group.html\" title\u003d\"class in javax.swing\"\u003eGroupLayout.Group\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomponent\u003c/code\u003e - the \n\u003ccode\u003eComponent\u003c/code\u003e to add"
        ],
        "return": [
          "this \n\u003ccode\u003eGroup\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.GroupLayout$SequentialGroup",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "useAsBaseline",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "component",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addComponent",
      "comment": "Adds a Component to this Group.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003euseAsBaseline\u003c/code\u003e - whether the specified \n\u003ccode\u003eComponent\u003c/code\u003e should be used to calculate the baseline for this \n\u003ccode\u003eGroup\u003c/code\u003e",
          "\u003ccode\u003ecomponent\u003c/code\u003e - the \n\u003ccode\u003eComponent\u003c/code\u003e to add"
        ],
        "return": [
          "this \n\u003ccode\u003eGroup\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.GroupLayout$SequentialGroup",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "component",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "min",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "pref",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "max",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addComponent",
      "comment": "Adds a Component to this Group with the specified size.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/GroupLayout.Group.html#addComponent(java.awt.Component,int,int,int)\"\u003eaddComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/GroupLayout.Group.html\" title\u003d\"class in javax.swing\"\u003eGroupLayout.Group\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomponent\u003c/code\u003e - the \n\u003ccode\u003eComponent\u003c/code\u003e to add",
          "\u003ccode\u003emin\u003c/code\u003e - the minimum size or one of \n\u003ccode\u003eDEFAULT_SIZE\u003c/code\u003e or \n\u003ccode\u003ePREFERRED_SIZE\u003c/code\u003e",
          "\u003ccode\u003epref\u003c/code\u003e - the preferred size or one of \n\u003ccode\u003eDEFAULT_SIZE\u003c/code\u003e or \n\u003ccode\u003ePREFERRED_SIZE\u003c/code\u003e",
          "\u003ccode\u003emax\u003c/code\u003e - the maximum size or one of \n\u003ccode\u003eDEFAULT_SIZE\u003c/code\u003e or \n\u003ccode\u003ePREFERRED_SIZE\u003c/code\u003e"
        ],
        "return": [
          "this \n\u003ccode\u003eGroup\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.GroupLayout$SequentialGroup",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "useAsBaseline",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "component",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "min",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "pref",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "max",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addComponent",
      "comment": "Adds a Component to this Group with the specified size.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003euseAsBaseline\u003c/code\u003e - whether the specified \n\u003ccode\u003eComponent\u003c/code\u003e should be used to calculate the baseline for this \n\u003ccode\u003eGroup\u003c/code\u003e",
          "\u003ccode\u003ecomponent\u003c/code\u003e - the \n\u003ccode\u003eComponent\u003c/code\u003e to add",
          "\u003ccode\u003emin\u003c/code\u003e - the minimum size or one of \n\u003ccode\u003eDEFAULT_SIZE\u003c/code\u003e or \n\u003ccode\u003ePREFERRED_SIZE\u003c/code\u003e",
          "\u003ccode\u003epref\u003c/code\u003e - the preferred size or one of \n\u003ccode\u003eDEFAULT_SIZE\u003c/code\u003e or \n\u003ccode\u003ePREFERRED_SIZE\u003c/code\u003e",
          "\u003ccode\u003emax\u003c/code\u003e - the maximum size or one of \n\u003ccode\u003eDEFAULT_SIZE\u003c/code\u003e or \n\u003ccode\u003ePREFERRED_SIZE\u003c/code\u003e"
        ],
        "return": [
          "this \n\u003ccode\u003eGroup\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.GroupLayout$SequentialGroup",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "size",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addGap",
      "comment": "Adds a rigid gap to this Group.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/GroupLayout.Group.html#addGap(int)\"\u003eaddGap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/GroupLayout.Group.html\" title\u003d\"class in javax.swing\"\u003eGroupLayout.Group\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esize\u003c/code\u003e - the size of the gap"
        ],
        "return": [
          "this \n\u003ccode\u003eGroup\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.GroupLayout$SequentialGroup",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "min",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "pref",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "max",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addGap",
      "comment": "Adds a gap to this Group with the specified size.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/GroupLayout.Group.html#addGap(int,int,int)\"\u003eaddGap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/GroupLayout.Group.html\" title\u003d\"class in javax.swing\"\u003eGroupLayout.Group\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003emin\u003c/code\u003e - the minimum size of the gap",
          "\u003ccode\u003epref\u003c/code\u003e - the preferred size of the gap",
          "\u003ccode\u003emax\u003c/code\u003e - the maximum size of the gap"
        ],
        "return": [
          "this \n\u003ccode\u003eGroup\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.GroupLayout$SequentialGroup",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "name": "comp1",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "name": "comp2",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.LayoutStyle$ComponentPlacement",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addPreferredGap",
      "comment": "Adds an element representing the preferred gap between two components. The element created to represent the gap is not resizable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LayoutStyle.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eLayoutStyle\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomp1\u003c/code\u003e - the first component",
          "\u003ccode\u003ecomp2\u003c/code\u003e - the second component",
          "\u003ccode\u003etype\u003c/code\u003e - the type of gap; one of the constants defined by \n\u003ccode\u003eLayoutStyle\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etype\u003c/code\u003e, \n\u003ccode\u003ecomp1\u003c/code\u003e or \n\u003ccode\u003ecomp2\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "this \n\u003ccode\u003eSequentialGroup\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.GroupLayout$SequentialGroup",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "name": "comp1",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.JComponent",
            "type": "Class"
          },
          "name": "comp2",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.LayoutStyle$ComponentPlacement",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "pref",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "max",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addPreferredGap",
      "comment": "Adds an element representing the preferred gap between two components.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LayoutStyle.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eLayoutStyle\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomp1\u003c/code\u003e - the first component",
          "\u003ccode\u003ecomp2\u003c/code\u003e - the second component",
          "\u003ccode\u003etype\u003c/code\u003e - the type of gap",
          "\u003ccode\u003epref\u003c/code\u003e - the preferred size of the grap; one of \n\u003ccode\u003eDEFAULT_SIZE\u003c/code\u003e or a value \u0026gt;\u003d 0",
          "\u003ccode\u003emax\u003c/code\u003e - the maximum size of the gap; one of \n\u003ccode\u003eDEFAULT_SIZE\u003c/code\u003e, \n\u003ccode\u003ePREFERRED_SIZE\u003c/code\u003e or a value \u0026gt;\u003d 0"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etype\u003c/code\u003e, \n\u003ccode\u003ecomp1\u003c/code\u003e or \n\u003ccode\u003ecomp2\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "this \n\u003ccode\u003eSequentialGroup\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.GroupLayout$SequentialGroup",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.LayoutStyle$ComponentPlacement",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addPreferredGap",
      "comment": "Adds an element representing the preferred gap between the nearest components. During layout, neighboring components are found, and the size of the added gap is set based on the preferred gap between the components. If no neighboring components are found the gap has a size of 0. The element created to represent the gap is not resizable.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LayoutStyle.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eLayoutStyle\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the type of gap; one of \n\u003ccode\u003eLayoutStyle.ComponentPlacement.RELATED\u003c/code\u003e or \n\u003ccode\u003eLayoutStyle.ComponentPlacement.UNRELATED\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etype\u003c/code\u003e is not one of \n\u003ccode\u003eLayoutStyle.ComponentPlacement.RELATED\u003c/code\u003e or \n\u003ccode\u003eLayoutStyle.ComponentPlacement.UNRELATED\u003c/code\u003e"
        ],
        "return": [
          "this \n\u003ccode\u003eSequentialGroup\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.GroupLayout$SequentialGroup",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.LayoutStyle$ComponentPlacement",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "pref",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "max",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addPreferredGap",
      "comment": "Adds an element representing the preferred gap between the nearest components. During layout, neighboring components are found, and the minimum of this gap is set based on the size of the preferred gap between the neighboring components. If no neighboring components are found the minimum size is set to 0.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/LayoutStyle.html\" title\u003d\"class in javax.swing\"\u003e\u003ccode\u003eLayoutStyle\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the type of gap; one of \n\u003ccode\u003eLayoutStyle.ComponentPlacement.RELATED\u003c/code\u003e or \n\u003ccode\u003eLayoutStyle.ComponentPlacement.UNRELATED\u003c/code\u003e",
          "\u003ccode\u003epref\u003c/code\u003e - the preferred size of the grap; one of \n\u003ccode\u003eDEFAULT_SIZE\u003c/code\u003e or a value \u0026gt;\u003d 0",
          "\u003ccode\u003emax\u003c/code\u003e - the maximum size of the gap; one of \n\u003ccode\u003eDEFAULT_SIZE\u003c/code\u003e, \n\u003ccode\u003ePREFERRED_SIZE\u003c/code\u003e or a value \u0026gt;\u003d 0"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etype\u003c/code\u003e is not one of \n\u003ccode\u003eLayoutStyle.ComponentPlacement.RELATED\u003c/code\u003e or \n\u003ccode\u003eLayoutStyle.ComponentPlacement.UNRELATED\u003c/code\u003e"
        ],
        "return": [
          "this \n\u003ccode\u003eSequentialGroup\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.GroupLayout$SequentialGroup",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addContainerGap",
      "comment": "Adds an element representing the preferred gap between an edge the container and components that touch the border of the container. This has no effect if the added gap does not touch an edge of the parent container. The element created to represent the gap is not resizable.",
      "annotations": [],
      "tagMap": {
        "return": [
          "this \n\u003ccode\u003eSequentialGroup\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.GroupLayout$SequentialGroup",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "pref",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "max",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addContainerGap",
      "comment": "Adds an element representing the preferred gap between one edge of the container and the next or previous Component with the specified size. This has no effect if the next or previous element is not a Component and does not touch one edge of the parent container.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epref\u003c/code\u003e - the preferred size; one of \n\u003ccode\u003eDEFAULT_SIZE\u003c/code\u003e or a value \u0026gt;\u003d 0",
          "\u003ccode\u003emax\u003c/code\u003e - the maximum size; one of \n\u003ccode\u003eDEFAULT_SIZE\u003c/code\u003e, \n\u003ccode\u003ePREFERRED_SIZE\u003c/code\u003e or a value \u0026gt;\u003d 0"
        ],
        "return": [
          "this \n\u003ccode\u003eSequentialGroup\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.swing.GroupLayout$SequentialGroup",
  "comment": "A \n\u003ccode\u003eGroup\u003c/code\u003e that positions and sizes its elements sequentially, one after another. This class has no public constructor, use the \n\u003ccode\u003ecreateSequentialGroup\u003c/code\u003e method to create one. \n\u003cp\u003e In order to align a \u003ccode\u003eSequentialGroup\u003c/code\u003e along the baseline of a baseline aligned \u003ccode\u003eParallelGroup\u003c/code\u003e you need to specify which of the elements of the \u003ccode\u003eSequentialGroup\u003c/code\u003e is used to determine the baseline. The element used to calculate the baseline is specified using one of the \u003ccode\u003eadd\u003c/code\u003e methods that take a \u003ccode\u003eboolean\u003c/code\u003e. The last element added with a value of \u003ccode\u003etrue\u003c/code\u003e for \u003ccode\u003euseAsBaseline\u003c/code\u003e is used to calculate the baseline.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/GroupLayout.html#createSequentialGroup()\"\u003e\u003ccode\u003eGroupLayout.createSequentialGroup()\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}