{
  "packageName": "javax.swing",
  "simpleName": "ComboBoxModel",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.swing.ListModel",
    "parameters": [
      {
        "name": "E",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "anItem",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setSelectedItem",
      "comment": "Set the selected item. The implementation of this method should notify all registered ListDataListeners that the contents have changed.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eanItem\u003c/code\u003e - the list object to select or \n\u003ccode\u003enull\u003c/code\u003e to clear the selection"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSelectedItem",
      "comment": "Returns the selected item",
      "annotations": [],
      "tagMap": {
        "return": [
          "The selected item or \n\u003ccode\u003enull\u003c/code\u003e if there is no selection"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "E",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.swing.ComboBoxModel",
  "comment": "A data model for a combo box. This interface extends \n\u003ccode\u003eListDataModel\u003c/code\u003e and adds the concept of a \n\u003ci\u003eselected item\u003c/i\u003e. The selected item is generally the item which is visible in the combo box display area. \n\u003cp\u003e The selected item may not necessarily be managed by the underlying \u003ccode\u003eListModel\u003c/code\u003e. This disjoint behavior allows for the temporary storage and retrieval of a selected item in the model.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.2"
    ]
  }
}