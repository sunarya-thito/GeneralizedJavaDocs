{
  "packageName": "javax.accessibility",
  "simpleName": "AccessibleEditableText",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.accessibility.AccessibleText",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "s",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setTextContents",
      "comment": "Sets the text contents to the specified string.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the string to set the text contents"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "index",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "s",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "insertTextAtIndex",
      "comment": "Inserts the specified string at the given index.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index in the text where the string will be inserted",
          "\u003ccode\u003es\u003c/code\u003e - the string to insert in the text"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "startIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "endIndex",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getTextRange",
      "comment": "Returns the text string between two indices.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003estartIndex\u003c/code\u003e - the starting index in the text",
          "\u003ccode\u003eendIndex\u003c/code\u003e - the ending index in the text"
        ],
        "return": [
          "the text string between the indices"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "startIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "endIndex",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "delete",
      "comment": "Deletes the text between two indices.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003estartIndex\u003c/code\u003e - the starting index in the text",
          "\u003ccode\u003eendIndex\u003c/code\u003e - the ending index in the text"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "startIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "endIndex",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "cut",
      "comment": "Cuts the text between two indices into the system clipboard.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003estartIndex\u003c/code\u003e - the starting index in the text",
          "\u003ccode\u003eendIndex\u003c/code\u003e - the ending index in the text"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "startIndex",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "paste",
      "comment": "Pastes the text from the system clipboard into the text starting at the specified index.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003estartIndex\u003c/code\u003e - the starting index in the text"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "startIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "endIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "s",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "replaceText",
      "comment": "Replaces the text between two indices with the specified string.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003estartIndex\u003c/code\u003e - the starting index in the text",
          "\u003ccode\u003eendIndex\u003c/code\u003e - the ending index in the text",
          "\u003ccode\u003es\u003c/code\u003e - the string to replace the text between two indices"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "startIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "endIndex",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "selectText",
      "comment": "Selects the text between two indices.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003estartIndex\u003c/code\u003e - the starting index in the text",
          "\u003ccode\u003eendIndex\u003c/code\u003e - the ending index in the text"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "startIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "endIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.swing.text.AttributeSet",
            "type": "Class"
          },
          "name": "as",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setAttributes",
      "comment": "Sets attributes for the text between two indices.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/swing/text/AttributeSet.html\" title\u003d\"interface in javax.swing.text\"\u003e\u003ccode\u003eAttributeSet\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estartIndex\u003c/code\u003e - the starting index in the text",
          "\u003ccode\u003eendIndex\u003c/code\u003e - the ending index in the text",
          "\u003ccode\u003eas\u003c/code\u003e - the attribute set"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.accessibility.AccessibleEditableText",
  "comment": "The \n\u003ccode\u003eAccessibleEditableText\u003c/code\u003e interface should be implemented by all classes that present editable textual information on the display. Along with the \n\u003ccode\u003eAccessibleText\u003c/code\u003e interface, this interface provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. Applications can determine if an object supports the \n\u003ccode\u003eAccessibleEditableText\u003c/code\u003e interface by first obtaining its \n\u003ccode\u003eAccessibleContext\u003c/code\u003e (see \n\u003ca href\u003d\"Accessible.html\" title\u003d\"interface in javax.accessibility\"\u003e\u003ccode\u003eAccessible\u003c/code\u003e\u003c/a\u003e) and then calling the \n\u003ca href\u003d\"AccessibleContext.html#getAccessibleEditableText()\"\u003e\u003ccode\u003eAccessibleContext.getAccessibleEditableText()\u003c/code\u003e\u003c/a\u003e method of \n\u003ccode\u003eAccessibleContext\u003c/code\u003e. If the return value is not \n\u003ccode\u003enull\u003c/code\u003e, the object supports this interface.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html\" title\u003d\"interface in javax.accessibility\"\u003e\u003ccode\u003eAccessible\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html#getAccessibleContext()\"\u003e\u003ccode\u003eAccessible.getAccessibleContext()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleContext.html\" title\u003d\"class in javax.accessibility\"\u003e\u003ccode\u003eAccessibleContext\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleContext.html#getAccessibleText()\"\u003e\u003ccode\u003eAccessibleContext.getAccessibleText()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleContext.html#getAccessibleEditableText()\"\u003e\u003ccode\u003eAccessibleContext.getAccessibleEditableText()\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}