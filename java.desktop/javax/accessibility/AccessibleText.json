{
  "packageName": "javax.accessibility",
  "simpleName": "AccessibleText",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "CHARACTER",
      "comment": "Constant used to indicate that the part of the text that should be retrieved is a character.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleText.html#getAtIndex(int,int)\"\u003e\u003ccode\u003egetAtIndex(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleText.html#getAfterIndex(int,int)\"\u003e\u003ccode\u003egetAfterIndex(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleText.html#getBeforeIndex(int,int)\"\u003e\u003ccode\u003egetBeforeIndex(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.accessibility.AccessibleText.CHARACTER\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "WORD",
      "comment": "Constant used to indicate that the part of the text that should be retrieved is a word.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleText.html#getAtIndex(int,int)\"\u003e\u003ccode\u003egetAtIndex(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleText.html#getAfterIndex(int,int)\"\u003e\u003ccode\u003egetAfterIndex(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleText.html#getBeforeIndex(int,int)\"\u003e\u003ccode\u003egetBeforeIndex(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.accessibility.AccessibleText.WORD\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SENTENCE",
      "comment": "Constant used to indicate that the part of the text that should be retrieved is a sentence. A sentence is a string of words which expresses an assertion, a question, a command, a wish, an exclamation, or the performance of an action. In English locales, the string usually begins with a capital letter and concludes with appropriate end punctuation; such as a period, question or exclamation mark. Other locales may use different capitalization and/or punctuation.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleText.html#getAtIndex(int,int)\"\u003e\u003ccode\u003egetAtIndex(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleText.html#getAfterIndex(int,int)\"\u003e\u003ccode\u003egetAfterIndex(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleText.html#getBeforeIndex(int,int)\"\u003e\u003ccode\u003egetBeforeIndex(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.accessibility.AccessibleText.SENTENCE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getIndexAtPoint",
      "comment": "Given a point in local coordinates, return the zero-based index of the character under that point. If the point is invalid, this method returns -1.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ep\u003c/code\u003e - the point in local coordinates"
        ],
        "return": [
          "the zero-based index of the character under \n\u003ccode\u003ePoint p\u003c/code\u003e; if point is invalid return -1."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Rectangle",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCharacterBounds",
      "comment": "Determines the bounding box of the character at the given index into the string. The bounds are returned in local coordinates. If the index is invalid an empty rectangle is returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ei\u003c/code\u003e - the index into the string"
        ],
        "return": [
          "the screen coordinates of the character\u0027s bounding box, if index is invalid return an empty rectangle."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCharCount",
      "comment": "Returns the number of characters (valid indicies).",
      "tagMap": {
        "return": [
          "the number of characters"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCaretPosition",
      "comment": "Returns the zero-based offset of the caret. Note: That to the right of the caret will have the same index value as the offset (the caret is between two characters).",
      "tagMap": {
        "return": [
          "the zero-based offset of the caret"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "part"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAtIndex",
      "comment": "Returns the String at a given index.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epart\u003c/code\u003e - the CHARACTER, WORD, or SENTENCE to retrieve",
          "\u003ccode\u003eindex\u003c/code\u003e - an index within the text"
        ],
        "return": [
          "the letter, word, or sentence"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "part"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAfterIndex",
      "comment": "Returns the String after a given index.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epart\u003c/code\u003e - the CHARACTER, WORD, or SENTENCE to retrieve",
          "\u003ccode\u003eindex\u003c/code\u003e - an index within the text"
        ],
        "return": [
          "the letter, word, or sentence"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "part"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBeforeIndex",
      "comment": "Returns the String before a given index.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epart\u003c/code\u003e - the CHARACTER, WORD, or SENTENCE to retrieve",
          "\u003ccode\u003eindex\u003c/code\u003e - an index within the text"
        ],
        "return": [
          "the letter, word, or sentence"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.swing.text.AttributeSet",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCharacterAttribute",
      "comment": "Returns the AttributeSet for a given character at a given index.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ei\u003c/code\u003e - the zero-based index into the text"
        ],
        "return": [
          "the \n\u003ccode\u003eAttributeSet\u003c/code\u003e of the character"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSelectionStart",
      "comment": "Returns the start offset within the selected text. If there is no selection, but there is a caret, the start and end offsets will be the same.",
      "tagMap": {
        "return": [
          "the index into the text of the start of the selection"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSelectionEnd",
      "comment": "Returns the end offset within the selected text. If there is no selection, but there is a caret, the start and end offsets will be the same.",
      "tagMap": {
        "return": [
          "the index into the text of the end of the selection"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSelectedText",
      "comment": "Returns the portion of the text that is selected.",
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eString\u003c/code\u003e portion of the text that is selected"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.accessibility.AccessibleText",
  "comment": "The \n\u003ccode\u003eAccessibleText\u003c/code\u003e interface should be implemented by all classes that present textual information on the display. This interface provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. Applications can determine if an object supports the \n\u003ccode\u003eAccessibleText\u003c/code\u003e interface by first obtaining its \n\u003ccode\u003eAccessibleContext\u003c/code\u003e (see \n\u003ca href\u003d\"Accessible.html\" title\u003d\"interface in javax.accessibility\"\u003e\u003ccode\u003eAccessible\u003c/code\u003e\u003c/a\u003e) and then calling the \n\u003ca href\u003d\"AccessibleContext.html#getAccessibleText()\"\u003e\u003ccode\u003eAccessibleContext.getAccessibleText()\u003c/code\u003e\u003c/a\u003e method of \n\u003ccode\u003eAccessibleContext\u003c/code\u003e. If the return value is not \n\u003ccode\u003enull\u003c/code\u003e, the object supports this interface.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html\" title\u003d\"interface in javax.accessibility\"\u003e\u003ccode\u003eAccessible\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html#getAccessibleContext()\"\u003e\u003ccode\u003eAccessible.getAccessibleContext()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleContext.html\" title\u003d\"class in javax.accessibility\"\u003e\u003ccode\u003eAccessibleContext\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleContext.html#getAccessibleText()\"\u003e\u003ccode\u003eAccessibleContext.getAccessibleText()\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}