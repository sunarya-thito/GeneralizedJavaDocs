{
  "packageName": "javax.accessibility",
  "simpleName": "AccessibleState",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "javax.accessibility.AccessibleBundle",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ACTIVE",
      "comment": "Indicates a window is currently the active window. This includes windows, dialogs, frames, etc. In addition, this state is used to indicate the currently active child of a component such as a list, table, or tree. For example, the active child of a list is the child that is drawn with a rectangle around it.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#WINDOW\"\u003e\u003ccode\u003eAccessibleRole.WINDOW\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#FRAME\"\u003e\u003ccode\u003eAccessibleRole.FRAME\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#DIALOG\"\u003e\u003ccode\u003eAccessibleRole.DIALOG\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PRESSED",
      "comment": "Indicates this object is currently pressed. This is usually associated with buttons and indicates the user has pressed a mouse button while the pointer was over the button and has not yet released the mouse button.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#PUSH_BUTTON\"\u003e\u003ccode\u003eAccessibleRole.PUSH_BUTTON\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ARMED",
      "comment": "Indicates that the object is armed. This is usually used on buttons that have been pressed but not yet released, and the mouse pointer is still over the button.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#PUSH_BUTTON\"\u003e\u003ccode\u003eAccessibleRole.PUSH_BUTTON\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "BUSY",
      "comment": "Indicates the current object is busy. This is usually used on objects such as progress bars, sliders, or scroll bars to indicate they are in a state of transition.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#PROGRESS_BAR\"\u003e\u003ccode\u003eAccessibleRole.PROGRESS_BAR\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#SCROLL_BAR\"\u003e\u003ccode\u003eAccessibleRole.SCROLL_BAR\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#SLIDER\"\u003e\u003ccode\u003eAccessibleRole.SLIDER\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "CHECKED",
      "comment": "Indicates this object is currently checked. This is usually used on objects such as toggle buttons, radio buttons, and check boxes.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#TOGGLE_BUTTON\"\u003e\u003ccode\u003eAccessibleRole.TOGGLE_BUTTON\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#RADIO_BUTTON\"\u003e\u003ccode\u003eAccessibleRole.RADIO_BUTTON\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#CHECK_BOX\"\u003e\u003ccode\u003eAccessibleRole.CHECK_BOX\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "EDITABLE",
      "comment": "Indicates the user can change the contents of this object. This is usually used primarily for objects that allow the user to enter text. Other objects, such as scroll bars and sliders, are automatically editable if they are enabled.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleState.html#ENABLED\"\u003e\u003ccode\u003eENABLED\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "EXPANDABLE",
      "comment": "Indicates this object allows progressive disclosure of its children. This is usually used with hierarchical objects such as trees and is often paired with the EXPANDED or COLLAPSED states.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleState.html#EXPANDED\"\u003e\u003ccode\u003eEXPANDED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleState.html#COLLAPSED\"\u003e\u003ccode\u003eCOLLAPSED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#TREE\"\u003e\u003ccode\u003eAccessibleRole.TREE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "COLLAPSED",
      "comment": "Indicates this object is collapsed. This is usually paired with the EXPANDABLE state and is used on objects that provide progressive disclosure such as trees.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleState.html#EXPANDABLE\"\u003e\u003ccode\u003eEXPANDABLE\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleState.html#EXPANDED\"\u003e\u003ccode\u003eEXPANDED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#TREE\"\u003e\u003ccode\u003eAccessibleRole.TREE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "EXPANDED",
      "comment": "Indicates this object is expanded. This is usually paired with the EXPANDABLE state and is used on objects that provide progressive disclosure such as trees.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleState.html#EXPANDABLE\"\u003e\u003ccode\u003eEXPANDABLE\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleState.html#COLLAPSED\"\u003e\u003ccode\u003eCOLLAPSED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#TREE\"\u003e\u003ccode\u003eAccessibleRole.TREE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ENABLED",
      "comment": "Indicates this object is enabled. The absence of this state from an object\u0027s state set indicates this object is not enabled. An object that is not enabled cannot be manipulated by the user. In a graphical display, it is usually grayed out.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "FOCUSABLE",
      "comment": "Indicates this object can accept keyboard focus, which means all events resulting from typing on the keyboard will normally be passed to it when it has focus.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleState.html#FOCUSED\"\u003e\u003ccode\u003eFOCUSED\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "FOCUSED",
      "comment": "Indicates this object currently has the keyboard focus.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleState.html#FOCUSABLE\"\u003e\u003ccode\u003eFOCUSABLE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ICONIFIED",
      "comment": "Indicates this object is minimized and is represented only by an icon. This is usually only associated with frames and internal frames.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#FRAME\"\u003e\u003ccode\u003eAccessibleRole.FRAME\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#INTERNAL_FRAME\"\u003e\u003ccode\u003eAccessibleRole.INTERNAL_FRAME\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "MODAL",
      "comment": "Indicates something must be done with this object before the user can interact with an object in a different window. This is usually associated only with dialogs.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#DIALOG\"\u003e\u003ccode\u003eAccessibleRole.DIALOG\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "OPAQUE",
      "comment": "Indicates this object paints every pixel within its rectangular region. A non-opaque component paints only some of its pixels, allowing the pixels underneath it to \"show through\". A component that does not fully paint its pixels therefore provides a degree of transparency.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html#getAccessibleContext()\"\u003e\u003ccode\u003eAccessible.getAccessibleContext()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleContext.html#getAccessibleComponent()\"\u003e\u003ccode\u003eAccessibleContext.getAccessibleComponent()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleComponent.html#getBounds()\"\u003e\u003ccode\u003eAccessibleComponent.getBounds()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "RESIZABLE",
      "comment": "Indicates the size of this object is not fixed.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html#getAccessibleContext()\"\u003e\u003ccode\u003eAccessible.getAccessibleContext()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleContext.html#getAccessibleComponent()\"\u003e\u003ccode\u003eAccessibleContext.getAccessibleComponent()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleComponent.html#getSize()\"\u003e\u003ccode\u003eAccessibleComponent.getSize()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleComponent.html#setSize(java.awt.Dimension)\"\u003e\u003ccode\u003eAccessibleComponent.setSize(java.awt.Dimension)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "MULTISELECTABLE",
      "comment": "Indicates this object allows more than one of its children to be selected at the same time.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html#getAccessibleContext()\"\u003e\u003ccode\u003eAccessible.getAccessibleContext()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleContext.html#getAccessibleSelection()\"\u003e\u003ccode\u003eAccessibleContext.getAccessibleSelection()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleSelection.html\" title\u003d\"interface in javax.accessibility\"\u003e\u003ccode\u003eAccessibleSelection\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SELECTABLE",
      "comment": "Indicates this object is the child of an object that allows its children to be selected, and that this child is one of those children that can be selected.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleState.html#SELECTED\"\u003e\u003ccode\u003eSELECTED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html#getAccessibleContext()\"\u003e\u003ccode\u003eAccessible.getAccessibleContext()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleContext.html#getAccessibleSelection()\"\u003e\u003ccode\u003eAccessibleContext.getAccessibleSelection()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleSelection.html\" title\u003d\"interface in javax.accessibility\"\u003e\u003ccode\u003eAccessibleSelection\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SELECTED",
      "comment": "Indicates this object is the child of an object that allows its children to be selected, and that this child is one of those children that has been selected.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleState.html#SELECTABLE\"\u003e\u003ccode\u003eSELECTABLE\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html#getAccessibleContext()\"\u003e\u003ccode\u003eAccessible.getAccessibleContext()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleContext.html#getAccessibleSelection()\"\u003e\u003ccode\u003eAccessibleContext.getAccessibleSelection()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleSelection.html\" title\u003d\"interface in javax.accessibility\"\u003e\u003ccode\u003eAccessibleSelection\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SHOWING",
      "comment": "Indicates this object, the object\u0027s parent, the object\u0027s parent\u0027s parent, and so on, are all visible. Note that this does not necessarily mean the object is painted on the screen. It might be occluded by some other showing object.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleState.html#VISIBLE\"\u003e\u003ccode\u003eVISIBLE\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "VISIBLE",
      "comment": "Indicates this object is visible. Note: this means that the object intends to be visible; however, it may not in fact be showing on the screen because one of the objects that this object is contained by is not visible.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleState.html#SHOWING\"\u003e\u003ccode\u003eSHOWING\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "VERTICAL",
      "comment": "Indicates the orientation of this object is vertical. This is usually associated with objects such as scrollbars, sliders, and progress bars.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleState.html#VERTICAL\"\u003e\u003ccode\u003eVERTICAL\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#SCROLL_BAR\"\u003e\u003ccode\u003eAccessibleRole.SCROLL_BAR\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#SLIDER\"\u003e\u003ccode\u003eAccessibleRole.SLIDER\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#PROGRESS_BAR\"\u003e\u003ccode\u003eAccessibleRole.PROGRESS_BAR\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "HORIZONTAL",
      "comment": "Indicates the orientation of this object is horizontal. This is usually associated with objects such as scrollbars, sliders, and progress bars.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleState.html#HORIZONTAL\"\u003e\u003ccode\u003eHORIZONTAL\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#SCROLL_BAR\"\u003e\u003ccode\u003eAccessibleRole.SCROLL_BAR\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#SLIDER\"\u003e\u003ccode\u003eAccessibleRole.SLIDER\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleRole.html#PROGRESS_BAR\"\u003e\u003ccode\u003eAccessibleRole.PROGRESS_BAR\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SINGLE_LINE",
      "comment": "Indicates this (text) object can contain only a single line of text.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "MULTI_LINE",
      "comment": "Indicates this (text) object can contain multiple lines of text.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TRANSIENT",
      "comment": "Indicates this object is transient. An assistive technology should not add a PropertyChange listener to an object with transient state, as that object will never generate any events. Transient objects are typically created to answer Java Accessibility method queries, but otherwise do not remain linked to the underlying object (for example, those objects underneath lists, tables, and trees in Swing, where only one actual UI Component does shared rendering duty for all of the data objects underneath the actual list/table/tree elements).",
      "annotations": [],
      "tagMap": {
        "since": [
          "1.5"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "MANAGES_DESCENDANTS",
      "comment": "Indicates this object is responsible for managing its subcomponents. This is typically used for trees and tables that have a large number of subcomponents and where the objects are created only when needed and otherwise remain virtual. The application should not manage the subcomponents directly.",
      "annotations": [],
      "tagMap": {
        "since": [
          "1.5"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "INDETERMINATE",
      "comment": "Indicates that the object state is indeterminate. An example is selected text that is partially bold and partially not bold. In this case the attributes associated with the selected text are indeterminate.",
      "annotations": [],
      "tagMap": {
        "since": [
          "1.5"
        ]
      }
    },
    {
      "type": {
        "name": "javax.accessibility.AccessibleState",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TRUNCATED",
      "comment": "A state indicating that text is truncated by a bounding rectangle and that some of the text is not displayed on the screen. An example is text in a spreadsheet cell that is truncated by the bounds of the cell.",
      "annotations": [],
      "tagMap": {
        "since": [
          "1.5"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Creates a new AccessibleState using the given locale independent key. This should not be a public method. Instead, it is used to create the constants in this file to make it a strongly typed enumeration. Subclasses of this class should enforce similar policy. The key String should be a locale independent key for the state. It is not intended to be used as the actual String to display to the user. To get the localized string, use AccessibleBundle.toDisplayString().",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/AccessibleBundle.html#toDisplayString(java.lang.String,java.util.Locale)\"\u003e\u003ccode\u003eAccessibleBundle.toDisplayString(java.lang.String, java.util.Locale)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the locale independent name of the state"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.accessibility.AccessibleState",
  "comment": "Class \n\u003ccode\u003eAccessibleState\u003c/code\u003e describes a component\u0027s particular state. The actual state of the component is defined as an \n\u003ccode\u003eAccessibleStateSet\u003c/code\u003e, which is a composed set of \n\u003ccode\u003eAccessibleStates\u003c/code\u003e. \n\u003cp\u003e The \u003ca href\u003d\"AccessibleBundle.html#toDisplayString()\"\u003e\u003ccode\u003eAccessibleBundle.toDisplayString()\u003c/code\u003e\u003c/a\u003e method allows you to obtain the localized string for a locale independent key from a predefined \u003ccode\u003eResourceBundle\u003c/code\u003e for the keys defined in this class. \u003c/p\u003e\n\u003cp\u003e The constants in this class present a strongly typed enumeration of common object roles. A public constructor for this class has been purposely omitted and applications should use one of the constants from this class. If the constants in this class are not sufficient to describe the role of an object, a subclass should be generated from this class and it should provide constants in a similar manner.\u003c/p\u003e",
  "tagMap": {}
}