{
  "packageName": "java.beans",
  "simpleName": "BeanInfo",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "ICON_COLOR_16x16",
      "comment": "Constant to indicate a 16 x 16 color icon.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.beans.BeanInfo.ICON_COLOR_16x16\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "ICON_COLOR_32x32",
      "comment": "Constant to indicate a 32 x 32 color icon.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.beans.BeanInfo.ICON_COLOR_32x32\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "ICON_MONO_16x16",
      "comment": "Constant to indicate a 16 x 16 monochrome icon.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.beans.BeanInfo.ICON_MONO_16x16\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "ICON_MONO_32x32",
      "comment": "Constant to indicate a 32 x 32 monochrome icon.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.beans.BeanInfo.ICON_MONO_32x32\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.beans.BeanDescriptor",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBeanDescriptor",
      "comment": "Returns the bean descriptor that provides overall information about the bean, such as its display name or its customizer.",
      "annotations": [],
      "tagMap": {
        "return": [
          "a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/BeanDescriptor.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eBeanDescriptor\u003c/code\u003e\u003c/a\u003e object, or \n\u003ccode\u003enull\u003c/code\u003e if the information is to be obtained through the automatic analysis"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.beans.EventSetDescriptor",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEventSetDescriptors",
      "comment": "Returns the event descriptors of the bean that define the types of events fired by this bean.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an array of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/EventSetDescriptor.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eEventSetDescriptor\u003c/code\u003e\u003c/a\u003e objects, or \n\u003ccode\u003enull\u003c/code\u003e if the information is to be obtained through the automatic analysis"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDefaultEventIndex",
      "comment": "A bean may have a default event typically applied when this bean is used.",
      "annotations": [],
      "tagMap": {
        "return": [
          "index of the default event in the \n\u003ccode\u003eEventSetDescriptor\u003c/code\u003e array returned by the \n\u003ccode\u003egetEventSetDescriptors\u003c/code\u003e method, or -1 if there is no default event"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.beans.PropertyDescriptor",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPropertyDescriptors",
      "comment": "Returns descriptors for all properties of the bean. If a property is indexed, then its entry in the result array belongs to the IndexedPropertyDescriptor subclass of the PropertyDescriptor class. A client of the getPropertyDescriptors method can use the instanceof operator to check whether a given PropertyDescriptor is an IndexedPropertyDescriptor.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an array of \n\u003ccode\u003ePropertyDescriptor\u003c/code\u003e objects, or \n\u003ccode\u003enull\u003c/code\u003e if the information is to be obtained through the automatic analysis"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDefaultPropertyIndex",
      "comment": "A bean may have a default property commonly updated when this bean is customized.",
      "annotations": [],
      "tagMap": {
        "return": [
          "index of the default property in the \n\u003ccode\u003ePropertyDescriptor\u003c/code\u003e array returned by the \n\u003ccode\u003egetPropertyDescriptors\u003c/code\u003e method, or -1 if there is no default property"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.beans.MethodDescriptor",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getMethodDescriptors",
      "comment": "Returns the method descriptors of the bean that define the externally visible methods supported by this bean.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an array of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/MethodDescriptor.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eMethodDescriptor\u003c/code\u003e\u003c/a\u003e objects, or \n\u003ccode\u003enull\u003c/code\u003e if the information is to be obtained through the automatic analysis"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.beans.BeanInfo",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAdditionalBeanInfo",
      "comment": "This method enables the current BeanInfo object to return an arbitrary collection of other BeanInfo objects that provide additional information about the current bean. If there are conflicts or overlaps between the information provided by different BeanInfo objects, the current BeanInfo object takes priority over the additional BeanInfo objects. Array elements with higher indices take priority over the elements with lower indices.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an array of \n\u003ccode\u003eBeanInfo\u003c/code\u003e objects, or \n\u003ccode\u003enull\u003c/code\u003e if there are no additional \n\u003ccode\u003eBeanInfo\u003c/code\u003e objects"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Image",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getIcon",
      "comment": "Returns an image that can be used to represent the bean in toolboxes or toolbars. There are four possible types of icons: 16 x 16 color, 32 x 32 color, 16 x 16 mono, and 32 x 32 mono. If you implement a bean so that it supports a single icon, it is recommended to use 16 x 16 color. Another recommendation is to set a transparent background for the icons.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/BeanInfo.html#ICON_COLOR_16x16\"\u003e\u003ccode\u003eICON_COLOR_16x16\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/BeanInfo.html#ICON_COLOR_32x32\"\u003e\u003ccode\u003eICON_COLOR_32x32\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/BeanInfo.html#ICON_MONO_16x16\"\u003e\u003ccode\u003eICON_MONO_16x16\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/BeanInfo.html#ICON_MONO_32x32\"\u003e\u003ccode\u003eICON_MONO_32x32\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eiconKind\u003c/code\u003e - the kind of icon requested"
        ],
        "return": [
          "an image object representing the requested icon, or \n\u003ccode\u003enull\u003c/code\u003e if no suitable icon is available"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.beans.BeanInfo",
  "comment": "Use the \n\u003ccode\u003eBeanInfo\u003c/code\u003e interface to create a \n\u003ccode\u003eBeanInfo\u003c/code\u003e class and provide explicit information about the methods, properties, events, and other features of your beans. \n\u003cp\u003e When developing your bean, you can implement the bean features required for your application task omitting the rest of the \u003ccode\u003eBeanInfo\u003c/code\u003e features. They will be obtained through the automatic analysis by using the low-level reflection of the bean methods and applying standard design patterns. You have an opportunity to provide additional bean information through various descriptor classes. \u003c/p\u003e\n\u003cp\u003e See the \u003ca href\u003d\"SimpleBeanInfo.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eSimpleBeanInfo\u003c/code\u003e\u003c/a\u003e class that is a convenient basic class for \u003ccode\u003eBeanInfo\u003c/code\u003e classes. You can override the methods and properties of the \u003ccode\u003eSimpleBeanInfo\u003c/code\u003e class to define specific information. \u003c/p\u003e\n\u003cp\u003e See also the \u003ca href\u003d\"Introspector.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eIntrospector\u003c/code\u003e\u003c/a\u003e class to learn more about bean behavior.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.1"
    ]
  }
}