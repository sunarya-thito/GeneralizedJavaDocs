{
  "packageName": "java.beans",
  "simpleName": "Expression",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.beans.Statement",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "execute",
      "comment": "The execute method finds a method whose name is the same as the methodName property, and invokes the method on the target. When the target\u0027s class defines many methods with the given name the implementation should choose the most specific method using the algorithm specified in the Java Language Specification (15.11). The dynamic class of the target and arguments are used in place of the compile-time type information and, like the Method class itself, conversion between primitive values and their associated wrapper classes is handled internally. The following method types are handled as special cases: Static methods may be called by using a class object as the target. The reserved method name \"new\" may be used to call a class\u0027s constructor as if all classes defined static \"new\" methods. Constructor invocations are typically considered Expressions rather than Statements as they return a value. The method names \"get\" and \"set\" defined in the List interface may also be applied to array instances, mapping to the static methods of the same name in the Array class. If the invoked method completes normally, the value it returns is copied in the value property. Note that the value property is set to null, if the return type of the underlying method is void.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/reflect/Method.html\" title\u003d\"class in java.lang.reflect\"\u003e\u003ccode\u003eMethod\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Statement.html#execute()\"\u003eexecute\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Statement.html\" title\u003d\"class in java.beans\"\u003eStatement\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the value of the \n\u003ccode\u003etarget\u003c/code\u003e or \n\u003ccode\u003emethodName\u003c/code\u003e property is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NoSuchMethodException.html\" title\u003d\"class in java.lang\"\u003eNoSuchMethodException\u003c/a\u003e\u003c/code\u003e - if a matching method is not found",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and it denies the method invocation",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Exception.html\" title\u003d\"class in java.lang\"\u003eException\u003c/a\u003e\u003c/code\u003e - that is thrown by the invoked method"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getValue",
      "comment": "If the value property of this instance is not already set, this method dynamically finds the method with the specified methodName on this target with these arguments and calls it. The result of the method invocation is first copied into the value property of this expression and then returned as the result of getValue. If the value property was already set, either by a call to setValue or a previous call to getValue then the value property is returned without either looking up or calling the method. The value property of an Expression is set to a unique private (non-null) value by default and this value is used as an internal indication that the method has not yet been called. A return value of null replaces this default value in the same way that any other value would, ensuring that expressions are never evaluated more than once. See the execute method for details on how methods are chosen using the dynamic types of the target and arguments.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Statement.html#execute()\"\u003e\u003ccode\u003eStatement.execute()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Expression.html#setValue(java.lang.Object)\"\u003e\u003ccode\u003esetValue(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Exception.html\" title\u003d\"class in java.lang\"\u003eException\u003c/a\u003e\u003c/code\u003e - if the method with the specified methodName throws an exception"
        ],
        "return": [
          "The result of applying this method to these arguments."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setValue",
      "comment": "Sets the value of this expression to value. This value will be returned by the getValue method without calling the method associated with this expression.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Expression.html#getValue()\"\u003e\u003ccode\u003egetValue()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - The value of this expression."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Prints the value of this expression using a Java-style syntax.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Statement.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Statement.html\" title\u003d\"class in java.beans\"\u003eStatement\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of the object."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "target",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "methodName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "arguments",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new Expression object for the specified target object to invoke the method specified by the name and by the array of arguments. The target and the methodName values should not be null. Otherwise an attempt to execute this Expression will result in a NullPointerException. If the arguments value is null, an empty array is used as the value of the arguments property.",
      "annotations": [
        {
          "type": {
            "name": "ConstructorProperties",
            "type": "Class"
          },
          "values": [
            {
              "name": "value",
              "value": [
                "target",
                "methodName",
                "arguments"
              ]
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Expression.html#getValue()\"\u003e\u003ccode\u003egetValue()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the target object of this expression",
          "\u003ccode\u003emethodName\u003c/code\u003e - the name of the method to invoke on the specified target",
          "\u003ccode\u003earguments\u003c/code\u003e - the array of arguments to invoke the specified method"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "target",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "methodName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "arguments",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new Expression object with the specified value for the specified target object to invoke the method specified by the name and by the array of arguments. The value value is used as the value of the value property, so the getValue() method will return it without executing this Expression. The target and the methodName values should not be null. Otherwise an attempt to execute this Expression will result in a NullPointerException. If the arguments value is null, an empty array is used as the value of the arguments property.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Expression.html#setValue(java.lang.Object)\"\u003e\u003ccode\u003esetValue(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the value of this expression",
          "\u003ccode\u003etarget\u003c/code\u003e - the target object of this expression",
          "\u003ccode\u003emethodName\u003c/code\u003e - the name of the method to invoke on the specified target",
          "\u003ccode\u003earguments\u003c/code\u003e - the array of arguments to invoke the specified method"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.beans.Expression",
  "comment": "An \n\u003ccode\u003eExpression\u003c/code\u003e object represents a primitive expression in which a single method is applied to a target and a set of arguments to return a result - as in \n\u003ccode\u003e\"a.getFoo()\"\u003c/code\u003e. \n\u003cp\u003e In addition to the properties of the super class, the \u003ccode\u003eExpression\u003c/code\u003e object provides a \u003cem\u003evalue\u003c/em\u003e which is the object returned when this expression is evaluated. The return value is typically not provided by the caller and is instead computed by dynamically finding the method and invoking it when the first call to \u003ccode\u003egetValue\u003c/code\u003e is made.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Expression.html#getValue()\"\u003e\u003ccode\u003egetValue()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Expression.html#setValue(java.lang.Object)\"\u003e\u003ccode\u003esetValue(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}