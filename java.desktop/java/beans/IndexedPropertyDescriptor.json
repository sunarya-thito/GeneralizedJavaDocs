{
  "packageName": "java.beans",
  "simpleName": "IndexedPropertyDescriptor",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.beans.PropertyDescriptor",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.reflect.Method",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIndexedReadMethod",
      "comment": "Gets the method that should be used to read an indexed property value.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The method that should be used to read an indexed property value. May return null if the property isn\u0027t indexed or is write-only."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.beans.IntrospectionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.reflect.Method",
            "type": "Class"
          },
          "name": "readMethod",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setIndexedReadMethod",
      "comment": "Sets the method that should be used to read an indexed property value.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ereadMethod\u003c/code\u003e - The new indexed read method."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/IntrospectionException.html\" title\u003d\"class in java.beans\"\u003eIntrospectionException\u003c/a\u003e\u003c/code\u003e - if an exception occurs during introspection."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.reflect.Method",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIndexedWriteMethod",
      "comment": "Gets the method that should be used to write an indexed property value.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The method that should be used to write an indexed property value. May return null if the property isn\u0027t indexed or is read-only."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.beans.IntrospectionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.reflect.Method",
            "type": "Class"
          },
          "name": "writeMethod",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setIndexedWriteMethod",
      "comment": "Sets the method that should be used to write an indexed property value.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ewriteMethod\u003c/code\u003e - The new indexed write method."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/IntrospectionException.html\" title\u003d\"class in java.beans\"\u003eIntrospectionException\u003c/a\u003e\u003c/code\u003e - if an exception occurs during introspection."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIndexedPropertyType",
      "comment": "Returns the Java type info for the indexed property. Note that the Class object may describe primitive Java types such as int. This type is returned by the indexed read method or is used as the parameter type of the indexed write method.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eClass\u003c/code\u003e object that represents the Java type info, or \n\u003ccode\u003enull\u003c/code\u003e if the type cannot be determined"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "obj",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares this PropertyDescriptor against the specified object. Returns true if the objects are the same. Two PropertyDescriptors are the same if the read, write, property types, property editor and flags are equivalent.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/PropertyDescriptor.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/PropertyDescriptor.html\" title\u003d\"class in java.beans\"\u003ePropertyDescriptor\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the reference object with which to compare."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this object is the same as the obj argument; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns a hash code value for the object. See Object.hashCode() for a complete description.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/PropertyDescriptor.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/PropertyDescriptor.html\" title\u003d\"class in java.beans\"\u003ePropertyDescriptor\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code value for this object."
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.beans.IntrospectionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "propertyName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "beanClass",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "This constructor constructs an IndexedPropertyDescriptor for a property that follows the standard Java conventions by having getFoo and setFoo accessor methods, for both indexed access and array access. Thus if the argument name is \"fred\", it will assume that there is an indexed reader method \"getFred\", a non-indexed (array) reader method also called \"getFred\", an indexed writer method \"setFred\", and finally a non-indexed writer method \"setFred\".",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epropertyName\u003c/code\u003e - The programmatic name of the property.",
          "\u003ccode\u003ebeanClass\u003c/code\u003e - The Class object for the target bean."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/IntrospectionException.html\" title\u003d\"class in java.beans\"\u003eIntrospectionException\u003c/a\u003e\u003c/code\u003e - if an exception occurs during introspection."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.beans.IntrospectionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "propertyName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "beanClass",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "readMethodName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "writeMethodName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "indexedReadMethodName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "indexedWriteMethodName",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "This constructor takes the name of a simple property, and method names for reading and writing the property, both indexed and non-indexed.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epropertyName\u003c/code\u003e - The programmatic name of the property.",
          "\u003ccode\u003ebeanClass\u003c/code\u003e - The Class object for the target bean.",
          "\u003ccode\u003ereadMethodName\u003c/code\u003e - The name of the method used for reading the property values as an array. May be null if the property is write-only or must be indexed.",
          "\u003ccode\u003ewriteMethodName\u003c/code\u003e - The name of the method used for writing the property values as an array. May be null if the property is read-only or must be indexed.",
          "\u003ccode\u003eindexedReadMethodName\u003c/code\u003e - The name of the method used for reading an indexed property value. May be null if the property is write-only.",
          "\u003ccode\u003eindexedWriteMethodName\u003c/code\u003e - The name of the method used for writing an indexed property value. May be null if the property is read-only."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/IntrospectionException.html\" title\u003d\"class in java.beans\"\u003eIntrospectionException\u003c/a\u003e\u003c/code\u003e - if an exception occurs during introspection."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.beans.IntrospectionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "propertyName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.reflect.Method",
            "type": "Class"
          },
          "name": "readMethod",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.reflect.Method",
            "type": "Class"
          },
          "name": "writeMethod",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.reflect.Method",
            "type": "Class"
          },
          "name": "indexedReadMethod",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.reflect.Method",
            "type": "Class"
          },
          "name": "indexedWriteMethod",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "This constructor takes the name of a simple property, and Method objects for reading and writing the property.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epropertyName\u003c/code\u003e - The programmatic name of the property.",
          "\u003ccode\u003ereadMethod\u003c/code\u003e - The method used for reading the property values as an array. May be null if the property is write-only or must be indexed.",
          "\u003ccode\u003ewriteMethod\u003c/code\u003e - The method used for writing the property values as an array. May be null if the property is read-only or must be indexed.",
          "\u003ccode\u003eindexedReadMethod\u003c/code\u003e - The method used for reading an indexed property value. May be null if the property is write-only.",
          "\u003ccode\u003eindexedWriteMethod\u003c/code\u003e - The method used for writing an indexed property value. May be null if the property is read-only."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/IntrospectionException.html\" title\u003d\"class in java.beans\"\u003eIntrospectionException\u003c/a\u003e\u003c/code\u003e - if an exception occurs during introspection."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.beans.IndexedPropertyDescriptor",
  "comment": "An IndexedPropertyDescriptor describes a property that acts like an array and has an indexed read and/or indexed write method to access specific elements of the array. \n\u003cp\u003e An indexed property may also provide simple non-indexed read and write methods. If these are present, they read and write arrays of the type returned by the indexed read method.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.1"
    ]
  }
}