{
  "packageName": "java.beans.beancontext",
  "simpleName": "BeanContextProxy",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.beans.beancontext.BeanContextChild",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBeanContextProxy",
      "comment": "Gets the BeanContextChild (or subinterface) associated with this object.",
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eBeanContextChild\u003c/code\u003e (or subinterface) associated with this object"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.beans.beancontext.BeanContextProxy",
  "comment": "\u003cp\u003e This interface is implemented by a JavaBean that does not directly have a BeanContext(Child) associated with it (via implementing that interface or a subinterface thereof), but has a public BeanContext(Child) delegated from it. For example, a subclass of java.awt.Container may have a BeanContext associated with it that all Component children of that Container shall be contained within. \u003c/p\u003e \n\u003cp\u003e An Object may not implement this interface and the BeanContextChild interface (or any subinterfaces thereof) they are mutually exclusive. \u003c/p\u003e \n\u003cp\u003e Callers of this interface shall examine the return type in order to obtain a particular subinterface of BeanContextChild as follows: \u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\n BeanContextChild bcc \u003d o.getBeanContextProxy();\n\n if (bcc instanceof BeanContext) {\n      // ...\n }\n \u003c/code\u003e\u003c/pre\u003e or \n\u003cpre\u003e\u003ccode\u003e\n BeanContextChild bcc \u003d o.getBeanContextProxy();\n BeanContext      bc  \u003d null;\n\n try {\n     bc \u003d (BeanContext)bcc;\n } catch (ClassCastException cce) {\n     // cast failed, bcc is not an instanceof BeanContext\n }\n \u003c/code\u003e\u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The return value is a constant for the lifetime of the implementing instance \u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/beancontext/BeanContextChild.html\" title\u003d\"interface in java.beans.beancontext\"\u003e\u003ccode\u003eBeanContextChild\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/beancontext/BeanContextChildSupport.html\" title\u003d\"class in java.beans.beancontext\"\u003e\u003ccode\u003eBeanContextChildSupport\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}