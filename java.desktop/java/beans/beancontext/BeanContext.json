{
  "packageName": "java.beans.beancontext",
  "simpleName": "BeanContext",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "interfaces": [
    {
      "name": "java.beans.beancontext.BeanContextChild",
      "type": "Class"
    },
    {
      "name": "java.util.Collection",
      "type": "Class"
    },
    {
      "name": "java.beans.DesignMode",
      "type": "Class"
    },
    {
      "name": "java.beans.Visibility",
      "type": "Class"
    }
  ],
  "members": [
    {
      "type": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "globalHierarchyLock",
      "comment": "This global lock is used by both BeanContext and BeanContextServices implementors to serialize changes in a BeanContext hierarchy and any service requests etc.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        },
        {
          "name": "java.lang.ClassNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "beanName",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "instantiateChild",
      "comment": "Instantiate the javaBean named as a child of this BeanContext. The implementation of the JavaBean is derived from the value of the beanName parameter, and is defined by the java.beans.Beans.instantiate() method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ebeanName\u003c/code\u003e - The name of the JavaBean to instantiate as a child of this \n\u003ccode\u003eBeanContext\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an IO problem occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassNotFoundException.html\" title\u003d\"class in java.lang\"\u003eClassNotFoundException\u003c/a\u003e\u003c/code\u003e - if the class identified by the beanName parameter is not found"
        ],
        "return": [
          "a javaBean named as a child of this \n\u003ccode\u003eBeanContext\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.InputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.beans.beancontext.BeanContextChild",
            "type": "Class"
          },
          "name": "bcc",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getResourceAsStream",
      "comment": "Analagous to java.lang.ClassLoader.getResourceAsStream(), this method allows a BeanContext implementation to interpose behavior between the child Component and underlying ClassLoader.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the resource name",
          "\u003ccode\u003ebcc\u003c/code\u003e - the specified child"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the resource is not valid"
        ],
        "return": [
          "an \n\u003ccode\u003eInputStream\u003c/code\u003e for reading the resource, or \n\u003ccode\u003enull\u003c/code\u003e if the resource could not be found."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.URL",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.beans.beancontext.BeanContextChild",
            "type": "Class"
          },
          "name": "bcc",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getResource",
      "comment": "Analagous to java.lang.ClassLoader.getResource(), this method allows a BeanContext implementation to interpose behavior between the child Component and underlying ClassLoader.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the resource name",
          "\u003ccode\u003ebcc\u003c/code\u003e - the specified child"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the resource is not valid"
        ],
        "return": [
          "a \n\u003ccode\u003eURL\u003c/code\u003e for the named resource for the specified child"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.beans.beancontext.BeanContextMembershipListener",
            "type": "Class"
          },
          "name": "bcml",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "addBeanContextMembershipListener",
      "comment": "Adds the specified BeanContextMembershipListener to receive BeanContextMembershipEvents from this BeanContext whenever it adds or removes a child Component(s).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ebcml\u003c/code\u003e - the BeanContextMembershipListener to be added"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.beans.beancontext.BeanContextMembershipListener",
            "type": "Class"
          },
          "name": "bcml",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "removeBeanContextMembershipListener",
      "comment": "Removes the specified BeanContextMembershipListener so that it no longer receives BeanContextMembershipEvents when the child Component(s) are added or removed.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ebcml\u003c/code\u003e - the \n\u003ccode\u003eBeanContextMembershipListener\u003c/code\u003e to be removed"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.beans.beancontext.BeanContext",
  "comment": "\u003cp\u003e The BeanContext acts a logical hierarchical container for JavaBeans. \u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Beans.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003eBeans\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/beancontext/BeanContextChild.html\" title\u003d\"interface in java.beans.beancontext\"\u003e\u003ccode\u003eBeanContextChild\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/beancontext/BeanContextMembershipListener.html\" title\u003d\"interface in java.beans.beancontext\"\u003e\u003ccode\u003eBeanContextMembershipListener\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/PropertyChangeEvent.html\" title\u003d\"class in java.beans\"\u003e\u003ccode\u003ePropertyChangeEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/DesignMode.html\" title\u003d\"interface in java.beans\"\u003e\u003ccode\u003eDesignMode\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Visibility.html\" title\u003d\"interface in java.beans\"\u003e\u003ccode\u003eVisibility\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Collection.html\" title\u003d\"interface in java.util\"\u003e\u003ccode\u003eCollection\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}