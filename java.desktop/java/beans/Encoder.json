{
  "packageName": "java.beans",
  "simpleName": "Encoder",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "writeObject",
      "comment": "Write the specified object to the output stream. The serialized form will denote a series of expressions, the combined effect of which will create an equivalent object when the input stream is read. By default, the object is assumed to be a JavaBean with a nullary constructor, whose state is defined by the matching pairs of \"setter\" and \"getter\" methods returned by the Introspector.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/XMLDecoder.html#readObject()\"\u003e\u003ccode\u003eXMLDecoder.readObject()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eo\u003c/code\u003e - The object to be written to the stream."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setExceptionListener",
      "comment": "Sets the exception handler for this stream to exceptionListener. The exception handler is notified when this stream catches recoverable exceptions.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Encoder.html#getExceptionListener()\"\u003e\u003ccode\u003egetExceptionListener()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eexceptionListener\u003c/code\u003e - The exception handler for this stream; if \n\u003ccode\u003enull\u003c/code\u003e the default exception listener will be used."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.beans.ExceptionListener",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getExceptionListener",
      "comment": "Gets the exception handler for this stream.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Encoder.html#setExceptionListener(java.beans.ExceptionListener)\"\u003e\u003ccode\u003esetExceptionListener(java.beans.ExceptionListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "The exception handler for this stream; Will return the default exception listener if this has not explicitly been set."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.beans.PersistenceDelegate",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPersistenceDelegate",
      "comment": "Returns the persistence delegate for the given type. The persistence delegate is calculated by applying the following rules in order: If a persistence delegate is associated with the given type by using the setPersistenceDelegate(java.lang.Class\u003c?\u003e, java.beans.PersistenceDelegate) method it is returned. A persistence delegate is then looked up by the name composed of the fully qualified name of the given type and the \"PersistenceDelegate\" postfix. For example, a persistence delegate for the Bean class should be named BeanPersistenceDelegate and located in the same package.  public class Bean { ... }\n public class BeanPersistenceDelegate { ... } The instance of the BeanPersistenceDelegate class is returned for the Bean class. If the type is null, a shared internal persistence delegate is returned that encodes null value. If the type is an enum declaration, a shared internal persistence delegate is returned that encodes constants of this enumeration by their names. If the type is a primitive type or the corresponding wrapper, a shared internal persistence delegate is returned that encodes values of the given type. If the type is an array, a shared internal persistence delegate is returned that encodes an array of the appropriate type and length, and each of its elements as if they are properties. If the type is a proxy, a shared internal persistence delegate is returned that encodes a proxy instance by using the Proxy.newProxyInstance(java.lang.ClassLoader, java.lang.Class\u003c?\u003e[], java.lang.reflect.InvocationHandler) method. If the BeanInfo for this type has a BeanDescriptor which defined a \"persistenceDelegate\" attribute, the value of this named attribute is returned. In all other cases the default persistence delegate is returned. The default persistence delegate assumes the type is a JavaBean, implying that it has a default constructor and that its state may be characterized by the matching pairs of \"setter\" and \"getter\" methods returned by the Introspector class. The default constructor is the constructor with the greatest number of parameters that has the ConstructorProperties annotation. If none of the constructors has the ConstructorProperties annotation, then the nullary constructor (constructor with no parameters) will be used. For example, in the following code fragment, the nullary constructor for the Foo class will be used, while the two-parameter constructor for the Bar class will be used.  public class Foo {\n     public Foo() { ... }\n     public Foo(int x) { ... }\n }\n public class Bar {\n     public Bar() { ... }\n     @ConstructorProperties({\"x\"})\n     public Bar(int x) { ... }\n     @ConstructorProperties({\"x\", \"y\"})\n     public Bar(int x, int y) { ... }\n }",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Encoder.html#setPersistenceDelegate(java.lang.Class,java.beans.PersistenceDelegate)\"\u003e\u003ccode\u003esetPersistenceDelegate(java.lang.Class\u0026lt;?\u0026gt;, java.beans.PersistenceDelegate)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Introspector.html#getBeanInfo(java.lang.Class)\"\u003e\u003ccode\u003eIntrospector.getBeanInfo(java.lang.Class\u0026lt;?\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/BeanInfo.html#getBeanDescriptor()\"\u003e\u003ccode\u003eBeanInfo.getBeanDescriptor()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the class of the objects"
        ],
        "return": [
          "the persistence delegate for the given type"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPersistenceDelegate",
      "comment": "Associates the specified persistence delegate with the given type.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Encoder.html#getPersistenceDelegate(java.lang.Class)\"\u003e\u003ccode\u003egetPersistenceDelegate(java.lang.Class\u0026lt;?\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Introspector.html#getBeanInfo(java.lang.Class)\"\u003e\u003ccode\u003eIntrospector.getBeanInfo(java.lang.Class\u0026lt;?\u0026gt;)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/BeanInfo.html#getBeanDescriptor()\"\u003e\u003ccode\u003eBeanInfo.getBeanDescriptor()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the class of objects that the specified persistence delegate applies to",
          "\u003ccode\u003edelegate\u003c/code\u003e - the persistence delegate for instances of the given type"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the entry for this instance, returning the old entry.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/Encoder.html#get(java.lang.Object)\"\u003e\u003ccode\u003eget(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eoldInstance\u003c/code\u003e - The entry that should be removed."
        ],
        "return": [
          "The entry that was removed."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "get",
      "comment": "Returns a tentative value for oldInstance in the environment created by this stream. A persistence delegate can use its mutatesTo method to determine whether this value may be initialized to form the equivalent object at the output or whether a new object must be instantiated afresh. If the stream has not yet seen this value, null is returned.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eoldInstance\u003c/code\u003e - The instance to be looked up."
        ],
        "return": [
          "The object, null if the object has not been seen before."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "writeStatement",
      "comment": "Writes statement oldStm to the stream. The oldStm should be written entirely in terms of the callers environment, i.e. the target and all arguments should be part of the object graph being written. These expressions represent a series of \"what happened\" expressions which tell the output stream how to produce an object graph like the original. The implementation of this method will produce a second expression to represent the same expression in an environment that will exist when the stream is read. This is achieved simply by calling writeObject on the target and all the arguments and building a new expression with the results.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eoldStm\u003c/code\u003e - The expression to be written to the stream."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "writeExpression",
      "comment": "The implementation first checks to see if an expression with this value has already been written. If not, the expression is cloned, using the same procedure as writeStatement, and the value of this expression is reconciled with the value of the cloned expression by calling writeObject.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eoldExp\u003c/code\u003e - The expression to be written to the stream."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an Encoder.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.beans.Encoder",
  "comment": "An \n\u003ccode\u003eEncoder\u003c/code\u003e is a class which can be used to create files or streams that encode the state of a collection of JavaBeans in terms of their public APIs. The \n\u003ccode\u003eEncoder\u003c/code\u003e, in conjunction with its persistence delegates, is responsible for breaking the object graph down into a series of \n\u003ccode\u003eStatement\u003c/code\u003es and \n\u003ccode\u003eExpression\u003c/code\u003es which can be used to create it. A subclass typically provides a syntax for these expressions using some human readable form - like Java source code or XML.",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}