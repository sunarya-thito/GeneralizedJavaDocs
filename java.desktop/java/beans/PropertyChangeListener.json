{
  "packageName": "java.beans",
  "simpleName": "PropertyChangeListener",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.util.EventListener",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.beans.PropertyChangeEvent",
            "type": "Class"
          },
          "field": {
            "name": "evt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "propertyChange",
      "comment": "This method gets called when a bound property is changed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eevt\u003c/code\u003e - A PropertyChangeEvent object describing the event source and the property that has changed."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.beans.PropertyChangeListener",
  "comment": "A \"PropertyChange\" event gets fired whenever a bean changes a \"bound\" property. You can register a PropertyChangeListener with a source bean so as to be notified of any bound property updates.",
  "tagMap": {
    "since": [
      "1.1"
    ]
  }
}