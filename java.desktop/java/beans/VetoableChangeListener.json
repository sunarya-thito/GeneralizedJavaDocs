{
  "packageName": "java.beans",
  "simpleName": "VetoableChangeListener",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.util.EventListener",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.beans.PropertyVetoException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.beans.PropertyChangeEvent",
            "type": "Class"
          },
          "field": {
            "name": "evt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "vetoableChange",
      "comment": "This method gets called when a constrained property is changed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eevt\u003c/code\u003e - a \n\u003ccode\u003ePropertyChangeEvent\u003c/code\u003e object describing the event source and the property that has changed."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/beans/PropertyVetoException.html\" title\u003d\"class in java.beans\"\u003ePropertyVetoException\u003c/a\u003e\u003c/code\u003e - if the recipient wishes the property change to be rolled back."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.beans.VetoableChangeListener",
  "comment": "A VetoableChange event gets fired whenever a bean changes a \"constrained\" property. You can register a VetoableChangeListener with a source bean so as to be notified of any constrained property updates.",
  "tagMap": {
    "since": [
      "1.1"
    ]
  }
}