{
  "packageName": "java.awt",
  "simpleName": "Stroke",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.awt.Shape",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Shape",
            "type": "Class"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "createStrokedShape",
      "comment": "Returns an outline Shape which encloses the area that should be painted when the Shape is stroked according to the rules defined by the object implementing the Stroke interface.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ep\u003c/code\u003e - a \n\u003ccode\u003eShape\u003c/code\u003e to be stroked"
        ],
        "return": [
          "the stroked outline \n\u003ccode\u003eShape\u003c/code\u003e."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.awt.Stroke",
  "comment": "The \n\u003ccode\u003eStroke\u003c/code\u003e interface allows a \n\u003ca href\u003d\"Graphics2D.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eGraphics2D\u003c/code\u003e\u003c/a\u003e object to obtain a \n\u003ca href\u003d\"Shape.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003eShape\u003c/code\u003e\u003c/a\u003e that is the decorated outline, or stylistic representation of the outline, of the specified \n\u003ccode\u003eShape\u003c/code\u003e. Stroking a \n\u003ccode\u003eShape\u003c/code\u003e is like tracing its outline with a marking pen of the appropriate size and shape. The area where the pen would place ink is the area enclosed by the outline \n\u003ccode\u003eShape\u003c/code\u003e. \n\u003cp\u003e The methods of the \u003ccode\u003eGraphics2D\u003c/code\u003e interface that use the outline \u003ccode\u003eShape\u003c/code\u003e returned by a \u003ccode\u003eStroke\u003c/code\u003e object include \u003ccode\u003edraw\u003c/code\u003e and any other methods that are implemented in terms of that method, such as \u003ccode\u003edrawLine\u003c/code\u003e, \u003ccode\u003edrawRect\u003c/code\u003e, \u003ccode\u003edrawRoundRect\u003c/code\u003e, \u003ccode\u003edrawOval\u003c/code\u003e, \u003ccode\u003edrawArc\u003c/code\u003e, \u003ccode\u003edrawPolyline\u003c/code\u003e, and \u003ccode\u003edrawPolygon\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003e The objects of the classes implementing \u003ccode\u003eStroke\u003c/code\u003e must be read-only because \u003ccode\u003eGraphics2D\u003c/code\u003e does not clone these objects either when they are set as an attribute with the \u003ccode\u003esetStroke\u003c/code\u003e method or when the \u003ccode\u003eGraphics2D\u003c/code\u003e object is itself cloned. If a \u003ccode\u003eStroke\u003c/code\u003e object is modified after it is set in the \u003ccode\u003eGraphics2D\u003c/code\u003e context then the behavior of subsequent rendering would be undefined.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/BasicStroke.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eBasicStroke\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Graphics2D.html#setStroke(java.awt.Stroke)\"\u003e\u003ccode\u003eGraphics2D.setStroke(java.awt.Stroke)\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}