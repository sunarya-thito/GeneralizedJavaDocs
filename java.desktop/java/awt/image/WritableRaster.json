{
  "packageName": "java.awt.image",
  "simpleName": "WritableRaster",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.image.Raster",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.awt.image.WritableRaster",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getWritableParent",
      "comment": "Returns the parent WritableRaster (if any) of this WritableRaster, or else null.",
      "tagMap": {
        "return": [
          "the parent of this \n\u003ccode\u003eWritableRaster\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.WritableRaster",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "childMinX"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "childMinY"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createWritableTranslatedChild",
      "comment": "Create a WritableRaster with the same size, SampleModel and DataBuffer as this one, but with a different location. The new WritableRaster will possess a reference to the current WritableRaster, accessible through its getParent() and getWritableParent() methods.",
      "tagMap": {
        "param": [
          "\u003ccode\u003echildMinX\u003c/code\u003e - X coord of the upper left corner of the new Raster.",
          "\u003ccode\u003echildMinY\u003c/code\u003e - Y coord of the upper left corner of the new Raster."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterFormatException.html\" title\u003d\"class in java.awt.image\"\u003eRasterFormatException\u003c/a\u003e\u003c/code\u003e - if computing either \n\u003ccode\u003echildMinX + this.getWidth()\u003c/code\u003e or \n\u003ccode\u003echildMinY + this.getHeight()\u003c/code\u003e results in integer overflow"
        ],
        "return": [
          "a \n\u003ccode\u003eWritableRaster\u003c/code\u003e the same as this one except for the specified location."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.WritableRaster",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "parentX"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "parentY"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "childMinX"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "childMinY"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "bandList"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createWritableChild",
      "comment": "Returns a new WritableRaster which shares all or part of this WritableRaster\u0027s DataBuffer. The new WritableRaster will possess a reference to the current WritableRaster, accessible through its getParent() and getWritableParent() methods. The parentX, parentY, width and height parameters form a Rectangle in this WritableRaster\u0027s coordinate space, indicating the area of pixels to be shared. An error will be thrown if this Rectangle is not contained with the bounds of the current WritableRaster. The new WritableRaster may additionally be translated to a different coordinate system for the plane than that used by the current WritableRaster. The childMinX and childMinY parameters give the new (x, y) coordinate of the upper-left pixel of the returned WritableRaster; the coordinate (childMinX, childMinY) in the new WritableRaster will map to the same pixel as the coordinate (parentX, parentY) in the current WritableRaster. The new WritableRaster may be defined to contain only a subset of the bands of the current WritableRaster, possibly reordered, by means of the bandList parameter. If bandList is null, it is taken to include all of the bands of the current WritableRaster in their current order. To create a new WritableRaster that contains a subregion of the current WritableRaster, but shares its coordinate system and bands, this method should be called with childMinX equal to parentX, childMinY equal to parentY, and bandList equal to null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentX\u003c/code\u003e - X coordinate of the upper left corner in this WritableRaster\u0027s coordinates.",
          "\u003ccode\u003eparentY\u003c/code\u003e - Y coordinate of the upper left corner in this WritableRaster\u0027s coordinates.",
          "\u003ccode\u003ew\u003c/code\u003e - Width of the region starting at (parentX, parentY).",
          "\u003ccode\u003eh\u003c/code\u003e - Height of the region starting at (parentX, parentY).",
          "\u003ccode\u003echildMinX\u003c/code\u003e - X coordinate of the upper left corner of the returned WritableRaster.",
          "\u003ccode\u003echildMinY\u003c/code\u003e - Y coordinate of the upper left corner of the returned WritableRaster.",
          "\u003ccode\u003ebandList\u003c/code\u003e - Array of band indices, or null to use all bands."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterFormatException.html\" title\u003d\"class in java.awt.image\"\u003eRasterFormatException\u003c/a\u003e\u003c/code\u003e - if the subregion is outside of the raster bounds.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterFormatException.html\" title\u003d\"class in java.awt.image\"\u003eRasterFormatException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ew\u003c/code\u003e or \n\u003ccode\u003eh\u003c/code\u003e is less than or equal to zero, or computing any of \n\u003ccode\u003eparentX + w\u003c/code\u003e, \n\u003ccode\u003eparentY + h\u003c/code\u003e, \n\u003ccode\u003echildMinX + w\u003c/code\u003e, or \n\u003ccode\u003echildMinY + h\u003c/code\u003e results in integer overflow"
        ],
        "return": [
          "a \n\u003ccode\u003eWritableRaster\u003c/code\u003e sharing all or part of the \n\u003ccode\u003eDataBuffer\u003c/code\u003e of this \n\u003ccode\u003eWritableRaster\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "inData"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDataElements",
      "comment": "Sets the data for a single pixel from a primitive array of type TransferType. For image data supported by the Java 2D(tm) API, this will be one of DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, DataBuffer.TYPE_INT, DataBuffer.TYPE_SHORT, DataBuffer.TYPE_FLOAT, or DataBuffer.TYPE_DOUBLE. Data in the array may be in a packed format, thus increasing efficiency for data transfers. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds, or if inData is not large enough to hold the pixel data. However, explicit bounds checking is not guaranteed. A ClassCastException will be thrown if the input object is not null and references anything other than an array of TransferType.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#setDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003eSampleModel.setDataElements(int, int, Object, DataBuffer)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The X coordinate of the pixel location.",
          "\u003ccode\u003ey\u003c/code\u003e - The Y coordinate of the pixel location.",
          "\u003ccode\u003einData\u003c/code\u003e - An object reference to an array of type defined by getTransferType() and length getNumDataElements() containing the pixel data to place at x,y."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates are not in bounds, or if inData is too small to hold the input."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "java.awt.image.Raster",
            "type": "Class"
          },
          "field": {
            "name": "inRaster"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDataElements",
      "comment": "Sets the data for a rectangle of pixels from an input Raster. The input Raster must be compatible with this WritableRaster in that they must have the same number of bands, corresponding bands must have the same number of bits per sample, the TransferTypes and NumDataElements must be the same, and the packing used by the getDataElements/setDataElements must be identical. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The X coordinate of the pixel location.",
          "\u003ccode\u003ey\u003c/code\u003e - The Y coordinate of the pixel location.",
          "\u003ccode\u003einRaster\u003c/code\u003e - Raster containing data to place at x,y."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if inRaster is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates are not in bounds."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "inData"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDataElements",
      "comment": "Sets the data for a rectangle of pixels from a primitive array of type TransferType. For image data supported by the Java 2D API, this will be one of DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, DataBuffer.TYPE_INT, DataBuffer.TYPE_SHORT, DataBuffer.TYPE_FLOAT, or DataBuffer.TYPE_DOUBLE. Data in the array may be in a packed format, thus increasing efficiency for data transfers. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds, or if inData is not large enough to hold the pixel data. However, explicit bounds checking is not guaranteed. A ClassCastException will be thrown if the input object is not null and references anything other than an array of TransferType.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#setDataElements(int,int,int,int,java.lang.Object,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003eSampleModel.setDataElements(int, int, int, int, Object, DataBuffer)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The X coordinate of the upper left pixel location.",
          "\u003ccode\u003ey\u003c/code\u003e - The Y coordinate of the upper left pixel location.",
          "\u003ccode\u003ew\u003c/code\u003e - Width of the pixel rectangle.",
          "\u003ccode\u003eh\u003c/code\u003e - Height of the pixel rectangle.",
          "\u003ccode\u003einData\u003c/code\u003e - An object reference to an array of type defined by getTransferType() and length w*h*getNumDataElements() containing the pixel data to place between x,y and x+w-1, y+h-1."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if inData is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates are not in bounds, or if inData is too small to hold the input."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.Raster",
            "type": "Class"
          },
          "field": {
            "name": "srcRaster"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setRect",
      "comment": "Copies pixels from Raster srcRaster to this WritableRaster. Each pixel in srcRaster is copied to the same x,y address in this raster, unless the address falls outside the bounds of this raster. srcRaster must have the same number of bands as this WritableRaster. The copy is a simple copy of source samples to the corresponding destination samples. If all samples of both source and destination Rasters are of integral type and less than or equal to 32 bits in size, then calling this method is equivalent to executing the following code for all x,y addresses valid in both Rasters. \n       Raster srcRaster;\n       WritableRaster dstRaster;\n       for (int b \u003d 0; b \u003c srcRaster.getNumBands(); b++) {\n           dstRaster.setSample(x, y, b, srcRaster.getSample(x, y, b));\n       }\n Thus, when copying an integral type source to an integral type destination, if the source sample size is greater than the destination sample size for a particular band, the high order bits of the source sample are truncated. If the source sample size is less than the destination size for a particular band, the high order bits of the destination are zero-extended or sign-extended depending on whether srcRaster\u0027s SampleModel treats the sample as a signed or unsigned quantity. When copying a float or double source to an integral type destination, each source sample is cast to the destination type. When copying an integral type source to a float or double destination, the source is first converted to a 32-bit int (if necessary), using the above rules for integral types, and then the int is cast to float or double.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esrcRaster\u003c/code\u003e - The Raster from which to copy pixels."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if srcRaster is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dx"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dy"
          }
        },
        {
          "type": {
            "name": "java.awt.image.Raster",
            "type": "Class"
          },
          "field": {
            "name": "srcRaster"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setRect",
      "comment": "Copies pixels from Raster srcRaster to this WritableRaster. For each (x, y) address in srcRaster, the corresponding pixel is copied to address (x+dx, y+dy) in this WritableRaster, unless (x+dx, y+dy) falls outside the bounds of this raster. srcRaster must have the same number of bands as this WritableRaster. The copy is a simple copy of source samples to the corresponding destination samples. For details, see setRect(Raster).",
      "tagMap": {
        "param": [
          "\u003ccode\u003edx\u003c/code\u003e - The X translation factor from src space to dst space of the copy.",
          "\u003ccode\u003edy\u003c/code\u003e - The Y translation factor from src space to dst space of the copy.",
          "\u003ccode\u003esrcRaster\u003c/code\u003e - The Raster from which to copy pixels."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if srcRaster is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "iArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPixel",
      "comment": "Sets a pixel in the DataBuffer using an int array of samples for input. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The X coordinate of the pixel location.",
          "\u003ccode\u003ey\u003c/code\u003e - The Y coordinate of the pixel location.",
          "\u003ccode\u003eiArray\u003c/code\u003e - The input samples in a int array."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if iArray is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates are not in bounds, or if iArray is too small to hold the input."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "fArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPixel",
      "comment": "Sets a pixel in the DataBuffer using a float array of samples for input. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The X coordinate of the pixel location.",
          "\u003ccode\u003ey\u003c/code\u003e - The Y coordinate of the pixel location.",
          "\u003ccode\u003efArray\u003c/code\u003e - The input samples in a float array."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if fArray is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates are not in bounds, or if fArray is too small to hold the input."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "dArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPixel",
      "comment": "Sets a pixel in the DataBuffer using a double array of samples for input. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The X coordinate of the pixel location.",
          "\u003ccode\u003ey\u003c/code\u003e - The Y coordinate of the pixel location.",
          "\u003ccode\u003edArray\u003c/code\u003e - The input samples in a double array."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if dArray is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates are not in bounds, or if dArray is too small to hold the input."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "iArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPixels",
      "comment": "Sets all samples for a rectangle of pixels from an int array containing one sample per array element. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The X coordinate of the upper left pixel location.",
          "\u003ccode\u003ey\u003c/code\u003e - The Y coordinate of the upper left pixel location.",
          "\u003ccode\u003ew\u003c/code\u003e - Width of the pixel rectangle.",
          "\u003ccode\u003eh\u003c/code\u003e - Height of the pixel rectangle.",
          "\u003ccode\u003eiArray\u003c/code\u003e - The input int pixel array."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if iArray is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates are not in bounds, or if iArray is too small to hold the input."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "fArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPixels",
      "comment": "Sets all samples for a rectangle of pixels from a float array containing one sample per array element. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The X coordinate of the upper left pixel location.",
          "\u003ccode\u003ey\u003c/code\u003e - The Y coordinate of the upper left pixel location.",
          "\u003ccode\u003ew\u003c/code\u003e - Width of the pixel rectangle.",
          "\u003ccode\u003eh\u003c/code\u003e - Height of the pixel rectangle.",
          "\u003ccode\u003efArray\u003c/code\u003e - The input float pixel array."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if fArray is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates are not in bounds, or if fArray is too small to hold the input."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "dArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPixels",
      "comment": "Sets all samples for a rectangle of pixels from a double array containing one sample per array element. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The X coordinate of the upper left pixel location.",
          "\u003ccode\u003ey\u003c/code\u003e - The Y coordinate of the upper left pixel location.",
          "\u003ccode\u003ew\u003c/code\u003e - Width of the pixel rectangle.",
          "\u003ccode\u003eh\u003c/code\u003e - Height of the pixel rectangle.",
          "\u003ccode\u003edArray\u003c/code\u003e - The input double pixel array."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if dArray is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates are not in bounds, or if dArray is too small to hold the input."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSample",
      "comment": "Sets a sample in the specified band for the pixel located at (x,y) in the DataBuffer using an int for input. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The X coordinate of the pixel location.",
          "\u003ccode\u003ey\u003c/code\u003e - The Y coordinate of the pixel location.",
          "\u003ccode\u003eb\u003c/code\u003e - The band to set.",
          "\u003ccode\u003es\u003c/code\u003e - The input sample."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates or the band index are not in bounds."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSample",
      "comment": "Sets a sample in the specified band for the pixel located at (x,y) in the DataBuffer using a float for input. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The X coordinate of the pixel location.",
          "\u003ccode\u003ey\u003c/code\u003e - The Y coordinate of the pixel location.",
          "\u003ccode\u003eb\u003c/code\u003e - The band to set.",
          "\u003ccode\u003es\u003c/code\u003e - The input sample as a float."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates or the band index are not in bounds."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSample",
      "comment": "Sets a sample in the specified band for the pixel located at (x,y) in the DataBuffer using a double for input. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The X coordinate of the pixel location.",
          "\u003ccode\u003ey\u003c/code\u003e - The Y coordinate of the pixel location.",
          "\u003ccode\u003eb\u003c/code\u003e - The band to set.",
          "\u003ccode\u003es\u003c/code\u003e - The input sample as a double."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates or the band index are not in bounds."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "iArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSamples",
      "comment": "Sets the samples in the specified band for the specified rectangle of pixels from an int array containing one sample per array element. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The X coordinate of the upper left pixel location.",
          "\u003ccode\u003ey\u003c/code\u003e - The Y coordinate of the upper left pixel location.",
          "\u003ccode\u003ew\u003c/code\u003e - Width of the pixel rectangle.",
          "\u003ccode\u003eh\u003c/code\u003e - Height of the pixel rectangle.",
          "\u003ccode\u003eb\u003c/code\u003e - The band to set.",
          "\u003ccode\u003eiArray\u003c/code\u003e - The input int sample array."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if iArray is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates or the band index are not in bounds, or if iArray is too small to hold the input."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "fArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSamples",
      "comment": "Sets the samples in the specified band for the specified rectangle of pixels from a float array containing one sample per array element. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The X coordinate of the upper left pixel location.",
          "\u003ccode\u003ey\u003c/code\u003e - The Y coordinate of the upper left pixel location.",
          "\u003ccode\u003ew\u003c/code\u003e - Width of the pixel rectangle.",
          "\u003ccode\u003eh\u003c/code\u003e - Height of the pixel rectangle.",
          "\u003ccode\u003eb\u003c/code\u003e - The band to set.",
          "\u003ccode\u003efArray\u003c/code\u003e - The input float sample array."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if fArray is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates or the band index are not in bounds, or if fArray is too small to hold the input."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "dArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSamples",
      "comment": "Sets the samples in the specified band for the specified rectangle of pixels from a double array containing one sample per array element. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - The X coordinate of the upper left pixel location.",
          "\u003ccode\u003ey\u003c/code\u003e - The Y coordinate of the upper left pixel location.",
          "\u003ccode\u003ew\u003c/code\u003e - Width of the pixel rectangle.",
          "\u003ccode\u003eh\u003c/code\u003e - Height of the pixel rectangle.",
          "\u003ccode\u003eb\u003c/code\u003e - The band to set.",
          "\u003ccode\u003edArray\u003c/code\u003e - The input double sample array."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if dArray is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates or the band index are not in bounds, or if dArray is too small to hold the input."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.SampleModel",
            "type": "Class"
          },
          "field": {
            "name": "sampleModel"
          }
        },
        {
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "field": {
            "name": "origin"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a WritableRaster with the given SampleModel. The WritableRaster\u0027s upper left corner is origin and it is the same size as the SampleModel. A DataBuffer large enough to describe the WritableRaster is automatically created.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esampleModel\u003c/code\u003e - The SampleModel that specifies the layout.",
          "\u003ccode\u003eorigin\u003c/code\u003e - The Point that specifies the origin."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterFormatException.html\" title\u003d\"class in java.awt.image\"\u003eRasterFormatException\u003c/a\u003e\u003c/code\u003e - if computing either \n\u003ccode\u003eorigin.x + sampleModel.getWidth()\u003c/code\u003e or \n\u003ccode\u003eorigin.y + sampleModel.getHeight()\u003c/code\u003e results in integer overflow"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.SampleModel",
            "type": "Class"
          },
          "field": {
            "name": "sampleModel"
          }
        },
        {
          "type": {
            "name": "java.awt.image.DataBuffer",
            "type": "Class"
          },
          "field": {
            "name": "dataBuffer"
          }
        },
        {
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "field": {
            "name": "origin"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a WritableRaster with the given SampleModel and DataBuffer. The WritableRaster\u0027s upper left corner is origin and it is the same size as the SampleModel. The DataBuffer is not initialized and must be compatible with SampleModel.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esampleModel\u003c/code\u003e - The SampleModel that specifies the layout.",
          "\u003ccode\u003edataBuffer\u003c/code\u003e - The DataBuffer that contains the image data.",
          "\u003ccode\u003eorigin\u003c/code\u003e - The Point that specifies the origin."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterFormatException.html\" title\u003d\"class in java.awt.image\"\u003eRasterFormatException\u003c/a\u003e\u003c/code\u003e - if computing either \n\u003ccode\u003eorigin.x + sampleModel.getWidth()\u003c/code\u003e or \n\u003ccode\u003eorigin.y + sampleModel.getHeight()\u003c/code\u003e results in integer overflow"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.SampleModel",
            "type": "Class"
          },
          "field": {
            "name": "sampleModel"
          }
        },
        {
          "type": {
            "name": "java.awt.image.DataBuffer",
            "type": "Class"
          },
          "field": {
            "name": "dataBuffer"
          }
        },
        {
          "type": {
            "name": "java.awt.Rectangle",
            "type": "Class"
          },
          "field": {
            "name": "aRegion"
          }
        },
        {
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "field": {
            "name": "sampleModelTranslate"
          }
        },
        {
          "type": {
            "name": "java.awt.image.WritableRaster",
            "type": "Class"
          },
          "field": {
            "name": "parent"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a WritableRaster with the given SampleModel, DataBuffer, and parent. aRegion specifies the bounding rectangle of the new Raster. When translated into the base Raster\u0027s coordinate system, aRegion must be contained by the base Raster. (The base Raster is the Raster\u0027s ancestor which has no parent.) sampleModelTranslate specifies the sampleModelTranslateX and sampleModelTranslateY values of the new Raster. Note that this constructor should generally be called by other constructors or create methods, it should not be used directly.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esampleModel\u003c/code\u003e - The SampleModel that specifies the layout.",
          "\u003ccode\u003edataBuffer\u003c/code\u003e - The DataBuffer that contains the image data.",
          "\u003ccode\u003eaRegion\u003c/code\u003e - The Rectangle that specifies the image area.",
          "\u003ccode\u003esampleModelTranslate\u003c/code\u003e - The Point that specifies the translation from SampleModel to Raster coordinates.",
          "\u003ccode\u003eparent\u003c/code\u003e - The parent (if any) of this raster."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterFormatException.html\" title\u003d\"class in java.awt.image\"\u003eRasterFormatException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eaRegion\u003c/code\u003e has width or height less than or equal to zero, or computing either \n\u003ccode\u003eaRegion.x + aRegion.width\u003c/code\u003e or \n\u003ccode\u003eaRegion.y + aRegion.height\u003c/code\u003e results in integer overflow"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.image.WritableRaster",
  "comment": "This class extends Raster to provide pixel writing capabilities. Refer to the class comment for Raster for descriptions of how a Raster stores pixels. \n\u003cp\u003e The constructors of this class are protected. To instantiate a WritableRaster, use one of the createWritableRaster factory methods in the Raster class.\u003c/p\u003e",
  "tagMap": {}
}