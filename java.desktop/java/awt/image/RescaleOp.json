{
  "packageName": "java.awt.image",
  "simpleName": "RescaleOp",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "float",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "scaleFactors"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getScaleFactors",
      "comment": "Returns the scale factors in the given array. The array is also returned for convenience. If scaleFactors is null, a new array will be allocated.",
      "tagMap": {
        "param": [
          "\u003ccode\u003escaleFactors\u003c/code\u003e - the array to contain the scale factors of this \n\u003ccode\u003eRescaleOp\u003c/code\u003e"
        ],
        "return": [
          "the scale factors of this \n\u003ccode\u003eRescaleOp\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "offsets"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getOffsets",
      "comment": "Returns the offsets in the given array. The array is also returned for convenience. If offsets is null, a new array will be allocated.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eoffsets\u003c/code\u003e - the array to contain the offsets of this \n\u003ccode\u003eRescaleOp\u003c/code\u003e"
        ],
        "return": [
          "the offsets of this \n\u003ccode\u003eRescaleOp\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getNumFactors",
      "comment": "Returns the number of scaling factors and offsets used in this RescaleOp.",
      "tagMap": {
        "return": [
          "the number of scaling factors and offsets of this \n\u003ccode\u003eRescaleOp\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.BufferedImage",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.BufferedImage",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        },
        {
          "type": {
            "name": "java.awt.image.BufferedImage",
            "type": "Class"
          },
          "field": {
            "name": "dst"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "filter",
      "comment": "Rescales the source BufferedImage. If the color model in the source image is not the same as that in the destination image, the pixels will be converted in the destination. If the destination image is null, a BufferedImage will be created with the source ColorModel. An IllegalArgumentException may be thrown if the number of scaling factors/offsets in this object does not meet the restrictions stated in the class comments above, or if the source image has an IndexColorModel.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html#filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)\"\u003efilter\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html\" title\u003d\"interface in java.awt.image\"\u003eBufferedImageOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - the \n\u003ccode\u003eBufferedImage\u003c/code\u003e to be filtered",
          "\u003ccode\u003edst\u003c/code\u003e - the destination for the filtering operation or \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eColorModel\u003c/code\u003e of \n\u003ccode\u003esrc\u003c/code\u003e is an \n\u003ccode\u003eIndexColorModel\u003c/code\u003e, or if the number of scaling factors and offsets in this \n\u003ccode\u003eRescaleOp\u003c/code\u003e do not meet the requirements stated in the class comments, or if the source and destination images differ in size."
        ],
        "return": [
          "the filtered \n\u003ccode\u003eBufferedImage\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.WritableRaster",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.Raster",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        },
        {
          "type": {
            "name": "java.awt.image.WritableRaster",
            "type": "Class"
          },
          "field": {
            "name": "dst"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "filter",
      "comment": "Rescales the pixel data in the source Raster. If the destination Raster is null, a new Raster will be created. The source and destination must have the same number of bands. Otherwise, an IllegalArgumentException is thrown. Note that the number of scaling factors/offsets in this object must meet the restrictions stated in the class comments above. Otherwise, an IllegalArgumentException is thrown.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html#filter(java.awt.image.Raster,java.awt.image.WritableRaster)\"\u003efilter\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html\" title\u003d\"interface in java.awt.image\"\u003eRasterOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - the \n\u003ccode\u003eRaster\u003c/code\u003e to be filtered",
          "\u003ccode\u003edst\u003c/code\u003e - the destination for the filtering operation or \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esrc\u003c/code\u003e and \n\u003ccode\u003edst\u003c/code\u003e do not have the same number of bands, or if the number of scaling factors and offsets in this \n\u003ccode\u003eRescaleOp\u003c/code\u003e do not meet the requirements stated in the class comments, or if the source and destination rasters differ in size."
        ],
        "return": [
          "the filtered \n\u003ccode\u003eWritableRaster\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.Rectangle2D",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.BufferedImage",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getBounds2D",
      "comment": "Returns the bounding box of the rescaled destination image. Since this is not a geometric operation, the bounding box does not change.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html#getBounds2D(java.awt.image.BufferedImage)\"\u003egetBounds2D\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html\" title\u003d\"interface in java.awt.image\"\u003eBufferedImageOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - The \n\u003ccode\u003eBufferedImage\u003c/code\u003e to be filtered"
        ],
        "return": [
          "The \n\u003ccode\u003eRectangle2D\u003c/code\u003e representing the destination image\u0027s bounding box."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.Rectangle2D",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.Raster",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getBounds2D",
      "comment": "Returns the bounding box of the rescaled destination Raster. Since this is not a geometric operation, the bounding box does not change.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html#getBounds2D(java.awt.image.Raster)\"\u003egetBounds2D\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html\" title\u003d\"interface in java.awt.image\"\u003eRasterOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - the rescaled destination \n\u003ccode\u003eRaster\u003c/code\u003e"
        ],
        "return": [
          "the bounds of the specified \n\u003ccode\u003eRaster\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.BufferedImage",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.BufferedImage",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        },
        {
          "type": {
            "name": "java.awt.image.ColorModel",
            "type": "Class"
          },
          "field": {
            "name": "destCM"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createCompatibleDestImage",
      "comment": "Creates a zeroed destination image with the correct size and number of bands.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html#createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)\"\u003ecreateCompatibleDestImage\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html\" title\u003d\"interface in java.awt.image\"\u003eBufferedImageOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - Source image for the filter operation.",
          "\u003ccode\u003edestCM\u003c/code\u003e - ColorModel of the destination. If null, the ColorModel of the source will be used."
        ],
        "return": [
          "the zeroed-destination image."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.WritableRaster",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.Raster",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createCompatibleDestRaster",
      "comment": "Creates a zeroed-destination Raster with the correct size and number of bands, given this source.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html#createCompatibleDestRaster(java.awt.image.Raster)\"\u003ecreateCompatibleDestRaster\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html\" title\u003d\"interface in java.awt.image\"\u003eRasterOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - the source \n\u003ccode\u003eRaster\u003c/code\u003e"
        ],
        "return": [
          "the zeroed-destination \n\u003ccode\u003eRaster\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.Point2D",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.Point2D",
            "type": "Class"
          },
          "field": {
            "name": "srcPt"
          }
        },
        {
          "type": {
            "name": "java.awt.geom.Point2D",
            "type": "Class"
          },
          "field": {
            "name": "dstPt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getPoint2D",
      "comment": "Returns the location of the destination point given a point in the source. If dstPt is non-null, it will be used to hold the return value. Since this is not a geometric operation, the srcPt will equal the dstPt.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html#getPoint2D(java.awt.geom.Point2D,java.awt.geom.Point2D)\"\u003egetPoint2D\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html\" title\u003d\"interface in java.awt.image\"\u003eBufferedImageOp\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html#getPoint2D(java.awt.geom.Point2D,java.awt.geom.Point2D)\"\u003egetPoint2D\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html\" title\u003d\"interface in java.awt.image\"\u003eRasterOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrcPt\u003c/code\u003e - a point in the source image",
          "\u003ccode\u003edstPt\u003c/code\u003e - the destination point or \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the location of the destination point."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.RenderingHints",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getRenderingHints",
      "comment": "Returns the rendering hints for this op.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html#getRenderingHints()\"\u003egetRenderingHints\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html\" title\u003d\"interface in java.awt.image\"\u003eBufferedImageOp\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html#getRenderingHints()\"\u003egetRenderingHints\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html\" title\u003d\"interface in java.awt.image\"\u003eRasterOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the rendering hints of this \n\u003ccode\u003eRescaleOp\u003c/code\u003e."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "scaleFactors"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "offsets"
          }
        },
        {
          "type": {
            "name": "java.awt.RenderingHints",
            "type": "Class"
          },
          "field": {
            "name": "hints"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new RescaleOp with the desired scale factors and offsets. The length of the scaleFactor and offset arrays must meet the restrictions stated in the class comments above. The RenderingHints argument may be null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003escaleFactors\u003c/code\u003e - the specified scale factors",
          "\u003ccode\u003eoffsets\u003c/code\u003e - the specified offsets",
          "\u003ccode\u003ehints\u003c/code\u003e - the specified \n\u003ccode\u003eRenderingHints\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "scaleFactor"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "offset"
          }
        },
        {
          "type": {
            "name": "java.awt.RenderingHints",
            "type": "Class"
          },
          "field": {
            "name": "hints"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new RescaleOp with the desired scale factor and offset. The scaleFactor and offset will be applied to all bands in a source Raster and to all color (but not alpha) components in a BufferedImage. The RenderingHints argument may be null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003escaleFactor\u003c/code\u003e - the specified scale factor",
          "\u003ccode\u003eoffset\u003c/code\u003e - the specified offset",
          "\u003ccode\u003ehints\u003c/code\u003e - the specified \n\u003ccode\u003eRenderingHints\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.image.RescaleOp",
  "comment": "This class performs a pixel-by-pixel rescaling of the data in the source image by multiplying the sample values for each pixel by a scale factor and then adding an offset. The scaled sample values are clipped to the minimum/maximum representable in the destination image. \n\u003cp\u003e The pseudo code for the rescaling operation is as follows: \u003c/p\u003e\n\u003cpre\u003efor each pixel from Source object {\n    for each band/component of the pixel {\n        dstElement \u003d (srcElement*scaleFactor) + offset\n    }\n}\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e For Rasters, rescaling operates on bands. The number of sets of scaling constants may be one, in which case the same constants are applied to all bands, or it must equal the number of Source Raster bands. \u003c/p\u003e\n\u003cp\u003e For BufferedImages, rescaling operates on color and alpha components. The number of sets of scaling constants may be one, in which case the same constants are applied to all color (but not alpha) components. Otherwise, the number of sets of scaling constants may equal the number of Source color components, in which case no rescaling of the alpha component (if present) is performed. If neither of these cases apply, the number of sets of scaling constants must equal the number of Source color components plus alpha components, in which case all color and alpha components are rescaled. \u003c/p\u003e\n\u003cp\u003e BufferedImage sources with premultiplied alpha data are treated in the same manner as non-premultiplied images for purposes of rescaling. That is, the rescaling is done per band on the raw data of the BufferedImage source without regard to whether the data is premultiplied. If a color conversion is required to the destination ColorModel, the premultiplied state of both source and destination will be taken into account for this step. \u003c/p\u003e\n\u003cp\u003e Images with an IndexColorModel cannot be rescaled. \u003c/p\u003e\n\u003cp\u003e If a RenderingHints object is specified in the constructor, the color rendering hint and the dithering hint may be used when color conversion is required. \u003c/p\u003e\n\u003cp\u003e Note that in-place operation is allowed (i.e. the source and destination can be the same object).\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html#KEY_COLOR_RENDERING\"\u003e\u003ccode\u003eRenderingHints.KEY_COLOR_RENDERING\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html#KEY_DITHERING\"\u003e\u003ccode\u003eRenderingHints.KEY_DITHERING\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}