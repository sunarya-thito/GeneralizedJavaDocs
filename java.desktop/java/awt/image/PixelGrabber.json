{
  "packageName": "java.awt.image",
  "simpleName": "PixelGrabber",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "startGrabbing",
      "comment": "Request the PixelGrabber to start fetching the pixels.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "abortGrabbing",
      "comment": "Request the PixelGrabber to abort the image fetch.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "grabPixels",
      "comment": "Request the Image or ImageProducer to start delivering pixels and wait for all of the pixels in the rectangle of interest to be delivered.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - Another thread has interrupted this thread."
        ],
        "return": [
          "true if the pixels were successfully grabbed, false on abort, error or timeout"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "ms"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "grabPixels",
      "comment": "Request the Image or ImageProducer to start delivering pixels and wait for all of the pixels in the rectangle of interest to be delivered or until the specified timeout has elapsed. This method behaves in the following ways, depending on the value of ms: If ms \u003d\u003d 0, waits until all pixels are delivered If ms \u003e 0, waits until all pixels are delivered as timeout expires. If ms \u003c 0, returns true if all pixels are grabbed, false otherwise and does not wait.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ems\u003c/code\u003e - the number of milliseconds to wait for the image pixels to arrive before timing out"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - Another thread has interrupted this thread."
        ],
        "return": [
          "true if the pixels were successfully grabbed, false on abort, error or timeout"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getStatus",
      "comment": "Return the status of the pixels. The ImageObserver flags representing the available pixel information are returned.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageObserver.html\" title\u003d\"interface in java.awt.image\"\u003e\u003ccode\u003eImageObserver\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the bitwise OR of all relevant ImageObserver flags"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getWidth",
      "comment": "Get the width of the pixel buffer (after adjusting for image width). If no width was specified for the rectangle of pixels to grab then then this information will only be available after the image has delivered the dimensions.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/PixelGrabber.html#getStatus()\"\u003e\u003ccode\u003egetStatus()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the final width used for the pixel buffer or -1 if the width is not yet known"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHeight",
      "comment": "Get the height of the pixel buffer (after adjusting for image height). If no width was specified for the rectangle of pixels to grab then then this information will only be available after the image has delivered the dimensions.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/PixelGrabber.html#getStatus()\"\u003e\u003ccode\u003egetStatus()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the final height used for the pixel buffer or -1 if the height is not yet known"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPixels",
      "comment": "Get the pixel buffer. If the PixelGrabber was not constructed with an explicit pixel buffer to hold the pixels then this method will return null until the size and format of the image data is known. Since the PixelGrabber may fall back on accumulating the data in the default RGB ColorModel at any time if the source image uses more than one ColorModel to deliver the data, the array object returned by this method may change over time until the image grab is complete.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/PixelGrabber.html#getStatus()\"\u003e\u003ccode\u003egetStatus()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/PixelGrabber.html#setPixels(int,int,int,int,java.awt.image.ColorModel,byte%5B%5D,int,int)\"\u003e\u003ccode\u003esetPixels(int, int, int, int, ColorModel, byte[], int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/PixelGrabber.html#setPixels(int,int,int,int,java.awt.image.ColorModel,int%5B%5D,int,int)\"\u003e\u003ccode\u003esetPixels(int, int, int, int, ColorModel, int[], int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "either a byte array or an int array"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.ColorModel",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColorModel",
      "comment": "Get the ColorModel for the pixels stored in the array. If the PixelGrabber was constructed with an explicit pixel buffer then this method will always return the default RGB ColorModel, otherwise it may return null until the ColorModel used by the ImageProducer is known. Since the PixelGrabber may fall back on accumulating the data in the default RGB ColorModel at any time if the source image uses more than one ColorModel to deliver the data, the ColorModel object returned by this method may change over time until the image grab is complete and may not reflect any of the ColorModel objects that was used by the ImageProducer to deliver the pixels.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/PixelGrabber.html#getStatus()\"\u003e\u003ccode\u003egetStatus()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ColorModel.html#getRGBdefault()\"\u003e\u003ccode\u003eColorModel.getRGBdefault()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/PixelGrabber.html#setColorModel(java.awt.image.ColorModel)\"\u003e\u003ccode\u003esetColorModel(ColorModel)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the ColorModel object used for storing the pixels"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "width"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "height"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDimensions",
      "comment": "The setDimensions method is part of the ImageConsumer API which this class must implement to retrieve the pixels. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being grabbed. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html#setDimensions(int,int)\"\u003esetDimensions\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003eImageConsumer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of the dimension",
          "\u003ccode\u003eheight\u003c/code\u003e - the height of the dimension"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "hints"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setHints",
      "comment": "The setHints method is part of the ImageConsumer API which this class must implement to retrieve the pixels. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being grabbed. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html#setHints(int)\"\u003esetHints\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003eImageConsumer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ehints\u003c/code\u003e - a set of hints used to process the pixels"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Hashtable",
            "parameters": [
              {
                "type": "Wildcard"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "props"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setProperties",
      "comment": "The setProperties method is part of the ImageConsumer API which this class must implement to retrieve the pixels. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being grabbed. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html#setProperties(java.util.Hashtable)\"\u003esetProperties\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003eImageConsumer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eprops\u003c/code\u003e - the list of properties"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.ColorModel",
            "type": "Class"
          },
          "field": {
            "name": "model"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setColorModel",
      "comment": "The setColorModel method is part of the ImageConsumer API which this class must implement to retrieve the pixels. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being grabbed. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/PixelGrabber.html#getColorModel()\"\u003e\u003ccode\u003egetColorModel()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html#setColorModel(java.awt.image.ColorModel)\"\u003esetColorModel\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003eImageConsumer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003emodel\u003c/code\u003e - the specified \n\u003ccode\u003eColorModel\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "srcX"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "srcY"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "srcW"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "srcH"
          }
        },
        {
          "type": {
            "name": "java.awt.image.ColorModel",
            "type": "Class"
          },
          "field": {
            "name": "model"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "pixels"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "srcOff"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "srcScan"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPixels",
      "comment": "The setPixels method is part of the ImageConsumer API which this class must implement to retrieve the pixels. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being grabbed. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/PixelGrabber.html#getPixels()\"\u003e\u003ccode\u003egetPixels()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html#setPixels(int,int,int,int,java.awt.image.ColorModel,byte%5B%5D,int,int)\"\u003esetPixels\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003eImageConsumer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrcX\u003c/code\u003e - the X coordinate of the upper-left corner of the area of pixels to be set",
          "\u003ccode\u003esrcY\u003c/code\u003e - the Y coordinate of the upper-left corner of the area of pixels to be set",
          "\u003ccode\u003esrcW\u003c/code\u003e - the width of the area of pixels",
          "\u003ccode\u003esrcH\u003c/code\u003e - the height of the area of pixels",
          "\u003ccode\u003emodel\u003c/code\u003e - the specified \n\u003ccode\u003eColorModel\u003c/code\u003e",
          "\u003ccode\u003epixels\u003c/code\u003e - the array of pixels",
          "\u003ccode\u003esrcOff\u003c/code\u003e - the offset into the pixels array",
          "\u003ccode\u003esrcScan\u003c/code\u003e - the distance from one row of pixels to the next in the pixels array"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "srcX"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "srcY"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "srcW"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "srcH"
          }
        },
        {
          "type": {
            "name": "java.awt.image.ColorModel",
            "type": "Class"
          },
          "field": {
            "name": "model"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "pixels"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "srcOff"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "srcScan"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPixels",
      "comment": "The setPixels method is part of the ImageConsumer API which this class must implement to retrieve the pixels. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being grabbed. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/PixelGrabber.html#getPixels()\"\u003e\u003ccode\u003egetPixels()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html#setPixels(int,int,int,int,java.awt.image.ColorModel,int%5B%5D,int,int)\"\u003esetPixels\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003eImageConsumer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrcX\u003c/code\u003e - the X coordinate of the upper-left corner of the area of pixels to be set",
          "\u003ccode\u003esrcY\u003c/code\u003e - the Y coordinate of the upper-left corner of the area of pixels to be set",
          "\u003ccode\u003esrcW\u003c/code\u003e - the width of the area of pixels",
          "\u003ccode\u003esrcH\u003c/code\u003e - the height of the area of pixels",
          "\u003ccode\u003emodel\u003c/code\u003e - the specified \n\u003ccode\u003eColorModel\u003c/code\u003e",
          "\u003ccode\u003epixels\u003c/code\u003e - the array of pixels",
          "\u003ccode\u003esrcOff\u003c/code\u003e - the offset into the pixels array",
          "\u003ccode\u003esrcScan\u003c/code\u003e - the distance from one row of pixels to the next in the pixels array"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "status"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "imageComplete",
      "comment": "The imageComplete method is part of the ImageConsumer API which this class must implement to retrieve the pixels. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being grabbed. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageProducer.html#removeConsumer(java.awt.image.ImageConsumer)\"\u003e\u003ccode\u003eImageProducer.removeConsumer(java.awt.image.ImageConsumer)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html#imageComplete(int)\"\u003eimageComplete\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003eImageConsumer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003estatus\u003c/code\u003e - the status of image loading"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "status",
      "comment": "Returns the status of the pixels. The ImageObserver flags representing the available pixel information are returned. This method and getStatus have the same implementation, but getStatus is the preferred method because it conforms to the convention of naming information-retrieval methods with the form \"getXXX\".",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageObserver.html\" title\u003d\"interface in java.awt.image\"\u003e\u003ccode\u003eImageObserver\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/PixelGrabber.html#getStatus()\"\u003e\u003ccode\u003egetStatus()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the bitwise OR of all relevant ImageObserver flags"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.Image",
            "type": "Class"
          },
          "field": {
            "name": "img"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "pix"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "off"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "scansize"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create a PixelGrabber object to grab the (x, y, w, h) rectangular section of pixels from the specified image into the given array. The pixels are stored into the array in the default RGB ColorModel. The RGB data for pixel (i, j) where (i, j) is inside the rectangle (x, y, w, h) is stored in the array at pix[(j - y) * scansize + (i - x) + off].",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ColorModel.html#getRGBdefault()\"\u003e\u003ccode\u003eColorModel.getRGBdefault()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eimg\u003c/code\u003e - the image to retrieve pixels from",
          "\u003ccode\u003ex\u003c/code\u003e - the x coordinate of the upper left corner of the rectangle of pixels to retrieve from the image, relative to the default (unscaled) size of the image",
          "\u003ccode\u003ey\u003c/code\u003e - the y coordinate of the upper left corner of the rectangle of pixels to retrieve from the image",
          "\u003ccode\u003ew\u003c/code\u003e - the width of the rectangle of pixels to retrieve",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the rectangle of pixels to retrieve",
          "\u003ccode\u003epix\u003c/code\u003e - the array of integers which are to be used to hold the RGB pixels retrieved from the image",
          "\u003ccode\u003eoff\u003c/code\u003e - the offset into the array of where to store the first pixel",
          "\u003ccode\u003escansize\u003c/code\u003e - the distance from one row of pixels to the next in the array"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.ImageProducer",
            "type": "Class"
          },
          "field": {
            "name": "ip"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "pix"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "off"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "scansize"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create a PixelGrabber object to grab the (x, y, w, h) rectangular section of pixels from the image produced by the specified ImageProducer into the given array. The pixels are stored into the array in the default RGB ColorModel. The RGB data for pixel (i, j) where (i, j) is inside the rectangle (x, y, w, h) is stored in the array at pix[(j - y) * scansize + (i - x) + off].",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ColorModel.html#getRGBdefault()\"\u003e\u003ccode\u003eColorModel.getRGBdefault()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eip\u003c/code\u003e - the \n\u003ccode\u003eImageProducer\u003c/code\u003e that produces the image from which to retrieve pixels",
          "\u003ccode\u003ex\u003c/code\u003e - the x coordinate of the upper left corner of the rectangle of pixels to retrieve from the image, relative to the default (unscaled) size of the image",
          "\u003ccode\u003ey\u003c/code\u003e - the y coordinate of the upper left corner of the rectangle of pixels to retrieve from the image",
          "\u003ccode\u003ew\u003c/code\u003e - the width of the rectangle of pixels to retrieve",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the rectangle of pixels to retrieve",
          "\u003ccode\u003epix\u003c/code\u003e - the array of integers which are to be used to hold the RGB pixels retrieved from the image",
          "\u003ccode\u003eoff\u003c/code\u003e - the offset into the array of where to store the first pixel",
          "\u003ccode\u003escansize\u003c/code\u003e - the distance from one row of pixels to the next in the array"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.Image",
            "type": "Class"
          },
          "field": {
            "name": "img"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "forceRGB"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create a PixelGrabber object to grab the (x, y, w, h) rectangular section of pixels from the specified image. The pixels are accumulated in the original ColorModel if the same ColorModel is used for every call to setPixels, otherwise the pixels are accumulated in the default RGB ColorModel. If the forceRGB parameter is true, then the pixels will be accumulated in the default RGB ColorModel anyway. A buffer is allocated by the PixelGrabber to hold the pixels in either case. If (w \u003c 0) or (h \u003c 0), then they will default to the remaining width and height of the source data when that information is delivered.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eimg\u003c/code\u003e - the image to retrieve the image data from",
          "\u003ccode\u003ex\u003c/code\u003e - the x coordinate of the upper left corner of the rectangle of pixels to retrieve from the image, relative to the default (unscaled) size of the image",
          "\u003ccode\u003ey\u003c/code\u003e - the y coordinate of the upper left corner of the rectangle of pixels to retrieve from the image",
          "\u003ccode\u003ew\u003c/code\u003e - the width of the rectangle of pixels to retrieve",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the rectangle of pixels to retrieve",
          "\u003ccode\u003eforceRGB\u003c/code\u003e - true if the pixels should always be converted to the default RGB ColorModel"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.image.PixelGrabber",
  "comment": "The PixelGrabber class implements an ImageConsumer which can be attached to an Image or ImageProducer object to retrieve a subset of the pixels in that image. Here is an example: \n\u003cpre\u003e\u003ccode\u003e\n\n public void handlesinglepixel(int x, int y, int pixel) {\n      int alpha \u003d (pixel \u0026gt;\u0026gt; 24) \u0026amp; 0xff;\n      int red   \u003d (pixel \u0026gt;\u0026gt; 16) \u0026amp; 0xff;\n      int green \u003d (pixel \u0026gt;\u0026gt;  8) \u0026amp; 0xff;\n      int blue  \u003d (pixel      ) \u0026amp; 0xff;\n      // Deal with the pixel as necessary...\n }\n\n public void handlepixels(Image img, int x, int y, int w, int h) {\n      int[] pixels \u003d new int[w * h];\n      PixelGrabber pg \u003d new PixelGrabber(img, x, y, w, h, pixels, 0, w);\n      try {\n          pg.grabPixels();\n      } catch (InterruptedException e) {\n          System.err.println(\"interrupted waiting for pixels!\");\n          return;\n      }\n      if ((pg.getStatus() \u0026amp; ImageObserver.ABORT) !\u003d 0) {\n          System.err.println(\"image fetch aborted or errored\");\n          return;\n      }\n      for (int j \u003d 0; j \u0026lt; h; j++) {\n          for (int i \u003d 0; i \u0026lt; w; i++) {\n              handlesinglepixel(x+i, y+j, pixels[j * w + i]);\n          }\n      }\n }\n\n \u003c/code\u003e\u003c/pre\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ColorModel.html#getRGBdefault()\"\u003e\u003ccode\u003eColorModel.getRGBdefault()\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}