{
  "packageName": "java.awt.image.renderable",
  "simpleName": "ParameterBlock",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.util.Vector",
        "parameters": [
          {
            "name": "java.lang.Object",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "sources",
      "comment": "A Vector of sources, stored as arbitrary Objects.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.util.Vector",
        "parameters": [
          {
            "name": "java.lang.Object",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "parameters",
      "comment": "A Vector of non-source parameters, stored as arbitrary Objects.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "shallowClone",
      "comment": "Creates a shallow copy of a ParameterBlock. The source and parameter Vectors are copied by reference -- additions or changes will be visible to both versions.",
      "tagMap": {
        "return": [
          "an Object clone of the \n\u003ccode\u003eParameterBlock\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Creates a copy of a ParameterBlock. The source and parameter Vectors are cloned, but the actual sources and parameters are copied by reference. This allows modifications to the order and number of sources and parameters in the clone to be invisible to the original ParameterBlock. Changes to the shared sources or parameters themselves will still be visible.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an Object clone of the \n\u003ccode\u003eParameterBlock\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addSource",
      "comment": "Adds an image to end of the list of sources. The image is stored as an object in order to allow new node types in the future.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - an image object to be stored in the source list."
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified \n\u003ccode\u003esource\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSource",
      "comment": "Returns a source as a general Object. The caller must cast it into an appropriate type.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/renderable/ParameterBlock.html#setSource(java.lang.Object,int)\"\u003e\u003ccode\u003esetSource(Object, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the source to be returned."
        ],
        "return": [
          "an \n\u003ccode\u003eObject\u003c/code\u003e that represents the source located at the specified index in the \n\u003ccode\u003esources\u003c/code\u003e \n\u003ccode\u003eVector\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSource",
      "comment": "Replaces an entry in the list of source with a new source. If the index lies beyond the current source list, the list is extended with nulls as needed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/renderable/ParameterBlock.html#getSource(int)\"\u003e\u003ccode\u003egetSource(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - the specified source image",
          "\u003ccode\u003eindex\u003c/code\u003e - the index into the \n\u003ccode\u003esources\u003c/code\u003e \n\u003ccode\u003eVector\u003c/code\u003e at which to insert the specified \n\u003ccode\u003esource\u003c/code\u003e"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e that contains the specified \n\u003ccode\u003esource\u003c/code\u003e at the specified \n\u003ccode\u003eindex\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.RenderedImage",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRenderedSource",
      "comment": "Returns a source as a RenderedImage. This method is a convenience method. An exception will be thrown if the source is not a RenderedImage.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the source to be returned"
        ],
        "return": [
          "a \n\u003ccode\u003eRenderedImage\u003c/code\u003e that represents the source image that is at the specified index in the \n\u003ccode\u003esources Vector\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.RenderableImage",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRenderableSource",
      "comment": "Returns a source as a RenderableImage. This method is a convenience method. An exception will be thrown if the sources is not a RenderableImage.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the source to be returned"
        ],
        "return": [
          "a \n\u003ccode\u003eRenderableImage\u003c/code\u003e that represents the source image that is at the specified index in the \n\u003ccode\u003esources Vector\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNumSources",
      "comment": "Returns the number of source images.",
      "tagMap": {
        "return": [
          "the number of source images in the \n\u003ccode\u003esources\u003c/code\u003e \n\u003ccode\u003eVector\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Vector",
        "parameters": [
          {
            "name": "java.lang.Object",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSources",
      "comment": "Returns the entire Vector of sources.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/renderable/ParameterBlock.html#setSources(java.util.Vector)\"\u003e\u003ccode\u003esetSources(Vector)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003esources Vector\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "name": "java.lang.Object",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "sources"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSources",
      "comment": "Sets the entire Vector of sources to a given Vector.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/renderable/ParameterBlock.html#getSources()\"\u003e\u003ccode\u003egetSources()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esources\u003c/code\u003e - the \n\u003ccode\u003eVector\u003c/code\u003e of source images"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeSources",
      "comment": "Clears the list of source images.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNumParameters",
      "comment": "Returns the number of parameters (not including source images).",
      "tagMap": {
        "return": [
          "the number of parameters in the \n\u003ccode\u003eparameters\u003c/code\u003e \n\u003ccode\u003eVector\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Vector",
        "parameters": [
          {
            "name": "java.lang.Object",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getParameters",
      "comment": "Returns the entire Vector of parameters.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/renderable/ParameterBlock.html#setParameters(java.util.Vector)\"\u003e\u003ccode\u003esetParameters(Vector)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eparameters Vector\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "name": "java.lang.Object",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "parameters"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setParameters",
      "comment": "Sets the entire Vector of parameters to a given Vector.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/renderable/ParameterBlock.html#getParameters()\"\u003e\u003ccode\u003egetParameters()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eparameters\u003c/code\u003e - the specified \n\u003ccode\u003eVector\u003c/code\u003e of parameters"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeParameters",
      "comment": "Clears the list of parameters.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds an object to the list of parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to add to the \n\u003ccode\u003eparameters Vector\u003c/code\u003e"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a Byte to the list of parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - the byte to add to the \n\u003ccode\u003eparameters Vector\u003c/code\u003e"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a Character to the list of parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the char to add to the \n\u003ccode\u003eparameters Vector\u003c/code\u003e"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "short",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a Short to the list of parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the short to add to the \n\u003ccode\u003eparameters Vector\u003c/code\u003e"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a Integer to the list of parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ei\u003c/code\u003e - the int to add to the \n\u003ccode\u003eparameters Vector\u003c/code\u003e"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a Long to the list of parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the long to add to the \n\u003ccode\u003eparameters Vector\u003c/code\u003e"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "f"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a Float to the list of parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the float to add to the \n\u003ccode\u003eparameters Vector\u003c/code\u003e"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "d"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a Double to the list of parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ed\u003c/code\u003e - the double to add to the \n\u003ccode\u003eparameters Vector\u003c/code\u003e"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "set",
      "comment": "Replaces an Object in the list of parameters. If the index lies beyond the current source list, the list is extended with nulls as needed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the parameter that replaces the parameter at the specified index in the \n\u003ccode\u003eparameters Vector\u003c/code\u003e",
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to be replaced with the specified parameter"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "set",
      "comment": "Replaces an Object in the list of parameters with a Byte. If the index lies beyond the current source list, the list is extended with nulls as needed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - the parameter that replaces the parameter at the specified index in the \n\u003ccode\u003eparameters Vector\u003c/code\u003e",
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to be replaced with the specified parameter"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "set",
      "comment": "Replaces an Object in the list of parameters with a Character. If the index lies beyond the current source list, the list is extended with nulls as needed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the parameter that replaces the parameter at the specified index in the \n\u003ccode\u003eparameters Vector\u003c/code\u003e",
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to be replaced with the specified parameter"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "short",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "set",
      "comment": "Replaces an Object in the list of parameters with a Short. If the index lies beyond the current source list, the list is extended with nulls as needed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the parameter that replaces the parameter at the specified index in the \n\u003ccode\u003eparameters Vector\u003c/code\u003e",
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to be replaced with the specified parameter"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "set",
      "comment": "Replaces an Object in the list of parameters with an Integer. If the index lies beyond the current source list, the list is extended with nulls as needed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ei\u003c/code\u003e - the parameter that replaces the parameter at the specified index in the \n\u003ccode\u003eparameters Vector\u003c/code\u003e",
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to be replaced with the specified parameter"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "set",
      "comment": "Replaces an Object in the list of parameters with a Long. If the index lies beyond the current source list, the list is extended with nulls as needed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the parameter that replaces the parameter at the specified index in the \n\u003ccode\u003eparameters Vector\u003c/code\u003e",
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to be replaced with the specified parameter"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "f"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "set",
      "comment": "Replaces an Object in the list of parameters with a Float. If the index lies beyond the current source list, the list is extended with nulls as needed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ef\u003c/code\u003e - the parameter that replaces the parameter at the specified index in the \n\u003ccode\u003eparameters Vector\u003c/code\u003e",
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to be replaced with the specified parameter"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.renderable.ParameterBlock",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "d"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "set",
      "comment": "Replaces an Object in the list of parameters with a Double. If the index lies beyond the current source list, the list is extended with nulls as needed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ed\u003c/code\u003e - the parameter that replaces the parameter at the specified index in the \n\u003ccode\u003eparameters Vector\u003c/code\u003e",
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to be replaced with the specified parameter"
        ],
        "return": [
          "a new \n\u003ccode\u003eParameterBlock\u003c/code\u003e containing the specified parameter."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getObjectParameter",
      "comment": "Gets a parameter as an object.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to get"
        ],
        "return": [
          "an \n\u003ccode\u003eObject\u003c/code\u003e representing the the parameter at the specified index into the \n\u003ccode\u003eparameters\u003c/code\u003e \n\u003ccode\u003eVector\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getByteParameter",
      "comment": "A convenience method to return a parameter as a byte. An exception is thrown if the parameter is null or not a Byte.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the parameter at the specified index is not a \n\u003ccode\u003eByte\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the parameter at the specified index is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eindex\u003c/code\u003e is negative or not less than the current size of this \n\u003ccode\u003eParameterBlock\u003c/code\u003e object"
        ],
        "return": [
          "the parameter at the specified index as a \n\u003ccode\u003ebyte\u003c/code\u003e value."
        ]
      }
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCharParameter",
      "comment": "A convenience method to return a parameter as a char. An exception is thrown if the parameter is null or not a Character.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the parameter at the specified index is not a \n\u003ccode\u003eCharacter\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the parameter at the specified index is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eindex\u003c/code\u003e is negative or not less than the current size of this \n\u003ccode\u003eParameterBlock\u003c/code\u003e object"
        ],
        "return": [
          "the parameter at the specified index as a \n\u003ccode\u003echar\u003c/code\u003e value."
        ]
      }
    },
    {
      "returnType": {
        "name": "short",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getShortParameter",
      "comment": "A convenience method to return a parameter as a short. An exception is thrown if the parameter is null or not a Short.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the parameter at the specified index is not a \n\u003ccode\u003eShort\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the parameter at the specified index is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eindex\u003c/code\u003e is negative or not less than the current size of this \n\u003ccode\u003eParameterBlock\u003c/code\u003e object"
        ],
        "return": [
          "the parameter at the specified index as a \n\u003ccode\u003eshort\u003c/code\u003e value."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIntParameter",
      "comment": "A convenience method to return a parameter as an int. An exception is thrown if the parameter is null or not an Integer.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the parameter at the specified index is not an \n\u003ccode\u003eInteger\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the parameter at the specified index is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eindex\u003c/code\u003e is negative or not less than the current size of this \n\u003ccode\u003eParameterBlock\u003c/code\u003e object"
        ],
        "return": [
          "the parameter at the specified index as an \n\u003ccode\u003eint\u003c/code\u003e value."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLongParameter",
      "comment": "A convenience method to return a parameter as a long. An exception is thrown if the parameter is null or not a Long.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the parameter at the specified index is not a \n\u003ccode\u003eLong\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the parameter at the specified index is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eindex\u003c/code\u003e is negative or not less than the current size of this \n\u003ccode\u003eParameterBlock\u003c/code\u003e object"
        ],
        "return": [
          "the parameter at the specified index as a \n\u003ccode\u003elong\u003c/code\u003e value."
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getFloatParameter",
      "comment": "A convenience method to return a parameter as a float. An exception is thrown if the parameter is null or not a Float.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the parameter at the specified index is not a \n\u003ccode\u003eFloat\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the parameter at the specified index is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eindex\u003c/code\u003e is negative or not less than the current size of this \n\u003ccode\u003eParameterBlock\u003c/code\u003e object"
        ],
        "return": [
          "the parameter at the specified index as a \n\u003ccode\u003efloat\u003c/code\u003e value."
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDoubleParameter",
      "comment": "A convenience method to return a parameter as a double. An exception is thrown if the parameter is null or not a Double.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the parameter to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the parameter at the specified index is not a \n\u003ccode\u003eDouble\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the parameter at the specified index is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eindex\u003c/code\u003e is negative or not less than the current size of this \n\u003ccode\u003eParameterBlock\u003c/code\u003e object"
        ],
        "return": [
          "the parameter at the specified index as a \n\u003ccode\u003edouble\u003c/code\u003e value."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getParamClasses",
      "comment": "Returns an array of Class objects describing the types of the parameters.",
      "tagMap": {
        "return": [
          "an array of \n\u003ccode\u003eClass\u003c/code\u003e objects."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "A dummy constructor.",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "name": "java.lang.Object",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "sources"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a ParameterBlock with a given Vector of sources.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esources\u003c/code\u003e - a \n\u003ccode\u003eVector\u003c/code\u003e of source images"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "name": "java.lang.Object",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "sources"
          }
        },
        {
          "type": {
            "name": "java.util.Vector",
            "parameters": [
              {
                "name": "java.lang.Object",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "parameters"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a ParameterBlock with a given Vector of sources and Vector of parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esources\u003c/code\u003e - a \n\u003ccode\u003eVector\u003c/code\u003e of source images",
          "\u003ccode\u003eparameters\u003c/code\u003e - a \n\u003ccode\u003eVector\u003c/code\u003e of parameters to be used in the rendering operation"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.image.renderable.ParameterBlock",
  "comment": "A \n\u003ccode\u003eParameterBlock\u003c/code\u003e encapsulates all the information about sources and parameters (Objects) required by a RenderableImageOp, or other classes that process images. \n\u003cp\u003e Although it is possible to place arbitrary objects in the source Vector, users of this class may impose semantic constraints such as requiring all sources to be RenderedImages or RenderableImage. \u003ccode\u003eParameterBlock\u003c/code\u003e itself is merely a container and performs no checking on source or parameter types. \u003c/p\u003e\n\u003cp\u003e All parameters in a \u003ccode\u003eParameterBlock\u003c/code\u003e are objects; convenience add and set methods are available that take arguments of base type and construct the appropriate subclass of Number (such as Integer or Float). Corresponding get methods perform a downward cast and have return values of base type; an exception will be thrown if the stored values do not have the correct type. There is no way to distinguish between the results of \"short s; add(s)\" and \"add(new Short(s))\". \u003c/p\u003e\n\u003cp\u003e Note that the get and set methods operate on references. Therefore, one must be careful not to share references between \u003ccode\u003eParameterBlock\u003c/code\u003es when this is inappropriate. For example, to create a new \u003ccode\u003eParameterBlock\u003c/code\u003e that is equal to an old one except for an added source, one might be tempted to write: \u003c/p\u003e\n\u003cpre\u003e ParameterBlock addSource(ParameterBlock pb, RenderableImage im) {\n     ParameterBlock pb1 \u003d new ParameterBlock(pb.getSources());\n     pb1.addSource(im);\n     return pb1;\n }\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e This code will have the side effect of altering the original \u003ccode\u003eParameterBlock\u003c/code\u003e, since the getSources operation returned a reference to its source Vector. Both pb and pb1 share their source Vector, and a change in either is visible to both. \u003c/p\u003e\n\u003cp\u003e A correct way to write the addSource function is to clone the source Vector: \u003c/p\u003e\n\u003cpre\u003e ParameterBlock addSource (ParameterBlock pb, RenderableImage im) {\n     ParameterBlock pb1 \u003d new ParameterBlock(pb.getSources().clone());\n     pb1.addSource(im);\n     return pb1;\n }\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The clone method of \u003ccode\u003eParameterBlock\u003c/code\u003e has been defined to perform a clone of both the source and parameter Vectors for this reason. A standard, shallow clone is available as shallowClone. \u003c/p\u003e\n\u003cp\u003e The addSource, setSource, add, and set methods are defined to return \u0027this\u0027 after adding their argument. This allows use of syntax like: \u003c/p\u003e\n\u003cpre\u003e ParameterBlock pb \u003d new ParameterBlock();\n op \u003d new RenderableImageOp(\"operation\", pb.add(arg1).add(arg2));\n \u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.awt.image.renderable.ParameterBlock\"\u003eSerialized Form\u003c/a\u003e"
    ]
  }
}