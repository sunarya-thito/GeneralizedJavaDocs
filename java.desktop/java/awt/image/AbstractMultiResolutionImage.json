{
  "packageName": "java.awt.image",
  "simpleName": "AbstractMultiResolutionImage",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.Image",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.image.ImageObserver",
            "type": "Class"
          },
          "name": "observer",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getWidth",
      "comment": "This method simply delegates to the same method on the base image and it is equivalent to: getBaseImage().getWidth(observer).",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/AbstractMultiResolutionImage.html#getBaseImage()\"\u003e\u003ccode\u003egetBaseImage()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html#getWidth(java.awt.image.ImageObserver)\"\u003egetWidth\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html\" title\u003d\"class in java.awt\"\u003eImage\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobserver\u003c/code\u003e - an object waiting for the image to be loaded."
        ],
        "return": [
          "the width of the base image, or -1 if the width is not yet known"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.image.ImageObserver",
            "type": "Class"
          },
          "name": "observer",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHeight",
      "comment": "This method simply delegates to the same method on the base image and it is equivalent to: getBaseImage().getHeight(observer).",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/AbstractMultiResolutionImage.html#getBaseImage()\"\u003e\u003ccode\u003egetBaseImage()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html#getHeight(java.awt.image.ImageObserver)\"\u003egetHeight\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html\" title\u003d\"class in java.awt\"\u003eImage\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobserver\u003c/code\u003e - an object waiting for the image to be loaded."
        ],
        "return": [
          "the height of the base image, or -1 if the height is not yet known"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.ImageProducer",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSource",
      "comment": "This method simply delegates to the same method on the base image and it is equivalent to: getBaseImage().getSource().",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/AbstractMultiResolutionImage.html#getBaseImage()\"\u003e\u003ccode\u003egetBaseImage()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html#getSource()\"\u003egetSource\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html\" title\u003d\"class in java.awt\"\u003eImage\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the image producer that produces the pixels for the base image"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Graphics",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getGraphics",
      "comment": "As per the contract of the base Image#getGraphics() method, this implementation will always throw UnsupportedOperationException since only off-screen images can return a Graphics object.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Graphics.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eGraphics\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#createImage(int,int)\"\u003e\u003ccode\u003eComponent.createImage(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html#getGraphics()\"\u003egetGraphics\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html\" title\u003d\"class in java.awt\"\u003eImage\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - this method is not supported"
        ],
        "return": [
          "throws \n\u003ccode\u003eUnsupportedOperationException\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.image.ImageObserver",
            "type": "Class"
          },
          "name": "observer",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getProperty",
      "comment": "This method simply delegates to the same method on the base image and it is equivalent to: getBaseImage().getProperty(name, observer).",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/AbstractMultiResolutionImage.html#getBaseImage()\"\u003e\u003ccode\u003egetBaseImage()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html#getProperty(java.lang.String,java.awt.image.ImageObserver)\"\u003egetProperty\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html\" title\u003d\"class in java.awt\"\u003eImage\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - a property name.",
          "\u003ccode\u003eobserver\u003c/code\u003e - an object waiting for this image to be loaded."
        ],
        "return": [
          "the value of the named property in the base image"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Image",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1028,
      "name": "getBaseImage",
      "comment": "Return the base image representing the best version of the image for rendering at the default width and height.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the base image of the set of multi-resolution images"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for subclasses to call.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.awt.image.AbstractMultiResolutionImage",
  "comment": "This class provides default implementations of several \n\u003ccode\u003eImage\u003c/code\u003e methods for classes that want to implement the \n\u003ccode\u003eMultiResolutionImage\u003c/code\u003e interface. For example, \n\u003cpre\u003e \u003ccode\u003e\n public class CustomMultiResolutionImage extends AbstractMultiResolutionImage {\n\n     final Image[] resolutionVariants;\n\n     public CustomMultiResolutionImage(Image... resolutionVariants) {\n          this.resolutionVariants \u003d resolutionVariants;\n     }\n\n     public Image getResolutionVariant(\n             double destImageWidth, double destImageHeight) {\n         // return a resolution variant based on the given destination image size\n     }\n\n     public List\u0026lt;Image\u0026gt; getResolutionVariants() {\n         return Collections.unmodifiableList(Arrays.asList(resolutionVariants));\n     }\n\n     protected Image getBaseImage() {\n         return resolutionVariants[0];\n     }\n }\n \u003c/code\u003e \u003c/pre\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eImage\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MultiResolutionImage.html\" title\u003d\"interface in java.awt.image\"\u003e\u003ccode\u003eMultiResolutionImage\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "9"
    ]
  }
}