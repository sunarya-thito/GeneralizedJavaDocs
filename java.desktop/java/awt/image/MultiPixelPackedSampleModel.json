{
  "packageName": "java.awt.image",
  "simpleName": "MultiPixelPackedSampleModel",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.image.SampleModel",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.awt.image.SampleModel",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createCompatibleSampleModel",
      "comment": "Creates a new MultiPixelPackedSampleModel with the specified width and height. The new MultiPixelPackedSampleModel has the same storage data type and number of bits per pixel as this MultiPixelPackedSampleModel.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#createCompatibleSampleModel(int,int)\"\u003ecreateCompatibleSampleModel\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html\" title\u003d\"class in java.awt.image\"\u003eSampleModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ew\u003c/code\u003e - the specified width",
          "\u003ccode\u003eh\u003c/code\u003e - the specified height"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ew\u003c/code\u003e or \n\u003ccode\u003eh\u003c/code\u003e is not greater than 0"
        ],
        "return": [
          "a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eSampleModel\u003c/code\u003e\u003c/a\u003e with the specified width and height and with the same storage data type and number of bits per pixel as this \n\u003ccode\u003eMultiPixelPackedSampleModel\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.DataBuffer",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createDataBuffer",
      "comment": "Creates a DataBuffer that corresponds to this MultiPixelPackedSampleModel. The DataBuffer object\u0027s data type and size is consistent with this MultiPixelPackedSampleModel. The DataBuffer has a single bank.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#createDataBuffer()\"\u003ecreateDataBuffer\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html\" title\u003d\"class in java.awt.image\"\u003eSampleModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eDataBuffer\u003c/code\u003e with the same data type and size as this \n\u003ccode\u003eMultiPixelPackedSampleModel\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNumDataElements",
      "comment": "Returns the number of data elements needed to transfer one pixel via the getDataElements(int, int, java.lang.Object, java.awt.image.DataBuffer) and setDataElements(int, int, java.lang.Object, java.awt.image.DataBuffer) methods. For a MultiPixelPackedSampleModel, this is one.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#getDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003eSampleModel.getDataElements(int, int, Object, DataBuffer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#getDataElements(int,int,int,int,java.lang.Object,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003eSampleModel.getDataElements(int, int, int, int, Object, DataBuffer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#setDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003eSampleModel.setDataElements(int, int, Object, DataBuffer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#setDataElements(int,int,int,int,java.lang.Object,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003eSampleModel.setDataElements(int, int, int, int, Object, DataBuffer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#getTransferType()\"\u003e\u003ccode\u003eSampleModel.getTransferType()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#getNumDataElements()\"\u003egetNumDataElements\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html\" title\u003d\"class in java.awt.image\"\u003eSampleModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the number of data elements."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSampleSize",
      "comment": "Returns the number of bits per sample for all bands.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#getSampleSize()\"\u003egetSampleSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html\" title\u003d\"class in java.awt.image\"\u003eSampleModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the number of bits per sample."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "band"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSampleSize",
      "comment": "Returns the number of bits per sample for the specified band.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#getSampleSize(int)\"\u003egetSampleSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html\" title\u003d\"class in java.awt.image\"\u003eSampleModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eband\u003c/code\u003e - the specified band"
        ],
        "return": [
          "the number of bits per sample for the specified band."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOffset",
      "comment": "Returns the offset of pixel (x, y) in data array elements.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the specified pixel",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the specified pixel"
        ],
        "return": [
          "the offset of the specified pixel."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBitOffset",
      "comment": "Returns the offset, in bits, into the data element in which it is stored for the xth pixel of a scanline. This offset is the same for all scanlines.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the specified pixel"
        ],
        "return": [
          "the bit offset of the specified pixel."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getScanlineStride",
      "comment": "Returns the scanline stride.",
      "tagMap": {
        "return": [
          "the scanline stride of this \n\u003ccode\u003eMultiPixelPackedSampleModel\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPixelBitStride",
      "comment": "Returns the pixel bit stride in bits. This value is the same as the number of bits per pixel.",
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003epixelBitStride\u003c/code\u003e of this \n\u003ccode\u003eMultiPixelPackedSampleModel\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDataBitOffset",
      "comment": "Returns the data bit offset in bits.",
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003edataBitOffset\u003c/code\u003e of this \n\u003ccode\u003eMultiPixelPackedSampleModel\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTransferType",
      "comment": "Returns the TransferType used to transfer pixels by way of the getDataElements and setDataElements methods. The TransferType might or might not be the same as the storage DataType. The TransferType is one of DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, or DataBuffer.TYPE_INT.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#getDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003eSampleModel.getDataElements(int, int, Object, DataBuffer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#getDataElements(int,int,int,int,java.lang.Object,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003eSampleModel.getDataElements(int, int, int, int, Object, DataBuffer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#setDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003eSampleModel.setDataElements(int, int, Object, DataBuffer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#setDataElements(int,int,int,int,java.lang.Object,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003eSampleModel.setDataElements(int, int, int, int, Object, DataBuffer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#getNumDataElements()\"\u003e\u003ccode\u003eSampleModel.getNumDataElements()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eDataBuffer\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#getTransferType()\"\u003egetTransferType\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html\" title\u003d\"class in java.awt.image\"\u003eSampleModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the transfertype."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.SampleModel",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "bands"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createSubsetSampleModel",
      "comment": "Creates a new MultiPixelPackedSampleModel with a subset of the bands of this MultiPixelPackedSampleModel. Since a MultiPixelPackedSampleModel only has one band, the bands argument must have a length of one and indicate the zeroth band.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#createSubsetSampleModel(int%5B%5D)\"\u003ecreateSubsetSampleModel\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html\" title\u003d\"class in java.awt.image\"\u003eSampleModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ebands\u003c/code\u003e - the specified bands"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterFormatException.html\" title\u003d\"class in java.awt.image\"\u003eRasterFormatException\u003c/a\u003e\u003c/code\u003e - if the number of bands requested is not one.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ew\u003c/code\u003e or \n\u003ccode\u003eh\u003c/code\u003e is not greater than 0"
        ],
        "return": [
          "a new \n\u003ccode\u003eSampleModel\u003c/code\u003e with a subset of bands of this \n\u003ccode\u003eMultiPixelPackedSampleModel\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "java.awt.image.DataBuffer",
            "type": "Class"
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSample",
      "comment": "Returns as int the sample in a specified band for the pixel located at (x, y). An ArrayIndexOutOfBoundsException is thrown if the coordinates are not in bounds.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MultiPixelPackedSampleModel.html#setSample(int,int,int,int,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003esetSample(int, int, int, int, DataBuffer)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#getSample(int,int,int,java.awt.image.DataBuffer)\"\u003egetSample\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html\" title\u003d\"class in java.awt.image\"\u003eSampleModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the specified pixel",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the specified pixel",
          "\u003ccode\u003eb\u003c/code\u003e - the band to return, which is assumed to be 0",
          "\u003ccode\u003edata\u003c/code\u003e - the \n\u003ccode\u003eDataBuffer\u003c/code\u003e containing the image data"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the specified coordinates are not in bounds."
        ],
        "return": [
          "the specified band containing the sample of the specified pixel."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        },
        {
          "type": {
            "name": "java.awt.image.DataBuffer",
            "type": "Class"
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSample",
      "comment": "Sets a sample in the specified band for the pixel located at (x, y) in the DataBuffer using an int for input. An ArrayIndexOutOfBoundsException is thrown if the coordinates are not in bounds.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MultiPixelPackedSampleModel.html#getSample(int,int,int,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003egetSample(int, int, int, DataBuffer)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#setSample(int,int,int,int,java.awt.image.DataBuffer)\"\u003esetSample\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html\" title\u003d\"class in java.awt.image\"\u003eSampleModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the specified pixel",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the specified pixel",
          "\u003ccode\u003eb\u003c/code\u003e - the band to return, which is assumed to be 0",
          "\u003ccode\u003es\u003c/code\u003e - the input sample as an \n\u003ccode\u003eint\u003c/code\u003e",
          "\u003ccode\u003edata\u003c/code\u003e - the \n\u003ccode\u003eDataBuffer\u003c/code\u003e where image data is stored"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates are not in bounds."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        },
        {
          "type": {
            "name": "java.awt.image.DataBuffer",
            "type": "Class"
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDataElements",
      "comment": "Returns data for a single pixel in a primitive array of type TransferType. For a MultiPixelPackedSampleModel, the array has one element, and the type is the smallest of DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, or DataBuffer.TYPE_INT that can hold a single pixel. Generally, obj should be passed in as null, so that the Object is created automatically and is the correct primitive data type. The following code illustrates transferring data for one pixel from DataBuffer db1, whose storage layout is described by MultiPixelPackedSampleModel mppsm1, to DataBuffer db2, whose storage layout is described by MultiPixelPackedSampleModel mppsm2. The transfer is generally more efficient than using getPixel or setPixel.        MultiPixelPackedSampleModel mppsm1, mppsm2;\n       DataBufferInt db1, db2;\n       mppsm2.setDataElements(x, y, mppsm1.getDataElements(x, y, null,\n                              db1), db2);\n Using getDataElements or setDataElements to transfer between two DataBuffer/SampleModel pairs is legitimate if the SampleModels have the same number of bands, corresponding bands have the same number of bits per sample, and the TransferTypes are the same. If obj is not null, it should be a primitive array of type TransferType. Otherwise, a ClassCastException is thrown. An ArrayIndexOutOfBoundsException is thrown if the coordinates are not in bounds, or if obj is not null and is not large enough to hold the pixel data.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MultiPixelPackedSampleModel.html#setDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003esetDataElements(int, int, Object, DataBuffer)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#getDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)\"\u003egetDataElements\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html\" title\u003d\"class in java.awt.image\"\u003eSampleModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the specified pixel",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the specified pixel",
          "\u003ccode\u003eobj\u003c/code\u003e - a primitive array in which to return the pixel data or \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003edata\u003c/code\u003e - the \n\u003ccode\u003eDataBuffer\u003c/code\u003e containing the image data."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eobj\u003c/code\u003e is not a primitive array of type TransferType or is not \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates are not in bounds, or if \n\u003ccode\u003eobj\u003c/code\u003e is not \n\u003ccode\u003enull\u003c/code\u003e or not large enough to hold the pixel data"
        ],
        "return": [
          "an \n\u003ccode\u003eObject\u003c/code\u003e containing data for the specified pixel."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "iArray"
          }
        },
        {
          "type": {
            "name": "java.awt.image.DataBuffer",
            "type": "Class"
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPixel",
      "comment": "Returns the specified single band pixel in the first element of an int array. ArrayIndexOutOfBoundsException is thrown if the coordinates are not in bounds.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MultiPixelPackedSampleModel.html#setPixel(int,int,int%5B%5D,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003esetPixel(int, int, int[], DataBuffer)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#getPixel(int,int,int%5B%5D,java.awt.image.DataBuffer)\"\u003egetPixel\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html\" title\u003d\"class in java.awt.image\"\u003eSampleModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the specified pixel",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the specified pixel",
          "\u003ccode\u003eiArray\u003c/code\u003e - the array containing the pixel to be returned or \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003edata\u003c/code\u003e - the \n\u003ccode\u003eDataBuffer\u003c/code\u003e where image data is stored"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the coordinates are not in bounds"
        ],
        "return": [
          "an array containing the specified pixel."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        },
        {
          "type": {
            "name": "java.awt.image.DataBuffer",
            "type": "Class"
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDataElements",
      "comment": "Sets the data for a single pixel in the specified DataBuffer from a primitive array of type TransferType. For a MultiPixelPackedSampleModel, only the first element of the array holds valid data, and the type must be the smallest of DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, or DataBuffer.TYPE_INT that can hold a single pixel. The following code illustrates transferring data for one pixel from DataBuffer db1, whose storage layout is described by MultiPixelPackedSampleModel mppsm1, to DataBuffer db2, whose storage layout is described by MultiPixelPackedSampleModel mppsm2. The transfer is generally more efficient than using getPixel or setPixel.        MultiPixelPackedSampleModel mppsm1, mppsm2;\n       DataBufferInt db1, db2;\n       mppsm2.setDataElements(x, y, mppsm1.getDataElements(x, y, null,\n                              db1), db2);\n Using getDataElements or setDataElements to transfer between two DataBuffer/SampleModel pairs is legitimate if the SampleModel objects have the same number of bands, corresponding bands have the same number of bits per sample, and the TransferTypes are the same. obj must be a primitive array of type TransferType. Otherwise, a ClassCastException is thrown. An ArrayIndexOutOfBoundsException is thrown if the coordinates are not in bounds, or if obj is not large enough to hold the pixel data.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MultiPixelPackedSampleModel.html#getDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003egetDataElements(int, int, Object, DataBuffer)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#setDataElements(int,int,java.lang.Object,java.awt.image.DataBuffer)\"\u003esetDataElements\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html\" title\u003d\"class in java.awt.image\"\u003eSampleModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the pixel location",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the pixel location",
          "\u003ccode\u003eobj\u003c/code\u003e - a primitive array containing pixel data",
          "\u003ccode\u003edata\u003c/code\u003e - the \n\u003ccode\u003eDataBuffer\u003c/code\u003e containing the image data"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "iArray"
          }
        },
        {
          "type": {
            "name": "java.awt.image.DataBuffer",
            "type": "Class"
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPixel",
      "comment": "Sets a pixel in the DataBuffer using an int array for input. ArrayIndexOutOfBoundsException is thrown if the coordinates are not in bounds.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MultiPixelPackedSampleModel.html#getPixel(int,int,int%5B%5D,java.awt.image.DataBuffer)\"\u003e\u003ccode\u003egetPixel(int, int, int[], DataBuffer)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html#setPixel(int,int,int%5B%5D,java.awt.image.DataBuffer)\"\u003esetPixel\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html\" title\u003d\"class in java.awt.image\"\u003eSampleModel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the pixel location",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the pixel location",
          "\u003ccode\u003eiArray\u003c/code\u003e - the input pixel in an \n\u003ccode\u003eint\u003c/code\u003e array",
          "\u003ccode\u003edata\u003c/code\u003e - the \n\u003ccode\u003eDataBuffer\u003c/code\u003e containing the image data"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dataType"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "numberOfBits"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a MultiPixelPackedSampleModel with the specified data type, width, height and number of bits per pixel.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edataType\u003c/code\u003e - the data type for storing samples",
          "\u003ccode\u003ew\u003c/code\u003e - the width, in pixels, of the region of image data described",
          "\u003ccode\u003eh\u003c/code\u003e - the height, in pixels, of the region of image data described",
          "\u003ccode\u003enumberOfBits\u003c/code\u003e - the number of bits per pixel"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edataType\u003c/code\u003e is not either \n\u003ccode\u003eDataBuffer.TYPE_BYTE\u003c/code\u003e, \n\u003ccode\u003eDataBuffer.TYPE_USHORT\u003c/code\u003e, or \n\u003ccode\u003eDataBuffer.TYPE_INT\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dataType"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "numberOfBits"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "scanlineStride"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dataBitOffset"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a MultiPixelPackedSampleModel with specified data type, width, height, number of bits per pixel, scanline stride and data bit offset.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edataType\u003c/code\u003e - the data type for storing samples",
          "\u003ccode\u003ew\u003c/code\u003e - the width, in pixels, of the region of image data described",
          "\u003ccode\u003eh\u003c/code\u003e - the height, in pixels, of the region of image data described",
          "\u003ccode\u003enumberOfBits\u003c/code\u003e - the number of bits per pixel",
          "\u003ccode\u003escanlineStride\u003c/code\u003e - the line stride of the image data",
          "\u003ccode\u003edataBitOffset\u003c/code\u003e - the data bit offset for the region of image data described"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterFormatException.html\" title\u003d\"class in java.awt.image\"\u003eRasterFormatException\u003c/a\u003e\u003c/code\u003e - if the number of bits per pixel is not a power of 2 or if a power of 2 number of pixels do not fit in one data element.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ew\u003c/code\u003e or \n\u003ccode\u003eh\u003c/code\u003e is not greater than 0",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edataType\u003c/code\u003e is not either \n\u003ccode\u003eDataBuffer.TYPE_BYTE\u003c/code\u003e, \n\u003ccode\u003eDataBuffer.TYPE_USHORT\u003c/code\u003e, or \n\u003ccode\u003eDataBuffer.TYPE_INT\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.image.MultiPixelPackedSampleModel",
  "comment": "The \n\u003ccode\u003eMultiPixelPackedSampleModel\u003c/code\u003e class represents one-banded images and can pack multiple one-sample pixels into one data element. Pixels are not allowed to span data elements. The data type can be DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, or DataBuffer.TYPE_INT. Each pixel must be a power of 2 number of bits and a power of 2 number of pixels must fit exactly in one data element. Pixel bit stride is equal to the number of bits per pixel. Scanline stride is in data elements and the last several data elements might be padded with unused pixels. Data bit offset is the offset in bits from the beginning of the \n\u003ca href\u003d\"DataBuffer.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eDataBuffer\u003c/code\u003e\u003c/a\u003e to the first pixel and must be a multiple of pixel bit stride. \n\u003cp\u003e The following code illustrates extracting the bits for pixel \u003ccode\u003ex,\u0026nbsp;y\u003c/code\u003e from \u003ccode\u003eDataBuffer data\u003c/code\u003e and storing the pixel data in data elements of type \u003ccode\u003edataType\u003c/code\u003e: \u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\n      int dataElementSize \u003d DataBuffer.getDataTypeSize(dataType);\n      int bitnum \u003d dataBitOffset + x*pixelBitStride;\n      int element \u003d data.getElem(y*scanlineStride + bitnum/dataElementSize);\n      int shift \u003d dataElementSize - (bitnum \u0026amp; (dataElementSize-1))\n                  - pixelBitStride;\n      int pixel \u003d (element \u0026gt;\u0026gt; shift) \u0026amp; ((1 \u0026lt;\u0026lt; pixelBitStride) - 1);\n \u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {}
}