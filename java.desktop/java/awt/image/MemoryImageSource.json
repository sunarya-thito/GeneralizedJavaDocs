{
  "packageName": "java.awt.image",
  "simpleName": "MemoryImageSource",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.ImageConsumer",
            "type": "Class"
          },
          "field": {
            "name": "ic"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addConsumer",
      "comment": "Adds an ImageConsumer to the list of consumers interested in data for this image.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003e\u003ccode\u003eImageConsumer\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageProducer.html#addConsumer(java.awt.image.ImageConsumer)\"\u003eaddConsumer\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageProducer.html\" title\u003d\"interface in java.awt.image\"\u003eImageProducer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eic\u003c/code\u003e - the specified \n\u003ccode\u003eImageConsumer\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified \n\u003ccode\u003eImageConsumer\u003c/code\u003e is null"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.ImageConsumer",
            "type": "Class"
          },
          "field": {
            "name": "ic"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isConsumer",
      "comment": "Determines if an ImageConsumer is on the list of consumers currently interested in data for this image.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003e\u003ccode\u003eImageConsumer\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageProducer.html#isConsumer(java.awt.image.ImageConsumer)\"\u003eisConsumer\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageProducer.html\" title\u003d\"interface in java.awt.image\"\u003eImageProducer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eic\u003c/code\u003e - the specified \n\u003ccode\u003eImageConsumer\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the \n\u003ccode\u003eImageConsumer\u003c/code\u003e is on the list; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.ImageConsumer",
            "type": "Class"
          },
          "field": {
            "name": "ic"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeConsumer",
      "comment": "Removes an ImageConsumer from the list of consumers interested in data for this image.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003e\u003ccode\u003eImageConsumer\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageProducer.html#removeConsumer(java.awt.image.ImageConsumer)\"\u003eremoveConsumer\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageProducer.html\" title\u003d\"interface in java.awt.image\"\u003eImageProducer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eic\u003c/code\u003e - the specified \n\u003ccode\u003eImageConsumer\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.ImageConsumer",
            "type": "Class"
          },
          "field": {
            "name": "ic"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "startProduction",
      "comment": "Adds an ImageConsumer to the list of consumers interested in data for this image and immediately starts delivery of the image data through the ImageConsumer interface.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003e\u003ccode\u003eImageConsumer\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageProducer.html#startProduction(java.awt.image.ImageConsumer)\"\u003estartProduction\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageProducer.html\" title\u003d\"interface in java.awt.image\"\u003eImageProducer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eic\u003c/code\u003e - the specified \n\u003ccode\u003eImageConsumer\u003c/code\u003e image data through the ImageConsumer interface."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.ImageConsumer",
            "type": "Class"
          },
          "field": {
            "name": "ic"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "requestTopDownLeftRightResend",
      "comment": "Requests that a given ImageConsumer have the image data delivered one more time in top-down, left-right order.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003e\u003ccode\u003eImageConsumer\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageProducer.html#requestTopDownLeftRightResend(java.awt.image.ImageConsumer)\"\u003erequestTopDownLeftRightResend\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageProducer.html\" title\u003d\"interface in java.awt.image\"\u003eImageProducer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eic\u003c/code\u003e - the specified \n\u003ccode\u003eImageConsumer\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "animated"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setAnimated",
      "comment": "Changes this memory image into a multi-frame animation or a single-frame static image depending on the animated parameter. This method should be called immediately after the MemoryImageSource is constructed and before an image is created with it to ensure that all ImageConsumers will receive the correct multi-frame data. If an ImageConsumer is added to this ImageProducer before this flag is set then that ImageConsumer will see only a snapshot of the pixel data that was available when it connected.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eanimated\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the image is a multi-frame animation"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "fullbuffers"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setFullBufferUpdates",
      "comment": "Specifies whether this animated memory image should always be updated by sending the complete buffer of pixels whenever there is a change. This flag is ignored if the animation flag is not turned on through the setAnimated() method. This method should be called immediately after the MemoryImageSource is constructed and before an image is created with it to ensure that all ImageConsumers will receive the correct pixel delivery hints.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MemoryImageSource.html#setAnimated(boolean)\"\u003e\u003ccode\u003esetAnimated(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003efullbuffers\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the complete pixel buffer should always be sent"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newPixels",
      "comment": "Sends a whole new buffer of pixels to any ImageConsumers that are currently interested in the data for this image and notify them that an animation frame is complete. This method only has effect if the animation flag has been turned on through the setAnimated() method.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MemoryImageSource.html#newPixels(int,int,int,int,boolean)\"\u003e\u003ccode\u003enewPixels(int, int, int, int, boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003e\u003ccode\u003eImageConsumer\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MemoryImageSource.html#setAnimated(boolean)\"\u003e\u003ccode\u003esetAnimated(boolean)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newPixels",
      "comment": "Sends a rectangular region of the buffer of pixels to any ImageConsumers that are currently interested in the data for this image and notify them that an animation frame is complete. This method only has effect if the animation flag has been turned on through the setAnimated() method. If the full buffer update flag was turned on with the setFullBufferUpdates() method then the rectangle parameters will be ignored and the entire buffer will always be sent.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MemoryImageSource.html#newPixels(int,int,int,int,boolean)\"\u003e\u003ccode\u003enewPixels(int, int, int, int, boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003e\u003ccode\u003eImageConsumer\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MemoryImageSource.html#setAnimated(boolean)\"\u003e\u003ccode\u003esetAnimated(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MemoryImageSource.html#setFullBufferUpdates(boolean)\"\u003e\u003ccode\u003esetFullBufferUpdates(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the x coordinate of the upper left corner of the rectangle of pixels to be sent",
          "\u003ccode\u003ey\u003c/code\u003e - the y coordinate of the upper left corner of the rectangle of pixels to be sent",
          "\u003ccode\u003ew\u003c/code\u003e - the width of the rectangle of pixels to be sent",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the rectangle of pixels to be sent"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "framenotify"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newPixels",
      "comment": "Sends a rectangular region of the buffer of pixels to any ImageConsumers that are currently interested in the data for this image. If the framenotify parameter is true then the consumers are also notified that an animation frame is complete. This method only has effect if the animation flag has been turned on through the setAnimated() method. If the full buffer update flag was turned on with the setFullBufferUpdates() method then the rectangle parameters will be ignored and the entire buffer will always be sent.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003e\u003ccode\u003eImageConsumer\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MemoryImageSource.html#setAnimated(boolean)\"\u003e\u003ccode\u003esetAnimated(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MemoryImageSource.html#setFullBufferUpdates(boolean)\"\u003e\u003ccode\u003esetFullBufferUpdates(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the x coordinate of the upper left corner of the rectangle of pixels to be sent",
          "\u003ccode\u003ey\u003c/code\u003e - the y coordinate of the upper left corner of the rectangle of pixels to be sent",
          "\u003ccode\u003ew\u003c/code\u003e - the width of the rectangle of pixels to be sent",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the rectangle of pixels to be sent",
          "\u003ccode\u003eframenotify\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the consumers should be sent a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html#SINGLEFRAMEDONE\"\u003e\u003ccode\u003eSINGLEFRAMEDONE\u003c/code\u003e\u003c/a\u003e notification"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "newpix"
          }
        },
        {
          "type": {
            "name": "java.awt.image.ColorModel",
            "type": "Class"
          },
          "field": {
            "name": "newmodel"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offset"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "scansize"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newPixels",
      "comment": "Changes to a new byte array to hold the pixels for this image. If the animation flag has been turned on through the setAnimated() method, then the new pixels will be immediately delivered to any ImageConsumers that are currently interested in the data for this image.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MemoryImageSource.html#newPixels(int,int,int,int,boolean)\"\u003e\u003ccode\u003enewPixels(int, int, int, int, boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MemoryImageSource.html#setAnimated(boolean)\"\u003e\u003ccode\u003esetAnimated(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewpix\u003c/code\u003e - the new pixel array",
          "\u003ccode\u003enewmodel\u003c/code\u003e - the specified \n\u003ccode\u003eColorModel\u003c/code\u003e",
          "\u003ccode\u003eoffset\u003c/code\u003e - the offset into the array",
          "\u003ccode\u003escansize\u003c/code\u003e - the distance from one row of pixels to the next in the array"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "newpix"
          }
        },
        {
          "type": {
            "name": "java.awt.image.ColorModel",
            "type": "Class"
          },
          "field": {
            "name": "newmodel"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offset"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "scansize"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newPixels",
      "comment": "Changes to a new int array to hold the pixels for this image. If the animation flag has been turned on through the setAnimated() method, then the new pixels will be immediately delivered to any ImageConsumers that are currently interested in the data for this image.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MemoryImageSource.html#newPixels(int,int,int,int,boolean)\"\u003e\u003ccode\u003enewPixels(int, int, int, int, boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MemoryImageSource.html#setAnimated(boolean)\"\u003e\u003ccode\u003esetAnimated(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewpix\u003c/code\u003e - the new pixel array",
          "\u003ccode\u003enewmodel\u003c/code\u003e - the specified \n\u003ccode\u003eColorModel\u003c/code\u003e",
          "\u003ccode\u003eoffset\u003c/code\u003e - the offset into the array",
          "\u003ccode\u003escansize\u003c/code\u003e - the distance from one row of pixels to the next in the array"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "java.awt.image.ColorModel",
            "type": "Class"
          },
          "field": {
            "name": "cm"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "pix"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "off"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "scan"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an ImageProducer object which uses an array of bytes to produce data for an Image object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#createImage(java.awt.image.ImageProducer)\"\u003e\u003ccode\u003eComponent.createImage(java.awt.image.ImageProducer)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ew\u003c/code\u003e - the width of the rectangle of pixels",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the rectangle of pixels",
          "\u003ccode\u003ecm\u003c/code\u003e - the specified \n\u003ccode\u003eColorModel\u003c/code\u003e",
          "\u003ccode\u003epix\u003c/code\u003e - an array of pixels",
          "\u003ccode\u003eoff\u003c/code\u003e - the offset into the array of where to store the first pixel",
          "\u003ccode\u003escan\u003c/code\u003e - the distance from one row of pixels to the next in the array"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "java.awt.image.ColorModel",
            "type": "Class"
          },
          "field": {
            "name": "cm"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "pix"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "off"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "scan"
          }
        },
        {
          "type": {
            "name": "java.util.Hashtable",
            "parameters": [
              {
                "type": "Wildcard"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "props"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an ImageProducer object which uses an array of bytes to produce data for an Image object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#createImage(java.awt.image.ImageProducer)\"\u003e\u003ccode\u003eComponent.createImage(java.awt.image.ImageProducer)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ew\u003c/code\u003e - the width of the rectangle of pixels",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the rectangle of pixels",
          "\u003ccode\u003ecm\u003c/code\u003e - the specified \n\u003ccode\u003eColorModel\u003c/code\u003e",
          "\u003ccode\u003epix\u003c/code\u003e - an array of pixels",
          "\u003ccode\u003eoff\u003c/code\u003e - the offset into the array of where to store the first pixel",
          "\u003ccode\u003escan\u003c/code\u003e - the distance from one row of pixels to the next in the array",
          "\u003ccode\u003eprops\u003c/code\u003e - a list of properties that the \n\u003ccode\u003eImageProducer\u003c/code\u003e uses to process an image"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "java.awt.image.ColorModel",
            "type": "Class"
          },
          "field": {
            "name": "cm"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "pix"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "off"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "scan"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an ImageProducer object which uses an array of integers to produce data for an Image object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#createImage(java.awt.image.ImageProducer)\"\u003e\u003ccode\u003eComponent.createImage(java.awt.image.ImageProducer)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ew\u003c/code\u003e - the width of the rectangle of pixels",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the rectangle of pixels",
          "\u003ccode\u003ecm\u003c/code\u003e - the specified \n\u003ccode\u003eColorModel\u003c/code\u003e",
          "\u003ccode\u003epix\u003c/code\u003e - an array of pixels",
          "\u003ccode\u003eoff\u003c/code\u003e - the offset into the array of where to store the first pixel",
          "\u003ccode\u003escan\u003c/code\u003e - the distance from one row of pixels to the next in the array"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "java.awt.image.ColorModel",
            "type": "Class"
          },
          "field": {
            "name": "cm"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "pix"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "off"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "scan"
          }
        },
        {
          "type": {
            "name": "java.util.Hashtable",
            "parameters": [
              {
                "type": "Wildcard"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "props"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an ImageProducer object which uses an array of integers to produce data for an Image object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#createImage(java.awt.image.ImageProducer)\"\u003e\u003ccode\u003eComponent.createImage(java.awt.image.ImageProducer)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ew\u003c/code\u003e - the width of the rectangle of pixels",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the rectangle of pixels",
          "\u003ccode\u003ecm\u003c/code\u003e - the specified \n\u003ccode\u003eColorModel\u003c/code\u003e",
          "\u003ccode\u003epix\u003c/code\u003e - an array of pixels",
          "\u003ccode\u003eoff\u003c/code\u003e - the offset into the array of where to store the first pixel",
          "\u003ccode\u003escan\u003c/code\u003e - the distance from one row of pixels to the next in the array",
          "\u003ccode\u003eprops\u003c/code\u003e - a list of properties that the \n\u003ccode\u003eImageProducer\u003c/code\u003e uses to process an image"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "pix"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "off"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "scan"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an ImageProducer object which uses an array of integers in the default RGB ColorModel to produce data for an Image object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#createImage(java.awt.image.ImageProducer)\"\u003e\u003ccode\u003eComponent.createImage(java.awt.image.ImageProducer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ColorModel.html#getRGBdefault()\"\u003e\u003ccode\u003eColorModel.getRGBdefault()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ew\u003c/code\u003e - the width of the rectangle of pixels",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the rectangle of pixels",
          "\u003ccode\u003epix\u003c/code\u003e - an array of pixels",
          "\u003ccode\u003eoff\u003c/code\u003e - the offset into the array of where to store the first pixel",
          "\u003ccode\u003escan\u003c/code\u003e - the distance from one row of pixels to the next in the array"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "pix"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "off"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "scan"
          }
        },
        {
          "type": {
            "name": "java.util.Hashtable",
            "parameters": [
              {
                "type": "Wildcard"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "props"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an ImageProducer object which uses an array of integers in the default RGB ColorModel to produce data for an Image object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#createImage(java.awt.image.ImageProducer)\"\u003e\u003ccode\u003eComponent.createImage(java.awt.image.ImageProducer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ColorModel.html#getRGBdefault()\"\u003e\u003ccode\u003eColorModel.getRGBdefault()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ew\u003c/code\u003e - the width of the rectangle of pixels",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the rectangle of pixels",
          "\u003ccode\u003epix\u003c/code\u003e - an array of pixels",
          "\u003ccode\u003eoff\u003c/code\u003e - the offset into the array of where to store the first pixel",
          "\u003ccode\u003escan\u003c/code\u003e - the distance from one row of pixels to the next in the array",
          "\u003ccode\u003eprops\u003c/code\u003e - a list of properties that the \n\u003ccode\u003eImageProducer\u003c/code\u003e uses to process an image"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.image.MemoryImageSource",
  "comment": "This class is an implementation of the ImageProducer interface which uses an array to produce pixel values for an Image. Here is an example which calculates a 100x100 image representing a fade from black to blue along the X axis and a fade from black to red along the Y axis: \n\u003cpre\u003e\u003ccode\u003e\n\n      int w \u003d 100;\n      int h \u003d 100;\n      int pix[] \u003d new int[w * h];\n      int index \u003d 0;\n      for (int y \u003d 0; y \u0026lt; h; y++) {\n          int red \u003d (y * 255) / (h - 1);\n          for (int x \u003d 0; x \u0026lt; w; x++) {\n              int blue \u003d (x * 255) / (w - 1);\n              pix[index++] \u003d (255 \u0026lt;\u0026lt; 24) | (red \u0026lt;\u0026lt; 16) | blue;\n          }\n      }\n      Image img \u003d createImage(new MemoryImageSource(w, h, pix, 0, w));\n\n \u003c/code\u003e\u003c/pre\u003e The MemoryImageSource is also capable of managing a memory image which varies over time to allow animation or custom rendering. Here is an example showing how to set up the animation source and signal changes in the data (adapted from the MemoryAnimationSourceDemo by Garth Dickie): \n\u003cpre\u003e\u003ccode\u003e\n\n      int pixels[];\n      MemoryImageSource source;\n\n      public void init() {\n          int width \u003d 50;\n          int height \u003d 50;\n          int size \u003d width * height;\n          pixels \u003d new int[size];\n\n          int value \u003d getBackground().getRGB();\n          for (int i \u003d 0; i \u0026lt; size; i++) {\n              pixels[i] \u003d value;\n          }\n\n          source \u003d new MemoryImageSource(width, height, pixels, 0, width);\n          source.setAnimated(true);\n          image \u003d createImage(source);\n      }\n\n      public void run() {\n          Thread me \u003d Thread.currentThread( );\n          me.setPriority(Thread.MIN_PRIORITY);\n\n          while (true) {\n              try {\n                  Thread.sleep(10);\n              } catch( InterruptedException e ) {\n                  return;\n              }\n\n              // Modify the values in the pixels array at (x, y, w, h)\n\n              // Send the new data to the interested ImageConsumers\n              source.newPixels(x, y, w, h);\n          }\n      }\n\n \u003c/code\u003e\u003c/pre\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageProducer.html\" title\u003d\"interface in java.awt.image\"\u003e\u003ccode\u003eImageProducer\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}