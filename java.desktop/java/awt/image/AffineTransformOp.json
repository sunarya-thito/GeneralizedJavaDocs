{
  "packageName": "java.awt.image",
  "simpleName": "AffineTransformOp",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TYPE_NEAREST_NEIGHBOR",
      "comment": "Nearest-neighbor interpolation type.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.image.AffineTransformOp.TYPE_NEAREST_NEIGHBOR\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TYPE_BILINEAR",
      "comment": "Bilinear interpolation type.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.image.AffineTransformOp.TYPE_BILINEAR\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TYPE_BICUBIC",
      "comment": "Bicubic interpolation type.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.image.AffineTransformOp.TYPE_BICUBIC\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getInterpolationType",
      "comment": "Returns the interpolation type used by this op.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/AffineTransformOp.html#TYPE_NEAREST_NEIGHBOR\"\u003e\u003ccode\u003eTYPE_NEAREST_NEIGHBOR\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/AffineTransformOp.html#TYPE_BILINEAR\"\u003e\u003ccode\u003eTYPE_BILINEAR\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/AffineTransformOp.html#TYPE_BICUBIC\"\u003e\u003ccode\u003eTYPE_BICUBIC\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the interpolation type."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.BufferedImage",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.BufferedImage",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        },
        {
          "type": {
            "name": "java.awt.image.BufferedImage",
            "type": "Class"
          },
          "field": {
            "name": "dst"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "filter",
      "comment": "Transforms the source BufferedImage and stores the results in the destination BufferedImage. If the color models for the two images do not match, a color conversion into the destination color model is performed. If the destination image is null, a BufferedImage is created with the source ColorModel. The coordinates of the rectangle returned by getBounds2D(BufferedImage) are not necessarily the same as the coordinates of the BufferedImage returned by this method. If the upper-left corner coordinates of the rectangle are negative then this part of the rectangle is not drawn. If the upper-left corner coordinates of the rectangle are positive then the filtered image is drawn at that position in the destination BufferedImage. An IllegalArgumentException is thrown if the source is the same as the destination.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html#filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)\"\u003efilter\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html\" title\u003d\"interface in java.awt.image\"\u003eBufferedImageOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - The \n\u003ccode\u003eBufferedImage\u003c/code\u003e to transform.",
          "\u003ccode\u003edst\u003c/code\u003e - The \n\u003ccode\u003eBufferedImage\u003c/code\u003e in which to store the results of the transformation."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esrc\u003c/code\u003e and \n\u003ccode\u003edst\u003c/code\u003e are the same",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImagingOpException.html\" title\u003d\"class in java.awt.image\"\u003eImagingOpException\u003c/a\u003e\u003c/code\u003e - if the image cannot be transformed because of a data-processing error that might be caused by an invalid image format, tile format, or image-processing operation, or any other unsupported operation."
        ],
        "return": [
          "The filtered \n\u003ccode\u003eBufferedImage\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.WritableRaster",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.Raster",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        },
        {
          "type": {
            "name": "java.awt.image.WritableRaster",
            "type": "Class"
          },
          "field": {
            "name": "dst"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "filter",
      "comment": "Transforms the source Raster and stores the results in the destination Raster. This operation performs the transform band by band. If the destination Raster is null, a new Raster is created. An IllegalArgumentException may be thrown if the source is the same as the destination or if the number of bands in the source is not equal to the number of bands in the destination. The coordinates of the rectangle returned by getBounds2D(Raster) are not necessarily the same as the coordinates of the WritableRaster returned by this method. If the upper-left corner coordinates of rectangle are negative then this part of the rectangle is not drawn. If the coordinates of the rectangle are positive then the filtered image is drawn at that position in the destination Raster.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html#filter(java.awt.image.Raster,java.awt.image.WritableRaster)\"\u003efilter\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html\" title\u003d\"interface in java.awt.image\"\u003eRasterOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - The \n\u003ccode\u003eRaster\u003c/code\u003e to transform.",
          "\u003ccode\u003edst\u003c/code\u003e - The \n\u003ccode\u003eRaster\u003c/code\u003e in which to store the results of the transformation."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImagingOpException.html\" title\u003d\"class in java.awt.image\"\u003eImagingOpException\u003c/a\u003e\u003c/code\u003e - if the raster cannot be transformed because of a data-processing error that might be caused by an invalid image format, tile format, or image-processing operation, or any other unsupported operation."
        ],
        "return": [
          "The transformed \n\u003ccode\u003eRaster\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.Rectangle2D",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.BufferedImage",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getBounds2D",
      "comment": "Returns the bounding box of the transformed destination. The rectangle returned is the actual bounding box of the transformed points. The coordinates of the upper-left corner of the returned rectangle might not be (0, 0).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html#getBounds2D(java.awt.image.BufferedImage)\"\u003egetBounds2D\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html\" title\u003d\"interface in java.awt.image\"\u003eBufferedImageOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - The \n\u003ccode\u003eBufferedImage\u003c/code\u003e to be transformed."
        ],
        "return": [
          "The \n\u003ccode\u003eRectangle2D\u003c/code\u003e representing the destination\u0027s bounding box."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.Rectangle2D",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.Raster",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getBounds2D",
      "comment": "Returns the bounding box of the transformed destination. The rectangle returned will be the actual bounding box of the transformed points. The coordinates of the upper-left corner of the returned rectangle might not be (0, 0).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html#getBounds2D(java.awt.image.Raster)\"\u003egetBounds2D\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html\" title\u003d\"interface in java.awt.image\"\u003eRasterOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - The \n\u003ccode\u003eRaster\u003c/code\u003e to be transformed."
        ],
        "return": [
          "The \n\u003ccode\u003eRectangle2D\u003c/code\u003e representing the destination\u0027s bounding box."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.BufferedImage",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.BufferedImage",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        },
        {
          "type": {
            "name": "java.awt.image.ColorModel",
            "type": "Class"
          },
          "field": {
            "name": "destCM"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createCompatibleDestImage",
      "comment": "Creates a zeroed destination image with the correct size and number of bands. A RasterFormatException may be thrown if the transformed width or height is equal to 0. If destCM is null, an appropriate ColorModel is used; this ColorModel may have an alpha channel even if the source ColorModel is opaque.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html#createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)\"\u003ecreateCompatibleDestImage\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html\" title\u003d\"interface in java.awt.image\"\u003eBufferedImageOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - The \n\u003ccode\u003eBufferedImage\u003c/code\u003e to be transformed.",
          "\u003ccode\u003edestCM\u003c/code\u003e - \n\u003ccode\u003eColorModel\u003c/code\u003e of the destination. If null, an appropriate \n\u003ccode\u003eColorModel\u003c/code\u003e is used."
        ],
        "return": [
          "The zeroed destination image."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.WritableRaster",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.Raster",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createCompatibleDestRaster",
      "comment": "Creates a zeroed destination Raster with the correct size and number of bands. A RasterFormatException may be thrown if the transformed width or height is equal to 0.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html#createCompatibleDestRaster(java.awt.image.Raster)\"\u003ecreateCompatibleDestRaster\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html\" title\u003d\"interface in java.awt.image\"\u003eRasterOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - The \n\u003ccode\u003eRaster\u003c/code\u003e to be transformed."
        ],
        "return": [
          "The zeroed destination \n\u003ccode\u003eRaster\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.Point2D",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.Point2D",
            "type": "Class"
          },
          "field": {
            "name": "srcPt"
          }
        },
        {
          "type": {
            "name": "java.awt.geom.Point2D",
            "type": "Class"
          },
          "field": {
            "name": "dstPt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getPoint2D",
      "comment": "Returns the location of the corresponding destination point given a point in the source. If dstPt is specified, it is used to hold the return value.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html#getPoint2D(java.awt.geom.Point2D,java.awt.geom.Point2D)\"\u003egetPoint2D\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html\" title\u003d\"interface in java.awt.image\"\u003eBufferedImageOp\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html#getPoint2D(java.awt.geom.Point2D,java.awt.geom.Point2D)\"\u003egetPoint2D\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html\" title\u003d\"interface in java.awt.image\"\u003eRasterOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrcPt\u003c/code\u003e - The \n\u003ccode\u003ePoint2D\u003c/code\u003e that represents the source point.",
          "\u003ccode\u003edstPt\u003c/code\u003e - The \n\u003ccode\u003ePoint2D\u003c/code\u003e in which to store the result."
        ],
        "return": [
          "The \n\u003ccode\u003ePoint2D\u003c/code\u003e in the destination that corresponds to the specified point in the source."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.AffineTransform",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getTransform",
      "comment": "Returns the affine transform used by this transform operation.",
      "tagMap": {
        "return": [
          "The \n\u003ccode\u003eAffineTransform\u003c/code\u003e associated with this op."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.RenderingHints",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getRenderingHints",
      "comment": "Returns the rendering hints used by this transform operation.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html#getRenderingHints()\"\u003egetRenderingHints\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageOp.html\" title\u003d\"interface in java.awt.image\"\u003eBufferedImageOp\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html#getRenderingHints()\"\u003egetRenderingHints\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RasterOp.html\" title\u003d\"interface in java.awt.image\"\u003eRasterOp\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "The \n\u003ccode\u003eRenderingHints\u003c/code\u003e object associated with this op."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.AffineTransform",
            "type": "Class"
          },
          "field": {
            "name": "xform"
          }
        },
        {
          "type": {
            "name": "java.awt.RenderingHints",
            "type": "Class"
          },
          "field": {
            "name": "hints"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an AffineTransformOp given an affine transform. The interpolation type is determined from the RenderingHints object. If the interpolation hint is defined, it will be used. Otherwise, if the rendering quality hint is defined, the interpolation type is determined from its value. If no hints are specified (hints is null), the interpolation type is TYPE_NEAREST_NEIGHBOR.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html#KEY_INTERPOLATION\"\u003e\u003ccode\u003eRenderingHints.KEY_INTERPOLATION\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html#KEY_RENDERING\"\u003e\u003ccode\u003eRenderingHints.KEY_RENDERING\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003exform\u003c/code\u003e - The \n\u003ccode\u003eAffineTransform\u003c/code\u003e to use for the operation.",
          "\u003ccode\u003ehints\u003c/code\u003e - The \n\u003ccode\u003eRenderingHints\u003c/code\u003e object used to specify the interpolation type for the operation."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImagingOpException.html\" title\u003d\"class in java.awt.image\"\u003eImagingOpException\u003c/a\u003e\u003c/code\u003e - if the transform is non-invertible."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.AffineTransform",
            "type": "Class"
          },
          "field": {
            "name": "xform"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "interpolationType"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an AffineTransformOp given an affine transform and the interpolation type.",
      "tagMap": {
        "param": [
          "\u003ccode\u003exform\u003c/code\u003e - The \n\u003ccode\u003eAffineTransform\u003c/code\u003e to use for the operation.",
          "\u003ccode\u003einterpolationType\u003c/code\u003e - One of the integer interpolation type constants defined by this class: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/AffineTransformOp.html#TYPE_NEAREST_NEIGHBOR\"\u003e\u003ccode\u003eTYPE_NEAREST_NEIGHBOR\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/AffineTransformOp.html#TYPE_BILINEAR\"\u003e\u003ccode\u003eTYPE_BILINEAR\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/AffineTransformOp.html#TYPE_BICUBIC\"\u003e\u003ccode\u003eTYPE_BICUBIC\u003c/code\u003e\u003c/a\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImagingOpException.html\" title\u003d\"class in java.awt.image\"\u003eImagingOpException\u003c/a\u003e\u003c/code\u003e - if the transform is non-invertible."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.image.AffineTransformOp",
  "comment": "This class uses an affine transform to perform a linear mapping from 2D coordinates in the source image or \n\u003ccode\u003eRaster\u003c/code\u003e to 2D coordinates in the destination image or \n\u003ccode\u003eRaster\u003c/code\u003e. The type of interpolation that is used is specified through a constructor, either by a \n\u003ccode\u003eRenderingHints\u003c/code\u003e object or by one of the integer interpolation types defined in this class. \n\u003cp\u003e If a \u003ccode\u003eRenderingHints\u003c/code\u003e object is specified in the constructor, the interpolation hint and the rendering quality hint are used to set the interpolation type for this operation. The color rendering hint and the dithering hint can be used when color conversion is required. \u003c/p\u003e\n\u003cp\u003e Note that the following constraints have to be met: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003eThe source and destination must be different. \u003c/li\u003e\n \u003cli\u003eFor \u003ccode\u003eRaster\u003c/code\u003e objects, the number of bands in the source must be equal to the number of bands in the destination. \u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/AffineTransform.html\" title\u003d\"class in java.awt.geom\"\u003e\u003ccode\u003eAffineTransform\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageFilter.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eBufferedImageFilter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html#KEY_INTERPOLATION\"\u003e\u003ccode\u003eRenderingHints.KEY_INTERPOLATION\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html#KEY_RENDERING\"\u003e\u003ccode\u003eRenderingHints.KEY_RENDERING\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html#KEY_COLOR_RENDERING\"\u003e\u003ccode\u003eRenderingHints.KEY_COLOR_RENDERING\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html#KEY_DITHERING\"\u003e\u003ccode\u003eRenderingHints.KEY_DITHERING\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}