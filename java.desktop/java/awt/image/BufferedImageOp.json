{
  "packageName": "java.awt.image",
  "simpleName": "BufferedImageOp",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.awt.image.BufferedImage",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.BufferedImage",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        },
        {
          "type": {
            "name": "java.awt.image.BufferedImage",
            "type": "Class"
          },
          "field": {
            "name": "dest"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "filter",
      "comment": "Performs a single-input/single-output operation on a BufferedImage. If the color models for the two images do not match, a color conversion into the destination color model is performed. If the destination image is null, a BufferedImage with an appropriate ColorModel is created. An IllegalArgumentException may be thrown if the source and/or destination image is incompatible with the types of images $ allowed by the class implementing this filter.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - The \n\u003ccode\u003eBufferedImage\u003c/code\u003e to be filtered",
          "\u003ccode\u003edest\u003c/code\u003e - The \n\u003ccode\u003eBufferedImage\u003c/code\u003e in which to store the results$"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the source and/or destination image is not compatible with the types of images allowed by the class implementing this filter."
        ],
        "return": [
          "The filtered \n\u003ccode\u003eBufferedImage\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.Rectangle2D",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.BufferedImage",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBounds2D",
      "comment": "Returns the bounding box of the filtered destination image. An IllegalArgumentException may be thrown if the source image is incompatible with the types of images allowed by the class implementing this filter.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - The \n\u003ccode\u003eBufferedImage\u003c/code\u003e to be filtered"
        ],
        "return": [
          "The \n\u003ccode\u003eRectangle2D\u003c/code\u003e representing the destination image\u0027s bounding box."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.image.BufferedImage",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.BufferedImage",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        },
        {
          "type": {
            "name": "java.awt.image.ColorModel",
            "type": "Class"
          },
          "field": {
            "name": "destCM"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "createCompatibleDestImage",
      "comment": "Creates a zeroed destination image with the correct size and number of bands. An IllegalArgumentException may be thrown if the source image is incompatible with the types of images allowed by the class implementing this filter.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - The \n\u003ccode\u003eBufferedImage\u003c/code\u003e to be filtered",
          "\u003ccode\u003edestCM\u003c/code\u003e - \n\u003ccode\u003eColorModel\u003c/code\u003e of the destination. If null, the \n\u003ccode\u003eColorModel\u003c/code\u003e of the source is used."
        ],
        "return": [
          "The zeroed destination image."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.Point2D",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.Point2D",
            "type": "Class"
          },
          "field": {
            "name": "srcPt"
          }
        },
        {
          "type": {
            "name": "java.awt.geom.Point2D",
            "type": "Class"
          },
          "field": {
            "name": "dstPt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPoint2D",
      "comment": "Returns the location of the corresponding destination point given a point in the source image. If dstPt is specified, it is used to hold the return value.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esrcPt\u003c/code\u003e - the \n\u003ccode\u003ePoint2D\u003c/code\u003e that represents the point in the source image",
          "\u003ccode\u003edstPt\u003c/code\u003e - The \n\u003ccode\u003ePoint2D\u003c/code\u003e in which to store the result"
        ],
        "return": [
          "The \n\u003ccode\u003ePoint2D\u003c/code\u003e in the destination image that corresponds to the specified point in the source image."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.RenderingHints",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getRenderingHints",
      "comment": "Returns the rendering hints for this operation.",
      "tagMap": {
        "return": [
          "The \n\u003ccode\u003eRenderingHints\u003c/code\u003e object for this \n\u003ccode\u003eBufferedImageOp\u003c/code\u003e. Returns null if no hints have been set."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.awt.image.BufferedImageOp",
  "comment": "This interface describes single-input/single-output operations performed on \n\u003ccode\u003eBufferedImage\u003c/code\u003e objects. It is implemented by \n\u003ccode\u003eAffineTransformOp\u003c/code\u003e, \n\u003ccode\u003eConvolveOp\u003c/code\u003e, \n\u003ccode\u003eColorConvertOp\u003c/code\u003e, \n\u003ccode\u003eRescaleOp\u003c/code\u003e, and \n\u003ccode\u003eLookupOp\u003c/code\u003e. These objects can be passed into a \n\u003ccode\u003eBufferedImageFilter\u003c/code\u003e to operate on a \n\u003ccode\u003eBufferedImage\u003c/code\u003e in the ImageProducer-ImageFilter-ImageConsumer paradigm. \n\u003cp\u003e Classes that implement this interface must specify whether or not they allow in-place filtering-- filter operations where the source object is equal to the destination object. \u003c/p\u003e\n\u003cp\u003e This interface cannot be used to describe more sophisticated operations such as those that take multiple sources. Note that this restriction also means that the values of the destination pixels prior to the operation are not used as input to the filter operation.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImage.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eBufferedImage\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BufferedImageFilter.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eBufferedImageFilter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/AffineTransformOp.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eAffineTransformOp\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BandCombineOp.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eBandCombineOp\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ColorConvertOp.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eColorConvertOp\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ConvolveOp.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eConvolveOp\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/LookupOp.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eLookupOp\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/RescaleOp.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eRescaleOp\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}