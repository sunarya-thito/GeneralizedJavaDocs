{
  "packageName": "java.awt.image",
  "simpleName": "MultiResolutionImage",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.awt.Image",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "destImageWidth"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "destImageHeight"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getResolutionVariant",
      "comment": "Gets a specific image that is the best variant to represent this logical image at the indicated size.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edestImageWidth\u003c/code\u003e - the width of the destination image, in pixels.",
          "\u003ccode\u003edestImageHeight\u003c/code\u003e - the height of the destination image, in pixels."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edestImageWidth\u003c/code\u003e or \n\u003ccode\u003edestImageHeight\u003c/code\u003e is less than or equal to zero, infinity, or NaN."
        ],
        "return": [
          "image resolution variant."
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.awt.Image",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getResolutionVariants",
      "comment": "Gets a readable list of all resolution variants. The list must be nonempty and contain at least one resolution variant. Note that many implementations might return an unmodifiable list.",
      "tagMap": {
        "return": [
          "list of resolution variants."
        ],
        "since": [
          "9"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.awt.image.MultiResolutionImage",
  "comment": "This interface is designed to be an optional additional API supported by some implementations of \n\u003ca href\u003d\"../Image.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eImage\u003c/code\u003e\u003c/a\u003e to allow them to provide alternate images for various rendering resolutions. The various \n\u003ccode\u003eGraphics.drawImage(...)\u003c/code\u003e variant methods will consult the methods of this interface if it is implemented on the argument \n\u003ccode\u003eImage\u003c/code\u003e object in order to choose the best representation to use for each rendering operation. \n\u003cp\u003e The \u003ccode\u003eMultiResolutionImage\u003c/code\u003e interface should be implemented by any subclass of \u003ccode\u003ejava.awt.Image\u003c/code\u003e whose instances are intended to provide image resolution variants according to the given image width and height. For convenience, toolkit images obtained from \u003ccode\u003eToolkit.getImage(String name)\u003c/code\u003e and \u003ccode\u003eToolkit.getImage(URL url)\u003c/code\u003e will implement this interface on platforms that support naming conventions for resolution variants of stored image media and the \u003ccode\u003eAbstractMultiResolutionImage\u003c/code\u003e and \u003ccode\u003eBaseMultiResolutionImage\u003c/code\u003e classes are provided to facilitate easy construction of custom multi-resolution images from a list of related images.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eImage\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/AbstractMultiResolutionImage.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eAbstractMultiResolutionImage\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/BaseMultiResolutionImage.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eBaseMultiResolutionImage\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Toolkit.html#getImage(java.lang.String)\"\u003e\u003ccode\u003eToolkit.getImage(java.lang.String filename)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Toolkit.html#getImage(java.net.URL)\"\u003e\u003ccode\u003eToolkit.getImage(java.net.URL url)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "9"
    ]
  }
}