{
  "packageName": "java.awt.image",
  "simpleName": "CropImageFilter",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.image.ImageFilter",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Hashtable",
            "parameters": [
              {
                "type": "Wildcard"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "props",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setProperties",
      "comment": "Passes along the properties from the source object after adding a property indicating the cropped region. This method invokes super.setProperties, which might result in additional properties being added. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to filter pixels from an image should avoid calling this method directly since that operation could interfere with the filtering operation.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageFilter.html#setProperties(java.util.Hashtable)\"\u003esetProperties\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageFilter.html\" title\u003d\"class in java.awt.image\"\u003eImageFilter\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html#setProperties(java.util.Hashtable)\"\u003esetProperties\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003eImageConsumer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eprops\u003c/code\u003e - the properties from the source object"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "w",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "h",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDimensions",
      "comment": "Override the source image\u0027s dimensions and pass the dimensions of the rectangular cropped region to the ImageConsumer. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to filter pixels from an image should avoid calling this method directly since that operation could interfere with the filtering operation.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003e\u003ccode\u003eImageConsumer\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageFilter.html#setDimensions(int,int)\"\u003esetDimensions\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageFilter.html\" title\u003d\"class in java.awt.image\"\u003eImageFilter\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html#setDimensions(int,int)\"\u003esetDimensions\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003eImageConsumer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ew\u003c/code\u003e - the width of the source image",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the source image"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "x",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "y",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "w",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "h",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.image.ColorModel",
            "type": "Class"
          },
          "name": "model",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "pixels",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "off",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "scansize",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPixels",
      "comment": "Determine whether the delivered byte pixels intersect the region to be extracted and passes through only that subset of pixels that appear in the output region. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to filter pixels from an image should avoid calling this method directly since that operation could interfere with the filtering operation.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html#setPixels(int,int,int,int,java.awt.image.ColorModel,byte%5B%5D,int,int)\"\u003e\u003ccode\u003eImageConsumer.setPixels(int, int, int, int, java.awt.image.ColorModel, byte[], int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageFilter.html#setPixels(int,int,int,int,java.awt.image.ColorModel,byte%5B%5D,int,int)\"\u003esetPixels\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageFilter.html\" title\u003d\"class in java.awt.image\"\u003eImageFilter\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html#setPixels(int,int,int,int,java.awt.image.ColorModel,byte%5B%5D,int,int)\"\u003esetPixels\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003eImageConsumer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the upper-left corner of the area of pixels to be set",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the upper-left corner of the area of pixels to be set",
          "\u003ccode\u003ew\u003c/code\u003e - the width of the area of pixels",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the area of pixels",
          "\u003ccode\u003emodel\u003c/code\u003e - the specified \n\u003ccode\u003eColorModel\u003c/code\u003e",
          "\u003ccode\u003epixels\u003c/code\u003e - the array of pixels",
          "\u003ccode\u003eoff\u003c/code\u003e - the offset into the \n\u003ccode\u003epixels\u003c/code\u003e array",
          "\u003ccode\u003escansize\u003c/code\u003e - the distance from one row of pixels to the next in the \n\u003ccode\u003epixels\u003c/code\u003e array"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "x",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "y",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "w",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "h",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.image.ColorModel",
            "type": "Class"
          },
          "name": "model",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "pixels",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "off",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "scansize",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPixels",
      "comment": "Determine if the delivered int pixels intersect the region to be extracted and pass through only that subset of pixels that appear in the output region. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to filter pixels from an image should avoid calling this method directly since that operation could interfere with the filtering operation.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html#setPixels(int,int,int,int,java.awt.image.ColorModel,byte%5B%5D,int,int)\"\u003e\u003ccode\u003eImageConsumer.setPixels(int, int, int, int, java.awt.image.ColorModel, byte[], int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageFilter.html#setPixels(int,int,int,int,java.awt.image.ColorModel,int%5B%5D,int,int)\"\u003esetPixels\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageFilter.html\" title\u003d\"class in java.awt.image\"\u003eImageFilter\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html#setPixels(int,int,int,int,java.awt.image.ColorModel,int%5B%5D,int,int)\"\u003esetPixels\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageConsumer.html\" title\u003d\"interface in java.awt.image\"\u003eImageConsumer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the upper-left corner of the area of pixels to be set",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the upper-left corner of the area of pixels to be set",
          "\u003ccode\u003ew\u003c/code\u003e - the width of the area of pixels",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the area of pixels",
          "\u003ccode\u003emodel\u003c/code\u003e - the specified \n\u003ccode\u003eColorModel\u003c/code\u003e",
          "\u003ccode\u003epixels\u003c/code\u003e - the array of pixels",
          "\u003ccode\u003eoff\u003c/code\u003e - the offset into the \n\u003ccode\u003epixels\u003c/code\u003e array",
          "\u003ccode\u003escansize\u003c/code\u003e - the distance from one row of pixels to the next in the \n\u003ccode\u003epixels\u003c/code\u003e array"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "x",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "y",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "w",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "h",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a CropImageFilter that extracts the absolute rectangular region of pixels from its source Image as specified by the x, y, w, and h parameters.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the x location of the top of the rectangle to be extracted",
          "\u003ccode\u003ey\u003c/code\u003e - the y location of the top of the rectangle to be extracted",
          "\u003ccode\u003ew\u003c/code\u003e - the width of the rectangle to be extracted",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the rectangle to be extracted"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.image.CropImageFilter",
  "comment": "An ImageFilter class for cropping images. This class extends the basic ImageFilter Class to extract a given rectangular region of an existing Image and provide a source for a new image containing just the extracted region. It is meant to be used in conjunction with a FilteredImageSource object to produce cropped versions of existing images.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/FilteredImageSource.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eFilteredImageSource\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ImageFilter.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eImageFilter\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}