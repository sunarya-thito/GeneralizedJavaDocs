{
  "packageName": "java.awt.image",
  "simpleName": "DataBuffer",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TYPE_BYTE",
      "comment": "Tag for unsigned byte data.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.image.DataBuffer.TYPE_BYTE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TYPE_USHORT",
      "comment": "Tag for unsigned short data.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.image.DataBuffer.TYPE_USHORT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TYPE_SHORT",
      "comment": "Tag for signed short data. Placeholder for future use.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.image.DataBuffer.TYPE_SHORT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TYPE_INT",
      "comment": "Tag for int data.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.image.DataBuffer.TYPE_INT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TYPE_FLOAT",
      "comment": "Tag for float data. Placeholder for future use.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.image.DataBuffer.TYPE_FLOAT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TYPE_DOUBLE",
      "comment": "Tag for double data. Placeholder for future use.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.image.DataBuffer.TYPE_DOUBLE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TYPE_UNDEFINED",
      "comment": "Tag for undefined data.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.image.DataBuffer.TYPE_UNDEFINED\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "dataType",
      "comment": "The data type of this DataBuffer.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "banks",
      "comment": "The number of banks in this DataBuffer.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "offset",
      "comment": "Offset into default (first) bank from which to get the first element.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "size",
      "comment": "Usable size of all banks.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "offsets",
      "comment": "Offsets into all banks.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "type"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getDataTypeSize",
      "comment": "Returns the size (in bits) of the data type, given a datatype tag.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the value of one of the defined datatype tags"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etype\u003c/code\u003e is less than zero or greater than \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#TYPE_DOUBLE\"\u003e\u003ccode\u003eTYPE_DOUBLE\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the size of the data type"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDataType",
      "comment": "Returns the data type of this DataBuffer.",
      "tagMap": {
        "return": [
          "the data type of this \n\u003ccode\u003eDataBuffer\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSize",
      "comment": "Returns the size (in array elements) of all banks.",
      "tagMap": {
        "return": [
          "the size of all banks."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOffset",
      "comment": "Returns the offset of the default bank in array elements.",
      "tagMap": {
        "return": [
          "the offset of the default bank."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOffsets",
      "comment": "Returns the offsets (in array elements) of all the banks.",
      "tagMap": {
        "return": [
          "the offsets of all banks."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNumBanks",
      "comment": "Returns the number of banks in this DataBuffer.",
      "tagMap": {
        "return": [
          "the number of banks."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getElem",
      "comment": "Returns the requested data array element from the first (default) bank as an integer.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#setElem(int,int)\"\u003e\u003ccode\u003esetElem(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#setElem(int,int,int)\"\u003e\u003ccode\u003esetElem(int, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ei\u003c/code\u003e - the index of the requested data array element"
        ],
        "return": [
          "the data array element at the specified index."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "bank"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getElem",
      "comment": "Returns the requested data array element from the specified bank as an integer.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#setElem(int,int)\"\u003e\u003ccode\u003esetElem(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#setElem(int,int,int)\"\u003e\u003ccode\u003esetElem(int, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ebank\u003c/code\u003e - the specified bank",
          "\u003ccode\u003ei\u003c/code\u003e - the index of the requested data array element"
        ],
        "return": [
          "the data array element at the specified index from the specified bank at the specified index."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setElem",
      "comment": "Sets the requested data array element in the first (default) bank from the given integer.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#getElem(int)\"\u003e\u003ccode\u003egetElem(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#getElem(int,int)\"\u003e\u003ccode\u003egetElem(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ei\u003c/code\u003e - the specified index into the data array",
          "\u003ccode\u003eval\u003c/code\u003e - the data to set the element at the specified index in the data array"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "bank"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "setElem",
      "comment": "Sets the requested data array element in the specified bank from the given integer.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#getElem(int)\"\u003e\u003ccode\u003egetElem(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#getElem(int,int)\"\u003e\u003ccode\u003egetElem(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ebank\u003c/code\u003e - the specified bank",
          "\u003ccode\u003ei\u003c/code\u003e - the specified index into the data array",
          "\u003ccode\u003eval\u003c/code\u003e - the data to set the element in the specified bank at the specified index in the data array"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getElemFloat",
      "comment": "Returns the requested data array element from the first (default) bank as a float. The implementation in this class is to cast getElem(i) to a float. Subclasses may override this method if another implementation is needed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#setElemFloat(int,float)\"\u003e\u003ccode\u003esetElemFloat(int, float)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#setElemFloat(int,int,float)\"\u003e\u003ccode\u003esetElemFloat(int, int, float)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ei\u003c/code\u003e - the index of the requested data array element"
        ],
        "return": [
          "a float value representing the data array element at the specified index."
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "bank"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getElemFloat",
      "comment": "Returns the requested data array element from the specified bank as a float. The implementation in this class is to cast getElem(int, int) to a float. Subclasses can override this method if another implementation is needed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#setElemFloat(int,float)\"\u003e\u003ccode\u003esetElemFloat(int, float)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#setElemFloat(int,int,float)\"\u003e\u003ccode\u003esetElemFloat(int, int, float)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ebank\u003c/code\u003e - the specified bank",
          "\u003ccode\u003ei\u003c/code\u003e - the index of the requested data array element"
        ],
        "return": [
          "a float value representing the data array element from the specified bank at the specified index."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setElemFloat",
      "comment": "Sets the requested data array element in the first (default) bank from the given float. The implementation in this class is to cast val to an int and call setElem(int, int). Subclasses can override this method if another implementation is needed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#getElemFloat(int)\"\u003e\u003ccode\u003egetElemFloat(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#getElemFloat(int,int)\"\u003e\u003ccode\u003egetElemFloat(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ei\u003c/code\u003e - the specified index",
          "\u003ccode\u003eval\u003c/code\u003e - the value to set the element at the specified index in the data array"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "bank"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setElemFloat",
      "comment": "Sets the requested data array element in the specified bank from the given float. The implementation in this class is to cast val to an int and call setElem(int, int). Subclasses can override this method if another implementation is needed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#getElemFloat(int)\"\u003e\u003ccode\u003egetElemFloat(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#getElemFloat(int,int)\"\u003e\u003ccode\u003egetElemFloat(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ebank\u003c/code\u003e - the specified bank",
          "\u003ccode\u003ei\u003c/code\u003e - the specified index",
          "\u003ccode\u003eval\u003c/code\u003e - the value to set the element in the specified bank at the specified index in the data array"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getElemDouble",
      "comment": "Returns the requested data array element from the first (default) bank as a double. The implementation in this class is to cast getElem(int) to a double. Subclasses can override this method if another implementation is needed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#setElemDouble(int,double)\"\u003e\u003ccode\u003esetElemDouble(int, double)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#setElemDouble(int,int,double)\"\u003e\u003ccode\u003esetElemDouble(int, int, double)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ei\u003c/code\u003e - the specified index"
        ],
        "return": [
          "a double value representing the element at the specified index in the data array."
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "bank"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getElemDouble",
      "comment": "Returns the requested data array element from the specified bank as a double. The implementation in this class is to cast getElem(bank, i) to a double. Subclasses may override this method if another implementation is needed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#setElemDouble(int,double)\"\u003e\u003ccode\u003esetElemDouble(int, double)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#setElemDouble(int,int,double)\"\u003e\u003ccode\u003esetElemDouble(int, int, double)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ebank\u003c/code\u003e - the specified bank",
          "\u003ccode\u003ei\u003c/code\u003e - the specified index"
        ],
        "return": [
          "a double value representing the element from the specified bank at the specified index in the data array."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setElemDouble",
      "comment": "Sets the requested data array element in the first (default) bank from the given double. The implementation in this class is to cast val to an int and call setElem(int, int). Subclasses can override this method if another implementation is needed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#getElemDouble(int)\"\u003e\u003ccode\u003egetElemDouble(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#getElemDouble(int,int)\"\u003e\u003ccode\u003egetElemDouble(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ei\u003c/code\u003e - the specified index",
          "\u003ccode\u003eval\u003c/code\u003e - the value to set the element at the specified index in the data array"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "bank"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setElemDouble",
      "comment": "Sets the requested data array element in the specified bank from the given double. The implementation in this class is to cast val to an int and call setElem(int, int). Subclasses can override this method if another implementation is needed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#getElemDouble(int)\"\u003e\u003ccode\u003egetElemDouble(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#getElemDouble(int,int)\"\u003e\u003ccode\u003egetElemDouble(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ebank\u003c/code\u003e - the specified bank",
          "\u003ccode\u003ei\u003c/code\u003e - the specified index",
          "\u003ccode\u003eval\u003c/code\u003e - the value to set the element in the specified bank at the specified index of the data array"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dataType"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a DataBuffer containing one bank of the specified data type and size.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edataType\u003c/code\u003e - the data type of this \n\u003ccode\u003eDataBuffer\u003c/code\u003e",
          "\u003ccode\u003esize\u003c/code\u003e - the size of the banks"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dataType"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "numBanks"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a DataBuffer containing the specified number of banks. Each bank has the specified size and an offset of 0.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edataType\u003c/code\u003e - the data type of this \n\u003ccode\u003eDataBuffer\u003c/code\u003e",
          "\u003ccode\u003esize\u003c/code\u003e - the size of the banks",
          "\u003ccode\u003enumBanks\u003c/code\u003e - the number of banks in this \n\u003ccode\u003eDataBuffer\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dataType"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "numBanks"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offset"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a DataBuffer that contains the specified number of banks. Each bank has the specified datatype, size and offset.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edataType\u003c/code\u003e - the data type of this \n\u003ccode\u003eDataBuffer\u003c/code\u003e",
          "\u003ccode\u003esize\u003c/code\u003e - the size of the banks",
          "\u003ccode\u003enumBanks\u003c/code\u003e - the number of banks in this \n\u003ccode\u003eDataBuffer\u003c/code\u003e",
          "\u003ccode\u003eoffset\u003c/code\u003e - the offset for each bank"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dataType"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "numBanks"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "offsets"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a DataBuffer which contains the specified number of banks. Each bank has the specified datatype and size. The offset for each bank is specified by its respective entry in the offsets array.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edataType\u003c/code\u003e - the data type of this \n\u003ccode\u003eDataBuffer\u003c/code\u003e",
          "\u003ccode\u003esize\u003c/code\u003e - the size of the banks",
          "\u003ccode\u003enumBanks\u003c/code\u003e - the number of banks in this \n\u003ccode\u003eDataBuffer\u003c/code\u003e",
          "\u003ccode\u003eoffsets\u003c/code\u003e - an array containing an offset for each bank."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003enumBanks\u003c/code\u003e does not equal the length of \n\u003ccode\u003eoffsets\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.awt.image.DataBuffer",
  "comment": "This class exists to wrap one or more data arrays. Each data array in the DataBuffer is referred to as a bank. Accessor methods for getting and setting elements of the DataBuffer\u0027s banks exist with and without a bank specifier. The methods without a bank specifier use the default 0th bank. The DataBuffer can optionally take an offset per bank, so that data in an existing array can be used even if the interesting data doesn\u0027t start at array location zero. Getting or setting the 0th element of a bank, uses the (0+offset)th element of the array. The size field specifies how much of the data array is available for use. Size + offset for a given bank should never be greater than the length of the associated data array. The data type of a data buffer indicates the type of the data array(s) and may also indicate additional semantics, e.g. storing unsigned 8-bit data in elements of a byte array. The data type may be TYPE_UNDEFINED or one of the types defined below. Other types may be added in the future. Generally, an object of class DataBuffer will be cast down to one of its data type specific subclasses to access data type specific methods for improved performance. Currently, the Java 2D(tm) API image classes use TYPE_BYTE, TYPE_USHORT, TYPE_INT, TYPE_SHORT, TYPE_FLOAT, and TYPE_DOUBLE DataBuffers to store image data.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/Raster.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eRaster\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/SampleModel.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eSampleModel\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}