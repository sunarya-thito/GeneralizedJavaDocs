{
  "packageName": "java.awt.image",
  "simpleName": "DataBufferByte",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.image.DataBuffer",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getData",
      "comment": "Returns the default (first) byte data array. Note that calling this method may cause this DataBuffer object to be incompatible with performance optimizations used by some implementations (such as caching an associated image in video memory).",
      "tagMap": {
        "return": [
          "The first byte data array."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "bank"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getData",
      "comment": "Returns the data array for the specified bank. Note that calling this method may cause this DataBuffer object to be incompatible with performance optimizations used by some implementations (such as caching an associated image in video memory).",
      "tagMap": {
        "param": [
          "\u003ccode\u003ebank\u003c/code\u003e - The bank whose data array you want to get."
        ],
        "return": [
          "The data array for the specified bank."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": [
          {},
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBankData",
      "comment": "Returns the data arrays for all banks. Note that calling this method may cause this DataBuffer object to be incompatible with performance optimizations used by some implementations (such as caching an associated image in video memory).",
      "tagMap": {
        "return": [
          "All of the data arrays."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getElem",
      "comment": "Returns the requested data array element from the first (default) bank.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBufferByte.html#setElem(int,int)\"\u003e\u003ccode\u003esetElem(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBufferByte.html#setElem(int,int,int)\"\u003e\u003ccode\u003esetElem(int, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#getElem(int)\"\u003egetElem\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html\" title\u003d\"class in java.awt.image\"\u003eDataBuffer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ei\u003c/code\u003e - The data array element you want to get."
        ],
        "return": [
          "The requested data array element as an integer."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "bank"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getElem",
      "comment": "Returns the requested data array element from the specified bank.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBufferByte.html#setElem(int,int)\"\u003e\u003ccode\u003esetElem(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBufferByte.html#setElem(int,int,int)\"\u003e\u003ccode\u003esetElem(int, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#getElem(int,int)\"\u003egetElem\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html\" title\u003d\"class in java.awt.image\"\u003eDataBuffer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ebank\u003c/code\u003e - The bank from which you want to get a data array element.",
          "\u003ccode\u003ei\u003c/code\u003e - The data array element you want to get."
        ],
        "return": [
          "The requested data array element as an integer."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setElem",
      "comment": "Sets the requested data array element in the first (default) bank to the specified value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBufferByte.html#getElem(int)\"\u003e\u003ccode\u003egetElem(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBufferByte.html#getElem(int,int)\"\u003e\u003ccode\u003egetElem(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#setElem(int,int)\"\u003esetElem\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html\" title\u003d\"class in java.awt.image\"\u003eDataBuffer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ei\u003c/code\u003e - The data array element you want to set.",
          "\u003ccode\u003eval\u003c/code\u003e - The integer value to which you want to set the data array element."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "bank"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "i"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setElem",
      "comment": "Sets the requested data array element in the specified bank from the given integer.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBufferByte.html#getElem(int)\"\u003e\u003ccode\u003egetElem(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBufferByte.html#getElem(int,int)\"\u003e\u003ccode\u003egetElem(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html#setElem(int,int,int)\"\u003esetElem\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/DataBuffer.html\" title\u003d\"class in java.awt.image\"\u003eDataBuffer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ebank\u003c/code\u003e - The bank in which you want to set the data array element.",
          "\u003ccode\u003ei\u003c/code\u003e - The data array element you want to set.",
          "\u003ccode\u003eval\u003c/code\u003e - The integer value to which you want to set the specified data array element."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a byte-based DataBuffer with a single bank and the specified size.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esize\u003c/code\u003e - The size of the \n\u003ccode\u003eDataBuffer\u003c/code\u003e."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "numBanks"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a byte based DataBuffer with the specified number of banks all of which are the specified size.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esize\u003c/code\u003e - The size of the banks in the \n\u003ccode\u003eDataBuffer\u003c/code\u003e.",
          "\u003ccode\u003enumBanks\u003c/code\u003e - The number of banks in the a \n\u003ccode\u003eDataBuffer\u003c/code\u003e."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "dataArray"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a byte-based DataBuffer with a single bank using the specified array. Only the first size elements should be used by accessors of this DataBuffer. dataArray must be large enough to hold size elements. Note that DataBuffer objects created by this constructor may be incompatible with performance optimizations used by some implementations (such as caching an associated image in video memory).",
      "tagMap": {
        "param": [
          "\u003ccode\u003edataArray\u003c/code\u003e - The byte array for the \n\u003ccode\u003eDataBuffer\u003c/code\u003e.",
          "\u003ccode\u003esize\u003c/code\u003e - The size of the \n\u003ccode\u003eDataBuffer\u003c/code\u003e bank."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "dataArray"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offset"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a byte-based DataBuffer with a single bank using the specified array, size, and offset. dataArray must have at least offset + size elements. Only elements offset through offset + size - 1 should be used by accessors of this DataBuffer. Note that DataBuffer objects created by this constructor may be incompatible with performance optimizations used by some implementations (such as caching an associated image in video memory).",
      "tagMap": {
        "param": [
          "\u003ccode\u003edataArray\u003c/code\u003e - The byte array for the \n\u003ccode\u003eDataBuffer\u003c/code\u003e.",
          "\u003ccode\u003esize\u003c/code\u003e - The size of the \n\u003ccode\u003eDataBuffer\u003c/code\u003e bank.",
          "\u003ccode\u003eoffset\u003c/code\u003e - The offset into the \n\u003ccode\u003edataArray\u003c/code\u003e. \n\u003ccode\u003edataArray\u003c/code\u003e must have at least \n\u003ccode\u003eoffset\u003c/code\u003e + \n\u003ccode\u003esize\u003c/code\u003e elements."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {},
              {}
            ]
          },
          "field": {
            "name": "dataArray"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a byte-based DataBuffer with the specified arrays. The number of banks is equal to dataArray.length. Only the first size elements of each array should be used by accessors of this DataBuffer. Note that DataBuffer objects created by this constructor may be incompatible with performance optimizations used by some implementations (such as caching an associated image in video memory).",
      "tagMap": {
        "param": [
          "\u003ccode\u003edataArray\u003c/code\u003e - The byte arrays for the \n\u003ccode\u003eDataBuffer\u003c/code\u003e.",
          "\u003ccode\u003esize\u003c/code\u003e - The size of the banks in the \n\u003ccode\u003eDataBuffer\u003c/code\u003e."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {},
              {}
            ]
          },
          "field": {
            "name": "dataArray"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "offsets"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a byte-based DataBuffer with the specified arrays, size, and offsets. The number of banks is equal to dataArray.length. Each array must be at least as large as size + the corresponding offset. There must be an entry in the offset array for each dataArray entry. For each bank, only elements offset through offset + size - 1 should be used by accessors of this DataBuffer. Note that DataBuffer objects created by this constructor may be incompatible with performance optimizations used by some implementations (such as caching an associated image in video memory).",
      "tagMap": {
        "param": [
          "\u003ccode\u003edataArray\u003c/code\u003e - The byte arrays for the \n\u003ccode\u003eDataBuffer\u003c/code\u003e.",
          "\u003ccode\u003esize\u003c/code\u003e - The size of the banks in the \n\u003ccode\u003eDataBuffer\u003c/code\u003e.",
          "\u003ccode\u003eoffsets\u003c/code\u003e - The offsets into each array."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "java.awt.image.DataBufferByte",
  "comment": "This class extends \n\u003ccode\u003eDataBuffer\u003c/code\u003e and stores data internally as bytes. Values stored in the byte array(s) of this \n\u003ccode\u003eDataBuffer\u003c/code\u003e are treated as unsigned values. \n\u003cp\u003e \u003ca id\u003d\"optimizations\"\u003e Note that some implementations may function more efficiently if they can maintain control over how the data for an image is stored. For example, optimizations such as caching an image in video memory require that the implementation track all modifications to that data. Other implementations may operate better if they can store the data in locations other than a Java array. To maintain optimum compatibility with various optimizations it is best to avoid constructors and methods which expose the underlying storage as a Java array, as noted below in the documentation for those methods. \u003c/a\u003e\u003c/p\u003e",
  "tagMap": {}
}