{
  "packageName": "java.awt.image",
  "simpleName": "BaseMultiResolutionImage",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.image.AbstractMultiResolutionImage",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.awt.Image",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "destImageWidth"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "destImageHeight"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getResolutionVariant",
      "comment": "Description copied from interface: MultiResolutionImage",
      "tagMap": {
        "param": [
          "\u003ccode\u003edestImageWidth\u003c/code\u003e - the width of the destination image, in pixels.",
          "\u003ccode\u003edestImageHeight\u003c/code\u003e - the height of the destination image, in pixels."
        ],
        "return": [
          "image resolution variant."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.awt.Image",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getResolutionVariants",
      "comment": "Description copied from interface: MultiResolutionImage",
      "tagMap": {
        "return": [
          "list of resolution variants."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Image",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getBaseImage",
      "comment": "Description copied from class: AbstractMultiResolutionImage",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/AbstractMultiResolutionImage.html#getBaseImage()\"\u003egetBaseImage\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/AbstractMultiResolutionImage.html\" title\u003d\"class in java.awt.image\"\u003eAbstractMultiResolutionImage\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the base image of the set of multi-resolution images"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.Image",
            "type": "Class"
          },
          "field": {
            "name": "resolutionVariants"
          },
          "varArgs": {}
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a multi-resolution image with the given resolution variants. The first resolution variant is used as the base image.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eresolutionVariants\u003c/code\u003e - array of resolution variants sorted by image size"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if null or zero-length array is passed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified \n\u003ccode\u003eresolutionVariants\u003c/code\u003e contains one or more null elements"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "baseImageIndex"
          }
        },
        {
          "type": {
            "name": "java.awt.Image",
            "type": "Class"
          },
          "field": {
            "name": "resolutionVariants"
          },
          "varArgs": {}
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a multi-resolution image with the given base image index and resolution variants.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ebaseImageIndex\u003c/code\u003e - the index of base image in the resolution variants array",
          "\u003ccode\u003eresolutionVariants\u003c/code\u003e - array of resolution variants sorted by image size"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if null or zero-length array is passed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified \n\u003ccode\u003eresolutionVariants\u003c/code\u003e contains one or more null elements",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ebaseImageIndex\u003c/code\u003e is negative or greater than or equal to \n\u003ccode\u003eresolutionVariants\u003c/code\u003e length."
        ],
        "since": [
          "9"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.image.BaseMultiResolutionImage",
  "comment": "This class is an array-based implementation of the \n\u003ccode\u003eAbstractMultiResolutionImage\u003c/code\u003e class. This class will implement the \n\u003ccode\u003egetResolutionVariant(double destImageWidth, double destImageHeight)\u003c/code\u003e method using a simple algorithm which will return the first image variant in the array that is large enough to satisfy the rendering request. The last image in the array will be returned if no suitable image is found that is as large as the rendering request. \n\u003cp\u003e For best effect the array of images should be sorted with each image being both wider and taller than the previous image. The base image need not be the first image in the array. No exception will be thrown if the images are not sorted as suggested.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eImage\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/MultiResolutionImage.html\" title\u003d\"interface in java.awt.image\"\u003e\u003ccode\u003eMultiResolutionImage\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/AbstractMultiResolutionImage.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eAbstractMultiResolutionImage\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "9"
    ]
  }
}