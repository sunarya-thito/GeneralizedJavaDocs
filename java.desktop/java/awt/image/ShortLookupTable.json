{
  "packageName": "java.awt.image",
  "simpleName": "ShortLookupTable",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.image.LookupTable",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "short",
        "type": "Class",
        "arrayDimensions": [
          {},
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getTable",
      "comment": "Returns the lookup table data by reference. If this ShortLookupTable was constructed using a single short array, the length of the returned array is one.",
      "tagMap": {
        "return": [
          "ShortLookupTable data array."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "src"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "dst"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "lookupPixel",
      "comment": "Returns an array of samples of a pixel, translated with the lookup table. The source and destination array can be the same array. Array dst is returned.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/LookupTable.html#lookupPixel(int%5B%5D,int%5B%5D)\"\u003elookupPixel\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/LookupTable.html\" title\u003d\"class in java.awt.image\"\u003eLookupTable\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - the source array.",
          "\u003ccode\u003edst\u003c/code\u003e - the destination array. This array must be at least as long as \n\u003ccode\u003esrc\u003c/code\u003e. If \n\u003ccode\u003edst\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, a new array will be allocated having the same length as \n\u003ccode\u003esrc\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esrc\u003c/code\u003e is longer than \n\u003ccode\u003edst\u003c/code\u003e or if for any element \n\u003ccode\u003ei\u003c/code\u003e of \n\u003ccode\u003esrc\u003c/code\u003e, \n\u003ccode\u003e(src[i]\u0026amp;0xffff)-offset\u003c/code\u003e is either less than zero or greater than or equal to the length of the lookup table for any band."
        ],
        "return": [
          "the array \n\u003ccode\u003edst\u003c/code\u003e, an \n\u003ccode\u003eint\u003c/code\u003e array of samples."
        ]
      }
    },
    {
      "returnType": {
        "name": "short",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "short",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "src"
          }
        },
        {
          "type": {
            "name": "short",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "dst"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "lookupPixel",
      "comment": "Returns an array of samples of a pixel, translated with the lookup table. The source and destination array can be the same array. Array dst is returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - the source array.",
          "\u003ccode\u003edst\u003c/code\u003e - the destination array. This array must be at least as long as \n\u003ccode\u003esrc\u003c/code\u003e. If \n\u003ccode\u003edst\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, a new array will be allocated having the same length as \n\u003ccode\u003esrc\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ArrayIndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eArrayIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esrc\u003c/code\u003e is longer than \n\u003ccode\u003edst\u003c/code\u003e or if for any element \n\u003ccode\u003ei\u003c/code\u003e of \n\u003ccode\u003esrc\u003c/code\u003e, \n\u003ccode\u003e(src[i]\u0026amp;0xffff)-offset\u003c/code\u003e is either less than zero or greater than or equal to the length of the lookup table for any band."
        ],
        "return": [
          "the array \n\u003ccode\u003edst\u003c/code\u003e, an \n\u003ccode\u003eint\u003c/code\u003e array of samples."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offset"
          }
        },
        {
          "type": {
            "name": "short",
            "type": "Class",
            "arrayDimensions": [
              {},
              {}
            ]
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a ShortLookupTable object from an array of short arrays representing a lookup table for each band. The offset will be subtracted from the input values before indexing into the arrays. The number of bands is the length of the data argument. The data array for each band is stored as a reference.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eoffset\u003c/code\u003e - the value subtracted from the input values before indexing into the arrays",
          "\u003ccode\u003edata\u003c/code\u003e - an array of short arrays representing a lookup table for each band"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offset"
          }
        },
        {
          "type": {
            "name": "short",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "data"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a ShortLookupTable object from an array of shorts representing a lookup table for each band. The offset will be subtracted from the input values before indexing into the array. The data array is stored as a reference.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eoffset\u003c/code\u003e - the value subtracted from the input values before indexing into the arrays",
          "\u003ccode\u003edata\u003c/code\u003e - an array of shorts"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.image.ShortLookupTable",
  "comment": "This class defines a lookup table object. The output of a lookup operation using an object of this class is interpreted as an unsigned short quantity. The lookup table contains short data arrays for one or more bands (or components) of an image, and it contains an offset which will be subtracted from the input values before indexing the arrays. This allows an array smaller than the native data size to be provided for a constrained input. If there is only one array in the lookup table, it will be applied to all bands.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ByteLookupTable.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eByteLookupTable\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/LookupOp.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eLookupOp\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}