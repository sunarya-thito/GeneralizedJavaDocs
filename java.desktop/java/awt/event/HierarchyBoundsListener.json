{
  "packageName": "java.awt.event",
  "simpleName": "HierarchyBoundsListener",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.util.EventListener",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.event.HierarchyEvent",
            "type": "Class"
          },
          "name": "e",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "ancestorMoved",
      "comment": "Called when an ancestor of the source is moved.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event to be processed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.event.HierarchyEvent",
            "type": "Class"
          },
          "name": "e",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "ancestorResized",
      "comment": "Called when an ancestor of the source is resized.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event to be processed"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.awt.event.HierarchyBoundsListener",
  "comment": "The listener interface for receiving ancestor moved and resized events. The class that is interested in processing these events either implements this interface (and all the methods it contains) or extends the abstract \n\u003ccode\u003eHierarchyBoundsAdapter\u003c/code\u003e class (overriding only the method of interest). The listener object created from that class is then registered with a Component using the Component\u0027s \n\u003ccode\u003eaddHierarchyBoundsListener\u003c/code\u003e method. When the hierarchy to which the Component belongs changes by the resizing or movement of an ancestor, the relevant method in the listener object is invoked, and the \n\u003ccode\u003eHierarchyEvent\u003c/code\u003e is passed to it. \n\u003cp\u003e Hierarchy events are provided for notification purposes ONLY; The AWT will automatically handle changes to the hierarchy internally so that GUI layout works properly regardless of whether a program registers an \u003ccode\u003eHierarchyBoundsListener\u003c/code\u003e or not.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/HierarchyBoundsAdapter.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eHierarchyBoundsAdapter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/HierarchyEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eHierarchyEvent\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}