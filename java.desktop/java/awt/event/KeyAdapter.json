{
  "packageName": "java.awt.event",
  "simpleName": "KeyAdapter",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.KeyEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "keyTyped",
      "comment": "Invoked when a key has been typed. This event occurs when a key press is followed by a key release.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyListener.html#keyTyped(java.awt.event.KeyEvent)\"\u003ekeyTyped\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyListener.html\" title\u003d\"interface in java.awt.event\"\u003eKeyListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event to be processed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.KeyEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "keyPressed",
      "comment": "Invoked when a key has been pressed.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyListener.html#keyPressed(java.awt.event.KeyEvent)\"\u003ekeyPressed\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyListener.html\" title\u003d\"interface in java.awt.event\"\u003eKeyListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event to be processed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.KeyEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "keyReleased",
      "comment": "Invoked when a key has been released.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyListener.html#keyReleased(java.awt.event.KeyEvent)\"\u003ekeyReleased\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyListener.html\" title\u003d\"interface in java.awt.event\"\u003eKeyListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event to be processed"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a KeyAdapter.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.awt.event.KeyAdapter",
  "comment": "An abstract adapter class for receiving keyboard events. The methods in this class are empty. This class exists as convenience for creating listener objects. \n\u003cp\u003e Extend this class to create a \u003ccode\u003eKeyEvent\u003c/code\u003e listener and override the methods for the events of interest. (If you implement the \u003ccode\u003eKeyListener\u003c/code\u003e interface, you have to define all of the methods in it. This abstract class defines null methods for them all, so you can only have to define methods for events you care about.) \u003c/p\u003e\n\u003cp\u003e Create a listener object using the extended class and then register it with a component using the component\u0027s \u003ccode\u003eaddKeyListener\u003c/code\u003e method. When a key is pressed, released, or typed, the relevant method in the listener object is invoked, and the \u003ccode\u003eKeyEvent\u003c/code\u003e is passed to it.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eKeyEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyListener.html\" title\u003d\"interface in java.awt.event\"\u003e\u003ccode\u003eKeyListener\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/events/keylistener.html\"\u003eTutorial: Writing a Key Listener\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}