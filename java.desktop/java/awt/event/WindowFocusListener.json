{
  "packageName": "java.awt.event",
  "simpleName": "WindowFocusListener",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.util.EventListener",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.WindowEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "windowGainedFocus",
      "comment": "Invoked when the Window is set to be the focused Window, which means that the Window, or one of its subcomponents, will receive keyboard events.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event to be processed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.WindowEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "windowLostFocus",
      "comment": "Invoked when the Window is no longer the focused Window, which means that keyboard events will no longer be delivered to the Window or any of its subcomponents.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event to be processed"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.awt.event.WindowFocusListener",
  "comment": "The listener interface for receiving \n\u003ccode\u003eWindowEvents\u003c/code\u003e, including \n\u003ccode\u003eWINDOW_GAINED_FOCUS\u003c/code\u003e and \n\u003ccode\u003eWINDOW_LOST_FOCUS\u003c/code\u003e events. The class that is interested in processing a \n\u003ccode\u003eWindowEvent\u003c/code\u003e either implements this interface (and all the methods it contains) or extends the abstract \n\u003ccode\u003eWindowAdapter\u003c/code\u003e class (overriding only the methods of interest). The listener object created from that class is then registered with a \n\u003ccode\u003eWindow\u003c/code\u003e using the \n\u003ccode\u003eWindow\u003c/code\u003e\u0027s \n\u003ccode\u003eaddWindowFocusListener\u003c/code\u003e method. When the \n\u003ccode\u003eWindow\u003c/code\u003e\u0027s status changes by virtue of it being opened, closed, activated, deactivated, iconified, or deiconified, or by focus being transferred into or out of the \n\u003ccode\u003eWindow\u003c/code\u003e, the relevant method in the listener object is invoked, and the \n\u003ccode\u003eWindowEvent\u003c/code\u003e is passed to it.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowAdapter.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eWindowAdapter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eWindowEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/events/windowlistener.html\"\u003eTutorial: Writing a Window Listener\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}