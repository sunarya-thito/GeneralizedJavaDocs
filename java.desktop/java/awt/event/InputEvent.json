{
  "packageName": "java.awt.event",
  "simpleName": "InputEvent",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.event.ComponentEvent",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SHIFT_MASK",
      "comment": "The Shift key modifier constant.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.SHIFT_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "CTRL_MASK",
      "comment": "The Control key modifier constant.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.CTRL_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "META_MASK",
      "comment": "The Meta key modifier constant.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.META_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ALT_MASK",
      "comment": "The Alt key modifier constant.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.ALT_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ALT_GRAPH_MASK",
      "comment": "The AltGraph key modifier constant.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.ALT_GRAPH_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "BUTTON1_MASK",
      "comment": "The Mouse Button1 modifier constant.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.BUTTON1_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "BUTTON2_MASK",
      "comment": "The Mouse Button2 modifier constant.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.BUTTON2_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "BUTTON3_MASK",
      "comment": "The Mouse Button3 modifier constant.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.BUTTON3_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SHIFT_DOWN_MASK",
      "comment": "The Shift key extended modifier constant.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.SHIFT_DOWN_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "CTRL_DOWN_MASK",
      "comment": "The Control key extended modifier constant.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.CTRL_DOWN_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "META_DOWN_MASK",
      "comment": "The Meta key extended modifier constant.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.META_DOWN_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ALT_DOWN_MASK",
      "comment": "The Alt key extended modifier constant.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.ALT_DOWN_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "BUTTON1_DOWN_MASK",
      "comment": "The Mouse Button1 extended modifier constant.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.BUTTON1_DOWN_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "BUTTON2_DOWN_MASK",
      "comment": "The Mouse Button2 extended modifier constant.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.BUTTON2_DOWN_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "BUTTON3_DOWN_MASK",
      "comment": "The Mouse Button3 extended modifier constant.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.BUTTON3_DOWN_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ALT_GRAPH_DOWN_MASK",
      "comment": "The AltGraph key extended modifier constant.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.InputEvent.ALT_GRAPH_DOWN_MASK\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "button"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getMaskForButton",
      "comment": "A method to obtain a mask for any existing mouse button. The returned mask may be used for different purposes. Following are some of them: mousePress(buttons) and mouseRelease(buttons) as a modifiers parameter when creating a new MouseEvent instance to check modifiersEx of existing MouseEvent",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MouseInfo.html#getNumberOfButtons()\"\u003e\u003ccode\u003eMouseInfo.getNumberOfButtons()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Toolkit.html#areExtraMouseButtonsEnabled()\"\u003e\u003ccode\u003eToolkit.areExtraMouseButtonsEnabled()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/InputEvent.html#getModifiers()\"\u003e\u003ccode\u003egetModifiers()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/InputEvent.html#getModifiersEx()\"\u003e\u003ccode\u003egetModifiersEx()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ebutton\u003c/code\u003e - is a number to represent a button starting from 1. For example, \n\u003cpre\u003e int button \u003d InputEvent.getMaskForButton(1);\n \u003c/pre\u003e will have the same meaning as \n\u003cpre\u003e int button \u003d InputEvent.getMaskForButton(MouseEvent.BUTTON1);\n \u003c/pre\u003e because \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/MouseEvent.html#BUTTON1\"\u003e\u003ccode\u003eMouseEvent.BUTTON1\u003c/code\u003e\u003c/a\u003e equals to 1. If a mouse has three enabled buttons(see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MouseInfo.html#getNumberOfButtons()\"\u003e\u003ccode\u003eMouseInfo.getNumberOfButtons()\u003c/code\u003e\u003c/a\u003e) then the values from the left column passed into the method will return corresponding values from the right column: \n\u003cpre\u003e    \u003cb\u003ebutton \u003c/b\u003e   \u003cb\u003ereturned mask\u003c/b\u003e\n    \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/MouseEvent.html#BUTTON1\"\u003e\u003ccode\u003eBUTTON1\u003c/code\u003e\u003c/a\u003e  \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/InputEvent.html#BUTTON1_DOWN_MASK\"\u003e\u003ccode\u003eBUTTON1_DOWN_MASK\u003c/code\u003e\u003c/a\u003e\n    \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/MouseEvent.html#BUTTON2\"\u003e\u003ccode\u003eBUTTON2\u003c/code\u003e\u003c/a\u003e  \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/InputEvent.html#BUTTON2_DOWN_MASK\"\u003e\u003ccode\u003eBUTTON2_DOWN_MASK\u003c/code\u003e\u003c/a\u003e\n    \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/MouseEvent.html#BUTTON3\"\u003e\u003ccode\u003eBUTTON3\u003c/code\u003e\u003c/a\u003e  \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/InputEvent.html#BUTTON3_DOWN_MASK\"\u003e\u003ccode\u003eBUTTON3_DOWN_MASK\u003c/code\u003e\u003c/a\u003e\n \u003c/pre\u003e If a mouse has more than three enabled buttons then more values are admissible (4, 5, etc.). There is no assigned constants for these extended buttons. The button masks for the extra buttons returned by this method have no assigned names like the first three button masks. \n\u003cp\u003e This method has the following implementation restriction. It returns masks for a limited number of buttons only. The maximum number is implementation dependent and may vary. This limit is defined by the relevant number of buttons that may hypothetically exist on the mouse but it is greater than the \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MouseInfo.html#getNumberOfButtons()\"\u003e\u003ccode\u003eMouseInfo.getNumberOfButtons()\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ebutton\u003c/code\u003e is less than zero or greater than the number of button masks reserved for buttons"
        ],
        "return": [
          "a mask for an existing mouse button."
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isShiftDown",
      "comment": "Returns whether or not the Shift modifier is down on this event.",
      "tagMap": {
        "return": [
          "whether or not the Shift modifier is down on this event"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isControlDown",
      "comment": "Returns whether or not the Control modifier is down on this event.",
      "tagMap": {
        "return": [
          "whether or not the Control modifier is down on this event"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isMetaDown",
      "comment": "Returns whether or not the Meta modifier is down on this event.",
      "tagMap": {
        "return": [
          "whether or not the Meta modifier is down on this event"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isAltDown",
      "comment": "Returns whether or not the Alt modifier is down on this event.",
      "tagMap": {
        "return": [
          "whether or not the Alt modifier is down on this event"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isAltGraphDown",
      "comment": "Returns whether or not the AltGraph modifier is down on this event.",
      "tagMap": {
        "return": [
          "whether or not the AltGraph modifier is down on this event"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getWhen",
      "comment": "Returns the difference in milliseconds between the timestamp of when this event occurred and midnight, January 1, 1970 UTC.",
      "tagMap": {
        "return": [
          "the difference in milliseconds between the timestamp and midnight, January 1, 1970 UTC"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getModifiers",
      "comment": "Returns the modifier mask for this event.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "9"
            }
          ]
        }
      ],
      "tagMap": {
        "return": [
          "the modifier mask for this event"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getModifiersEx",
      "comment": "Returns the extended modifier mask for this event. Extended modifiers are the modifiers that ends with the _DOWN_MASK suffix, such as ALT_DOWN_MASK, BUTTON1_DOWN_MASK, and others. Extended modifiers represent the state of all modal keys, such as ALT, CTRL, META, and the mouse buttons just after the event occurred. For example, if the user presses button 1 followed by button 2, and then releases them in the same order, the following sequence of events is generated:     MOUSE_PRESSED:  BUTTON1_DOWN_MASK\n    MOUSE_PRESSED:  BUTTON1_DOWN_MASK | BUTTON2_DOWN_MASK\n    MOUSE_RELEASED: BUTTON2_DOWN_MASK\n    MOUSE_CLICKED:  BUTTON2_DOWN_MASK\n    MOUSE_RELEASED:\n    MOUSE_CLICKED:\n It is not recommended to compare the return value of this method using \u003d\u003d because new modifiers can be added in the future. For example, the appropriate way to check that SHIFT and BUTTON1 are down, but CTRL is up is demonstrated by the following code:     int onmask \u003d SHIFT_DOWN_MASK | BUTTON1_DOWN_MASK;\n    int offmask \u003d CTRL_DOWN_MASK;\n    if ((event.getModifiersEx() \u0026 (onmask | offmask)) \u003d\u003d onmask) {\n        ...\n    }\n The above code will work even if new modifiers are added.",
      "tagMap": {
        "return": [
          "the extended modifier mask for this event"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "consume",
      "comment": "Consumes this event so that it will not be processed in the default manner by the source which originated it.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTEvent.html#consume()\"\u003econsume\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTEvent.html\" title\u003d\"class in java.awt\"\u003eAWTEvent\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isConsumed",
      "comment": "Returns whether or not this event has been consumed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/InputEvent.html#consume()\"\u003e\u003ccode\u003econsume()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTEvent.html#isConsumed()\"\u003eisConsumed\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTEvent.html\" title\u003d\"class in java.awt\"\u003eAWTEvent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "whether or not this event has been consumed"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "modifiers"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getModifiersExText",
      "comment": "Returns a String describing the extended modifier keys and mouse buttons, such as \"Shift\", \"Button1\", or \"Ctrl+Shift\". These strings can be localized by changing the awt.properties file. Note that passing negative parameter is incorrect, and will cause the returning an unspecified string. Zero parameter means that no modifiers were passed and will cause the returning an empty string.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emodifiers\u003c/code\u003e - a modifier mask describing the extended modifier keys and mouse buttons for the event"
        ],
        "return": [
          "a text description of the combination of extended modifier keys and mouse buttons that were held down during the event."
        ],
        "since": [
          "1.4"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.awt.event.InputEvent",
  "comment": "The root event class for all component-level input events. Input events are delivered to listeners before they are processed normally by the source where they originated. This allows listeners and component subclasses to \"consume\" the event so that the source will not process them in their default manner. For example, consuming mousePressed events on a Button component will prevent the Button from being activated.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eKeyEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyAdapter.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eKeyAdapter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/MouseEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eMouseEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/MouseAdapter.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eMouseAdapter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/MouseMotionAdapter.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eMouseMotionAdapter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.awt.event.InputEvent\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}