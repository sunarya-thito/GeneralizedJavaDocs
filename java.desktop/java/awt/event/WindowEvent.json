{
  "packageName": "java.awt.event",
  "simpleName": "WindowEvent",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.event.ComponentEvent",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WINDOW_FIRST",
      "comment": "The first number in the range of ids used for window events.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.WindowEvent.WINDOW_FIRST\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WINDOW_OPENED",
      "comment": "The window opened event. This event is delivered only the first time a window is made visible.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.WindowEvent.WINDOW_OPENED\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WINDOW_CLOSING",
      "comment": "The \"window is closing\" event. This event is delivered when the user attempts to close the window from the window\u0027s system menu. If the program does not explicitly hide or dispose the window while processing this event, the window close operation will be cancelled.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.WindowEvent.WINDOW_CLOSING\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WINDOW_CLOSED",
      "comment": "The window closed event. This event is delivered after the displayable window has been closed as the result of a call to dispose.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#isDisplayable()\"\u003e\u003ccode\u003eComponent.isDisplayable()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Window.html#dispose()\"\u003e\u003ccode\u003eWindow.dispose()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.WindowEvent.WINDOW_CLOSED\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WINDOW_ICONIFIED",
      "comment": "The window iconified event. This event is delivered when the window has been changed from a normal to a minimized state. For many platforms, a minimized window is displayed as the icon specified in the window\u0027s iconImage property.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Window.html#setIconImage(java.awt.Image)\"\u003e\u003ccode\u003eWindow.setIconImage(java.awt.Image)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.WindowEvent.WINDOW_ICONIFIED\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WINDOW_DEICONIFIED",
      "comment": "The window deiconified event type. This event is delivered when the window has been changed from a minimized to a normal state.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.WindowEvent.WINDOW_DEICONIFIED\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WINDOW_ACTIVATED",
      "comment": "The window-activated event type. This event is delivered when the Window becomes the active Window. Only a Frame or a Dialog can be the active Window. The native windowing system may denote the active Window or its children with special decorations, such as a highlighted title bar. The active Window is always either the focused Window, or the first Frame or Dialog that is an owner of the focused Window.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.WindowEvent.WINDOW_ACTIVATED\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WINDOW_DEACTIVATED",
      "comment": "The window-deactivated event type. This event is delivered when the Window is no longer the active Window. Only a Frame or a Dialog can be the active Window. The native windowing system may denote the active Window or its children with special decorations, such as a highlighted title bar. The active Window is always either the focused Window, or the first Frame or Dialog that is an owner of the focused Window.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.WindowEvent.WINDOW_DEACTIVATED\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WINDOW_GAINED_FOCUS",
      "comment": "The window-gained-focus event type. This event is delivered when the Window becomes the focused Window, which means that the Window, or one of its subcomponents, will receive keyboard events.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.WindowEvent.WINDOW_GAINED_FOCUS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WINDOW_LOST_FOCUS",
      "comment": "The window-lost-focus event type. This event is delivered when a Window is no longer the focused Window, which means keyboard events will no longer be delivered to the Window or any of its subcomponents.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.WindowEvent.WINDOW_LOST_FOCUS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WINDOW_STATE_CHANGED",
      "comment": "The window-state-changed event type. This event is delivered when a Window\u0027s state is changed by virtue of it being iconified, maximized etc.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.WindowEvent.WINDOW_STATE_CHANGED\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WINDOW_LAST",
      "comment": "The last number in the range of ids used for window events.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.event.WindowEvent.WINDOW_LAST\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Window",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getWindow",
      "comment": "Returns the originator of the event.",
      "tagMap": {
        "return": [
          "the Window object that originated the event"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Window",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOppositeWindow",
      "comment": "Returns the other Window involved in this focus or activation change. For a WINDOW_ACTIVATED or WINDOW_GAINED_FOCUS event, this is the Window that lost activation or focus. For a WINDOW_DEACTIVATED or WINDOW_LOST_FOCUS event, this is the Window that gained activation or focus. For any other type of WindowEvent, or if the focus or activation change occurs with a native application, with a Java application in a different VM or context, or with no other Window, null is returned.",
      "tagMap": {
        "return": [
          "the other Window involved in the focus or activation change, or null"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOldState",
      "comment": "For WINDOW_STATE_CHANGED events returns the previous state of the window. The state is represented as a bitwise mask. NORMAL Indicates that no state bits are set. ICONIFIED MAXIMIZED_HORIZ MAXIMIZED_VERT MAXIMIZED_BOTH Concatenates MAXIMIZED_HORIZ and MAXIMIZED_VERT.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Frame.html#getExtendedState()\"\u003e\u003ccode\u003eFrame.getExtendedState()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a bitwise mask of the previous window state"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNewState",
      "comment": "For WINDOW_STATE_CHANGED events returns the new state of the window. The state is represented as a bitwise mask. NORMAL Indicates that no state bits are set. ICONIFIED MAXIMIZED_HORIZ MAXIMIZED_VERT MAXIMIZED_BOTH Concatenates MAXIMIZED_HORIZ and MAXIMIZED_VERT.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Frame.html#getExtendedState()\"\u003e\u003ccode\u003eFrame.getExtendedState()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a bitwise mask of the new window state"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "paramString",
      "comment": "Returns a parameter string identifying this event. This method is useful for event-logging and for debugging.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/ComponentEvent.html#paramString()\"\u003eparamString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/ComponentEvent.html\" title\u003d\"class in java.awt.event\"\u003eComponentEvent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string identifying the event and its attributes"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.Window",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        },
        {
          "type": {
            "name": "java.awt.Window",
            "type": "Class"
          },
          "field": {
            "name": "opposite"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "oldState"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "newState"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a WindowEvent object. This method throws an IllegalArgumentException if source is null.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowEvent.html#getWindow()\"\u003e\u003ccode\u003egetWindow()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTEvent.html#getID()\"\u003e\u003ccode\u003eAWTEvent.getID()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowEvent.html#getOppositeWindow()\"\u003e\u003ccode\u003egetOppositeWindow()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowEvent.html#getOldState()\"\u003e\u003ccode\u003egetOldState()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowEvent.html#getNewState()\"\u003e\u003ccode\u003egetNewState()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - The \n\u003ccode\u003eWindow\u003c/code\u003e object that originated the event",
          "\u003ccode\u003eid\u003c/code\u003e - An integer indicating the type of event. For information on allowable values, see the class description for \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eWindowEvent\u003c/code\u003e\u003c/a\u003e",
          "\u003ccode\u003eopposite\u003c/code\u003e - The other window involved in the focus or activation change, or \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003eoldState\u003c/code\u003e - Previous state of the window for window state change event. See \n\u003ccode\u003e#getOldState()\u003c/code\u003e for allowable values",
          "\u003ccode\u003enewState\u003c/code\u003e - New state of the window for window state change event. See \n\u003ccode\u003e#getNewState()\u003c/code\u003e for allowable values"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esource\u003c/code\u003e is null"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.Window",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        },
        {
          "type": {
            "name": "java.awt.Window",
            "type": "Class"
          },
          "field": {
            "name": "opposite"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a WindowEvent object with the specified opposite Window. The opposite Window is the other Window involved in this focus or activation change. For a WINDOW_ACTIVATED or WINDOW_GAINED_FOCUS event, this is the Window that lost activation or focus. For a WINDOW_DEACTIVATED or WINDOW_LOST_FOCUS event, this is the Window that gained activation or focus. If this focus change occurs with a native application, with a Java application in a different VM, or with no other Window, then the opposite Window is null. This method throws an IllegalArgumentException if source is null.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowEvent.html#getWindow()\"\u003e\u003ccode\u003egetWindow()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTEvent.html#getID()\"\u003e\u003ccode\u003eAWTEvent.getID()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowEvent.html#getOppositeWindow()\"\u003e\u003ccode\u003egetOppositeWindow()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - The \n\u003ccode\u003eWindow\u003c/code\u003e object that originated the event",
          "\u003ccode\u003eid\u003c/code\u003e - An integer indicating the type of event. For information on allowable values, see the class description for \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eWindowEvent\u003c/code\u003e\u003c/a\u003e. It is expected that this constructor will not be used for other then \n\u003ccode\u003eWINDOW_ACTIVATED\u003c/code\u003e,\n\u003ccode\u003eWINDOW_DEACTIVATED\u003c/code\u003e, \n\u003ccode\u003eWINDOW_GAINED_FOCUS\u003c/code\u003e, or \n\u003ccode\u003eWINDOW_LOST_FOCUS\u003c/code\u003e. \n\u003ccode\u003eWindowEvent\u003c/code\u003e types, because the opposite \n\u003ccode\u003eWindow\u003c/code\u003e of other event types will always be \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003eopposite\u003c/code\u003e - The other \n\u003ccode\u003eWindow\u003c/code\u003e involved in the focus or activation change, or \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esource\u003c/code\u003e is null"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.Window",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "oldState"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "newState"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a WindowEvent object with the specified previous and new window states. This method throws an IllegalArgumentException if source is null.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowEvent.html#getWindow()\"\u003e\u003ccode\u003egetWindow()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTEvent.html#getID()\"\u003e\u003ccode\u003eAWTEvent.getID()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowEvent.html#getOldState()\"\u003e\u003ccode\u003egetOldState()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowEvent.html#getNewState()\"\u003e\u003ccode\u003egetNewState()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - The \n\u003ccode\u003eWindow\u003c/code\u003e object that originated the event",
          "\u003ccode\u003eid\u003c/code\u003e - An integer indicating the type of event. For information on allowable values, see the class description for \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eWindowEvent\u003c/code\u003e\u003c/a\u003e. It is expected that this constructor will not be used for other then \n\u003ccode\u003eWINDOW_STATE_CHANGED\u003c/code\u003e \n\u003ccode\u003eWindowEvent\u003c/code\u003e types, because the previous and new window states are meaningless for other event types.",
          "\u003ccode\u003eoldState\u003c/code\u003e - An integer representing the previous window state. See \n\u003ccode\u003e#getOldState()\u003c/code\u003e for allowable values",
          "\u003ccode\u003enewState\u003c/code\u003e - An integer representing the new window state. See \n\u003ccode\u003e#getNewState()\u003c/code\u003e for allowable values"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esource\u003c/code\u003e is null"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.Window",
            "type": "Class"
          },
          "field": {
            "name": "source"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a WindowEvent object. This method throws an IllegalArgumentException if source is null.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowEvent.html#getWindow()\"\u003e\u003ccode\u003egetWindow()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTEvent.html#getID()\"\u003e\u003ccode\u003eAWTEvent.getID()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esource\u003c/code\u003e - The \n\u003ccode\u003eWindow\u003c/code\u003e object that originated the event",
          "\u003ccode\u003eid\u003c/code\u003e - An integer indicating the type of event. For information on allowable values, see the class description for \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eWindowEvent\u003c/code\u003e\u003c/a\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esource\u003c/code\u003e is null"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.event.WindowEvent",
  "comment": "A low-level event that indicates that a window has changed its status. This low-level event is generated by a Window object when it is opened, closed, activated, deactivated, iconified, or deiconified, or when focus is transferred into or out of the Window. \n\u003cp\u003e The event is passed to every \u003ccode\u003eWindowListener\u003c/code\u003e or \u003ccode\u003eWindowAdapter\u003c/code\u003e object which registered to receive such events using the window\u0027s \u003ccode\u003eaddWindowListener\u003c/code\u003e method. (\u003ccode\u003eWindowAdapter\u003c/code\u003e objects implement the \u003ccode\u003eWindowListener\u003c/code\u003e interface.) Each such listener object gets this \u003ccode\u003eWindowEvent\u003c/code\u003e when the event occurs. \u003c/p\u003e\n\u003cp\u003e An unspecified behavior will be caused if the \u003ccode\u003eid\u003c/code\u003e parameter of any particular \u003ccode\u003eWindowEvent\u003c/code\u003e instance is not in the range from \u003ccode\u003eWINDOW_FIRST\u003c/code\u003e to \u003ccode\u003eWINDOW_LAST\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowAdapter.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eWindowAdapter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/WindowListener.html\" title\u003d\"interface in java.awt.event\"\u003e\u003ccode\u003eWindowListener\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/events/windowlistener.html\"\u003eTutorial: Writing a Window Listener\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.awt.event.WindowEvent\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}