{
  "packageName": "java.awt.event",
  "simpleName": "KeyListener",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.util.EventListener",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "keyTyped",
      "comment": "Invoked when a key has been typed. See the class description for KeyEvent for a definition of a key typed event.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event to be processed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "keyPressed",
      "comment": "Invoked when a key has been pressed. See the class description for KeyEvent for a definition of a key pressed event.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event to be processed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "keyReleased",
      "comment": "Invoked when a key has been released. See the class description for KeyEvent for a definition of a key released event.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event to be processed"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.awt.event.KeyListener",
  "comment": "The listener interface for receiving keyboard events (keystrokes). The class that is interested in processing a keyboard event either implements this interface (and all the methods it contains) or extends the abstract \n\u003ccode\u003eKeyAdapter\u003c/code\u003e class (overriding only the methods of interest). \n\u003cp\u003e The listener object created from that class is then registered with a component using the component\u0027s \u003ccode\u003eaddKeyListener\u003c/code\u003e method. A keyboard event is generated when a key is pressed, released, or typed. The relevant method in the listener object is then invoked, and the \u003ccode\u003eKeyEvent\u003c/code\u003e is passed to it.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyAdapter.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eKeyAdapter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eKeyEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/events/keylistener.html\"\u003eTutorial: Writing a Key Listener\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}