{
  "packageName": "java.awt.event",
  "simpleName": "MouseMotionAdapter",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.MouseEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "mouseDragged",
      "comment": "Invoked when a mouse button is pressed on a component and then dragged. Mouse drag events will continue to be delivered to the component where the first originated until the mouse button is released (regardless of whether the mouse position is within the bounds of the component).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/MouseMotionListener.html#mouseDragged(java.awt.event.MouseEvent)\"\u003emouseDragged\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/MouseMotionListener.html\" title\u003d\"interface in java.awt.event\"\u003eMouseMotionListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event to be processed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.MouseEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "mouseMoved",
      "comment": "Invoked when the mouse button has been moved on a component (with no buttons no down).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/MouseMotionListener.html#mouseMoved(java.awt.event.MouseEvent)\"\u003emouseMoved\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/MouseMotionListener.html\" title\u003d\"interface in java.awt.event\"\u003eMouseMotionListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event to be processed"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a MouseMotionAdapter.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.awt.event.MouseMotionAdapter",
  "comment": "An abstract adapter class for receiving mouse motion events. The methods in this class are empty. This class exists as convenience for creating listener objects. \n\u003cp\u003e Mouse motion events occur when a mouse is moved or dragged. (Many such events will be generated in a normal program. To track clicks and other mouse events, use the MouseAdapter.) \u003c/p\u003e\n\u003cp\u003e Extend this class to create a \u003ccode\u003eMouseEvent\u003c/code\u003e listener and override the methods for the events of interest. (If you implement the \u003ccode\u003eMouseMotionListener\u003c/code\u003e interface, you have to define all of the methods in it. This abstract class defines null methods for them all, so you can only have to define methods for events you care about.) \u003c/p\u003e\n\u003cp\u003e Create a listener object using the extended class and then register it with a component using the component\u0027s \u003ccode\u003eaddMouseMotionListener\u003c/code\u003e method. When the mouse is moved or dragged, the relevant method in the listener object is invoked and the \u003ccode\u003eMouseEvent\u003c/code\u003e is passed to it.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/MouseEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eMouseEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/MouseMotionListener.html\" title\u003d\"interface in java.awt.event\"\u003e\u003ccode\u003eMouseMotionListener\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/javase/tutorial/uiswing/events/mousemotionlistener.html\"\u003eTutorial: Writing a Mouse Motion Listener\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}