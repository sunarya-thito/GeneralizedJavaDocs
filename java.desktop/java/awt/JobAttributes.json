{
  "packageName": "java.awt",
  "simpleName": "JobAttributes",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Creates and returns a copy of this JobAttributes.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the newly created copy; it is safe to cast this Object into a \n\u003ccode\u003eJobAttributes\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.JobAttributes",
            "type": "Class"
          },
          "name": "obj",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "set",
      "comment": "Sets all of the attributes of this JobAttributes to the same values as the attributes of obj.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the \n\u003ccode\u003eJobAttributes\u003c/code\u003e to copy"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCopies",
      "comment": "Returns the number of copies the application should render for jobs using these attributes. This attribute is updated to the value chosen by the user.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an integer greater than 0."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "copies",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setCopies",
      "comment": "Specifies the number of copies the application should render for jobs using these attributes. Not specifying this attribute is equivalent to specifying 1.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecopies\u003c/code\u003e - an integer greater than 0"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ecopies\u003c/code\u003e is less than or equal to 0"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setCopiesToDefault",
      "comment": "Sets the number of copies the application should render for jobs using these attributes to the default. The default number of copies is 1.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.awt.JobAttributes$DefaultSelectionType",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDefaultSelection",
      "comment": "Specifies whether, for jobs using these attributes, the application should print all pages, the range specified by the return value of getPageRanges, or the current selection. This attribute is updated to the value chosen by the user.",
      "annotations": [],
      "tagMap": {
        "return": [
          "DefaultSelectionType.ALL, DefaultSelectionType.RANGE, or DefaultSelectionType.SELECTION"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.JobAttributes$DefaultSelectionType",
            "type": "Class"
          },
          "name": "defaultSelection",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDefaultSelection",
      "comment": "Specifies whether, for jobs using these attributes, the application should print all pages, the range specified by the return value of getPageRanges, or the current selection. Not specifying this attribute is equivalent to specifying DefaultSelectionType.ALL.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edefaultSelection\u003c/code\u003e - DefaultSelectionType.ALL, DefaultSelectionType.RANGE, or DefaultSelectionType.SELECTION."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if defaultSelection is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.JobAttributes$DestinationType",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDestination",
      "comment": "Specifies whether output will be to a printer or a file for jobs using these attributes. This attribute is updated to the value chosen by the user.",
      "annotations": [],
      "tagMap": {
        "return": [
          "DestinationType.FILE or DestinationType.PRINTER"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.JobAttributes$DestinationType",
            "type": "Class"
          },
          "name": "destination",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDestination",
      "comment": "Specifies whether output will be to a printer or a file for jobs using these attributes. Not specifying this attribute is equivalent to specifying DestinationType.PRINTER.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edestination\u003c/code\u003e - DestinationType.FILE or DestinationType.PRINTER."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if destination is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.JobAttributes$DialogType",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDialog",
      "comment": "Returns whether, for jobs using these attributes, the user should see a print dialog in which to modify the print settings, and which type of print dialog should be displayed. DialogType.COMMON denotes a cross- platform, pure Java print dialog. DialogType.NATIVE denotes the platform\u0027s native print dialog. If a platform does not support a native print dialog, the pure Java print dialog is displayed instead. DialogType.NONE specifies no print dialog (i.e., background printing). This attribute cannot be modified by, and is not subject to any limitations of, the implementation or the target printer.",
      "annotations": [],
      "tagMap": {
        "return": [
          "\u003ccode\u003eDialogType.COMMON\u003c/code\u003e, \n\u003ccode\u003eDialogType.NATIVE\u003c/code\u003e, or \n\u003ccode\u003eDialogType.NONE\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.JobAttributes$DialogType",
            "type": "Class"
          },
          "name": "dialog",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDialog",
      "comment": "Specifies whether, for jobs using these attributes, the user should see a print dialog in which to modify the print settings, and which type of print dialog should be displayed. DialogType.COMMON denotes a cross- platform, pure Java print dialog. DialogType.NATIVE denotes the platform\u0027s native print dialog. If a platform does not support a native print dialog, the pure Java print dialog is displayed instead. DialogType.NONE specifies no print dialog (i.e., background printing). Not specifying this attribute is equivalent to specifying DialogType.NATIVE.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edialog\u003c/code\u003e - DialogType.COMMON, DialogType.NATIVE, or DialogType.NONE."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if dialog is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getFileName",
      "comment": "Specifies the file name for the output file for jobs using these attributes. This attribute is updated to the value chosen by the user.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the possibly \n\u003ccode\u003enull\u003c/code\u003e file name"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "fileName",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setFileName",
      "comment": "Specifies the file name for the output file for jobs using these attributes. Default is platform-dependent and implementation-defined.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efileName\u003c/code\u003e - the possibly null file name."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getFromPage",
      "comment": "Returns, for jobs using these attributes, the first page to be printed, if a range of pages is to be printed. This attribute is updated to the value chosen by the user. An application should ignore this attribute on output, unless the return value of the getDefaultSelection method is DefaultSelectionType.RANGE. An application should honor the return value of getPageRanges over the return value of this method, if possible.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an integer greater than zero and less than or equal to \n\u003ci\u003etoPage\u003c/i\u003e and greater than or equal to \n\u003ci\u003eminPage\u003c/i\u003e and less than or equal to \n\u003ci\u003emaxPage\u003c/i\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "fromPage",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setFromPage",
      "comment": "Specifies, for jobs using these attributes, the first page to be printed, if a range of pages is to be printed. If this attribute is not specified, then the values from the pageRanges attribute are used. If pageRanges and either or both of fromPage and toPage are specified, pageRanges takes precedence. Specifying none of pageRanges, fromPage, or toPage is equivalent to calling setPageRanges(new int[][] { new int[] { minPage } });",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efromPage\u003c/code\u003e - an integer greater than zero and less than or equal to \n\u003ci\u003etoPage\u003c/i\u003e and greater than or equal to \n\u003ci\u003eminPage\u003c/i\u003e and less than or equal to \n\u003ci\u003emaxPage\u003c/i\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if one or more of the above conditions is violated."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMaxPage",
      "comment": "Specifies the maximum value the user can specify as the last page to be printed for jobs using these attributes. This attribute cannot be modified by, and is not subject to any limitations of, the implementation or the target printer.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an integer greater than zero and greater than or equal to \n\u003ci\u003eminPage\u003c/i\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "maxPage",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMaxPage",
      "comment": "Specifies the maximum value the user can specify as the last page to be printed for jobs using these attributes. Not specifying this attribute is equivalent to specifying Integer.MAX_VALUE.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emaxPage\u003c/code\u003e - an integer greater than zero and greater than or equal to \n\u003ci\u003eminPage\u003c/i\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if one or more of the above conditions is violated"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMinPage",
      "comment": "Specifies the minimum value the user can specify as the first page to be printed for jobs using these attributes. This attribute cannot be modified by, and is not subject to any limitations of, the implementation or the target printer.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an integer greater than zero and less than or equal to \n\u003ci\u003emaxPage\u003c/i\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "minPage",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMinPage",
      "comment": "Specifies the minimum value the user can specify as the first page to be printed for jobs using these attributes. Not specifying this attribute is equivalent to specifying 1.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eminPage\u003c/code\u003e - an integer greater than zero and less than or equal to \n\u003ci\u003emaxPage\u003c/i\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if one or more of the above conditions is violated."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.JobAttributes$MultipleDocumentHandlingType",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMultipleDocumentHandling",
      "comment": "Specifies the handling of multiple copies, including collation, for jobs using these attributes. This attribute is updated to the value chosen by the user.",
      "annotations": [],
      "tagMap": {
        "return": [
          "MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_COLLATED_COPIES or MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.JobAttributes$MultipleDocumentHandlingType",
            "type": "Class"
          },
          "name": "multipleDocumentHandling",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMultipleDocumentHandling",
      "comment": "Specifies the handling of multiple copies, including collation, for jobs using these attributes. Not specifying this attribute is equivalent to specifying MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emultipleDocumentHandling\u003c/code\u003e - MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_COLLATED_COPIES or MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if multipleDocumentHandling is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMultipleDocumentHandlingToDefault",
      "comment": "Sets the handling of multiple copies, including collation, for jobs using these attributes to the default. The default handling is MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class",
        "arrayDimensions": 2
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPageRanges",
      "comment": "Specifies, for jobs using these attributes, the ranges of pages to be printed, if a range of pages is to be printed. All range numbers are inclusive. This attribute is updated to the value chosen by the user. An application should ignore this attribute on output, unless the return value of the getDefaultSelection method is DefaultSelectionType.RANGE.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an array of integer arrays of 2 elements. An array is interpreted as a range spanning all pages including and between the specified pages. Ranges must be in ascending order and must not overlap. Specified page numbers cannot be less than \n\u003ci\u003eminPage\u003c/i\u003e nor greater than \n\u003ci\u003emaxPage\u003c/i\u003e. For example: (new int[][] { new int[] { 1, 3 }, new int[] { 5, 5 }, new int[] { 15, 19 } }), specifies pages 1, 2, 3, 5, 15, 16, 17, 18, and 19."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": 2
          },
          "name": "pageRanges",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPageRanges",
      "comment": "Specifies, for jobs using these attributes, the ranges of pages to be printed, if a range of pages is to be printed. All range numbers are inclusive. If this attribute is not specified, then the values from the fromPage and toPages attributes are used. If pageRanges and either or both of fromPage and toPage are specified, pageRanges takes precedence. Specifying none of pageRanges, fromPage, or toPage is equivalent to calling setPageRanges(new int[][] { new int[] { minPage, minPage } });",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epageRanges\u003c/code\u003e - an array of integer arrays of 2 elements. An array is interpreted as a range spanning all pages including and between the specified pages. Ranges must be in ascending order and must not overlap. Specified page numbers cannot be less than \n\u003ci\u003eminPage\u003c/i\u003e nor greater than \n\u003ci\u003emaxPage\u003c/i\u003e. For example: (new int[][] { new int[] { 1, 3 }, new int[] { 5, 5 }, new int[] { 15, 19 } }), specifies pages 1, 2, 3, 5, 15, 16, 17, 18, and 19. Note that (new int[][] { new int[] { 1, 1 }, new int[] { 1, 2 } }), is an invalid set of page ranges because the two ranges overlap."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if one or more of the above conditions is violated."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPrinter",
      "comment": "Returns the destination printer for jobs using these attributes. This attribute is updated to the value chosen by the user.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the possibly null printer name."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "printer",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPrinter",
      "comment": "Specifies the destination printer for jobs using these attributes. Default is platform-dependent and implementation-defined.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eprinter\u003c/code\u003e - the possibly null printer name."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.JobAttributes$SidesType",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSides",
      "comment": "Returns how consecutive pages should be imposed upon the sides of the print medium for jobs using these attributes. SidesType.ONE_SIDED imposes each consecutive page upon the same side of consecutive media sheets. This imposition is sometimes called simplex. SidesType.TWO_SIDED_LONG_EDGE imposes each consecutive pair of pages upon front and back sides of consecutive media sheets, such that the orientation of each pair of pages on the medium would be correct for the reader as if for binding on the long edge. This imposition is sometimes called duplex. SidesType.TWO_SIDED_SHORT_EDGE imposes each consecutive pair of pages upon front and back sides of consecutive media sheets, such that the orientation of each pair of pages on the medium would be correct for the reader as if for binding on the short edge. This imposition is sometimes called tumble. This attribute is updated to the value chosen by the user.",
      "annotations": [],
      "tagMap": {
        "return": [
          "SidesType.ONE_SIDED, SidesType.TWO_SIDED_LONG_EDGE, or SidesType.TWO_SIDED_SHORT_EDGE."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.JobAttributes$SidesType",
            "type": "Class"
          },
          "name": "sides",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSides",
      "comment": "Specifies how consecutive pages should be imposed upon the sides of the print medium for jobs using these attributes. SidesType.ONE_SIDED imposes each consecutive page upon the same side of consecutive media sheets. This imposition is sometimes called simplex. SidesType.TWO_SIDED_LONG_EDGE imposes each consecutive pair of pages upon front and back sides of consecutive media sheets, such that the orientation of each pair of pages on the medium would be correct for the reader as if for binding on the long edge. This imposition is sometimes called duplex. SidesType.TWO_SIDED_SHORT_EDGE imposes each consecutive pair of pages upon front and back sides of consecutive media sheets, such that the orientation of each pair of pages on the medium would be correct for the reader as if for binding on the short edge. This imposition is sometimes called tumble. Not specifying this attribute is equivalent to specifying SidesType.ONE_SIDED.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003esides\u003c/code\u003e - SidesType.ONE_SIDED, SidesType.TWO_SIDED_LONG_EDGE, or SidesType.TWO_SIDED_SHORT_EDGE."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if sides is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSidesToDefault",
      "comment": "Sets how consecutive pages should be imposed upon the sides of the print medium for jobs using these attributes to the default. The default imposition is SidesType.ONE_SIDED.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getToPage",
      "comment": "Returns, for jobs using these attributes, the last page (inclusive) to be printed, if a range of pages is to be printed. This attribute is updated to the value chosen by the user. An application should ignore this attribute on output, unless the return value of the getDefaultSelection method is DefaultSelectionType.RANGE. An application should honor the return value of getPageRanges over the return value of this method, if possible.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an integer greater than zero and greater than or equal to \n\u003ci\u003etoPage\u003c/i\u003e and greater than or equal to \n\u003ci\u003eminPage\u003c/i\u003e and less than or equal to \n\u003ci\u003emaxPage\u003c/i\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "toPage",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setToPage",
      "comment": "Specifies, for jobs using these attributes, the last page (inclusive) to be printed, if a range of pages is to be printed. If this attribute is not specified, then the values from the pageRanges attribute are used. If pageRanges and either or both of fromPage and toPage are specified, pageRanges takes precedence. Specifying none of pageRanges, fromPage, or toPage is equivalent to calling setPageRanges(new int[][] { new int[] { minPage } });",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etoPage\u003c/code\u003e - an integer greater than zero and greater than or equal to \n\u003ci\u003efromPage\u003c/i\u003e and greater than or equal to \n\u003ci\u003eminPage\u003c/i\u003e and less than or equal to \n\u003ci\u003emaxPage\u003c/i\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if one or more of the above conditions is violated."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "obj",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Determines whether two JobAttributes are equal to each other. Two JobAttributes are equal if and only if each of their attributes are equal. Attributes of enumeration type are equal if and only if the fields refer to the same unique enumeration object. A set of page ranges is equal if and only if the sets are of equal length, each range enumerates the same pages, and the ranges are in the same order.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object whose equality will be checked."
        ],
        "return": [
          "whether obj is equal to this JobAttribute according to the above criteria."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns a hash code value for this JobAttributes.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the hash code."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of this JobAttributes.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the string representation."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a JobAttributes instance with default values for every attribute. The dialog defaults to DialogType.NATIVE. Min page defaults to 1. Max page defaults to Integer.MAX_VALUE. Destination defaults to DestinationType.PRINTER. Selection defaults to DefaultSelectionType.ALL. Number of copies defaults to 1. Multiple document handling defaults to MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES. Sides defaults to SidesType.ONE_SIDED. File name defaults to null.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.JobAttributes",
            "type": "Class"
          },
          "name": "obj",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a JobAttributes instance which is a copy of the supplied JobAttributes.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the \n\u003ccode\u003eJobAttributes\u003c/code\u003e to copy"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "copies",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.JobAttributes$DefaultSelectionType",
            "type": "Class"
          },
          "name": "defaultSelection",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.JobAttributes$DestinationType",
            "type": "Class"
          },
          "name": "destination",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.JobAttributes$DialogType",
            "type": "Class"
          },
          "name": "dialog",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "fileName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "maxPage",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "minPage",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.JobAttributes$MultipleDocumentHandlingType",
            "type": "Class"
          },
          "name": "multipleDocumentHandling",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": 2
          },
          "name": "pageRanges",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "printer",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.JobAttributes$SidesType",
            "type": "Class"
          },
          "name": "sides",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a JobAttributes instance with the specified values for every attribute.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecopies\u003c/code\u003e - an integer greater than 0",
          "\u003ccode\u003edefaultSelection\u003c/code\u003e - \n\u003ccode\u003eDefaultSelectionType.ALL\u003c/code\u003e, \n\u003ccode\u003eDefaultSelectionType.RANGE\u003c/code\u003e, or \n\u003ccode\u003eDefaultSelectionType.SELECTION\u003c/code\u003e",
          "\u003ccode\u003edestination\u003c/code\u003e - \n\u003ccode\u003eDestinationType.FILE\u003c/code\u003e or \n\u003ccode\u003eDestinationType.PRINTER\u003c/code\u003e",
          "\u003ccode\u003edialog\u003c/code\u003e - \n\u003ccode\u003eDialogType.COMMON\u003c/code\u003e, \n\u003ccode\u003eDialogType.NATIVE\u003c/code\u003e, or \n\u003ccode\u003eDialogType.NONE\u003c/code\u003e",
          "\u003ccode\u003efileName\u003c/code\u003e - the possibly \n\u003ccode\u003enull\u003c/code\u003e file name",
          "\u003ccode\u003emaxPage\u003c/code\u003e - an integer greater than zero and greater than or equal to \n\u003ci\u003eminPage\u003c/i\u003e",
          "\u003ccode\u003eminPage\u003c/code\u003e - an integer greater than zero and less than or equal to \n\u003ci\u003emaxPage\u003c/i\u003e",
          "\u003ccode\u003emultipleDocumentHandling\u003c/code\u003e - \n\u003ccode\u003eMultipleDocumentHandlingType.SEPARATE_DOCUMENTS_COLLATED_COPIES\u003c/code\u003e or \n\u003ccode\u003eMultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES\u003c/code\u003e",
          "\u003ccode\u003epageRanges\u003c/code\u003e - an array of integer arrays of two elements; an array is interpreted as a range spanning all pages including and between the specified pages; ranges must be in ascending order and must not overlap; specified page numbers cannot be less than \n\u003ci\u003eminPage\u003c/i\u003e nor greater than \n\u003ci\u003emaxPage\u003c/i\u003e; for example: \n\u003cpre\u003e          (new int[][] { new int[] { 1, 3 }, new int[] { 5, 5 },\n                         new int[] { 15, 19 } }),\n          \u003c/pre\u003e specifies pages 1, 2, 3, 5, 15, 16, 17, 18, and 19. Note that (\n\u003ccode\u003enew int[][] { new int[] { 1, 1 }, new int[] { 1, 2 } }\u003c/code\u003e), is an invalid set of page ranges because the two ranges overlap",
          "\u003ccode\u003eprinter\u003c/code\u003e - the possibly \n\u003ccode\u003enull\u003c/code\u003e printer name",
          "\u003ccode\u003esides\u003c/code\u003e - \n\u003ccode\u003eSidesType.ONE_SIDED\u003c/code\u003e, \n\u003ccode\u003eSidesType.TWO_SIDED_LONG_EDGE\u003c/code\u003e, or \n\u003ccode\u003eSidesType.TWO_SIDED_SHORT_EDGE\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if one or more of the above conditions is violated"
        ]
      }
    }
  ],
  "innerClasses": [
    "java.awt.JobAttributes$DialogType",
    "java.awt.JobAttributes$DestinationType",
    "java.awt.JobAttributes$DefaultSelectionType",
    "java.awt.JobAttributes$SidesType",
    "java.awt.JobAttributes$MultipleDocumentHandlingType"
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "java.awt.JobAttributes",
  "comment": "A set of attributes which control a print job. \n\u003cp\u003e Instances of this class control the number of copies, default selection, destination, print dialog, file and printer names, page ranges, multiple document handling (including collation), and multi-page imposition (such as duplex) of every print job which uses the instance. Attribute names are compliant with the Internet Printing Protocol (IPP) 1.1 where possible. Attribute values are partially compliant where possible. \u003c/p\u003e\n\u003cp\u003e To use a method which takes an inner class type, pass a reference to one of the constant fields of the inner class. Client code cannot create new instances of the inner class types because none of those classes has a public constructor. For example, to set the print dialog type to the cross-platform, pure Java print dialog, use the following code: \u003c/p\u003e\n\u003cpre\u003e import java.awt.JobAttributes;\n\n public class PureJavaPrintDialogExample {\n     public void setPureJavaPrintDialog(JobAttributes jobAttributes) {\n         jobAttributes.setDialog(JobAttributes.DialogType.COMMON);\n     }\n }\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e Every IPP attribute which supports an \u003ci\u003eattributeName\u003c/i\u003e-default value has a corresponding \u003ccode\u003eset\u003ci\u003eattributeName\u003c/i\u003eToDefault\u003c/code\u003e method. Default value fields are not provided.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.3"
    ]
  }
}