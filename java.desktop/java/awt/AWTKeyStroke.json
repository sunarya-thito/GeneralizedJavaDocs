{
  "packageName": "java.awt",
  "simpleName": "AWTKeyStroke",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "subclass"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 12,
      "name": "registerSubclass",
      "comment": "The method has no effect and is only left present to avoid introducing a binary incompatibility.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003esubclass\u003c/code\u003e - the new Class of which the factory methods should create instances"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.AWTKeyStroke",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class"
          },
          "field": {
            "name": "keyChar"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAWTKeyStroke",
      "comment": "Returns a shared instance of an AWTKeyStroke that represents a KEY_TYPED event for the specified character.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekeyChar\u003c/code\u003e - the character value for a keyboard key"
        ],
        "return": [
          "an \n\u003ccode\u003eAWTKeyStroke\u003c/code\u003e object for that key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.AWTKeyStroke",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Character",
            "type": "Class"
          },
          "field": {
            "name": "keyChar"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "modifiers"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAWTKeyStroke",
      "comment": "Returns a shared instance of an AWTKeyStroke that represents a KEY_TYPED event for the specified Character object and a set of modifiers. Note that the first parameter is of type Character rather than char. This is to avoid inadvertent clashes with calls to getAWTKeyStroke(int keyCode, int modifiers). The modifiers consist of any combination of following: java.awt.event.InputEvent.SHIFT_DOWN_MASK java.awt.event.InputEvent.CTRL_DOWN_MASK java.awt.event.InputEvent.META_DOWN_MASK java.awt.event.InputEvent.ALT_DOWN_MASK java.awt.event.InputEvent.ALT_GRAPH_DOWN_MASK The old modifiers listed below also can be used, but they are mapped to _DOWN_ modifiers. java.awt.event.InputEvent.SHIFT_MASK java.awt.event.InputEvent.CTRL_MASK java.awt.event.InputEvent.META_MASK java.awt.event.InputEvent.ALT_MASK java.awt.event.InputEvent.ALT_GRAPH_MASK also can be used, but they are mapped to _DOWN_ modifiers. Since these numbers are all different powers of two, any combination of them is an integer in which each bit represents a different modifier key. Use 0 to specify no modifiers.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/InputEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eInputEvent\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekeyChar\u003c/code\u003e - the Character object for a keyboard character",
          "\u003ccode\u003emodifiers\u003c/code\u003e - a bitwise-ored combination of any modifiers"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ekeyChar\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eAWTKeyStroke\u003c/code\u003e object for that key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.AWTKeyStroke",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "keyCode"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "modifiers"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "onKeyRelease"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAWTKeyStroke",
      "comment": "Returns a shared instance of an AWTKeyStroke, given a numeric key code and a set of modifiers, specifying whether the key is activated when it is pressed or released. The \"virtual key\" constants defined in java.awt.event.KeyEvent can be used to specify the key code. For example: java.awt.event.KeyEvent.VK_ENTER java.awt.event.KeyEvent.VK_TAB java.awt.event.KeyEvent.VK_SPACE Alternatively, the key code may be obtained by calling java.awt.event.KeyEvent.getExtendedKeyCodeForChar. The modifiers consist of any combination of: java.awt.event.InputEvent.SHIFT_DOWN_MASK java.awt.event.InputEvent.CTRL_DOWN_MASK java.awt.event.InputEvent.META_DOWN_MASK java.awt.event.InputEvent.ALT_DOWN_MASK java.awt.event.InputEvent.ALT_GRAPH_DOWN_MASK The old modifiers java.awt.event.InputEvent.SHIFT_MASK java.awt.event.InputEvent.CTRL_MASK java.awt.event.InputEvent.META_MASK java.awt.event.InputEvent.ALT_MASK java.awt.event.InputEvent.ALT_GRAPH_MASK also can be used, but they are mapped to _DOWN_ modifiers. Since these numbers are all different powers of two, any combination of them is an integer in which each bit represents a different modifier key. Use 0 to specify no modifiers.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eKeyEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/InputEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eInputEvent\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekeyCode\u003c/code\u003e - an int specifying the numeric code for a keyboard key",
          "\u003ccode\u003emodifiers\u003c/code\u003e - a bitwise-ored combination of any modifiers",
          "\u003ccode\u003eonKeyRelease\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the \n\u003ccode\u003eAWTKeyStroke\u003c/code\u003e should represent a key release; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "return": [
          "an AWTKeyStroke object for that key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.AWTKeyStroke",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "keyCode"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "modifiers"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAWTKeyStroke",
      "comment": "Returns a shared instance of an AWTKeyStroke, given a numeric key code and a set of modifiers. The returned AWTKeyStroke will correspond to a key press. The \"virtual key\" constants defined in java.awt.event.KeyEvent can be used to specify the key code. For example: java.awt.event.KeyEvent.VK_ENTER java.awt.event.KeyEvent.VK_TAB java.awt.event.KeyEvent.VK_SPACE The modifiers consist of any combination of: java.awt.event.InputEvent.SHIFT_DOWN_MASK java.awt.event.InputEvent.CTRL_DOWN_MASK java.awt.event.InputEvent.META_DOWN_MASK java.awt.event.InputEvent.ALT_DOWN_MASK java.awt.event.InputEvent.ALT_GRAPH_DOWN_MASK The old modifiers java.awt.event.InputEvent.SHIFT_MASK java.awt.event.InputEvent.CTRL_MASK java.awt.event.InputEvent.META_MASK java.awt.event.InputEvent.ALT_MASK java.awt.event.InputEvent.ALT_GRAPH_MASK also can be used, but they are mapped to _DOWN_ modifiers. Since these numbers are all different powers of two, any combination of them is an integer in which each bit represents a different modifier key. Use 0 to specify no modifiers.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eKeyEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/InputEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eInputEvent\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekeyCode\u003c/code\u003e - an int specifying the numeric code for a keyboard key",
          "\u003ccode\u003emodifiers\u003c/code\u003e - a bitwise-ored combination of any modifiers"
        ],
        "return": [
          "an \n\u003ccode\u003eAWTKeyStroke\u003c/code\u003e object for that key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.AWTKeyStroke",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.KeyEvent",
            "type": "Class"
          },
          "field": {
            "name": "anEvent"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAWTKeyStrokeForEvent",
      "comment": "Returns an AWTKeyStroke which represents the stroke which generated a given KeyEvent. This method obtains the keyChar from a KeyTyped event, and the keyCode from a KeyPressed or KeyReleased event. The KeyEvent modifiers are obtained for all three types of KeyEvent.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eanEvent\u003c/code\u003e - the \n\u003ccode\u003eKeyEvent\u003c/code\u003e from which to obtain the \n\u003ccode\u003eAWTKeyStroke\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eanEvent\u003c/code\u003e is null"
        ],
        "return": [
          "the \n\u003ccode\u003eAWTKeyStroke\u003c/code\u003e that precipitated the event"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.AWTKeyStroke",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAWTKeyStroke",
      "comment": "Parses a string and returns an AWTKeyStroke. The string must have the following syntax:     \u003cmodifiers\u003e* (\u003ctypedID\u003e | \u003cpressedReleasedID\u003e)\n\n    modifiers :\u003d shift | control | ctrl | meta | alt | altGraph\n    typedID :\u003d typed \u003ctypedKey\u003e\n    typedKey :\u003d string of length 1 giving Unicode character.\n    pressedReleasedID :\u003d (pressed | released) key\n    key :\u003d KeyEvent key code name, i.e. the name following \"VK_\".\n If typed, pressed or released is not specified, pressed is assumed. Here are some examples:      \"INSERT\" \u003d\u003e getAWTKeyStroke(KeyEvent.VK_INSERT, 0);\n     \"control DELETE\" \u003d\u003e getAWTKeyStroke(KeyEvent.VK_DELETE, InputEvent.CTRL_MASK);\n     \"alt shift X\" \u003d\u003e getAWTKeyStroke(KeyEvent.VK_X, InputEvent.ALT_MASK | InputEvent.SHIFT_MASK);\n     \"alt shift released X\" \u003d\u003e getAWTKeyStroke(KeyEvent.VK_X, InputEvent.ALT_MASK | InputEvent.SHIFT_MASK, true);\n     \"typed a\" \u003d\u003e getAWTKeyStroke(\u0027a\u0027);",
      "tagMap": {
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - a String formatted as described above"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003es\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, or is formatted incorrectly"
        ],
        "return": [
          "an \n\u003ccode\u003eAWTKeyStroke\u003c/code\u003e object for that String"
        ]
      }
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getKeyChar",
      "comment": "Returns the character for this AWTKeyStroke.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTKeyStroke.html#getAWTKeyStroke(char)\"\u003e\u003ccode\u003egetAWTKeyStroke(char)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyEvent.html#getKeyChar()\"\u003e\u003ccode\u003eKeyEvent.getKeyChar()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a char value"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getKeyCode",
      "comment": "Returns the numeric key code for this AWTKeyStroke.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTKeyStroke.html#getAWTKeyStroke(int,int)\"\u003e\u003ccode\u003egetAWTKeyStroke(int,int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyEvent.html#getKeyCode()\"\u003e\u003ccode\u003eKeyEvent.getKeyCode()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an int containing the key code value"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getModifiers",
      "comment": "Returns the modifier keys for this AWTKeyStroke.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTKeyStroke.html#getAWTKeyStroke(int,int)\"\u003e\u003ccode\u003egetAWTKeyStroke(int,int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an int containing the modifiers"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "isOnKeyRelease",
      "comment": "Returns whether this AWTKeyStroke represents a key release.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTKeyStroke.html#getAWTKeyStroke(int,int,boolean)\"\u003e\u003ccode\u003egetAWTKeyStroke(int,int,boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this \n\u003ccode\u003eAWTKeyStroke\u003c/code\u003e represents a key release; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getKeyEventType",
      "comment": "Returns the type of KeyEvent which corresponds to this AWTKeyStroke.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/KeyEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eKeyEvent\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003eKeyEvent.KEY_PRESSED\u003c/code\u003e, \n\u003ccode\u003eKeyEvent.KEY_TYPED\u003c/code\u003e, or \n\u003ccode\u003eKeyEvent.KEY_RELEASED\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns a numeric value for this object that is likely to be unique, making it a good choice as the index value in a hash table.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an int that represents this object"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "anObject"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "equals",
      "comment": "Returns true if this object is identical to the specified object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eanObject\u003c/code\u003e - the Object to compare this object to"
        ],
        "return": [
          "true if the objects are identical"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string that displays and identifies this object\u0027s properties. The String returned by this method can be passed as a parameter to getAWTKeyStroke(String) to produce a key stroke equal to this key stroke.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTKeyStroke.html#getAWTKeyStroke(java.lang.String)\"\u003e\u003ccode\u003egetAWTKeyStroke(String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a String representation of this object"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.ObjectStreamException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "readResolve",
      "comment": "Returns a cached instance of AWTKeyStroke (or a subclass of AWTKeyStroke) which is equal to this instance.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/ObjectStreamException.html\" title\u003d\"class in java.io\"\u003eObjectStreamException\u003c/a\u003e\u003c/code\u003e - if a serialization problem occurs"
        ],
        "return": [
          "a cached instance which is equal to this instance"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs an AWTKeyStroke with default values. The default values used are: AWTKeyStroke default values Property Default Value Key Char KeyEvent.CHAR_UNDEFINED Key Code KeyEvent.VK_UNDEFINED Modifiers none On key release? false AWTKeyStrokes should not be constructed by client code. Use a variant of getAWTKeyStroke instead.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTKeyStroke.html#getAWTKeyStroke(char)\"\u003e\u003ccode\u003egetAWTKeyStroke(char)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class"
          },
          "field": {
            "name": "keyChar"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "keyCode"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "modifiers"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "onKeyRelease"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs an AWTKeyStroke with the specified values. AWTKeyStrokes should not be constructed by client code. Use a variant of getAWTKeyStroke instead.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTKeyStroke.html#getAWTKeyStroke(char)\"\u003e\u003ccode\u003egetAWTKeyStroke(char)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekeyChar\u003c/code\u003e - the character value for a keyboard key",
          "\u003ccode\u003ekeyCode\u003c/code\u003e - the key code for this \n\u003ccode\u003eAWTKeyStroke\u003c/code\u003e",
          "\u003ccode\u003emodifiers\u003c/code\u003e - a bitwise-ored combination of any modifiers",
          "\u003ccode\u003eonKeyRelease\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if this \n\u003ccode\u003eAWTKeyStroke\u003c/code\u003e corresponds to a key release; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.AWTKeyStroke",
  "comment": "An \n\u003ccode\u003eAWTKeyStroke\u003c/code\u003e represents a key action on the keyboard, or equivalent input device. \n\u003ccode\u003eAWTKeyStroke\u003c/code\u003es can correspond to only a press or release of a particular key, just as \n\u003ccode\u003eKEY_PRESSED\u003c/code\u003e and \n\u003ccode\u003eKEY_RELEASED KeyEvent\u003c/code\u003es do; alternately, they can correspond to typing a specific Java character, just as \n\u003ccode\u003eKEY_TYPED KeyEvent\u003c/code\u003es do. In all cases, \n\u003ccode\u003eAWTKeyStroke\u003c/code\u003es can specify modifiers (alt, shift, control, meta, altGraph, or a combination thereof) which must be present during the action for an exact match. \n\u003cp\u003e \u003ccode\u003eAWTKeyStrokes\u003c/code\u003e are immutable, and are intended to be unique. Client code should never create an \u003ccode\u003eAWTKeyStroke\u003c/code\u003e on its own, but should instead use a variant of \u003ccode\u003egetAWTKeyStroke\u003c/code\u003e. Client use of these factory methods allows the \u003ccode\u003eAWTKeyStroke\u003c/code\u003e implementation to cache and share instances efficiently.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTKeyStroke.html#getAWTKeyStroke(char)\"\u003e\u003ccode\u003egetAWTKeyStroke(char)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.awt.AWTKeyStroke\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}