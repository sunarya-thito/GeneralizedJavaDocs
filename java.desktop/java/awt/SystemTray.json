{
  "packageName": "java.awt",
  "simpleName": "SystemTray",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.awt.SystemTray",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getSystemTray",
      "comment": "Gets the SystemTray instance that represents the desktop\u0027s tray area. This always returns the same instance per application. On some platforms the system tray may not be supported. You may use the isSupported() method to check if the system tray is supported. If a SecurityManager is installed, the AWTPermission accessSystemTray must be granted in order to get the SystemTray instance. Otherwise this method will throw a SecurityException.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/SystemTray.html#add(java.awt.TrayIcon)\"\u003e\u003ccode\u003eadd(TrayIcon)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/TrayIcon.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eTrayIcon\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/SystemTray.html#isSupported()\"\u003e\u003ccode\u003eisSupported()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkPermission(java.security.Permission)\"\u003e\u003ccode\u003eSecurityManager.checkPermission(java.security.Permission)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTPermission.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eAWTPermission\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the system tray isn\u0027t supported by the current platform",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e returns \n\u003ccode\u003etrue\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eaccessSystemTray\u003c/code\u003e permission is not granted"
        ],
        "return": [
          "the \n\u003ccode\u003eSystemTray\u003c/code\u003e instance that represents the desktop\u0027s tray area"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isSupported",
      "comment": "Returns whether the system tray is supported on the current platform. In addition to displaying the tray icon, minimal system tray support includes either a popup menu (see TrayIcon.setPopupMenu(PopupMenu)) or an action event (see TrayIcon.addActionListener(ActionListener)). Developers should not assume that all of the system tray functionality is supported. To guarantee that the tray icon\u0027s default action is always accessible, add the default action to both the action listener and the popup menu. See the example for an example of how to do this. Note: When implementing SystemTray and TrayIcon it is strongly recommended that you assign different gestures to the popup menu and an action event. Overloading a gesture for both purposes is confusing and may prevent the user from accessing one or the other.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/SystemTray.html#getSystemTray()\"\u003e\u003ccode\u003egetSystemTray()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003efalse\u003c/code\u003e if no system tray access is supported; this method returns \n\u003ccode\u003etrue\u003c/code\u003e if the minimal system tray access is supported but does not guarantee that all system tray functionality is supported for the current platform"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.AWTException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.awt.TrayIcon",
            "type": "Class"
          },
          "field": {
            "name": "trayIcon"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a TrayIcon to the SystemTray. The tray icon becomes visible in the system tray once it is added. The order in which icons are displayed in a tray is not specified - it is platform and implementation-dependent. All icons added by the application are automatically removed from the SystemTray upon application exit and also when the desktop system tray becomes unavailable.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/SystemTray.html#remove(java.awt.TrayIcon)\"\u003e\u003ccode\u003eremove(TrayIcon)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/SystemTray.html#getSystemTray()\"\u003e\u003ccode\u003egetSystemTray()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/TrayIcon.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eTrayIcon\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eImage\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etrayIcon\u003c/code\u003e - the \n\u003ccode\u003eTrayIcon\u003c/code\u003e to be added"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etrayIcon\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the same instance of a \n\u003ccode\u003eTrayIcon\u003c/code\u003e is added more than once",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AWTException.html\" title\u003d\"class in java.awt\"\u003eAWTException\u003c/a\u003e\u003c/code\u003e - if the desktop system tray is missing"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.TrayIcon",
            "type": "Class"
          },
          "field": {
            "name": "trayIcon"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the specified TrayIcon from the SystemTray. All icons added by the application are automatically removed from the SystemTray upon application exit and also when the desktop system tray becomes unavailable. If trayIcon is null or was not added to the system tray, no exception is thrown and no action is performed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/SystemTray.html#add(java.awt.TrayIcon)\"\u003e\u003ccode\u003eadd(TrayIcon)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/TrayIcon.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eTrayIcon\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etrayIcon\u003c/code\u003e - the \n\u003ccode\u003eTrayIcon\u003c/code\u003e to be removed"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.TrayIcon",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTrayIcons",
      "comment": "Returns an array of all icons added to the tray by this application. You can\u0027t access the icons added by another application. Some browsers partition applets in different code bases into separate contexts, and establish walls between these contexts. In such a scenario, only the tray icons added from this context will be returned. The returned array is a copy of the actual array and may be modified in any way without affecting the system tray. To remove a TrayIcon from the SystemTray, use the remove(TrayIcon) method.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/SystemTray.html#add(java.awt.TrayIcon)\"\u003e\u003ccode\u003eadd(TrayIcon)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/TrayIcon.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eTrayIcon\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an array of all tray icons added to this tray, or an empty array if none has been added"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTrayIconSize",
      "comment": "Returns the size, in pixels, of the space that a tray icon will occupy in the system tray. Developers may use this methods to acquire the preferred size for the image property of a tray icon before it is created. For convenience, there is a similar method TrayIcon.getSize() in the TrayIcon class.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/TrayIcon.html#setImageAutoSize(boolean)\"\u003e\u003ccode\u003eTrayIcon.setImageAutoSize(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eImage\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/TrayIcon.html#getSize()\"\u003e\u003ccode\u003eTrayIcon.getSize()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the default size of a tray icon, in pixels"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "propertyName"
          }
        },
        {
          "type": {
            "name": "java.beans.PropertyChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "listener"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addPropertyChangeListener",
      "comment": "Adds a PropertyChangeListener to the list of listeners for the specific property. The following properties are currently supported: SystemTray properties Property Description trayIcons The SystemTray\u0027s array of TrayIcon objects. The array is accessed via the getTrayIcons() method. This property is changed when a tray icon is added to (or removed from) the system tray. For example, this property is changed when the system tray becomes unavailable on the desktop and the tray icons are automatically removed. systemTray This property contains SystemTray instance when the system tray is available or null otherwise. This property is changed when the system tray becomes available or unavailable on the desktop. The property is accessed by the getSystemTray() method. The listener listens to property changes only in this context. If listener is null, no exception is thrown and no action is performed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/SystemTray.html#removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eremovePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/SystemTray.html#getPropertyChangeListeners(java.lang.String)\"\u003e\u003ccode\u003egetPropertyChangeListeners(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003epropertyName\u003c/code\u003e - the specified property",
          "\u003ccode\u003elistener\u003c/code\u003e - the property change listener to be added"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "propertyName"
          }
        },
        {
          "type": {
            "name": "java.beans.PropertyChangeListener",
            "type": "Class"
          },
          "field": {
            "name": "listener"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removePropertyChangeListener",
      "comment": "Removes a PropertyChangeListener from the listener list for a specific property. The PropertyChangeListener must be from this context. If propertyName or listener is null or invalid, no exception is thrown and no action is taken.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/SystemTray.html#addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eaddPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/SystemTray.html#getPropertyChangeListeners(java.lang.String)\"\u003e\u003ccode\u003egetPropertyChangeListeners(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003epropertyName\u003c/code\u003e - the specified property",
          "\u003ccode\u003elistener\u003c/code\u003e - the PropertyChangeListener to be removed"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.beans.PropertyChangeListener",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "propertyName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPropertyChangeListeners",
      "comment": "Returns an array of all the listeners that have been associated with the named property. Only the listeners in this context are returned.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/SystemTray.html#addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eaddPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/SystemTray.html#removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)\"\u003e\u003ccode\u003eremovePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003epropertyName\u003c/code\u003e - the specified property"
        ],
        "return": [
          "all of the \n\u003ccode\u003ePropertyChangeListener\u003c/code\u003es associated with the named property; if no such listeners have been added or if \n\u003ccode\u003epropertyName\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or invalid, an empty array is returned"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.SystemTray",
  "comment": "The \n\u003ccode\u003eSystemTray\u003c/code\u003e class represents the system tray for a desktop. On Microsoft Windows it is referred to as the \"Taskbar Status Area\", on Gnome it is referred to as the \"Notification Area\", on KDE it is referred to as the \"System Tray\". The system tray is shared by all applications running on the desktop. \n\u003cp\u003e On some platforms the system tray may not be present or may not be supported, in this case \u003ca href\u003d\"#getSystemTray()\"\u003e\u003ccode\u003egetSystemTray()\u003c/code\u003e\u003c/a\u003e throws \u003ca href\u003d\"../../../java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eUnsupportedOperationException\u003c/code\u003e\u003c/a\u003e. To detect whether the system tray is supported, use \u003ca href\u003d\"#isSupported()\"\u003e\u003ccode\u003eisSupported()\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003eSystemTray\u003c/code\u003e may contain one or more \u003ca href\u003d\"TrayIcon.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eTrayIcons\u003c/code\u003e\u003c/a\u003e, which are added to the tray using the \u003ca href\u003d\"#add(java.awt.TrayIcon)\"\u003e\u003ccode\u003eadd(java.awt.TrayIcon)\u003c/code\u003e\u003c/a\u003e method, and removed when no longer needed, using the \u003ca href\u003d\"#remove(java.awt.TrayIcon)\"\u003e\u003ccode\u003eremove(java.awt.TrayIcon)\u003c/code\u003e\u003c/a\u003e. \u003ccode\u003eTrayIcon\u003c/code\u003e consists of an image, a popup menu and a set of associated listeners. Please see the \u003ca href\u003d\"TrayIcon.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eTrayIcon\u003c/code\u003e\u003c/a\u003e class for details. \u003c/p\u003e\n\u003cp\u003eEvery Java application has a single \u003ccode\u003eSystemTray\u003c/code\u003e instance that allows the app to interface with the system tray of the desktop while the app is running. The \u003ccode\u003eSystemTray\u003c/code\u003e instance can be obtained from the \u003ca href\u003d\"#getSystemTray()\"\u003e\u003ccode\u003egetSystemTray()\u003c/code\u003e\u003c/a\u003e method. An application may not create its own instance of \u003ccode\u003eSystemTray\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003eThe following code snippet demonstrates how to access and customize the system tray: \u003c/p\u003e\n\u003cpre\u003e \u003ccode\u003e\n     \u003ca href\u003d\"TrayIcon.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eTrayIcon\u003c/code\u003e\u003c/a\u003e trayIcon \u003d null;\n     if (SystemTray.isSupported()) {\n         // get the SystemTray instance\n         SystemTray tray \u003d SystemTray.\u003ca href\u003d\"#getSystemTray()\"\u003e\u003ccode\u003egetSystemTray()\u003c/code\u003e\u003c/a\u003e;\n         // load an image\n         \u003ca href\u003d\"Image.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eImage\u003c/code\u003e\u003c/a\u003e image \u003d \u003ca href\u003d\"Toolkit.html#getImage(java.lang.String)\"\u003e\u003ccode\u003eToolkit.getDefaultToolkit().getImage\u003c/code\u003e\u003c/a\u003e(...);\n         // create a action listener to listen for default action executed on the tray icon\n         \u003ca href\u003d\"event/ActionListener.html\" title\u003d\"interface in java.awt.event\"\u003e\u003ccode\u003eActionListener\u003c/code\u003e\u003c/a\u003e listener \u003d new \u003ca href\u003d\"event/ActionListener.html\" title\u003d\"interface in java.awt.event\"\u003e\u003ccode\u003eActionListener\u003c/code\u003e\u003c/a\u003e() {\n             public void \u003ca href\u003d\"event/ActionListener.html#actionPerformed(java.awt.event.ActionEvent)\"\u003e\u003ccode\u003eactionPerformed\u003c/code\u003e\u003c/a\u003e(\u003ca href\u003d\"event/ActionEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eActionEvent\u003c/code\u003e\u003c/a\u003e e) {\n                 // execute default action of the application\n                 // ...\n             }\n         };\n         // create a popup menu\n         \u003ca href\u003d\"PopupMenu.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003ePopupMenu\u003c/code\u003e\u003c/a\u003e popup \u003d new \u003ca href\u003d\"PopupMenu.html#%3Cinit%3E(java.lang.String)\"\u003e\u003ccode\u003ePopupMenu\u003c/code\u003e\u003c/a\u003e();\n         // create menu item for the default action\n         MenuItem defaultItem \u003d new MenuItem(...);\n         defaultItem.addActionListener(listener);\n         popup.add(defaultItem);\n         /// ... add other items\n         // construct a TrayIcon\n         trayIcon \u003d new \u003ca href\u003d\"TrayIcon.html#%3Cinit%3E(java.awt.Image,java.lang.String,java.awt.PopupMenu)\"\u003e\u003ccode\u003eTrayIcon\u003c/code\u003e\u003c/a\u003e(image, \"Tray Demo\", popup);\n         // set the TrayIcon properties\n         trayIcon.\u003ca href\u003d\"TrayIcon.html#addActionListener(java.awt.event.ActionListener)\"\u003e\u003ccode\u003eaddActionListener\u003c/code\u003e\u003c/a\u003e(listener);\n         // ...\n         // add the tray image\n         try {\n             tray.\u003ca href\u003d\"#add(java.awt.TrayIcon)\"\u003e\u003ccode\u003eadd\u003c/code\u003e\u003c/a\u003e(trayIcon);\n         } catch (AWTException e) {\n             System.err.println(e);\n         }\n         // ...\n     } else {\n         // disable tray option in your application or\n         // perform other actions\n         ...\n     }\n     // ...\n     // some time later\n     // the application state has changed - update the image\n     if (trayIcon !\u003d null) {\n         trayIcon.\u003ca href\u003d\"TrayIcon.html#setImage(java.awt.Image)\"\u003e\u003ccode\u003esetImage\u003c/code\u003e\u003c/a\u003e(updatedImage);\n     }\n     // ...\n \u003c/code\u003e\n \u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/TrayIcon.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eTrayIcon\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}