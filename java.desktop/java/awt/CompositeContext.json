{
  "packageName": "java.awt",
  "simpleName": "CompositeContext",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "dispose",
      "comment": "Releases resources allocated for a context.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.Raster",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        },
        {
          "type": {
            "name": "java.awt.image.Raster",
            "type": "Class"
          },
          "field": {
            "name": "dstIn"
          }
        },
        {
          "type": {
            "name": "java.awt.image.WritableRaster",
            "type": "Class"
          },
          "field": {
            "name": "dstOut"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "compose",
      "comment": "Composes the two source Raster objects and places the result in the destination WritableRaster. Note that the destination can be the same object as either the first or second source. Note that dstIn and dstOut must be compatible with the dstColorModel passed to the createContext method of the Composite interface.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Composite.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003eComposite\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - the first source for the compositing operation",
          "\u003ccode\u003edstIn\u003c/code\u003e - the second source for the compositing operation",
          "\u003ccode\u003edstOut\u003c/code\u003e - the \n\u003ccode\u003eWritableRaster\u003c/code\u003e into which the result of the operation is stored"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.awt.CompositeContext",
  "comment": "The \n\u003ccode\u003eCompositeContext\u003c/code\u003e interface defines the encapsulated and optimized environment for a compositing operation. \n\u003ccode\u003eCompositeContext\u003c/code\u003e objects maintain state for compositing operations. In a multi-threaded environment, several contexts can exist simultaneously for a single \n\u003ca href\u003d\"Composite.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003eComposite\u003c/code\u003e\u003c/a\u003e object.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Composite.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003eComposite\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}