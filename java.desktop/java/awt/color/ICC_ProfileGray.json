{
  "packageName": "java.awt.color",
  "simpleName": "ICC_ProfileGray",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.color.ICC_Profile",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "float",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMediaWhitePoint",
      "comment": "Returns a float array of length 3 containing the X, Y, and Z components of the mediaWhitePointTag in the ICC profile.",
      "tagMap": {
        "return": [
          "an array containing the components of the mediaWhitePointTag in the ICC profile"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getGamma",
      "comment": "Returns a gamma value representing the tone reproduction curve (TRC). If the profile represents the TRC as a table rather than a single gamma value, then an exception is thrown. In this case the actual table can be obtained via getTRC(). When using a gamma value, the PCS Y component is computed as follows: \n                           gamma\n          PCSY \u003d deviceGray",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/color/ProfileDataException.html\" title\u003d\"class in java.awt.color\"\u003eProfileDataException\u003c/a\u003e\u003c/code\u003e - if the profile does not specify the TRC as a single gamma value"
        ],
        "return": [
          "the gamma value as a float"
        ]
      }
    },
    {
      "returnType": {
        "name": "short",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTRC",
      "comment": "Returns the TRC as an array of shorts. If the profile has specified the TRC as linear (gamma \u003d 1.0) or as a simple gamma value, this method throws an exception, and the getGamma() method should be used to get the gamma value. Otherwise the short array returned here represents a lookup table where the input Gray value is conceptually in the range [0.0, 1.0]. Value 0.0 maps to array index 0 and value 1.0 maps to array index length-1. Interpolation may be used to generate output values for input values which do not map exactly to an index in the array. Output values also map linearly to the range [0.0, 1.0]. Value 0.0 is represented by an array value of 0x0000 and value 1.0 by 0xFFFF, i.e. the values are really unsigned short values, although they are returned in a short array.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/color/ProfileDataException.html\" title\u003d\"class in java.awt.color\"\u003eProfileDataException\u003c/a\u003e\u003c/code\u003e - if the profile does not specify the TRC as a table"
        ],
        "return": [
          "a short array representing the TRC"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.color.ICC_ProfileGray",
  "comment": "The \n\u003ccode\u003eICC_ProfileGray\u003c/code\u003e class is a subclass of the \n\u003ccode\u003eICC_Profile\u003c/code\u003e class that represents profiles which meet the following criteria: the color space type of the profile is \n\u003ccode\u003eTYPE_GRAY\u003c/code\u003e and the profile includes the \n\u003ccode\u003egrayTRCTag\u003c/code\u003e and \n\u003ccode\u003emediaWhitePointTag\u003c/code\u003e tags. The \n\u003ccode\u003egetInstance\u003c/code\u003e methods in the \n\u003ccode\u003eICC_Profile\u003c/code\u003e class will return an \n\u003ccode\u003eICC_ProfileGray\u003c/code\u003e object when the above conditions are met. Examples of this kind of profile are monochrome input profiles, monochrome display profiles, and monochrome output profiles. \n\u003cp\u003e The advantage of this class is that it provides a lookup table that Java or native methods can use directly to optimize color conversion in some cases. \u003c/p\u003e\n\u003cp\u003e To transform from a GRAY device profile color space to the CIEXYZ Profile Connection Space, the device gray component is transformed by a lookup through the tone reproduction curve (TRC). The result is treated as the achromatic component of the PCS. \u003c/p\u003e\n\u003cpre\u003e\n \u0026nbsp;               PCSY \u003d grayTRC[deviceGray]\n\n \u003c/pre\u003e The inverse transform is done by converting the PCS Y components to device Gray via the inverse of the grayTRC.\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.awt.color.ICC_ProfileGray\"\u003eSerialized Form\u003c/a\u003e"
    ]
  }
}