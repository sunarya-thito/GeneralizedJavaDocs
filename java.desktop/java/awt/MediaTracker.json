{
  "packageName": "java.awt",
  "simpleName": "MediaTracker",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "LOADING",
      "comment": "Flag indicating that media is currently being loaded.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#statusAll(boolean)\"\u003e\u003ccode\u003estatusAll(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#statusID(int,boolean)\"\u003e\u003ccode\u003estatusID(int, boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.MediaTracker.LOADING\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ABORTED",
      "comment": "Flag indicating that the downloading of media was aborted.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#statusAll(boolean)\"\u003e\u003ccode\u003estatusAll(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#statusID(int,boolean)\"\u003e\u003ccode\u003estatusID(int, boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.MediaTracker.ABORTED\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ERRORED",
      "comment": "Flag indicating that the downloading of media encountered an error.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#statusAll(boolean)\"\u003e\u003ccode\u003estatusAll(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#statusID(int,boolean)\"\u003e\u003ccode\u003estatusID(int, boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.MediaTracker.ERRORED\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "COMPLETE",
      "comment": "Flag indicating that the downloading of media was completed successfully.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#statusAll(boolean)\"\u003e\u003ccode\u003estatusAll(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#statusID(int,boolean)\"\u003e\u003ccode\u003estatusID(int, boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.MediaTracker.COMPLETE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Image",
            "type": "Class"
          },
          "name": "image",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "id",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addImage",
      "comment": "Adds an image to the list of images being tracked by this media tracker. The image will eventually be rendered at its default (unscaled) size.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eimage\u003c/code\u003e - the image to be tracked",
          "\u003ccode\u003eid\u003c/code\u003e - an identifier used to track this image"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Image",
            "type": "Class"
          },
          "name": "image",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "id",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "w",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "h",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addImage",
      "comment": "Adds a scaled image to the list of images being tracked by this media tracker. The image will eventually be rendered at the indicated width and height.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eimage\u003c/code\u003e - the image to be tracked",
          "\u003ccode\u003eid\u003c/code\u003e - an identifier that can be used to track this image",
          "\u003ccode\u003ew\u003c/code\u003e - the width at which the image is rendered",
          "\u003ccode\u003eh\u003c/code\u003e - the height at which the image is rendered"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "checkAll",
      "comment": "Checks to see if all images being tracked by this media tracker have finished loading. This method does not start loading the images if they are not already loading. If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the isErrorAny or isErrorID methods to check for errors.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#checkAll(boolean)\"\u003e\u003ccode\u003echeckAll(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#checkID(int)\"\u003e\u003ccode\u003echeckID(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorAny()\"\u003e\u003ccode\u003eisErrorAny()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorID(int)\"\u003e\u003ccode\u003eisErrorID(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if all images have finished loading, have been aborted, or have encountered an error; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "load",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "checkAll",
      "comment": "Checks to see if all images being tracked by this media tracker have finished loading. If the value of the load flag is true, then this method starts loading any images that are not yet being loaded. If there is an error while loading or scaling an image, that image is considered to have finished loading. Use the isErrorAny and isErrorID methods to check for errors.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#checkID(int)\"\u003e\u003ccode\u003echeckID(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#checkAll()\"\u003e\u003ccode\u003echeckAll()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorAny()\"\u003e\u003ccode\u003eisErrorAny()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorID(int)\"\u003e\u003ccode\u003eisErrorID(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eload\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e, start loading any images that are not yet being loaded"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if all images have finished loading, have been aborted, or have encountered an error; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isErrorAny",
      "comment": "Checks the error status of all of the images.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorID(int)\"\u003e\u003ccode\u003eisErrorID(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#getErrorsAny()\"\u003e\u003ccode\u003egetErrorsAny()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if any of the images tracked by this media tracker had an error during loading; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getErrorsAny",
      "comment": "Returns a list of all media that have encountered an error.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorAny()\"\u003e\u003ccode\u003eisErrorAny()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#getErrorsID(int)\"\u003e\u003ccode\u003egetErrorsID(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an array of media objects tracked by this media tracker that have encountered an error, or \n\u003ccode\u003enull\u003c/code\u003e if there are none with errors"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "waitForAll",
      "comment": "Starts loading all images tracked by this media tracker. This method waits until all the images being tracked have finished loading. If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the isErrorAny or isErrorID methods to check for errors.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#waitForID(int)\"\u003e\u003ccode\u003ewaitForID(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#waitForAll(long)\"\u003e\u003ccode\u003ewaitForAll(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorAny()\"\u003e\u003ccode\u003eisErrorAny()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorID(int)\"\u003e\u003ccode\u003eisErrorID(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - if any thread has interrupted this thread"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "ms",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "waitForAll",
      "comment": "Starts loading all images tracked by this media tracker. This method waits until all the images being tracked have finished loading, or until the length of time specified in milliseconds by the ms argument has passed. If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the isErrorAny or isErrorID methods to check for errors.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#waitForID(int)\"\u003e\u003ccode\u003ewaitForID(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#waitForAll(long)\"\u003e\u003ccode\u003ewaitForAll(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorAny()\"\u003e\u003ccode\u003eisErrorAny()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorID(int)\"\u003e\u003ccode\u003eisErrorID(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ems\u003c/code\u003e - the number of milliseconds to wait for the loading to complete"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - if any thread has interrupted this thread."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if all images were successfully loaded; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "load",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "statusAll",
      "comment": "Calculates and returns the bitwise inclusive OR of the status of all media that are tracked by this media tracker. Possible flags defined by the MediaTracker class are LOADING, ABORTED, ERRORED, and COMPLETE. An image that hasn\u0027t started loading has zero as its status. If the value of load is true, then this method starts loading any images that are not yet being loaded.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#statusID(int,boolean)\"\u003e\u003ccode\u003estatusID(int, boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#LOADING\"\u003e\u003ccode\u003eLOADING\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#ABORTED\"\u003e\u003ccode\u003eABORTED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#ERRORED\"\u003e\u003ccode\u003eERRORED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#COMPLETE\"\u003e\u003ccode\u003eCOMPLETE\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eload\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e, start loading any images that are not yet being loaded"
        ],
        "return": [
          "the bitwise inclusive \n\u003cb\u003eOR\u003c/b\u003e of the status of all of the media being tracked"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "id",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "checkID",
      "comment": "Checks to see if all images tracked by this media tracker that are tagged with the specified identifier have finished loading. This method does not start loading the images if they are not already loading. If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the isErrorAny or isErrorID methods to check for errors.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#checkID(int,boolean)\"\u003e\u003ccode\u003echeckID(int, boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#checkAll()\"\u003e\u003ccode\u003echeckAll()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorAny()\"\u003e\u003ccode\u003eisErrorAny()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorID(int)\"\u003e\u003ccode\u003eisErrorID(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eid\u003c/code\u003e - the identifier of the images to check"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if all images have finished loading, have been aborted, or have encountered an error; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "id",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "load",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "checkID",
      "comment": "Checks to see if all images tracked by this media tracker that are tagged with the specified identifier have finished loading. If the value of the load flag is true, then this method starts loading any images that are not yet being loaded. If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the isErrorAny or isErrorID methods to check for errors.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#checkID(int,boolean)\"\u003e\u003ccode\u003echeckID(int, boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#checkAll()\"\u003e\u003ccode\u003echeckAll()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorAny()\"\u003e\u003ccode\u003eisErrorAny()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorID(int)\"\u003e\u003ccode\u003eisErrorID(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eid\u003c/code\u003e - the identifier of the images to check",
          "\u003ccode\u003eload\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e, start loading any images that are not yet being loaded"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if all images have finished loading, have been aborted, or have encountered an error; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "id",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isErrorID",
      "comment": "Checks the error status of all of the images tracked by this media tracker with the specified identifier.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorAny()\"\u003e\u003ccode\u003eisErrorAny()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#getErrorsID(int)\"\u003e\u003ccode\u003egetErrorsID(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eid\u003c/code\u003e - the identifier of the images to check"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if any of the images with the specified identifier had an error during loading; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "id",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getErrorsID",
      "comment": "Returns a list of media with the specified ID that have encountered an error.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorID(int)\"\u003e\u003ccode\u003eisErrorID(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorAny()\"\u003e\u003ccode\u003eisErrorAny()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#getErrorsAny()\"\u003e\u003ccode\u003egetErrorsAny()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eid\u003c/code\u003e - the identifier of the images to check"
        ],
        "return": [
          "an array of media objects tracked by this media tracker with the specified identifier that have encountered an error, or \n\u003ccode\u003enull\u003c/code\u003e if there are none with errors"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "id",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "waitForID",
      "comment": "Starts loading all images tracked by this media tracker with the specified identifier. This method waits until all the images with the specified identifier have finished loading. If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the isErrorAny and isErrorID methods to check for errors.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#waitForAll()\"\u003e\u003ccode\u003ewaitForAll()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorAny()\"\u003e\u003ccode\u003eisErrorAny()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorID(int)\"\u003e\u003ccode\u003eisErrorID(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eid\u003c/code\u003e - the identifier of the images to check"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - if any thread has interrupted this thread."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "id",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "ms",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "waitForID",
      "comment": "Starts loading all images tracked by this media tracker with the specified identifier. This method waits until all the images with the specified identifier have finished loading, or until the length of time specified in milliseconds by the ms argument has passed. If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the statusID, isErrorID, and isErrorAny methods to check for errors.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#waitForAll()\"\u003e\u003ccode\u003ewaitForAll()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#waitForID(int)\"\u003e\u003ccode\u003ewaitForID(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#statusID(int,boolean)\"\u003e\u003ccode\u003estatusID(int, boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorAny()\"\u003e\u003ccode\u003eisErrorAny()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#isErrorID(int)\"\u003e\u003ccode\u003eisErrorID(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eid\u003c/code\u003e - the identifier of the images to check",
          "\u003ccode\u003ems\u003c/code\u003e - the length of time, in milliseconds, to wait for the loading to complete"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - if any thread has interrupted this thread."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the loading completed in time; otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "id",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "load",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "statusID",
      "comment": "Calculates and returns the bitwise inclusive OR of the status of all media with the specified identifier that are tracked by this media tracker. Possible flags defined by the MediaTracker class are LOADING, ABORTED, ERRORED, and COMPLETE. An image that hasn\u0027t started loading has zero as its status. If the value of load is true, then this method starts loading any images that are not yet being loaded.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#statusAll(boolean)\"\u003e\u003ccode\u003estatusAll(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#LOADING\"\u003e\u003ccode\u003eLOADING\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#ABORTED\"\u003e\u003ccode\u003eABORTED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#ERRORED\"\u003e\u003ccode\u003eERRORED\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#COMPLETE\"\u003e\u003ccode\u003eCOMPLETE\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eid\u003c/code\u003e - the identifier of the images to check",
          "\u003ccode\u003eload\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e, start loading any images that are not yet being loaded"
        ],
        "return": [
          "the bitwise inclusive \n\u003cb\u003eOR\u003c/b\u003e of the status of all of the media with the specified identifier that are being tracked"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Image",
            "type": "Class"
          },
          "name": "image",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeImage",
      "comment": "Removes the specified image from this media tracker. All instances of the specified image are removed, regardless of scale or ID.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#removeImage(java.awt.Image,int)\"\u003e\u003ccode\u003eremoveImage(java.awt.Image, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#removeImage(java.awt.Image,int,int,int)\"\u003e\u003ccode\u003eremoveImage(java.awt.Image, int, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eimage\u003c/code\u003e - the image to be removed"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Image",
            "type": "Class"
          },
          "name": "image",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "id",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeImage",
      "comment": "Removes the specified image from the specified tracking ID of this media tracker. All instances of Image being tracked under the specified ID are removed regardless of scale.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#removeImage(java.awt.Image)\"\u003e\u003ccode\u003eremoveImage(java.awt.Image)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#removeImage(java.awt.Image,int,int,int)\"\u003e\u003ccode\u003eremoveImage(java.awt.Image, int, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eimage\u003c/code\u003e - the image to be removed",
          "\u003ccode\u003eid\u003c/code\u003e - the tracking ID from which to remove the image"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Image",
            "type": "Class"
          },
          "name": "image",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "id",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "width",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "height",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeImage",
      "comment": "Removes the specified image with the specified width, height, and ID from this media tracker. Only the specified instance (with any duplicates) is removed.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#removeImage(java.awt.Image)\"\u003e\u003ccode\u003eremoveImage(java.awt.Image)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/MediaTracker.html#removeImage(java.awt.Image,int)\"\u003e\u003ccode\u003eremoveImage(java.awt.Image, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eimage\u003c/code\u003e - the image to be removed",
          "\u003ccode\u003eid\u003c/code\u003e - the tracking ID from which to remove the image",
          "\u003ccode\u003ewidth\u003c/code\u003e - the width to remove (-1 for unscaled)",
          "\u003ccode\u003eheight\u003c/code\u003e - the height to remove (-1 for unscaled)"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "comp",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a media tracker to track images for a given component.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecomp\u003c/code\u003e - the component on which the images will eventually be drawn"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.MediaTracker",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.awt.MediaTracker\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.0"
    ]
  }
}