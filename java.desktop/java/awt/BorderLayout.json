{
  "packageName": "java.awt",
  "simpleName": "BorderLayout",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "NORTH",
      "comment": "The north layout constraint (top of container).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BorderLayout.NORTH\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SOUTH",
      "comment": "The south layout constraint (bottom of container).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BorderLayout.SOUTH\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "EAST",
      "comment": "The east layout constraint (right side of container).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BorderLayout.EAST\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WEST",
      "comment": "The west layout constraint (left side of container).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BorderLayout.WEST\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "CENTER",
      "comment": "The center layout constraint (middle of container).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BorderLayout.CENTER\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "BEFORE_FIRST_LINE",
      "comment": "Synonym for PAGE_START. Exists for compatibility with previous versions. PAGE_START is preferred.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/BorderLayout.html#PAGE_START\"\u003e\u003ccode\u003ePAGE_START\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BorderLayout.BEFORE_FIRST_LINE\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "AFTER_LAST_LINE",
      "comment": "Synonym for PAGE_END. Exists for compatibility with previous versions. PAGE_END is preferred.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/BorderLayout.html#PAGE_END\"\u003e\u003ccode\u003ePAGE_END\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BorderLayout.AFTER_LAST_LINE\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "BEFORE_LINE_BEGINS",
      "comment": "Synonym for LINE_START. Exists for compatibility with previous versions. LINE_START is preferred.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/BorderLayout.html#LINE_START\"\u003e\u003ccode\u003eLINE_START\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BorderLayout.BEFORE_LINE_BEGINS\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "AFTER_LINE_ENDS",
      "comment": "Synonym for LINE_END. Exists for compatibility with previous versions. LINE_END is preferred.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/BorderLayout.html#LINE_END\"\u003e\u003ccode\u003eLINE_END\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BorderLayout.AFTER_LINE_ENDS\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PAGE_START",
      "comment": "The component comes before the first line of the layout\u0027s content. For Western, left-to-right and top-to-bottom orientations, this is equivalent to NORTH.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getComponentOrientation()\"\u003e\u003ccode\u003eComponent.getComponentOrientation()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BorderLayout.PAGE_START\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PAGE_END",
      "comment": "The component comes after the last line of the layout\u0027s content. For Western, left-to-right and top-to-bottom orientations, this is equivalent to SOUTH.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getComponentOrientation()\"\u003e\u003ccode\u003eComponent.getComponentOrientation()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BorderLayout.PAGE_END\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "LINE_START",
      "comment": "The component goes at the beginning of the line direction for the layout. For Western, left-to-right and top-to-bottom orientations, this is equivalent to WEST.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getComponentOrientation()\"\u003e\u003ccode\u003eComponent.getComponentOrientation()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BorderLayout.LINE_START\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "LINE_END",
      "comment": "The component goes at the end of the line direction for the layout. For Western, left-to-right and top-to-bottom orientations, this is equivalent to EAST.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getComponentOrientation()\"\u003e\u003ccode\u003eComponent.getComponentOrientation()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BorderLayout.LINE_END\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHgap",
      "comment": "Returns the horizontal gap between components.",
      "tagMap": {
        "return": [
          "the horizontal gap between components"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "hgap"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setHgap",
      "comment": "Sets the horizontal gap between components.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ehgap\u003c/code\u003e - the horizontal gap between components"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getVgap",
      "comment": "Returns the vertical gap between components.",
      "tagMap": {
        "return": [
          "the vertical gap between components"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "vgap"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setVgap",
      "comment": "Sets the vertical gap between components.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evgap\u003c/code\u003e - the vertical gap between components"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "comp"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "constraints"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addLayoutComponent",
      "comment": "Adds the specified component to the layout, using the specified constraint object. For border layouts, the constraint must be one of the following constants: NORTH, SOUTH, EAST, WEST, or CENTER. Most applications do not call this method directly. This method is called when a component is added to a container using the Container.add method with the same argument types.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#add(java.awt.Component,java.lang.Object)\"\u003e\u003ccode\u003eContainer.add(java.awt.Component, java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#addLayoutComponent(java.awt.Component,java.lang.Object)\"\u003eaddLayoutComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomp\u003c/code\u003e - the component to be added.",
          "\u003ccode\u003econstraints\u003c/code\u003e - an object that specifies how and where the component is added to the layout."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the constraint object is not a string, or if it not one of the five specified constants."
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "comp"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addLayoutComponent",
      "comment": "Description copied from interface: LayoutManager",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#addLayoutComponent(java.lang.String,java.awt.Component)\"\u003eaddLayoutComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the string to be associated with the component",
          "\u003ccode\u003ecomp\u003c/code\u003e - the component to be added"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "comp"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeLayoutComponent",
      "comment": "Removes the specified component from this border layout. This method is called when a container calls its remove or removeAll methods. Most applications do not call this method directly.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#remove(java.awt.Component)\"\u003e\u003ccode\u003eContainer.remove(java.awt.Component)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#removeAll()\"\u003e\u003ccode\u003eContainer.removeAll()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#removeLayoutComponent(java.awt.Component)\"\u003eremoveLayoutComponent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomp\u003c/code\u003e - the component to be removed."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "constraints"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLayoutComponent",
      "comment": "Gets the component that was added using the given constraint",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/BorderLayout.html#addLayoutComponent(java.awt.Component,java.lang.Object)\"\u003e\u003ccode\u003eaddLayoutComponent(java.awt.Component, java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003econstraints\u003c/code\u003e - the desired constraint, one of \n\u003ccode\u003eCENTER\u003c/code\u003e, \n\u003ccode\u003eNORTH\u003c/code\u003e, \n\u003ccode\u003eSOUTH\u003c/code\u003e, \n\u003ccode\u003eWEST\u003c/code\u003e, \n\u003ccode\u003eEAST\u003c/code\u003e, \n\u003ccode\u003ePAGE_START\u003c/code\u003e, \n\u003ccode\u003ePAGE_END\u003c/code\u003e, \n\u003ccode\u003eLINE_START\u003c/code\u003e, \n\u003ccode\u003eLINE_END\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the constraint object is not one of the nine specified constants"
        ],
        "return": [
          "the component at the given location, or \n\u003ccode\u003enull\u003c/code\u003e if the location is empty"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "constraints"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLayoutComponent",
      "comment": "Returns the component that corresponds to the given constraint location based on the target Container\u0027s component orientation. Components added with the relative constraints PAGE_START, PAGE_END, LINE_START, and LINE_END take precedence over components added with the explicit constraints NORTH, SOUTH, WEST, and EAST. The Container\u0027s component orientation is used to determine the location of components added with LINE_START and LINE_END.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/BorderLayout.html#addLayoutComponent(java.awt.Component,java.lang.Object)\"\u003e\u003ccode\u003eaddLayoutComponent(java.awt.Component, java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003econstraints\u003c/code\u003e - the desired absolute position, one of \n\u003ccode\u003eCENTER\u003c/code\u003e, \n\u003ccode\u003eNORTH\u003c/code\u003e, \n\u003ccode\u003eSOUTH\u003c/code\u003e, \n\u003ccode\u003eEAST\u003c/code\u003e, \n\u003ccode\u003eWEST\u003c/code\u003e",
          "\u003ccode\u003etarget\u003c/code\u003e - the \n\u003ccode\u003eContainer\u003c/code\u003e used to obtain the constraint location based on the target \n\u003ccode\u003eContainer\u003c/code\u003e\u0027s component orientation."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the constraint object is not one of the five specified constants",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the target parameter is null"
        ],
        "return": [
          "the component at the given location, or \n\u003ccode\u003enull\u003c/code\u003e if the location is empty"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "field": {
            "name": "comp"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getConstraints",
      "comment": "Gets the constraints for the specified component",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/BorderLayout.html#addLayoutComponent(java.awt.Component,java.lang.Object)\"\u003e\u003ccode\u003eaddLayoutComponent(java.awt.Component, java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecomp\u003c/code\u003e - the component to be queried"
        ],
        "return": [
          "the constraint for the specified component, or null if component is null or is not present in this layout"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "minimumLayoutSize",
      "comment": "Determines the minimum size of the target container using this layout manager. This method is called when a container calls its getMinimumSize method. Most applications do not call this method directly.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eContainer\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/BorderLayout.html#preferredLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003epreferredLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#getMinimumSize()\"\u003e\u003ccode\u003eContainer.getMinimumSize()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#minimumLayoutSize(java.awt.Container)\"\u003eminimumLayoutSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the container in which to do the layout."
        ],
        "return": [
          "the minimum dimensions needed to lay out the subcomponents of the specified container."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "preferredLayoutSize",
      "comment": "Determines the preferred size of the target container using this layout manager, based on the components in the container. Most applications do not call this method directly. This method is called when a container calls its getPreferredSize method.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eContainer\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/BorderLayout.html#minimumLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003eminimumLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#getPreferredSize()\"\u003e\u003ccode\u003eContainer.getPreferredSize()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#preferredLayoutSize(java.awt.Container)\"\u003epreferredLayoutSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the container in which to do the layout."
        ],
        "return": [
          "the preferred dimensions to lay out the subcomponents of the specified container."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "maximumLayoutSize",
      "comment": "Returns the maximum dimensions for this layout given the components in the specified target container.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eContainer\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/BorderLayout.html#minimumLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003eminimumLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/BorderLayout.html#preferredLayoutSize(java.awt.Container)\"\u003e\u003ccode\u003epreferredLayoutSize(java.awt.Container)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#maximumLayoutSize(java.awt.Container)\"\u003emaximumLayoutSize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the component which needs to be laid out"
        ],
        "return": [
          "the maximum size of the container"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "parent"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLayoutAlignmentX",
      "comment": "Returns the alignment along the x axis. This specifies how the component would like to be aligned relative to other components. The value should be a number between 0 and 1 where 0 represents alignment along the origin, 1 is aligned the furthest away from the origin, 0.5 is centered, etc.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#getLayoutAlignmentX(java.awt.Container)\"\u003egetLayoutAlignmentX\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eparent\u003c/code\u003e - the target container"
        ],
        "return": [
          "the x-axis alignment preference"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "parent"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLayoutAlignmentY",
      "comment": "Returns the alignment along the y axis. This specifies how the component would like to be aligned relative to other components. The value should be a number between 0 and 1 where 0 represents alignment along the origin, 1 is aligned the furthest away from the origin, 0.5 is centered, etc.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#getLayoutAlignmentY(java.awt.Container)\"\u003egetLayoutAlignmentY\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eparent\u003c/code\u003e - the target container"
        ],
        "return": [
          "the y-axis alignment preference"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "invalidateLayout",
      "comment": "Invalidates the layout, indicating that if the layout manager has cached information it should be discarded.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html#invalidateLayout(java.awt.Container)\"\u003einvalidateLayout\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager2.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager2\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the target container"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "layoutContainer",
      "comment": "Lays out the container argument using this border layout. This method actually reshapes the components in the specified container in order to satisfy the constraints of this BorderLayout object. The NORTH and SOUTH components, if any, are placed at the top and bottom of the container, respectively. The WEST and EAST components are then placed on the left and right, respectively. Finally, the CENTER object is placed in any remaining space in the middle. Most applications do not call this method directly. This method is called when a container calls its doLayout method.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eContainer\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#doLayout()\"\u003e\u003ccode\u003eContainer.doLayout()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html#layoutContainer(java.awt.Container)\"\u003elayoutContainer\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/LayoutManager.html\" title\u003d\"interface in java.awt\"\u003eLayoutManager\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the container in which to do the layout."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of the state of this border layout.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this border layout."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new border layout with no gaps between components.",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "hgap"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "vgap"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a border layout with the specified gaps between components. The horizontal gap is specified by hgap and the vertical gap is specified by vgap.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ehgap\u003c/code\u003e - the horizontal gap.",
          "\u003ccode\u003evgap\u003c/code\u003e - the vertical gap."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.BorderLayout",
  "comment": "A border layout lays out a container, arranging and resizing its components to fit in five regions: north, south, east, west, and center. Each region may contain no more than one component, and is identified by a corresponding constant: \n\u003ccode\u003eNORTH\u003c/code\u003e, \n\u003ccode\u003eSOUTH\u003c/code\u003e, \n\u003ccode\u003eEAST\u003c/code\u003e, \n\u003ccode\u003eWEST\u003c/code\u003e, and \n\u003ccode\u003eCENTER\u003c/code\u003e. When adding a component to a container with a border layout, use one of these five constants, for example: \n\u003cpre\u003e    Panel p \u003d new Panel();\n    p.setLayout(new BorderLayout());\n    p.add(new Button(\"Okay\"), BorderLayout.SOUTH);\n \u003c/pre\u003e As a convenience, \n\u003ccode\u003eBorderLayout\u003c/code\u003e interprets the absence of a string specification the same as the constant \n\u003ccode\u003eCENTER\u003c/code\u003e: \n\u003cpre\u003e    Panel p2 \u003d new Panel();\n    p2.setLayout(new BorderLayout());\n    p2.add(new TextArea());  // Same as p.add(new TextArea(), BorderLayout.CENTER);\n \u003c/pre\u003e \n\u003cp\u003e In addition, \u003ccode\u003eBorderLayout\u003c/code\u003e supports the relative positioning constants, \u003ccode\u003ePAGE_START\u003c/code\u003e, \u003ccode\u003ePAGE_END\u003c/code\u003e, \u003ccode\u003eLINE_START\u003c/code\u003e, and \u003ccode\u003eLINE_END\u003c/code\u003e. In a container whose \u003ccode\u003eComponentOrientation\u003c/code\u003e is set to \u003ccode\u003eComponentOrientation.LEFT_TO_RIGHT\u003c/code\u003e, these constants map to \u003ccode\u003eNORTH\u003c/code\u003e, \u003ccode\u003eSOUTH\u003c/code\u003e, \u003ccode\u003eWEST\u003c/code\u003e, and \u003ccode\u003eEAST\u003c/code\u003e, respectively. \u003c/p\u003e\n\u003cp\u003e For compatibility with previous releases, \u003ccode\u003eBorderLayout\u003c/code\u003e also includes the relative positioning constants \u003ccode\u003eBEFORE_FIRST_LINE\u003c/code\u003e, \u003ccode\u003eAFTER_LAST_LINE\u003c/code\u003e, \u003ccode\u003eBEFORE_LINE_BEGINS\u003c/code\u003e and \u003ccode\u003eAFTER_LINE_ENDS\u003c/code\u003e. These are equivalent to \u003ccode\u003ePAGE_START\u003c/code\u003e, \u003ccode\u003ePAGE_END\u003c/code\u003e, \u003ccode\u003eLINE_START\u003c/code\u003e and \u003ccode\u003eLINE_END\u003c/code\u003e respectively. For consistency with the relative positioning constants used by other components, the latter constants are preferred. \u003c/p\u003e\n\u003cp\u003e Mixing both absolute and relative positioning constants can lead to unpredictable results. If you use both types, the relative constants will take precedence. For example, if you add components using both the \u003ccode\u003eNORTH\u003c/code\u003e and \u003ccode\u003ePAGE_START\u003c/code\u003e constants in a container whose orientation is \u003ccode\u003eLEFT_TO_RIGHT\u003c/code\u003e, only the \u003ccode\u003ePAGE_START\u003c/code\u003e will be laid out. \u003c/p\u003e\n\u003cp\u003e NOTE: Currently, \u003ccode\u003eBorderLayout\u003c/code\u003e does not support vertical orientations. The \u003ccode\u003eisVertical\u003c/code\u003e setting on the container\u0027s \u003ccode\u003eComponentOrientation\u003c/code\u003e is not respected. \u003c/p\u003e\n\u003cp\u003e The components are laid out according to their preferred sizes and the constraints of the container\u0027s size. The \u003ccode\u003eNORTH\u003c/code\u003e and \u003ccode\u003eSOUTH\u003c/code\u003e components may be stretched horizontally; the \u003ccode\u003eEAST\u003c/code\u003e and \u003ccode\u003eWEST\u003c/code\u003e components may be stretched vertically; the \u003ccode\u003eCENTER\u003c/code\u003e component may stretch both horizontally and vertically to fill any space left over. \u003c/p\u003e\n\u003cp\u003e Here is an example of five buttons in an applet laid out using the \u003ccode\u003eBorderLayout\u003c/code\u003e layout manager: \u003c/p\u003e\n\u003cp\u003e \u003cimg src\u003d\"doc-files/BorderLayout-1.gif\" alt\u003d\"Diagram of an applet\n demonstrating BorderLayout. Each section of the BorderLayout contains a\n Button corresponding to its position in the layout, one of: North, West,\n Center, East, or South.\" style\u003d\"margin: 7px 10px;\"\u003e \u003c/p\u003e\n\u003cp\u003e The code for this applet is as follows: \u003c/p\u003e\n\u003chr\u003e\n\u003cblockquote\u003e\n \u003cpre\u003e import java.awt.*;\n import java.applet.Applet;\n\n public class buttonDir extends Applet {\n   public void init() {\n     setLayout(new BorderLayout());\n     add(new Button(\"North\"), BorderLayout.NORTH);\n     add(new Button(\"South\"), BorderLayout.SOUTH);\n     add(new Button(\"East\"), BorderLayout.EAST);\n     add(new Button(\"West\"), BorderLayout.WEST);\n     add(new Button(\"Center\"), BorderLayout.CENTER);\n   }\n }\n \u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003chr\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#add(java.lang.String,java.awt.Component)\"\u003e\u003ccode\u003eContainer.add(String, Component)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/ComponentOrientation.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eComponentOrientation\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.awt.BorderLayout\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.0"
    ]
  }
}