{
  "packageName": "java.awt.dnd",
  "simpleName": "DropTargetAdapter",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "dragEnter",
      "comment": "Called while a drag operation is ongoing, when the mouse pointer enters the operable part of the drop site for the DropTarget registered with this listener.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DropTargetListener.html#dragEnter(java.awt.dnd.DropTargetDragEvent)\"\u003edragEnter\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DropTargetListener.html\" title\u003d\"interface in java.awt.dnd\"\u003eDropTargetListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003edtde\u003c/code\u003e - the \n\u003ccode\u003eDropTargetDragEvent\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "dragOver",
      "comment": "Called when a drag operation is ongoing, while the mouse pointer is still over the operable part of the drop site for the DropTarget registered with this listener.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DropTargetListener.html#dragOver(java.awt.dnd.DropTargetDragEvent)\"\u003edragOver\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DropTargetListener.html\" title\u003d\"interface in java.awt.dnd\"\u003eDropTargetListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003edtde\u003c/code\u003e - the \n\u003ccode\u003eDropTargetDragEvent\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "dropActionChanged",
      "comment": "Called if the user has modified the current drop gesture.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DropTargetListener.html#dropActionChanged(java.awt.dnd.DropTargetDragEvent)\"\u003edropActionChanged\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DropTargetListener.html\" title\u003d\"interface in java.awt.dnd\"\u003eDropTargetListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003edtde\u003c/code\u003e - the \n\u003ccode\u003eDropTargetDragEvent\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "dragExit",
      "comment": "Called while a drag operation is ongoing, when the mouse pointer has exited the operable part of the drop site for the DropTarget registered with this listener.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DropTargetListener.html#dragExit(java.awt.dnd.DropTargetEvent)\"\u003edragExit\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DropTargetListener.html\" title\u003d\"interface in java.awt.dnd\"\u003eDropTargetListener\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003edte\u003c/code\u003e - the \n\u003ccode\u003eDropTargetEvent\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a DropTargetAdapter.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.awt.dnd.DropTargetAdapter",
  "comment": "An abstract adapter class for receiving drop target events. The methods in this class are empty. This class exists only as a convenience for creating listener objects. \n\u003cp\u003e Extend this class to create a \u003ccode\u003eDropTargetEvent\u003c/code\u003e listener and override the methods for the events of interest. (If you implement the \u003ccode\u003eDropTargetListener\u003c/code\u003e interface, you have to define all of the methods in it. This abstract class defines a null implementation for every method except \u003ccode\u003edrop(DropTargetDropEvent)\u003c/code\u003e, so you only have to define methods for events you care about.) You must provide an implementation for at least \u003ccode\u003edrop(DropTargetDropEvent)\u003c/code\u003e. This method cannot have a null implementation because its specification requires that you either accept or reject the drop, and, if accepted, indicate whether the drop was successful. \u003c/p\u003e\n\u003cp\u003e Create a listener object using the extended class and then register it with a \u003ccode\u003eDropTarget\u003c/code\u003e. When the drag enters, moves over, or exits the operable part of the drop site for that \u003ccode\u003eDropTarget\u003c/code\u003e, when the drop action changes, and when the drop occurs, the relevant method in the listener object is invoked, and the \u003ccode\u003eDropTargetEvent\u003c/code\u003e is passed to it. \u003c/p\u003e\n\u003cp\u003e The operable part of the drop site for the \u003ccode\u003eDropTarget\u003c/code\u003e is the part of the associated \u003ccode\u003eComponent\u003c/code\u003e\u0027s geometry that is not obscured by an overlapping top-level window or by another \u003ccode\u003eComponent\u003c/code\u003e higher in the Z-order that has an associated active \u003ccode\u003eDropTarget\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003e During the drag, the data associated with the current drag operation can be retrieved by calling \u003ccode\u003egetTransferable()\u003c/code\u003e on \u003ccode\u003eDropTargetDragEvent\u003c/code\u003e instances passed to the listener\u0027s methods. \u003c/p\u003e\n\u003cp\u003e Note that \u003ccode\u003egetTransferable()\u003c/code\u003e on the \u003ccode\u003eDropTargetDragEvent\u003c/code\u003e instance should only be called within the respective listener\u0027s method and all the necessary data should be retrieved from the returned \u003ccode\u003eTransferable\u003c/code\u003e before that method returns.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DropTargetEvent.html\" title\u003d\"class in java.awt.dnd\"\u003e\u003ccode\u003eDropTargetEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DropTargetListener.html\" title\u003d\"interface in java.awt.dnd\"\u003e\u003ccode\u003eDropTargetListener\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}