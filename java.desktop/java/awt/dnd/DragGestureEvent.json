{
  "packageName": "java.awt.dnd",
  "simpleName": "DragGestureEvent",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.EventObject",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.awt.dnd.DragGestureRecognizer",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSourceAsDragGestureRecognizer",
      "comment": "Returns the source as a DragGestureRecognizer.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the source as a \n\u003ccode\u003eDragGestureRecognizer\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getComponent",
      "comment": "Returns the Component associated with this DragGestureEvent.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the Component"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.dnd.DragSource",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDragSource",
      "comment": "Returns the DragSource.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eDragSource\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Point",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDragOrigin",
      "comment": "Returns a Point in the coordinates of the Component over which the drag originated.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the Point where the drag originated in Component coords."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Iterator",
        "parameters": [
          {
            "name": "java.awt.event.InputEvent",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "iterator",
      "comment": "Returns an Iterator for the events comprising the gesture.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an Iterator for the events comprising the gesture"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toArray",
      "comment": "Returns an Object array of the events comprising the drag gesture.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an array of the events comprising the gesture"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toArray",
      "comment": "Returns an array of the events comprising the drag gesture.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003earray\u003c/code\u003e - the array of \n\u003ccode\u003eEventObject\u003c/code\u003e sub(types)"
        ],
        "return": [
          "an array of the events comprising the gesture"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDragAction",
      "comment": "Returns an int representing the action selected by the user.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the action selected by the user"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.event.InputEvent",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTriggerEvent",
      "comment": "Returns the initial event that triggered the gesture.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the first \"triggering\" event in the sequence of the gesture"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "startDrag",
      "comment": "Starts the drag operation given the Cursor for this drag operation and the Transferable representing the source data for this drag operation. If a null Cursor is specified no exception will be thrown and default drag cursors will be used instead. If a null Transferable is specified NullPointerException will be thrown.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edragCursor\u003c/code\u003e - The initial \n\u003ccode\u003eCursor\u003c/code\u003e for this drag operation or \n\u003ccode\u003enull\u003c/code\u003e for the default cursor handling; see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSourceContext.html#defaultCursor\"\u003eDragSourceContext\u003c/a\u003e for more details on the cursor handling mechanism during drag and drop",
          "\u003ccode\u003etransferable\u003c/code\u003e - The \n\u003ccode\u003eTransferable\u003c/code\u003e representing the source data for this drag operation."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/InvalidDnDOperationException.html\" title\u003d\"class in java.awt.dnd\"\u003eInvalidDnDOperationException\u003c/a\u003e\u003c/code\u003e - if the Drag and Drop system is unable to initiate a drag operation, or if the user attempts to start a drag while an existing drag operation is still executing.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eTransferable\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "startDrag",
      "comment": "Starts the drag given the initial Cursor to display, the Transferable object, and the DragSourceListener to use.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edragCursor\u003c/code\u003e - The initial \n\u003ccode\u003eCursor\u003c/code\u003e for this drag operation or \n\u003ccode\u003enull\u003c/code\u003e for the default cursor handling; see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSourceContext.html#defaultCursor\"\u003eDragSourceContext\u003c/a\u003e for more details on the cursor handling mechanism during drag and drop",
          "\u003ccode\u003etransferable\u003c/code\u003e - The source\u0027s Transferable",
          "\u003ccode\u003edsl\u003c/code\u003e - The source\u0027s DragSourceListener"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/InvalidDnDOperationException.html\" title\u003d\"class in java.awt.dnd\"\u003eInvalidDnDOperationException\u003c/a\u003e\u003c/code\u003e - if the Drag and Drop system is unable to initiate a drag operation, or if the user attempts to start a drag while an existing drag operation is still executing."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "startDrag",
      "comment": "Start the drag given the initial Cursor to display, a drag Image, the offset of the Image, the Transferable object, and the DragSourceListener to use.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edragCursor\u003c/code\u003e - The initial \n\u003ccode\u003eCursor\u003c/code\u003e for this drag operation or \n\u003ccode\u003enull\u003c/code\u003e for the default cursor handling; see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSourceContext.html#defaultCursor\"\u003eDragSourceContext\u003c/a\u003e for more details on the cursor handling mechanism during drag and drop",
          "\u003ccode\u003edragImage\u003c/code\u003e - The source\u0027s dragImage",
          "\u003ccode\u003eimageOffset\u003c/code\u003e - The dragImage\u0027s offset",
          "\u003ccode\u003etransferable\u003c/code\u003e - The source\u0027s Transferable",
          "\u003ccode\u003edsl\u003c/code\u003e - The source\u0027s DragSourceListener"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/InvalidDnDOperationException.html\" title\u003d\"class in java.awt.dnd\"\u003eInvalidDnDOperationException\u003c/a\u003e\u003c/code\u003e - if the Drag and Drop system is unable to initiate a drag operation, or if the user attempts to start a drag while an existing drag operation is still executing."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragGestureRecognizer",
            "type": "Class"
          },
          "name": "dgr",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "act",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "name": "ori",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "java.awt.event.InputEvent",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "evs",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a DragGestureEvent object given by the DragGestureRecognizer instance firing this event, an act parameter representing the user\u0027s preferred action, an ori parameter indicating the origin of the drag, and a List of events that comprise the gesture(evs parameter).",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DnDConstants.html\" title\u003d\"class in java.awt.dnd\"\u003e\u003ccode\u003eDnDConstants\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edgr\u003c/code\u003e - The \n\u003ccode\u003eDragGestureRecognizer\u003c/code\u003e firing this event",
          "\u003ccode\u003eact\u003c/code\u003e - The user\u0027s preferred action. For information on allowable values, see the class description for \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragGestureEvent.html\" title\u003d\"class in java.awt.dnd\"\u003e\u003ccode\u003eDragGestureEvent\u003c/code\u003e\u003c/a\u003e",
          "\u003ccode\u003eori\u003c/code\u003e - The origin of the drag",
          "\u003ccode\u003eevs\u003c/code\u003e - The \n\u003ccode\u003eList\u003c/code\u003e of events that comprise the gesture"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if any parameter equals \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the act parameter does not comply with the values given in the class description for \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragGestureEvent.html\" title\u003d\"class in java.awt.dnd\"\u003e\u003ccode\u003eDragGestureEvent\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.dnd.DragGestureEvent",
  "comment": "A \n\u003ccode\u003eDragGestureEvent\u003c/code\u003e is passed to \n\u003ccode\u003eDragGestureListener\u003c/code\u003e\u0027s dragGestureRecognized() method when a particular \n\u003ccode\u003eDragGestureRecognizer\u003c/code\u003e detects that a platform dependent drag initiating gesture has occurred on the \n\u003ccode\u003eComponent\u003c/code\u003e that it is tracking. The \n\u003ccode\u003eaction\u003c/code\u003e field of any \n\u003ccode\u003eDragGestureEvent\u003c/code\u003e instance should take one of the following values: \n\u003cul\u003e \n \u003cli\u003e \u003ccode\u003eDnDConstants.ACTION_COPY\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e \u003ccode\u003eDnDConstants.ACTION_MOVE\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e \u003ccode\u003eDnDConstants.ACTION_LINK\u003c/code\u003e \u003c/li\u003e\n\u003c/ul\u003e Assigning the value different from listed above will cause an unspecified behavior.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragGestureRecognizer.html\" title\u003d\"class in java.awt.dnd\"\u003e\u003ccode\u003eDragGestureRecognizer\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragGestureListener.html\" title\u003d\"interface in java.awt.dnd\"\u003e\u003ccode\u003eDragGestureListener\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSource.html\" title\u003d\"class in java.awt.dnd\"\u003e\u003ccode\u003eDragSource\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DnDConstants.html\" title\u003d\"class in java.awt.dnd\"\u003e\u003ccode\u003eDnDConstants\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.awt.dnd.DragGestureEvent\"\u003eSerialized Form\u003c/a\u003e"
    ]
  }
}