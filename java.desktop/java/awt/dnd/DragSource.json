{
  "packageName": "java.awt.dnd",
  "simpleName": "DragSource",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.awt.Cursor",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DefaultCopyDrop",
      "comment": "The default Cursor to use with a copy operation indicating that a drop is currently allowed. null if GraphicsEnvironment.isHeadless() returns true.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Cursor",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DefaultMoveDrop",
      "comment": "The default Cursor to use with a move operation indicating that a drop is currently allowed. null if GraphicsEnvironment.isHeadless() returns true.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Cursor",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DefaultLinkDrop",
      "comment": "The default Cursor to use with a link operation indicating that a drop is currently allowed. null if GraphicsEnvironment.isHeadless() returns true.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Cursor",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DefaultCopyNoDrop",
      "comment": "The default Cursor to use with a copy operation indicating that a drop is currently not allowed. null if GraphicsEnvironment.isHeadless() returns true.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Cursor",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DefaultMoveNoDrop",
      "comment": "The default Cursor to use with a move operation indicating that a drop is currently not allowed. null if GraphicsEnvironment.isHeadless() returns true.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Cursor",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DefaultLinkNoDrop",
      "comment": "The default Cursor to use with a link operation indicating that a drop is currently not allowed. null if GraphicsEnvironment.isHeadless() returns true.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.dnd.DragSource",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getDefaultDragSource",
      "comment": "Gets the DragSource object associated with the underlying platform.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if GraphicsEnvironment.isHeadless() returns true"
        ],
        "return": [
          "the platform DragSource"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isDragImageSupported",
      "comment": "Reports whether or not drag Image support is available on the underlying platform.",
      "annotations": [],
      "tagMap": {
        "return": [
          "if the Drag Image support is available on this platform"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.dnd.InvalidDnDOperationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragGestureEvent",
            "type": "Class"
          },
          "name": "trigger",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Cursor",
            "type": "Class"
          },
          "name": "dragCursor",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Image",
            "type": "Class"
          },
          "name": "dragImage",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "name": "imageOffset",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.datatransfer.Transferable",
            "type": "Class"
          },
          "name": "transferable",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragSourceListener",
            "type": "Class"
          },
          "name": "dsl",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.datatransfer.FlavorMap",
            "type": "Class"
          },
          "name": "flavorMap",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "startDrag",
      "comment": "Start a drag, given the DragGestureEvent that initiated the drag, the initial Cursor to use, the Image to drag, the offset of the Image origin from the hotspot of the Cursor at the instant of the trigger, the Transferable subject data of the drag, the DragSourceListener, and the FlavorMap.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etrigger\u003c/code\u003e - the \n\u003ccode\u003eDragGestureEvent\u003c/code\u003e that initiated the drag",
          "\u003ccode\u003edragCursor\u003c/code\u003e - the initial \n\u003ccode\u003eCursor\u003c/code\u003e for this drag operation or \n\u003ccode\u003enull\u003c/code\u003e for the default cursor handling; see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSourceContext.html#defaultCursor\"\u003eDragSourceContext\u003c/a\u003e for more details on the cursor handling mechanism during drag and drop",
          "\u003ccode\u003edragImage\u003c/code\u003e - the image to drag or \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003eimageOffset\u003c/code\u003e - the offset of the \n\u003ccode\u003eImage\u003c/code\u003e origin from the hotspot of the \n\u003ccode\u003eCursor\u003c/code\u003e at the instant of the trigger",
          "\u003ccode\u003etransferable\u003c/code\u003e - the subject data of the drag",
          "\u003ccode\u003edsl\u003c/code\u003e - the \n\u003ccode\u003eDragSourceListener\u003c/code\u003e",
          "\u003ccode\u003eflavorMap\u003c/code\u003e - the \n\u003ccode\u003eFlavorMap\u003c/code\u003e to use, or \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/InvalidDnDOperationException.html\" title\u003d\"class in java.awt.dnd\"\u003eInvalidDnDOperationException\u003c/a\u003e\u003c/code\u003e - if the Drag and Drop system is unable to initiate a drag operation, or if the user attempts to start a drag while an existing drag operation is still executing"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.dnd.InvalidDnDOperationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragGestureEvent",
            "type": "Class"
          },
          "name": "trigger",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Cursor",
            "type": "Class"
          },
          "name": "dragCursor",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.datatransfer.Transferable",
            "type": "Class"
          },
          "name": "transferable",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragSourceListener",
            "type": "Class"
          },
          "name": "dsl",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.datatransfer.FlavorMap",
            "type": "Class"
          },
          "name": "flavorMap",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "startDrag",
      "comment": "Start a drag, given the DragGestureEvent that initiated the drag, the initial Cursor to use, the Transferable subject data of the drag, the DragSourceListener, and the FlavorMap.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etrigger\u003c/code\u003e - the \n\u003ccode\u003eDragGestureEvent\u003c/code\u003e that initiated the drag",
          "\u003ccode\u003edragCursor\u003c/code\u003e - the initial \n\u003ccode\u003eCursor\u003c/code\u003e for this drag operation or \n\u003ccode\u003enull\u003c/code\u003e for the default cursor handling; see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSourceContext.html#defaultCursor\"\u003eDragSourceContext\u003c/a\u003e for more details on the cursor handling mechanism during drag and drop",
          "\u003ccode\u003etransferable\u003c/code\u003e - the subject data of the drag",
          "\u003ccode\u003edsl\u003c/code\u003e - the \n\u003ccode\u003eDragSourceListener\u003c/code\u003e",
          "\u003ccode\u003eflavorMap\u003c/code\u003e - the \n\u003ccode\u003eFlavorMap\u003c/code\u003e to use or \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/InvalidDnDOperationException.html\" title\u003d\"class in java.awt.dnd\"\u003eInvalidDnDOperationException\u003c/a\u003e\u003c/code\u003e - if the Drag and Drop system is unable to initiate a drag operation, or if the user attempts to start a drag while an existing drag operation is still executing"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.dnd.InvalidDnDOperationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragGestureEvent",
            "type": "Class"
          },
          "name": "trigger",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Cursor",
            "type": "Class"
          },
          "name": "dragCursor",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Image",
            "type": "Class"
          },
          "name": "dragImage",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "name": "dragOffset",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.datatransfer.Transferable",
            "type": "Class"
          },
          "name": "transferable",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragSourceListener",
            "type": "Class"
          },
          "name": "dsl",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "startDrag",
      "comment": "Start a drag, given the DragGestureEvent that initiated the drag, the initial Cursor to use, the Image to drag, the offset of the Image origin from the hotspot of the Cursor at the instant of the trigger, the subject data of the drag, and the DragSourceListener.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etrigger\u003c/code\u003e - the \n\u003ccode\u003eDragGestureEvent\u003c/code\u003e that initiated the drag",
          "\u003ccode\u003edragCursor\u003c/code\u003e - the initial \n\u003ccode\u003eCursor\u003c/code\u003e for this drag operation or \n\u003ccode\u003enull\u003c/code\u003e for the default cursor handling; see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSourceContext.html#defaultCursor\"\u003eDragSourceContext\u003c/a\u003e for more details on the cursor handling mechanism during drag and drop",
          "\u003ccode\u003edragImage\u003c/code\u003e - the \n\u003ccode\u003eImage\u003c/code\u003e to drag or \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003edragOffset\u003c/code\u003e - the offset of the \n\u003ccode\u003eImage\u003c/code\u003e origin from the hotspot of the \n\u003ccode\u003eCursor\u003c/code\u003e at the instant of the trigger",
          "\u003ccode\u003etransferable\u003c/code\u003e - the subject data of the drag",
          "\u003ccode\u003edsl\u003c/code\u003e - the \n\u003ccode\u003eDragSourceListener\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/InvalidDnDOperationException.html\" title\u003d\"class in java.awt.dnd\"\u003eInvalidDnDOperationException\u003c/a\u003e\u003c/code\u003e - if the Drag and Drop system is unable to initiate a drag operation, or if the user attempts to start a drag while an existing drag operation is still executing"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.awt.dnd.InvalidDnDOperationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragGestureEvent",
            "type": "Class"
          },
          "name": "trigger",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Cursor",
            "type": "Class"
          },
          "name": "dragCursor",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.datatransfer.Transferable",
            "type": "Class"
          },
          "name": "transferable",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragSourceListener",
            "type": "Class"
          },
          "name": "dsl",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "startDrag",
      "comment": "Start a drag, given the DragGestureEvent that initiated the drag, the initial Cursor to use, the Transferable subject data of the drag, and the DragSourceListener.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etrigger\u003c/code\u003e - the \n\u003ccode\u003eDragGestureEvent\u003c/code\u003e that initiated the drag",
          "\u003ccode\u003edragCursor\u003c/code\u003e - the initial \n\u003ccode\u003eCursor\u003c/code\u003e for this drag operation or \n\u003ccode\u003enull\u003c/code\u003e for the default cursor handling; see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSourceContext.html#defaultCursor\"\u003eDragSourceContext\u003c/a\u003e class for more details on the cursor handling mechanism during drag and drop",
          "\u003ccode\u003etransferable\u003c/code\u003e - the subject data of the drag",
          "\u003ccode\u003edsl\u003c/code\u003e - the \n\u003ccode\u003eDragSourceListener\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/InvalidDnDOperationException.html\" title\u003d\"class in java.awt.dnd\"\u003eInvalidDnDOperationException\u003c/a\u003e\u003c/code\u003e - if the Drag and Drop system is unable to initiate a drag operation, or if the user attempts to start a drag while an existing drag operation is still executing"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.dnd.DragSourceContext",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragGestureEvent",
            "type": "Class"
          },
          "name": "dgl",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Cursor",
            "type": "Class"
          },
          "name": "dragCursor",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Image",
            "type": "Class"
          },
          "name": "dragImage",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "name": "imageOffset",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.datatransfer.Transferable",
            "type": "Class"
          },
          "name": "t",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragSourceListener",
            "type": "Class"
          },
          "name": "dsl",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "createDragSourceContext",
      "comment": "Creates the DragSourceContext to handle the current drag operation. To incorporate a new DragSourceContext subclass, subclass DragSource and override this method. If dragImage is null, no image is used to represent the drag over feedback for this drag operation, but NullPointerException is not thrown. If dsl is null, no drag source listener is registered with the created DragSourceContext, but NullPointerException is not thrown.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edgl\u003c/code\u003e - The \n\u003ccode\u003eDragGestureEvent\u003c/code\u003e that triggered the drag",
          "\u003ccode\u003edragCursor\u003c/code\u003e - The initial \n\u003ccode\u003eCursor\u003c/code\u003e for this drag operation or \n\u003ccode\u003enull\u003c/code\u003e for the default cursor handling; see \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSourceContext.html#defaultCursor\"\u003eDragSourceContext\u003c/a\u003e class for more details on the cursor handling mechanism during drag and drop",
          "\u003ccode\u003edragImage\u003c/code\u003e - The \n\u003ccode\u003eImage\u003c/code\u003e to drag or \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003eimageOffset\u003c/code\u003e - The offset of the \n\u003ccode\u003eImage\u003c/code\u003e origin from the hotspot of the cursor at the instant of the trigger",
          "\u003ccode\u003et\u003c/code\u003e - The subject data of the drag",
          "\u003ccode\u003edsl\u003c/code\u003e - The \n\u003ccode\u003eDragSourceListener\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edscp\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edgl\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edragImage\u003c/code\u003e is not \n\u003ccode\u003enull\u003c/code\u003e and \n\u003ccode\u003eimageOffset\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003et\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eComponent\u003c/code\u003e associated with the trigger event is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eDragSource\u003c/code\u003e for the trigger event is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the drag action for the trigger event is \n\u003ccode\u003eDnDConstants.ACTION_NONE\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the source actions for the \n\u003ccode\u003eDragGestureRecognizer\u003c/code\u003e associated with the trigger event are equal to \n\u003ccode\u003eDnDConstants.ACTION_NONE\u003c/code\u003e."
        ],
        "return": [
          "the \n\u003ccode\u003eDragSourceContext\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.datatransfer.FlavorMap",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getFlavorMap",
      "comment": "This method returns the FlavorMap for this DragSource.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eFlavorMap\u003c/code\u003e for this \n\u003ccode\u003eDragSource\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "recognizerAbstractClass",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "actions",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragGestureListener",
            "type": "Class"
          },
          "name": "dgl",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "upperBounds": [
            {
              "name": "java.awt.dnd.DragGestureRecognizer",
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createDragGestureRecognizer",
      "comment": "Creates a new DragGestureRecognizer that implements the specified abstract subclass of DragGestureRecognizer, and sets the specified Component and DragGestureListener on the newly created object.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of \n\u003ccode\u003eDragGestureRecognizer\u003c/code\u003e to create"
        ],
        "param": [
          "\u003ccode\u003erecognizerAbstractClass\u003c/code\u003e - the requested abstract type",
          "\u003ccode\u003eactions\u003c/code\u003e - the permitted source drag actions",
          "\u003ccode\u003ec\u003c/code\u003e - the \n\u003ccode\u003eComponent\u003c/code\u003e target",
          "\u003ccode\u003edgl\u003c/code\u003e - the \n\u003ccode\u003eDragGestureListener\u003c/code\u003e to notify"
        ],
        "return": [
          "the new \n\u003ccode\u003eDragGestureRecognizer\u003c/code\u003e or \n\u003ccode\u003enull\u003c/code\u003e if the \n\u003ccode\u003eToolkit.createDragGestureRecognizer\u003c/code\u003e method has no implementation available for the requested \n\u003ccode\u003eDragGestureRecognizer\u003c/code\u003e subclass and returns \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.dnd.DragGestureRecognizer",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "actions",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragGestureListener",
            "type": "Class"
          },
          "name": "dgl",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createDefaultDragGestureRecognizer",
      "comment": "Creates a new DragGestureRecognizer that implements the default abstract subclass of DragGestureRecognizer for this DragSource, and sets the specified Component and DragGestureListener on the newly created object. For this DragSource the default is MouseDragGestureRecognizer.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the \n\u003ccode\u003eComponent\u003c/code\u003e target for the recognizer",
          "\u003ccode\u003eactions\u003c/code\u003e - the permitted source actions",
          "\u003ccode\u003edgl\u003c/code\u003e - the \n\u003ccode\u003eDragGestureListener\u003c/code\u003e to notify"
        ],
        "return": [
          "the new \n\u003ccode\u003eDragGestureRecognizer\u003c/code\u003e or \n\u003ccode\u003enull\u003c/code\u003e if the \n\u003ccode\u003eToolkit.createDragGestureRecognizer\u003c/code\u003e method has no implementation available for the requested \n\u003ccode\u003eDragGestureRecognizer\u003c/code\u003e subclass and returns \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragSourceListener",
            "type": "Class"
          },
          "name": "dsl",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addDragSourceListener",
      "comment": "Adds the specified DragSourceListener to this DragSource to receive drag source events during drag operations initiated with this DragSource. If a null listener is specified, no action is taken and no exception is thrown.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSource.html#removeDragSourceListener(java.awt.dnd.DragSourceListener)\"\u003e\u003ccode\u003eremoveDragSourceListener(java.awt.dnd.DragSourceListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSource.html#getDragSourceListeners()\"\u003e\u003ccode\u003egetDragSourceListeners()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edsl\u003c/code\u003e - the \n\u003ccode\u003eDragSourceListener\u003c/code\u003e to add"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragSourceListener",
            "type": "Class"
          },
          "name": "dsl",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeDragSourceListener",
      "comment": "Removes the specified DragSourceListener from this DragSource. If a null listener is specified, no action is taken and no exception is thrown. If the listener specified by the argument was not previously added to this DragSource, no action is taken and no exception is thrown.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSource.html#addDragSourceListener(java.awt.dnd.DragSourceListener)\"\u003e\u003ccode\u003eaddDragSourceListener(java.awt.dnd.DragSourceListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSource.html#getDragSourceListeners()\"\u003e\u003ccode\u003egetDragSourceListeners()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edsl\u003c/code\u003e - the \n\u003ccode\u003eDragSourceListener\u003c/code\u003e to remove"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.dnd.DragSourceListener",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDragSourceListeners",
      "comment": "Gets all the DragSourceListeners registered with this DragSource.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSource.html#addDragSourceListener(java.awt.dnd.DragSourceListener)\"\u003e\u003ccode\u003eaddDragSourceListener(java.awt.dnd.DragSourceListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSource.html#removeDragSourceListener(java.awt.dnd.DragSourceListener)\"\u003e\u003ccode\u003eremoveDragSourceListener(java.awt.dnd.DragSourceListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "all of this \n\u003ccode\u003eDragSource\u003c/code\u003e\u0027s \n\u003ccode\u003eDragSourceListener\u003c/code\u003es or an empty array if no such listeners are currently registered"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragSourceMotionListener",
            "type": "Class"
          },
          "name": "dsml",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addDragSourceMotionListener",
      "comment": "Adds the specified DragSourceMotionListener to this DragSource to receive drag motion events during drag operations initiated with this DragSource. If a null listener is specified, no action is taken and no exception is thrown.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSource.html#removeDragSourceMotionListener(java.awt.dnd.DragSourceMotionListener)\"\u003e\u003ccode\u003eremoveDragSourceMotionListener(java.awt.dnd.DragSourceMotionListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSource.html#getDragSourceMotionListeners()\"\u003e\u003ccode\u003egetDragSourceMotionListeners()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edsml\u003c/code\u003e - the \n\u003ccode\u003eDragSourceMotionListener\u003c/code\u003e to add"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DragSourceMotionListener",
            "type": "Class"
          },
          "name": "dsml",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeDragSourceMotionListener",
      "comment": "Removes the specified DragSourceMotionListener from this DragSource. If a null listener is specified, no action is taken and no exception is thrown. If the listener specified by the argument was not previously added to this DragSource, no action is taken and no exception is thrown.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSource.html#addDragSourceMotionListener(java.awt.dnd.DragSourceMotionListener)\"\u003e\u003ccode\u003eaddDragSourceMotionListener(java.awt.dnd.DragSourceMotionListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSource.html#getDragSourceMotionListeners()\"\u003e\u003ccode\u003egetDragSourceMotionListeners()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edsml\u003c/code\u003e - the \n\u003ccode\u003eDragSourceMotionListener\u003c/code\u003e to remove"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.dnd.DragSourceMotionListener",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDragSourceMotionListeners",
      "comment": "Gets all of the DragSourceMotionListeners registered with this DragSource.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSource.html#addDragSourceMotionListener(java.awt.dnd.DragSourceMotionListener)\"\u003e\u003ccode\u003eaddDragSourceMotionListener(java.awt.dnd.DragSourceMotionListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSource.html#removeDragSourceMotionListener(java.awt.dnd.DragSourceMotionListener)\"\u003e\u003ccode\u003eremoveDragSourceMotionListener(java.awt.dnd.DragSourceMotionListener)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "all of this \n\u003ccode\u003eDragSource\u003c/code\u003e\u0027s \n\u003ccode\u003eDragSourceMotionListener\u003c/code\u003es or an empty array if no such listeners are currently registered"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "listenerType",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "upperBounds": [
            {
              "name": "java.util.EventListener",
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getListeners",
      "comment": "Gets all the objects currently registered as FooListeners upon this DragSource. FooListeners are registered using the addFooListener method.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of listener objects"
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSource.html#getDragSourceListeners()\"\u003e\u003ccode\u003egetDragSourceListeners()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSource.html#getDragSourceMotionListeners()\"\u003e\u003ccode\u003egetDragSourceMotionListeners()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elistenerType\u003c/code\u003e - the type of listeners requested; this parameter should specify an interface that descends from \n\u003ccode\u003ejava.util.EventListener\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elistenerType\u003c/code\u003e doesn\u0027t specify a class or interface that implements \n\u003ccode\u003ejava.util.EventListener\u003c/code\u003e"
        ],
        "return": [
          "an array of all objects registered as \n\u003ccode\u003e\u003cem\u003eFoo\u003c/em\u003eListener\u003c/code\u003es on this \n\u003ccode\u003eDragSource\u003c/code\u003e, or an empty array if no such listeners have been added"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getDragThreshold",
      "comment": "Returns the drag gesture motion threshold. The drag gesture motion threshold defines the recommended behavior for MouseDragGestureRecognizers. If the system property awt.dnd.drag.threshold is set to a positive integer, this method returns the value of the system property; otherwise if a pertinent desktop property is available and supported by the implementation of the Java platform, this method returns the value of that property; otherwise this method returns some default value. The pertinent desktop property can be queried using java.awt.Toolkit.getDesktopProperty(\"DnD.gestureMotionThreshold\").",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/MouseDragGestureRecognizer.html\" title\u003d\"class in java.awt.dnd\"\u003e\u003ccode\u003eMouseDragGestureRecognizer\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the drag gesture motion threshold"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new DragSource.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if GraphicsEnvironment.isHeadless() returns true"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.dnd.DragSource",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.awt.dnd.DragSource\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}