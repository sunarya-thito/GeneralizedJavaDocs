{
  "packageName": "java.awt.dnd",
  "simpleName": "DragSourceDropEvent",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.dnd.DragSourceEvent",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDropSuccess",
      "comment": "This method returns a boolean indicating if the drop was successful.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the drop target accepted the drop and successfully performed a drop action; \n\u003ccode\u003efalse\u003c/code\u003e if the drop target rejected the drop or if the drop target accepted the drop, but failed to perform a drop action."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDropAction",
      "comment": "This method returns an int representing the action performed by the target on the subject of the drop.",
      "tagMap": {
        "return": [
          "the action performed by the target on the subject of the drop if the drop target accepted the drop and the target drop action is supported by the drag source; otherwise, \n\u003ccode\u003eDnDConstants.ACTION_NONE\u003c/code\u003e."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.dnd.DragSourceContext",
            "type": "Class"
          },
          "field": {
            "name": "dsc"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "success"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a DragSourceDropEvent for a drop, given the DragSourceContext, the drop action, and a boolean indicating if the drop was successful. The coordinates for this DragSourceDropEvent are not specified, so getLocation will return null for this event. The argument action should be one of DnDConstants that represents a single action. This constructor does not throw any exception for invalid action.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSourceEvent.html#getLocation()\"\u003e\u003ccode\u003eDragSourceEvent.getLocation()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edsc\u003c/code\u003e - the \n\u003ccode\u003eDragSourceContext\u003c/code\u003e associated with this \n\u003ccode\u003eDragSourceDropEvent\u003c/code\u003e",
          "\u003ccode\u003eaction\u003c/code\u003e - the drop action",
          "\u003ccode\u003esuccess\u003c/code\u003e - a boolean indicating if the drop was successful"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edsc\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.dnd.DragSourceContext",
            "type": "Class"
          },
          "field": {
            "name": "dsc"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "success"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a DragSourceDropEvent for a drop, given the DragSourceContext, the drop action, a boolean indicating if the drop was successful, and coordinates. The argument action should be one of DnDConstants that represents a single action. This constructor does not throw any exception for invalid action.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edsc\u003c/code\u003e - the \n\u003ccode\u003eDragSourceContext\u003c/code\u003e associated with this \n\u003ccode\u003eDragSourceDropEvent\u003c/code\u003e",
          "\u003ccode\u003eaction\u003c/code\u003e - the drop action",
          "\u003ccode\u003esuccess\u003c/code\u003e - a boolean indicating if the drop was successful",
          "\u003ccode\u003ex\u003c/code\u003e - the horizontal coordinate for the cursor location",
          "\u003ccode\u003ey\u003c/code\u003e - the vertical coordinate for the cursor location"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edsc\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.dnd.DragSourceContext",
            "type": "Class"
          },
          "field": {
            "name": "dsc"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a DragSourceDropEvent for a drag that does not result in a drop. The coordinates for this DragSourceDropEvent are not specified, so getLocation will return null for this event.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/dnd/DragSourceEvent.html#getLocation()\"\u003e\u003ccode\u003eDragSourceEvent.getLocation()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edsc\u003c/code\u003e - the \n\u003ccode\u003eDragSourceContext\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edsc\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.dnd.DragSourceDropEvent",
  "comment": "The \n\u003ccode\u003eDragSourceDropEvent\u003c/code\u003e is delivered from the \n\u003ccode\u003eDragSourceContextPeer\u003c/code\u003e, via the \n\u003ccode\u003eDragSourceContext\u003c/code\u003e, to the \n\u003ccode\u003edragDropEnd\u003c/code\u003e method of \n\u003ccode\u003eDragSourceListener\u003c/code\u003es registered with that \n\u003ccode\u003eDragSourceContext\u003c/code\u003e and with its associated \n\u003ccode\u003eDragSource\u003c/code\u003e. It contains sufficient information for the originator of the operation to provide appropriate feedback to the end user when the operation completes.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.awt.dnd.DragSourceDropEvent\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}