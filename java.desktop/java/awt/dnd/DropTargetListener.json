{
  "packageName": "java.awt.dnd",
  "simpleName": "DropTargetListener",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.util.EventListener",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DropTargetDragEvent",
            "type": "Class"
          },
          "name": "dtde",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "dragEnter",
      "comment": "Called while a drag operation is ongoing, when the mouse pointer enters the operable part of the drop site for the DropTarget registered with this listener.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edtde\u003c/code\u003e - the \n\u003ccode\u003eDropTargetDragEvent\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DropTargetDragEvent",
            "type": "Class"
          },
          "name": "dtde",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "dragOver",
      "comment": "Called when a drag operation is ongoing, while the mouse pointer is still over the operable part of the drop site for the DropTarget registered with this listener.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edtde\u003c/code\u003e - the \n\u003ccode\u003eDropTargetDragEvent\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DropTargetDragEvent",
            "type": "Class"
          },
          "name": "dtde",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "dropActionChanged",
      "comment": "Called if the user has modified the current drop gesture.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edtde\u003c/code\u003e - the \n\u003ccode\u003eDropTargetDragEvent\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DropTargetEvent",
            "type": "Class"
          },
          "name": "dte",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "dragExit",
      "comment": "Called while a drag operation is ongoing, when the mouse pointer has exited the operable part of the drop site for the DropTarget registered with this listener.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edte\u003c/code\u003e - the \n\u003ccode\u003eDropTargetEvent\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.dnd.DropTargetDropEvent",
            "type": "Class"
          },
          "name": "dtde",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "drop",
      "comment": "Called when the drag operation has terminated with a drop on the operable part of the drop site for the DropTarget registered with this listener. This method is responsible for undertaking the transfer of the data associated with the gesture. The DropTargetDropEvent provides a means to obtain a Transferable object that represents the data object(s) to be transferred. From this method, the DropTargetListener shall accept or reject the drop via the acceptDrop(int dropAction) or rejectDrop() methods of the DropTargetDropEvent parameter. Subsequent to acceptDrop(), but not before, DropTargetDropEvent\u0027s getTransferable() method may be invoked, and data transfer may be performed via the returned Transferable\u0027s getTransferData() method. At the completion of a drop, an implementation of this method is required to signal the success/failure of the drop by passing an appropriate boolean to the DropTargetDropEvent\u0027s dropComplete(boolean success) method. Note: The data transfer should be completed before the call to the DropTargetDropEvent\u0027s dropComplete(boolean success) method. After that, a call to the getTransferData() method of the Transferable returned by DropTargetDropEvent.getTransferable() is guaranteed to succeed only if the data transfer is local; that is, only if DropTargetDropEvent.isLocalTransfer() returns true. Otherwise, the behavior of the call is implementation-dependent.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edtde\u003c/code\u003e - the \n\u003ccode\u003eDropTargetDropEvent\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.awt.dnd.DropTargetListener",
  "annotations": [],
  "tagMap": {
    "since": [
      "1.2"
    ]
  }
}