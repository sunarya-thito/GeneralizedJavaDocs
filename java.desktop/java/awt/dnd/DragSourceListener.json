{
  "packageName": "java.awt.dnd",
  "simpleName": "DragSourceListener",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.util.EventListener",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "dragEnter",
      "comment": "Called as the cursor\u0027s hotspot enters a platform-dependent drop site. This method is invoked when all the following conditions are true: The cursor\u0027s hotspot enters the operable part of a platform- dependent drop site. The drop site is active. The drop site accepts the drag.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edsde\u003c/code\u003e - the \n\u003ccode\u003eDragSourceDragEvent\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "dragOver",
      "comment": "Called as the cursor\u0027s hotspot moves over a platform-dependent drop site. This method is invoked when all the following conditions are true: The cursor\u0027s hotspot has moved, but still intersects the operable part of the drop site associated with the previous dragEnter() invocation. The drop site is still active. The drop site accepts the drag.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edsde\u003c/code\u003e - the \n\u003ccode\u003eDragSourceDragEvent\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "dropActionChanged",
      "comment": "Called when the user has modified the drop gesture. This method is invoked when the state of the input device(s) that the user is interacting with changes. Such devices are typically the mouse buttons or keyboard modifiers that the user is interacting with.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edsde\u003c/code\u003e - the \n\u003ccode\u003eDragSourceDragEvent\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "dragExit",
      "comment": "Called as the cursor\u0027s hotspot exits a platform-dependent drop site. This method is invoked when any of the following conditions are true: The cursor\u0027s hotspot no longer intersects the operable part of the drop site associated with the previous dragEnter() invocation. OR The drop site associated with the previous dragEnter() invocation is no longer active. OR The drop site associated with the previous dragEnter() invocation has rejected the drag.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edse\u003c/code\u003e - the \n\u003ccode\u003eDragSourceEvent\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "dragDropEnd",
      "comment": "This method is invoked to signify that the Drag and Drop operation is complete. The getDropSuccess() method of the DragSourceDropEvent can be used to determine the termination state. The getDropAction() method returns the operation that the drop site selected to apply to the Drop operation. Once this method is complete, the current DragSourceContext and associated resources become invalid.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edsde\u003c/code\u003e - the \n\u003ccode\u003eDragSourceDropEvent\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.awt.dnd.DragSourceListener",
  "comment": "The \n\u003ccode\u003eDragSourceListener\u003c/code\u003e defines the event interface for originators of Drag and Drop operations to track the state of the user\u0027s gesture, and to provide appropriate \"drag over\" feedback to the user throughout the Drag and Drop operation. \n\u003cp\u003e The drop site is \u003ci\u003eassociated with the previous \u003ccode\u003edragEnter()\u003c/code\u003e invocation\u003c/i\u003e if the latest invocation of \u003ccode\u003edragEnter()\u003c/code\u003e on this listener: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003ecorresponds to that drop site and \u003c/li\u003e\n \u003cli\u003e is not followed by a \u003ccode\u003edragExit()\u003c/code\u003e invocation on this listener. \u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.2"
    ]
  }
}