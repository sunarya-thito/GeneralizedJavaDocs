{
  "packageName": "java.awt.dnd",
  "simpleName": "DropTargetDropEvent",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.dnd.DropTargetEvent",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.awt.Point",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLocation",
      "comment": "This method returns a Point indicating the Cursor\u0027s current location in the Component\u0027s coordinates.",
      "tagMap": {
        "return": [
          "the current \n\u003ccode\u003eCursor\u003c/code\u003e location in Component\u0027s coords."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.datatransfer.DataFlavor",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCurrentDataFlavors",
      "comment": "This method returns the current DataFlavors.",
      "tagMap": {
        "return": [
          "current DataFlavors"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.awt.datatransfer.DataFlavor",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCurrentDataFlavorsAsList",
      "comment": "This method returns the currently available DataFlavors as a java.util.List.",
      "tagMap": {
        "return": [
          "the currently available DataFlavors as a java.util.List"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.datatransfer.DataFlavor",
            "type": "Class"
          },
          "field": {
            "name": "df"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isDataFlavorSupported",
      "comment": "This method returns a boolean indicating if the specified DataFlavor is available from the source.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edf\u003c/code\u003e - the \n\u003ccode\u003eDataFlavor\u003c/code\u003e to test"
        ],
        "return": [
          "if the DataFlavor specified is available from the source"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSourceActions",
      "comment": "This method returns the source drop actions.",
      "tagMap": {
        "return": [
          "the source drop actions."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDropAction",
      "comment": "This method returns the user drop action.",
      "tagMap": {
        "return": [
          "the user drop actions."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.datatransfer.Transferable",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTransferable",
      "comment": "This method returns the Transferable object associated with the drop.",
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eTransferable\u003c/code\u003e associated with the drop"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dropAction"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "acceptDrop",
      "comment": "accept the drop, using the specified action.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edropAction\u003c/code\u003e - the specified action"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "rejectDrop",
      "comment": "reject the Drop.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "success"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "dropComplete",
      "comment": "This method notifies the DragSource that the drop transfer(s) are completed.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esuccess\u003c/code\u003e - a \n\u003ccode\u003eboolean\u003c/code\u003e indicating that the drop transfer(s) are completed."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isLocalTransfer",
      "comment": "This method returns an int indicating if the source is in the same JVM as the target.",
      "tagMap": {
        "return": [
          "if the Source is in the same JVM"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.dnd.DropTargetContext",
            "type": "Class"
          },
          "field": {
            "name": "dtc"
          }
        },
        {
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "field": {
            "name": "cursorLocn"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dropAction"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "srcActions"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a DropTargetDropEvent given the DropTargetContext for this operation, the location of the drag Cursor\u0027s hotspot in the Component\u0027s coordinates, the currently selected user drop action, and the current set of actions supported by the source. By default, this constructor assumes that the target is not in the same virtual machine as the source; that is, isLocalTransfer() will return false.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edtc\u003c/code\u003e - The \n\u003ccode\u003eDropTargetContext\u003c/code\u003e for this operation",
          "\u003ccode\u003ecursorLocn\u003c/code\u003e - The location of the \"Drag\" Cursor\u0027s hotspot in \n\u003ccode\u003eComponent\u003c/code\u003e coordinates",
          "\u003ccode\u003edropAction\u003c/code\u003e - the user drop action.",
          "\u003ccode\u003esrcActions\u003c/code\u003e - the source drop actions."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if cursorLocn is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if dropAction is not one of \n\u003ccode\u003eDnDConstants\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if srcActions is not a bitwise mask of \n\u003ccode\u003eDnDConstants\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if dtc is \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.dnd.DropTargetContext",
            "type": "Class"
          },
          "field": {
            "name": "dtc"
          }
        },
        {
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "field": {
            "name": "cursorLocn"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dropAction"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "srcActions"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "isLocal"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a DropTargetEvent given the DropTargetContext for this operation, the location of the drag Cursor\u0027s hotspot in the Component\u0027s coordinates, the currently selected user drop action, the current set of actions supported by the source, and a boolean indicating if the source is in the same JVM as the target.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edtc\u003c/code\u003e - The DropTargetContext for this operation",
          "\u003ccode\u003ecursorLocn\u003c/code\u003e - The location of the \"Drag\" Cursor\u0027s hotspot in Component\u0027s coordinates",
          "\u003ccode\u003edropAction\u003c/code\u003e - the user drop action.",
          "\u003ccode\u003esrcActions\u003c/code\u003e - the source drop actions.",
          "\u003ccode\u003eisLocal\u003c/code\u003e - True if the source is in the same JVM as the target"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if cursorLocn is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if dropAction is not one of \n\u003ccode\u003eDnDConstants\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if srcActions is not a bitwise mask of \n\u003ccode\u003eDnDConstants\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if dtc is \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.dnd.DropTargetDropEvent",
  "comment": "The \n\u003ccode\u003eDropTargetDropEvent\u003c/code\u003e is delivered via the \n\u003ccode\u003eDropTargetListener\u003c/code\u003e drop() method. \n\u003cp\u003e The \u003ccode\u003eDropTargetDropEvent\u003c/code\u003e reports the \u003ci\u003esource drop actions\u003c/i\u003e and the \u003ci\u003euser drop action\u003c/i\u003e that reflect the current state of the drag-and-drop operation. \u003c/p\u003e\n\u003cp\u003e \u003ci\u003eSource drop actions\u003c/i\u003e is a bitwise mask of \u003ccode\u003eDnDConstants\u003c/code\u003e that represents the set of drop actions supported by the drag source for this drag-and-drop operation. \u003c/p\u003e\n\u003cp\u003e \u003ci\u003eUser drop action\u003c/i\u003e depends on the drop actions supported by the drag source and the drop action selected by the user. The user can select a drop action by pressing modifier keys during the drag operation: \u003c/p\u003e\n\u003cpre\u003e   Ctrl + Shift -\u0026gt; ACTION_LINK\n   Ctrl         -\u0026gt; ACTION_COPY\n   Shift        -\u0026gt; ACTION_MOVE\n \u003c/pre\u003e If the user selects a drop action, the \n\u003ci\u003euser drop action\u003c/i\u003e is one of \n\u003ccode\u003eDnDConstants\u003c/code\u003e that represents the selected drop action if this drop action is supported by the drag source or \n\u003ccode\u003eDnDConstants.ACTION_NONE\u003c/code\u003e if this drop action is not supported by the drag source. \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e If the user doesn\u0027t select a drop action, the set of \u003ccode\u003eDnDConstants\u003c/code\u003e that represents the set of drop actions supported by the drag source is searched for \u003ccode\u003eDnDConstants.ACTION_MOVE\u003c/code\u003e, then for \u003ccode\u003eDnDConstants.ACTION_COPY\u003c/code\u003e, then for \u003ccode\u003eDnDConstants.ACTION_LINK\u003c/code\u003e and the \u003ci\u003euser drop action\u003c/i\u003e is the first constant found. If no constant is found the \u003ci\u003euser drop action\u003c/i\u003e is \u003ccode\u003eDnDConstants.ACTION_NONE\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.awt.dnd.DropTargetDropEvent\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}