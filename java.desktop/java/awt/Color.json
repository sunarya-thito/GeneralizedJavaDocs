{
  "packageName": "java.awt",
  "simpleName": "Color",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "white",
      "comment": "The color white. In the default sRGB space.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WHITE",
      "comment": "The color white. In the default sRGB space.",
      "tagMap": {
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "lightGray",
      "comment": "The color light gray. In the default sRGB space.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "LIGHT_GRAY",
      "comment": "The color light gray. In the default sRGB space.",
      "tagMap": {
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "gray",
      "comment": "The color gray. In the default sRGB space.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "GRAY",
      "comment": "The color gray. In the default sRGB space.",
      "tagMap": {
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "darkGray",
      "comment": "The color dark gray. In the default sRGB space.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DARK_GRAY",
      "comment": "The color dark gray. In the default sRGB space.",
      "tagMap": {
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "black",
      "comment": "The color black. In the default sRGB space.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "BLACK",
      "comment": "The color black. In the default sRGB space.",
      "tagMap": {
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "red",
      "comment": "The color red. In the default sRGB space.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "RED",
      "comment": "The color red. In the default sRGB space.",
      "tagMap": {
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "pink",
      "comment": "The color pink. In the default sRGB space.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PINK",
      "comment": "The color pink. In the default sRGB space.",
      "tagMap": {
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "orange",
      "comment": "The color orange. In the default sRGB space.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ORANGE",
      "comment": "The color orange. In the default sRGB space.",
      "tagMap": {
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "yellow",
      "comment": "The color yellow. In the default sRGB space.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "YELLOW",
      "comment": "The color yellow. In the default sRGB space.",
      "tagMap": {
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "green",
      "comment": "The color green. In the default sRGB space.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "GREEN",
      "comment": "The color green. In the default sRGB space.",
      "tagMap": {
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "magenta",
      "comment": "The color magenta. In the default sRGB space.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "MAGENTA",
      "comment": "The color magenta. In the default sRGB space.",
      "tagMap": {
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "cyan",
      "comment": "The color cyan. In the default sRGB space.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "CYAN",
      "comment": "The color cyan. In the default sRGB space.",
      "tagMap": {
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "blue",
      "comment": "The color blue. In the default sRGB space.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "BLUE",
      "comment": "The color blue. In the default sRGB space.",
      "tagMap": {
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRed",
      "comment": "Returns the red component in the range 0-255 in the default sRGB space.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRGB()\"\u003e\u003ccode\u003egetRGB()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the red component."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getGreen",
      "comment": "Returns the green component in the range 0-255 in the default sRGB space.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRGB()\"\u003e\u003ccode\u003egetRGB()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the green component."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBlue",
      "comment": "Returns the blue component in the range 0-255 in the default sRGB space.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRGB()\"\u003e\u003ccode\u003egetRGB()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the blue component."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAlpha",
      "comment": "Returns the alpha component in the range 0-255.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRGB()\"\u003e\u003ccode\u003egetRGB()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the alpha component."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRGB",
      "comment": "Returns the RGB value representing the color in the default sRGB ColorModel. (Bits 24-31 are alpha, 16-23 are red, 8-15 are green, 0-7 are blue).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ColorModel.html#getRGBdefault()\"\u003e\u003ccode\u003eColorModel.getRGBdefault()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRed()\"\u003e\u003ccode\u003egetRed()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getGreen()\"\u003e\u003ccode\u003egetGreen()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getBlue()\"\u003e\u003ccode\u003egetBlue()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the RGB value of the color in the default sRGB \n\u003ccode\u003eColorModel\u003c/code\u003e."
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "brighter",
      "comment": "Creates a new Color that is a brighter version of this Color. This method applies an arbitrary scale factor to each of the three RGB components of this Color to create a brighter version of this Color. The alpha value is preserved. Although brighter and darker are inverse operations, the results of a series of invocations of these two methods might be inconsistent because of rounding errors.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#darker()\"\u003e\u003ccode\u003edarker()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a new \n\u003ccode\u003eColor\u003c/code\u003e object that is a brighter version of this \n\u003ccode\u003eColor\u003c/code\u003e with the same \n\u003ccode\u003ealpha\u003c/code\u003e value."
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "darker",
      "comment": "Creates a new Color that is a darker version of this Color. This method applies an arbitrary scale factor to each of the three RGB components of this Color to create a darker version of this Color. The alpha value is preserved. Although brighter and darker are inverse operations, the results of a series of invocations of these two methods might be inconsistent because of rounding errors.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#brighter()\"\u003e\u003ccode\u003ebrighter()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a new \n\u003ccode\u003eColor\u003c/code\u003e object that is a darker version of this \n\u003ccode\u003eColor\u003c/code\u003e with the same \n\u003ccode\u003ealpha\u003c/code\u003e value."
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Computes the hash code for this Color.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code value for this object."
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Determines whether another object is equal to this Color. The result is true if and only if the argument is not null and is a Color object that has the same red, green, blue, and alpha values as this object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to test for equality with this \n\u003ccode\u003eColor\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the objects are the same; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of this Color. This method is intended to be used only for debugging purposes. The content and format of the returned string might vary between implementations. The returned string might be empty but cannot be null.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this \n\u003ccode\u003eColor\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.NumberFormatException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "nm"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "decode",
      "comment": "Converts a String to an integer and returns the specified opaque Color. This method handles string formats that are used to represent octal and hexadecimal numbers.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Integer.html#decode(java.lang.String)\"\u003e\u003ccode\u003eInteger.decode(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enm\u003c/code\u003e - a \n\u003ccode\u003eString\u003c/code\u003e that represents an opaque color as a 24-bit integer"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NumberFormatException.html\" title\u003d\"class in java.lang\"\u003eNumberFormatException\u003c/a\u003e\u003c/code\u003e - if the specified string cannot be interpreted as a decimal, octal, or hexadecimal integer."
        ],
        "return": [
          "the new \n\u003ccode\u003eColor\u003c/code\u003e object."
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "nm"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getColor",
      "comment": "Finds a color in the system properties. The argument is treated as the name of a system property to be obtained. The string value of this property is then interpreted as an integer which is then converted to a Color object. If the specified property is not found or could not be parsed as an integer then null is returned.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#getProperty(java.lang.String)\"\u003e\u003ccode\u003eSystem.getProperty(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Integer.html#getInteger(java.lang.String)\"\u003e\u003ccode\u003eInteger.getInteger(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#%3Cinit%3E(int)\"\u003e\u003ccode\u003eColor(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enm\u003c/code\u003e - the name of the color property"
        ],
        "return": [
          "the \n\u003ccode\u003eColor\u003c/code\u003e converted from the system property."
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "nm"
          }
        },
        {
          "type": {
            "name": "java.awt.Color",
            "type": "Class"
          },
          "field": {
            "name": "v"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getColor",
      "comment": "Finds a color in the system properties. The first argument is treated as the name of a system property to be obtained. The string value of this property is then interpreted as an integer which is then converted to a Color object. If the specified property is not found or cannot be parsed as an integer then the Color specified by the second argument is returned instead.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#getProperty(java.lang.String)\"\u003e\u003ccode\u003eSystem.getProperty(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Integer.html#getInteger(java.lang.String)\"\u003e\u003ccode\u003eInteger.getInteger(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#%3Cinit%3E(int)\"\u003e\u003ccode\u003eColor(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enm\u003c/code\u003e - the name of the color property",
          "\u003ccode\u003ev\u003c/code\u003e - the default \n\u003ccode\u003eColor\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eColor\u003c/code\u003e converted from the system property, or the specified \n\u003ccode\u003eColor\u003c/code\u003e."
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "nm"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "v"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getColor",
      "comment": "Finds a color in the system properties. The first argument is treated as the name of a system property to be obtained. The string value of this property is then interpreted as an integer which is then converted to a Color object. If the specified property is not found or could not be parsed as an integer then the integer value v is used instead, and is converted to a Color object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#getProperty(java.lang.String)\"\u003e\u003ccode\u003eSystem.getProperty(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Integer.html#getInteger(java.lang.String)\"\u003e\u003ccode\u003eInteger.getInteger(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#%3Cinit%3E(int)\"\u003e\u003ccode\u003eColor(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enm\u003c/code\u003e - the name of the color property",
          "\u003ccode\u003ev\u003c/code\u003e - the default color value, as an integer"
        ],
        "return": [
          "the \n\u003ccode\u003eColor\u003c/code\u003e converted from the system property or the \n\u003ccode\u003eColor\u003c/code\u003e converted from the specified integer."
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "hue"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "saturation"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "brightness"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "HSBtoRGB",
      "comment": "Converts the components of a color, as specified by the HSB model, to an equivalent set of values for the default RGB model. The saturation and brightness components should be floating-point values between zero and one (numbers in the range 0.0-1.0). The hue component can be any floating-point number. The floor of this number is subtracted from it to create a fraction between 0 and 1. This fractional number is then multiplied by 360 to produce the hue angle in the HSB color model. The integer that is returned by HSBtoRGB encodes the value of a color in bits 0-23 of an integer value that is the same format used by the method getRGB. This integer can be supplied as an argument to the Color constructor that takes a single integer argument.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRGB()\"\u003e\u003ccode\u003egetRGB()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#%3Cinit%3E(int)\"\u003e\u003ccode\u003eColor(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ColorModel.html#getRGBdefault()\"\u003e\u003ccode\u003eColorModel.getRGBdefault()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ehue\u003c/code\u003e - the hue component of the color",
          "\u003ccode\u003esaturation\u003c/code\u003e - the saturation of the color",
          "\u003ccode\u003ebrightness\u003c/code\u003e - the brightness of the color"
        ],
        "return": [
          "the RGB value of the color with the indicated hue, saturation, and brightness."
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "hsbvals"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "RGBtoHSB",
      "comment": "Converts the components of a color, as specified by the default RGB model, to an equivalent set of values for hue, saturation, and brightness that are the three components of the HSB model. If the hsbvals argument is null, then a new array is allocated to return the result. Otherwise, the method returns the array hsbvals, with the values put into that array.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRGB()\"\u003e\u003ccode\u003egetRGB()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#%3Cinit%3E(int)\"\u003e\u003ccode\u003eColor(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ColorModel.html#getRGBdefault()\"\u003e\u003ccode\u003eColorModel.getRGBdefault()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the red component of the color",
          "\u003ccode\u003eg\u003c/code\u003e - the green component of the color",
          "\u003ccode\u003eb\u003c/code\u003e - the blue component of the color",
          "\u003ccode\u003ehsbvals\u003c/code\u003e - the array used to return the three HSB values, or \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an array of three elements containing the hue, saturation, and brightness (in that order), of the color with the indicated red, green, and blue components."
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Color",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getHSBColor",
      "comment": "Creates a Color object based on the specified values for the HSB color model. The s and b components should be floating-point values between zero and one (numbers in the range 0.0-1.0). The h component can be any floating-point number. The floor of this number is subtracted from it to create a fraction between 0 and 1. This fractional number is then multiplied by 360 to produce the hue angle in the HSB color model.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eh\u003c/code\u003e - the hue component",
          "\u003ccode\u003es\u003c/code\u003e - the saturation of the color",
          "\u003ccode\u003eb\u003c/code\u003e - the brightness of the color"
        ],
        "return": [
          "a \n\u003ccode\u003eColor\u003c/code\u003e object with the specified hue, saturation, and brightness."
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "compArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRGBComponents",
      "comment": "Returns a float array containing the color and alpha components of the Color, as represented in the default sRGB color space. If compArray is null, an array of length 4 is created for the return value. Otherwise, compArray must have length 4 or greater, and it is filled in with the components and returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecompArray\u003c/code\u003e - an array that this method fills with color and alpha components and returns"
        ],
        "return": [
          "the RGBA components in a \n\u003ccode\u003efloat\u003c/code\u003e array."
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "compArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRGBColorComponents",
      "comment": "Returns a float array containing only the color components of the Color, in the default sRGB color space. If compArray is null, an array of length 3 is created for the return value. Otherwise, compArray must have length 3 or greater, and it is filled in with the components and returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecompArray\u003c/code\u003e - an array that this method fills with color components and returns"
        ],
        "return": [
          "the RGB components in a \n\u003ccode\u003efloat\u003c/code\u003e array."
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "compArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getComponents",
      "comment": "Returns a float array containing the color and alpha components of the Color, in the ColorSpace of the Color. If compArray is null, an array with length equal to the number of components in the associated ColorSpace plus one is created for the return value. Otherwise, compArray must have at least this length and it is filled in with the components and returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecompArray\u003c/code\u003e - an array that this method fills with the color and alpha components of this \n\u003ccode\u003eColor\u003c/code\u003e in its \n\u003ccode\u003eColorSpace\u003c/code\u003e and returns"
        ],
        "return": [
          "the color and alpha components in a \n\u003ccode\u003efloat\u003c/code\u003e array."
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "compArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColorComponents",
      "comment": "Returns a float array containing only the color components of the Color, in the ColorSpace of the Color. If compArray is null, an array with length equal to the number of components in the associated ColorSpace is created for the return value. Otherwise, compArray must have at least this length and it is filled in with the components and returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecompArray\u003c/code\u003e - an array that this method fills with the color components of this \n\u003ccode\u003eColor\u003c/code\u003e in its \n\u003ccode\u003eColorSpace\u003c/code\u003e and returns"
        ],
        "return": [
          "the color components in a \n\u003ccode\u003efloat\u003c/code\u003e array."
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.color.ColorSpace",
            "type": "Class"
          },
          "field": {
            "name": "cspace"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "compArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getComponents",
      "comment": "Returns a float array containing the color and alpha components of the Color, in the ColorSpace specified by the cspace parameter. If compArray is null, an array with length equal to the number of components in cspace plus one is created for the return value. Otherwise, compArray must have at least this length, and it is filled in with the components and returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecspace\u003c/code\u003e - a specified \n\u003ccode\u003eColorSpace\u003c/code\u003e",
          "\u003ccode\u003ecompArray\u003c/code\u003e - an array that this method fills with the color and alpha components of this \n\u003ccode\u003eColor\u003c/code\u003e in the specified \n\u003ccode\u003eColorSpace\u003c/code\u003e and returns"
        ],
        "return": [
          "the color and alpha components in a \n\u003ccode\u003efloat\u003c/code\u003e array."
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.color.ColorSpace",
            "type": "Class"
          },
          "field": {
            "name": "cspace"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "compArray"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColorComponents",
      "comment": "Returns a float array containing only the color components of the Color in the ColorSpace specified by the cspace parameter. If compArray is null, an array with length equal to the number of components in cspace is created for the return value. Otherwise, compArray must have at least this length, and it is filled in with the components and returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecspace\u003c/code\u003e - a specified \n\u003ccode\u003eColorSpace\u003c/code\u003e",
          "\u003ccode\u003ecompArray\u003c/code\u003e - an array that this method fills with the color components of this \n\u003ccode\u003eColor\u003c/code\u003e in the specified \n\u003ccode\u003eColorSpace\u003c/code\u003e"
        ],
        "return": [
          "the color components in a \n\u003ccode\u003efloat\u003c/code\u003e array."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.color.ColorSpace",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColorSpace",
      "comment": "Returns the ColorSpace of this Color.",
      "tagMap": {
        "return": [
          "this \n\u003ccode\u003eColor\u003c/code\u003e object\u0027s \n\u003ccode\u003eColorSpace\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.PaintContext",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.image.ColorModel",
            "type": "Class"
          },
          "field": {
            "name": "cm"
          }
        },
        {
          "type": {
            "name": "java.awt.Rectangle",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        },
        {
          "type": {
            "name": "java.awt.geom.Rectangle2D",
            "type": "Class"
          },
          "field": {
            "name": "r2d"
          }
        },
        {
          "type": {
            "name": "java.awt.geom.AffineTransform",
            "type": "Class"
          },
          "field": {
            "name": "xform"
          }
        },
        {
          "type": {
            "name": "java.awt.RenderingHints",
            "type": "Class"
          },
          "field": {
            "name": "hints"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createContext",
      "comment": "Creates and returns a PaintContext used to generate a solid color field pattern. See the specification of the method in the Paint interface for information on null parameter handling.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Paint.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003ePaint\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/PaintContext.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003ePaintContext\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ColorModel.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eColorModel\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eRectangle\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html\" title\u003d\"class in java.awt.geom\"\u003e\u003ccode\u003eRectangle2D\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/AffineTransform.html\" title\u003d\"class in java.awt.geom\"\u003e\u003ccode\u003eAffineTransform\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eRenderingHints\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Paint.html#createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)\"\u003ecreateContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Paint.html\" title\u003d\"interface in java.awt\"\u003ePaint\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecm\u003c/code\u003e - the preferred \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ColorModel.html\" title\u003d\"class in java.awt.image\"\u003e\u003ccode\u003eColorModel\u003c/code\u003e\u003c/a\u003e which represents the most convenient format for the caller to receive the pixel data, or \n\u003ccode\u003enull\u003c/code\u003e if there is no preference.",
          "\u003ccode\u003er\u003c/code\u003e - the device space bounding box of the graphics primitive being rendered.",
          "\u003ccode\u003er2d\u003c/code\u003e - the user space bounding box of the graphics primitive being rendered.",
          "\u003ccode\u003exform\u003c/code\u003e - the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/AffineTransform.html\" title\u003d\"class in java.awt.geom\"\u003e\u003ccode\u003eAffineTransform\u003c/code\u003e\u003c/a\u003e from user space into device space.",
          "\u003ccode\u003ehints\u003c/code\u003e - the set of hints that the context object can use to choose between rendering alternatives."
        ],
        "return": [
          "the \n\u003ccode\u003ePaintContext\u003c/code\u003e for generating color patterns."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTransparency",
      "comment": "Returns the transparency mode for this Color. This is required to implement the Paint interface.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Paint.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003ePaint\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Transparency.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003eTransparency\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)\"\u003e\u003ccode\u003ecreateContext(java.awt.image.ColorModel, java.awt.Rectangle, java.awt.geom.Rectangle2D, java.awt.geom.AffineTransform, java.awt.RenderingHints)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Transparency.html#getTransparency()\"\u003egetTransparency\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Transparency.html\" title\u003d\"interface in java.awt\"\u003eTransparency\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "this \n\u003ccode\u003eColor\u003c/code\u003e object\u0027s transparency mode."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an opaque sRGB color with the specified red, green, and blue values in the range (0 - 255). The actual color used in rendering depends on finding the best match given the color space available for a given output device. Alpha is defaulted to 255.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRed()\"\u003e\u003ccode\u003egetRed()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getGreen()\"\u003e\u003ccode\u003egetGreen()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getBlue()\"\u003e\u003ccode\u003egetBlue()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRGB()\"\u003e\u003ccode\u003egetRGB()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the red component",
          "\u003ccode\u003eg\u003c/code\u003e - the green component",
          "\u003ccode\u003eb\u003c/code\u003e - the blue component"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003er\u003c/code\u003e, \n\u003ccode\u003eg\u003c/code\u003e or \n\u003ccode\u003eb\u003c/code\u003e are outside of the range 0 to 255, inclusive"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "a"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an sRGB color with the specified red, green, blue, and alpha values in the range (0 - 255).",
      "annotations": [
        {
          "type": "ConstructorProperties",
          "values": [
            {
              "name": "value",
              "value": [
                "red",
                "green",
                "blue",
                "alpha"
              ]
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRed()\"\u003e\u003ccode\u003egetRed()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getGreen()\"\u003e\u003ccode\u003egetGreen()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getBlue()\"\u003e\u003ccode\u003egetBlue()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getAlpha()\"\u003e\u003ccode\u003egetAlpha()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRGB()\"\u003e\u003ccode\u003egetRGB()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the red component",
          "\u003ccode\u003eg\u003c/code\u003e - the green component",
          "\u003ccode\u003eb\u003c/code\u003e - the blue component",
          "\u003ccode\u003ea\u003c/code\u003e - the alpha component"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003er\u003c/code\u003e, \n\u003ccode\u003eg\u003c/code\u003e, \n\u003ccode\u003eb\u003c/code\u003e or \n\u003ccode\u003ea\u003c/code\u003e are outside of the range 0 to 255, inclusive"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "rgb"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an opaque sRGB color with the specified combined RGB value consisting of the red component in bits 16-23, the green component in bits 8-15, and the blue component in bits 0-7. The actual color used in rendering depends on finding the best match given the color space available for a particular output device. Alpha is defaulted to 255.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ColorModel.html#getRGBdefault()\"\u003e\u003ccode\u003eColorModel.getRGBdefault()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRed()\"\u003e\u003ccode\u003egetRed()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getGreen()\"\u003e\u003ccode\u003egetGreen()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getBlue()\"\u003e\u003ccode\u003egetBlue()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRGB()\"\u003e\u003ccode\u003egetRGB()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ergb\u003c/code\u003e - the combined RGB components"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "rgba"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "hasalpha"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an sRGB color with the specified combined RGBA value consisting of the alpha component in bits 24-31, the red component in bits 16-23, the green component in bits 8-15, and the blue component in bits 0-7. If the hasalpha argument is false, alpha is defaulted to 255.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/image/ColorModel.html#getRGBdefault()\"\u003e\u003ccode\u003eColorModel.getRGBdefault()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRed()\"\u003e\u003ccode\u003egetRed()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getGreen()\"\u003e\u003ccode\u003egetGreen()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getBlue()\"\u003e\u003ccode\u003egetBlue()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getAlpha()\"\u003e\u003ccode\u003egetAlpha()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRGB()\"\u003e\u003ccode\u003egetRGB()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ergba\u003c/code\u003e - the combined RGBA components",
          "\u003ccode\u003ehasalpha\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the alpha bits are valid; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an opaque sRGB color with the specified red, green, and blue values in the range (0.0 - 1.0). Alpha is defaulted to 1.0. The actual color used in rendering depends on finding the best match given the color space available for a particular output device.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRed()\"\u003e\u003ccode\u003egetRed()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getGreen()\"\u003e\u003ccode\u003egetGreen()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getBlue()\"\u003e\u003ccode\u003egetBlue()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRGB()\"\u003e\u003ccode\u003egetRGB()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the red component",
          "\u003ccode\u003eg\u003c/code\u003e - the green component",
          "\u003ccode\u003eb\u003c/code\u003e - the blue component"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003er\u003c/code\u003e, \n\u003ccode\u003eg\u003c/code\u003e or \n\u003ccode\u003eb\u003c/code\u003e are outside of the range 0.0 to 1.0, inclusive"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "g"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "a"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an sRGB color with the specified red, green, blue, and alpha values in the range (0.0 - 1.0). The actual color used in rendering depends on finding the best match given the color space available for a particular output device.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRed()\"\u003e\u003ccode\u003egetRed()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getGreen()\"\u003e\u003ccode\u003egetGreen()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getBlue()\"\u003e\u003ccode\u003egetBlue()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getAlpha()\"\u003e\u003ccode\u003egetAlpha()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getRGB()\"\u003e\u003ccode\u003egetRGB()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the red component",
          "\u003ccode\u003eg\u003c/code\u003e - the green component",
          "\u003ccode\u003eb\u003c/code\u003e - the blue component",
          "\u003ccode\u003ea\u003c/code\u003e - the alpha component"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003er\u003c/code\u003e, \n\u003ccode\u003eg\u003c/code\u003e \n\u003ccode\u003eb\u003c/code\u003e or \n\u003ccode\u003ea\u003c/code\u003e are outside of the range 0.0 to 1.0, inclusive"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.color.ColorSpace",
            "type": "Class"
          },
          "field": {
            "name": "cspace"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "components"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "alpha"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a color in the specified ColorSpace with the color components specified in the float array and the specified alpha. The number of components is determined by the type of the ColorSpace. For example, RGB requires 3 components, but CMYK requires 4 components.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getComponents(float%5B%5D)\"\u003e\u003ccode\u003egetComponents(float[])\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Color.html#getColorComponents(float%5B%5D)\"\u003e\u003ccode\u003egetColorComponents(float[])\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecspace\u003c/code\u003e - the \n\u003ccode\u003eColorSpace\u003c/code\u003e to be used to interpret the components",
          "\u003ccode\u003ecomponents\u003c/code\u003e - an arbitrary number of color components that is compatible with the \n\u003ccode\u003eColorSpace\u003c/code\u003e",
          "\u003ccode\u003ealpha\u003c/code\u003e - alpha value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if any of the values in the \n\u003ccode\u003ecomponents\u003c/code\u003e array or \n\u003ccode\u003ealpha\u003c/code\u003e is outside of the range 0.0 to 1.0"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.Color",
  "comment": "The \n\u003ccode\u003eColor\u003c/code\u003e class is used to encapsulate colors in the default sRGB color space or colors in arbitrary color spaces identified by a \n\u003ca href\u003d\"color/ColorSpace.html\" title\u003d\"class in java.awt.color\"\u003e\u003ccode\u003eColorSpace\u003c/code\u003e\u003c/a\u003e. Every color has an implicit alpha value of 1.0 or an explicit one provided in the constructor. The alpha value defines the transparency of a color and can be represented by a float value in the range 0.0\u0026nbsp;-\u0026nbsp;1.0 or 0\u0026nbsp;-\u0026nbsp;255. An alpha value of 1.0 or 255 means that the color is completely opaque and an alpha value of 0 or 0.0 means that the color is completely transparent. When constructing a \n\u003ccode\u003eColor\u003c/code\u003e with an explicit alpha or getting the color/alpha components of a \n\u003ccode\u003eColor\u003c/code\u003e, the color components are never premultiplied by the alpha component. \n\u003cp\u003e The default color space for the Java 2D(tm) API is sRGB, a proposed standard RGB color space. For further information on sRGB, see \u003ca href\u003d\"http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html\"\u003e http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html \u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/color/ColorSpace.html\" title\u003d\"class in java.awt.color\"\u003e\u003ccode\u003eColorSpace\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/AlphaComposite.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eAlphaComposite\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.awt.Color\"\u003eSerialized Form\u003c/a\u003e"
    ]
  }
}