{
  "packageName": "java.awt.geom",
  "simpleName": "Rectangle2D",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.geom.RectangularShape",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "OUT_LEFT",
      "comment": "The bitmask that indicates that a point lies to the left of this Rectangle2D.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.geom.Rectangle2D.OUT_LEFT\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "OUT_TOP",
      "comment": "The bitmask that indicates that a point lies above this Rectangle2D.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.geom.Rectangle2D.OUT_TOP\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "OUT_RIGHT",
      "comment": "The bitmask that indicates that a point lies to the right of this Rectangle2D.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.geom.Rectangle2D.OUT_RIGHT\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "OUT_BOTTOM",
      "comment": "The bitmask that indicates that a point lies below this Rectangle2D.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.geom.Rectangle2D.OUT_BOTTOM\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "setRect",
      "comment": "Sets the location and size of this Rectangle2D to the specified double values.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the upper-left corner of this \n\u003ccode\u003eRectangle2D\u003c/code\u003e",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the upper-left corner of this \n\u003ccode\u003eRectangle2D\u003c/code\u003e",
          "\u003ccode\u003ew\u003c/code\u003e - the width of this \n\u003ccode\u003eRectangle2D\u003c/code\u003e",
          "\u003ccode\u003eh\u003c/code\u003e - the height of this \n\u003ccode\u003eRectangle2D\u003c/code\u003e"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.Rectangle2D",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setRect",
      "comment": "Sets this Rectangle2D to be the same as the specified Rectangle2D.",
      "tagMap": {
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the specified \n\u003ccode\u003eRectangle2D\u003c/code\u003e"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x1"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y1"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x2"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y2"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "intersectsLine",
      "comment": "Tests if the specified line segment intersects the interior of this Rectangle2D.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex1\u003c/code\u003e - the X coordinate of the start point of the specified line segment",
          "\u003ccode\u003ey1\u003c/code\u003e - the Y coordinate of the start point of the specified line segment",
          "\u003ccode\u003ex2\u003c/code\u003e - the X coordinate of the end point of the specified line segment",
          "\u003ccode\u003ey2\u003c/code\u003e - the Y coordinate of the end point of the specified line segment"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified line segment intersects the interior of this \n\u003ccode\u003eRectangle2D\u003c/code\u003e; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.Line2D",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "intersectsLine",
      "comment": "Tests if the specified line segment intersects the interior of this Rectangle2D.",
      "tagMap": {
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the specified \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Line2D.html\" title\u003d\"class in java.awt.geom\"\u003e\u003ccode\u003eLine2D\u003c/code\u003e\u003c/a\u003e to test for intersection with the interior of this \n\u003ccode\u003eRectangle2D\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified \n\u003ccode\u003eLine2D\u003c/code\u003e intersects the interior of this \n\u003ccode\u003eRectangle2D\u003c/code\u003e; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "outcode",
      "comment": "Determines where the specified coordinates lie with respect to this Rectangle2D. This method computes a binary OR of the appropriate mask values indicating, for each side of this Rectangle2D, whether or not the specified coordinates are on the same side of the edge as the rest of this Rectangle2D.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#OUT_LEFT\"\u003e\u003ccode\u003eOUT_LEFT\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#OUT_TOP\"\u003e\u003ccode\u003eOUT_TOP\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#OUT_RIGHT\"\u003e\u003ccode\u003eOUT_RIGHT\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#OUT_BOTTOM\"\u003e\u003ccode\u003eOUT_BOTTOM\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the specified X coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - the specified Y coordinate"
        ],
        "return": [
          "the logical OR of all appropriate out codes."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.Point2D",
            "type": "Class"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "outcode",
      "comment": "Determines where the specified Point2D lies with respect to this Rectangle2D. This method computes a binary OR of the appropriate mask values indicating, for each side of this Rectangle2D, whether or not the specified Point2D is on the same side of the edge as the rest of this Rectangle2D.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#OUT_LEFT\"\u003e\u003ccode\u003eOUT_LEFT\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#OUT_TOP\"\u003e\u003ccode\u003eOUT_TOP\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#OUT_RIGHT\"\u003e\u003ccode\u003eOUT_RIGHT\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#OUT_BOTTOM\"\u003e\u003ccode\u003eOUT_BOTTOM\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ep\u003c/code\u003e - the specified \n\u003ccode\u003ePoint2D\u003c/code\u003e"
        ],
        "return": [
          "the logical OR of all appropriate out codes."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setFrame",
      "comment": "Sets the location and size of the outer bounds of this Rectangle2D to the specified rectangular values.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html#getFrame()\"\u003e\u003ccode\u003eRectangularShape.getFrame()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html#setFrame(double,double,double,double)\"\u003esetFrame\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html\" title\u003d\"class in java.awt.geom\"\u003eRectangularShape\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the upper-left corner of this \n\u003ccode\u003eRectangle2D\u003c/code\u003e",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the upper-left corner of this \n\u003ccode\u003eRectangle2D\u003c/code\u003e",
          "\u003ccode\u003ew\u003c/code\u003e - the width of this \n\u003ccode\u003eRectangle2D\u003c/code\u003e",
          "\u003ccode\u003eh\u003c/code\u003e - the height of this \n\u003ccode\u003eRectangle2D\u003c/code\u003e"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.Rectangle2D",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBounds2D",
      "comment": "Returns a high precision and more accurate bounding box of the Shape than the getBounds method. Note that there is no guarantee that the returned Rectangle2D is the smallest bounding box that encloses the Shape, only that the Shape lies entirely within the indicated Rectangle2D. The bounding box returned by this method is usually tighter than that returned by the getBounds method and never fails due to overflow problems since the return value can be an instance of the Rectangle2D that uses double precision values to store the dimensions. Note that the definition of insideness can lead to situations where points on the defining outline of the shape may not be considered contained in the returned bounds object, but only in cases where those points are also not considered contained in the original shape. If a point is inside the shape according to the contains(point) method, then it must be inside the returned Rectangle2D bounds object according to the contains(point) method of the bounds. Specifically: shape.contains(p) requires bounds.contains(p) If a point is not inside the shape, then it might still be contained in the bounds object: bounds.contains(p) does not imply shape.contains(p)",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Shape.html#getBounds()\"\u003e\u003ccode\u003eShape.getBounds()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an instance of \n\u003ccode\u003eRectangle2D\u003c/code\u003e that is a high-precision bounding box of the \n\u003ccode\u003eShape\u003c/code\u003e."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "contains",
      "comment": "Tests if the specified coordinates are inside the boundary of the Shape, as described by the definition of insideness.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the specified X coordinate to be tested",
          "\u003ccode\u003ey\u003c/code\u003e - the specified Y coordinate to be tested"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified coordinates are inside the \n\u003ccode\u003eShape\u003c/code\u003e boundary; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "intersects",
      "comment": "Tests if the interior of the Shape intersects the interior of a specified rectangular area. The rectangular area is considered to intersect the Shape if any point is contained in both the interior of the Shape and the specified rectangular area. The Shape.intersects() method allows a Shape implementation to conservatively return true when: there is a high probability that the rectangular area and the Shape intersect, but the calculations to accurately determine this intersection are prohibitively expensive. This means that for some Shapes this method might return true even though the rectangular area does not intersect the Shape. The Area class performs more accurate computations of geometric intersection than most Shape objects and therefore can be used if a more precise answer is required.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Area.html\" title\u003d\"class in java.awt.geom\"\u003e\u003ccode\u003eArea\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the upper-left corner of the specified rectangular area",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the upper-left corner of the specified rectangular area",
          "\u003ccode\u003ew\u003c/code\u003e - the width of the specified rectangular area",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the specified rectangular area"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the interior of the \n\u003ccode\u003eShape\u003c/code\u003e and the interior of the rectangular area intersect, or are both highly likely to intersect and intersection calculations would be too expensive to perform; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "w"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "contains",
      "comment": "Tests if the interior of the Shape entirely contains the specified rectangular area. All coordinates that lie inside the rectangular area must lie within the Shape for the entire rectangular area to be considered contained within the Shape. The Shape.contains() method allows a Shape implementation to conservatively return false when: the intersect method returns true and the calculations to determine whether or not the Shape entirely contains the rectangular area are prohibitively expensive. This means that for some Shapes this method might return false even though the Shape contains the rectangular area. The Area class performs more accurate geometric computations than most Shape objects and therefore can be used if a more precise answer is required.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Area.html\" title\u003d\"class in java.awt.geom\"\u003e\u003ccode\u003eArea\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Shape.html#intersects(double,double,double,double)\"\u003e\u003ccode\u003eShape.intersects(double, double, double, double)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the upper-left corner of the specified rectangular area",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the upper-left corner of the specified rectangular area",
          "\u003ccode\u003ew\u003c/code\u003e - the width of the specified rectangular area",
          "\u003ccode\u003eh\u003c/code\u003e - the height of the specified rectangular area"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the interior of the \n\u003ccode\u003eShape\u003c/code\u003e entirely contains the specified rectangular area; \n\u003ccode\u003efalse\u003c/code\u003e otherwise or, if the \n\u003ccode\u003eShape\u003c/code\u003e contains the rectangular area and the \n\u003ccode\u003eintersects\u003c/code\u003e method returns \n\u003ccode\u003etrue\u003c/code\u003e and the containment calculations would be too expensive to perform."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.Rectangle2D",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.Rectangle2D",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createIntersection",
      "comment": "Returns a new Rectangle2D object representing the intersection of this Rectangle2D with the specified Rectangle2D.",
      "tagMap": {
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the \n\u003ccode\u003eRectangle2D\u003c/code\u003e to be intersected with this \n\u003ccode\u003eRectangle2D\u003c/code\u003e"
        ],
        "return": [
          "the largest \n\u003ccode\u003eRectangle2D\u003c/code\u003e contained in both the specified \n\u003ccode\u003eRectangle2D\u003c/code\u003e and in this \n\u003ccode\u003eRectangle2D\u003c/code\u003e."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.Rectangle2D",
            "type": "Class"
          },
          "field": {
            "name": "src1"
          }
        },
        {
          "type": {
            "name": "java.awt.geom.Rectangle2D",
            "type": "Class"
          },
          "field": {
            "name": "src2"
          }
        },
        {
          "type": {
            "name": "java.awt.geom.Rectangle2D",
            "type": "Class"
          },
          "field": {
            "name": "dest"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "intersect",
      "comment": "Intersects the pair of specified source Rectangle2D objects and puts the result into the specified destination Rectangle2D object. One of the source rectangles can also be the destination to avoid creating a third Rectangle2D object, but in this case the original points of this source rectangle will be overwritten by this method.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esrc1\u003c/code\u003e - the first of a pair of \n\u003ccode\u003eRectangle2D\u003c/code\u003e objects to be intersected with each other",
          "\u003ccode\u003esrc2\u003c/code\u003e - the second of a pair of \n\u003ccode\u003eRectangle2D\u003c/code\u003e objects to be intersected with each other",
          "\u003ccode\u003edest\u003c/code\u003e - the \n\u003ccode\u003eRectangle2D\u003c/code\u003e that holds the results of the intersection of \n\u003ccode\u003esrc1\u003c/code\u003e and \n\u003ccode\u003esrc2\u003c/code\u003e"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.Rectangle2D",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.Rectangle2D",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "createUnion",
      "comment": "Returns a new Rectangle2D object representing the union of this Rectangle2D with the specified Rectangle2D.",
      "tagMap": {
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the \n\u003ccode\u003eRectangle2D\u003c/code\u003e to be combined with this \n\u003ccode\u003eRectangle2D\u003c/code\u003e"
        ],
        "return": [
          "the smallest \n\u003ccode\u003eRectangle2D\u003c/code\u003e containing both the specified \n\u003ccode\u003eRectangle2D\u003c/code\u003e and this \n\u003ccode\u003eRectangle2D\u003c/code\u003e."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.Rectangle2D",
            "type": "Class"
          },
          "field": {
            "name": "src1"
          }
        },
        {
          "type": {
            "name": "java.awt.geom.Rectangle2D",
            "type": "Class"
          },
          "field": {
            "name": "src2"
          }
        },
        {
          "type": {
            "name": "java.awt.geom.Rectangle2D",
            "type": "Class"
          },
          "field": {
            "name": "dest"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "union",
      "comment": "Unions the pair of source Rectangle2D objects and puts the result into the specified destination Rectangle2D object. One of the source rectangles can also be the destination to avoid creating a third Rectangle2D object, but in this case the original points of this source rectangle will be overwritten by this method.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esrc1\u003c/code\u003e - the first of a pair of \n\u003ccode\u003eRectangle2D\u003c/code\u003e objects to be combined with each other",
          "\u003ccode\u003esrc2\u003c/code\u003e - the second of a pair of \n\u003ccode\u003eRectangle2D\u003c/code\u003e objects to be combined with each other",
          "\u003ccode\u003edest\u003c/code\u003e - the \n\u003ccode\u003eRectangle2D\u003c/code\u003e that holds the results of the union of \n\u003ccode\u003esrc1\u003c/code\u003e and \n\u003ccode\u003esrc2\u003c/code\u003e"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "newx"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "newy"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a point, specified by the double precision arguments newx and newy, to this Rectangle2D. The resulting Rectangle2D is the smallest Rectangle2D that contains both the original Rectangle2D and the specified point. After adding a point, a call to contains with the added point as an argument does not necessarily return true. The contains method does not return true for points on the right or bottom edges of a rectangle. Therefore, if the added point falls on the left or bottom edge of the enlarged rectangle, contains returns false for that point.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enewx\u003c/code\u003e - the X coordinate of the new point",
          "\u003ccode\u003enewy\u003c/code\u003e - the Y coordinate of the new point"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.Point2D",
            "type": "Class"
          },
          "field": {
            "name": "pt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds the Point2D object pt to this Rectangle2D. The resulting Rectangle2D is the smallest Rectangle2D that contains both the original Rectangle2D and the specified Point2D. After adding a point, a call to contains with the added point as an argument does not necessarily return true. The contains method does not return true for points on the right or bottom edges of a rectangle. Therefore, if the added point falls on the left or bottom edge of the enlarged rectangle, contains returns false for that point.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ept\u003c/code\u003e - the new \n\u003ccode\u003ePoint2D\u003c/code\u003e to add to this \n\u003ccode\u003eRectangle2D\u003c/code\u003e."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.Rectangle2D",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a Rectangle2D object to this Rectangle2D. The resulting Rectangle2D is the union of the two Rectangle2D objects.",
      "tagMap": {
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the \n\u003ccode\u003eRectangle2D\u003c/code\u003e to add to this \n\u003ccode\u003eRectangle2D\u003c/code\u003e."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.PathIterator",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.AffineTransform",
            "type": "Class"
          },
          "field": {
            "name": "at"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPathIterator",
      "comment": "Returns an iteration object that defines the boundary of this Rectangle2D. The iterator for this class is multi-threaded safe, which means that this Rectangle2D class guarantees that modifications to the geometry of this Rectangle2D object do not affect any iterations of that geometry that are already in process.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eat\u003c/code\u003e - an optional \n\u003ccode\u003eAffineTransform\u003c/code\u003e to be applied to the coordinates as they are returned in the iteration, or \n\u003ccode\u003enull\u003c/code\u003e if untransformed coordinates are desired"
        ],
        "return": [
          "the \n\u003ccode\u003ePathIterator\u003c/code\u003e object that returns the geometry of the outline of this \n\u003ccode\u003eRectangle2D\u003c/code\u003e, one segment at a time."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.PathIterator",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.AffineTransform",
            "type": "Class"
          },
          "field": {
            "name": "at"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "flatness"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPathIterator",
      "comment": "Returns an iteration object that defines the boundary of the flattened Rectangle2D. Since rectangles are already flat, the flatness parameter is ignored. The iterator for this class is multi-threaded safe, which means that this Rectangle2D class guarantees that modifications to the geometry of this Rectangle2D object do not affect any iterations of that geometry that are already in process.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html#getPathIterator(java.awt.geom.AffineTransform,double)\"\u003egetPathIterator\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html\" title\u003d\"class in java.awt.geom\"\u003eRectangularShape\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Shape.html#getPathIterator(java.awt.geom.AffineTransform,double)\"\u003egetPathIterator\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Shape.html\" title\u003d\"interface in java.awt\"\u003eShape\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eat\u003c/code\u003e - an optional \n\u003ccode\u003eAffineTransform\u003c/code\u003e to be applied to the coordinates as they are returned in the iteration, or \n\u003ccode\u003enull\u003c/code\u003e if untransformed coordinates are desired",
          "\u003ccode\u003eflatness\u003c/code\u003e - the maximum distance that the line segments used to approximate the curved segments are allowed to deviate from any point on the original curve. Since rectangles are already flat, the \n\u003ccode\u003eflatness\u003c/code\u003e parameter is ignored."
        ],
        "return": [
          "the \n\u003ccode\u003ePathIterator\u003c/code\u003e object that returns the geometry of the outline of this \n\u003ccode\u003eRectangle2D\u003c/code\u003e, one segment at a time."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns the hashcode for this Rectangle2D.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the hashcode for this \n\u003ccode\u003eRectangle2D\u003c/code\u003e."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Determines whether or not the specified Object is equal to this Rectangle2D. The specified Object is equal to this Rectangle2D if it is an instance of Rectangle2D and if its location and size are the same as this Rectangle2D.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - an \n\u003ccode\u003eObject\u003c/code\u003e to be compared with this \n\u003ccode\u003eRectangle2D\u003c/code\u003e."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003eobj\u003c/code\u003e is an instance of \n\u003ccode\u003eRectangle2D\u003c/code\u003e and has the same values; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "This is an abstract class that cannot be instantiated directly. Type-specific implementation subclasses are available for instantiation and provide a number of formats for storing the information necessary to satisfy the various accessor methods below.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.Float.html\" title\u003d\"class in java.awt.geom\"\u003e\u003ccode\u003eRectangle2D.Float\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.Double.html\" title\u003d\"class in java.awt.geom\"\u003e\u003ccode\u003eRectangle2D.Double\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eRectangle\u003c/code\u003e\u003c/a\u003e"
        ],
        "since": [
          "1.2"
        ]
      }
    }
  ],
  "innerClasses": [
    "java.awt.geom.Rectangle2D$Float",
    "java.awt.geom.Rectangle2D$Double"
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.awt.geom.Rectangle2D",
  "comment": "The \n\u003ccode\u003eRectangle2D\u003c/code\u003e class describes a rectangle defined by a location \n\u003ccode\u003e(x,y)\u003c/code\u003e and dimension \n\u003ccode\u003e(w x h)\u003c/code\u003e. \n\u003cp\u003e This class is only the abstract superclass for all objects that store a 2D rectangle. The actual storage representation of the coordinates is left to the subclass.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.2"
    ]
  }
}