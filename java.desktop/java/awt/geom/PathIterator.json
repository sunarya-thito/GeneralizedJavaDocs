{
  "packageName": "java.awt.geom",
  "simpleName": "PathIterator",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "WIND_EVEN_ODD",
      "comment": "The winding rule constant for specifying an even-odd rule for determining the interior of a path. The even-odd rule specifies that a point lies inside the path if a ray drawn in any direction from that point to infinity is crossed by path segments an odd number of times.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.geom.PathIterator.WIND_EVEN_ODD\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "WIND_NON_ZERO",
      "comment": "The winding rule constant for specifying a non-zero rule for determining the interior of a path. The non-zero rule specifies that a point lies inside the path if a ray drawn in any direction from that point to infinity is crossed by path segments a different number of times in the counter-clockwise direction than the clockwise direction.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.geom.PathIterator.WIND_NON_ZERO\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SEG_MOVETO",
      "comment": "The segment type constant for a point that specifies the starting location for a new subpath.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.geom.PathIterator.SEG_MOVETO\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SEG_LINETO",
      "comment": "The segment type constant for a point that specifies the end point of a line to be drawn from the most recently specified point.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.geom.PathIterator.SEG_LINETO\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SEG_QUADTO",
      "comment": "The segment type constant for the pair of points that specify a quadratic parametric curve to be drawn from the most recently specified point. The curve is interpolated by solving the parametric control equation in the range (t\u003d[0..1]) using the most recently specified (current) point (CP), the first control point (P1), and the final interpolated control point (P2). The parametric control equation for this curve is:           P(t) \u003d B(2,0)*CP + B(2,1)*P1 + B(2,2)*P2\n          0 \u003c\u003d t \u003c\u003d 1\n\n        B(n,m) \u003d mth coefficient of nth degree Bernstein polynomial\n               \u003d C(n,m) * t^(m) * (1 - t)^(n-m)\n        C(n,m) \u003d Combinations of n things, taken m at a time\n               \u003d n! / (m! * (n-m)!)",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.geom.PathIterator.SEG_QUADTO\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SEG_CUBICTO",
      "comment": "The segment type constant for the set of 3 points that specify a cubic parametric curve to be drawn from the most recently specified point. The curve is interpolated by solving the parametric control equation in the range (t\u003d[0..1]) using the most recently specified (current) point (CP), the first control point (P1), the second control point (P2), and the final interpolated control point (P3). The parametric control equation for this curve is:           P(t) \u003d B(3,0)*CP + B(3,1)*P1 + B(3,2)*P2 + B(3,3)*P3\n          0 \u003c\u003d t \u003c\u003d 1\n\n        B(n,m) \u003d mth coefficient of nth degree Bernstein polynomial\n               \u003d C(n,m) * t^(m) * (1 - t)^(n-m)\n        C(n,m) \u003d Combinations of n things, taken m at a time\n               \u003d n! / (m! * (n-m)!)\n This form of curve is commonly known as a BÃ©zier curve.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.geom.PathIterator.SEG_CUBICTO\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "SEG_CLOSE",
      "comment": "The segment type constant that specifies that the preceding subpath should be closed by appending a line segment back to the point corresponding to the most recent SEG_MOVETO.",
      "annotations": [
        {
          "type": "Native"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.geom.PathIterator.SEG_CLOSE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getWindingRule",
      "comment": "Returns the winding rule for determining the interior of the path.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/PathIterator.html#WIND_EVEN_ODD\"\u003e\u003ccode\u003eWIND_EVEN_ODD\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/PathIterator.html#WIND_NON_ZERO\"\u003e\u003ccode\u003eWIND_NON_ZERO\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the winding rule."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isDone",
      "comment": "Tests if the iteration is complete.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if all the segments have been read; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "next",
      "comment": "Moves the iterator to the next segment of the path forwards along the primary direction of traversal as long as there are more points in that direction.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "coords"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "currentSegment",
      "comment": "Returns the coordinates and type of the current path segment in the iteration. The return value is the path-segment type: SEG_MOVETO, SEG_LINETO, SEG_QUADTO, SEG_CUBICTO, or SEG_CLOSE. A float array of length 6 must be passed in and can be used to store the coordinates of the point(s). Each point is stored as a pair of float x,y coordinates. SEG_MOVETO and SEG_LINETO types returns one point, SEG_QUADTO returns two points, SEG_CUBICTO returns 3 points and SEG_CLOSE does not return any points.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/PathIterator.html#SEG_MOVETO\"\u003e\u003ccode\u003eSEG_MOVETO\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/PathIterator.html#SEG_LINETO\"\u003e\u003ccode\u003eSEG_LINETO\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/PathIterator.html#SEG_QUADTO\"\u003e\u003ccode\u003eSEG_QUADTO\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/PathIterator.html#SEG_CUBICTO\"\u003e\u003ccode\u003eSEG_CUBICTO\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/PathIterator.html#SEG_CLOSE\"\u003e\u003ccode\u003eSEG_CLOSE\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecoords\u003c/code\u003e - an array that holds the data returned from this method"
        ],
        "return": [
          "the path-segment type of the current path segment."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "coords"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "currentSegment",
      "comment": "Returns the coordinates and type of the current path segment in the iteration. The return value is the path-segment type: SEG_MOVETO, SEG_LINETO, SEG_QUADTO, SEG_CUBICTO, or SEG_CLOSE. A double array of length 6 must be passed in and can be used to store the coordinates of the point(s). Each point is stored as a pair of double x,y coordinates. SEG_MOVETO and SEG_LINETO types returns one point, SEG_QUADTO returns two points, SEG_CUBICTO returns 3 points and SEG_CLOSE does not return any points.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/PathIterator.html#SEG_MOVETO\"\u003e\u003ccode\u003eSEG_MOVETO\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/PathIterator.html#SEG_LINETO\"\u003e\u003ccode\u003eSEG_LINETO\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/PathIterator.html#SEG_QUADTO\"\u003e\u003ccode\u003eSEG_QUADTO\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/PathIterator.html#SEG_CUBICTO\"\u003e\u003ccode\u003eSEG_CUBICTO\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/PathIterator.html#SEG_CLOSE\"\u003e\u003ccode\u003eSEG_CLOSE\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecoords\u003c/code\u003e - an array that holds the data returned from this method"
        ],
        "return": [
          "the path-segment type of the current path segment."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.awt.geom.PathIterator",
  "comment": "The \n\u003ccode\u003ePathIterator\u003c/code\u003e interface provides the mechanism for objects that implement the \n\u003ca href\u003d\"../Shape.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003eShape\u003c/code\u003e\u003c/a\u003e interface to return the geometry of their boundary by allowing a caller to retrieve the path of that boundary a segment at a time. This interface allows these objects to retrieve the path of their boundary a segment at a time by using 1st through 3rd order BÃ©zier curves, which are lines and quadratic or cubic BÃ©zier splines. \n\u003cp\u003e Multiple subpaths can be expressed by using a \"MOVETO\" segment to create a discontinuity in the geometry to move from the end of one subpath to the beginning of the next. \u003c/p\u003e\n\u003cp\u003e Each subpath can be closed manually by ending the last segment in the subpath on the same coordinate as the beginning \"MOVETO\" segment for that subpath or by using a \"CLOSE\" segment to append a line segment from the last point back to the first. Be aware that manually closing an outline as opposed to using a \"CLOSE\" segment to close the path might result in different line style decorations being used at the end points of the subpath. For example, the \u003ca href\u003d\"../BasicStroke.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eBasicStroke\u003c/code\u003e\u003c/a\u003e object uses a line \"JOIN\" decoration to connect the first and last points if a \"CLOSE\" segment is encountered, whereas simply ending the path on the same coordinate as the beginning coordinate results in line \"CAP\" decorations being used at the ends.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Shape.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003eShape\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/BasicStroke.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eBasicStroke\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}