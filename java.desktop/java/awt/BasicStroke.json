{
  "packageName": "java.awt",
  "simpleName": "BasicStroke",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOIN_MITER",
      "comment": "Joins path segments by extending their outside edges until they meet.",
      "annotations": [
        {
          "type": {
            "name": "Native",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BasicStroke.JOIN_MITER\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOIN_ROUND",
      "comment": "Joins path segments by rounding off the corner at a radius of half the line width.",
      "annotations": [
        {
          "type": {
            "name": "Native",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BasicStroke.JOIN_ROUND\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "JOIN_BEVEL",
      "comment": "Joins path segments by connecting the outer corners of their wide outlines with a straight segment.",
      "annotations": [
        {
          "type": {
            "name": "Native",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BasicStroke.JOIN_BEVEL\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "CAP_BUTT",
      "comment": "Ends unclosed subpaths and dash segments with no added decoration.",
      "annotations": [
        {
          "type": {
            "name": "Native",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BasicStroke.CAP_BUTT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "CAP_ROUND",
      "comment": "Ends unclosed subpaths and dash segments with a round decoration that has a radius equal to half of the width of the pen.",
      "annotations": [
        {
          "type": {
            "name": "Native",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BasicStroke.CAP_ROUND\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "CAP_SQUARE",
      "comment": "Ends unclosed subpaths and dash segments with a square projection that extends beyond the end of the segment to a distance equal to half of the line width.",
      "annotations": [
        {
          "type": {
            "name": "Native",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.BasicStroke.CAP_SQUARE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Shape",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Shape",
            "type": "Class"
          },
          "name": "s",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createStrokedShape",
      "comment": "Returns a Shape whose interior defines the stroked outline of a specified Shape.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Stroke.html#createStrokedShape(java.awt.Shape)\"\u003ecreateStrokedShape\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Stroke.html\" title\u003d\"interface in java.awt\"\u003eStroke\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the \n\u003ccode\u003eShape\u003c/code\u003e boundary be stroked"
        ],
        "return": [
          "the \n\u003ccode\u003eShape\u003c/code\u003e of the stroked outline."
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLineWidth",
      "comment": "Returns the line width. Line width is represented in user space, which is the default-coordinate space used by Java 2D. See the Graphics2D class comments for more information on the user space coordinate system.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Graphics2D.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eGraphics2D\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the line width of this \n\u003ccode\u003eBasicStroke\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getEndCap",
      "comment": "Returns the end cap style.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the end cap style of this \n\u003ccode\u003eBasicStroke\u003c/code\u003e as one of the static \n\u003ccode\u003eint\u003c/code\u003e values that define possible end cap styles."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLineJoin",
      "comment": "Returns the line join style.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the line join style of the \n\u003ccode\u003eBasicStroke\u003c/code\u003e as one of the static \n\u003ccode\u003eint\u003c/code\u003e values that define possible line join styles."
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMiterLimit",
      "comment": "Returns the limit of miter joins.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the limit of miter joins of the \n\u003ccode\u003eBasicStroke\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDashArray",
      "comment": "Returns the array representing the lengths of the dash segments. Alternate entries in the array represent the user space lengths of the opaque and transparent segments of the dashes. As the pen moves along the outline of the Shape to be stroked, the user space distance that the pen travels is accumulated. The distance value is used to index into the dash array. The pen is opaque when its current cumulative distance maps to an even element of the dash array and transparent otherwise.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the dash array."
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDashPhase",
      "comment": "Returns the current dash phase. The dash phase is a distance specified in user coordinates that represents an offset into the dashing pattern. In other words, the dash phase defines the point in the dashing pattern that will correspond to the beginning of the stroke.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the dash phase as a \n\u003ccode\u003efloat\u003c/code\u003e value."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns the hashcode for this stroke.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code for this stroke."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "obj",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Tests if a specified object is equal to this BasicStroke by first testing if it is a BasicStroke and then comparing its width, join, cap, miter limit, dash, and dash phase attributes with those of this BasicStroke.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the specified object to compare to this \n\u003ccode\u003eBasicStroke\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the width, join, cap, miter limit, dash, and dash phase are the same for both objects; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "width",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "cap",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "join",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "miterlimit",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "dash",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "dash_phase",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new BasicStroke with the specified attributes.",
      "annotations": [
        {
          "type": {
            "name": "ConstructorProperties",
            "type": "Class"
          },
          "values": [
            {
              "name": "value",
              "value": [
                "lineWidth",
                "endCap",
                "lineJoin",
                "miterLimit",
                "dashArray",
                "dashPhase"
              ]
            }
          ]
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of this \n\u003ccode\u003eBasicStroke\u003c/code\u003e. The width must be greater than or equal to 0.0f. If width is set to 0.0f, the stroke is rendered as the thinnest possible line for the target device and the antialias hint setting.",
          "\u003ccode\u003ecap\u003c/code\u003e - the decoration of the ends of a \n\u003ccode\u003eBasicStroke\u003c/code\u003e",
          "\u003ccode\u003ejoin\u003c/code\u003e - the decoration applied where path segments meet",
          "\u003ccode\u003emiterlimit\u003c/code\u003e - the limit to trim the miter join. The miterlimit must be greater than or equal to 1.0f.",
          "\u003ccode\u003edash\u003c/code\u003e - the array representing the dashing pattern",
          "\u003ccode\u003edash_phase\u003c/code\u003e - the offset to start the dashing pattern"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ewidth\u003c/code\u003e is negative",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ecap\u003c/code\u003e is not either CAP_BUTT, CAP_ROUND or CAP_SQUARE",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003emiterlimit\u003c/code\u003e is less than 1 and \n\u003ccode\u003ejoin\u003c/code\u003e is JOIN_MITER",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ejoin\u003c/code\u003e is not either JOIN_ROUND, JOIN_BEVEL, or JOIN_MITER",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edash_phase\u003c/code\u003e is negative and \n\u003ccode\u003edash\u003c/code\u003e is not \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the length of \n\u003ccode\u003edash\u003c/code\u003e is zero",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if dash lengths are all zero."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "width",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "cap",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "join",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "miterlimit",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a solid BasicStroke with the specified attributes.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of the \n\u003ccode\u003eBasicStroke\u003c/code\u003e",
          "\u003ccode\u003ecap\u003c/code\u003e - the decoration of the ends of a \n\u003ccode\u003eBasicStroke\u003c/code\u003e",
          "\u003ccode\u003ejoin\u003c/code\u003e - the decoration applied where path segments meet",
          "\u003ccode\u003emiterlimit\u003c/code\u003e - the limit to trim the miter join"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ewidth\u003c/code\u003e is negative",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ecap\u003c/code\u003e is not either CAP_BUTT, CAP_ROUND or CAP_SQUARE",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003emiterlimit\u003c/code\u003e is less than 1 and \n\u003ccode\u003ejoin\u003c/code\u003e is JOIN_MITER",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ejoin\u003c/code\u003e is not either JOIN_ROUND, JOIN_BEVEL, or JOIN_MITER"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "width",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "cap",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "join",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a solid BasicStroke with the specified attributes. The miterlimit parameter is unnecessary in cases where the default is allowable or the line joins are not specified as JOIN_MITER.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of the \n\u003ccode\u003eBasicStroke\u003c/code\u003e",
          "\u003ccode\u003ecap\u003c/code\u003e - the decoration of the ends of a \n\u003ccode\u003eBasicStroke\u003c/code\u003e",
          "\u003ccode\u003ejoin\u003c/code\u003e - the decoration applied where path segments meet"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ewidth\u003c/code\u003e is negative",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ecap\u003c/code\u003e is not either CAP_BUTT, CAP_ROUND or CAP_SQUARE",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ejoin\u003c/code\u003e is not either JOIN_ROUND, JOIN_BEVEL, or JOIN_MITER"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "width",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a solid BasicStroke with the specified line width and with default values for the cap and join styles.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of the \n\u003ccode\u003eBasicStroke\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ewidth\u003c/code\u003e is negative"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new BasicStroke with defaults for all attributes. The default attributes are a solid line of width 1.0, CAP_SQUARE, JOIN_MITER, a miter limit of 10.0.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.BasicStroke",
  "comment": "The \n\u003ccode\u003eBasicStroke\u003c/code\u003e class defines a basic set of rendering attributes for the outlines of graphics primitives, which are rendered with a \n\u003ca href\u003d\"Graphics2D.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eGraphics2D\u003c/code\u003e\u003c/a\u003e object that has its Stroke attribute set to this \n\u003ccode\u003eBasicStroke\u003c/code\u003e. The rendering attributes defined by \n\u003ccode\u003eBasicStroke\u003c/code\u003e describe the shape of the mark made by a pen drawn along the outline of a \n\u003ca href\u003d\"Shape.html\" title\u003d\"interface in java.awt\"\u003e\u003ccode\u003eShape\u003c/code\u003e\u003c/a\u003e and the decorations applied at the ends and joins of path segments of the \n\u003ccode\u003eShape\u003c/code\u003e. These rendering attributes include: \n\u003cdl\u003e \n \u003cdt\u003e\n  \u003ci\u003ewidth\u003c/i\u003e \n \u003c/dt\u003e\n \u003cdd\u003e\n  The pen width, measured perpendicularly to the pen trajectory. \n \u003c/dd\u003e\n \u003cdt\u003e\n  \u003ci\u003eend caps\u003c/i\u003e \n \u003c/dt\u003e\n \u003cdd\u003e\n  The decoration applied to the ends of unclosed subpaths and dash segments. Subpaths that start and end on the same point are still considered unclosed if they do not have a CLOSE segment. See \n  \u003ca href\u003d\"geom/PathIterator.html#SEG_CLOSE\"\u003e\u003ccode\u003eSEG_CLOSE\u003c/code\u003e\u003c/a\u003e for more information on the CLOSE segment. The three different decorations are: \n  \u003ca href\u003d\"#CAP_BUTT\"\u003e\u003ccode\u003eCAP_BUTT\u003c/code\u003e\u003c/a\u003e, \n  \u003ca href\u003d\"#CAP_ROUND\"\u003e\u003ccode\u003eCAP_ROUND\u003c/code\u003e\u003c/a\u003e, and \n  \u003ca href\u003d\"#CAP_SQUARE\"\u003e\u003ccode\u003eCAP_SQUARE\u003c/code\u003e\u003c/a\u003e. \n \u003c/dd\u003e\n \u003cdt\u003e\n  \u003ci\u003eline joins\u003c/i\u003e \n \u003c/dt\u003e\n \u003cdd\u003e\n  The decoration applied at the intersection of two path segments and at the intersection of the endpoints of a subpath that is closed using \n  \u003ca href\u003d\"geom/PathIterator.html#SEG_CLOSE\"\u003e\u003ccode\u003eSEG_CLOSE\u003c/code\u003e\u003c/a\u003e. The three different decorations are: \n  \u003ca href\u003d\"#JOIN_BEVEL\"\u003e\u003ccode\u003eJOIN_BEVEL\u003c/code\u003e\u003c/a\u003e, \n  \u003ca href\u003d\"#JOIN_MITER\"\u003e\u003ccode\u003eJOIN_MITER\u003c/code\u003e\u003c/a\u003e, and \n  \u003ca href\u003d\"#JOIN_ROUND\"\u003e\u003ccode\u003eJOIN_ROUND\u003c/code\u003e\u003c/a\u003e. \n \u003c/dd\u003e\n \u003cdt\u003e\n  \u003ci\u003emiter limit\u003c/i\u003e \n \u003c/dt\u003e\n \u003cdd\u003e\n  The limit to trim a line join that has a JOIN_MITER decoration. A line join is trimmed when the ratio of miter length to stroke width is greater than the miterlimit value. The miter length is the diagonal length of the miter, which is the distance between the inside corner and the outside corner of the intersection. The smaller the angle formed by two line segments, the longer the miter length and the sharper the angle of intersection. The default miterlimit value of 10.0f causes all angles less than 11 degrees to be trimmed. Trimming miters converts the decoration of the line join to bevel. \n \u003c/dd\u003e\n \u003cdt\u003e\n  \u003ci\u003edash attributes\u003c/i\u003e \n \u003c/dt\u003e\n \u003cdd\u003e\n  The definition of how to make a dash pattern by alternating between opaque and transparent sections. \n \u003c/dd\u003e\n\u003c/dl\u003e All attributes that specify measurements and distances controlling the shape of the returned outline are measured in the same coordinate system as the original unstroked \n\u003ccode\u003eShape\u003c/code\u003e argument. When a \n\u003ccode\u003eGraphics2D\u003c/code\u003e object uses a \n\u003ccode\u003eStroke\u003c/code\u003e object to redefine a path during the execution of one of its \n\u003ccode\u003edraw\u003c/code\u003e methods, the geometry is supplied in its original form before the \n\u003ccode\u003eGraphics2D\u003c/code\u003e transform attribute is applied. Therefore, attributes such as the pen width are interpreted in the user space coordinate system of the \n\u003ccode\u003eGraphics2D\u003c/code\u003e object and are subject to the scaling and shearing effects of the user-space-to-device-space transform in that particular \n\u003ccode\u003eGraphics2D\u003c/code\u003e. For example, the width of a rendered shape\u0027s outline is determined not only by the width attribute of this \n\u003ccode\u003eBasicStroke\u003c/code\u003e, but also by the transform attribute of the \n\u003ccode\u003eGraphics2D\u003c/code\u003e object. Consider this code: \n\u003cblockquote\u003e\n \u003cpre\u003e\u003ccode\u003e\n      // sets the Graphics2D object\u0027s Transform attribute\n      g2d.scale(10, 10);\n      // sets the Graphics2D object\u0027s Stroke attribute\n      g2d.setStroke(new BasicStroke(1.5f));\n \u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e Assuming there are no other scaling transforms added to the \n\u003ccode\u003eGraphics2D\u003c/code\u003e object, the resulting line will be approximately 15 pixels wide. As the example code demonstrates, a floating-point line offers better precision, especially when large transforms are used with a \n\u003ccode\u003eGraphics2D\u003c/code\u003e object. When a line is diagonal, the exact width depends on how the rendering pipeline chooses which pixels to fill as it traces the theoretical widened outline. The choice of which pixels to turn on is affected by the antialiasing attribute because the antialiasing rendering pipeline can choose to color partially-covered pixels. \n\u003cp\u003e For more information on the user space coordinate system and the rendering process, see the \u003ccode\u003eGraphics2D\u003c/code\u003e class comments.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Graphics2D.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eGraphics2D\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}