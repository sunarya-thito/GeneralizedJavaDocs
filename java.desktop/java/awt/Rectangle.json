{
  "packageName": "java.awt",
  "simpleName": "Rectangle",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.geom.Rectangle2D",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "x",
      "comment": "The X coordinate of the upper-left corner of the Rectangle.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#setLocation(int,int)\"\u003e\u003ccode\u003esetLocation(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#getLocation()\"\u003e\u003ccode\u003egetLocation()\u003c/code\u003e\u003c/a\u003e"
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "y",
      "comment": "The Y coordinate of the upper-left corner of the Rectangle.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#setLocation(int,int)\"\u003e\u003ccode\u003esetLocation(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#getLocation()\"\u003e\u003ccode\u003egetLocation()\u003c/code\u003e\u003c/a\u003e"
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "width",
      "comment": "The width of the Rectangle.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#setSize(int,int)\"\u003e\u003ccode\u003esetSize(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#getSize()\"\u003e\u003ccode\u003egetSize()\u003c/code\u003e\u003c/a\u003e"
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 1,
      "name": "height",
      "comment": "The height of the Rectangle.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#setSize(int,int)\"\u003e\u003ccode\u003esetSize(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#getSize()\"\u003e\u003ccode\u003egetSize()\u003c/code\u003e\u003c/a\u003e"
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getX",
      "comment": "Returns the X coordinate of the bounding Rectangle in double precision.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html#getX()\"\u003egetX\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html\" title\u003d\"class in java.awt.geom\"\u003eRectangularShape\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the X coordinate of the bounding \n\u003ccode\u003eRectangle\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getY",
      "comment": "Returns the Y coordinate of the bounding Rectangle in double precision.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html#getY()\"\u003egetY\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html\" title\u003d\"class in java.awt.geom\"\u003eRectangularShape\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the Y coordinate of the bounding \n\u003ccode\u003eRectangle\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getWidth",
      "comment": "Returns the width of the bounding Rectangle in double precision.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html#getWidth()\"\u003egetWidth\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html\" title\u003d\"class in java.awt.geom\"\u003eRectangularShape\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the width of the bounding \n\u003ccode\u003eRectangle\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHeight",
      "comment": "Returns the height of the bounding Rectangle in double precision.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html#getHeight()\"\u003egetHeight\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html\" title\u003d\"class in java.awt.geom\"\u003eRectangularShape\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the height of the bounding \n\u003ccode\u003eRectangle\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Rectangle",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBounds",
      "comment": "Gets the bounding Rectangle of this Rectangle. This method is included for completeness, to parallel the getBounds method of Component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getBounds()\"\u003e\u003ccode\u003eComponent.getBounds()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#setBounds(java.awt.Rectangle)\"\u003e\u003ccode\u003esetBounds(Rectangle)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#setBounds(int,int,int,int)\"\u003e\u003ccode\u003esetBounds(int, int, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html#getBounds()\"\u003egetBounds\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html\" title\u003d\"class in java.awt.geom\"\u003eRectangularShape\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Shape.html#getBounds()\"\u003egetBounds\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Shape.html\" title\u003d\"interface in java.awt\"\u003eShape\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a new \n\u003ccode\u003eRectangle\u003c/code\u003e, equal to the bounding \n\u003ccode\u003eRectangle\u003c/code\u003e for this \n\u003ccode\u003eRectangle\u003c/code\u003e."
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.Rectangle2D",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBounds2D",
      "comment": "Returns a high precision and more accurate bounding box of the Shape than the getBounds method. Note that there is no guarantee that the returned Rectangle2D is the smallest bounding box that encloses the Shape, only that the Shape lies entirely within the indicated Rectangle2D. The bounding box returned by this method is usually tighter than that returned by the getBounds method and never fails due to overflow problems since the return value can be an instance of the Rectangle2D that uses double precision values to store the dimensions. Note that the definition of insideness can lead to situations where points on the defining outline of the shape may not be considered contained in the returned bounds object, but only in cases where those points are also not considered contained in the original shape. If a point is inside the shape according to the contains(point) method, then it must be inside the returned Rectangle2D bounds object according to the contains(point) method of the bounds. Specifically: shape.contains(p) requires bounds.contains(p) If a point is not inside the shape, then it might still be contained in the bounds object: bounds.contains(p) does not imply shape.contains(p)",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Shape.html#getBounds()\"\u003e\u003ccode\u003eShape.getBounds()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#getBounds2D()\"\u003egetBounds2D\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html\" title\u003d\"class in java.awt.geom\"\u003eRectangle2D\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Shape.html#getBounds2D()\"\u003egetBounds2D\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Shape.html\" title\u003d\"interface in java.awt\"\u003eShape\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an instance of \n\u003ccode\u003eRectangle2D\u003c/code\u003e that is a high-precision bounding box of the \n\u003ccode\u003eShape\u003c/code\u003e."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Rectangle",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setBounds",
      "comment": "Sets the bounding Rectangle of this Rectangle to match the specified Rectangle. This method is included for completeness, to parallel the setBounds method of Component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#getBounds()\"\u003e\u003ccode\u003egetBounds()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#setBounds(java.awt.Rectangle)\"\u003e\u003ccode\u003eComponent.setBounds(java.awt.Rectangle)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the specified \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "width"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "height"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setBounds",
      "comment": "Sets the bounding Rectangle of this Rectangle to the specified x, y, width, and height. This method is included for completeness, to parallel the setBounds method of Component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#getBounds()\"\u003e\u003ccode\u003egetBounds()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#setBounds(int,int,int,int)\"\u003e\u003ccode\u003eComponent.setBounds(int, int, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the new X coordinate for the upper-left corner of this \n\u003ccode\u003eRectangle\u003c/code\u003e",
          "\u003ccode\u003ey\u003c/code\u003e - the new Y coordinate for the upper-left corner of this \n\u003ccode\u003eRectangle\u003c/code\u003e",
          "\u003ccode\u003ewidth\u003c/code\u003e - the new width for this \n\u003ccode\u003eRectangle\u003c/code\u003e",
          "\u003ccode\u003eheight\u003c/code\u003e - the new height for this \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "width"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "height"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setRect",
      "comment": "Sets the bounds of this Rectangle to the integer bounds which encompass the specified x, y, width, and height. If the parameters specify a Rectangle that exceeds the maximum range of integers, the result will be the best representation of the specified Rectangle intersected with the maximum integer bounds.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#setRect(double,double,double,double)\"\u003esetRect\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html\" title\u003d\"class in java.awt.geom\"\u003eRectangle2D\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the upper-left corner of the specified rectangle",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the upper-left corner of the specified rectangle",
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of the specified rectangle",
          "\u003ccode\u003eheight\u003c/code\u003e - the new height of the specified rectangle"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "width"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "height"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "reshape",
      "comment": "Sets the bounding Rectangle of this Rectangle to the specified x, y, width, and height.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the new X coordinate for the upper-left corner of this \n\u003ccode\u003eRectangle\u003c/code\u003e",
          "\u003ccode\u003ey\u003c/code\u003e - the new Y coordinate for the upper-left corner of this \n\u003ccode\u003eRectangle\u003c/code\u003e",
          "\u003ccode\u003ewidth\u003c/code\u003e - the new width for this \n\u003ccode\u003eRectangle\u003c/code\u003e",
          "\u003ccode\u003eheight\u003c/code\u003e - the new height for this \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Point",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLocation",
      "comment": "Returns the location of this Rectangle. This method is included for completeness, to parallel the getLocation method of Component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getLocation()\"\u003e\u003ccode\u003eComponent.getLocation()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#setLocation(java.awt.Point)\"\u003e\u003ccode\u003esetLocation(Point)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#setLocation(int,int)\"\u003e\u003ccode\u003esetLocation(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003ePoint\u003c/code\u003e that is the upper-left corner of this \n\u003ccode\u003eRectangle\u003c/code\u003e."
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLocation",
      "comment": "Moves this Rectangle to the specified location. This method is included for completeness, to parallel the setLocation method of Component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#setLocation(java.awt.Point)\"\u003e\u003ccode\u003eComponent.setLocation(java.awt.Point)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#getLocation()\"\u003e\u003ccode\u003egetLocation()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ep\u003c/code\u003e - the \n\u003ccode\u003ePoint\u003c/code\u003e specifying the new location for this \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLocation",
      "comment": "Moves this Rectangle to the specified location. This method is included for completeness, to parallel the setLocation method of Component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#getLocation()\"\u003e\u003ccode\u003egetLocation()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#setLocation(int,int)\"\u003e\u003ccode\u003eComponent.setLocation(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the new location",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the new location"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "move",
      "comment": "Moves this Rectangle to the specified location.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the X coordinate of the new location",
          "\u003ccode\u003ey\u003c/code\u003e - the Y coordinate of the new location"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dx"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dy"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "translate",
      "comment": "Translates this Rectangle the indicated distance, to the right along the X coordinate axis, and downward along the Y coordinate axis.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#setLocation(int,int)\"\u003e\u003ccode\u003esetLocation(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#setLocation(java.awt.Point)\"\u003e\u003ccode\u003esetLocation(java.awt.Point)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edx\u003c/code\u003e - the distance to move this \n\u003ccode\u003eRectangle\u003c/code\u003e along the X axis",
          "\u003ccode\u003edy\u003c/code\u003e - the distance to move this \n\u003ccode\u003eRectangle\u003c/code\u003e along the Y axis"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Dimension",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSize",
      "comment": "Gets the size of this Rectangle, represented by the returned Dimension. This method is included for completeness, to parallel the getSize method of Component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getSize()\"\u003e\u003ccode\u003eComponent.getSize()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#setSize(java.awt.Dimension)\"\u003e\u003ccode\u003esetSize(Dimension)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#setSize(int,int)\"\u003e\u003ccode\u003esetSize(int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eDimension\u003c/code\u003e, representing the size of this \n\u003ccode\u003eRectangle\u003c/code\u003e."
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Dimension",
            "type": "Class"
          },
          "field": {
            "name": "d"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSize",
      "comment": "Sets the size of this Rectangle to match the specified Dimension. This method is included for completeness, to parallel the setSize method of Component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#setSize(java.awt.Dimension)\"\u003e\u003ccode\u003eComponent.setSize(java.awt.Dimension)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#getSize()\"\u003e\u003ccode\u003egetSize()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ed\u003c/code\u003e - the new size for the \n\u003ccode\u003eDimension\u003c/code\u003e object"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "width"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "height"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setSize",
      "comment": "Sets the size of this Rectangle to the specified width and height. This method is included for completeness, to parallel the setSize method of Component.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#setSize(int,int)\"\u003e\u003ccode\u003eComponent.setSize(int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Rectangle.html#getSize()\"\u003e\u003ccode\u003egetSize()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ewidth\u003c/code\u003e - the new width for this \n\u003ccode\u003eRectangle\u003c/code\u003e",
          "\u003ccode\u003eheight\u003c/code\u003e - the new height for this \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "width"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "height"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "resize",
      "comment": "Sets the size of this Rectangle to the specified width and height.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ewidth\u003c/code\u003e - the new width for this \n\u003ccode\u003eRectangle\u003c/code\u003e",
          "\u003ccode\u003eheight\u003c/code\u003e - the new height for this \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "contains",
      "comment": "Checks whether or not this Rectangle contains the specified Point.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ep\u003c/code\u003e - the \n\u003ccode\u003ePoint\u003c/code\u003e to test"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified \n\u003ccode\u003ePoint\u003c/code\u003e is inside this \n\u003ccode\u003eRectangle\u003c/code\u003e; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "contains",
      "comment": "Checks whether or not this Rectangle contains the point at the specified location (x,y).",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the specified X coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - the specified Y coordinate"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the point \n\u003ccode\u003e(x,y)\u003c/code\u003e is inside this \n\u003ccode\u003eRectangle\u003c/code\u003e; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Rectangle",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "contains",
      "comment": "Checks whether or not this Rectangle entirely contains the specified Rectangle.",
      "tagMap": {
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the specified \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the \n\u003ccode\u003eRectangle\u003c/code\u003e is contained entirely inside this \n\u003ccode\u003eRectangle\u003c/code\u003e; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "X"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "Y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "W"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "H"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "contains",
      "comment": "Checks whether this Rectangle entirely contains the Rectangle at the specified location (X,Y) with the specified dimensions (W,H).",
      "tagMap": {
        "param": [
          "\u003ccode\u003eX\u003c/code\u003e - the specified X coordinate",
          "\u003ccode\u003eY\u003c/code\u003e - the specified Y coordinate",
          "\u003ccode\u003eW\u003c/code\u003e - the width of the \n\u003ccode\u003eRectangle\u003c/code\u003e",
          "\u003ccode\u003eH\u003c/code\u003e - the height of the \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the \n\u003ccode\u003eRectangle\u003c/code\u003e specified by \n\u003ccode\u003e(X, Y, W, H)\u003c/code\u003e is entirely enclosed inside this \n\u003ccode\u003eRectangle\u003c/code\u003e; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "X"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "Y"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "inside",
      "comment": "Checks whether or not this Rectangle contains the point at the specified location (X,Y).",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eX\u003c/code\u003e - the specified X coordinate",
          "\u003ccode\u003eY\u003c/code\u003e - the specified Y coordinate"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the point \n\u003ccode\u003e(X,Y)\u003c/code\u003e is inside this \n\u003ccode\u003eRectangle\u003c/code\u003e; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Rectangle",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "intersects",
      "comment": "Determines whether or not this Rectangle and the specified Rectangle intersect. Two rectangles intersect if their intersection is nonempty.",
      "tagMap": {
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the specified \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified \n\u003ccode\u003eRectangle\u003c/code\u003e and this \n\u003ccode\u003eRectangle\u003c/code\u003e intersect; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Rectangle",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Rectangle",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "intersection",
      "comment": "Computes the intersection of this Rectangle with the specified Rectangle. Returns a new Rectangle that represents the intersection of the two rectangles. If the two rectangles do not intersect, the result will be an empty rectangle.",
      "tagMap": {
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the specified \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ],
        "return": [
          "the largest \n\u003ccode\u003eRectangle\u003c/code\u003e contained in both the specified \n\u003ccode\u003eRectangle\u003c/code\u003e and in this \n\u003ccode\u003eRectangle\u003c/code\u003e; or if the rectangles do not intersect, an empty rectangle."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Rectangle",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Rectangle",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "union",
      "comment": "Computes the union of this Rectangle with the specified Rectangle. Returns a new Rectangle that represents the union of the two rectangles. If either Rectangle has any dimension less than zero the rules for non-existent rectangles apply. If only one has a dimension less than zero, then the result will be a copy of the other Rectangle. If both have dimension less than zero, then the result will have at least one dimension less than zero. If the resulting Rectangle would have a dimension too large to be expressed as an int, the result will have a dimension of Integer.MAX_VALUE along that dimension.",
      "tagMap": {
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the specified \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ],
        "return": [
          "the smallest \n\u003ccode\u003eRectangle\u003c/code\u003e containing both the specified \n\u003ccode\u003eRectangle\u003c/code\u003e and this \n\u003ccode\u003eRectangle\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "newx"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "newy"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a point, specified by the integer arguments newx,newy to the bounds of this Rectangle. If this Rectangle has any dimension less than zero, the rules for non-existent rectangles apply. In that case, the new bounds of this Rectangle will have a location equal to the specified coordinates and width and height equal to zero. After adding a point, a call to contains with the added point as an argument does not necessarily return true. The contains method does not return true for points on the right or bottom edges of a Rectangle. Therefore, if the added point falls on the right or bottom edge of the enlarged Rectangle, contains returns false for that point. If the specified point must be contained within the new Rectangle, a 1x1 rectangle should be added instead:      r.add(new Rectangle(newx, newy, 1, 1));",
      "tagMap": {
        "param": [
          "\u003ccode\u003enewx\u003c/code\u003e - the X coordinate of the new point",
          "\u003ccode\u003enewy\u003c/code\u003e - the Y coordinate of the new point"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "field": {
            "name": "pt"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds the specified Point to the bounds of this Rectangle. If this Rectangle has any dimension less than zero, the rules for non-existent rectangles apply. In that case, the new bounds of this Rectangle will have a location equal to the coordinates of the specified Point and width and height equal to zero. After adding a Point, a call to contains with the added Point as an argument does not necessarily return true. The contains method does not return true for points on the right or bottom edges of a Rectangle. Therefore if the added Point falls on the right or bottom edge of the enlarged Rectangle, contains returns false for that Point. If the specified point must be contained within the new Rectangle, a 1x1 rectangle should be added instead:      r.add(new Rectangle(pt, new Dimension(1, 1)));",
      "tagMap": {
        "param": [
          "\u003ccode\u003ept\u003c/code\u003e - the new \n\u003ccode\u003ePoint\u003c/code\u003e to add to this \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.Rectangle",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "add",
      "comment": "Adds a Rectangle to this Rectangle. The resulting Rectangle is the union of the two rectangles. If either Rectangle has any dimension less than 0, the result will have the dimensions of the other Rectangle. If both Rectangles have at least one dimension less than 0, the result will have at least one dimension less than 0. If either Rectangle has one or both dimensions equal to 0, the result along those axes with 0 dimensions will be equivalent to the results obtained by adding the corresponding origin coordinate to the result rectangle along that axis, similar to the operation of the add(Point) method, but contribute no further dimension beyond that. If the resulting Rectangle would have a dimension too large to be expressed as an int, the result will have a dimension of Integer.MAX_VALUE along that dimension.",
      "tagMap": {
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the specified \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "h"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "v"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "grow",
      "comment": "Resizes the Rectangle both horizontally and vertically. This method modifies the Rectangle so that it is h units larger on both the left and right side, and v units larger at both the top and bottom. The new Rectangle has (x - h, y - v) as its upper-left corner, width of (width + 2h), and a height of (height + 2v). If negative values are supplied for h and v, the size of the Rectangle decreases accordingly. The grow method will check for integer overflow and underflow, but does not check whether the resulting values of width and height grow from negative to non-negative or shrink from non-negative to negative.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eh\u003c/code\u003e - the horizontal expansion",
          "\u003ccode\u003ev\u003c/code\u003e - the vertical expansion"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isEmpty",
      "comment": "Determines whether the RectangularShape is empty. When the RectangularShape is empty, it encloses no area.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html#isEmpty()\"\u003eisEmpty\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/RectangularShape.html\" title\u003d\"class in java.awt.geom\"\u003eRectangularShape\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the \n\u003ccode\u003eRectangularShape\u003c/code\u003e is empty; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "outcode",
      "comment": "Determines where the specified coordinates lie with respect to this Rectangle2D. This method computes a binary OR of the appropriate mask values indicating, for each side of this Rectangle2D, whether or not the specified coordinates are on the same side of the edge as the rest of this Rectangle2D.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#OUT_LEFT\"\u003e\u003ccode\u003eRectangle2D.OUT_LEFT\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#OUT_TOP\"\u003e\u003ccode\u003eRectangle2D.OUT_TOP\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#OUT_RIGHT\"\u003e\u003ccode\u003eRectangle2D.OUT_RIGHT\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#OUT_BOTTOM\"\u003e\u003ccode\u003eRectangle2D.OUT_BOTTOM\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#outcode(double,double)\"\u003eoutcode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html\" title\u003d\"class in java.awt.geom\"\u003eRectangle2D\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the specified X coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - the specified Y coordinate"
        ],
        "return": [
          "the logical OR of all appropriate out codes."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.Rectangle2D",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.Rectangle2D",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createIntersection",
      "comment": "Returns a new Rectangle2D object representing the intersection of this Rectangle2D with the specified Rectangle2D.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#createIntersection(java.awt.geom.Rectangle2D)\"\u003ecreateIntersection\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html\" title\u003d\"class in java.awt.geom\"\u003eRectangle2D\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the \n\u003ccode\u003eRectangle2D\u003c/code\u003e to be intersected with this \n\u003ccode\u003eRectangle2D\u003c/code\u003e"
        ],
        "return": [
          "the largest \n\u003ccode\u003eRectangle2D\u003c/code\u003e contained in both the specified \n\u003ccode\u003eRectangle2D\u003c/code\u003e and in this \n\u003ccode\u003eRectangle2D\u003c/code\u003e."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.Rectangle2D",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.geom.Rectangle2D",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createUnion",
      "comment": "Returns a new Rectangle2D object representing the union of this Rectangle2D with the specified Rectangle2D.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#createUnion(java.awt.geom.Rectangle2D)\"\u003ecreateUnion\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html\" title\u003d\"class in java.awt.geom\"\u003eRectangle2D\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the \n\u003ccode\u003eRectangle2D\u003c/code\u003e to be combined with this \n\u003ccode\u003eRectangle2D\u003c/code\u003e"
        ],
        "return": [
          "the smallest \n\u003ccode\u003eRectangle2D\u003c/code\u003e containing both the specified \n\u003ccode\u003eRectangle2D\u003c/code\u003e and this \n\u003ccode\u003eRectangle2D\u003c/code\u003e."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Checks whether two rectangles are equal. The result is true if and only if the argument is not null and is a Rectangle object that has the same upper-left corner, width, and height as this Rectangle.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/Rectangle2D.html\" title\u003d\"class in java.awt.geom\"\u003eRectangle2D\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the \n\u003ccode\u003eObject\u003c/code\u003e to compare with this \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the objects are equal; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a String representing this Rectangle and its values.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e representing this \n\u003ccode\u003eRectangle\u003c/code\u003e object\u0027s coordinate and size values."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new Rectangle whose upper-left corner is at (0, 0) in the coordinate space, and whose width and height are both zero.",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.Rectangle",
            "type": "Class"
          },
          "field": {
            "name": "r"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new Rectangle, initialized to match the values of the specified Rectangle.",
      "tagMap": {
        "param": [
          "\u003ccode\u003er\u003c/code\u003e - the \n\u003ccode\u003eRectangle\u003c/code\u003e from which to copy initial values to a newly constructed \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "x"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "y"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "width"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "height"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new Rectangle whose upper-left corner is specified as (x,y) and whose width and height are specified by the arguments of the same name.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - the specified X coordinate",
          "\u003ccode\u003ey\u003c/code\u003e - the specified Y coordinate",
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of the \n\u003ccode\u003eRectangle\u003c/code\u003e",
          "\u003ccode\u003eheight\u003c/code\u003e - the height of the \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ],
        "since": [
          "1.0"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "width"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "height"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new Rectangle whose upper-left corner is at (0, 0) in the coordinate space, and whose width and height are specified by the arguments of the same name.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ewidth\u003c/code\u003e - the width of the \n\u003ccode\u003eRectangle\u003c/code\u003e",
          "\u003ccode\u003eheight\u003c/code\u003e - the height of the \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "field": {
            "name": "p"
          }
        },
        {
          "type": {
            "name": "java.awt.Dimension",
            "type": "Class"
          },
          "field": {
            "name": "d"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new Rectangle whose upper-left corner is specified by the Point argument, and whose width and height are specified by the Dimension argument.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ep\u003c/code\u003e - a \n\u003ccode\u003ePoint\u003c/code\u003e that is the upper-left corner of the \n\u003ccode\u003eRectangle\u003c/code\u003e",
          "\u003ccode\u003ed\u003c/code\u003e - a \n\u003ccode\u003eDimension\u003c/code\u003e, representing the width and height of the \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.Point",
            "type": "Class"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new Rectangle whose upper-left corner is the specified Point, and whose width and height are both zero.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ep\u003c/code\u003e - a \n\u003ccode\u003ePoint\u003c/code\u003e that is the top left corner of the \n\u003ccode\u003eRectangle\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.Dimension",
            "type": "Class"
          },
          "field": {
            "name": "d"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new Rectangle whose top left corner is (0, 0) and whose width and height are specified by the Dimension argument.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ed\u003c/code\u003e - a \n\u003ccode\u003eDimension\u003c/code\u003e, specifying width and height"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.Rectangle",
  "comment": "A \n\u003ccode\u003eRectangle\u003c/code\u003e specifies an area in a coordinate space that is enclosed by the \n\u003ccode\u003eRectangle\u003c/code\u003e object\u0027s upper-left point \n\u003ccode\u003e(x,y)\u003c/code\u003e in the coordinate space, its width, and its height. \n\u003cp\u003e A \u003ccode\u003eRectangle\u003c/code\u003e object\u0027s \u003ccode\u003ewidth\u003c/code\u003e and \u003ccode\u003eheight\u003c/code\u003e are \u003ccode\u003epublic\u003c/code\u003e fields. The constructors that create a \u003ccode\u003eRectangle\u003c/code\u003e, and the methods that can modify one, do not prevent setting a negative value for width or height. \u003c/p\u003e\n\u003cp\u003e \u003ca id\u003d\"Empty\"\u003e A \u003ccode\u003eRectangle\u003c/code\u003e whose width or height is exactly zero has location along those axes with zero dimension, but is otherwise considered empty.\u003c/a\u003e The \u003ca href\u003d\"#isEmpty()\"\u003e\u003ccode\u003eisEmpty()\u003c/code\u003e\u003c/a\u003e method will return true for such a \u003ccode\u003eRectangle\u003c/code\u003e. Methods which test if an empty \u003ccode\u003eRectangle\u003c/code\u003e contains or intersects a point or rectangle will always return false if either dimension is zero. Methods which combine such a \u003ccode\u003eRectangle\u003c/code\u003e with a point or rectangle will include the location of the \u003ccode\u003eRectangle\u003c/code\u003e on that axis in the result as if the \u003ca href\u003d\"#add(java.awt.Point)\"\u003e\u003ccode\u003eadd(Point)\u003c/code\u003e\u003c/a\u003e method were being called. \u003c/p\u003e\n\u003cp\u003e \u003ca id\u003d\"NonExistent\"\u003e A \u003ccode\u003eRectangle\u003c/code\u003e whose width or height is negative has neither location nor dimension along those axes with negative dimensions. Such a \u003ccode\u003eRectangle\u003c/code\u003e is treated as non-existent along those axes. Such a \u003ccode\u003eRectangle\u003c/code\u003e is also empty with respect to containment calculations and methods which test if it contains or intersects a point or rectangle will always return false. Methods which combine such a \u003ccode\u003eRectangle\u003c/code\u003e with a point or rectangle will ignore the \u003ccode\u003eRectangle\u003c/code\u003e entirely in generating the result. If two \u003ccode\u003eRectangle\u003c/code\u003e objects are combined and each has a negative dimension, the result will have at least one negative dimension. \u003c/a\u003e \u003c/p\u003e\n\u003cp\u003e Methods which affect only the location of a \u003ccode\u003eRectangle\u003c/code\u003e will operate on its location regardless of whether or not it has a negative or zero dimension along either axis. \u003c/p\u003e\n\u003cp\u003e Note that a \u003ccode\u003eRectangle\u003c/code\u003e constructed with the default no-argument constructor will have dimensions of \u003ccode\u003e0x0\u003c/code\u003e and therefore be empty. That \u003ccode\u003eRectangle\u003c/code\u003e will still have a location of \u003ccode\u003e(0,0)\u003c/code\u003e and will contribute that location to the union and add operations. Code attempting to accumulate the bounds of a set of points should therefore initially construct the \u003ccode\u003eRectangle\u003c/code\u003e with a specifically negative width and height or it should use the first point in the set to construct the \u003ccode\u003eRectangle\u003c/code\u003e. For example: \u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\n     Rectangle bounds \u003d new Rectangle(0, 0, -1, -1);\n     for (int i \u003d 0; i \u0026lt; points.length; i++) {\n         bounds.add(points[i]);\n     }\n \u003c/code\u003e\u003c/pre\u003e or if we know that the points array contains at least one point: \n\u003cpre\u003e\u003ccode\u003e\n     Rectangle bounds \u003d new Rectangle(points[0]);\n     for (int i \u003d 1; i \u0026lt; points.length; i++) {\n         bounds.add(points[i]);\n     }\n \u003c/code\u003e\u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e This class uses 32-bit integers to store its location and dimensions. Frequently operations may produce a result that exceeds the range of a 32-bit integer. The methods will calculate their results in a way that avoids any 32-bit overflow for intermediate results and then choose the best representation to store the final results back into the 32-bit fields which hold the location and dimensions. The location of the result will be stored into the \u003ca href\u003d\"#x\"\u003e\u003ccode\u003ex\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"#y\"\u003e\u003ccode\u003ey\u003c/code\u003e\u003c/a\u003e fields by clipping the true result to the nearest 32-bit value. The values stored into the \u003ca href\u003d\"#width\"\u003e\u003ccode\u003ewidth\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"#height\"\u003e\u003ccode\u003eheight\u003c/code\u003e\u003c/a\u003e dimension fields will be chosen as the 32-bit values that encompass the largest part of the true result as possible. Generally this means that the dimension will be clipped independently to the range of 32-bit integers except that if the location had to be moved to store it into its pair of 32-bit fields then the dimensions will be adjusted relative to the \"best representation\" of the location. If the true result had a negative dimension and was therefore non-existent along one or both axes, the stored dimensions will be negative numbers in those axes. If the true result had a location that could be represented within the range of 32-bit integers, but zero dimension along one or both axes, then the stored dimensions will be zero in those axes.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.awt.Rectangle\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.0"
    ]
  }
}