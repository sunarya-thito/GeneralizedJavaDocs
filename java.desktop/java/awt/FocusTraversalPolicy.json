{
  "packageName": "java.awt",
  "simpleName": "FocusTraversalPolicy",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "name": "aContainer",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "aComponent",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getComponentAfter",
      "comment": "Returns the Component that should receive the focus after aComponent. aContainer must be a focus cycle root of aComponent or a focus traversal policy provider.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eaContainer\u003c/code\u003e - a focus cycle root of aComponent or focus traversal policy provider",
          "\u003ccode\u003eaComponent\u003c/code\u003e - a (possibly indirect) child of aContainer, or aContainer itself"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if aContainer is not a focus cycle root of aComponent or a focus traversal policy provider, or if either aContainer or aComponent is null"
        ],
        "return": [
          "the Component that should receive the focus after aComponent, or null if no suitable Component can be found"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "name": "aContainer",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Component",
            "type": "Class"
          },
          "name": "aComponent",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getComponentBefore",
      "comment": "Returns the Component that should receive the focus before aComponent. aContainer must be a focus cycle root of aComponent or a focus traversal policy provider.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eaContainer\u003c/code\u003e - a focus cycle root of aComponent or focus traversal policy provider",
          "\u003ccode\u003eaComponent\u003c/code\u003e - a (possibly indirect) child of aContainer, or aContainer itself"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if aContainer is not a focus cycle root of aComponent or a focus traversal policy provider, or if either aContainer or aComponent is null"
        ],
        "return": [
          "the Component that should receive the focus before aComponent, or null if no suitable Component can be found"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "name": "aContainer",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getFirstComponent",
      "comment": "Returns the first Component in the traversal cycle. This method is used to determine the next Component to focus when traversal wraps in the forward direction.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eaContainer\u003c/code\u003e - the focus cycle root or focus traversal policy provider whose first Component is to be returned"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if aContainer is null"
        ],
        "return": [
          "the first Component in the traversal cycle of aContainer, or null if no suitable Component can be found"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "name": "aContainer",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getLastComponent",
      "comment": "Returns the last Component in the traversal cycle. This method is used to determine the next Component to focus when traversal wraps in the reverse direction.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eaContainer\u003c/code\u003e - the focus cycle root or focus traversal policy provider whose last Component is to be returned"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if aContainer is null"
        ],
        "return": [
          "the last Component in the traversal cycle of aContainer, or null if no suitable Component can be found"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Container",
            "type": "Class"
          },
          "name": "aContainer",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getDefaultComponent",
      "comment": "Returns the default Component to focus. This Component will be the first to receive focus when traversing down into a new focus traversal cycle rooted at aContainer.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eaContainer\u003c/code\u003e - the focus cycle root or focus traversal policy provider whose default Component is to be returned"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if aContainer is null"
        ],
        "return": [
          "the default Component in the traversal cycle of aContainer, or null if no suitable Component can be found"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Component",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.Window",
            "type": "Class"
          },
          "name": "window",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getInitialComponent",
      "comment": "Returns the Component that should receive the focus when a Window is made visible for the first time. Once the Window has been made visible by a call to show() or setVisible(true), the initial Component will not be used again. Instead, if the Window loses and subsequently regains focus, or is made invisible or undisplayable and subsequently made visible and displayable, the Window\u0027s most recently focused Component will become the focus owner. The default implementation of this method returns the default Component.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/FocusTraversalPolicy.html#getDefaultComponent(java.awt.Container)\"\u003e\u003ccode\u003egetDefaultComponent(java.awt.Container)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Window.html#getMostRecentFocusOwner()\"\u003e\u003ccode\u003eWindow.getMostRecentFocusOwner()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ewindow\u003c/code\u003e - the Window whose initial Component is to be returned"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if window is null"
        ],
        "return": [
          "the Component that should receive the focus when window is made visible for the first time, or null if no suitable Component can be found"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a FocusTraversalPolicy.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.awt.FocusTraversalPolicy",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#setFocusTraversalPolicy(java.awt.FocusTraversalPolicy)\"\u003e\u003ccode\u003eContainer.setFocusTraversalPolicy(java.awt.FocusTraversalPolicy)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#getFocusTraversalPolicy()\"\u003e\u003ccode\u003eContainer.getFocusTraversalPolicy()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#setFocusCycleRoot(boolean)\"\u003e\u003ccode\u003eContainer.setFocusCycleRoot(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#isFocusCycleRoot(java.awt.Container)\"\u003e\u003ccode\u003eContainer.isFocusCycleRoot(java.awt.Container)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#setFocusTraversalPolicyProvider(boolean)\"\u003e\u003ccode\u003eContainer.setFocusTraversalPolicyProvider(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Container.html#isFocusTraversalPolicyProvider()\"\u003e\u003ccode\u003eContainer.isFocusTraversalPolicyProvider()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/KeyboardFocusManager.html#setDefaultFocusTraversalPolicy(java.awt.FocusTraversalPolicy)\"\u003e\u003ccode\u003eKeyboardFocusManager.setDefaultFocusTraversalPolicy(java.awt.FocusTraversalPolicy)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/KeyboardFocusManager.html#getDefaultFocusTraversalPolicy()\"\u003e\u003ccode\u003eKeyboardFocusManager.getDefaultFocusTraversalPolicy()\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}