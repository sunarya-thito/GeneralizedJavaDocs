{
  "packageName": "java.awt.font",
  "simpleName": "GlyphJustificationInfo",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PRIORITY_KASHIDA",
      "comment": "The highest justification priority.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.font.GlyphJustificationInfo.PRIORITY_KASHIDA\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PRIORITY_WHITESPACE",
      "comment": "The second highest justification priority.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.font.GlyphJustificationInfo.PRIORITY_WHITESPACE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PRIORITY_INTERCHAR",
      "comment": "The second lowest justification priority.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.font.GlyphJustificationInfo.PRIORITY_INTERCHAR\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PRIORITY_NONE",
      "comment": "The lowest justification priority.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.font.GlyphJustificationInfo.PRIORITY_NONE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "float",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "weight",
      "comment": "The weight of this glyph.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "growPriority",
      "comment": "The priority level of this glyph as it is growing.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "growAbsorb",
      "comment": "If true, this glyph absorbs all extra space at this and lower priority levels when it grows.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "float",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "growLeftLimit",
      "comment": "The maximum amount by which the left side of this glyph can grow.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "float",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "growRightLimit",
      "comment": "The maximum amount by which the right side of this glyph can grow.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "shrinkPriority",
      "comment": "The priority level of this glyph as it is shrinking.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "shrinkAbsorb",
      "comment": "If true,this glyph absorbs all remaining shrinkage at this and lower priority levels as it shrinks.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "float",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "shrinkLeftLimit",
      "comment": "The maximum amount by which the left side of this glyph can shrink (a positive number).",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "float",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 17,
      "name": "shrinkRightLimit",
      "comment": "The maximum amount by which the right side of this glyph can shrink (a positive number).",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "weight",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "growAbsorb",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "growPriority",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "growLeftLimit",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "growRightLimit",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "shrinkAbsorb",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "shrinkPriority",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "shrinkLeftLimit",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "shrinkRightLimit",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs information about the justification properties of a glyph.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eweight\u003c/code\u003e - the weight of this glyph when allocating space. Must be non-negative.",
          "\u003ccode\u003egrowAbsorb\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e this glyph absorbs all extra space at this priority and lower priority levels when it grows",
          "\u003ccode\u003egrowPriority\u003c/code\u003e - the priority level of this glyph when it grows",
          "\u003ccode\u003egrowLeftLimit\u003c/code\u003e - the maximum amount by which the left side of this glyph can grow. Must be non-negative.",
          "\u003ccode\u003egrowRightLimit\u003c/code\u003e - the maximum amount by which the right side of this glyph can grow. Must be non-negative.",
          "\u003ccode\u003eshrinkAbsorb\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e, this glyph absorbs all remaining shrinkage at this and lower priority levels when it shrinks",
          "\u003ccode\u003eshrinkPriority\u003c/code\u003e - the priority level of this glyph when it shrinks",
          "\u003ccode\u003eshrinkLeftLimit\u003c/code\u003e - the maximum amount by which the left side of this glyph can shrink. Must be non-negative.",
          "\u003ccode\u003eshrinkRightLimit\u003c/code\u003e - the maximum amount by which the right side of this glyph can shrink. Must be non-negative."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "java.awt.font.GlyphJustificationInfo",
  "annotations": [],
  "tagMap": {}
}