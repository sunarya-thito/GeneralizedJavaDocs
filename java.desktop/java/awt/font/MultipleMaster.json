{
  "packageName": "java.awt.font",
  "simpleName": "MultipleMaster",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getNumDesignAxes",
      "comment": "Returns the number of multiple master design controls. Design axes include things like width, weight and optical scaling.",
      "tagMap": {
        "return": [
          "the number of multiple master design controls"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDesignAxisRanges",
      "comment": "Returns an array of design limits interleaved in the form [fromâ†’to] for each axis. For example, design limits for weight could be from 0.1 to 1.0. The values are returned in the same order returned by getDesignAxisNames.",
      "tagMap": {
        "return": [
          "an array of design limits for each axis."
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDesignAxisDefaults",
      "comment": "Returns an array of default design values for each axis. For example, the default value for weight could be 1.6. The values are returned in the same order returned by getDesignAxisNames.",
      "tagMap": {
        "return": [
          "an array of default design values for each axis."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDesignAxisNames",
      "comment": "Returns the name for each design axis. This also determines the order in which the values for each axis are returned.",
      "tagMap": {
        "return": [
          "an array containing the names of each design axis."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Font",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "axes"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "deriveMMFont",
      "comment": "Creates a new instance of a multiple master font based on the design axis values contained in the specified array. The size of the array must correspond to the value returned from getNumDesignAxes and the values of the array elements must fall within limits specified by getDesignAxesLimits. In case of an error, null is returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eaxes\u003c/code\u003e - an array containing axis values"
        ],
        "return": [
          "a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Font.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eFont\u003c/code\u003e\u003c/a\u003e object that is an instance of \n\u003ccode\u003eMultipleMaster\u003c/code\u003e and is based on the design axis values provided by \n\u003ccode\u003eaxes\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Font",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "float",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "glyphWidths"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "avgStemWidth"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "typicalCapHeight"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "typicalXHeight"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "italicAngle"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "deriveMMFont",
      "comment": "Creates a new instance of a multiple master font based on detailed metric information. In case of an error, null is returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eglyphWidths\u003c/code\u003e - an array of floats representing the desired width of each glyph in font space",
          "\u003ccode\u003eavgStemWidth\u003c/code\u003e - the average stem width for the overall font in font space",
          "\u003ccode\u003etypicalCapHeight\u003c/code\u003e - the height of a typical upper case char",
          "\u003ccode\u003etypicalXHeight\u003c/code\u003e - the height of a typical lower case char",
          "\u003ccode\u003eitalicAngle\u003c/code\u003e - the angle at which the italics lean, in degrees counterclockwise from vertical"
        ],
        "return": [
          "a \n\u003ccode\u003eFont\u003c/code\u003e object that is an instance of \n\u003ccode\u003eMultipleMaster\u003c/code\u003e and is based on the specified metric information."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.awt.font.MultipleMaster",
  "comment": "The \n\u003ccode\u003eMultipleMaster\u003c/code\u003e interface represents Type 1 Multiple Master fonts. A particular \n\u003ca href\u003d\"../Font.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eFont\u003c/code\u003e\u003c/a\u003e object can implement this interface.",
  "tagMap": {}
}