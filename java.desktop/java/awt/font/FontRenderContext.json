{
  "packageName": "java.awt.font",
  "simpleName": "FontRenderContext",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isTransformed",
      "comment": "Indicates whether or not this FontRenderContext object measures text in a transformed render context.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/font/FontRenderContext.html#getTransform()\"\u003e\u003ccode\u003egetTransform()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this \n\u003ccode\u003eFontRenderContext\u003c/code\u003e object has a non-identity AffineTransform attribute. \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTransformType",
      "comment": "Returns the integer type of the affine transform for this FontRenderContext as specified by AffineTransform.getType()",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/AffineTransform.html\" title\u003d\"class in java.awt.geom\"\u003e\u003ccode\u003eAffineTransform\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the type of the transform."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.geom.AffineTransform",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getTransform",
      "comment": "Gets the transform that is used to scale typographical points to pixels in this FontRenderContext.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/geom/AffineTransform.html\" title\u003d\"class in java.awt.geom\"\u003e\u003ccode\u003eAffineTransform\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eAffineTransform\u003c/code\u003e of this \n\u003ccode\u003eFontRenderContext\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isAntiAliased",
      "comment": "Returns a boolean which indicates whether or not some form of antialiasing is specified by this FontRenderContext. Call getAntiAliasingHint() for the specific rendering hint value.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html#KEY_TEXT_ANTIALIASING\"\u003e\u003ccode\u003eRenderingHints.KEY_TEXT_ANTIALIASING\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/font/FontRenderContext.html#%3Cinit%3E(java.awt.geom.AffineTransform,boolean,boolean)\"\u003e\u003ccode\u003eFontRenderContext(AffineTransform,boolean,boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/font/FontRenderContext.html#%3Cinit%3E(java.awt.geom.AffineTransform,java.lang.Object,java.lang.Object)\"\u003e\u003ccode\u003eFontRenderContext(AffineTransform,Object,Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e, if text is anti-aliased in this \n\u003ccode\u003eFontRenderContext\u003c/code\u003e; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "usesFractionalMetrics",
      "comment": "Returns a boolean which whether text fractional metrics mode is used in this FontRenderContext. Call getFractionalMetricsHint() to obtain the corresponding rendering hint value.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html#KEY_FRACTIONALMETRICS\"\u003e\u003ccode\u003eRenderingHints.KEY_FRACTIONALMETRICS\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/font/FontRenderContext.html#%3Cinit%3E(java.awt.geom.AffineTransform,boolean,boolean)\"\u003e\u003ccode\u003eFontRenderContext(AffineTransform,boolean,boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/font/FontRenderContext.html#%3Cinit%3E(java.awt.geom.AffineTransform,java.lang.Object,java.lang.Object)\"\u003e\u003ccode\u003eFontRenderContext(AffineTransform,Object,Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e, if layout should be performed with fractional metrics; \n\u003ccode\u003efalse\u003c/code\u003e otherwise. in this \n\u003ccode\u003eFontRenderContext\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAntiAliasingHint",
      "comment": "Return the text anti-aliasing rendering mode hint used in this FontRenderContext. This will be one of the text antialiasing rendering hint values defined in java.awt.RenderingHints.",
      "annotations": [],
      "tagMap": {
        "return": [
          "text anti-aliasing rendering mode hint used in this \n\u003ccode\u003eFontRenderContext\u003c/code\u003e."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getFractionalMetricsHint",
      "comment": "Return the text fractional metrics rendering mode hint used in this FontRenderContext. This will be one of the text fractional metrics rendering hint values defined in java.awt.RenderingHints.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the text fractional metrics rendering mode hint used in this \n\u003ccode\u003eFontRenderContext\u003c/code\u003e."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "obj",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Return true if obj is an instance of FontRenderContext and has the same transform, antialiasing, and fractional metrics values as this.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to test for equality"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified object is equal to this \n\u003ccode\u003eFontRenderContext\u003c/code\u003e; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.font.FontRenderContext",
            "type": "Class"
          },
          "name": "rhs",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Return true if rhs has the same transform, antialiasing, and fractional metrics values as this.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erhs\u003c/code\u003e - the \n\u003ccode\u003eFontRenderContext\u003c/code\u003e to test for equality"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003erhs\u003c/code\u003e is equal to this \n\u003ccode\u003eFontRenderContext\u003c/code\u003e; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Return a hashcode for this FontRenderContext.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code value for this object."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a new FontRenderContext object.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.geom.AffineTransform",
            "type": "Class"
          },
          "name": "tx",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "isAntiAliased",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "usesFractionalMetrics",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a FontRenderContext object from an optional AffineTransform and two boolean values that determine if the newly constructed object has anti-aliasing or fractional metrics. In each case the boolean values true and false correspond to the rendering hint values ON and OFF respectively. To specify other hint values, use the constructor which specifies the rendering hint values as parameters : FontRenderContext(AffineTransform, Object, Object).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etx\u003c/code\u003e - the transform which is used to scale typographical points to pixels in this \n\u003ccode\u003eFontRenderContext\u003c/code\u003e. If null, an identity transform is used.",
          "\u003ccode\u003eisAntiAliased\u003c/code\u003e - determines if the newly constructed object has anti-aliasing.",
          "\u003ccode\u003eusesFractionalMetrics\u003c/code\u003e - determines if the newly constructed object has fractional metrics."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.awt.geom.AffineTransform",
            "type": "Class"
          },
          "name": "tx",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "aaHint",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "fmHint",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a FontRenderContext object from an optional AffineTransform and two Object values that determine if the newly constructed object has anti-aliasing or fractional metrics.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etx\u003c/code\u003e - the transform which is used to scale typographical points to pixels in this \n\u003ccode\u003eFontRenderContext\u003c/code\u003e. If null, an identity transform is used.",
          "\u003ccode\u003eaaHint\u003c/code\u003e - - one of the text antialiasing rendering hint values defined in \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003ejava.awt.RenderingHints\u003c/code\u003e\u003c/a\u003e. Any other value will throw \n\u003ccode\u003eIllegalArgumentException\u003c/code\u003e. \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html#VALUE_TEXT_ANTIALIAS_DEFAULT\"\u003e\u003ccode\u003eVALUE_TEXT_ANTIALIAS_DEFAULT\u003c/code\u003e\u003c/a\u003e may be specified, in which case the mode used is implementation dependent.",
          "\u003ccode\u003efmHint\u003c/code\u003e - - one of the text fractional rendering hint values defined in \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003ejava.awt.RenderingHints\u003c/code\u003e\u003c/a\u003e. \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html#VALUE_FRACTIONALMETRICS_DEFAULT\"\u003e\u003ccode\u003eVALUE_FRACTIONALMETRICS_DEFAULT\u003c/code\u003e\u003c/a\u003e may be specified, in which case the mode used is implementation dependent. Any other value will throw \n\u003ccode\u003eIllegalArgumentException\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the hints are not one of the legal values."
        ],
        "since": [
          "1.6"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.font.FontRenderContext",
  "comment": "The \n\u003ccode\u003eFontRenderContext\u003c/code\u003e class is a container for the information needed to correctly measure text. The measurement of text can vary because of rules that map outlines to pixels, and rendering hints provided by an application. \n\u003cp\u003e One such piece of information is a transform that scales typographical points to pixels. (A point is defined to be exactly 1/72 of an inch, which is slightly different than the traditional mechanical measurement of a point.) A character that is rendered at 12pt on a 600dpi device might have a different size than the same character rendered at 12pt on a 72dpi device because of such factors as rounding to pixel boundaries and hints that the font designer may have specified. \u003c/p\u003e\n\u003cp\u003e Anti-aliasing and Fractional-metrics specified by an application can also affect the size of a character because of rounding to pixel boundaries. \u003c/p\u003e\n\u003cp\u003e Typically, instances of \u003ccode\u003eFontRenderContext\u003c/code\u003e are obtained from a \u003ca href\u003d\"../Graphics2D.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eGraphics2D\u003c/code\u003e\u003c/a\u003e object. A \u003ccode\u003eFontRenderContext\u003c/code\u003e which is directly constructed will most likely not represent any actual graphics device, and may lead to unexpected or incorrect results.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html#KEY_TEXT_ANTIALIASING\"\u003e\u003ccode\u003eRenderingHints.KEY_TEXT_ANTIALIASING\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/RenderingHints.html#KEY_FRACTIONALMETRICS\"\u003e\u003ccode\u003eRenderingHints.KEY_FRACTIONALMETRICS\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Graphics2D.html#getFontRenderContext()\"\u003e\u003ccode\u003eGraphics2D.getFontRenderContext()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/font/LineMetrics.html\" title\u003d\"class in java.awt.font\"\u003e\u003ccode\u003eLineMetrics\u003c/code\u003e\u003c/a\u003e"
    ]
  }
}