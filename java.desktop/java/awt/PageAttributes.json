{
  "packageName": "java.awt",
  "simpleName": "PageAttributes",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Creates and returns a copy of this PageAttributes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the newly created copy. It is safe to cast this Object into a PageAttributes."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.PageAttributes",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "set",
      "comment": "Sets all of the attributes of this PageAttributes to the same values as the attributes of obj.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the PageAttributes to copy."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.PageAttributes$ColorType",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getColor",
      "comment": "Returns whether pages using these attributes will be rendered in color or monochrome. This attribute is updated to the value chosen by the user.",
      "tagMap": {
        "return": [
          "ColorType.COLOR or ColorType.MONOCHROME."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.PageAttributes$ColorType",
            "type": "Class"
          },
          "field": {
            "name": "color"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setColor",
      "comment": "Specifies whether pages using these attributes will be rendered in color or monochrome. Not specifying this attribute is equivalent to specifying ColorType.MONOCHROME.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecolor\u003c/code\u003e - ColorType.COLOR or ColorType.MONOCHROME."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if color is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.PageAttributes$MediaType",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMedia",
      "comment": "Returns the paper size for pages using these attributes. This attribute is updated to the value chosen by the user.",
      "tagMap": {
        "return": [
          "one of the constant fields of the MediaType class."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.PageAttributes$MediaType",
            "type": "Class"
          },
          "field": {
            "name": "media"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMedia",
      "comment": "Specifies the desired paper size for pages using these attributes. The actual paper size will be determined by the limitations of the target printer. If an exact match cannot be found, an implementation will choose the closest possible match. Not specifying this attribute is equivalent to specifying the default size for the default locale. The default size for locales in the United States and Canada is MediaType.NA_LETTER. The default size for all other locales is MediaType.ISO_A4.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emedia\u003c/code\u003e - one of the constant fields of the MediaType class."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if media is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMediaToDefault",
      "comment": "Sets the paper size for pages using these attributes to the default size for the default locale. The default size for locales in the United States and Canada is MediaType.NA_LETTER. The default size for all other locales is MediaType.ISO_A4.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.awt.PageAttributes$OrientationRequestedType",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOrientationRequested",
      "comment": "Returns the print orientation for pages using these attributes. This attribute is updated to the value chosen by the user.",
      "tagMap": {
        "return": [
          "OrientationRequestedType.PORTRAIT or OrientationRequestedType.LANDSCAPE."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.PageAttributes$OrientationRequestedType",
            "type": "Class"
          },
          "field": {
            "name": "orientationRequested"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOrientationRequested",
      "comment": "Specifies the print orientation for pages using these attributes. Not specifying the property is equivalent to specifying OrientationRequestedType.PORTRAIT.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eorientationRequested\u003c/code\u003e - OrientationRequestedType.PORTRAIT or OrientationRequestedType.LANDSCAPE."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if orientationRequested is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "orientationRequested"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOrientationRequested",
      "comment": "Specifies the print orientation for pages using these attributes. Specifying 3 denotes portrait. Specifying 4 denotes landscape. Specifying any other value will generate an IllegalArgumentException. Not specifying the property is equivalent to calling setOrientationRequested(OrientationRequestedType.PORTRAIT).",
      "tagMap": {
        "param": [
          "\u003ccode\u003eorientationRequested\u003c/code\u003e - \n\u003ccode\u003e3\u003c/code\u003e or \n\u003ccode\u003e4\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if orientationRequested is not \n\u003ccode\u003e3\u003c/code\u003e or \n\u003ccode\u003e4\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOrientationRequestedToDefault",
      "comment": "Sets the print orientation for pages using these attributes to the default. The default orientation is portrait.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.awt.PageAttributes$OriginType",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOrigin",
      "comment": "Returns whether drawing at (0, 0) to pages using these attributes draws at the upper-left corner of the physical page, or at the upper-left corner of the printable area. (Note that these locations could be equivalent.) This attribute cannot be modified by, and is not subject to any limitations of, the implementation or the target printer.",
      "tagMap": {
        "return": [
          "OriginType.PHYSICAL or OriginType.PRINTABLE"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.PageAttributes$OriginType",
            "type": "Class"
          },
          "field": {
            "name": "origin"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOrigin",
      "comment": "Specifies whether drawing at (0, 0) to pages using these attributes draws at the upper-left corner of the physical page, or at the upper-left corner of the printable area. (Note that these locations could be equivalent.) Not specifying the property is equivalent to specifying OriginType.PHYSICAL.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eorigin\u003c/code\u003e - OriginType.PHYSICAL or OriginType.PRINTABLE"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if origin is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.PageAttributes$PrintQualityType",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPrintQuality",
      "comment": "Returns the print quality for pages using these attributes. This attribute is updated to the value chosen by the user.",
      "tagMap": {
        "return": [
          "PrintQualityType.DRAFT, PrintQualityType.NORMAL, or PrintQualityType.HIGH"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.PageAttributes$PrintQualityType",
            "type": "Class"
          },
          "field": {
            "name": "printQuality"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPrintQuality",
      "comment": "Specifies the print quality for pages using these attributes. Not specifying the property is equivalent to specifying PrintQualityType.NORMAL.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprintQuality\u003c/code\u003e - PrintQualityType.DRAFT, PrintQualityType.NORMAL, or PrintQualityType.HIGH"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if printQuality is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "printQuality"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPrintQuality",
      "comment": "Specifies the print quality for pages using these attributes. Specifying 3 denotes draft. Specifying 4 denotes normal. Specifying 5 denotes high. Specifying any other value will generate an IllegalArgumentException. Not specifying the property is equivalent to calling setPrintQuality(PrintQualityType.NORMAL).",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprintQuality\u003c/code\u003e - \n\u003ccode\u003e3\u003c/code\u003e, \n\u003ccode\u003e4\u003c/code\u003e, or \n\u003ccode\u003e5\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if printQuality is not \n\u003ccode\u003e3\u003c/code\u003e, \n\u003ccode\u003e4\u003c/code\u003e, or \n\u003ccode\u003e5\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPrintQualityToDefault",
      "comment": "Sets the print quality for pages using these attributes to the default. The default print quality is normal.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPrinterResolution",
      "comment": "Returns the print resolution for pages using these attributes. Index 0 of the array specifies the cross feed direction resolution (typically the horizontal resolution). Index 1 of the array specifies the feed direction resolution (typically the vertical resolution). Index 2 of the array specifies whether the resolutions are in dots per inch or dots per centimeter. 3 denotes dots per inch. 4 denotes dots per centimeter.",
      "tagMap": {
        "return": [
          "an integer array of 3 elements. The first element must be greater than 0. The second element must be must be greater than 0. The third element must be either \n\u003ccode\u003e3\u003c/code\u003e or \n\u003ccode\u003e4\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "printerResolution"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPrinterResolution",
      "comment": "Specifies the desired print resolution for pages using these attributes. The actual resolution will be determined by the limitations of the implementation and the target printer. Index 0 of the array specifies the cross feed direction resolution (typically the horizontal resolution). Index 1 of the array specifies the feed direction resolution (typically the vertical resolution). Index 2 of the array specifies whether the resolutions are in dots per inch or dots per centimeter. 3 denotes dots per inch. 4 denotes dots per centimeter. Note that the 1.1 printing implementation (Toolkit.getPrintJob) requires that the feed and cross feed resolutions be the same. Not specifying the property is equivalent to calling setPrinterResolution(72).",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprinterResolution\u003c/code\u003e - an integer array of 3 elements. The first element must be greater than 0. The second element must be must be greater than 0. The third element must be either \n\u003ccode\u003e3\u003c/code\u003e or \n\u003ccode\u003e4\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if one or more of the above conditions is violated."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "printerResolution"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPrinterResolution",
      "comment": "Specifies the desired cross feed and feed print resolutions in dots per inch for pages using these attributes. The same value is used for both resolutions. The actual resolutions will be determined by the limitations of the implementation and the target printer. Not specifying the property is equivalent to specifying 72.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprinterResolution\u003c/code\u003e - an integer greater than 0."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if printerResolution is less than or equal to 0."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPrinterResolutionToDefault",
      "comment": "Sets the printer resolution for pages using these attributes to the default. The default is 72 dpi for both the feed and cross feed resolutions.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Determines whether two PageAttributes are equal to each other. Two PageAttributes are equal if and only if each of their attributes are equal. Attributes of enumeration type are equal if and only if the fields refer to the same unique enumeration object. This means that an aliased media is equal to its underlying unique media. Printer resolutions are equal if and only if the feed resolution, cross feed resolution, and units are equal.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object whose equality will be checked."
        ],
        "return": [
          "whether obj is equal to this PageAttribute according to the above criteria."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns a hash code value for this PageAttributes.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the hash code."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of this PageAttributes.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the string representation."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a PageAttributes instance with default values for every attribute.",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.PageAttributes",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a PageAttributes instance which is a copy of the supplied PageAttributes.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the PageAttributes to copy."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.awt.PageAttributes$ColorType",
            "type": "Class"
          },
          "field": {
            "name": "color"
          }
        },
        {
          "type": {
            "name": "java.awt.PageAttributes$MediaType",
            "type": "Class"
          },
          "field": {
            "name": "media"
          }
        },
        {
          "type": {
            "name": "java.awt.PageAttributes$OrientationRequestedType",
            "type": "Class"
          },
          "field": {
            "name": "orientationRequested"
          }
        },
        {
          "type": {
            "name": "java.awt.PageAttributes$OriginType",
            "type": "Class"
          },
          "field": {
            "name": "origin"
          }
        },
        {
          "type": {
            "name": "java.awt.PageAttributes$PrintQualityType",
            "type": "Class"
          },
          "field": {
            "name": "printQuality"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "printerResolution"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a PageAttributes instance with the specified values for every attribute.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecolor\u003c/code\u003e - ColorType.COLOR or ColorType.MONOCHROME.",
          "\u003ccode\u003emedia\u003c/code\u003e - one of the constant fields of the MediaType class.",
          "\u003ccode\u003eorientationRequested\u003c/code\u003e - OrientationRequestedType.PORTRAIT or OrientationRequestedType.LANDSCAPE.",
          "\u003ccode\u003eorigin\u003c/code\u003e - OriginType.PHYSICAL or OriginType.PRINTABLE",
          "\u003ccode\u003eprintQuality\u003c/code\u003e - PrintQualityType.DRAFT, PrintQualityType.NORMAL, or PrintQualityType.HIGH",
          "\u003ccode\u003eprinterResolution\u003c/code\u003e - an integer array of 3 elements. The first element must be greater than 0. The second element must be must be greater than 0. The third element must be either \n\u003ccode\u003e3\u003c/code\u003e or \n\u003ccode\u003e4\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if one or more of the above conditions is violated."
        ]
      }
    }
  ],
  "innerClasses": [
    "java.awt.PageAttributes$PrintQualityType",
    "java.awt.PageAttributes$ColorType",
    "java.awt.PageAttributes$OrientationRequestedType",
    "java.awt.PageAttributes$OriginType",
    "java.awt.PageAttributes$MediaType"
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "java.awt.PageAttributes",
  "comment": "A set of attributes which control the output of a printed page. \n\u003cp\u003e Instances of this class control the color state, paper size (media type), orientation, logical origin, print quality, and resolution of every page which uses the instance. Attribute names are compliant with the Internet Printing Protocol (IPP) 1.1 where possible. Attribute values are partially compliant where possible. \u003c/p\u003e\n\u003cp\u003e To use a method which takes an inner class type, pass a reference to one of the constant fields of the inner class. Client code cannot create new instances of the inner class types because none of those classes has a public constructor. For example, to set the color state to monochrome, use the following code: \u003c/p\u003e\n\u003cpre\u003e import java.awt.PageAttributes;\n\n public class MonochromeExample {\n     public void setMonochrome(PageAttributes pageAttributes) {\n         pageAttributes.setColor(PageAttributes.ColorType.MONOCHROME);\n     }\n }\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e Every IPP attribute which supports an \u003ci\u003eattributeName\u003c/i\u003e-default value has a corresponding \u003ccode\u003eset\u003ci\u003eattributeName\u003c/i\u003eToDefault\u003c/code\u003e method. Default value fields are not provided.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.3"
    ]
  }
}