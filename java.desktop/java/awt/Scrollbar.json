{
  "packageName": "java.awt",
  "simpleName": "Scrollbar",
  "moduleName": "java.desktop",
  "type": "CLASS",
  "superClass": {
    "name": "java.awt.Component",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "HORIZONTAL",
      "comment": "A constant that indicates a horizontal scroll bar.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.Scrollbar.HORIZONTAL\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "VERTICAL",
      "comment": "A constant that indicates a vertical scroll bar.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.awt.Scrollbar.VERTICAL\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addNotify",
      "comment": "Creates the Scrollbar\u0027s peer. The peer allows you to modify the appearance of the Scrollbar without changing any of its functionality.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#isDisplayable()\"\u003e\u003ccode\u003eComponent.isDisplayable()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#removeNotify()\"\u003e\u003ccode\u003eComponent.removeNotify()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#invalidate()\"\u003e\u003ccode\u003eComponent.invalidate()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#addNotify()\"\u003eaddNotify\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html\" title\u003d\"class in java.awt\"\u003eComponent\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOrientation",
      "comment": "Returns the orientation of this scroll bar.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setOrientation(int)\"\u003e\u003ccode\u003esetOrientation(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html#getOrientation()\"\u003egetOrientation\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html\" title\u003d\"interface in java.awt\"\u003eAdjustable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the orientation of this scroll bar, either \n\u003ccode\u003eScrollbar.HORIZONTAL\u003c/code\u003e or \n\u003ccode\u003eScrollbar.VERTICAL\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "orientation"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOrientation",
      "comment": "Sets the orientation for this scroll bar.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getOrientation()\"\u003e\u003ccode\u003egetOrientation()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eorientation\u003c/code\u003e - the orientation of this scroll bar, either \n\u003ccode\u003eScrollbar.HORIZONTAL\u003c/code\u003e or \n\u003ccode\u003eScrollbar.VERTICAL\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the value supplied for \n\u003ccode\u003eorientation\u003c/code\u003e is not a legal value"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getValue",
      "comment": "Gets the current value of this scroll bar.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getMinimum()\"\u003e\u003ccode\u003egetMinimum()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getMaximum()\"\u003e\u003ccode\u003egetMaximum()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html#getValue()\"\u003egetValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html\" title\u003d\"interface in java.awt\"\u003eAdjustable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the current value of this scroll bar"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "newValue"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setValue",
      "comment": "Sets the value of this scroll bar to the specified value. If the value supplied is less than the current minimum or greater than the current maximum - visibleAmount, then either minimum or maximum - visibleAmount is substituted, as appropriate. Normally, a program should change a scroll bar\u0027s value only by calling setValues. The setValues method simultaneously and synchronously sets the minimum, maximum, visible amount, and value properties of a scroll bar, so that they are mutually consistent. Calling this method does not fire an AdjustmentEvent.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setValues(int,int,int,int)\"\u003e\u003ccode\u003esetValues(int, int, int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getValue()\"\u003e\u003ccode\u003egetValue()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getMinimum()\"\u003e\u003ccode\u003egetMinimum()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getMaximum()\"\u003e\u003ccode\u003egetMaximum()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html#setValue(int)\"\u003esetValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html\" title\u003d\"interface in java.awt\"\u003eAdjustable\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enewValue\u003c/code\u003e - the new value of the scroll bar"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMinimum",
      "comment": "Gets the minimum value of this scroll bar.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getValue()\"\u003e\u003ccode\u003egetValue()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getMaximum()\"\u003e\u003ccode\u003egetMaximum()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html#getMinimum()\"\u003egetMinimum\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html\" title\u003d\"interface in java.awt\"\u003eAdjustable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the minimum value of this scroll bar"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "newMinimum"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMinimum",
      "comment": "Sets the minimum value of this scroll bar. When setMinimum is called, the minimum value is changed, and other values (including the maximum, the visible amount, and the current scroll bar value) are changed to be consistent with the new minimum. Normally, a program should change a scroll bar\u0027s minimum value only by calling setValues. The setValues method simultaneously and synchronously sets the minimum, maximum, visible amount, and value properties of a scroll bar, so that they are mutually consistent. Note that setting the minimum value to Integer.MAX_VALUE will result in the new minimum value being set to Integer.MAX_VALUE - 1.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setValues(int,int,int,int)\"\u003e\u003ccode\u003esetValues(int, int, int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setMaximum(int)\"\u003e\u003ccode\u003esetMaximum(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html#setMinimum(int)\"\u003esetMinimum\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html\" title\u003d\"interface in java.awt\"\u003eAdjustable\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enewMinimum\u003c/code\u003e - the new minimum value for this scroll bar"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMaximum",
      "comment": "Gets the maximum value of this scroll bar.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getValue()\"\u003e\u003ccode\u003egetValue()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getMinimum()\"\u003e\u003ccode\u003egetMinimum()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html#getMaximum()\"\u003egetMaximum\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html\" title\u003d\"interface in java.awt\"\u003eAdjustable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the maximum value of this scroll bar"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "newMaximum"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMaximum",
      "comment": "Sets the maximum value of this scroll bar. When setMaximum is called, the maximum value is changed, and other values (including the minimum, the visible amount, and the current scroll bar value) are changed to be consistent with the new maximum. Normally, a program should change a scroll bar\u0027s maximum value only by calling setValues. The setValues method simultaneously and synchronously sets the minimum, maximum, visible amount, and value properties of a scroll bar, so that they are mutually consistent. Note that setting the maximum value to Integer.MIN_VALUE will result in the new maximum value being set to Integer.MIN_VALUE + 1.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setValues(int,int,int,int)\"\u003e\u003ccode\u003esetValues(int, int, int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setMinimum(int)\"\u003e\u003ccode\u003esetMinimum(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html#setMaximum(int)\"\u003esetMaximum\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html\" title\u003d\"interface in java.awt\"\u003eAdjustable\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enewMaximum\u003c/code\u003e - the new maximum value for this scroll bar"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getVisibleAmount",
      "comment": "Gets the visible amount of this scroll bar. When a scroll bar is used to select a range of values, the visible amount is used to represent the range of values that are currently visible. The size of the scroll bar\u0027s bubble (also called a thumb or scroll box), usually gives a visual representation of the relationship of the visible amount to the range of the scroll bar. Note that depending on platform, the value of the visible amount property may not be visually indicated by the size of the bubble. The scroll bar\u0027s bubble may not be displayed when it is not moveable (e.g. when it takes up the entire length of the scroll bar\u0027s track, or when the scroll bar is disabled). Whether the bubble is displayed or not will not affect the value returned by getVisibleAmount.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setVisibleAmount(int)\"\u003e\u003ccode\u003esetVisibleAmount(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html#getVisibleAmount()\"\u003egetVisibleAmount\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html\" title\u003d\"interface in java.awt\"\u003eAdjustable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the visible amount of this scroll bar"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getVisible",
      "comment": "Returns the visible amount of this scroll bar.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "the visible amount of this scroll bar"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "newAmount"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setVisibleAmount",
      "comment": "Sets the visible amount of this scroll bar. When a scroll bar is used to select a range of values, the visible amount is used to represent the range of values that are currently visible. The size of the scroll bar\u0027s bubble (also called a thumb or scroll box), usually gives a visual representation of the relationship of the visible amount to the range of the scroll bar. Note that depending on platform, the value of the visible amount property may not be visually indicated by the size of the bubble. The scroll bar\u0027s bubble may not be displayed when it is not moveable (e.g. when it takes up the entire length of the scroll bar\u0027s track, or when the scroll bar is disabled). Whether the bubble is displayed or not will not affect the value returned by getVisibleAmount. If the visible amount supplied is less than one or greater than the current maximum - minimum, then either one or maximum - minimum is substituted, as appropriate. Normally, a program should change a scroll bar\u0027s value only by calling setValues. The setValues method simultaneously and synchronously sets the minimum, maximum, visible amount, and value properties of a scroll bar, so that they are mutually consistent.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getVisibleAmount()\"\u003e\u003ccode\u003egetVisibleAmount()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setValues(int,int,int,int)\"\u003e\u003ccode\u003esetValues(int, int, int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html#setVisibleAmount(int)\"\u003esetVisibleAmount\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html\" title\u003d\"interface in java.awt\"\u003eAdjustable\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003enewAmount\u003c/code\u003e - the new visible amount"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "v"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setUnitIncrement",
      "comment": "Sets the unit increment for this scroll bar. The unit increment is the value that is added or subtracted when the user activates the unit increment area of the scroll bar, generally through a mouse or keyboard gesture that the scroll bar receives as an adjustment event. The unit increment must be greater than zero. Attempts to set the unit increment to a value lower than 1 will result in a value of 1 being set. In some operating systems, this property can be ignored by the underlying controls.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getUnitIncrement()\"\u003e\u003ccode\u003egetUnitIncrement()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html#setUnitIncrement(int)\"\u003esetUnitIncrement\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html\" title\u003d\"interface in java.awt\"\u003eAdjustable\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ev\u003c/code\u003e - the amount by which to increment or decrement the scroll bar\u0027s value"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "v"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLineIncrement",
      "comment": "Sets the unit increment for this scroll bar.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ev\u003c/code\u003e - the increment value"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUnitIncrement",
      "comment": "Gets the unit increment for this scrollbar. The unit increment is the value that is added or subtracted when the user activates the unit increment area of the scroll bar, generally through a mouse or keyboard gesture that the scroll bar receives as an adjustment event. The unit increment must be greater than zero. In some operating systems, this property can be ignored by the underlying controls.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setUnitIncrement(int)\"\u003e\u003ccode\u003esetUnitIncrement(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html#getUnitIncrement()\"\u003egetUnitIncrement\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html\" title\u003d\"interface in java.awt\"\u003eAdjustable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the unit increment of this scroll bar"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLineIncrement",
      "comment": "Returns the unit increment for this scrollbar.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "the unit increment for this scrollbar"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "v"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setBlockIncrement",
      "comment": "Sets the block increment for this scroll bar. The block increment is the value that is added or subtracted when the user activates the block increment area of the scroll bar, generally through a mouse or keyboard gesture that the scroll bar receives as an adjustment event. The block increment must be greater than zero. Attempts to set the block increment to a value lower than 1 will result in a value of 1 being set.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getBlockIncrement()\"\u003e\u003ccode\u003egetBlockIncrement()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html#setBlockIncrement(int)\"\u003esetBlockIncrement\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html\" title\u003d\"interface in java.awt\"\u003eAdjustable\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ev\u003c/code\u003e - the amount by which to increment or decrement the scroll bar\u0027s value"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "v"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setPageIncrement",
      "comment": "Sets the block increment for this scroll bar.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ev\u003c/code\u003e - the block increment"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getBlockIncrement",
      "comment": "Gets the block increment of this scroll bar. The block increment is the value that is added or subtracted when the user activates the block increment area of the scroll bar, generally through a mouse or keyboard gesture that the scroll bar receives as an adjustment event. The block increment must be greater than zero.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setBlockIncrement(int)\"\u003e\u003ccode\u003esetBlockIncrement(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html#getBlockIncrement()\"\u003egetBlockIncrement\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html\" title\u003d\"interface in java.awt\"\u003eAdjustable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the block increment of this scroll bar"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPageIncrement",
      "comment": "Returns the block increment of this scroll bar.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "return": [
          "the block increment of this scroll bar"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "visible"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "minimum"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "maximum"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setValues",
      "comment": "Sets the values of four properties for this scroll bar: value, visibleAmount, minimum, and maximum. If the values supplied for these properties are inconsistent or incorrect, they will be changed to ensure consistency. This method simultaneously and synchronously sets the values of four scroll bar properties, assuring that the values of these properties are mutually consistent. It enforces the following constraints: maximum must be greater than minimum, maximum - minimum must not be greater than Integer.MAX_VALUE, visibleAmount must be greater than zero. visibleAmount must not be greater than maximum - minimum, value must not be less than minimum, and value must not be greater than maximum - visibleAmount Calling this method does not fire an AdjustmentEvent.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setMinimum(int)\"\u003e\u003ccode\u003esetMinimum(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setMaximum(int)\"\u003e\u003ccode\u003esetMaximum(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setVisibleAmount(int)\"\u003e\u003ccode\u003esetVisibleAmount(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setValue(int)\"\u003e\u003ccode\u003esetValue(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - is the position in the current window",
          "\u003ccode\u003evisible\u003c/code\u003e - is the visible amount of the scroll bar",
          "\u003ccode\u003eminimum\u003c/code\u003e - is the minimum value of the scroll bar",
          "\u003ccode\u003emaximum\u003c/code\u003e - is the maximum value of the scroll bar"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getValueIsAdjusting",
      "comment": "Returns true if the value is in the process of changing as a result of actions being taken by the user.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setValueIsAdjusting(boolean)\"\u003e\u003ccode\u003esetValueIsAdjusting(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the value of the \n\u003ccode\u003evalueIsAdjusting\u003c/code\u003e property"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setValueIsAdjusting",
      "comment": "Sets the valueIsAdjusting property.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getValueIsAdjusting()\"\u003e\u003ccode\u003egetValueIsAdjusting()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - new adjustment-in-progress status"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.AdjustmentListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addAdjustmentListener",
      "comment": "Adds the specified adjustment listener to receive instances of AdjustmentEvent from this scroll bar. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT\u0027s threading model.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#removeAdjustmentListener(java.awt.event.AdjustmentListener)\"\u003e\u003ccode\u003eremoveAdjustmentListener(java.awt.event.AdjustmentListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getAdjustmentListeners()\"\u003e\u003ccode\u003egetAdjustmentListeners()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/AdjustmentEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eAdjustmentEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/AdjustmentListener.html\" title\u003d\"interface in java.awt.event\"\u003e\u003ccode\u003eAdjustmentListener\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html#addAdjustmentListener(java.awt.event.AdjustmentListener)\"\u003eaddAdjustmentListener\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html\" title\u003d\"interface in java.awt\"\u003eAdjustable\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the adjustment listener"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.AdjustmentListener",
            "type": "Class"
          },
          "field": {
            "name": "l"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeAdjustmentListener",
      "comment": "Removes the specified adjustment listener so that it no longer receives instances of AdjustmentEvent from this scroll bar. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT\u0027s threading model.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#addAdjustmentListener(java.awt.event.AdjustmentListener)\"\u003e\u003ccode\u003eaddAdjustmentListener(java.awt.event.AdjustmentListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#getAdjustmentListeners()\"\u003e\u003ccode\u003egetAdjustmentListeners()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/AdjustmentEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eAdjustmentEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/AdjustmentListener.html\" title\u003d\"interface in java.awt.event\"\u003e\u003ccode\u003eAdjustmentListener\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html#removeAdjustmentListener(java.awt.event.AdjustmentListener)\"\u003eremoveAdjustmentListener\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Adjustable.html\" title\u003d\"interface in java.awt\"\u003eAdjustable\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003el\u003c/code\u003e - the adjustment listener"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.event.AdjustmentListener",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAdjustmentListeners",
      "comment": "Returns an array of all the adjustment listeners registered on this scrollbar.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#addAdjustmentListener(java.awt.event.AdjustmentListener)\"\u003e\u003ccode\u003eaddAdjustmentListener(java.awt.event.AdjustmentListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#removeAdjustmentListener(java.awt.event.AdjustmentListener)\"\u003e\u003ccode\u003eremoveAdjustmentListener(java.awt.event.AdjustmentListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/AdjustmentEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eAdjustmentEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/AdjustmentListener.html\" title\u003d\"interface in java.awt.event\"\u003e\u003ccode\u003eAdjustmentListener\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "all of this scrollbar\u0027s \n\u003ccode\u003eAdjustmentListener\u003c/code\u003es or an empty array if no adjustment listeners are currently registered"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "listenerType"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "upperBounds": [
            {
              "name": "java.util.EventListener",
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getListeners",
      "comment": "Returns an array of all the objects currently registered as FooListeners upon this Scrollbar. FooListeners are registered using the addFooListener method. You can specify the listenerType argument with a class literal, such as FooListener.class. For example, you can query a Scrollbar c for its mouse listeners with the following code: MouseListener[] mls \u003d (MouseListener[])(c.getListeners(MouseListener.class)); If no such listeners exist, this method returns an empty array.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the listeners"
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getComponentListeners()\"\u003e\u003ccode\u003eComponent.getComponentListeners()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getFocusListeners()\"\u003e\u003ccode\u003eComponent.getFocusListeners()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getHierarchyListeners()\"\u003e\u003ccode\u003eComponent.getHierarchyListeners()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getHierarchyBoundsListeners()\"\u003e\u003ccode\u003eComponent.getHierarchyBoundsListeners()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getKeyListeners()\"\u003e\u003ccode\u003eComponent.getKeyListeners()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getMouseListeners()\"\u003e\u003ccode\u003eComponent.getMouseListeners()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getMouseMotionListeners()\"\u003e\u003ccode\u003eComponent.getMouseMotionListeners()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getMouseWheelListeners()\"\u003e\u003ccode\u003eComponent.getMouseWheelListeners()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getInputMethodListeners()\"\u003e\u003ccode\u003eComponent.getInputMethodListeners()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getPropertyChangeListeners()\"\u003e\u003ccode\u003eComponent.getPropertyChangeListeners()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getListeners(java.lang.Class)\"\u003egetListeners\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html\" title\u003d\"class in java.awt\"\u003eComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003elistenerType\u003c/code\u003e - the type of listeners requested; this parameter should specify an interface that descends from \n\u003ccode\u003ejava.util.EventListener\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elistenerType\u003c/code\u003e doesn\u0027t specify a class or interface that implements \n\u003ccode\u003ejava.util.EventListener\u003c/code\u003e"
        ],
        "return": [
          "an array of all objects registered as \n\u003ccode\u003e\u003cem\u003eFoo\u003c/em\u003eListener\u003c/code\u003es on this component, or an empty array if no such listeners have been added"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.AWTEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "processEvent",
      "comment": "Processes events on this scroll bar. If the event is an instance of AdjustmentEvent, it invokes the processAdjustmentEvent method. Otherwise, it invokes its superclass\u0027s processEvent method. Note that if the event parameter is null the behavior is unspecified and may result in an exception.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/AdjustmentEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eAdjustmentEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#processAdjustmentEvent(java.awt.event.AdjustmentEvent)\"\u003e\u003ccode\u003eprocessAdjustmentEvent(java.awt.event.AdjustmentEvent)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#processEvent(java.awt.AWTEvent)\"\u003eprocessEvent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html\" title\u003d\"class in java.awt\"\u003eComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the event"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.awt.event.AdjustmentEvent",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "processAdjustmentEvent",
      "comment": "Processes adjustment events occurring on this scrollbar by dispatching them to any registered AdjustmentListener objects. This method is not called unless adjustment events are enabled for this component. Adjustment events are enabled when one of the following occurs: An AdjustmentListener object is registered via addAdjustmentListener. Adjustment events are enabled via enableEvents. Note that if the event parameter is null the behavior is unspecified and may result in an exception.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/AdjustmentEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eAdjustmentEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/AdjustmentListener.html\" title\u003d\"interface in java.awt.event\"\u003e\u003ccode\u003eAdjustmentListener\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#addAdjustmentListener(java.awt.event.AdjustmentListener)\"\u003e\u003ccode\u003eaddAdjustmentListener(java.awt.event.AdjustmentListener)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#enableEvents(long)\"\u003e\u003ccode\u003eComponent.enableEvents(long)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the adjustment event"
        ],
        "since": [
          "1.1"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "paramString",
      "comment": "Returns a string representing the state of this Scrollbar. This method is intended to be used only for debugging purposes, and the content and format of the returned string may vary between implementations. The returned string may be empty but may not be null.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#paramString()\"\u003eparamString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html\" title\u003d\"class in java.awt\"\u003eComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the parameter string of this scroll bar"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.accessibility.AccessibleContext",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAccessibleContext",
      "comment": "Gets the AccessibleContext associated with this Scrollbar. For scrollbars, the AccessibleContext takes the form of an AccessibleAWTScrollBar. A new AccessibleAWTScrollBar instance is created if necessary.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Component.html\" title\u003d\"class in java.awt\"\u003eComponent\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html#getAccessibleContext()\"\u003egetAccessibleContext\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/javax/accessibility/Accessible.html\" title\u003d\"interface in javax.accessibility\"\u003eAccessible\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eAccessibleAWTScrollBar\u003c/code\u003e that serves as the \n\u003ccode\u003eAccessibleContext\u003c/code\u003e of this \n\u003ccode\u003eScrollBar\u003c/code\u003e"
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new vertical scroll bar. The default properties of the scroll bar are listed in the following table: Scrollbar default properties Property Description Default Value orientation indicates whether the scroll bar is vertical or horizontal Scrollbar.VERTICAL value value which controls the location of the scroll bar\u0027s bubble 0 visible amount visible amount of the scroll bar\u0027s range, typically represented by the size of the scroll bar\u0027s bubble 10 minimum minimum value of the scroll bar 0 maximum maximum value of the scroll bar 100 unit increment amount the value changes when the Line Up or Line Down key is pressed, or when the end arrows of the scrollbar are clicked 1 block increment amount the value changes when the Page Up or Page Down key is pressed, or when the scrollbar track is clicked on either side of the bubble 10",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if GraphicsEnvironment.isHeadless() returns true."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "orientation"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new scroll bar with the specified orientation. The orientation argument must take one of the two values Scrollbar.HORIZONTAL, or Scrollbar.VERTICAL, indicating a horizontal or vertical scroll bar, respectively.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eorientation\u003c/code\u003e - indicates the orientation of the scroll bar"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - when an illegal value for the \n\u003ccode\u003eorientation\u003c/code\u003e argument is supplied",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if GraphicsEnvironment.isHeadless() returns true."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.awt.HeadlessException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "orientation"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "visible"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "minimum"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "maximum"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new scroll bar with the specified orientation, initial value, visible amount, and minimum and maximum values. The orientation argument must take one of the two values Scrollbar.HORIZONTAL, or Scrollbar.VERTICAL, indicating a horizontal or vertical scroll bar, respectively. The parameters supplied to this constructor are subject to the constraints described in setValues(int, int, int, int).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Scrollbar.html#setValues(int,int,int,int)\"\u003e\u003ccode\u003esetValues(int, int, int, int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/GraphicsEnvironment.html#isHeadless()\"\u003e\u003ccode\u003eGraphicsEnvironment.isHeadless()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eorientation\u003c/code\u003e - indicates the orientation of the scroll bar.",
          "\u003ccode\u003evalue\u003c/code\u003e - the initial value of the scroll bar",
          "\u003ccode\u003evisible\u003c/code\u003e - the visible amount of the scroll bar, typically represented by the size of the bubble",
          "\u003ccode\u003eminimum\u003c/code\u003e - the minimum value of the scroll bar",
          "\u003ccode\u003emaximum\u003c/code\u003e - the maximum value of the scroll bar"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - when an illegal value for the \n\u003ccode\u003eorientation\u003c/code\u003e argument is supplied",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/HeadlessException.html\" title\u003d\"class in java.awt\"\u003eHeadlessException\u003c/a\u003e\u003c/code\u003e - if GraphicsEnvironment.isHeadless() returns true."
        ]
      }
    }
  ],
  "innerClasses": [
    "java.awt.Scrollbar$AccessibleAWTScrollBar"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.awt.Scrollbar",
  "comment": "The \n\u003ccode\u003eScrollbar\u003c/code\u003e class embodies a scroll bar, a familiar user-interface object. A scroll bar provides a convenient means for allowing a user to select from a range of values. The following three vertical scroll bars could be used as slider controls to pick the red, green, and blue components of a color: \n\u003cp\u003e \u003cimg src\u003d\"doc-files/Scrollbar-1.gif\" alt\u003d\"Image shows 3 vertical sliders,\n side-by-side.\" style\u003d\"margin: 7px 10px;\"\u003e \u003c/p\u003e\n\u003cp\u003e Each scroll bar in this example could be created with code similar to the following: \u003c/p\u003e\n\u003chr\u003e\n\u003cblockquote\u003e\n \u003cpre\u003e redSlider\u003dnew Scrollbar(Scrollbar.VERTICAL, 0, 1, 0, 255);\n add(redSlider);\n \u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003chr\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e Alternatively, a scroll bar can represent a range of values. For example, if a scroll bar is used for scrolling through text, the width of the \"bubble\" (also called the \"thumb\" or \"scroll box\") can be used to represent the amount of text that is visible. Here is an example of a scroll bar that represents a range: \u003c/p\u003e\n\u003cp\u003e \u003cimg src\u003d\"doc-files/Scrollbar-2.gif\" alt\u003d\"Image shows horizontal slider with starting range of 0 and ending range\n of 300. The slider thumb is labeled 60.\" style\u003d\"margin: 7px 10px;\"\u003e \u003c/p\u003e\n\u003cp\u003e The value range represented by the bubble in this example is the \u003cem\u003evisible amount\u003c/em\u003e. The horizontal scroll bar in this example could be created with code like the following: \u003c/p\u003e\n\u003chr\u003e\n\u003cblockquote\u003e\n \u003cpre\u003e ranger \u003d new Scrollbar(Scrollbar.HORIZONTAL, 0, 60, 0, 300);\n add(ranger);\n \u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003chr\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e Note that the actual maximum value of the scroll bar is the \u003ccode\u003emaximum\u003c/code\u003e minus the \u003ccode\u003evisible amount\u003c/code\u003e. In the previous example, because the \u003ccode\u003emaximum\u003c/code\u003e is 300 and the \u003ccode\u003evisible amount\u003c/code\u003e is 60, the actual maximum value is 240. The range of the scrollbar track is 0 - 300. The left side of the bubble indicates the value of the scroll bar. \u003c/p\u003e\n\u003cp\u003e Normally, the user changes the value of the scroll bar by making a gesture with the mouse. For example, the user can drag the scroll bar\u0027s bubble up and down, or click in the scroll bar\u0027s unit increment or block increment areas. Keyboard gestures can also be mapped to the scroll bar. By convention, the \u003cb\u003ePage\u0026nbsp;Up\u003c/b\u003e and \u003cb\u003ePage\u0026nbsp;Down\u003c/b\u003e keys are equivalent to clicking in the scroll bar\u0027s block increment and block decrement areas. \u003c/p\u003e\n\u003cp\u003e When the user changes the value of the scroll bar, the scroll bar receives an instance of \u003ccode\u003eAdjustmentEvent\u003c/code\u003e. The scroll bar processes this event, passing it along to any registered listeners. \u003c/p\u003e\n\u003cp\u003e Any object that wishes to be notified of changes to the scroll bar\u0027s value should implement \u003ccode\u003eAdjustmentListener\u003c/code\u003e, an interface defined in the package \u003ccode\u003ejava.awt.event\u003c/code\u003e. Listeners can be added and removed dynamically by calling the methods \u003ccode\u003eaddAdjustmentListener\u003c/code\u003e and \u003ccode\u003eremoveAdjustmentListener\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003e The \u003ccode\u003eAdjustmentEvent\u003c/code\u003e class defines five types of adjustment event, listed here: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e\u003ccode\u003eAdjustmentEvent.TRACK\u003c/code\u003e is sent out when the user drags the scroll bar\u0027s bubble. \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eAdjustmentEvent.UNIT_INCREMENT\u003c/code\u003e is sent out when the user clicks in the left arrow of a horizontal scroll bar, or the top arrow of a vertical scroll bar, or makes the equivalent gesture from the keyboard. \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eAdjustmentEvent.UNIT_DECREMENT\u003c/code\u003e is sent out when the user clicks in the right arrow of a horizontal scroll bar, or the bottom arrow of a vertical scroll bar, or makes the equivalent gesture from the keyboard. \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eAdjustmentEvent.BLOCK_INCREMENT\u003c/code\u003e is sent out when the user clicks in the track, to the left of the bubble on a horizontal scroll bar, or above the bubble on a vertical scroll bar. By convention, the \u003cb\u003ePage\u0026nbsp;Up\u003c/b\u003e key is equivalent, if the user is using a keyboard that defines a \u003cb\u003ePage\u0026nbsp;Up\u003c/b\u003e key. \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eAdjustmentEvent.BLOCK_DECREMENT\u003c/code\u003e is sent out when the user clicks in the track, to the right of the bubble on a horizontal scroll bar, or below the bubble on a vertical scroll bar. By convention, the \u003cb\u003ePage\u0026nbsp;Down\u003c/b\u003e key is equivalent, if the user is using a keyboard that defines a \u003cb\u003ePage\u0026nbsp;Down\u003c/b\u003e key. \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The JDK\u0026nbsp;1.0 event system is supported for backwards compatibility, but its use with newer versions of the platform is discouraged. The five types of adjustment events introduced with JDK\u0026nbsp;1.1 correspond to the five event types that are associated with scroll bars in previous platform versions. The following list gives the adjustment event type, and the corresponding JDK\u0026nbsp;1.0 event type it replaces. \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e\u003ccode\u003eAdjustmentEvent.TRACK\u003c/code\u003e replaces \u003ccode\u003eEvent.SCROLL_ABSOLUTE\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eAdjustmentEvent.UNIT_INCREMENT\u003c/code\u003e replaces \u003ccode\u003eEvent.SCROLL_LINE_UP\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eAdjustmentEvent.UNIT_DECREMENT\u003c/code\u003e replaces \u003ccode\u003eEvent.SCROLL_LINE_DOWN\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eAdjustmentEvent.BLOCK_INCREMENT\u003c/code\u003e replaces \u003ccode\u003eEvent.SCROLL_PAGE_UP\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eAdjustmentEvent.BLOCK_DECREMENT\u003c/code\u003e replaces \u003ccode\u003eEvent.SCROLL_PAGE_DOWN\u003c/code\u003e \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e \u003cb\u003eNote\u003c/b\u003e: We recommend using a \u003ccode\u003eScrollbar\u003c/code\u003e for value selection only. If you want to implement a scrollable component inside a container, we recommend you use a \u003ca href\u003d\"ScrollPane.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eScrollPane\u003c/code\u003e\u003c/a\u003e. If you use a \u003ccode\u003eScrollbar\u003c/code\u003e for this purpose, you are likely to encounter issues with painting, key handling, sizing and positioning.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/AdjustmentEvent.html\" title\u003d\"class in java.awt.event\"\u003e\u003ccode\u003eAdjustmentEvent\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/event/AdjustmentListener.html\" title\u003d\"interface in java.awt.event\"\u003e\u003ccode\u003eAdjustmentListener\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.awt.Scrollbar\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.0"
    ]
  }
}