{
  "packageName": "java.applet",
  "simpleName": "AppletContext",
  "moduleName": "java.desktop",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.applet.AudioClip",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getAudioClip",
      "comment": "Creates an audio clip.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - an absolute \n\u003ccode\u003eURL\u003c/code\u003e giving the location of the audio clip"
        ],
        "return": [
          "the audio clip at the specified \n\u003ccode\u003eURL\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.awt.Image",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getImage",
      "comment": "Returns an Image object that can then be painted on the screen. The url argument that is passed as an argument must specify an absolute URL. This method always returns immediately, whether or not the image exists. When the applet attempts to draw the image on the screen, the data will be loaded. The graphics primitives that draw the image will incrementally paint on the screen.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.desktop/java/awt/Image.html\" title\u003d\"class in java.awt\"\u003e\u003ccode\u003eImage\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - an absolute \n\u003ccode\u003eURL\u003c/code\u003e giving the location of the image"
        ],
        "return": [
          "the image at the specified \n\u003ccode\u003eURL\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.applet.Applet",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getApplet",
      "comment": "Finds and returns the applet in the document represented by this applet context with the given name. The name can be set in the HTML tag by setting the name attribute.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - an applet name"
        ],
        "return": [
          "the applet with the given name, or \n\u003ccode\u003enull\u003c/code\u003e if not found"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Enumeration",
        "parameters": [
          {
            "name": "java.applet.Applet",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getApplets",
      "comment": "Finds all the applets in the document represented by this applet context.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an enumeration of all applets in the document represented by this applet context"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "showDocument",
      "comment": "Requests that the browser or applet viewer show the Web page indicated by the url argument. The browser or applet viewer determines which window or frame to display the Web page. This method may be ignored by applet contexts that are not browsers.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - an absolute \n\u003ccode\u003eURL\u003c/code\u003e giving the location of the document"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "showDocument",
      "comment": "Requests that the browser or applet viewer show the Web page indicated by the url argument. The target argument indicates in which HTML frame the document is to be displayed. The target argument is interpreted as follows: Target arguments and their descriptions Target Argument Description \"_self\" Show in the window and frame that contain the applet. \"_parent\" Show in the applet\u0027s parent frame. If the applet\u0027s frame has no parent frame, acts the same as \"_self\". \"_top\" Show in the top-level frame of the applet\u0027s window. If the applet\u0027s frame is the top-level frame, acts the same as \"_self\". \"_blank\" Show in a new, unnamed top-level window. name Show in the frame or window named name. If a target named name does not already exist, a new top-level window with the specified name is created, and the document is shown there. An applet viewer or browser is free to ignore showDocument.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - an absolute \n\u003ccode\u003eURL\u003c/code\u003e giving the location of the document",
          "\u003ccode\u003etarget\u003c/code\u003e - a \n\u003ccode\u003eString\u003c/code\u003e indicating where to display the page"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "showStatus",
      "comment": "Requests that the argument string be displayed in the \"status window\". Many browsers and applet viewers provide such a window, where the application can inform users of its current state.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003estatus\u003c/code\u003e - a string to display in the status window"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setStream",
      "comment": "Associates the specified stream with the specified key in this applet context. If the applet context previously contained a mapping for this key, the old value is replaced. For security reasons, mapping of streams and keys exists for each codebase. In other words, applet from one codebase cannot access the streams created by an applet from a different codebase",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which the specified value is to be associated",
          "\u003ccode\u003estream\u003c/code\u003e - stream to be associated with the specified key. If this parameter is \n\u003ccode\u003enull\u003c/code\u003e, the specified key is removed in this applet context."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the stream size exceeds a certain size limit. Size limit is decided by the implementor of this interface."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.InputStream",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getStream",
      "comment": "Returns the stream to which specified key is associated within this applet context. Returns null if the applet context contains no stream for this key. For security reasons, mapping of streams and keys exists for each codebase. In other words, applet from one codebase cannot access the streams created by an applet from a different codebase.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key whose associated stream is to be returned"
        ],
        "return": [
          "the stream to which this applet context maps the key"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Iterator",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getStreamKeys",
      "comment": "Finds all the keys of the streams in this applet context. For security reasons, mapping of streams and keys exists for each codebase. In other words, applet from one codebase cannot access the streams created by an applet from a different codebase.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an \n\u003ccode\u003eIterator\u003c/code\u003e of all the names of the streams in this applet context"
        ],
        "since": [
          "1.4"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.applet.AppletContext",
  "comment": "This interface corresponds to an applet\u0027s environment: the document containing the applet and the other applets in the same document. \n\u003cp\u003e The methods in this interface can be used by an applet to obtain information about its environment.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.0"
    ]
  }
}