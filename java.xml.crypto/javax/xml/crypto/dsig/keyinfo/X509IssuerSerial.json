{
  "packageName": "javax.xml.crypto.dsig.keyinfo",
  "simpleName": "X509IssuerSerial",
  "moduleName": "java.xml.crypto",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.xml.crypto.XMLStructure",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getIssuerName",
      "comment": "Returns the X.500 distinguished name of this X509IssuerSerial in RFC 2253 String format.",
      "tagMap": {
        "return": [
          "the X.500 distinguished name in RFC 2253 String format (never \n\u003ccode\u003enull\u003c/code\u003e)"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.math.BigInteger",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSerialNumber",
      "comment": "Returns the serial number of this X509IssuerSerial.",
      "tagMap": {
        "return": [
          "the serial number (never \n\u003ccode\u003enull\u003c/code\u003e)"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.xml.crypto.dsig.keyinfo.X509IssuerSerial",
  "comment": "A representation of the XML \n\u003ccode\u003eX509IssuerSerial\u003c/code\u003e element as defined in the \n\u003ca href\u003d\"http://www.w3.org/TR/xmldsig-core/\"\u003e W3C Recommendation for XML-Signature Syntax and Processing\u003c/a\u003e. An \n\u003ccode\u003eX509IssuerSerial\u003c/code\u003e object contains an X.509 issuer distinguished name (DN) and serial number pair. The XML schema definition is defined as: \n\u003cpre\u003e   \u0026lt;element name\u003d\"X509IssuerSerial\" type\u003d\"ds:X509IssuerSerialType\"/\u0026gt;\n   \u0026lt;complexType name\u003d\"X509IssuerSerialType\"\u0026gt;\n     \u0026lt;sequence\u0026gt;\n       \u0026lt;element name\u003d\"X509IssuerName\" type\u003d\"string\"/\u0026gt;\n       \u0026lt;element name\u003d\"X509SerialNumber\" type\u003d\"integer\"/\u0026gt;\n     \u0026lt;/sequence\u0026gt;\n   \u0026lt;/complexType\u0026gt;\n \u003c/pre\u003e An \n\u003ccode\u003eX509IssuerSerial\u003c/code\u003e instance may be created by invoking the \n\u003ca href\u003d\"KeyInfoFactory.html#newX509IssuerSerial(java.lang.String,java.math.BigInteger)\"\u003e\u003ccode\u003enewX509IssuerSerial\u003c/code\u003e\u003c/a\u003e method of the \n\u003ca href\u003d\"KeyInfoFactory.html\" title\u003d\"class in javax.xml.crypto.dsig.keyinfo\"\u003e\u003ccode\u003eKeyInfoFactory\u003c/code\u003e\u003c/a\u003e class, and passing it a \n\u003ccode\u003eString\u003c/code\u003e and \n\u003ccode\u003eBigInteger\u003c/code\u003e representing the X.500 DN and serial number. Here is an example of creating an \n\u003ccode\u003eX509IssuerSerial\u003c/code\u003e from the issuer DN and serial number of an existing \n\u003ca href\u003d\"../../../../../../java.base/java/security/cert/X509Certificate.html\" title\u003d\"class in java.security.cert\"\u003e\u003ccode\u003eX509Certificate\u003c/code\u003e\u003c/a\u003e: \n\u003cpre\u003e KeyInfoFactory factory \u003d KeyInfoFactory.getInstance(\"DOM\");\n X509IssuerSerial issuer \u003d factory.newX509IssuerSerial\n     (cert.getIssuerX500Principal().getName(), cert.getSerialNumber());\n \u003c/pre\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/keyinfo/X509Data.html#getContent()\"\u003e\u003ccode\u003eX509Data.getContent()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/keyinfo/KeyInfoFactory.html#newX509IssuerSerial(java.lang.String,java.math.BigInteger)\"\u003e\u003ccode\u003eKeyInfoFactory.newX509IssuerSerial(String, BigInteger)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}