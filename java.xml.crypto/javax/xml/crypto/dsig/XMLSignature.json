{
  "packageName": "javax.xml.crypto.dsig",
  "simpleName": "XMLSignature",
  "moduleName": "java.xml.crypto",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.xml.crypto.XMLStructure",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "XMLNS",
      "comment": "The XML Namespace URI of the W3C Recommendation for XML-Signature Syntax and Processing.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.crypto.dsig.XMLSignature.XMLNS\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.crypto.dsig.XMLSignatureException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.crypto.dsig.XMLValidateContext",
            "type": "Class"
          },
          "field": {
            "name": "validateContext"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "validate",
      "comment": "Validates the signature according to the core validation processing rules. This method validates the signature using the existing state, it does not unmarshal and reinitialize the contents of the XMLSignature using the location information specified in the context. This method only validates the signature the first time it is invoked. On subsequent invocations, it returns a cached result.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalidateContext\u003c/code\u003e - the validating context"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the type of \n\u003ccode\u003evalidateContext\u003c/code\u003e is not compatible with this \n\u003ccode\u003eXMLSignature\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003evalidateContext\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/XMLSignatureException.html\" title\u003d\"class in javax.xml.crypto.dsig\"\u003eXMLSignatureException\u003c/a\u003e\u003c/code\u003e - if an unexpected error occurs during validation that prevented the validation operation from completing"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the signature passed core validation, otherwise \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.keyinfo.KeyInfo",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getKeyInfo",
      "comment": "Returns the key info of this XMLSignature.",
      "tagMap": {
        "return": [
          "the key info (may be \n\u003ccode\u003enull\u003c/code\u003e if not specified)"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.SignedInfo",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSignedInfo",
      "comment": "Returns the signed info of this XMLSignature.",
      "tagMap": {
        "return": [
          "the signed info (never \n\u003ccode\u003enull\u003c/code\u003e)"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.xml.crypto.dsig.XMLObject",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getObjects",
      "comment": "Returns an unmodifiable list of XMLObjects contained in this XMLSignature.",
      "tagMap": {
        "return": [
          "an unmodifiable list of \n\u003ccode\u003eXMLObject\u003c/code\u003es (may be empty but never \n\u003ccode\u003enull\u003c/code\u003e)"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getId",
      "comment": "Returns the optional Id of this XMLSignature.",
      "tagMap": {
        "return": [
          "the Id (may be \n\u003ccode\u003enull\u003c/code\u003e if not specified)"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.XMLSignature$SignatureValue",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSignatureValue",
      "comment": "Returns the signature value of this XMLSignature.",
      "tagMap": {
        "return": [
          "the signature value"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.crypto.MarshalException",
          "type": "Class"
        },
        {
          "name": "javax.xml.crypto.dsig.XMLSignatureException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.crypto.dsig.XMLSignContext",
            "type": "Class"
          },
          "field": {
            "name": "signContext"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "sign",
      "comment": "Signs this XMLSignature. If this method throws an exception, this XMLSignature and the signContext parameter will be left in the state that it was in prior to the invocation.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esignContext\u003c/code\u003e - the signing context"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the type of \n\u003ccode\u003esignContext\u003c/code\u003e is not compatible with this \n\u003ccode\u003eXMLSignature\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esignContext\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/MarshalException.html\" title\u003d\"class in javax.xml.crypto\"\u003eMarshalException\u003c/a\u003e\u003c/code\u003e - if an exception occurs while marshalling",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/XMLSignatureException.html\" title\u003d\"class in javax.xml.crypto.dsig\"\u003eXMLSignatureException\u003c/a\u003e\u003c/code\u003e - if an unexpected exception occurs while generating the signature"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.KeySelectorResult",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getKeySelectorResult",
      "comment": "Returns the result of the KeySelector, if specified, after this XMLSignature has been signed or validated.",
      "tagMap": {
        "return": [
          "the key selector result, or \n\u003ccode\u003enull\u003c/code\u003e if a key selector has not been specified or this \n\u003ccode\u003eXMLSignature\u003c/code\u003e has not been signed or validated"
        ]
      }
    }
  ],
  "innerClasses": [
    "javax.xml.crypto.dsig.XMLSignature$SignatureValue"
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.xml.crypto.dsig.XMLSignature",
  "comment": "A representation of the XML \n\u003ccode\u003eSignature\u003c/code\u003e element as defined in the \n\u003ca href\u003d\"http://www.w3.org/TR/xmldsig-core/\"\u003e W3C Recommendation for XML-Signature Syntax and Processing\u003c/a\u003e. This class contains methods for signing and validating XML signatures with behavior as defined by the W3C specification. The XML Schema Definition is defined as: \n\u003cpre\u003e\u003ccode\u003e\n \u0026lt;element name\u003d\"Signature\" type\u003d\"ds:SignatureType\"/\u0026gt;\n \u0026lt;complexType name\u003d\"SignatureType\"\u0026gt;\n    \u0026lt;sequence\u0026gt;\n      \u0026lt;element ref\u003d\"ds:SignedInfo\"/\u0026gt;\n      \u0026lt;element ref\u003d\"ds:SignatureValue\"/\u0026gt;\n      \u0026lt;element ref\u003d\"ds:KeyInfo\" minOccurs\u003d\"0\"/\u0026gt;\n      \u0026lt;element ref\u003d\"ds:Object\" minOccurs\u003d\"0\" maxOccurs\u003d\"unbounded\"/\u0026gt;\n    \u0026lt;/sequence\u0026gt;\n    \u0026lt;attribute name\u003d\"Id\" type\u003d\"ID\" use\u003d\"optional\"/\u0026gt;\n \u0026lt;/complexType\u0026gt;\n \u003c/code\u003e\u003c/pre\u003e \n\u003cp\u003e An \u003ccode\u003eXMLSignature\u003c/code\u003e instance may be created by invoking one of the \u003ca href\u003d\"XMLSignatureFactory.html#newXMLSignature(javax.xml.crypto.dsig.SignedInfo,javax.xml.crypto.dsig.keyinfo.KeyInfo)\"\u003e\u003ccode\u003enewXMLSignature\u003c/code\u003e\u003c/a\u003e methods of the \u003ca href\u003d\"XMLSignatureFactory.html\" title\u003d\"class in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e\u003c/a\u003e class. \u003c/p\u003e\n\u003cp\u003eIf the contents of the underlying document containing the \u003ccode\u003eXMLSignature\u003c/code\u003e are subsequently modified, the behavior is undefined. \u003c/p\u003e\n\u003cp\u003eNote that this class is named \u003ccode\u003eXMLSignature\u003c/code\u003e rather than \u003ccode\u003eSignature\u003c/code\u003e to avoid naming clashes with the existing \u003ca href\u003d\"../../../../../java.base/java/security/Signature.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003ejava.security.Signature\u003c/code\u003e\u003c/a\u003e class.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/XMLSignatureFactory.html#newXMLSignature(javax.xml.crypto.dsig.SignedInfo,javax.xml.crypto.dsig.keyinfo.KeyInfo)\"\u003e\u003ccode\u003eXMLSignatureFactory.newXMLSignature(SignedInfo, KeyInfo)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/XMLSignatureFactory.html#newXMLSignature(javax.xml.crypto.dsig.SignedInfo,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.util.List,java.lang.String,java.lang.String)\"\u003e\u003ccode\u003eXMLSignatureFactory.newXMLSignature(SignedInfo, KeyInfo, List, String, String)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}