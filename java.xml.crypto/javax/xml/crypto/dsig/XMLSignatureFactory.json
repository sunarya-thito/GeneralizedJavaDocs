{
  "packageName": "javax.xml.crypto.dsig",
  "simpleName": "XMLSignatureFactory",
  "moduleName": "java.xml.crypto",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.XMLSignatureFactory",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "mechanismType"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getInstance",
      "comment": "Returns an XMLSignatureFactory that supports the specified XML processing mechanism and representation type (ex: \"DOM\"). This method uses the standard JCA provider lookup mechanism to locate and instantiate an XMLSignatureFactory implementation of the desired mechanism type. It traverses the list of registered security Providers, starting with the most preferred Provider. A new XMLSignatureFactory object from the first Provider that supports the specified mechanism is returned. Note that the list of registered providers may be retrieved via the Security.getProviders() method.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Provider.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eProvider\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003emechanismType\u003c/code\u003e - the type of the XML processing mechanism and representation. See the \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e section in the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/specs/security/standard-names.html#xml-signature-xmlsignaturefactorykeyinfofactorytransformservice-mechanisms\"\u003e Java Security Standard Algorithm Names Specification\u003c/a\u003e for a list of standard mechanism types."
        ],
        "implNote": [
          "The JDK Reference Implementation additionally uses the \n\u003ccode\u003ejdk.security.provider.preferred\u003c/code\u003e \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Security.html#getProperty(java.lang.String)\"\u003e\u003ccode\u003eSecurity\u003c/code\u003e\u003c/a\u003e property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Security.html#getProviders()\"\u003e\u003ccode\u003eSecurity.getProviders()\u003c/code\u003e\u003c/a\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003emechanismType\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/NoSuchMechanismException.html\" title\u003d\"class in javax.xml.crypto\"\u003eNoSuchMechanismException\u003c/a\u003e\u003c/code\u003e - if no \n\u003ccode\u003eProvider\u003c/code\u003e supports an \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e implementation for the specified mechanism"
        ],
        "return": [
          "a new \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.XMLSignatureFactory",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "mechanismType"
          }
        },
        {
          "type": {
            "name": "java.security.Provider",
            "type": "Class"
          },
          "field": {
            "name": "provider"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getInstance",
      "comment": "Returns an XMLSignatureFactory that supports the requested XML processing mechanism and representation type (ex: \"DOM\"), as supplied by the specified provider. Note that the specified Provider object does not have to be registered in the provider list.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Provider.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eProvider\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003emechanismType\u003c/code\u003e - the type of the XML processing mechanism and representation. See the \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e section in the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/specs/security/standard-names.html#xml-signature-xmlsignaturefactorykeyinfofactorytransformservice-mechanisms\"\u003e Java Security Standard Algorithm Names Specification\u003c/a\u003e for a list of standard mechanism types.",
          "\u003ccode\u003eprovider\u003c/code\u003e - the \n\u003ccode\u003eProvider\u003c/code\u003e object"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eprovider\u003c/code\u003e or \n\u003ccode\u003emechanismType\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/NoSuchMechanismException.html\" title\u003d\"class in javax.xml.crypto\"\u003eNoSuchMechanismException\u003c/a\u003e\u003c/code\u003e - if an \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e implementation for the specified mechanism is not available from the specified \n\u003ccode\u003eProvider\u003c/code\u003e object"
        ],
        "return": [
          "a new \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.XMLSignatureFactory",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.NoSuchProviderException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "mechanismType"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "provider"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getInstance",
      "comment": "Returns an XMLSignatureFactory that supports the requested XML processing mechanism and representation type (ex: \"DOM\"), as supplied by the specified provider. The specified provider must be registered in the security provider list. Note that the list of registered providers may be retrieved via the Security.getProviders() method.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Provider.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eProvider\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003emechanismType\u003c/code\u003e - the type of the XML processing mechanism and representation. See the \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e section in the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/specs/security/standard-names.html#xml-signature-xmlsignaturefactorykeyinfofactorytransformservice-mechanisms\"\u003e Java Security Standard Algorithm Names Specification\u003c/a\u003e for a list of standard mechanism types.",
          "\u003ccode\u003eprovider\u003c/code\u003e - the string name of the provider"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchProviderException.html\" title\u003d\"class in java.security\"\u003eNoSuchProviderException\u003c/a\u003e\u003c/code\u003e - if the specified provider is not registered in the security provider list",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eprovider\u003c/code\u003e or \n\u003ccode\u003emechanismType\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/NoSuchMechanismException.html\" title\u003d\"class in javax.xml.crypto\"\u003eNoSuchMechanismException\u003c/a\u003e\u003c/code\u003e - if an \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e implementation for the specified mechanism is not available from the specified provider"
        ],
        "return": [
          "a new \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.XMLSignatureFactory",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getInstance",
      "comment": "Returns an XMLSignatureFactory that supports the default XML processing mechanism and representation type (\"DOM\"). This method uses the standard JCA provider lookup mechanism to locate and instantiate an XMLSignatureFactory implementation of the default mechanism type. It traverses the list of registered security Providers, starting with the most preferred Provider. A new XMLSignatureFactory object from the first Provider that supports the DOM mechanism is returned. Note that the list of registered providers may be retrieved via the Security.getProviders() method.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Provider.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eProvider\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/NoSuchMechanismException.html\" title\u003d\"class in javax.xml.crypto\"\u003eNoSuchMechanismException\u003c/a\u003e\u003c/code\u003e - if no \n\u003ccode\u003eProvider\u003c/code\u003e supports an \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e implementation for the DOM mechanism"
        ],
        "return": [
          "a new \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getMechanismType",
      "comment": "Returns the type of the XML processing mechanism and representation supported by this XMLSignatureFactory (ex: \"DOM\").",
      "tagMap": {
        "return": [
          "the XML processing mechanism type supported by this \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.Provider",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getProvider",
      "comment": "Returns the provider of this XMLSignatureFactory.",
      "tagMap": {
        "return": [
          "the provider of this \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.XMLSignature",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.xml.crypto.dsig.SignedInfo",
            "type": "Class"
          },
          "field": {
            "name": "si"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.dsig.keyinfo.KeyInfo",
            "type": "Class"
          },
          "field": {
            "name": "ki"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newXMLSignature",
      "comment": "Creates an XMLSignature and initializes it with the contents of the specified SignedInfo and KeyInfo objects.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esi\u003c/code\u003e - the signed info",
          "\u003ccode\u003eki\u003c/code\u003e - the key info (may be \n\u003ccode\u003enull\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esi\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eXMLSignature\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.XMLSignature",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.xml.crypto.dsig.SignedInfo",
            "type": "Class"
          },
          "field": {
            "name": "si"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.dsig.keyinfo.KeyInfo",
            "type": "Class"
          },
          "field": {
            "name": "ki"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.xml.crypto.dsig.XMLObject",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "objects"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "signatureValueId"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newXMLSignature",
      "comment": "Creates an XMLSignature and initializes it with the specified parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esi\u003c/code\u003e - the signed info",
          "\u003ccode\u003eki\u003c/code\u003e - the key info (may be \n\u003ccode\u003enull\u003c/code\u003e)",
          "\u003ccode\u003eobjects\u003c/code\u003e - a list of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/XMLObject.html\" title\u003d\"interface in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eXMLObject\u003c/code\u003e\u003c/a\u003es (may be empty or \n\u003ccode\u003enull\u003c/code\u003e)",
          "\u003ccode\u003eid\u003c/code\u003e - the Id (may be \n\u003ccode\u003enull\u003c/code\u003e)",
          "\u003ccode\u003esignatureValueId\u003c/code\u003e - the SignatureValue Id (may be \n\u003ccode\u003enull\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esi\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if any of the \n\u003ccode\u003eobjects\u003c/code\u003e are not of type \n\u003ccode\u003eXMLObject\u003c/code\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eXMLSignature\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.Reference",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "uri"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.dsig.DigestMethod",
            "type": "Class"
          },
          "field": {
            "name": "dm"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newReference",
      "comment": "Creates a Reference with the specified URI and digest method.",
      "tagMap": {
        "param": [
          "\u003ccode\u003euri\u003c/code\u003e - the reference URI (may be \n\u003ccode\u003enull\u003c/code\u003e)",
          "\u003ccode\u003edm\u003c/code\u003e - the digest method"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003euri\u003c/code\u003e is not RFC 2396 compliant",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edm\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eReference\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.Reference",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "uri"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.dsig.DigestMethod",
            "type": "Class"
          },
          "field": {
            "name": "dm"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.xml.crypto.dsig.Transform",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "transforms"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "type"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newReference",
      "comment": "Creates a Reference with the specified parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003euri\u003c/code\u003e - the reference URI (may be \n\u003ccode\u003enull\u003c/code\u003e)",
          "\u003ccode\u003edm\u003c/code\u003e - the digest method",
          "\u003ccode\u003etransforms\u003c/code\u003e - a list of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/Transform.html\" title\u003d\"interface in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eTransform\u003c/code\u003e\u003c/a\u003es. The list is defensively copied to protect against subsequent modification. May be \n\u003ccode\u003enull\u003c/code\u003e or empty.",
          "\u003ccode\u003etype\u003c/code\u003e - the reference type, as a URI (may be \n\u003ccode\u003enull\u003c/code\u003e)",
          "\u003ccode\u003eid\u003c/code\u003e - the reference ID (may be \n\u003ccode\u003enull\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if any of the \n\u003ccode\u003etransforms\u003c/code\u003e are not of type \n\u003ccode\u003eTransform\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003euri\u003c/code\u003e is not RFC 2396 compliant",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edm\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eReference\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.Reference",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "uri"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.dsig.DigestMethod",
            "type": "Class"
          },
          "field": {
            "name": "dm"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.xml.crypto.dsig.Transform",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "transforms"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "type"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "digestValue"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newReference",
      "comment": "Creates a Reference with the specified parameters and pre-calculated digest value. This method is useful when the digest value of a Reference has been previously computed. See for example, the OASIS-DSS (Digital Signature Services) specification.",
      "tagMap": {
        "param": [
          "\u003ccode\u003euri\u003c/code\u003e - the reference URI (may be \n\u003ccode\u003enull\u003c/code\u003e)",
          "\u003ccode\u003edm\u003c/code\u003e - the digest method",
          "\u003ccode\u003etransforms\u003c/code\u003e - a list of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/Transform.html\" title\u003d\"interface in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eTransform\u003c/code\u003e\u003c/a\u003es. The list is defensively copied to protect against subsequent modification. May be \n\u003ccode\u003enull\u003c/code\u003e or empty.",
          "\u003ccode\u003etype\u003c/code\u003e - the reference type, as a URI (may be \n\u003ccode\u003enull\u003c/code\u003e)",
          "\u003ccode\u003eid\u003c/code\u003e - the reference ID (may be \n\u003ccode\u003enull\u003c/code\u003e)",
          "\u003ccode\u003edigestValue\u003c/code\u003e - the digest value. The array is cloned to protect against subsequent modification."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if any of the \n\u003ccode\u003etransforms\u003c/code\u003e are not of type \n\u003ccode\u003eTransform\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003euri\u003c/code\u003e is not RFC 2396 compliant",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edm\u003c/code\u003e or \n\u003ccode\u003edigestValue\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eReference\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.Reference",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "uri"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.dsig.DigestMethod",
            "type": "Class"
          },
          "field": {
            "name": "dm"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.xml.crypto.dsig.Transform",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "appliedTransforms"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.Data",
            "type": "Class"
          },
          "field": {
            "name": "result"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.xml.crypto.dsig.Transform",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "transforms"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "type"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newReference",
      "comment": "Creates a Reference with the specified parameters. This method is useful when a list of transforms have already been applied to the Reference. See for example, the OASIS-DSS (Digital Signature Services) specification. When an XMLSignature containing this reference is generated, the specified transforms (if non-null) are applied to the specified result. The Transforms element of the resulting Reference element is set to the concatenation of the appliedTransforms and transforms.",
      "tagMap": {
        "param": [
          "\u003ccode\u003euri\u003c/code\u003e - the reference URI (may be \n\u003ccode\u003enull\u003c/code\u003e)",
          "\u003ccode\u003edm\u003c/code\u003e - the digest method",
          "\u003ccode\u003eappliedTransforms\u003c/code\u003e - a list of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/Transform.html\" title\u003d\"interface in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eTransform\u003c/code\u003e\u003c/a\u003es that have already been applied. The list is defensively copied to protect against subsequent modification. The list must contain at least one entry.",
          "\u003ccode\u003eresult\u003c/code\u003e - the result of processing the sequence of \n\u003ccode\u003eappliedTransforms\u003c/code\u003e",
          "\u003ccode\u003etransforms\u003c/code\u003e - a list of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/Transform.html\" title\u003d\"interface in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eTransform\u003c/code\u003e\u003c/a\u003es that are to be applied when generating the signature. The list is defensively copied to protect against subsequent modification. May be \n\u003ccode\u003enull\u003c/code\u003e or empty.",
          "\u003ccode\u003etype\u003c/code\u003e - the reference type, as a URI (may be \n\u003ccode\u003enull\u003c/code\u003e)",
          "\u003ccode\u003eid\u003c/code\u003e - the reference ID (may be \n\u003ccode\u003enull\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if any of the transforms (in either list) are not of type \n\u003ccode\u003eTransform\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003euri\u003c/code\u003e is not RFC 2396 compliant or \n\u003ccode\u003eappliedTransforms\u003c/code\u003e is empty",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edm\u003c/code\u003e, \n\u003ccode\u003eappliedTransforms\u003c/code\u003e or \n\u003ccode\u003eresult\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eReference\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.SignedInfo",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.xml.crypto.dsig.CanonicalizationMethod",
            "type": "Class"
          },
          "field": {
            "name": "cm"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.dsig.SignatureMethod",
            "type": "Class"
          },
          "field": {
            "name": "sm"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.xml.crypto.dsig.Reference",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "references"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newSignedInfo",
      "comment": "Creates a SignedInfo with the specified canonicalization and signature methods, and list of one or more references.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecm\u003c/code\u003e - the canonicalization method",
          "\u003ccode\u003esm\u003c/code\u003e - the signature method",
          "\u003ccode\u003ereferences\u003c/code\u003e - a list of one or more \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/Reference.html\" title\u003d\"interface in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eReference\u003c/code\u003e\u003c/a\u003es. The list is defensively copied to protect against subsequent modification."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if any of the references are not of type \n\u003ccode\u003eReference\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ereferences\u003c/code\u003e is empty",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any of the parameters are \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eSignedInfo\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.SignedInfo",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "javax.xml.crypto.dsig.CanonicalizationMethod",
            "type": "Class"
          },
          "field": {
            "name": "cm"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.dsig.SignatureMethod",
            "type": "Class"
          },
          "field": {
            "name": "sm"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.xml.crypto.dsig.Reference",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "references"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newSignedInfo",
      "comment": "Creates a SignedInfo with the specified parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecm\u003c/code\u003e - the canonicalization method",
          "\u003ccode\u003esm\u003c/code\u003e - the signature method",
          "\u003ccode\u003ereferences\u003c/code\u003e - a list of one or more \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/Reference.html\" title\u003d\"interface in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eReference\u003c/code\u003e\u003c/a\u003es. The list is defensively copied to protect against subsequent modification.",
          "\u003ccode\u003eid\u003c/code\u003e - the id (may be \n\u003ccode\u003enull\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if any of the references are not of type \n\u003ccode\u003eReference\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ereferences\u003c/code\u003e is empty",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ecm\u003c/code\u003e, \n\u003ccode\u003esm\u003c/code\u003e, or \n\u003ccode\u003ereferences\u003c/code\u003e are \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eSignedInfo\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.XMLObject",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.xml.crypto.XMLStructure",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "content"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "mimeType"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "encoding"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newXMLObject",
      "comment": "Creates an XMLObject from the specified parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003econtent\u003c/code\u003e - a list of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/XMLStructure.html\" title\u003d\"interface in javax.xml.crypto\"\u003e\u003ccode\u003eXMLStructure\u003c/code\u003e\u003c/a\u003es. The list is defensively copied to protect against subsequent modification. May be \n\u003ccode\u003enull\u003c/code\u003e or empty.",
          "\u003ccode\u003eid\u003c/code\u003e - the Id (may be \n\u003ccode\u003enull\u003c/code\u003e)",
          "\u003ccode\u003emimeType\u003c/code\u003e - the mime type (may be \n\u003ccode\u003enull\u003c/code\u003e)",
          "\u003ccode\u003eencoding\u003c/code\u003e - the encoding (may be \n\u003ccode\u003enull\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003econtent\u003c/code\u003e contains any entries that are not of type \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/XMLStructure.html\" title\u003d\"interface in javax.xml.crypto\"\u003e\u003ccode\u003eXMLStructure\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eXMLObject\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.Manifest",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.xml.crypto.dsig.Reference",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "references"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newManifest",
      "comment": "Creates a Manifest containing the specified list of References.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ereferences\u003c/code\u003e - a list of one or more \n\u003ccode\u003eReference\u003c/code\u003es. The list is defensively copied to protect against subsequent modification."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ereferences\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ereferences\u003c/code\u003e is empty",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ereferences\u003c/code\u003e contains any entries that are not of type \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/Reference.html\" title\u003d\"interface in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eReference\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eManifest\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.Manifest",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.xml.crypto.dsig.Reference",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "references"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newManifest",
      "comment": "Creates a Manifest containing the specified list of References and optional id.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ereferences\u003c/code\u003e - a list of one or more \n\u003ccode\u003eReference\u003c/code\u003es. The list is defensively copied to protect against subsequent modification.",
          "\u003ccode\u003eid\u003c/code\u003e - the id (may be \n\u003ccode\u003enull\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ereferences\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ereferences\u003c/code\u003e is empty",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ereferences\u003c/code\u003e contains any entries that are not of type \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/Reference.html\" title\u003d\"interface in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eReference\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eManifest\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.SignatureProperty",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.xml.crypto.XMLStructure",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "content"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "target"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newSignatureProperty",
      "comment": "Creates a SignatureProperty containing the specified list of XMLStructures, target URI and optional id.",
      "tagMap": {
        "param": [
          "\u003ccode\u003econtent\u003c/code\u003e - a list of one or more \n\u003ccode\u003eXMLStructure\u003c/code\u003es. The list is defensively copied to protect against subsequent modification.",
          "\u003ccode\u003etarget\u003c/code\u003e - the target URI of the Signature that this property applies to",
          "\u003ccode\u003eid\u003c/code\u003e - the id (may be \n\u003ccode\u003enull\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003econtent\u003c/code\u003e or \n\u003ccode\u003etarget\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003econtent\u003c/code\u003e is empty",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003econtent\u003c/code\u003e contains any entries that are not of type \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/XMLStructure.html\" title\u003d\"interface in javax.xml.crypto\"\u003e\u003ccode\u003eXMLStructure\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eSignatureProperty\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.SignatureProperties",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "javax.xml.crypto.dsig.SignatureProperty",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "properties"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "id"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newSignatureProperties",
      "comment": "Creates a SignatureProperties containing the specified list of SignaturePropertys and optional id.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eproperties\u003c/code\u003e - a list of one or more \n\u003ccode\u003eSignatureProperty\u003c/code\u003es. The list is defensively copied to protect against subsequent modification.",
          "\u003ccode\u003eid\u003c/code\u003e - the id (may be \n\u003ccode\u003enull\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eproperties\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eproperties\u003c/code\u003e is empty",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eproperties\u003c/code\u003e contains any entries that are not of type \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/SignatureProperty.html\" title\u003d\"interface in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eSignatureProperty\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eSignatureProperties\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.DigestMethod",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.NoSuchAlgorithmException",
          "type": "Class"
        },
        {
          "name": "java.security.InvalidAlgorithmParameterException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "algorithm"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.dsig.spec.DigestMethodParameterSpec",
            "type": "Class"
          },
          "field": {
            "name": "params"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newDigestMethod",
      "comment": "Creates a DigestMethod for the specified algorithm URI and parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ealgorithm\u003c/code\u003e - the URI identifying the digest algorithm",
          "\u003ccode\u003eparams\u003c/code\u003e - algorithm-specific digest parameters (may be \n\u003ccode\u003enull\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/InvalidAlgorithmParameterException.html\" title\u003d\"class in java.security\"\u003eInvalidAlgorithmParameterException\u003c/a\u003e\u003c/code\u003e - if the specified parameters are inappropriate for the requested algorithm",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchAlgorithmException.html\" title\u003d\"class in java.security\"\u003eNoSuchAlgorithmException\u003c/a\u003e\u003c/code\u003e - if an implementation of the specified algorithm cannot be found",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ealgorithm\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eDigestMethod\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.SignatureMethod",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.NoSuchAlgorithmException",
          "type": "Class"
        },
        {
          "name": "java.security.InvalidAlgorithmParameterException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "algorithm"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.dsig.spec.SignatureMethodParameterSpec",
            "type": "Class"
          },
          "field": {
            "name": "params"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newSignatureMethod",
      "comment": "Creates a SignatureMethod for the specified algorithm URI and parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ealgorithm\u003c/code\u003e - the URI identifying the signature algorithm",
          "\u003ccode\u003eparams\u003c/code\u003e - algorithm-specific signature parameters (may be \n\u003ccode\u003enull\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/InvalidAlgorithmParameterException.html\" title\u003d\"class in java.security\"\u003eInvalidAlgorithmParameterException\u003c/a\u003e\u003c/code\u003e - if the specified parameters are inappropriate for the requested algorithm",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchAlgorithmException.html\" title\u003d\"class in java.security\"\u003eNoSuchAlgorithmException\u003c/a\u003e\u003c/code\u003e - if an implementation of the specified algorithm cannot be found",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ealgorithm\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eSignatureMethod\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.Transform",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.NoSuchAlgorithmException",
          "type": "Class"
        },
        {
          "name": "java.security.InvalidAlgorithmParameterException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "algorithm"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.dsig.spec.TransformParameterSpec",
            "type": "Class"
          },
          "field": {
            "name": "params"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newTransform",
      "comment": "Creates a Transform for the specified algorithm URI and parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ealgorithm\u003c/code\u003e - the URI identifying the transform algorithm",
          "\u003ccode\u003eparams\u003c/code\u003e - algorithm-specific transform parameters (may be \n\u003ccode\u003enull\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/InvalidAlgorithmParameterException.html\" title\u003d\"class in java.security\"\u003eInvalidAlgorithmParameterException\u003c/a\u003e\u003c/code\u003e - if the specified parameters are inappropriate for the requested algorithm",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchAlgorithmException.html\" title\u003d\"class in java.security\"\u003eNoSuchAlgorithmException\u003c/a\u003e\u003c/code\u003e - if an implementation of the specified algorithm cannot be found",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ealgorithm\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eTransform\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.Transform",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.NoSuchAlgorithmException",
          "type": "Class"
        },
        {
          "name": "java.security.InvalidAlgorithmParameterException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "algorithm"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.XMLStructure",
            "type": "Class"
          },
          "field": {
            "name": "params"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newTransform",
      "comment": "Creates a Transform for the specified algorithm URI and parameters. The parameters are specified as a mechanism-specific XMLStructure (ex: DOMStructure). This method is useful when the parameters are in XML form or there is no standard class for specifying the parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ealgorithm\u003c/code\u003e - the URI identifying the transform algorithm",
          "\u003ccode\u003eparams\u003c/code\u003e - a mechanism-specific XML structure from which to unmarshal the parameters from (may be \n\u003ccode\u003enull\u003c/code\u003e if not required or optional)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the type of \n\u003ccode\u003eparams\u003c/code\u003e is inappropriate for this \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/InvalidAlgorithmParameterException.html\" title\u003d\"class in java.security\"\u003eInvalidAlgorithmParameterException\u003c/a\u003e\u003c/code\u003e - if the specified parameters are inappropriate for the requested algorithm",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchAlgorithmException.html\" title\u003d\"class in java.security\"\u003eNoSuchAlgorithmException\u003c/a\u003e\u003c/code\u003e - if an implementation of the specified algorithm cannot be found",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ealgorithm\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eTransform\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.CanonicalizationMethod",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.NoSuchAlgorithmException",
          "type": "Class"
        },
        {
          "name": "java.security.InvalidAlgorithmParameterException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "algorithm"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.dsig.spec.C14NMethodParameterSpec",
            "type": "Class"
          },
          "field": {
            "name": "params"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newCanonicalizationMethod",
      "comment": "Creates a CanonicalizationMethod for the specified algorithm URI and parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ealgorithm\u003c/code\u003e - the URI identifying the canonicalization algorithm",
          "\u003ccode\u003eparams\u003c/code\u003e - algorithm-specific canonicalization parameters (may be \n\u003ccode\u003enull\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/InvalidAlgorithmParameterException.html\" title\u003d\"class in java.security\"\u003eInvalidAlgorithmParameterException\u003c/a\u003e\u003c/code\u003e - if the specified parameters are inappropriate for the requested algorithm",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchAlgorithmException.html\" title\u003d\"class in java.security\"\u003eNoSuchAlgorithmException\u003c/a\u003e\u003c/code\u003e - if an implementation of the specified algorithm cannot be found",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ealgorithm\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eCanonicalizationMethod\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.CanonicalizationMethod",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.NoSuchAlgorithmException",
          "type": "Class"
        },
        {
          "name": "java.security.InvalidAlgorithmParameterException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "algorithm"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.XMLStructure",
            "type": "Class"
          },
          "field": {
            "name": "params"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "newCanonicalizationMethod",
      "comment": "Creates a CanonicalizationMethod for the specified algorithm URI and parameters. The parameters are specified as a mechanism-specific XMLStructure (ex: DOMStructure). This method is useful when the parameters are in XML form or there is no standard class for specifying the parameters.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ealgorithm\u003c/code\u003e - the URI identifying the canonicalization algorithm",
          "\u003ccode\u003eparams\u003c/code\u003e - a mechanism-specific XML structure from which to unmarshal the parameters from (may be \n\u003ccode\u003enull\u003c/code\u003e if not required or optional)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the type of \n\u003ccode\u003eparams\u003c/code\u003e is inappropriate for this \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/InvalidAlgorithmParameterException.html\" title\u003d\"class in java.security\"\u003eInvalidAlgorithmParameterException\u003c/a\u003e\u003c/code\u003e - if the specified parameters are inappropriate for the requested algorithm",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchAlgorithmException.html\" title\u003d\"class in java.security\"\u003eNoSuchAlgorithmException\u003c/a\u003e\u003c/code\u003e - if an implementation of the specified algorithm cannot be found",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ealgorithm\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eCanonicalizationMethod\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.keyinfo.KeyInfoFactory",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getKeyInfoFactory",
      "comment": "Returns a KeyInfoFactory that creates KeyInfo objects. The returned KeyInfoFactory has the same mechanism type and provider as this XMLSignatureFactory.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/NoSuchMechanismException.html\" title\u003d\"class in javax.xml.crypto\"\u003eNoSuchMechanismException\u003c/a\u003e\u003c/code\u003e - if a \n\u003ccode\u003eKeyFactory\u003c/code\u003e implementation with the same mechanism type and provider is not available"
        ],
        "return": [
          "a \n\u003ccode\u003eKeyInfoFactory\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.XMLSignature",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.crypto.MarshalException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.crypto.dsig.XMLValidateContext",
            "type": "Class"
          },
          "field": {
            "name": "context"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "unmarshalXMLSignature",
      "comment": "Unmarshals a new XMLSignature instance from a mechanism-specific XMLValidateContext instance.",
      "tagMap": {
        "param": [
          "\u003ccode\u003econtext\u003c/code\u003e - a mechanism-specific context from which to unmarshal the signature from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003econtext\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the type of \n\u003ccode\u003econtext\u003c/code\u003e is inappropriate for this factory",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/MarshalException.html\" title\u003d\"class in javax.xml.crypto\"\u003eMarshalException\u003c/a\u003e\u003c/code\u003e - if an unrecoverable exception occurs during unmarshalling"
        ],
        "return": [
          "the \n\u003ccode\u003eXMLSignature\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.dsig.XMLSignature",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.crypto.MarshalException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.crypto.XMLStructure",
            "type": "Class"
          },
          "field": {
            "name": "xmlStructure"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "unmarshalXMLSignature",
      "comment": "Unmarshals a new XMLSignature instance from a mechanism-specific XMLStructure instance. This method is useful if you only want to unmarshal (and not validate) an XMLSignature.",
      "tagMap": {
        "param": [
          "\u003ccode\u003exmlStructure\u003c/code\u003e - a mechanism-specific XML structure from which to unmarshal the signature from"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003exmlStructure\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the type of \n\u003ccode\u003exmlStructure\u003c/code\u003e is inappropriate for this factory",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/MarshalException.html\" title\u003d\"class in javax.xml.crypto\"\u003eMarshalException\u003c/a\u003e\u003c/code\u003e - if an unrecoverable exception occurs during unmarshalling"
        ],
        "return": [
          "the \n\u003ccode\u003eXMLSignature\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "feature"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "isFeatureSupported",
      "comment": "Indicates whether a specified feature is supported.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efeature\u003c/code\u003e - the feature name (as an absolute URI)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efeature\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified feature is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.URIDereferencer",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getURIDereferencer",
      "comment": "Returns a reference to the URIDereferencer that is used by default to dereference URIs in Reference objects.",
      "tagMap": {
        "return": [
          "a reference to the default \n\u003ccode\u003eURIDereferencer\u003c/code\u003e (never \n\u003ccode\u003enull\u003c/code\u003e)"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Default constructor, for invocation by subclasses.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.xml.crypto.dsig.XMLSignatureFactory",
  "comment": "A factory for creating \n\u003ca href\u003d\"XMLSignature.html\" title\u003d\"interface in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eXMLSignature\u003c/code\u003e\u003c/a\u003e objects from scratch or for unmarshalling an \n\u003ccode\u003eXMLSignature\u003c/code\u003e object from a corresponding XML representation. \n\u003ch2\u003eXMLSignatureFactory Type\u003c/h2\u003e \n\u003cp\u003eEach instance of \u003ccode\u003eXMLSignatureFactory\u003c/code\u003e supports a specific XML mechanism type. To create an \u003ccode\u003eXMLSignatureFactory\u003c/code\u003e, call one of the static \u003ca href\u003d\"#getInstance(java.lang.String)\"\u003e\u003ccode\u003egetInstance\u003c/code\u003e\u003c/a\u003e methods, passing in the XML mechanism type desired, for example: \u003c/p\u003e\n\u003cblockquote\u003e\n \u003ccode\u003e XMLSignatureFactory factory \u003d XMLSignatureFactory.getInstance(\"DOM\"); \u003c/code\u003e\n\u003c/blockquote\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eThe objects that this factory produces will be based on DOM and abide by the DOM interoperability requirements as defined in the \u003ca href\u003d\"package-summary.html#dom_req\"\u003eDOM Mechanism Requirements\u003c/a\u003e. See the \u003ccode\u003eXMLSignatureFactory\u003c/code\u003e section in the \u003ca href\u003d\"../../../../../../specs/security/standard-names.html#xml-signature-xmlsignaturefactorykeyinfofactorytransformservice-mechanisms\"\u003e Java Security Standard Algorithm Names Specification\u003c/a\u003e for a list of standard mechanism types. \u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e implementations are registered and loaded using the \u003ca href\u003d\"../../../../../java.base/java/security/Provider.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eProvider\u003c/code\u003e\u003c/a\u003e mechanism. For example, a service provider that supports the DOM mechanism would be specified in the \u003ccode\u003eProvider\u003c/code\u003e subclass as: \u003c/p\u003e\n\u003cpre\u003e     put(\"XMLSignatureFactory.DOM\", \"org.example.DOMXMLSignatureFactory\");\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eAn implementation MUST minimally support the default mechanism type: DOM. \u003c/p\u003e\n\u003cp\u003eNote that a caller must use the same \u003ccode\u003eXMLSignatureFactory\u003c/code\u003e instance to create the \u003ccode\u003eXMLStructure\u003c/code\u003es of a particular \u003ccode\u003eXMLSignature\u003c/code\u003e that is to be generated. The behavior is undefined if \u003ccode\u003eXMLStructure\u003c/code\u003es from different providers or different mechanism types are used together. \u003c/p\u003e\n\u003cp\u003eAlso, the \u003ccode\u003eXMLStructure\u003c/code\u003es that are created by this factory may contain state specific to the \u003ccode\u003eXMLSignature\u003c/code\u003e and are not intended to be reusable. \u003c/p\u003e\n\u003ch2\u003eCreating XMLSignatures from scratch\u003c/h2\u003e \n\u003cp\u003eOnce the \u003ccode\u003eXMLSignatureFactory\u003c/code\u003e has been created, objects can be instantiated by calling the appropriate method. For example, a \u003ca href\u003d\"Reference.html\" title\u003d\"interface in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eReference\u003c/code\u003e\u003c/a\u003e instance may be created by invoking one of the \u003ca href\u003d\"#newReference(java.lang.String,javax.xml.crypto.dsig.DigestMethod)\"\u003e\u003ccode\u003enewReference\u003c/code\u003e\u003c/a\u003e methods. \u003c/p\u003e\n\u003ch2\u003eUnmarshalling XMLSignatures from XML\u003c/h2\u003e \n\u003cp\u003eAlternatively, an \u003ccode\u003eXMLSignature\u003c/code\u003e may be created from an existing XML representation by invoking the \u003ca href\u003d\"#unmarshalXMLSignature(javax.xml.crypto.dsig.XMLValidateContext)\"\u003e\u003ccode\u003eunmarshalXMLSignature\u003c/code\u003e\u003c/a\u003e method and passing it a mechanism-specific \u003ca href\u003d\"XMLValidateContext.html\" title\u003d\"interface in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eXMLValidateContext\u003c/code\u003e\u003c/a\u003e instance containing the XML content: \u003c/p\u003e\n\u003cpre\u003e DOMValidateContext context \u003d new DOMValidateContext(key, signatureElement);\n XMLSignature signature \u003d factory.unmarshalXMLSignature(context);\n \u003c/pre\u003e Each \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e must support the required \n\u003ccode\u003eXMLValidateContext\u003c/code\u003e types for that factory type, but may support others. A DOM \n\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e must support \n\u003ca href\u003d\"dom/DOMValidateContext.html\" title\u003d\"class in javax.xml.crypto.dsig.dom\"\u003e\u003ccode\u003eDOMValidateContext\u003c/code\u003e\u003c/a\u003e objects. \n\u003cp\u003e\u003c/p\u003e\n\u003ch2\u003eSigning and marshalling XMLSignatures to XML\u003c/h2\u003e Each \n\u003ccode\u003eXMLSignature\u003c/code\u003e created by the factory can also be marshalled to an XML representation and signed, by invoking the \n\u003ca href\u003d\"XMLSignature.html#sign(javax.xml.crypto.dsig.XMLSignContext)\"\u003e\u003ccode\u003esign\u003c/code\u003e\u003c/a\u003e method of the \n\u003ca href\u003d\"XMLSignature.html\" title\u003d\"interface in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eXMLSignature\u003c/code\u003e\u003c/a\u003e object and passing it a mechanism-specific \n\u003ca href\u003d\"XMLSignContext.html\" title\u003d\"interface in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eXMLSignContext\u003c/code\u003e\u003c/a\u003e object containing the signing key and marshalling parameters (see \n\u003ca href\u003d\"dom/DOMSignContext.html\" title\u003d\"class in javax.xml.crypto.dsig.dom\"\u003e\u003ccode\u003eDOMSignContext\u003c/code\u003e\u003c/a\u003e). For example: \n\u003cpre\u003e    DOMSignContext context \u003d new DOMSignContext(privateKey, document);\n    signature.sign(context);\n \u003c/pre\u003e \n\u003cb\u003eConcurrent Access\u003c/b\u003e \n\u003cp\u003eThe static methods of this class are guaranteed to be thread-safe. Multiple threads may concurrently invoke the static methods defined in this class with no ill effects. \u003c/p\u003e\n\u003cp\u003eHowever, this is not true for the non-static methods defined by this class. Unless otherwise documented by a specific provider, threads that need to access a single \u003ccode\u003eXMLSignatureFactory\u003c/code\u003e instance concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating a different \u003ccode\u003eXMLSignatureFactory\u003c/code\u003e instance need not synchronize.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}