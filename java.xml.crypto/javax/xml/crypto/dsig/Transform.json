{
  "packageName": "javax.xml.crypto.dsig",
  "simpleName": "Transform",
  "moduleName": "java.xml.crypto",
  "type": "INTERFACE",
  "interfaces": [
    {
      "name": "javax.xml.crypto.XMLStructure",
      "type": "Class"
    },
    {
      "name": "javax.xml.crypto.AlgorithmMethod",
      "type": "Class"
    }
  ],
  "members": [
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "BASE64",
      "comment": "The Base64 transform algorithm URI.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.crypto.dsig.Transform.BASE64\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "ENVELOPED",
      "comment": "The Enveloped Signature transform algorithm URI.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.crypto.dsig.Transform.ENVELOPED\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "XPATH",
      "comment": "The XPath transform algorithm URI.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.crypto.dsig.Transform.XPATH\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "XPATH2",
      "comment": "The XPath Filter 2 transform algorithm URI.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.crypto.dsig.Transform.XPATH2\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "XSLT",
      "comment": "The XSLT transform algorithm URI.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#javax.xml.crypto.dsig.Transform.XSLT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.spec.AlgorithmParameterSpec",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getParameterSpec",
      "comment": "Returns the algorithm-specific input parameters associated with this Transform. The returned parameters can be typecast to a TransformParameterSpec object.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/AlgorithmMethod.html#getParameterSpec()\"\u003egetParameterSpec\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/AlgorithmMethod.html\" title\u003d\"interface in javax.xml.crypto\"\u003eAlgorithmMethod\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the algorithm-specific input parameters (may be \n\u003ccode\u003enull\u003c/code\u003e if not specified)"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.Data",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.crypto.dsig.TransformException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.crypto.Data",
            "type": "Class"
          },
          "field": {
            "name": "data"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.XMLCryptoContext",
            "type": "Class"
          },
          "field": {
            "name": "context"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "transform",
      "comment": "Transforms the specified data using the underlying transform algorithm.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - the data to be transformed",
          "\u003ccode\u003econtext\u003c/code\u003e - the \n\u003ccode\u003eXMLCryptoContext\u003c/code\u003e containing additional context (may be \n\u003ccode\u003enull\u003c/code\u003e if not applicable)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edata\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/TransformException.html\" title\u003d\"class in javax.xml.crypto.dsig\"\u003eTransformException\u003c/a\u003e\u003c/code\u003e - if an error occurs while executing the transform"
        ],
        "return": [
          "the transformed data"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.xml.crypto.Data",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "javax.xml.crypto.dsig.TransformException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.xml.crypto.Data",
            "type": "Class"
          },
          "field": {
            "name": "data"
          }
        },
        {
          "type": {
            "name": "javax.xml.crypto.XMLCryptoContext",
            "type": "Class"
          },
          "field": {
            "name": "context"
          }
        },
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "os"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "transform",
      "comment": "Transforms the specified data using the underlying transform algorithm. If the output of this transform is an OctetStreamData, then this method returns null and the bytes are written to the specified OutputStream. Otherwise, the OutputStream is ignored and the method behaves as if transform(Data, XMLCryptoContext) were invoked.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edata\u003c/code\u003e - the data to be transformed",
          "\u003ccode\u003econtext\u003c/code\u003e - the \n\u003ccode\u003eXMLCryptoContext\u003c/code\u003e containing additional context (may be \n\u003ccode\u003enull\u003c/code\u003e if not applicable)",
          "\u003ccode\u003eos\u003c/code\u003e - the \n\u003ccode\u003eOutputStream\u003c/code\u003e that should be used to write the transformed data to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003edata\u003c/code\u003e or \n\u003ccode\u003eos\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/TransformException.html\" title\u003d\"class in javax.xml.crypto.dsig\"\u003eTransformException\u003c/a\u003e\u003c/code\u003e - if an error occurs while executing the transform"
        ],
        "return": [
          "the transformed data (or \n\u003ccode\u003enull\u003c/code\u003e if the data was written to the \n\u003ccode\u003eOutputStream\u003c/code\u003e parameter)"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.xml.crypto.dsig.Transform",
  "comment": "A representation of the XML \n\u003ccode\u003eTransform\u003c/code\u003e element as defined in the \n\u003ca href\u003d\"http://www.w3.org/TR/xmldsig-core/\"\u003e W3C Recommendation for XML-Signature Syntax and Processing\u003c/a\u003e. The XML Schema Definition is defined as: \n\u003cpre\u003e \u0026lt;element name\u003d\"Transform\" type\u003d\"ds:TransformType\"/\u0026gt;\n   \u0026lt;complexType name\u003d\"TransformType\" mixed\u003d\"true\"\u0026gt;\n     \u0026lt;choice minOccurs\u003d\"0\" maxOccurs\u003d\"unbounded\"\u0026gt;\n       \u0026lt;any namespace\u003d\"##other\" processContents\u003d\"lax\"/\u0026gt;\n       \u0026lt;!-- (1,1) elements from (0,unbounded) namespaces --\u0026gt;\n       \u0026lt;element name\u003d\"XPath\" type\u003d\"string\"/\u0026gt;\n     \u0026lt;/choice\u0026gt;\n     \u0026lt;attribute name\u003d\"Algorithm\" type\u003d\"anyURI\" use\u003d\"required\"/\u0026gt;\n   \u0026lt;/complexType\u0026gt;\n \u003c/pre\u003e A \n\u003ccode\u003eTransform\u003c/code\u003e instance may be created by invoking the \n\u003ca href\u003d\"XMLSignatureFactory.html#newTransform(java.lang.String,javax.xml.crypto.dsig.spec.TransformParameterSpec)\"\u003e\u003ccode\u003enewTransform\u003c/code\u003e\u003c/a\u003e method of the \n\u003ca href\u003d\"XMLSignatureFactory.html\" title\u003d\"class in javax.xml.crypto.dsig\"\u003e\u003ccode\u003eXMLSignatureFactory\u003c/code\u003e\u003c/a\u003e class.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.xml.crypto/javax/xml/crypto/dsig/XMLSignatureFactory.html#newTransform(java.lang.String,javax.xml.crypto.dsig.spec.TransformParameterSpec)\"\u003e\u003ccode\u003eXMLSignatureFactory.newTransform(String, TransformParameterSpec)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}