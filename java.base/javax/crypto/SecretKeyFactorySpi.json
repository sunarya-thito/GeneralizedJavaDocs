{
  "packageName": "javax.crypto",
  "simpleName": "SecretKeyFactorySpi",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.crypto.SecretKey",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.spec.InvalidKeySpecException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.security.spec.KeySpec",
            "type": "Class"
          },
          "field": {
            "name": "keySpec"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1028,
      "name": "engineGenerateSecret",
      "comment": "Generates a SecretKey object from the provided key specification (key material).",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekeySpec\u003c/code\u003e - the specification (key material) of the secret key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/spec/InvalidKeySpecException.html\" title\u003d\"class in java.security.spec\"\u003eInvalidKeySpecException\u003c/a\u003e\u003c/code\u003e - if the given key specification is inappropriate for this secret-key factory to produce a secret key."
        ],
        "return": [
          "the secret key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.spec.KeySpec",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.spec.InvalidKeySpecException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.crypto.SecretKey",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "keySpec"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1028,
      "name": "engineGetKeySpec",
      "comment": "Returns a specification (key material) of the given key object in the requested format.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key",
          "\u003ccode\u003ekeySpec\u003c/code\u003e - the requested format in which the key material shall be returned"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/spec/InvalidKeySpecException.html\" title\u003d\"class in java.security.spec\"\u003eInvalidKeySpecException\u003c/a\u003e\u003c/code\u003e - if the requested key specification is inappropriate for the given key (e.g., the algorithms associated with \n\u003ccode\u003ekey\u003c/code\u003e and \n\u003ccode\u003ekeySpec\u003c/code\u003e do not match, or \n\u003ccode\u003ekey\u003c/code\u003e references a key on a cryptographic hardware device whereas \n\u003ccode\u003ekeySpec\u003c/code\u003e is the specification of a software-based key), or the given key cannot be dealt with (e.g., the given key has an algorithm or format not supported by this secret-key factory)."
        ],
        "return": [
          "the underlying key specification (key material) in the requested format"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.crypto.SecretKey",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.InvalidKeyException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "javax.crypto.SecretKey",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1028,
      "name": "engineTranslateKey",
      "comment": "Translates a key object, whose provider may be unknown or potentially untrusted, into a corresponding key object of this secret-key factory.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key whose provider is unknown or untrusted"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/InvalidKeyException.html\" title\u003d\"class in java.security\"\u003eInvalidKeyException\u003c/a\u003e\u003c/code\u003e - if the given key cannot be processed by this secret-key factory."
        ],
        "return": [
          "the translated key"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor for subclasses to call.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.crypto.SecretKeyFactorySpi",
  "comment": "This class defines the \n\u003ci\u003eService Provider Interface\u003c/i\u003e (\n\u003cb\u003eSPI\u003c/b\u003e) for the \n\u003ccode\u003eSecretKeyFactory\u003c/code\u003e class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a secret-key factory for a particular algorithm. \n\u003cp\u003e A provider should document all the key specifications supported by its secret key factory. For example, the DES secret-key factory supplied by the \"SunJCE\" provider supports \u003ccode\u003eDESKeySpec\u003c/code\u003e as a transparent representation of DES keys, and that provider\u0027s secret-key factory for Triple DES keys supports \u003ccode\u003eDESedeKeySpec\u003c/code\u003e as a transparent representation of Triple DES keys.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/crypto/SecretKey.html\" title\u003d\"interface in javax.crypto\"\u003e\u003ccode\u003eSecretKey\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/crypto/spec/DESKeySpec.html\" title\u003d\"class in javax.crypto.spec\"\u003e\u003ccode\u003eDESKeySpec\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/crypto/spec/DESedeKeySpec.html\" title\u003d\"class in javax.crypto.spec\"\u003e\u003ccode\u003eDESedeKeySpec\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}