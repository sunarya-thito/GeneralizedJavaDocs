{
  "packageName": "javax.crypto",
  "simpleName": "KeyGeneratorSpi",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.SecureRandom",
            "type": "Class"
          },
          "name": "random",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1028,
      "name": "engineInit",
      "comment": "Initializes the key generator.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erandom\u003c/code\u003e - the source of randomness for this generator"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.InvalidAlgorithmParameterException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.spec.AlgorithmParameterSpec",
            "type": "Class"
          },
          "name": "params",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.SecureRandom",
            "type": "Class"
          },
          "name": "random",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1028,
      "name": "engineInit",
      "comment": "Initializes the key generator with the specified parameter set and a user-provided source of randomness.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparams\u003c/code\u003e - the key generation parameters",
          "\u003ccode\u003erandom\u003c/code\u003e - the source of randomness for this key generator"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/InvalidAlgorithmParameterException.html\" title\u003d\"class in java.security\"\u003eInvalidAlgorithmParameterException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eparams\u003c/code\u003e is inappropriate for this key generator"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "keysize",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.SecureRandom",
            "type": "Class"
          },
          "name": "random",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1028,
      "name": "engineInit",
      "comment": "Initializes this key generator for a certain keysize, using the given source of randomness.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ekeysize\u003c/code\u003e - the keysize. This is an algorithm-specific metric, specified in number of bits.",
          "\u003ccode\u003erandom\u003c/code\u003e - the source of randomness for this key generator"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/InvalidParameterException.html\" title\u003d\"class in java.security\"\u003eInvalidParameterException\u003c/a\u003e\u003c/code\u003e - if the keysize is wrong or not supported."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.crypto.SecretKey",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1028,
      "name": "engineGenerateKey",
      "comment": "Generates a secret key.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the new key"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor for subclasses to call.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.crypto.KeyGeneratorSpi",
  "comment": "This class defines the \n\u003ci\u003eService Provider Interface\u003c/i\u003e (\n\u003cb\u003eSPI\u003c/b\u003e) for the \n\u003ccode\u003eKeyGenerator\u003c/code\u003e class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a key generator for a particular algorithm. \n\u003cp\u003eIn case the client does not explicitly initialize the KeyGenerator (via a call to an \u003ccode\u003einit\u003c/code\u003e method), each provider must supply (and document) a default initialization. See the Keysize Restriction sections of the \u003ca href\u003d\"https://docs.oracle.com/pls/topic/lookup?ctx\u003djavase16\u0026amp;id\u003dsecurity_guide_jdk_providers\"\u003eJDK Providers\u003c/a\u003e document for information on the KeyGenerator defaults used by JDK providers. However, note that defaults may vary across different providers. Additionally, the default value for a provider may change in a future version. Therefore, it is recommended to explicitly initialize the KeyGenerator instead of relying on provider-specific defaults.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/crypto/SecretKey.html\" title\u003d\"interface in javax.crypto\"\u003e\u003ccode\u003eSecretKey\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}