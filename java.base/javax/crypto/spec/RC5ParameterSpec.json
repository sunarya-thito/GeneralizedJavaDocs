{
  "packageName": "javax.crypto.spec",
  "simpleName": "RC5ParameterSpec",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getVersion",
      "comment": "Returns the version.",
      "tagMap": {
        "return": [
          "the version."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRounds",
      "comment": "Returns the number of rounds.",
      "tagMap": {
        "return": [
          "the number of rounds."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getWordSize",
      "comment": "Returns the word size in bits.",
      "tagMap": {
        "return": [
          "the word size in bits."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIV",
      "comment": "Returns the IV or null if this parameter set does not contain an IV.",
      "tagMap": {
        "return": [
          "the IV or null if this parameter set does not contain an IV. Returns a new array each time this method is called."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Tests for equality between the specified object and this object. Two RC5ParameterSpec objects are considered equal if their version numbers, number of rounds, word sizes, and IVs are equal. (Two IV references are considered equal if both are null.)",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to test for equality with this object."
        ],
        "return": [
          "true if the objects are considered equal, false if \n\u003ccode\u003eobj\u003c/code\u003e is null or otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Calculates a hash code value for the object. Objects that are equal will also have the same hashcode.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code value for this object."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "version"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "rounds"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "wordSize"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a parameter set for RC5 from the given version, number of rounds and word size (in bits).",
      "tagMap": {
        "param": [
          "\u003ccode\u003eversion\u003c/code\u003e - the version.",
          "\u003ccode\u003erounds\u003c/code\u003e - the number of rounds.",
          "\u003ccode\u003ewordSize\u003c/code\u003e - the word size in bits."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "version"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "rounds"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "wordSize"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "iv"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a parameter set for RC5 from the given version, number of rounds, word size (in bits), and IV. Note that the size of the IV (block size) must be twice the word size. The bytes that constitute the IV are those between iv[0] and iv[2*(wordSize/8)-1] inclusive.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eversion\u003c/code\u003e - the version.",
          "\u003ccode\u003erounds\u003c/code\u003e - the number of rounds.",
          "\u003ccode\u003ewordSize\u003c/code\u003e - the word size in bits.",
          "\u003ccode\u003eiv\u003c/code\u003e - the buffer with the IV. The first \n\u003ccode\u003e2*(wordSize/8)\u003c/code\u003e bytes of the buffer are copied to protect against subsequent modification."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eiv\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or \n\u003ccode\u003e(iv.length \u0026lt; 2 * (wordSize / 8))\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "version"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "rounds"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "wordSize"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "iv"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offset"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a parameter set for RC5 from the given version, number of rounds, word size (in bits), and IV. The IV is taken from iv, starting at offset inclusive. Note that the size of the IV (block size), starting at offset inclusive, must be twice the word size. The bytes that constitute the IV are those between iv[offset] and iv[offset+2*(wordSize/8)-1] inclusive.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eversion\u003c/code\u003e - the version.",
          "\u003ccode\u003erounds\u003c/code\u003e - the number of rounds.",
          "\u003ccode\u003ewordSize\u003c/code\u003e - the word size in bits.",
          "\u003ccode\u003eiv\u003c/code\u003e - the buffer with the IV. The first \n\u003ccode\u003e2*(wordSize/8)\u003c/code\u003e bytes of the buffer beginning at \n\u003ccode\u003eoffset\u003c/code\u003e inclusive are copied to protect against subsequent modification.",
          "\u003ccode\u003eoffset\u003c/code\u003e - the offset in \n\u003ccode\u003eiv\u003c/code\u003e where the IV starts."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eiv\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or \n\u003ccode\u003e(iv.length - offset \u0026lt; 2 * (wordSize / 8))\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.crypto.spec.RC5ParameterSpec",
  "comment": "This class specifies the parameters used with the \n\u003ca href\u003d\"http://tools.ietf.org/html/rfc2040\"\u003e\u003ci\u003eRC5\u003c/i\u003e\u003c/a\u003e algorithm. \n\u003cp\u003e The parameters consist of a version number, a rounds count, a word size, and optionally an initialization vector (IV) (only in feedback mode). \u003c/p\u003e\n\u003cp\u003e This class can be used to initialize a \u003ccode\u003eCipher\u003c/code\u003e object that implements the \u003ci\u003eRC5\u003c/i\u003e algorithm as supplied by \u003ca href\u003d\"http://www.rsa.com\"\u003eRSA Security LLC\u003c/a\u003e, or any parties authorized by RSA Security.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}