{
  "packageName": "javax.crypto.spec",
  "simpleName": "PBEKeySpec",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "clearPassword",
      "comment": "Clears the internal copy of the password.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getPassword",
      "comment": "Returns a copy of the password. Note: this method returns a copy of the password. It is the caller\u0027s responsibility to zero out the password information after it is no longer needed.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if password has been cleared by calling \n\u003ccode\u003eclearPassword\u003c/code\u003e method."
        ],
        "return": [
          "the password."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getSalt",
      "comment": "Returns a copy of the salt or null if not specified. Note: this method should return a copy of the salt. It is the caller\u0027s responsibility to zero out the salt information after it is no longer needed.",
      "tagMap": {
        "return": [
          "the salt."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getIterationCount",
      "comment": "Returns the iteration count or 0 if not specified.",
      "tagMap": {
        "return": [
          "the iteration count."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getKeyLength",
      "comment": "Returns the to-be-derived key length or 0 if not specified. Note: this is used to indicate the preference on key length for variable-key-size ciphers. The actual key size depends on each provider\u0027s implementation.",
      "tagMap": {
        "return": [
          "the to-be-derived key length."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "password"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor that takes a password. An empty char[] is used if null is specified. Note: password is cloned before it is stored in the new PBEKeySpec object.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epassword\u003c/code\u003e - the password."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "password"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "salt"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "iterationCount"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "keyLength"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor that takes a password, salt, iteration count, and to-be-derived key length for generating PBEKey of variable-key-size PBE ciphers. An empty char[] is used if null is specified for password. Note: the password and salt are cloned before they are stored in the new PBEKeySpec object.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epassword\u003c/code\u003e - the password.",
          "\u003ccode\u003esalt\u003c/code\u003e - the salt.",
          "\u003ccode\u003eiterationCount\u003c/code\u003e - the iteration count.",
          "\u003ccode\u003ekeyLength\u003c/code\u003e - the to-be-derived key length."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esalt\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esalt\u003c/code\u003e is empty, i.e. 0-length, \n\u003ccode\u003eiterationCount\u003c/code\u003e or \n\u003ccode\u003ekeyLength\u003c/code\u003e is not positive."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "password"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "salt"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "iterationCount"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor that takes a password, salt, iteration count for generating PBEKey of fixed-key-size PBE ciphers. An empty char[] is used if null is specified for password. Note: the password and salt are cloned before they are stored in the new PBEKeySpec object.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epassword\u003c/code\u003e - the password.",
          "\u003ccode\u003esalt\u003c/code\u003e - the salt.",
          "\u003ccode\u003eiterationCount\u003c/code\u003e - the iteration count."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esalt\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esalt\u003c/code\u003e is empty, i.e. 0-length, or \n\u003ccode\u003eiterationCount\u003c/code\u003e is not positive."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.crypto.spec.PBEKeySpec",
  "comment": "A user-chosen password that can be used with password-based encryption (\n\u003ci\u003ePBE\u003c/i\u003e). \n\u003cp\u003eThe password can be viewed as some kind of raw key material, from which the encryption mechanism that uses it derives a cryptographic key. \u003c/p\u003e\n\u003cp\u003eDifferent PBE mechanisms may consume different bits of each password character. For example, the PBE mechanism defined in \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2898.txt\"\u003e PKCS #5\u003c/a\u003e looks at only the low order 8 bits of each character, whereas PKCS #12 looks at all 16 bits of each character. \u003c/p\u003e\n\u003cp\u003eYou convert the password characters to a PBE key by creating an instance of the appropriate secret-key factory. For example, a secret-key factory for PKCS #5 will construct a PBE key from only the low order 8 bits of each password character, whereas a secret-key factory for PKCS #12 will take all 16 bits of each character. \u003c/p\u003e\n\u003cp\u003eAlso note that this class stores passwords as char arrays instead of \u003ccode\u003eString\u003c/code\u003e objects (which would seem more logical), because the String class is immutable and there is no way to overwrite its internal value when the password stored in it is no longer needed. Hence, this class requests the password as a char array, so it can be overwritten when done.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/crypto/SecretKeyFactory.html\" title\u003d\"class in javax.crypto\"\u003e\u003ccode\u003eSecretKeyFactory\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/crypto/spec/PBEParameterSpec.html\" title\u003d\"class in javax.crypto.spec\"\u003e\u003ccode\u003ePBEParameterSpec\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}