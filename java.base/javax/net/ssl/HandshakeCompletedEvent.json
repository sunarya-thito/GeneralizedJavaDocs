{
  "packageName": "javax.net.ssl",
  "simpleName": "HandshakeCompletedEvent",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.EventObject",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.net.ssl.SSLSession",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSession",
      "comment": "Returns the session that triggered this event.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eSSLSession\u003c/code\u003e for this handshake"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCipherSuite",
      "comment": "Returns the cipher suite in use by the session which was produced by the handshake. (This is a convenience method for getting the ciphersuite from the SSLsession.)",
      "annotations": [],
      "tagMap": {
        "return": [
          "the name of the cipher suite negotiated during this session."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.cert.Certificate",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLocalCertificates",
      "comment": "Returns the certificate(s) that were sent to the peer during handshaking. Note: This method is useful only when using certificate-based cipher suites. When multiple certificates are available for use in a handshake, the implementation chooses what it considers the \"best\" certificate chain available, and transmits that to the other side. This method allows the caller to know which certificate chain was actually used.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/HandshakeCompletedEvent.html#getLocalPrincipal()\"\u003e\u003ccode\u003egetLocalPrincipal()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an ordered array of certificates, with the local certificate first followed by any certificate authorities. If no certificates were sent, then null is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.cert.Certificate",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPeerCertificates",
      "comment": "Returns the identity of the peer which was established as part of defining the session. Note: This method can be used only when using certificate-based cipher suites; using it with non-certificate-based cipher suites, such as Kerberos, will throw an SSLPeerUnverifiedException. Note: The returned value may not be a valid certificate chain and should not be relied on for trust decisions.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/HandshakeCompletedEvent.html#getPeerPrincipal()\"\u003e\u003ccode\u003egetPeerPrincipal()\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLPeerUnverifiedException.html\" title\u003d\"class in javax.net.ssl\"\u003eSSLPeerUnverifiedException\u003c/a\u003e\u003c/code\u003e - if the peer is not verified."
        ],
        "return": [
          "an ordered array of the peer certificates, with the peer\u0027s own certificate first followed by any certificate authorities."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.security.cert.X509Certificate",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPeerCertificateChain",
      "comment": "Returns the identity of the peer which was identified as part of defining the session. Note: This method can be used only when using certificate-based cipher suites; using it with non-certificate-based cipher suites, such as Kerberos, will throw an SSLPeerUnverifiedException. Note: The returned value may not be a valid certificate chain and should not be relied on for trust decisions. Note: this method exists for compatibility with previous releases. New applications should use getPeerCertificates() instead.",
      "annotations": [
        {
          "type": {
            "name": "Deprecated",
            "type": "Class"
          },
          "values": [
            {
              "name": "since",
              "value": "9"
            },
            {
              "name": "orRemoval",
              "value": true
            }
          ]
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/HandshakeCompletedEvent.html#getPeerPrincipal()\"\u003e\u003ccode\u003egetPeerPrincipal()\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLPeerUnverifiedException.html\" title\u003d\"class in javax.net.ssl\"\u003eSSLPeerUnverifiedException\u003c/a\u003e\u003c/code\u003e - if the peer is not verified.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the underlying provider does not implement the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLSession.html#getPeerCertificateChain()\"\u003e\u003ccode\u003eSSLSession.getPeerCertificateChain()\u003c/code\u003e\u003c/a\u003e operation."
        ],
        "return": [
          "an ordered array of peer X.509 certificates, with the peer\u0027s own certificate first followed by any certificate authorities. (The certificates are in the original JSSE \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/security/cert/X509Certificate.html\" title\u003d\"class in javax.security.cert\"\u003e\u003ccode\u003eX509Certificate\u003c/code\u003e\u003c/a\u003e format)."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.Principal",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPeerPrincipal",
      "comment": "Returns the identity of the peer which was established as part of defining the session.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/HandshakeCompletedEvent.html#getPeerCertificates()\"\u003e\u003ccode\u003egetPeerCertificates()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/HandshakeCompletedEvent.html#getLocalPrincipal()\"\u003e\u003ccode\u003egetLocalPrincipal()\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLPeerUnverifiedException.html\" title\u003d\"class in javax.net.ssl\"\u003eSSLPeerUnverifiedException\u003c/a\u003e\u003c/code\u003e - if the peer\u0027s identity has not been verified"
        ],
        "return": [
          "the peer\u0027s principal. Returns an X500Principal of the end-entity certificate for X509-based cipher suites, and KerberosPrincipal for Kerberos cipher suites."
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.Principal",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLocalPrincipal",
      "comment": "Returns the principal that was sent to the peer during handshaking.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/HandshakeCompletedEvent.html#getLocalCertificates()\"\u003e\u003ccode\u003egetLocalCertificates()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/HandshakeCompletedEvent.html#getPeerPrincipal()\"\u003e\u003ccode\u003egetPeerPrincipal()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the principal sent to the peer. Returns an X500Principal of the end-entity certificate for X509-based cipher suites, and KerberosPrincipal for Kerberos cipher suites. If no principal was sent, then null is returned."
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.net.ssl.SSLSocket",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSocket",
      "comment": "Returns the socket which is the source of this event. (This is a convenience function, to let applications write code without type casts.)",
      "annotations": [],
      "tagMap": {
        "return": [
          "the socket on which the connection was made."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.net.ssl.SSLSocket",
            "type": "Class"
          },
          "name": "sock",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "javax.net.ssl.SSLSession",
            "type": "Class"
          },
          "name": "s",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new HandshakeCompletedEvent.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003esock\u003c/code\u003e - the SSLSocket acting as the source of the event",
          "\u003ccode\u003es\u003c/code\u003e - the SSLSession this event is associated with"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.net.ssl.HandshakeCompletedEvent",
  "comment": "This event indicates that an SSL handshake completed on a given SSL connection. All of the core information about that handshake\u0027s result is captured through an \"SSLSession\" object. As a convenience, this event class provides direct access to some important session attributes. \n\u003cp\u003e The source of this event is the SSLSocket on which handshaking just completed.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLSocket.html\" title\u003d\"class in javax.net.ssl\"\u003e\u003ccode\u003eSSLSocket\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/HandshakeCompletedListener.html\" title\u003d\"interface in javax.net.ssl\"\u003e\u003ccode\u003eHandshakeCompletedListener\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLSession.html\" title\u003d\"interface in javax.net.ssl\"\u003e\u003ccode\u003eSSLSession\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.net.ssl.HandshakeCompletedEvent\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}