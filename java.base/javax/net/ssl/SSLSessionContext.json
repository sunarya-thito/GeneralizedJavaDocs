{
  "packageName": "javax.net.ssl",
  "simpleName": "SSLSessionContext",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.net.ssl.SSLSession",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "sessionId"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSession",
      "comment": "Returns the SSLSession bound to the specified session id.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esessionId\u003c/code\u003e - the Session identifier"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esessionId\u003c/code\u003e is null."
        ],
        "return": [
          "the \n\u003ccode\u003eSSLSession\u003c/code\u003e or null if the specified session id does not refer to a valid SSLSession."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Enumeration",
        "parameters": [
          {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getIds",
      "comment": "Returns an Enumeration of all known session id\u0027s grouped under this SSLSessionContext. Session contexts may not contain all sessions. For example, stateless sessions are not stored in the session context.",
      "tagMap": {
        "return": [
          "an enumeration of all the Session id\u0027s"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "seconds"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setSessionTimeout",
      "comment": "Sets the timeout limit for SSLSession objects grouped under this SSLSessionContext. If the timeout limit is set to \u0027t\u0027 seconds, a session exceeds the timeout limit \u0027t\u0027 seconds after its creation time. When the timeout limit is exceeded for a session, the SSLSession object is invalidated and future connections cannot resume or rejoin the session. A check for sessions exceeding the timeout is made immediately whenever the timeout limit is changed for this SSLSessionContext.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLSessionContext.html#getSessionTimeout()\"\u003e\u003ccode\u003egetSessionTimeout()\u003c/code\u003e\u003c/a\u003e"
        ],
        "apiNote": [
          "Note that the JDK Implementation uses default values for both the session cache size and timeout. See \n\u003ccode\u003egetSessionCacheSize\u003c/code\u003e and \n\u003ccode\u003egetSessionTimeout\u003c/code\u003e for more information. Applications should consider their performance requirements and override the defaults if necessary."
        ],
        "param": [
          "\u003ccode\u003eseconds\u003c/code\u003e - the new session timeout limit in seconds; zero means there is no limit."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the timeout specified is \n\u003ccode\u003e\u0026lt; 0\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSessionTimeout",
      "comment": "Returns the timeout limit of SSLSession objects grouped under this SSLSessionContext. If the timeout limit is set to \u0027t\u0027 seconds, a session exceeds the timeout limit \u0027t\u0027 seconds after its creation time. When the timeout limit is exceeded for a session, the SSLSession object is invalidated and future connections cannot resume or rejoin the session. A check for sessions exceeding the timeout limit is made immediately whenever the timeout limit is changed for this SSLSessionContext.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLSessionContext.html#setSessionTimeout(int)\"\u003e\u003ccode\u003esetSessionTimeout(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "implNote": [
          "The JDK implementation returns the session timeout as set by the \n\u003ccode\u003esetSessionTimeout\u003c/code\u003e method, or if not set, a default value of 86400 seconds (24 hours)."
        ],
        "return": [
          "the session timeout limit in seconds; zero means there is no limit."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setSessionCacheSize",
      "comment": "Sets the size of the cache used for storing SSLSession objects grouped under this SSLSessionContext.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLSessionContext.html#getSessionCacheSize()\"\u003e\u003ccode\u003egetSessionCacheSize()\u003c/code\u003e\u003c/a\u003e"
        ],
        "apiNote": [
          "Note that the JDK Implementation uses default values for both the session cache size and timeout. See \n\u003ccode\u003egetSessionCacheSize\u003c/code\u003e and \n\u003ccode\u003egetSessionTimeout\u003c/code\u003e for more information. Applications should consider their performance requirements and override the defaults if necessary."
        ],
        "param": [
          "\u003ccode\u003esize\u003c/code\u003e - the new session cache size limit; zero means there is no limit."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified size is \n\u003ccode\u003e\u0026lt; 0\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getSessionCacheSize",
      "comment": "Returns the size of the cache used for storing SSLSession objects grouped under this SSLSessionContext.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLSessionContext.html#setSessionCacheSize(int)\"\u003e\u003ccode\u003esetSessionCacheSize(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "implNote": [
          "The JDK implementation returns the cache size as set by the \n\u003ccode\u003esetSessionCacheSize\u003c/code\u003e method, or if not set, the value of the \n\u003ccode\u003e\u003cspan id\u003d\"javax.net.ssl.sessionCacheSize\" class\u003d\"search-tag-result\"\u003ejavax.net.ssl.sessionCacheSize\u003c/span\u003e\u003c/code\u003e system property. If neither is set, it returns a default value of 20480."
        ],
        "return": [
          "size of the session cache; zero means there is no size limit."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.net.ssl.SSLSessionContext",
  "comment": "A \n\u003ccode\u003eSSLSessionContext\u003c/code\u003e represents a set of \n\u003ccode\u003eSSLSession\u003c/code\u003es associated with a single entity. For example, it could be associated with a server or client who participates in many sessions concurrently. \n\u003cp\u003e Not all environments will contain session contexts. For example, stateless session resumption. \u003c/p\u003e\n\u003cp\u003e Session contexts may not contain all sessions. For example, stateless sessions are not stored in the session context. \u003c/p\u003e\n\u003cp\u003e There are \u003ccode\u003eSSLSessionContext\u003c/code\u003e parameters that affect how sessions are stored: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003eSessions can be set to expire after a specified time limit. \u003c/li\u003e\n \u003cli\u003eThe number of sessions that can be stored in context can be limited. \u003c/li\u003e\n\u003c/ul\u003e A session can be retrieved based on its session id, and all session id\u0027s in a \n\u003ccode\u003eSSLSessionContext\u003c/code\u003e can be listed.\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLSession.html\" title\u003d\"interface in javax.net.ssl\"\u003e\u003ccode\u003eSSLSession\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}