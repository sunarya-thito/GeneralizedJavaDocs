{
  "packageName": "javax.net.ssl",
  "simpleName": "HostnameVerifier",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "hostname"
          }
        },
        {
          "type": {
            "name": "javax.net.ssl.SSLSession",
            "type": "Class"
          },
          "field": {
            "name": "session"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "verify",
      "comment": "Verify that the host name is an acceptable match with the server\u0027s authentication scheme.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ehostname\u003c/code\u003e - the host name",
          "\u003ccode\u003esession\u003c/code\u003e - SSLSession used on the connection to host"
        ],
        "return": [
          "true if the host name is acceptable"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.net.ssl.HostnameVerifier",
  "comment": "This class is the base interface for hostname verification. \n\u003cp\u003e During handshaking, if the URL\u0027s hostname and the server\u0027s identification hostname mismatch, the verification mechanism can call back to implementers of this interface to determine if this connection should be allowed. \u003c/p\u003e\n\u003cp\u003e The policies can be certificate-based or may depend on other authentication schemes. \u003c/p\u003e\n\u003cp\u003e These callbacks are used when the default rules for URL hostname verification fail.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}