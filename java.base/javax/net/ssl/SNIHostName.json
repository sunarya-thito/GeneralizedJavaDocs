{
  "packageName": "javax.net.ssl",
  "simpleName": "SNIHostName",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "javax.net.ssl.SNIServerName",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAsciiName",
      "comment": "Returns the StandardCharsets.US_ASCII-compliant hostname of this SNIHostName object. Note that, per RFC 6066, the returned hostname may be an internationalized domain name that contains A-labels. See RFC 5890 for more information about the detailed A-label specification.",
      "tagMap": {
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/charset/StandardCharsets.html#US_ASCII\"\u003e\u003ccode\u003eStandardCharsets.US_ASCII\u003c/code\u003e\u003c/a\u003e-compliant hostname of this \n\u003ccode\u003eSNIHostName\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "other"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares this server name to the specified object. Per RFC 6066, DNS hostnames are case-insensitive. Two server hostnames are equal if, and only if, they have the same name type, and the hostnames are equal in a case-independent comparison.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SNIServerName.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SNIServerName.html\" title\u003d\"class in javax.net.ssl\"\u003eSNIServerName\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other server name object to compare with."
        ],
        "return": [
          "true if, and only if, the \n\u003ccode\u003eother\u003c/code\u003e is considered equal to this instance"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns a hash code value for this SNIHostName. The hash code value is generated using the case-insensitive hostname of this SNIHostName.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SNIServerName.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SNIServerName.html\" title\u003d\"class in javax.net.ssl\"\u003eSNIServerName\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code value for this \n\u003ccode\u003eSNIHostName\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of the object, including the DNS hostname in this SNIHostName object. The exact details of the representation are unspecified and subject to change, but the following may be regarded as typical:      \"type\u003dhost_name (0), value\u003d\u003chostname\u003e\"\n The \"\u003chostname\u003e\" is an ASCII representation of the hostname, which may contains A-labels. For example, a returned value of an pseudo hostname may look like:      \"type\u003dhost_name (0), value\u003dwww.example.com\"\n or      \"type\u003dhost_name (0), value\u003dxn--fsqu00a.xn--0zwm56d\"\n Please NOTE that the exact details of the representation are unspecified and subject to change.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SNIServerName.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SNIServerName.html\" title\u003d\"class in javax.net.ssl\"\u003eSNIServerName\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of the object."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.net.ssl.SNIMatcher",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "regex"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createSNIMatcher",
      "comment": "Creates an SNIMatcher object for SNIHostNames. This method can be used by a server to verify the acceptable SNIHostNames. For example,      SNIMatcher matcher \u003d\n         SNIHostName.createSNIMatcher(\"www\\\\.example\\\\.com\");\n will accept the hostname \"www.example.com\".      SNIMatcher matcher \u003d\n         SNIHostName.createSNIMatcher(\"www\\\\.example\\\\.(com|org)\");\n will accept hostnames \"www.example.com\" and \"www.example.org\".",
      "tagMap": {
        "param": [
          "\u003ccode\u003eregex\u003c/code\u003e - the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/regex/Pattern.html#sum\"\u003e regular expression pattern\u003c/a\u003e representing the hostname(s) to match"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eregex\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/regex/PatternSyntaxException.html\" title\u003d\"class in java.util.regex\"\u003ePatternSyntaxException\u003c/a\u003e\u003c/code\u003e - if the regular expression\u0027s syntax is invalid"
        ],
        "return": [
          "a \n\u003ccode\u003eSNIMatcher\u003c/code\u003e object for \n\u003ccode\u003eSNIHostName\u003c/code\u003es"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "hostname"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an SNIHostName using the specified hostname. Note that per RFC 6066, the encoded server name value of a hostname is StandardCharsets.US_ASCII-compliant. In this method, hostname can be a user-friendly Internationalized Domain Name (IDN). IDN.toASCII(String, int) is used to enforce the restrictions on ASCII characters in hostnames (see RFC 3490, RFC 1122, RFC 1123) and translate the hostname into ASCII Compatible Encoding (ACE), as:      IDN.toASCII(hostname, IDN.USE_STD3_ASCII_RULES);\n The hostname argument is illegal if it: hostname is empty, hostname ends with a trailing dot, hostname is not a valid Internationalized Domain Name (IDN) compliant with the RFC 3490 specification.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ehostname\u003c/code\u003e - the hostname of this server name"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ehostname\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ehostname\u003c/code\u003e is illegal"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "encoded"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an SNIHostName using the specified encoded value. This method is normally used to parse the encoded name value in a requested SNI extension. Per RFC 6066, the encoded name value of a hostname is StandardCharsets.US_ASCII-compliant. However, in the previous version of the SNI extension ( RFC 4366), the encoded hostname is represented as a byte string using UTF-8 encoding. For the purpose of version tolerance, this method allows that the charset of encoded argument can be StandardCharsets.UTF_8, as well as StandardCharsets.US_ASCII. IDN.toASCII(String) is used to translate the encoded argument into ASCII Compatible Encoding (ACE) hostname. It is strongly recommended that this constructor is only used to parse the encoded name value in a requested SNI extension. Otherwise, to comply with RFC 6066, please always use StandardCharsets.US_ASCII-compliant charset and enforce the restrictions on ASCII characters in hostnames (see RFC 3490, RFC 1122, RFC 1123) for encoded argument, or use SNIHostName(String) instead. The encoded argument is illegal if it: encoded is empty, encoded ends with a trailing dot, encoded is not encoded in StandardCharsets.US_ASCII or StandardCharsets.UTF_8-compliant charset, encoded is not a valid Internationalized Domain Name (IDN) compliant with the RFC 3490 specification. Note that the encoded byte array is cloned to protect against subsequent modification.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eencoded\u003c/code\u003e - the encoded hostname of this server name"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eencoded\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eencoded\u003c/code\u003e is illegal"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "javax.net.ssl.SNIHostName",
  "comment": "Instances of this class represent a server name of type \n\u003ca href\u003d\"StandardConstants.html#SNI_HOST_NAME\"\u003e\u003ccode\u003ehost_name\u003c/code\u003e\u003c/a\u003e in a Server Name Indication (SNI) extension. \n\u003cp\u003e As described in section 3, \"Server Name Indication\", of \u003ca href\u003d\"http://www.ietf.org/rfc/rfc6066.txt\"\u003eTLS Extensions (RFC 6066)\u003c/a\u003e, \"HostName\" contains the fully qualified DNS hostname of the server, as understood by the client. The encoded server name value of a hostname is represented as a byte string using ASCII encoding without a trailing dot. This allows the support of Internationalized Domain Names (IDN) through the use of A-labels (the ASCII-Compatible Encoding (ACE) form of a valid string of Internationalized Domain Names for Applications (IDNA)) defined in \u003ca href\u003d\"http://www.ietf.org/rfc/rfc5890.txt\"\u003eRFC 5890\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e Note that \u003ccode\u003eSNIHostName\u003c/code\u003e objects are immutable.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SNIServerName.html\" title\u003d\"class in javax.net.ssl\"\u003e\u003ccode\u003eSNIServerName\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/StandardConstants.html#SNI_HOST_NAME\"\u003e\u003ccode\u003eStandardConstants.SNI_HOST_NAME\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.8"
    ]
  }
}