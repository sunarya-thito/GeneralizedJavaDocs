{
  "packageName": "javax.net.ssl",
  "simpleName": "X509KeyManager",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "javax.net.ssl.KeyManager",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "keyType"
          }
        },
        {
          "type": {
            "name": "java.security.Principal",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "issuers"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getClientAliases",
      "comment": "Get the matching aliases for authenticating the client side of a secure socket given the public key type and the list of certificate issuer authorities recognized by the peer (if any).",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekeyType\u003c/code\u003e - the key algorithm type name",
          "\u003ccode\u003eissuers\u003c/code\u003e - the list of acceptable CA issuer subject names, or null if it does not matter which issuers are used."
        ],
        "return": [
          "an array of the matching alias names, or null if there were no matches."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "keyType"
          }
        },
        {
          "type": {
            "name": "java.security.Principal",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "issuers"
          }
        },
        {
          "type": {
            "name": "java.net.Socket",
            "type": "Class"
          },
          "field": {
            "name": "socket"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "chooseClientAlias",
      "comment": "Choose an alias to authenticate the client side of a secure socket given the public key type and the list of certificate issuer authorities recognized by the peer (if any).",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekeyType\u003c/code\u003e - the key algorithm type name(s), ordered with the most-preferred key type first.",
          "\u003ccode\u003eissuers\u003c/code\u003e - the list of acceptable CA issuer subject names or null if it does not matter which issuers are used.",
          "\u003ccode\u003esocket\u003c/code\u003e - the socket to be used for this connection. This parameter can be null, which indicates that implementations are free to select an alias applicable to any socket."
        ],
        "return": [
          "the alias name for the desired key, or null if there are no matches."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "keyType"
          }
        },
        {
          "type": {
            "name": "java.security.Principal",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "issuers"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getServerAliases",
      "comment": "Get the matching aliases for authenticating the server side of a secure socket given the public key type and the list of certificate issuer authorities recognized by the peer (if any).",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekeyType\u003c/code\u003e - the key algorithm type name",
          "\u003ccode\u003eissuers\u003c/code\u003e - the list of acceptable CA issuer subject names or null if it does not matter which issuers are used."
        ],
        "return": [
          "an array of the matching alias names, or null if there were no matches."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "keyType"
          }
        },
        {
          "type": {
            "name": "java.security.Principal",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "issuers"
          }
        },
        {
          "type": {
            "name": "java.net.Socket",
            "type": "Class"
          },
          "field": {
            "name": "socket"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "chooseServerAlias",
      "comment": "Choose an alias to authenticate the server side of a secure socket given the public key type and the list of certificate issuer authorities recognized by the peer (if any).",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekeyType\u003c/code\u003e - the key algorithm type name.",
          "\u003ccode\u003eissuers\u003c/code\u003e - the list of acceptable CA issuer subject names or null if it does not matter which issuers are used.",
          "\u003ccode\u003esocket\u003c/code\u003e - the socket to be used for this connection. This parameter can be null, which indicates that implementations are free to select an alias applicable to any socket."
        ],
        "return": [
          "the alias name for the desired key, or null if there are no matches."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.cert.X509Certificate",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "alias"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getCertificateChain",
      "comment": "Returns the certificate chain associated with the given alias.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ealias\u003c/code\u003e - the alias name"
        ],
        "return": [
          "the certificate chain (ordered with the user\u0027s certificate first and the root certificate authority last), or null if the alias can\u0027t be found."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.PrivateKey",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "alias"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPrivateKey",
      "comment": "Returns the key associated with the given alias.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ealias\u003c/code\u003e - the alias name"
        ],
        "return": [
          "the requested key, or null if the alias can\u0027t be found."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "javax.net.ssl.X509KeyManager",
  "comment": "Instances of this interface manage which X509 certificate-based key pairs are used to authenticate the local side of a secure socket. \n\u003cp\u003e During secure socket negotiations, implementations call methods in this interface to: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e determine the set of aliases that are available for negotiations based on the criteria presented, \u003c/li\u003e\n \u003cli\u003e select the \u003ci\u003e best alias\u003c/i\u003e based on the criteria presented, and \u003c/li\u003e\n \u003cli\u003e obtain the corresponding key material for given aliases. \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e Note: the X509ExtendedKeyManager should be used in favor of this class.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}