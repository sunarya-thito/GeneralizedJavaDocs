{
  "packageName": "javax.net.ssl",
  "simpleName": "SSLEngineResult",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "javax.net.ssl.SSLEngineResult$Status",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getStatus",
      "comment": "Gets the return value of this SSLEngine operation.",
      "tagMap": {
        "return": [
          "the return value"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.net.ssl.SSLEngineResult$HandshakeStatus",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getHandshakeStatus",
      "comment": "Gets the handshake status of this SSLEngine operation.",
      "tagMap": {
        "return": [
          "the handshake status"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "bytesConsumed",
      "comment": "Returns the number of bytes consumed from the input buffer.",
      "tagMap": {
        "return": [
          "the number of bytes consumed."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "bytesProduced",
      "comment": "Returns the number of bytes written to the output buffer.",
      "tagMap": {
        "return": [
          "the number of bytes produced"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "sequenceNumber",
      "comment": "Returns the sequence number of the produced or consumed SSL/TLS/DTLS record (optional operation).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Long.html#compareUnsigned(long,long)\"\u003e\u003ccode\u003eLong.compareUnsigned(long, long)\u003c/code\u003e\u003c/a\u003e"
        ],
        "apiNote": [
          "Note that sequence number is an unsigned long and cannot exceed \n\u003ccode\u003e-1L\u003c/code\u003e. It is desired to use the unsigned long comparing mode for comparison of unsigned long values (see also \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Long.html#compareUnsigned(long,long)\"\u003e\u003ccode\u003eLong.compareUnsigned()\u003c/code\u003e\u003c/a\u003e). \n\u003cp\u003e For DTLS protocols, the first 16 bits of the sequence number is a counter value (epoch) that is incremented on every cipher state change. The remaining 48 bits on the right side of the sequence number represents the sequence of the record, which is maintained separately for each epoch.\u003c/p\u003e"
        ],
        "implNote": [
          "It is recommended that providers should never allow the sequence number incremented to \n\u003ccode\u003e-1L\u003c/code\u003e. If the sequence number is close to wrapping, renegotiate should be requested, otherwise the connection should be closed immediately. This should be carried on automatically by the underlying implementation."
        ],
        "return": [
          "the sequence number of the produced or consumed SSL/TLS/DTLS record; or \n\u003ccode\u003e-1L\u003c/code\u003e if no record is produced or consumed, or this operation is not supported by the underlying provider"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a String representation of this object.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of the object."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.net.ssl.SSLEngineResult$Status",
            "type": "Class"
          },
          "field": {
            "name": "status"
          }
        },
        {
          "type": {
            "name": "javax.net.ssl.SSLEngineResult$HandshakeStatus",
            "type": "Class"
          },
          "field": {
            "name": "handshakeStatus"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "bytesConsumed"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "bytesProduced"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Initializes a new instance of this class.",
      "tagMap": {
        "param": [
          "\u003ccode\u003estatus\u003c/code\u003e - the return value of the operation.",
          "\u003ccode\u003ehandshakeStatus\u003c/code\u003e - the current handshaking status.",
          "\u003ccode\u003ebytesConsumed\u003c/code\u003e - the number of bytes consumed from the source ByteBuffer",
          "\u003ccode\u003ebytesProduced\u003c/code\u003e - the number of bytes placed into the destination ByteBuffer"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003estatus\u003c/code\u003e or \n\u003ccode\u003ehandshakeStatus\u003c/code\u003e arguments are null, or if \n\u003ccode\u003ebytesConsumed\u003c/code\u003e or \n\u003ccode\u003ebytesProduced\u003c/code\u003e is negative."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "javax.net.ssl.SSLEngineResult$Status",
            "type": "Class"
          },
          "field": {
            "name": "status"
          }
        },
        {
          "type": {
            "name": "javax.net.ssl.SSLEngineResult$HandshakeStatus",
            "type": "Class"
          },
          "field": {
            "name": "handshakeStatus"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "bytesConsumed"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "bytesProduced"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "sequenceNumber"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Initializes a new instance of this class.",
      "tagMap": {
        "param": [
          "\u003ccode\u003estatus\u003c/code\u003e - the return value of the operation.",
          "\u003ccode\u003ehandshakeStatus\u003c/code\u003e - the current handshaking status.",
          "\u003ccode\u003ebytesConsumed\u003c/code\u003e - the number of bytes consumed from the source ByteBuffer",
          "\u003ccode\u003ebytesProduced\u003c/code\u003e - the number of bytes placed into the destination ByteBuffer",
          "\u003ccode\u003esequenceNumber\u003c/code\u003e - the sequence number (unsigned long) of the produced or consumed SSL/TLS/DTLS record, or \n\u003ccode\u003e-1L\u003c/code\u003e if no record produced or consumed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003estatus\u003c/code\u003e or \n\u003ccode\u003ehandshakeStatus\u003c/code\u003e arguments are null, or if \n\u003ccode\u003ebytesConsumed\u003c/code\u003e or \n\u003ccode\u003ebytesProduced\u003c/code\u003e is negative"
        ],
        "since": [
          "9"
        ]
      }
    }
  ],
  "innerClasses": [
    "javax.net.ssl.SSLEngineResult$HandshakeStatus",
    "javax.net.ssl.SSLEngineResult$Status"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.net.ssl.SSLEngineResult",
  "comment": "An encapsulation of the result state produced by \n\u003ccode\u003eSSLEngine\u003c/code\u003e I/O calls. \n\u003cp\u003e A \u003ccode\u003eSSLEngine\u003c/code\u003e provides a means for establishing secure communication sessions between two peers. \u003ccode\u003eSSLEngine\u003c/code\u003e operations typically consume bytes from an input buffer and produce bytes in an output buffer. This class provides operational result values describing the state of the \u003ccode\u003eSSLEngine\u003c/code\u003e, including indications of what operations are needed to finish an ongoing handshake. Lastly, it reports the number of bytes consumed and produced as a result of this operation.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLEngine.html\" title\u003d\"class in javax.net.ssl\"\u003e\u003ccode\u003eSSLEngine\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLEngine.html#wrap(java.nio.ByteBuffer%5B%5D,java.nio.ByteBuffer)\"\u003e\u003ccode\u003eSSLEngine.wrap(ByteBuffer, ByteBuffer)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLEngine.html#unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer%5B%5D)\"\u003e\u003ccode\u003eSSLEngine.unwrap(ByteBuffer, ByteBuffer)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}