{
  "packageName": "javax.net.ssl",
  "simpleName": "ExtendedSSLSession",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getLocalSupportedSignatureAlgorithms",
      "comment": "Obtains an array of supported signature algorithms that the local side is willing to use. Note: this method is used to indicate to the peer which signature algorithms may be used for digital signatures in TLS/DTLS 1.2. It is not meaningful for TLS/DTLS versions prior to 1.2. The signature algorithm name must be a standard Java Security name (such as \"SHA1withRSA\", \"SHA256withECDSA\", and so on). See the Java Security Standard Algorithm Names document for information about standard algorithm names. Note: the local supported signature algorithms should conform to the algorithm constraints specified by getAlgorithmConstraints() method in SSLParameters.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLParameters.html#getAlgorithmConstraints()\"\u003e\u003ccode\u003eSSLParameters.getAlgorithmConstraints()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "An array of supported signature algorithms, in descending order of preference. The return value is an empty array if no signature algorithm is supported."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getPeerSupportedSignatureAlgorithms",
      "comment": "Obtains an array of supported signature algorithms that the peer is able to use. Note: this method is used to indicate to the local side which signature algorithms may be used for digital signatures in TLS/DTLS 1.2. It is not meaningful for TLS/DTLS versions prior to 1.2. The signature algorithm name must be a standard Java Security name (such as \"SHA1withRSA\", \"SHA256withECDSA\", and so on). See the Java Security Standard Algorithm Names document for information about standard algorithm names.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/X509KeyManager.html\" title\u003d\"interface in javax.net.ssl\"\u003e\u003ccode\u003eX509KeyManager\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/X509ExtendedKeyManager.html\" title\u003d\"class in javax.net.ssl\"\u003e\u003ccode\u003eX509ExtendedKeyManager\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "An array of supported signature algorithms, in descending order of preference. The return value is an empty array if the peer has not sent the supported signature algorithms."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "javax.net.ssl.SNIServerName",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRequestedServerNames",
      "comment": "Obtains a List containing all SNIServerNames of the requested Server Name Indication (SNI) extension. In server mode, unless the return List is empty, the server should use the requested server names to guide its selection of an appropriate authentication certificate, and/or other aspects of security policy. In client mode, unless the return List is empty, the client should use the requested server names to guide its endpoint identification of the peer\u0027s identity, and/or other aspects of security policy.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SNIServerName.html\" title\u003d\"class in javax.net.ssl\"\u003e\u003ccode\u003eSNIServerName\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/X509ExtendedTrustManager.html\" title\u003d\"class in javax.net.ssl\"\u003e\u003ccode\u003eX509ExtendedTrustManager\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/X509ExtendedKeyManager.html\" title\u003d\"class in javax.net.ssl\"\u003e\u003ccode\u003eX509ExtendedKeyManager\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the underlying provider does not implement the operation"
        ],
        "return": [
          "a non-null immutable list of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SNIServerName.html\" title\u003d\"class in javax.net.ssl\"\u003e\u003ccode\u003eSNIServerName\u003c/code\u003e\u003c/a\u003es of the requested server name indications. The returned list may be empty if no server name indications were requested."
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getStatusResponses",
      "comment": "Returns a List containing DER-encoded OCSP responses (using the ASN.1 type OCSPResponse defined in RFC 6960) for the client to verify status of the server\u0027s certificate during handshaking. This method only applies to certificate-based server authentication. An X509ExtendedTrustManager will use the returned value for server certificate validation.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "This method throws UnsupportedOperationException by default. Classes derived from ExtendedSSLSession must implement this method."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/X509ExtendedTrustManager.html\" title\u003d\"class in javax.net.ssl\"\u003e\u003ccode\u003eX509ExtendedTrustManager\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the underlying provider does not implement the operation"
        ],
        "return": [
          "a non-null unmodifiable list of byte arrays, each entry containing a DER-encoded OCSP response (using the ASN.1 type OCSPResponse defined in RFC 6960). The order of the responses must match the order of the certificates presented by the server in its Certificate message (See \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLSession.html#getLocalCertificates()\"\u003e\u003ccode\u003eSSLSession.getLocalCertificates()\u003c/code\u003e\u003c/a\u003e for server mode, and \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLSession.html#getPeerCertificates()\"\u003e\u003ccode\u003eSSLSession.getPeerCertificates()\u003c/code\u003e\u003c/a\u003e for client mode). It is possible that fewer response entries may be returned than the number of presented certificates. If an entry in the list is a zero-length byte array, it should be treated by the caller as if the OCSP entry for the corresponding certificate is missing. The returned list may be empty if no OCSP responses were presented during handshaking or if OCSP stapling is not supported by either endpoint for this handshake."
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor for subclasses to call.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "javax.net.ssl.ExtendedSSLSession",
  "comment": "Extends the \n\u003ccode\u003eSSLSession\u003c/code\u003e interface to support additional session attributes.",
  "tagMap": {
    "since": [
      "1.7"
    ]
  }
}