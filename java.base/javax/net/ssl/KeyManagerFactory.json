{
  "packageName": "javax.net.ssl",
  "simpleName": "KeyManagerFactory",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 25,
      "name": "getDefaultAlgorithm",
      "comment": "Obtains the default KeyManagerFactory algorithm name. The default algorithm can be changed at runtime by setting the value of the ssl.KeyManagerFactory.algorithm security property to the desired algorithm name.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Security.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003esecurity properties\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the default algorithm name as specified by the \n\u003ccode\u003essl.KeyManagerFactory.algorithm\u003c/code\u003e security property, or an implementation-specific default if no such property exists."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getAlgorithm",
      "comment": "Returns the algorithm name of this KeyManagerFactory object. This is the same name that was specified in one of the getInstance calls that created this KeyManagerFactory object.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the algorithm name of this \n\u003ccode\u003eKeyManagerFactory\u003c/code\u003e object."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.net.ssl.KeyManagerFactory",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.NoSuchAlgorithmException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "algorithm",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 25,
      "name": "getInstance",
      "comment": "Returns a KeyManagerFactory object that acts as a factory for key managers. This method traverses the list of registered security Providers, starting with the most preferred Provider. A new KeyManagerFactory object encapsulating the KeyManagerFactorySpi implementation from the first Provider that supports the specified algorithm is returned. Note that the list of registered providers may be retrieved via the Security.getProviders() method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Provider.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eProvider\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ealgorithm\u003c/code\u003e - the standard name of the requested algorithm. See the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/specs/security/standard-names.html#keymanagerfactory-algorithms\"\u003e KeyManagerFactory section\u003c/a\u003e in the Java Security Standard Algorithm Names Specification for information about standard algorithm names."
        ],
        "implNote": [
          "The JDK Reference Implementation additionally uses the \n\u003ccode\u003ejdk.security.provider.preferred\u003c/code\u003e \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Security.html#getProperty(java.lang.String)\"\u003e\u003ccode\u003eSecurity\u003c/code\u003e\u003c/a\u003e property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Security.html#getProviders()\"\u003e\u003ccode\u003eSecurity.getProviders()\u003c/code\u003e\u003c/a\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchAlgorithmException.html\" title\u003d\"class in java.security\"\u003eNoSuchAlgorithmException\u003c/a\u003e\u003c/code\u003e - if no \n\u003ccode\u003eProvider\u003c/code\u003e supports a \n\u003ccode\u003eKeyManagerFactorySpi\u003c/code\u003e implementation for the specified algorithm",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ealgorithm\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the new \n\u003ccode\u003eKeyManagerFactory\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.net.ssl.KeyManagerFactory",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.NoSuchAlgorithmException",
          "type": "Class"
        },
        {
          "name": "java.security.NoSuchProviderException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "algorithm",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "provider",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 25,
      "name": "getInstance",
      "comment": "Returns a KeyManagerFactory object that acts as a factory for key managers. A new KeyManagerFactory object encapsulating the KeyManagerFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list. Note that the list of registered providers may be retrieved via the Security.getProviders() method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Provider.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eProvider\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ealgorithm\u003c/code\u003e - the standard name of the requested algorithm. See the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/specs/security/standard-names.html#keymanagerfactory-algorithms\"\u003e KeyManagerFactory section\u003c/a\u003e in the Java Security Standard Algorithm Names Specification for information about standard algorithm names.",
          "\u003ccode\u003eprovider\u003c/code\u003e - the name of the provider."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the provider name is \n\u003ccode\u003enull\u003c/code\u003e or empty",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchAlgorithmException.html\" title\u003d\"class in java.security\"\u003eNoSuchAlgorithmException\u003c/a\u003e\u003c/code\u003e - if a \n\u003ccode\u003eKeyManagerFactorySpi\u003c/code\u003e implementation for the specified algorithm is not available from the specified provider",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchProviderException.html\" title\u003d\"class in java.security\"\u003eNoSuchProviderException\u003c/a\u003e\u003c/code\u003e - if the specified provider is not registered in the security provider list",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ealgorithm\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the new \n\u003ccode\u003eKeyManagerFactory\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.net.ssl.KeyManagerFactory",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.NoSuchAlgorithmException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "algorithm",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.Provider",
            "type": "Class"
          },
          "name": "provider",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 25,
      "name": "getInstance",
      "comment": "Returns a KeyManagerFactory object that acts as a factory for key managers. A new KeyManagerFactory object encapsulating the KeyManagerFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Provider.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eProvider\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ealgorithm\u003c/code\u003e - the standard name of the requested algorithm. See the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/specs/security/standard-names.html#keymanagerfactory-algorithms\"\u003e KeyManagerFactory section\u003c/a\u003e in the Java Security Standard Algorithm Names Specification for information about standard algorithm names.",
          "\u003ccode\u003eprovider\u003c/code\u003e - an instance of the provider."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if provider is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchAlgorithmException.html\" title\u003d\"class in java.security\"\u003eNoSuchAlgorithmException\u003c/a\u003e\u003c/code\u003e - if a \n\u003ccode\u003e@KeyManagerFactorySpi\u003c/code\u003e implementation for the specified algorithm is not available from the specified Provider object",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ealgorithm\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the new \n\u003ccode\u003eKeyManagerFactory\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.Provider",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getProvider",
      "comment": "Returns the provider of this KeyManagerFactory object.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the provider of this \n\u003ccode\u003eKeyManagerFactory\u003c/code\u003e object"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.KeyStoreException",
          "type": "Class"
        },
        {
          "name": "java.security.NoSuchAlgorithmException",
          "type": "Class"
        },
        {
          "name": "java.security.UnrecoverableKeyException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.KeyStore",
            "type": "Class"
          },
          "name": "ks",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "char",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "password",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "init",
      "comment": "Initializes this factory with a source of key material. The provider typically uses a KeyStore for obtaining key material for use during secure socket negotiations. The KeyStore is generally password-protected. For more flexible initialization, please see init(ManagerFactoryParameters).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eks\u003c/code\u003e - the key store or null",
          "\u003ccode\u003epassword\u003c/code\u003e - the password for recovering keys in the KeyStore"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/KeyStoreException.html\" title\u003d\"class in java.security\"\u003eKeyStoreException\u003c/a\u003e\u003c/code\u003e - if this operation fails",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchAlgorithmException.html\" title\u003d\"class in java.security\"\u003eNoSuchAlgorithmException\u003c/a\u003e\u003c/code\u003e - if the specified algorithm is not available from the specified provider.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/UnrecoverableKeyException.html\" title\u003d\"class in java.security\"\u003eUnrecoverableKeyException\u003c/a\u003e\u003c/code\u003e - if the key cannot be recovered (e.g. the given password is wrong)."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.InvalidAlgorithmParameterException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.net.ssl.ManagerFactoryParameters",
            "type": "Class"
          },
          "name": "spec",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "init",
      "comment": "Initializes this factory with a source of provider-specific key material. In some cases, initialization parameters other than a keystore and password may be needed by a provider. Users of that particular provider are expected to pass an implementation of the appropriate ManagerFactoryParameters as defined by the provider. The provider can then call the specified methods in the ManagerFactoryParameters implementation to obtain the needed information.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003espec\u003c/code\u003e - an implementation of a provider-specific parameter specification"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/InvalidAlgorithmParameterException.html\" title\u003d\"class in java.security\"\u003eInvalidAlgorithmParameterException\u003c/a\u003e\u003c/code\u003e - if an error is encountered"
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.net.ssl.KeyManager",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getKeyManagers",
      "comment": "Returns one key manager for each type of key material.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the KeyManagerFactory is not initialized"
        ],
        "return": [
          "the key managers"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "javax.net.ssl.KeyManagerFactorySpi",
            "type": "Class"
          },
          "name": "factorySpi",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.Provider",
            "type": "Class"
          },
          "name": "provider",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "algorithm",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Creates a KeyManagerFactory object.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efactorySpi\u003c/code\u003e - the delegate",
          "\u003ccode\u003eprovider\u003c/code\u003e - the provider",
          "\u003ccode\u003ealgorithm\u003c/code\u003e - the algorithm"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "javax.net.ssl.KeyManagerFactory",
  "comment": "This class acts as a factory for key managers based on a source of key material. Each key manager manages a specific type of key material for use by secure sockets. The key material is based on a KeyStore and/or provider specific sources.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/KeyManager.html\" title\u003d\"interface in javax.net.ssl\"\u003e\u003ccode\u003eKeyManager\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}