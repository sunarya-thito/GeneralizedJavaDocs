{
  "packageName": "javax.security.auth.x500",
  "simpleName": "X500PrivateCredential",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.security.cert.X509Certificate",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCertificate",
      "comment": "Returns the X.509 certificate.",
      "tagMap": {
        "return": [
          "the X509Certificate"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.PrivateKey",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPrivateKey",
      "comment": "Returns the PrivateKey.",
      "tagMap": {
        "return": [
          "the PrivateKey"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAlias",
      "comment": "Returns the KeyStore alias.",
      "tagMap": {
        "return": [
          "the KeyStore alias"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "destroy",
      "comment": "Clears the references to the X.509 certificate, private key and the KeyStore alias in this object.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/security/auth/Destroyable.html#destroy()\"\u003edestroy\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/security/auth/Destroyable.html\" title\u003d\"interface in javax.security.auth\"\u003eDestroyable\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isDestroyed",
      "comment": "Determines if the references to the X.509 certificate and private key in this object have been cleared.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/security/auth/Destroyable.html#isDestroyed()\"\u003eisDestroyed\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/security/auth/Destroyable.html\" title\u003d\"interface in javax.security.auth\"\u003eDestroyable\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if X509Certificate and the PrivateKey are null"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.security.cert.X509Certificate",
            "type": "Class"
          },
          "field": {
            "name": "cert"
          }
        },
        {
          "type": {
            "name": "java.security.PrivateKey",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an X500PrivateCredential that associates an X.509 certificate, a private key and the KeyStore alias.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecert\u003c/code\u003e - X509Certificate",
          "\u003ccode\u003ekey\u003c/code\u003e - PrivateKey for the certificate"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if either \n\u003ccode\u003ecert\u003c/code\u003e or \n\u003ccode\u003ekey\u003c/code\u003e is null"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.security.cert.X509Certificate",
            "type": "Class"
          },
          "field": {
            "name": "cert"
          }
        },
        {
          "type": {
            "name": "java.security.PrivateKey",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "alias"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an X500PrivateCredential that associates an X.509 certificate, a private key and the KeyStore alias.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecert\u003c/code\u003e - X509Certificate",
          "\u003ccode\u003ekey\u003c/code\u003e - PrivateKey for the certificate",
          "\u003ccode\u003ealias\u003c/code\u003e - KeyStore alias"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if either \n\u003ccode\u003ecert\u003c/code\u003e, \n\u003ccode\u003ekey\u003c/code\u003e or \n\u003ccode\u003ealias\u003c/code\u003e is null"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "javax.security.auth.x500.X500PrivateCredential",
  "comment": "\u003cp\u003e This class represents an \u003ccode\u003eX500PrivateCredential\u003c/code\u003e. It associates an X.509 certificate, corresponding private key and the KeyStore alias used to reference that exact key pair in the KeyStore. This enables looking up the private credentials for an X.500 principal in a subject.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}