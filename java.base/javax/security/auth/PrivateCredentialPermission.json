{
  "packageName": "javax.security.auth",
  "simpleName": "PrivateCredentialPermission",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.security.Permission",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCredentialClass",
      "comment": "Returns the Class name of the Credential associated with this PrivateCredentialPermission.",
      "tagMap": {
        "return": [
          "the Class name of the Credential associated with this \n\u003ccode\u003ePrivateCredentialPermission\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": [
          {},
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPrincipals",
      "comment": "Returns the Principal classes and names associated with this PrivateCredentialPermission. The information is returned as a two-dimensional array (array[x][y]). The \u0027x\u0027 value corresponds to the number of Principal class and name pairs. When (y\u003d\u003d0), it corresponds to the Principal class value, and when (y\u003d\u003d1), it corresponds to the Principal name value. For example, array[0][0] corresponds to the class name of the first Principal in the array. array[0][1] corresponds to the Principal name of the first Principal in the array.",
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003ePrincipal\u003c/code\u003e class and names associated with this \n\u003ccode\u003ePrivateCredentialPermission\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.security.Permission",
            "type": "Class"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "implies",
      "comment": "Checks if this PrivateCredentialPermission implies the specified Permission. This method returns true if: p is an instanceof PrivateCredentialPermission and the target name for p is implied by this object\u0027s target name. For example:   [* P1 \"duke\"] implies [a.b.Credential P1 \"duke\"].\n  [C1 P1 \"duke\"] implies [C1 P1 \"duke\" P2 \"dukette\"].\n  [C1 P2 \"dukette\"] implies [C1 P1 \"duke\" P2 \"dukette\"].",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html#implies(java.security.Permission)\"\u003eimplies\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html\" title\u003d\"class in java.security\"\u003ePermission\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ep\u003c/code\u003e - the \n\u003ccode\u003ePermission\u003c/code\u003e to check against."
        ],
        "return": [
          "true if this \n\u003ccode\u003ePrivateCredentialPermission\u003c/code\u003e implies the specified \n\u003ccode\u003ePermission\u003c/code\u003e, false if not."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Checks two PrivateCredentialPermission objects for equality. Checks that obj is a PrivateCredentialPermission, and has the same credential class as this object, as well as the same Principals as this object. The order of the Principals in the respective Permission\u0027s target names is not relevant.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html\" title\u003d\"class in java.security\"\u003ePermission\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object we are testing for equality with this object."
        ],
        "return": [
          "true if obj is a \n\u003ccode\u003ePrivateCredentialPermission\u003c/code\u003e, has the same credential class as this object, and has the same Principals as this object."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns the hash code value for this object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html\" title\u003d\"class in java.security\"\u003ePermission\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code value for this object."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getActions",
      "comment": "Returns the \"canonical string representation\" of the actions. This method always returns the String, \"read\".",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html#getActions()\"\u003egetActions\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html\" title\u003d\"class in java.security\"\u003ePermission\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the actions (always returns \"read\")."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.PermissionCollection",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newPermissionCollection",
      "comment": "Return a homogeneous collection of PrivateCredentialPermissions in a PermissionCollection. No such PermissionCollection is defined, so this method always returns null.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html#newPermissionCollection()\"\u003enewPermissionCollection\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Permission.html\" title\u003d\"class in java.security\"\u003ePermission\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "null in all cases."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "actions"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new PrivateCredentialPermission with the specified name. The name specifies both a Credential class and a Principal Set.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name specifying the Credential class and \n\u003ccode\u003ePrincipal\u003c/code\u003e Set.",
          "\u003ccode\u003eactions\u003c/code\u003e - the actions specifying that the Credential can be read."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e does not conform to the correct syntax or if \n\u003ccode\u003eactions\u003c/code\u003e is not \"read\"."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "javax.security.auth.PrivateCredentialPermission",
  "comment": "This class is used to protect access to private Credentials belonging to a particular \n\u003ccode\u003eSubject\u003c/code\u003e. The \n\u003ccode\u003eSubject\u003c/code\u003e is represented by a Set of Principals. \n\u003cp\u003e The target name of this \u003ccode\u003ePermission\u003c/code\u003e specifies a Credential class name, and a Set of Principals. The only valid value for this Permission\u0027s actions is, \"read\". The target name must abide by the following syntax: \u003c/p\u003e\n\u003cpre\u003e      CredentialClass {PrincipalClass \"PrincipalName\"}*\n \u003c/pre\u003e For example, the following permission grants access to the com.sun.PrivateCredential owned by Subjects which have a com.sun.Principal with the name, \"duke\". Note that although this example, as well as all the examples below, do not contain Codebase, SignedBy, or Principal information in the grant statement (for simplicity reasons), actual policy configurations should specify that information when appropriate. \n\u003cpre\u003e\n    grant {\n      permission javax.security.auth.PrivateCredentialPermission\n              \"com.sun.PrivateCredential com.sun.Principal \\\"duke\\\"\",\n              \"read\";\n    };\n \u003c/pre\u003e If CredentialClass is \"*\", then access is granted to all private Credentials belonging to the specified \n\u003ccode\u003eSubject\u003c/code\u003e. If \"PrincipalName\" is \"*\", then access is granted to the specified Credential owned by any \n\u003ccode\u003eSubject\u003c/code\u003e that has the specified \n\u003ccode\u003ePrincipal\u003c/code\u003e (the actual PrincipalName doesn\u0027t matter). For example, the following grants access to the a.b.Credential owned by any \n\u003ccode\u003eSubject\u003c/code\u003e that has an a.b.Principal. \n\u003cpre\u003e    grant {\n      permission javax.security.auth.PrivateCredentialPermission\n              \"a.b.Credential a.b.Principal \"*\"\",\n              \"read\";\n    };\n \u003c/pre\u003e If both the PrincipalClass and \"PrincipalName\" are \"*\", then access is granted to the specified Credential owned by any \n\u003ccode\u003eSubject\u003c/code\u003e. \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e In addition, the PrincipalClass/PrincipalName pairing may be repeated: \u003c/p\u003e\n\u003cpre\u003e    grant {\n      permission javax.security.auth.PrivateCredentialPermission\n              \"a.b.Credential a.b.Principal \"duke\" c.d.Principal \"dukette\"\",\n              \"read\";\n    };\n \u003c/pre\u003e The above grants access to the private Credential, \"a.b.Credential\", belonging to a \n\u003ccode\u003eSubject\u003c/code\u003e with at least two associated Principals: \"a.b.Principal\" with the name, \"duke\", and \"c.d.Principal\", with the name, \"dukette\".\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.security.auth.PrivateCredentialPermission\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}