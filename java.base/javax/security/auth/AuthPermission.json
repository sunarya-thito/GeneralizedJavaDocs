{
  "packageName": "javax.security.auth",
  "simpleName": "AuthPermission",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.security.BasicPermission",
    "type": "Class"
  },
  "members": [
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new AuthPermission with the specified name. The name is the symbolic name of the AuthPermission.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the AuthPermission"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e is empty."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "actions",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new AuthPermission object with the specified name. The name is the symbolic name of the AuthPermission, and the actions String is currently unused and should be null.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the AuthPermission",
          "\u003ccode\u003eactions\u003c/code\u003e - should be null."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e is empty."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "javax.security.auth.AuthPermission",
  "comment": "This class is for authentication permissions. An \n\u003ccode\u003eAuthPermission\u003c/code\u003e contains a name (also referred to as a \"target name\") but no actions list; you either have the named permission or you don\u0027t. \n\u003cp\u003e The target name is the name of a security configuration parameter (see below). Currently the \u003ccode\u003eAuthPermission\u003c/code\u003e object is used to guard access to the \u003ca href\u003d\"Subject.html\" title\u003d\"class in javax.security.auth\"\u003e\u003ccode\u003eSubject\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"login/LoginContext.html\" title\u003d\"class in javax.security.auth.login\"\u003e\u003ccode\u003eLoginContext\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"login/Configuration.html\" title\u003d\"class in javax.security.auth.login\"\u003e\u003ccode\u003eConfiguration\u003c/code\u003e\u003c/a\u003e objects. \u003c/p\u003e\n\u003cp\u003e The standard target names for an Authentication Permission are: \u003c/p\u003e\n\u003cpre\u003e      doAs -                  allow the caller to invoke the\n                              \u003ccode\u003eSubject.doAs\u003c/code\u003e methods.\n\n      doAsPrivileged -        allow the caller to invoke the\n                              \u003ccode\u003eSubject.doAsPrivileged\u003c/code\u003e methods.\n\n      getSubject -            allow for the retrieval of the\n                              Subject(s) associated with the\n                              current Thread.\n\n      getSubjectFromDomainCombiner -  allow for the retrieval of the\n                              Subject associated with the\n                              a \u003ccode\u003eSubjectDomainCombiner\u003c/code\u003e.\n\n      setReadOnly -           allow the caller to set a Subject\n                              to be read-only.\n\n      modifyPrincipals -      allow the caller to modify the \u003ccode\u003eSet\u003c/code\u003e\n                              of Principals associated with a\n                              \u003ccode\u003eSubject\u003c/code\u003e\n\n      modifyPublicCredentials - allow the caller to modify the\n                              \u003ccode\u003eSet\u003c/code\u003e of public credentials\n                              associated with a \u003ccode\u003eSubject\u003c/code\u003e\n\n      modifyPrivateCredentials - allow the caller to modify the\n                              \u003ccode\u003eSet\u003c/code\u003e of private credentials\n                              associated with a \u003ccode\u003eSubject\u003c/code\u003e\n\n      refreshCredential -     allow code to invoke the \u003ccode\u003erefresh\u003c/code\u003e\n                              method on a credential which implements\n                              the \u003ccode\u003eRefreshable\u003c/code\u003e interface.\n\n      destroyCredential -     allow code to invoke the \u003ccode\u003edestroy\u003c/code\u003e\n                              method on a credential \u003ccode\u003eobject\u003c/code\u003e\n                              which implements the \u003ccode\u003eDestroyable\u003c/code\u003e\n                              interface.\n\n      createLoginContext.{name} -  allow code to instantiate a\n                              \u003ccode\u003eLoginContext\u003c/code\u003e with the\n                              specified \u003ccode\u003ename\u003c/code\u003e.  \u003ccode\u003ename\u003c/code\u003e\n                              is used as the index into the installed login\n                              \u003ccode\u003eConfiguration\u003c/code\u003e\n                              (that returned by\n                              \u003ccode\u003eConfiguration.getConfiguration()\u003c/code\u003e).\n                              \u003ci\u003ename\u003c/i\u003e can be wildcarded (set to \u0027*\u0027)\n                              to allow for any name.\n\n      getLoginConfiguration - allow for the retrieval of the system-wide\n                              login Configuration.\n\n      createLoginConfiguration.{type} - allow code to obtain a Configuration\n                              object via\n                              \u003ccode\u003eConfiguration.getInstance\u003c/code\u003e.\n\n      setLoginConfiguration - allow for the setting of the system-wide\n                              login Configuration.\n\n      refreshLoginConfiguration - allow for the refreshing of the system-wide\n                              login Configuration.\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003ePlease note that granting this permission with the \"modifyPrincipals\", \"modifyPublicCredentials\" or \"modifyPrivateCredentials\" target allows a JAAS login module to populate principal or credential objects into the Subject. Although reading information inside the private credentials set requires a \u003ca href\u003d\"PrivateCredentialPermission.html\" title\u003d\"class in javax.security.auth\"\u003e\u003ccode\u003ePrivateCredentialPermission\u003c/code\u003e\u003c/a\u003e of the credential type to be granted, reading information inside the principals set and the public credentials set requires no additional permission. These objects can contain potentially sensitive information. For example, login modules that read local user information or perform a Kerberos login are able to add potentially sensitive information such as user ids, groups and domain names to the principals set. \u003c/p\u003e\n\u003cp\u003e The following target name has been deprecated in favor of \u003ccode\u003ecreateLoginContext.{name}\u003c/code\u003e. \u003c/p\u003e\n\u003cpre\u003e      createLoginContext -    allow code to instantiate a\n                              \u003ccode\u003eLoginContext\u003c/code\u003e.\n \u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#javax.security.auth.AuthPermission\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "implNote": [
      "Implementations may define additional target names, but should use naming conventions such as reverse domain name notation to avoid name clashes."
    ],
    "since": [
      "1.4"
    ]
  }
}