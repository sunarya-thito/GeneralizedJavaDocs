{
  "packageName": "java.time.zone",
  "simpleName": "TimeDefinition",
  "moduleName": "java.base",
  "type": "ENUM",
  "superClass": {
    "name": "java.lang.Enum",
    "parameters": [
      {
        "name": "java.time.zone.ZoneOffsetTransitionRule$TimeDefinition",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.time.zone.ZoneOffsetTransitionRule$TimeDefinition",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "values",
      "comment": "Returns an array containing the constants of this enum class, in the order they are declared.",
      "tagMap": {
        "return": [
          "an array containing the constants of this enum class, in the order they are declared"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.zone.ZoneOffsetTransitionRule$TimeDefinition",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "valueOf",
      "comment": "Returns the enum constant of this class with the specified name. The string must match exactly an identifier used to declare an enum constant in this class. (Extraneous whitespace characters are not permitted.)",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the enum constant to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this enum class has no constant with the specified name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the argument is null"
        ],
        "return": [
          "the enum constant with the specified name"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.LocalDateTime",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.time.LocalDateTime",
            "type": "Class"
          },
          "field": {
            "name": "dateTime"
          }
        },
        {
          "type": {
            "name": "java.time.ZoneOffset",
            "type": "Class"
          },
          "field": {
            "name": "standardOffset"
          }
        },
        {
          "type": {
            "name": "java.time.ZoneOffset",
            "type": "Class"
          },
          "field": {
            "name": "wallOffset"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "createDateTime",
      "comment": "Converts the specified local date-time to the local date-time actually seen on a wall clock. This method converts using the type of this enum. The output is defined relative to the \u0027before\u0027 offset of the transition. The UTC type uses the UTC offset. The STANDARD type uses the standard offset. The WALL type returns the input date-time. The result is intended for use with the wall-offset.",
      "tagMap": {
        "param": [
          "\u003ccode\u003edateTime\u003c/code\u003e - the local date-time, not null",
          "\u003ccode\u003estandardOffset\u003c/code\u003e - the standard offset, not null",
          "\u003ccode\u003ewallOffset\u003c/code\u003e - the wall offset, not null"
        ],
        "return": [
          "the date-time relative to the wall/before offset, not null"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 9,
  "name": "java.time.zone.ZoneOffsetTransitionRule$TimeDefinition",
  "comment": "A definition of the way a local time can be converted to the actual transition date-time. \n\u003cp\u003e Time zone rules are expressed in one of three ways: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003eRelative to UTC\u003c/li\u003e \n \u003cli\u003eRelative to the standard offset in force\u003c/li\u003e \n \u003cli\u003eRelative to the wall offset (what you would see on a clock on the wall)\u003c/li\u003e \n\u003c/ul\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {}
}