{
  "packageName": "java.time.temporal",
  "simpleName": "ChronoUnit",
  "moduleName": "java.base",
  "type": "ENUM",
  "superClass": {
    "name": "java.lang.Enum",
    "parameters": [
      {
        "name": "java.time.temporal.ChronoUnit",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.time.temporal.ChronoUnit",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "values",
      "comment": "Returns an array containing the constants of this enum class, in the order they are declared.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an array containing the constants of this enum class, in the order they are declared"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.temporal.ChronoUnit",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "valueOf",
      "comment": "Returns the enum constant of this class with the specified name. The string must match exactly an identifier used to declare an enum constant in this class. (Extraneous whitespace characters are not permitted.)",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the enum constant to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this enum class has no constant with the specified name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the argument is null"
        ],
        "return": [
          "the enum constant with the specified name"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.Duration",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDuration",
      "comment": "Gets the estimated duration of this unit in the ISO calendar system. All of the units in this class have an estimated duration. Days vary due to daylight saving time, while months have different lengths.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalUnit.html#getDuration()\"\u003egetDuration\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalUnit.html\" title\u003d\"interface in java.time.temporal\"\u003eTemporalUnit\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the estimated duration of this unit, not null"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isDurationEstimated",
      "comment": "Checks if the duration of the unit is an estimate. All time units in this class are considered to be accurate, while all date units in this class are considered to be estimated. This definition ignores leap seconds, but considers that Days vary due to daylight saving time and months have different lengths.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalUnit.html#isDurationEstimated()\"\u003eisDurationEstimated\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalUnit.html\" title\u003d\"interface in java.time.temporal\"\u003eTemporalUnit\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if the duration is estimated, false if accurate"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isDateBased",
      "comment": "Checks if this unit is a date unit. All units from days to eras inclusive are date-based. Time-based units and FOREVER return false.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalUnit.html#isDateBased()\"\u003eisDateBased\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalUnit.html\" title\u003d\"interface in java.time.temporal\"\u003eTemporalUnit\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if a date unit, false if a time unit"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isTimeBased",
      "comment": "Checks if this unit is a time unit. All units from nanos to half-days inclusive are time-based. Date-based units and FOREVER return false.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalUnit.html#isTimeBased()\"\u003eisTimeBased\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalUnit.html\" title\u003d\"interface in java.time.temporal\"\u003eTemporalUnit\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if a time unit, false if a date unit"
        ]
      }
    },
    {
      "returnType": {
        "name": "R",
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "R",
          "upperBounds": [
            {
              "name": "java.time.temporal.Temporal",
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addTo",
      "comment": "Description copied from interface: TemporalUnit",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eR\u003c/code\u003e - the type of the Temporal object"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalUnit.html#addTo(R,long)\"\u003eaddTo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalUnit.html\" title\u003d\"interface in java.time.temporal\"\u003eTemporalUnit\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etemporal\u003c/code\u003e - the temporal object to adjust, not null",
          "\u003ccode\u003eamount\u003c/code\u003e - the amount of this unit to add, positive or negative"
        ],
        "return": [
          "the adjusted temporal object, not null"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "between",
      "comment": "Description copied from interface: TemporalUnit",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalUnit.html#between(java.time.temporal.Temporal,java.time.temporal.Temporal)\"\u003ebetween\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalUnit.html\" title\u003d\"interface in java.time.temporal\"\u003eTemporalUnit\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etemporal1Inclusive\u003c/code\u003e - the base temporal object, not null",
          "\u003ccode\u003etemporal2Exclusive\u003c/code\u003e - the other temporal object, exclusive, not null"
        ],
        "return": [
          "the amount of time between temporal1Inclusive and temporal2Exclusive in terms of this unit; positive if temporal2Exclusive is later than temporal1Inclusive, negative if earlier"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Description copied from class: Enum",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Enum.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Enum.html\" title\u003d\"class in java.lang\"\u003eEnum\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/ChronoUnit.html\" title\u003d\"enum class in java.time.temporal\"\u003eChronoUnit\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalUnit.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalUnit.html\" title\u003d\"interface in java.time.temporal\"\u003eTemporalUnit\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the name of this enum constant"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.time.temporal.ChronoUnit",
  "comment": "A standard set of date periods units. \n\u003cp\u003e This set of units provide unit-based access to manipulate a date, time or date-time. The standard set of units can be extended by implementing \u003ca href\u003d\"TemporalUnit.html\" title\u003d\"interface in java.time.temporal\"\u003e\u003ccode\u003eTemporalUnit\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e These units are intended to be applicable in multiple calendar systems. For example, most non-ISO calendar systems define units of years, months and days, just with slightly different rules. The documentation of each unit explains how it operates.\u003c/p\u003e",
  "tagMap": {
    "implSpec": [
      "This is a final, immutable and thread-safe enum."
    ],
    "since": [
      "1.8"
    ]
  }
}