{
  "packageName": "java.time.format",
  "simpleName": "DecimalStyle",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.time.format.DecimalStyle",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "STANDARD",
      "comment": "The standard set of non-localized decimal style symbols. This uses standard ASCII characters for zero, positive, negative and a dot for the decimal point.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.util.Locale",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAvailableLocales",
      "comment": "Lists all the locales that are supported. The locale \u0027en_US\u0027 will always be present.",
      "annotations": [],
      "tagMap": {
        "return": [
          "a Set of Locales for which localization is supported"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.format.DecimalStyle",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "ofDefaultLocale",
      "comment": "Obtains the DecimalStyle for the default FORMAT locale. This method provides access to locale sensitive decimal style symbols. This is equivalent to calling of(Locale.getDefault(Locale.Category.FORMAT)).",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.Category.html#FORMAT\"\u003e\u003ccode\u003eLocale.Category.FORMAT\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the decimal style, not null"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.format.DecimalStyle",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Obtains the DecimalStyle for the specified locale. This method provides access to locale sensitive decimal style symbols. If the locale contains \"nu\" (Numbering System) and/or \"rg\" (Region Override) Unicode extensions, returned instance will reflect the values specified with those extensions. If both \"nu\" and \"rg\" are specified, the value from the \"nu\" extension supersedes the implicit one from the \"rg\" extension.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elocale\u003c/code\u003e - the locale, not null"
        ],
        "return": [
          "the decimal style, not null"
        ]
      }
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getZeroDigit",
      "comment": "Gets the character that represents zero. The character used to represent digits may vary by culture. This method specifies the zero character to use, which implies the characters for one to nine.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the character for zero"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.format.DecimalStyle",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "withZeroDigit",
      "comment": "Returns a copy of the info with a new character that represents zero. The character used to represent digits may vary by culture. This method specifies the zero character to use, which implies the characters for one to nine.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ezeroDigit\u003c/code\u003e - the character for zero"
        ],
        "return": [
          "a copy with a new character that represents zero, not null"
        ]
      }
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPositiveSign",
      "comment": "Gets the character that represents the positive sign. The character used to represent a positive number may vary by culture. This method specifies the character to use.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the character for the positive sign"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.format.DecimalStyle",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "withPositiveSign",
      "comment": "Returns a copy of the info with a new character that represents the positive sign. The character used to represent a positive number may vary by culture. This method specifies the character to use.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epositiveSign\u003c/code\u003e - the character for the positive sign"
        ],
        "return": [
          "a copy with a new character that represents the positive sign, not null"
        ]
      }
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNegativeSign",
      "comment": "Gets the character that represents the negative sign. The character used to represent a negative number may vary by culture. This method specifies the character to use.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the character for the negative sign"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.format.DecimalStyle",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "withNegativeSign",
      "comment": "Returns a copy of the info with a new character that represents the negative sign. The character used to represent a negative number may vary by culture. This method specifies the character to use.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enegativeSign\u003c/code\u003e - the character for the negative sign"
        ],
        "return": [
          "a copy with a new character that represents the negative sign, not null"
        ]
      }
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDecimalSeparator",
      "comment": "Gets the character that represents the decimal point. The character used to represent a decimal point may vary by culture. This method specifies the character to use.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the character for the decimal point"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.format.DecimalStyle",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "withDecimalSeparator",
      "comment": "Returns a copy of the info with a new character that represents the decimal point. The character used to represent a decimal point may vary by culture. This method specifies the character to use.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edecimalSeparator\u003c/code\u003e - the character for the decimal point"
        ],
        "return": [
          "a copy with a new character that represents the decimal point, not null"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Checks if this DecimalStyle is equal to another DecimalStyle.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to check, null returns false"
        ],
        "return": [
          "true if this is equal to the other date"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "A hash code for this DecimalStyle.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a suitable hash code"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string describing this DecimalStyle.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string description, not null"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "java.time.format.DecimalStyle",
  "comment": "Localized decimal style used in date and time formatting. \n\u003cp\u003e A significant part of dealing with dates and times is the localization. This class acts as a central point for accessing the information.\u003c/p\u003e",
  "tagMap": {
    "implSpec": [
      "This class is immutable and thread-safe."
    ],
    "since": [
      "1.8"
    ]
  }
}