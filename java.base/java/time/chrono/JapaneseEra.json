{
  "packageName": "java.time.chrono",
  "simpleName": "JapaneseEra",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.time.chrono.JapaneseEra",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "MEIJI",
      "comment": "The singleton instance for the \u0027Meiji\u0027 era (1868-01-01 - 1912-07-29) which has the value -1.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.time.chrono.JapaneseEra",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TAISHO",
      "comment": "The singleton instance for the \u0027Taisho\u0027 era (1912-07-30 - 1926-12-24) which has the value 0.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.time.chrono.JapaneseEra",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SHOWA",
      "comment": "The singleton instance for the \u0027Showa\u0027 era (1926-12-25 - 1989-01-07) which has the value 1.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.time.chrono.JapaneseEra",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "HEISEI",
      "comment": "The singleton instance for the \u0027Heisei\u0027 era (1989-01-08 - 2019-04-30) which has the value 2.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.time.chrono.JapaneseEra",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "REIWA",
      "comment": "The singleton instance for the \u0027Reiwa\u0027 era (2019-05-01 - ) which has the value 3. The end date of this era is not specified, unless the Japanese Government defines it.",
      "tagMap": {
        "since": [
          "13"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.chrono.JapaneseEra",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "japaneseEra"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Obtains an instance of JapaneseEra from an int value. The value 1 is associated with the \u0027Showa\u0027 era, because it contains 1970-01-01 (ISO calendar system). The values -1 and 0 are associated with two earlier eras, Meiji and Taisho, respectively. A value greater than 1 is associated with a later era, beginning with Heisei (2). Every instance of JapaneseEra that is returned from the values() method has an int value (available via Era.getValue() which is accepted by this method.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ejapaneseEra\u003c/code\u003e - the era to represent"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/DateTimeException.html\" title\u003d\"class in java.time\"\u003eDateTimeException\u003c/a\u003e\u003c/code\u003e - if the value is invalid"
        ],
        "return": [
          "the \n\u003ccode\u003eJapaneseEra\u003c/code\u003e singleton, not null"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.chrono.JapaneseEra",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "japaneseEra"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "valueOf",
      "comment": "Returns the JapaneseEra with the name. The string must match exactly the name of the era. (Extraneous whitespace characters are not permitted.) Valid era names are the names of eras returned from values().",
      "tagMap": {
        "param": [
          "\u003ccode\u003ejapaneseEra\u003c/code\u003e - the japaneseEra name; non-null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if there is not JapaneseEra with the specified name"
        ],
        "return": [
          "the \n\u003ccode\u003eJapaneseEra\u003c/code\u003e singleton, never null"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.chrono.JapaneseEra",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "values",
      "comment": "Returns an array of JapaneseEras. The array may contain eras defined by the Japanese government beyond the known era singletons. This method may be used to iterate over the JapaneseEras as follows:  for (JapaneseEra c : JapaneseEra.values())\n     System.out.println(c);",
      "tagMap": {
        "return": [
          "an array of JapaneseEras"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.time.format.TextStyle",
            "type": "Class"
          },
          "field": {
            "name": "style"
          }
        },
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "locale"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDisplayName",
      "comment": "Gets the textual representation of this era. This returns the textual name used to identify the era, suitable for presentation to the user. The parameters control the style of the returned text and the locale. If no textual mapping is found then the numeric value is returned.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/chrono/Era.html#getDisplayName(java.time.format.TextStyle,java.util.Locale)\"\u003egetDisplayName\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/chrono/Era.html\" title\u003d\"interface in java.time.chrono\"\u003eEra\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003estyle\u003c/code\u003e - the style of the text required, not null",
          "\u003ccode\u003elocale\u003c/code\u003e - the locale to use, not null"
        ],
        "return": [
          "the text value of the era, not null"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getValue",
      "comment": "Gets the numeric era int value. The SHOWA era that contains 1970-01-01 (ISO calendar system) has the value 1. Later eras are numbered from 2 (HEISEI). Earlier eras are numbered 0 (TAISHO), -1 (MEIJI)).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/chrono/Era.html#getValue()\"\u003egetValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/chrono/Era.html\" title\u003d\"interface in java.time.chrono\"\u003eEra\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the era value"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.time.temporal.ValueRange",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.time.temporal.TemporalField",
            "type": "Class"
          },
          "field": {
            "name": "field"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "range",
      "comment": "Gets the range of valid values for the specified field. The range object expresses the minimum and maximum valid values for a field. This era is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown. If the field is a ChronoField then the query is implemented here. The ERA field returns the range. All other ChronoField instances will throw an UnsupportedTemporalTypeException. If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.rangeRefinedBy(TemporalAccessor) passing this as the argument. Whether the range can be obtained is determined by the field. The range of valid Japanese eras can change over time due to the nature of the Japanese calendar system.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/chrono/Era.html#range(java.time.temporal.TemporalField)\"\u003erange\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/chrono/Era.html\" title\u003d\"interface in java.time.chrono\"\u003eEra\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalAccessor.html#range(java.time.temporal.TemporalField)\"\u003erange\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/TemporalAccessor.html\" title\u003d\"interface in java.time.temporal\"\u003eTemporalAccessor\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efield\u003c/code\u003e - the field to query the range for, not null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/DateTimeException.html\" title\u003d\"class in java.time\"\u003eDateTimeException\u003c/a\u003e\u003c/code\u003e - if the range for the field cannot be obtained",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/temporal/UnsupportedTemporalTypeException.html\" title\u003d\"class in java.time.temporal\"\u003eUnsupportedTemporalTypeException\u003c/a\u003e\u003c/code\u003e - if the unit is not supported"
        ],
        "return": [
          "the range of valid values for the field, not null"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "java.time.chrono.JapaneseEra",
  "comment": "An era in the Japanese Imperial calendar system. \n\u003cp\u003e The Japanese government defines the official name and start date of each era. Eras are consecutive and their date ranges do not overlap, so the end date of one era is always the day before the start date of the next era. \u003c/p\u003e\n\u003cp\u003e The Java SE Platform supports all eras defined by the Japanese government, beginning with the Meiji era. Each era is identified in the Platform by an integer value and a name. The \u003ca href\u003d\"#of(int)\"\u003e\u003ccode\u003eof(int)\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"#valueOf(java.lang.String)\"\u003e\u003ccode\u003evalueOf(String)\u003c/code\u003e\u003c/a\u003e methods may be used to obtain a singleton instance of \u003ccode\u003eJapaneseEra\u003c/code\u003e for each era. The \u003ca href\u003d\"#values()\"\u003e\u003ccode\u003evalues()\u003c/code\u003e\u003c/a\u003e method returns the singleton instances of all supported eras. \u003c/p\u003e\n\u003cp\u003e For convenience, this class declares a number of public static final fields that refer to singleton instances returned by the \u003ca href\u003d\"#values()\"\u003e\u003ccode\u003evalues()\u003c/code\u003e\u003c/a\u003e method.\u003c/p\u003e",
  "tagMap": {
    "implSpec": [
      "This class is immutable and thread-safe."
    ],
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.time.chrono.JapaneseEra\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "apiNote": [
      "The fields declared in this class may evolve over time, in line with the results of the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/time/chrono/JapaneseEra.html#values()\"\u003e\u003ccode\u003evalues()\u003c/code\u003e\u003c/a\u003e method. However, there is not necessarily a 1:1 correspondence between the fields and the singleton instances., The Japanese government may announce a new era and define its start date but not its official name. In this scenario, the singleton instance that represents the new era may return a name that is not stable until the official name is defined. Developers should exercise caution when relying on the name returned by any singleton instance that does not correspond to a public static final field."
    ],
    "since": [
      "1.8"
    ]
  }
}