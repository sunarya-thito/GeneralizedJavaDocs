{
  "packageName": "java.util",
  "simpleName": "Builder",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.Locale$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "name": "locale",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLocale",
      "comment": "Resets the Builder to match the provided locale. Existing state is discarded. All fields of the locale must be well-formed, see Locale. Locales with any ill-formed fields cause IllformedLocaleException to be thrown, except for the following three cases which are accepted for compatibility reasons: Locale(\"ja\", \"JP\", \"JP\") is treated as \"ja-JP-u-ca-japanese\" Locale(\"th\", \"TH\", \"TH\") is treated as \"th-TH-u-nu-thai\" Locale(\"no\", \"NO\", \"NY\") is treated as \"nn-NO\"",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elocale\u003c/code\u003e - the locale"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/IllformedLocaleException.html\" title\u003d\"class in java.util\"\u003eIllformedLocaleException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elocale\u003c/code\u003e has any ill-formed fields.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elocale\u003c/code\u003e is null."
        ],
        "return": [
          "This builder."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Locale$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "languageTag",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLanguageTag",
      "comment": "Resets the Builder to match the provided IETF BCP 47 language tag. Discards the existing state. Null and the empty string cause the builder to be reset, like clear(). Grandfathered tags (see Locale.forLanguageTag(java.lang.String)) are converted to their canonical form before being processed. Otherwise, the language tag must be well-formed (see Locale) or an exception is thrown (unlike Locale.forLanguageTag, which just discards ill-formed and following portions of the tag).",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.html#forLanguageTag(java.lang.String)\"\u003e\u003ccode\u003eLocale.forLanguageTag(String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elanguageTag\u003c/code\u003e - the language tag"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/IllformedLocaleException.html\" title\u003d\"class in java.util\"\u003eIllformedLocaleException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elanguageTag\u003c/code\u003e is ill-formed"
        ],
        "return": [
          "This builder."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Locale$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "language",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLanguage",
      "comment": "Sets the language. If language is the empty string or null, the language in this Builder is removed. Otherwise, the language must be well-formed or an exception is thrown. The typical language value is a two or three-letter language code as defined in ISO639.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elanguage\u003c/code\u003e - the language"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/IllformedLocaleException.html\" title\u003d\"class in java.util\"\u003eIllformedLocaleException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elanguage\u003c/code\u003e is ill-formed"
        ],
        "return": [
          "This builder."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Locale$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "script",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setScript",
      "comment": "Sets the script. If script is null or the empty string, the script in this Builder is removed. Otherwise, the script must be well-formed or an exception is thrown. The typical script value is a four-letter script code as defined by ISO 15924.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003escript\u003c/code\u003e - the script"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/IllformedLocaleException.html\" title\u003d\"class in java.util\"\u003eIllformedLocaleException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003escript\u003c/code\u003e is ill-formed"
        ],
        "return": [
          "This builder."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Locale$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "region",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setRegion",
      "comment": "Sets the region. If region is null or the empty string, the region in this Builder is removed. Otherwise, the region must be well-formed or an exception is thrown. The typical region value is a two-letter ISO 3166 code or a three-digit UN M.49 area code. The country value in the Locale created by the Builder is always normalized to upper case.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eregion\u003c/code\u003e - the region"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/IllformedLocaleException.html\" title\u003d\"class in java.util\"\u003eIllformedLocaleException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eregion\u003c/code\u003e is ill-formed"
        ],
        "return": [
          "This builder."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Locale$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "variant",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setVariant",
      "comment": "Sets the variant. If variant is null or the empty string, the variant in this Builder is removed. Otherwise, it must consist of one or more well-formed subtags, or an exception is thrown. Note: This method checks if variant satisfies the IETF BCP 47 variant subtag\u0027s syntax requirements, and normalizes the value to lowercase letters. However, the Locale class does not impose any syntactic restriction on variant, and the variant value in Locale is case sensitive. To set such a variant, use a Locale constructor.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003evariant\u003c/code\u003e - the variant"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/IllformedLocaleException.html\" title\u003d\"class in java.util\"\u003eIllformedLocaleException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003evariant\u003c/code\u003e is ill-formed"
        ],
        "return": [
          "This builder."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Locale$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "char",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setExtension",
      "comment": "Sets the extension for the given key. If the value is null or the empty string, the extension is removed. Otherwise, the extension must be well-formed or an exception is thrown. Note: The key UNICODE_LOCALE_EXTENSION (\u0027u\u0027) is used for the Unicode locale extension. Setting a value for this key replaces any existing Unicode locale key/type pairs with those defined in the extension. Note: The key PRIVATE_USE_EXTENSION (\u0027x\u0027) is used for the private use code. To be well-formed, the value for this key needs only to have subtags of one to eight alphanumeric characters, not two to eight as in the general case.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.Builder.html#setUnicodeLocaleKeyword(java.lang.String,java.lang.String)\"\u003e\u003ccode\u003esetUnicodeLocaleKeyword(String, String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the extension key",
          "\u003ccode\u003evalue\u003c/code\u003e - the extension value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/IllformedLocaleException.html\" title\u003d\"class in java.util\"\u003eIllformedLocaleException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ekey\u003c/code\u003e is illegal or \n\u003ccode\u003evalue\u003c/code\u003e is ill-formed"
        ],
        "return": [
          "This builder."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Locale$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setUnicodeLocaleKeyword",
      "comment": "Sets the Unicode locale keyword type for the given key. If the type is null, the Unicode keyword is removed. Otherwise, the key must be non-null and both key and type must be well-formed or an exception is thrown. Keys and types are converted to lower case. Note:Setting the \u0027u\u0027 extension via setExtension(char, java.lang.String) replaces all Unicode locale keywords with those defined in the extension.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.Builder.html#setExtension(char,java.lang.String)\"\u003e\u003ccode\u003esetExtension(char, String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the Unicode locale key",
          "\u003ccode\u003etype\u003c/code\u003e - the Unicode locale type"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/IllformedLocaleException.html\" title\u003d\"class in java.util\"\u003eIllformedLocaleException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ekey\u003c/code\u003e or \n\u003ccode\u003etype\u003c/code\u003e is ill-formed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ekey\u003c/code\u003e is null"
        ],
        "return": [
          "This builder."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Locale$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "attribute",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addUnicodeLocaleAttribute",
      "comment": "Adds a unicode locale attribute, if not already present, otherwise has no effect. The attribute must not be null and must be well-formed or an exception is thrown.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.Builder.html#setExtension(char,java.lang.String)\"\u003e\u003ccode\u003esetExtension(char, String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eattribute\u003c/code\u003e - the attribute"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eattribute\u003c/code\u003e is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/IllformedLocaleException.html\" title\u003d\"class in java.util\"\u003eIllformedLocaleException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eattribute\u003c/code\u003e is ill-formed"
        ],
        "return": [
          "This builder."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Locale$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "attribute",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "removeUnicodeLocaleAttribute",
      "comment": "Removes a unicode locale attribute, if present, otherwise has no effect. The attribute must not be null and must be well-formed or an exception is thrown. Attribute comparison for removal is case-insensitive.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.Builder.html#setExtension(char,java.lang.String)\"\u003e\u003ccode\u003esetExtension(char, String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eattribute\u003c/code\u003e - the attribute"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eattribute\u003c/code\u003e is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/IllformedLocaleException.html\" title\u003d\"class in java.util\"\u003eIllformedLocaleException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eattribute\u003c/code\u003e is ill-formed"
        ],
        "return": [
          "This builder."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Locale$Builder",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clear",
      "comment": "Resets the builder to its initial, empty state.",
      "annotations": [],
      "tagMap": {
        "return": [
          "This builder."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Locale$Builder",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clearExtensions",
      "comment": "Resets the extensions to their initial, empty state. Language, script, region and variant are unchanged.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.Builder.html#setExtension(char,java.lang.String)\"\u003e\u003ccode\u003esetExtension(char, String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "This builder."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Locale",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "build",
      "comment": "Returns an instance of Locale created from the fields set on this builder. This applies the conversions listed in Locale.forLanguageTag(java.lang.String) when constructing a Locale. (Grandfathered tags are handled in setLanguageTag(java.lang.String).)",
      "annotations": [],
      "tagMap": {
        "return": [
          "A Locale."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an empty Builder. The default value of all fields, extensions, and private use information is the empty string.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 25,
  "name": "java.util.Locale$Builder",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.html#forLanguageTag(java.lang.String)\"\u003e\u003ccode\u003eLocale.forLanguageTag(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.7"
    ]
  }
}