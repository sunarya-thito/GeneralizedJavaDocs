{
  "packageName": "java.util",
  "simpleName": "Entry",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "owner": "java.util.Map$Entry",
        "name": "K",
        "type": "Variable"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getKey",
      "comment": "Returns the key corresponding to this entry.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - implementations may, but are not required to, throw this exception if the entry has been removed from the backing map."
        ],
        "return": [
          "the key corresponding to this entry"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.Map$Entry",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getValue",
      "comment": "Returns the value corresponding to this entry. If the mapping has been removed from the backing map (by the iterator\u0027s remove operation), the results of this call are undefined.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - implementations may, but are not required to, throw this exception if the entry has been removed from the backing map."
        ],
        "return": [
          "the value corresponding to this entry"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.Map$Entry",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "type": {
            "owner": "java.util.Map$Entry",
            "name": "V",
            "type": "Variable"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setValue",
      "comment": "Replaces the value corresponding to this entry with the specified value (optional operation). (Writes through to the map.) The behavior of this call is undefined if the mapping has already been removed from the map (by the iterator\u0027s remove operation).",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - new value to be stored in this entry"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eput\u003c/code\u003e operation is not supported by the backing map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the class of the specified value prevents it from being stored in the backing map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the backing map does not permit null values, and the specified value is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if some property of this value prevents it from being stored in the backing map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - implementations may, but are not required to, throw this exception if the entry has been removed from the backing map."
        ],
        "return": [
          "old value corresponding to the entry"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "o"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "equals",
      "comment": "Compares the specified object with this entry for equality. Returns true if the given object is also a map entry and the two entries represent the same mapping. More formally, two entries e1 and e2 represent the same mapping if      (e1.getKey()\u003d\u003dnull ?\n      e2.getKey()\u003d\u003dnull : e1.getKey().equals(e2.getKey()))  \u0026\u0026\n     (e1.getValue()\u003d\u003dnull ?\n      e2.getValue()\u003d\u003dnull : e1.getValue().equals(e2.getValue()))\n This ensures that the equals method works properly across different implementations of the Map.Entry interface.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eo\u003c/code\u003e - object to be compared for equality with this map entry"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified object is equal to this map entry"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "hashCode",
      "comment": "Returns the hash code value for this map entry. The hash code of a map entry e is defined to be:      (e.getKey()\u003d\u003dnull   ? 0 : e.getKey().hashCode()) ^\n     (e.getValue()\u003d\u003dnull ? 0 : e.getValue().hashCode())\n This ensures that e1.equals(e2) implies that e1.hashCode()\u003d\u003de2.hashCode() for any two Entries e1 and e2, as required by the general contract of Object.hashCode.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.Entry.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eequals(Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the hash code value for this map entry"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Comparator",
        "parameters": [
          {
            "name": "java.util.Map$Entry",
            "parameters": [
              {
                "name": "K",
                "type": "Class"
              },
              {
                "name": "V",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "genericParameters": [
        {
          "name": "K",
          "upperBounds": [
            {
              "name": "java.lang.Comparable",
              "parameters": [
                {
                  "lowerBounds": [
                    {
                      "name": "K",
                      "type": "Class"
                    }
                  ],
                  "type": "Wildcard"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        },
        {
          "name": "V",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "comparingByKey",
      "comment": "Returns a comparator that compares Map.Entry in natural order on key. The returned comparator is serializable and throws NullPointerException when comparing an entry with a null key.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eK\u003c/code\u003e - the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eComparable\u003c/code\u003e\u003c/a\u003e type of then map keys",
          "\u003ccode\u003eV\u003c/code\u003e - the type of the map values"
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eComparable\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a comparator that compares \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.Entry.html\" title\u003d\"interface in java.util\"\u003e\u003ccode\u003eMap.Entry\u003c/code\u003e\u003c/a\u003e in natural order on key."
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Comparator",
        "parameters": [
          {
            "name": "java.util.Map$Entry",
            "parameters": [
              {
                "name": "K",
                "type": "Class"
              },
              {
                "name": "V",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "genericParameters": [
        {
          "name": "K",
          "type": "Variable"
        },
        {
          "name": "V",
          "upperBounds": [
            {
              "name": "java.lang.Comparable",
              "parameters": [
                {
                  "lowerBounds": [
                    {
                      "name": "V",
                      "type": "Class"
                    }
                  ],
                  "type": "Wildcard"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "comparingByValue",
      "comment": "Returns a comparator that compares Map.Entry in natural order on value. The returned comparator is serializable and throws NullPointerException when comparing an entry with null values.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eK\u003c/code\u003e - the type of the map keys",
          "\u003ccode\u003eV\u003c/code\u003e - the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eComparable\u003c/code\u003e\u003c/a\u003e type of the map values"
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eComparable\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a comparator that compares \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.Entry.html\" title\u003d\"interface in java.util\"\u003e\u003ccode\u003eMap.Entry\u003c/code\u003e\u003c/a\u003e in natural order on value."
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Comparator",
        "parameters": [
          {
            "name": "java.util.Map$Entry",
            "parameters": [
              {
                "name": "K",
                "type": "Class"
              },
              {
                "name": "V",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Comparator",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "name": "K",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "cmp"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "K",
          "type": "Variable"
        },
        {
          "name": "V",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "comparingByKey",
      "comment": "Returns a comparator that compares Map.Entry by key using the given Comparator. The returned comparator is serializable if the specified comparator is also serializable.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eK\u003c/code\u003e - the type of the map keys",
          "\u003ccode\u003eV\u003c/code\u003e - the type of the map values"
        ],
        "param": [
          "\u003ccode\u003ecmp\u003c/code\u003e - the key \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Comparator.html\" title\u003d\"interface in java.util\"\u003e\u003ccode\u003eComparator\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a comparator that compares \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.Entry.html\" title\u003d\"interface in java.util\"\u003e\u003ccode\u003eMap.Entry\u003c/code\u003e\u003c/a\u003e by the key."
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Comparator",
        "parameters": [
          {
            "name": "java.util.Map$Entry",
            "parameters": [
              {
                "name": "K",
                "type": "Class"
              },
              {
                "name": "V",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Comparator",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "name": "V",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "cmp"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "K",
          "type": "Variable"
        },
        {
          "name": "V",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "comparingByValue",
      "comment": "Returns a comparator that compares Map.Entry by value using the given Comparator. The returned comparator is serializable if the specified comparator is also serializable.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eK\u003c/code\u003e - the type of the map keys",
          "\u003ccode\u003eV\u003c/code\u003e - the type of the map values"
        ],
        "param": [
          "\u003ccode\u003ecmp\u003c/code\u003e - the value \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Comparator.html\" title\u003d\"interface in java.util\"\u003e\u003ccode\u003eComparator\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a comparator that compares \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.Entry.html\" title\u003d\"interface in java.util\"\u003e\u003ccode\u003eMap.Entry\u003c/code\u003e\u003c/a\u003e by the value."
        ],
        "since": [
          "1.8"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "K",
      "type": "Variable"
    },
    {
      "name": "V",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 521,
  "name": "java.util.Map$Entry",
  "comment": "A map entry (key-value pair). The \n\u003ccode\u003eMap.entrySet\u003c/code\u003e method returns a collection-view of the map, whose elements are of this class. The \n\u003ci\u003eonly\u003c/i\u003e way to obtain a reference to a map entry is from the iterator of this collection-view. These \n\u003ccode\u003eMap.Entry\u003c/code\u003e objects are valid \n\u003ci\u003eonly\u003c/i\u003e for the duration of the iteration; more formally, the behavior of a map entry is undefined if the backing map has been modified after the entry was returned by the iterator, except through the \n\u003ccode\u003esetValue\u003c/code\u003e operation on the map entry.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#entrySet()\"\u003e\u003ccode\u003eMap.entrySet()\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}