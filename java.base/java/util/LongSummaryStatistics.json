{
  "packageName": "java.util",
  "simpleName": "LongSummaryStatistics",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "accept",
      "comment": "Records a new int value into the summary information.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/function/IntConsumer.html#accept(int)\"\u003eaccept\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/function/IntConsumer.html\" title\u003d\"interface in java.util.function\"\u003eIntConsumer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the input value"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "accept",
      "comment": "Records a new long value into the summary information.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/function/LongConsumer.html#accept(long)\"\u003eaccept\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/function/LongConsumer.html\" title\u003d\"interface in java.util.function\"\u003eLongConsumer\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the input value"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.LongSummaryStatistics",
            "type": "Class"
          },
          "name": "other",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "combine",
      "comment": "Combines the state of another LongSummaryStatistics into this one.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - another \n\u003ccode\u003eLongSummaryStatistics\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eother\u003c/code\u003e is null"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getCount",
      "comment": "Returns the count of values recorded.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the count of values"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getSum",
      "comment": "Returns the sum of values recorded, or zero if no values have been recorded.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the sum of values, or zero if none"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getMin",
      "comment": "Returns the minimum value recorded, or Long.MAX_VALUE if no values have been recorded.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the minimum value, or \n\u003ccode\u003eLong.MAX_VALUE\u003c/code\u003e if none"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getMax",
      "comment": "Returns the maximum value recorded, or Long.MIN_VALUE if no values have been recorded",
      "annotations": [],
      "tagMap": {
        "return": [
          "the maximum value, or \n\u003ccode\u003eLong.MIN_VALUE\u003c/code\u003e if none"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getAverage",
      "comment": "Returns the arithmetic mean of values recorded, or zero if no values have been recorded.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The arithmetic mean of values, or zero if none"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a non-empty string representation of this object suitable for debugging. The exact presentation format is unspecified and may vary between implementations and versions.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of the object."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an empty instance with zero count, zero sum, Long.MAX_VALUE min, Long.MIN_VALUE max and zero average.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "count",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "min",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "max",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "long",
            "type": "Class"
          },
          "name": "sum",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a non-empty instance with the specified count, min, max, and sum. If count is zero then the remaining arguments are ignored and an empty instance is constructed. If the arguments are inconsistent then an IllegalArgumentException is thrown. The necessary consistent argument conditions are: count \u003e\u003d 0 min \u003c\u003d max",
      "annotations": [],
      "tagMap": {
        "apiNote": [
          "The enforcement of argument correctness means that the retrieved set of recorded values obtained from a \n\u003ccode\u003eLongSummaryStatistics\u003c/code\u003e source instance may not be a legal set of arguments for this constructor due to arithmetic overflow of the source\u0027s recorded count of values. The consistent argument conditions are not sufficient to prevent the creation of an internally inconsistent instance. An example of such a state would be an instance with: \n\u003ccode\u003ecount\u003c/code\u003e \u003d 2, \n\u003ccode\u003emin\u003c/code\u003e \u003d 1, \n\u003ccode\u003emax\u003c/code\u003e \u003d 2, and \n\u003ccode\u003esum\u003c/code\u003e \u003d 0."
        ],
        "param": [
          "\u003ccode\u003ecount\u003c/code\u003e - the count of values",
          "\u003ccode\u003emin\u003c/code\u003e - the minimum value",
          "\u003ccode\u003emax\u003c/code\u003e - the maximum value",
          "\u003ccode\u003esum\u003c/code\u003e - the sum of all values"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the arguments are inconsistent"
        ],
        "since": [
          "10"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.util.LongSummaryStatistics",
  "annotations": [],
  "tagMap": {
    "implNote": [
      "This implementation is not thread safe. However, it is safe to use \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/stream/Collectors.html#summarizingLong(java.util.function.ToLongFunction)\"\u003e\u003ccode\u003eCollectors.summarizingLong()\u003c/code\u003e\u003c/a\u003e on a parallel stream, because the parallel implementation of \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/stream/Stream.html#collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)\"\u003e\u003ccode\u003eStream.collect()\u003c/code\u003e\u003c/a\u003e provides the necessary partitioning, isolation, and merging of results for safe and efficient parallel execution. \n\u003cp\u003eThis implementation does not check for overflow of the count or the sum.\u003c/p\u003e"
    ],
    "since": [
      "1.8"
    ]
  }
}