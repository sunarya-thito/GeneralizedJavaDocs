{
  "packageName": "java.util",
  "simpleName": "IllegalFormatPrecisionException",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.IllegalFormatException",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPrecision",
      "comment": "Returns the precision. If the precision isn\u0027t representable by an int, then will return Integer.MIN_VALUE.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The precision"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "p",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an instance of this class with the specified precision.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ep\u003c/code\u003e - The precision"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.util.IllegalFormatPrecisionException",
  "comment": "Unchecked exception thrown when the precision is a negative value other than \n\u003ccode\u003e-1\u003c/code\u003e, the conversion does not support a precision, or the value is otherwise unsupported. If the precision is not representable by an \n\u003ccode\u003eint\u003c/code\u003e type, then the value \n\u003ccode\u003eInteger.MIN_VALUE\u003c/code\u003e will be used in the exception.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.util.IllegalFormatPrecisionException\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}