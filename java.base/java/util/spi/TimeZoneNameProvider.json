{
  "packageName": "java.util.spi",
  "simpleName": "TimeZoneNameProvider",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.spi.LocaleServiceProvider",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "ID"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "daylight"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "style"
          }
        },
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "locale"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getDisplayName",
      "comment": "Returns a name for the given time zone ID that\u0027s suitable for presentation to the user in the specified locale. The given time zone ID is \"GMT\" or one of the names defined using \"Zone\" entries in the \"tz database\", a public domain time zone database at https://www.iana.org/time-zones. The data of this database is contained in a file whose name starts with \"tzdata\", and the specification of the data format is part of the zic.8 man page, which is contained in a file whose name starts with \"tzcode\". If daylight is true, the method should return a name appropriate for daylight saving time even if the specified time zone has not observed daylight saving time in the past.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#getDisplayName(boolean,int,java.util.Locale)\"\u003e\u003ccode\u003eTimeZone.getDisplayName(boolean, int, java.util.Locale)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eID\u003c/code\u003e - a time zone ID string",
          "\u003ccode\u003edaylight\u003c/code\u003e - if true, return the daylight saving name.",
          "\u003ccode\u003estyle\u003c/code\u003e - either \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#LONG\"\u003e\u003ccode\u003eTimeZone.LONG\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#SHORT\"\u003e\u003ccode\u003eTimeZone.SHORT\u003c/code\u003e\u003c/a\u003e",
          "\u003ccode\u003elocale\u003c/code\u003e - the desired locale"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003estyle\u003c/code\u003e is invalid, or \n\u003ccode\u003elocale\u003c/code\u003e isn\u0027t one of the locales returned from \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/spi/LocaleServiceProvider.html#getAvailableLocales()\"\u003e\u003ccode\u003egetAvailableLocales()\u003c/code\u003e\u003c/a\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eID\u003c/code\u003e or \n\u003ccode\u003elocale\u003c/code\u003e is null"
        ],
        "return": [
          "the human-readable name of the given time zone in the given locale, or null if it\u0027s not available."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "ID"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "style"
          }
        },
        {
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "field": {
            "name": "locale"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getGenericDisplayName",
      "comment": "Returns a generic name for the given time zone ID that\u0027s suitable for presentation to the user in the specified locale. Generic time zone names are neutral from standard time and daylight saving time. For example, \"PT\" is the short generic name of time zone ID America/Los_Angeles, while its short standard time and daylight saving time names are \"PST\" and \"PDT\", respectively. Refer to getDisplayName for valid time zone IDs. The default implementation of this method returns null.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eID\u003c/code\u003e - a time zone ID string",
          "\u003ccode\u003estyle\u003c/code\u003e - either \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#LONG\"\u003e\u003ccode\u003eTimeZone.LONG\u003c/code\u003e\u003c/a\u003e or \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#SHORT\"\u003e\u003ccode\u003eTimeZone.SHORT\u003c/code\u003e\u003c/a\u003e",
          "\u003ccode\u003elocale\u003c/code\u003e - the desired locale"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003estyle\u003c/code\u003e is invalid, or \n\u003ccode\u003elocale\u003c/code\u003e isn\u0027t one of the locales returned from \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/spi/LocaleServiceProvider.html#getAvailableLocales()\"\u003e\u003ccode\u003egetAvailableLocales()\u003c/code\u003e\u003c/a\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eID\u003c/code\u003e or \n\u003ccode\u003elocale\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the human-readable generic name of the given time zone in the given locale, or \n\u003ccode\u003enull\u003c/code\u003e if it\u0027s not available."
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Sole constructor. (For invocation by subclass constructors, typically implicit.)",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.util.spi.TimeZoneNameProvider",
  "comment": "An abstract class for service providers that provide localized time zone names for the \n\u003ca href\u003d\"../TimeZone.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eTimeZone\u003c/code\u003e\u003c/a\u003e class. The localized time zone names available from the implementations of this class are also the source for the \n\u003ca href\u003d\"../../text/DateFormatSymbols.html#getZoneStrings()\"\u003e\u003ccode\u003eDateFormatSymbols.getZoneStrings()\u003c/code\u003e\u003c/a\u003e method.",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}