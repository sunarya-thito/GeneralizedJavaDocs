{
  "packageName": "java.util.zip",
  "simpleName": "GZIPOutputStream",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.zip.DeflaterOutputStream",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.util.zip.CRC32",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "crc",
      "comment": "CRC-32 of uncompressed data.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "buf",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "off",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "len",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "write",
      "comment": "Writes array of bytes to the compressed output stream. This method will block until all the bytes are written.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterOutputStream.html#write(int)\"\u003e\u003ccode\u003eFilterOutputStream.write(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/zip/DeflaterOutputStream.html#write(byte%5B%5D,int,int)\"\u003ewrite\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/zip/DeflaterOutputStream.html\" title\u003d\"class in java.util.zip\"\u003eDeflaterOutputStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ebuf\u003c/code\u003e - the data to be written",
          "\u003ccode\u003eoff\u003c/code\u003e - the start offset of the data",
          "\u003ccode\u003elen\u003c/code\u003e - the length of the data"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error has occurred."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "finish",
      "comment": "Finishes writing compressed data to the output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/zip/DeflaterOutputStream.html#finish()\"\u003efinish\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/zip/DeflaterOutputStream.html\" title\u003d\"class in java.util.zip\"\u003eDeflaterOutputStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error has occurred"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "name": "out",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "size",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new output stream with the specified buffer size. The new output stream instance is created as if by invoking the 3-argument constructor GZIPOutputStream(out, size, false).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - the output stream",
          "\u003ccode\u003esize\u003c/code\u003e - the output buffer size"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error has occurred.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esize \u0026lt;\u003d 0\u003c/code\u003e"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "name": "out",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "size",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "syncFlush",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new output stream with the specified buffer size and flush mode.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - the output stream",
          "\u003ccode\u003esize\u003c/code\u003e - the output buffer size",
          "\u003ccode\u003esyncFlush\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e invocation of the inherited \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/zip/DeflaterOutputStream.html#flush()\"\u003e\u003ccode\u003eflush()\u003c/code\u003e\u003c/a\u003e method of this instance flushes the compressor with flush mode \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/zip/Deflater.html#SYNC_FLUSH\"\u003e\u003ccode\u003eDeflater.SYNC_FLUSH\u003c/code\u003e\u003c/a\u003e before flushing the output stream, otherwise only flushes the output stream"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error has occurred.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esize \u0026lt;\u003d 0\u003c/code\u003e"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "name": "out",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new output stream with a default buffer size. The new output stream instance is created as if by invoking the 2-argument constructor GZIPOutputStream(out, false).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - the output stream"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error has occurred."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "name": "out",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "syncFlush",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new output stream with a default buffer size and the specified flush mode.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - the output stream",
          "\u003ccode\u003esyncFlush\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e invocation of the inherited \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/zip/DeflaterOutputStream.html#flush()\"\u003e\u003ccode\u003eflush()\u003c/code\u003e\u003c/a\u003e method of this instance flushes the compressor with flush mode \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/zip/Deflater.html#SYNC_FLUSH\"\u003e\u003ccode\u003eDeflater.SYNC_FLUSH\u003c/code\u003e\u003c/a\u003e before flushing the output stream, otherwise only flushes the output stream"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error has occurred."
        ],
        "since": [
          "1.7"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.util.zip.GZIPOutputStream",
  "comment": "This class implements a stream filter for writing compressed data in the GZIP file format.",
  "tagMap": {
    "since": [
      "1.1"
    ]
  }
}