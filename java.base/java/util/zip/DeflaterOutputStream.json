{
  "packageName": "java.util.zip",
  "simpleName": "DeflaterOutputStream",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.io.FilterOutputStream",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.util.zip.Deflater",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "def",
      "comment": "Compressor for this stream.",
      "tagMap": {}
    },
    {
      "type": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "buf",
      "comment": "Output buffer for writing compressed data.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "b"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "write",
      "comment": "Writes a byte to the compressed output stream. This method will block until the byte can be written.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterOutputStream.html#write(int)\"\u003ewrite\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterOutputStream.html\" title\u003d\"class in java.io\"\u003eFilterOutputStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - the byte to be written"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error has occurred"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "off"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "len"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "write",
      "comment": "Writes an array of bytes to the compressed output stream. This method will block until all the bytes are written.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterOutputStream.html#write(int)\"\u003e\u003ccode\u003eFilterOutputStream.write(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterOutputStream.html#write(byte%5B%5D,int,int)\"\u003ewrite\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterOutputStream.html\" title\u003d\"class in java.io\"\u003eFilterOutputStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - the data to be written",
          "\u003ccode\u003eoff\u003c/code\u003e - the start offset of the data",
          "\u003ccode\u003elen\u003c/code\u003e - the length of the data"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error has occurred"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "finish",
      "comment": "Finishes writing compressed data to the output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error has occurred"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "close",
      "comment": "Writes remaining compressed data to the output stream and closes the underlying stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterOutputStream.html#flush()\"\u003e\u003ccode\u003eFilterOutputStream.flush()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterOutputStream.html#out\"\u003e\u003ccode\u003eFilterOutputStream.out\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterOutputStream.html#close()\"\u003eclose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterOutputStream.html\" title\u003d\"class in java.io\"\u003eFilterOutputStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/AutoCloseable.html#close()\"\u003eclose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/AutoCloseable.html\" title\u003d\"interface in java.lang\"\u003eAutoCloseable\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Closeable.html#close()\"\u003eclose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Closeable.html\" title\u003d\"interface in java.io\"\u003eCloseable\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error has occurred"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "deflate",
      "comment": "Writes next block of compressed data to the output stream.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error has occurred"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "flush",
      "comment": "Flushes the compressed output stream. If syncFlush is true when this compressed output stream is constructed, this method first flushes the underlying compressor with the flush mode Deflater.SYNC_FLUSH to force all pending data to be flushed out to the output stream and then flushes the output stream. Otherwise this method only flushes the output stream without flushing the compressor.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterOutputStream.html#out\"\u003e\u003ccode\u003eFilterOutputStream.out\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterOutputStream.html#flush()\"\u003eflush\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterOutputStream.html\" title\u003d\"class in java.io\"\u003eFilterOutputStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Flushable.html#flush()\"\u003eflush\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Flushable.html\" title\u003d\"interface in java.io\"\u003eFlushable\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error has occurred"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        },
        {
          "type": {
            "name": "java.util.zip.Deflater",
            "type": "Class"
          },
          "field": {
            "name": "def"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "syncFlush"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new output stream with the specified compressor, buffer size and flush mode.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - the output stream",
          "\u003ccode\u003edef\u003c/code\u003e - the compressor (\"deflater\")",
          "\u003ccode\u003esize\u003c/code\u003e - the output buffer size",
          "\u003ccode\u003esyncFlush\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/zip/DeflaterOutputStream.html#flush()\"\u003e\u003ccode\u003eflush()\u003c/code\u003e\u003c/a\u003e method of this instance flushes the compressor with flush mode \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/zip/Deflater.html#SYNC_FLUSH\"\u003e\u003ccode\u003eDeflater.SYNC_FLUSH\u003c/code\u003e\u003c/a\u003e before flushing the output stream, otherwise only flushes the output stream"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esize \u0026lt;\u003d 0\u003c/code\u003e"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        },
        {
          "type": {
            "name": "java.util.zip.Deflater",
            "type": "Class"
          },
          "field": {
            "name": "def"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new output stream with the specified compressor and buffer size. The new output stream instance is created as if by invoking the 4-argument constructor DeflaterOutputStream(out, def, size, false).",
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - the output stream",
          "\u003ccode\u003edef\u003c/code\u003e - the compressor (\"deflater\")",
          "\u003ccode\u003esize\u003c/code\u003e - the output buffer size"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003esize \u0026lt;\u003d 0\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        },
        {
          "type": {
            "name": "java.util.zip.Deflater",
            "type": "Class"
          },
          "field": {
            "name": "def"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "syncFlush"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new output stream with the specified compressor, flush mode and a default buffer size.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - the output stream",
          "\u003ccode\u003edef\u003c/code\u003e - the compressor (\"deflater\")",
          "\u003ccode\u003esyncFlush\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/zip/DeflaterOutputStream.html#flush()\"\u003e\u003ccode\u003eflush()\u003c/code\u003e\u003c/a\u003e method of this instance flushes the compressor with flush mode \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/zip/Deflater.html#SYNC_FLUSH\"\u003e\u003ccode\u003eDeflater.SYNC_FLUSH\u003c/code\u003e\u003c/a\u003e before flushing the output stream, otherwise only flushes the output stream"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        },
        {
          "type": {
            "name": "java.util.zip.Deflater",
            "type": "Class"
          },
          "field": {
            "name": "def"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new output stream with the specified compressor and a default buffer size. The new output stream instance is created as if by invoking the 3-argument constructor DeflaterOutputStream(out, def, false).",
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - the output stream",
          "\u003ccode\u003edef\u003c/code\u003e - the compressor (\"deflater\")"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "syncFlush"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new output stream with a default compressor, a default buffer size and the specified flush mode.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - the output stream",
          "\u003ccode\u003esyncFlush\u003c/code\u003e - if \n\u003ccode\u003etrue\u003c/code\u003e the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/zip/DeflaterOutputStream.html#flush()\"\u003e\u003ccode\u003eflush()\u003c/code\u003e\u003c/a\u003e method of this instance flushes the compressor with flush mode \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/zip/Deflater.html#SYNC_FLUSH\"\u003e\u003ccode\u003eDeflater.SYNC_FLUSH\u003c/code\u003e\u003c/a\u003e before flushing the output stream, otherwise only flushes the output stream"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new output stream with a default compressor and buffer size. The new output stream instance is created as if by invoking the 2-argument constructor DeflaterOutputStream(out, false).",
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - the output stream"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.util.zip.DeflaterOutputStream",
  "comment": "This class implements an output stream filter for compressing data in the \"deflate\" compression format. It is also used as the basis for other types of compression filters, such as GZIPOutputStream.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/zip/Deflater.html\" title\u003d\"class in java.util.zip\"\u003e\u003ccode\u003eDeflater\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}