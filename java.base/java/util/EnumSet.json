{
  "packageName": "java.util",
  "simpleName": "EnumSet",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.AbstractSet",
    "parameters": [
      {
        "name": "E",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "E",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "elementType",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "noneOf",
      "comment": "Creates an empty enum set with the specified element type.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the elements in the set"
        ],
        "param": [
          "\u003ccode\u003eelementType\u003c/code\u003e - the class object of the element type for this enum set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementType\u003c/code\u003e is null"
        ],
        "return": [
          "An empty enum set of the specified type."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "E",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "elementType",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "allOf",
      "comment": "Creates an enum set containing all of the elements in the specified element type.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the elements in the set"
        ],
        "param": [
          "\u003ccode\u003eelementType\u003c/code\u003e - the class object of the element type for this enum set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementType\u003c/code\u003e is null"
        ],
        "return": [
          "An enum set containing all the elements in the specified type."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.EnumSet",
            "parameters": [
              {
                "name": "E",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "s",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "copyOf",
      "comment": "Creates an enum set with the same element type as the specified enum set, initially containing the same elements (if any).",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the elements in the set"
        ],
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the enum set from which to initialize this enum set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003es\u003c/code\u003e is null"
        ],
        "return": [
          "A copy of the specified enum set."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Collection",
            "parameters": [
              {
                "name": "E",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "c",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "copyOf",
      "comment": "Creates an enum set initialized from the specified collection. If the specified collection is an EnumSet instance, this static factory method behaves identically to copyOf(EnumSet). Otherwise, the specified collection must contain at least one element (in order to determine the new enum set\u0027s element type).",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the elements in the collection"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the collection from which to initialize this enum set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ec\u003c/code\u003e is not an \n\u003ccode\u003eEnumSet\u003c/code\u003e instance and contains no elements",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ec\u003c/code\u003e is null"
        ],
        "return": [
          "An enum set initialized from the given collection."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.EnumSet",
            "parameters": [
              {
                "name": "E",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "s",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "complementOf",
      "comment": "Creates an enum set with the same element type as the specified enum set, initially containing all the elements of this type that are not contained in the specified set.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the elements in the enum set"
        ],
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the enum set from whose complement to initialize this enum set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003es\u003c/code\u003e is null"
        ],
        "return": [
          "The complement of the specified set in this set"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "e",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Creates an enum set initially containing the specified element. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the specified element and of the set"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the element that this set is to contain initially"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ee\u003c/code\u003e is null"
        ],
        "return": [
          "an enum set initially containing the specified element"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "e1",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "e2",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the parameter elements and of the set"
        ],
        "param": [
          "\u003ccode\u003ee1\u003c/code\u003e - an element that this set is to contain initially",
          "\u003ccode\u003ee2\u003c/code\u003e - another element that this set is to contain initially"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any parameters are null"
        ],
        "return": [
          "an enum set initially containing the specified elements"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "e1",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "e2",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "e3",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the parameter elements and of the set"
        ],
        "param": [
          "\u003ccode\u003ee1\u003c/code\u003e - an element that this set is to contain initially",
          "\u003ccode\u003ee2\u003c/code\u003e - another element that this set is to contain initially",
          "\u003ccode\u003ee3\u003c/code\u003e - another element that this set is to contain initially"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any parameters are null"
        ],
        "return": [
          "an enum set initially containing the specified elements"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "e1",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "e2",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "e3",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "e4",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the parameter elements and of the set"
        ],
        "param": [
          "\u003ccode\u003ee1\u003c/code\u003e - an element that this set is to contain initially",
          "\u003ccode\u003ee2\u003c/code\u003e - another element that this set is to contain initially",
          "\u003ccode\u003ee3\u003c/code\u003e - another element that this set is to contain initially",
          "\u003ccode\u003ee4\u003c/code\u003e - another element that this set is to contain initially"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any parameters are null"
        ],
        "return": [
          "an enum set initially containing the specified elements"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "e1",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "e2",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "e3",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "e4",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "e5",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the parameter elements and of the set"
        ],
        "param": [
          "\u003ccode\u003ee1\u003c/code\u003e - an element that this set is to contain initially",
          "\u003ccode\u003ee2\u003c/code\u003e - another element that this set is to contain initially",
          "\u003ccode\u003ee3\u003c/code\u003e - another element that this set is to contain initially",
          "\u003ccode\u003ee4\u003c/code\u003e - another element that this set is to contain initially",
          "\u003ccode\u003ee5\u003c/code\u003e - another element that this set is to contain initially"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any parameters are null"
        ],
        "return": [
          "an enum set initially containing the specified elements"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "first",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "rest",
          "varargs": true
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Creates an enum set initially containing the specified elements. This factory, whose parameter list uses the varargs feature, may be used to create an enum set initially containing an arbitrary number of elements, but it is likely to run slower than the overloadings that do not use varargs.",
      "annotations": [
        {
          "type": {
            "name": "SafeVarargs",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the parameter elements and of the set"
        ],
        "param": [
          "\u003ccode\u003efirst\u003c/code\u003e - an element that the set is to contain initially",
          "\u003ccode\u003erest\u003c/code\u003e - the remaining elements the set is to contain initially"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any of the specified elements are null, or if \n\u003ccode\u003erest\u003c/code\u003e is null"
        ],
        "return": [
          "an enum set initially containing the specified elements"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "from",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "E",
            "type": "Class"
          },
          "name": "to",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "range",
      "comment": "Creates an enum set initially containing all of the elements in the range defined by the two specified endpoints. The returned set will contain the endpoints themselves, which may be identical but must not be out of order.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the parameter elements and of the set"
        ],
        "param": [
          "\u003ccode\u003efrom\u003c/code\u003e - the first element in the range",
          "\u003ccode\u003eto\u003c/code\u003e - the last element in the range"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efrom\u003c/code\u003e or \n\u003ccode\u003eto\u003c/code\u003e are null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efrom.compareTo(to) \u0026gt; 0\u003c/code\u003e"
        ],
        "return": [
          "an enum set initially containing all of the elements in the range defined by the two specified endpoints"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "owner": "java.util.EnumSet",
            "name": "E",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Returns a copy of this set.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a copy of this set"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "E",
      "upperBounds": [
        {
          "name": "java.lang.Enum",
          "parameters": [
            {
              "name": "E",
              "type": "Class"
            }
          ],
          "type": "Class"
        }
      ],
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.util.EnumSet",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/EnumMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eEnumMap\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.util.EnumSet\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}