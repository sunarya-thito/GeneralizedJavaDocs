{
  "packageName": "java.util",
  "simpleName": "EnumSet",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.AbstractSet",
    "parameters": [
      {
        "name": "E",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "E",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "elementType"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "noneOf",
      "comment": "Creates an empty enum set with the specified element type.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the elements in the set"
        ],
        "param": [
          "\u003ccode\u003eelementType\u003c/code\u003e - the class object of the element type for this enum set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementType\u003c/code\u003e is null"
        ],
        "return": [
          "An empty enum set of the specified type."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "name": "E",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "elementType"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "allOf",
      "comment": "Creates an enum set containing all of the elements in the specified element type.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the elements in the set"
        ],
        "param": [
          "\u003ccode\u003eelementType\u003c/code\u003e - the class object of the element type for this enum set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eelementType\u003c/code\u003e is null"
        ],
        "return": [
          "An enum set containing all the elements in the specified type."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.EnumSet",
            "parameters": [
              {
                "name": "E",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "copyOf",
      "comment": "Creates an enum set with the same element type as the specified enum set, initially containing the same elements (if any).",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the elements in the set"
        ],
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the enum set from which to initialize this enum set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003es\u003c/code\u003e is null"
        ],
        "return": [
          "A copy of the specified enum set."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Collection",
            "parameters": [
              {
                "name": "E",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "copyOf",
      "comment": "Creates an enum set initialized from the specified collection. If the specified collection is an EnumSet instance, this static factory method behaves identically to copyOf(EnumSet). Otherwise, the specified collection must contain at least one element (in order to determine the new enum set\u0027s element type).",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the elements in the collection"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - the collection from which to initialize this enum set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ec\u003c/code\u003e is not an \n\u003ccode\u003eEnumSet\u003c/code\u003e instance and contains no elements",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ec\u003c/code\u003e is null"
        ],
        "return": [
          "An enum set initialized from the given collection."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.EnumSet",
            "parameters": [
              {
                "name": "E",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "complementOf",
      "comment": "Creates an enum set with the same element type as the specified enum set, initially containing all the elements of this type that are not contained in the specified set.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the elements in the enum set"
        ],
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the enum set from whose complement to initialize this enum set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003es\u003c/code\u003e is null"
        ],
        "return": [
          "The complement of the specified set in this set"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Creates an enum set initially containing the specified element. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the specified element and of the set"
        ],
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - the element that this set is to contain initially"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ee\u003c/code\u003e is null"
        ],
        "return": [
          "an enum set initially containing the specified element"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "e1"
          }
        },
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "e2"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the parameter elements and of the set"
        ],
        "param": [
          "\u003ccode\u003ee1\u003c/code\u003e - an element that this set is to contain initially",
          "\u003ccode\u003ee2\u003c/code\u003e - another element that this set is to contain initially"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any parameters are null"
        ],
        "return": [
          "an enum set initially containing the specified elements"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "e1"
          }
        },
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "e2"
          }
        },
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "e3"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the parameter elements and of the set"
        ],
        "param": [
          "\u003ccode\u003ee1\u003c/code\u003e - an element that this set is to contain initially",
          "\u003ccode\u003ee2\u003c/code\u003e - another element that this set is to contain initially",
          "\u003ccode\u003ee3\u003c/code\u003e - another element that this set is to contain initially"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any parameters are null"
        ],
        "return": [
          "an enum set initially containing the specified elements"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "e1"
          }
        },
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "e2"
          }
        },
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "e3"
          }
        },
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "e4"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the parameter elements and of the set"
        ],
        "param": [
          "\u003ccode\u003ee1\u003c/code\u003e - an element that this set is to contain initially",
          "\u003ccode\u003ee2\u003c/code\u003e - another element that this set is to contain initially",
          "\u003ccode\u003ee3\u003c/code\u003e - another element that this set is to contain initially",
          "\u003ccode\u003ee4\u003c/code\u003e - another element that this set is to contain initially"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any parameters are null"
        ],
        "return": [
          "an enum set initially containing the specified elements"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "e1"
          }
        },
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "e2"
          }
        },
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "e3"
          }
        },
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "e4"
          }
        },
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "e5"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Creates an enum set initially containing the specified elements. Overloadings of this method exist to initialize an enum set with one through five elements. A sixth overloading is provided that uses the varargs feature. This overloading may be used to create an enum set initially containing an arbitrary number of elements, but is likely to run slower than the overloadings that do not use varargs.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the parameter elements and of the set"
        ],
        "param": [
          "\u003ccode\u003ee1\u003c/code\u003e - an element that this set is to contain initially",
          "\u003ccode\u003ee2\u003c/code\u003e - another element that this set is to contain initially",
          "\u003ccode\u003ee3\u003c/code\u003e - another element that this set is to contain initially",
          "\u003ccode\u003ee4\u003c/code\u003e - another element that this set is to contain initially",
          "\u003ccode\u003ee5\u003c/code\u003e - another element that this set is to contain initially"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any parameters are null"
        ],
        "return": [
          "an enum set initially containing the specified elements"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "first"
          }
        },
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "rest"
          },
          "varArgs": {}
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Creates an enum set initially containing the specified elements. This factory, whose parameter list uses the varargs feature, may be used to create an enum set initially containing an arbitrary number of elements, but it is likely to run slower than the overloadings that do not use varargs.",
      "annotations": [
        {
          "type": "SafeVarargs"
        }
      ],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the parameter elements and of the set"
        ],
        "param": [
          "\u003ccode\u003efirst\u003c/code\u003e - an element that the set is to contain initially",
          "\u003ccode\u003erest\u003c/code\u003e - the remaining elements the set is to contain initially"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any of the specified elements are null, or if \n\u003ccode\u003erest\u003c/code\u003e is null"
        ],
        "return": [
          "an enum set initially containing the specified elements"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "name": "E",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "from"
          }
        },
        {
          "type": {
            "name": "E",
            "type": "Class"
          },
          "field": {
            "name": "to"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "E",
          "upperBounds": [
            {
              "name": "java.lang.Enum",
              "parameters": [
                {
                  "name": "E",
                  "type": "Class"
                }
              ],
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "range",
      "comment": "Creates an enum set initially containing all of the elements in the range defined by the two specified endpoints. The returned set will contain the endpoints themselves, which may be identical but must not be out of order.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eE\u003c/code\u003e - The class of the parameter elements and of the set"
        ],
        "param": [
          "\u003ccode\u003efrom\u003c/code\u003e - the first element in the range",
          "\u003ccode\u003eto\u003c/code\u003e - the last element in the range"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efrom\u003c/code\u003e or \n\u003ccode\u003eto\u003c/code\u003e are null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efrom.compareTo(to) \u0026gt; 0\u003c/code\u003e"
        ],
        "return": [
          "an enum set initially containing all of the elements in the range defined by the two specified endpoints"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.EnumSet",
        "parameters": [
          {
            "owner": "java.util.EnumSet",
            "name": "E",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Returns a copy of this set.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a copy of this set"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "E",
      "upperBounds": [
        {
          "name": "java.lang.Enum",
          "parameters": [
            {
              "name": "E",
              "type": "Class"
            }
          ],
          "type": "Class"
        }
      ],
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.util.EnumSet",
  "comment": "A specialized \n\u003ca href\u003d\"Set.html\" title\u003d\"interface in java.util\"\u003e\u003ccode\u003eSet\u003c/code\u003e\u003c/a\u003e implementation for use with enum types. All of the elements in an enum set must come from a single enum type that is specified, explicitly or implicitly, when the set is created. Enum sets are represented internally as bit vectors. This representation is extremely compact and efficient. The space and time performance of this class should be good enough to allow its use as a high-quality, typesafe alternative to traditional \n\u003ccode\u003eint\u003c/code\u003e-based \"bit flags.\" Even bulk operations (such as \n\u003ccode\u003econtainsAll\u003c/code\u003e and \n\u003ccode\u003eretainAll\u003c/code\u003e) should run very quickly if their argument is also an enum set. \n\u003cp\u003eThe iterator returned by the \u003ccode\u003eiterator\u003c/code\u003e method traverses the elements in their \u003ci\u003enatural order\u003c/i\u003e (the order in which the enum constants are declared). The returned iterator is \u003ci\u003eweakly consistent\u003c/i\u003e: it will never throw \u003ca href\u003d\"ConcurrentModificationException.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eConcurrentModificationException\u003c/code\u003e\u003c/a\u003e and it may or may not show the effects of any modifications to the set that occur while the iteration is in progress. \u003c/p\u003e\n\u003cp\u003eNull elements are not permitted. Attempts to insert a null element will throw \u003ca href\u003d\"../lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eNullPointerException\u003c/code\u003e\u003c/a\u003e. Attempts to test for the presence of a null element or to remove one will, however, function properly. \u003c/p\u003e\n\u003cp\u003eLike most collection implementations, \u003ccode\u003eEnumSet\u003c/code\u003e is not synchronized. If multiple threads access an enum set concurrently, and at least one of the threads modifies the set, it should be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the enum set. If no such object exists, the set should be \"wrapped\" using the \u003ca href\u003d\"Collections.html#synchronizedSet(java.util.Set)\"\u003e\u003ccode\u003eCollections.synchronizedSet(java.util.Set\u0026lt;T\u0026gt;)\u003c/code\u003e\u003c/a\u003e method. This is best done at creation time, to prevent accidental unsynchronized access: \u003c/p\u003e\n\u003cpre\u003e Set\u0026lt;MyEnum\u0026gt; s \u003d Collections.synchronizedSet(EnumSet.noneOf(MyEnum.class));\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eImplementation note: All basic operations execute in constant time. They are likely (though not guaranteed) to be much faster than their \u003ca href\u003d\"HashSet.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashSet\u003c/code\u003e\u003c/a\u003e counterparts. Even bulk operations execute in constant time if their argument is also an enum set. \u003c/p\u003e\n\u003cp\u003eThis class is a member of the \u003ca href\u003d\"../../../java.base/java/util/package-summary.html#CollectionsFramework\"\u003e Java Collections Framework\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/EnumMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eEnumMap\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.util.EnumSet\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}