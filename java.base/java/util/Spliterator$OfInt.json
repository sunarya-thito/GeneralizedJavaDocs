{
  "packageName": "java.util",
  "simpleName": "OfInt",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.util.Spliterator$OfPrimitive",
    "parameters": [
      {
        "name": "java.lang.Integer",
        "type": "Class"
      },
      {
        "name": "java.util.function.IntConsumer",
        "type": "Class"
      },
      {
        "name": "java.util.Spliterator$OfInt",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.function.Consumer",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "name": "java.lang.Integer",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "tryAdvance",
      "comment": "If a remaining element exists, performs the given action on it, returning true; else returns false. If this Spliterator is Spliterator.ORDERED the action is performed on the next element in encounter order. Exceptions thrown by the action are relayed to the caller.",
      "tagMap": {
        "implSpec": [
          "If the action is an instance of \n\u003ccode\u003eIntConsumer\u003c/code\u003e then it is cast to \n\u003ccode\u003eIntConsumer\u003c/code\u003e and passed to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Spliterator.OfPrimitive.html#tryAdvance(T_CONS)\"\u003e\u003ccode\u003eSpliterator.OfPrimitive.tryAdvance(java.util.function.IntConsumer)\u003c/code\u003e\u003c/a\u003e; otherwise the action is adapted to an instance of \n\u003ccode\u003eIntConsumer\u003c/code\u003e, by boxing the argument of \n\u003ccode\u003eIntConsumer\u003c/code\u003e, and then passed to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Spliterator.OfPrimitive.html#tryAdvance(T_CONS)\"\u003e\u003ccode\u003eSpliterator.OfPrimitive.tryAdvance(java.util.function.IntConsumer)\u003c/code\u003e\u003c/a\u003e."
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Spliterator.html#tryAdvance(java.util.function.Consumer)\"\u003etryAdvance\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Spliterator.html\" title\u003d\"interface in java.util\"\u003eSpliterator\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Integer.html\" title\u003d\"class in java.lang\"\u003eInteger\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - The action"
        ],
        "return": [
          "\u003ccode\u003efalse\u003c/code\u003e if no remaining elements existed upon entry to this method, else \n\u003ccode\u003etrue\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.function.Consumer",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "name": "java.lang.Integer",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "action"
          }
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "forEachRemaining",
      "comment": "Performs the given action for each remaining element, sequentially in the current thread, until all elements have been processed or the action throws an exception. If this Spliterator is Spliterator.ORDERED, actions are performed in encounter order. Exceptions thrown by the action are relayed to the caller.",
      "tagMap": {
        "implSpec": [
          "If the action is an instance of \n\u003ccode\u003eIntConsumer\u003c/code\u003e then it is cast to \n\u003ccode\u003eIntConsumer\u003c/code\u003e and passed to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Spliterator.OfPrimitive.html#forEachRemaining(T_CONS)\"\u003e\u003ccode\u003eSpliterator.OfPrimitive.forEachRemaining(java.util.function.IntConsumer)\u003c/code\u003e\u003c/a\u003e; otherwise the action is adapted to an instance of \n\u003ccode\u003eIntConsumer\u003c/code\u003e, by boxing the argument of \n\u003ccode\u003eIntConsumer\u003c/code\u003e, and then passed to \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Spliterator.OfPrimitive.html#forEachRemaining(T_CONS)\"\u003e\u003ccode\u003eSpliterator.OfPrimitive.forEachRemaining(java.util.function.IntConsumer)\u003c/code\u003e\u003c/a\u003e."
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Spliterator.html#forEachRemaining(java.util.function.Consumer)\"\u003eforEachRemaining\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Spliterator.html\" title\u003d\"interface in java.util\"\u003eSpliterator\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Integer.html\" title\u003d\"class in java.lang\"\u003eInteger\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - The action"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 521,
  "name": "java.util.Spliterator$OfInt",
  "comment": "A Spliterator specialized for \n\u003ccode\u003eint\u003c/code\u003e values.",
  "tagMap": {
    "since": [
      "1.8"
    ]
  }
}