{
  "packageName": "java.util",
  "simpleName": "Currency",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.Currency",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "currencyCode",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getInstance",
      "comment": "Returns the Currency instance for the given currency code.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecurrencyCode\u003c/code\u003e - the ISO 4217 code of the currency"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ecurrencyCode\u003c/code\u003e is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ecurrencyCode\u003c/code\u003e is not a supported ISO 4217 code."
        ],
        "return": [
          "the \n\u003ccode\u003eCurrency\u003c/code\u003e instance for the given currency code"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Currency",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "name": "locale",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getInstance",
      "comment": "Returns the Currency instance for the country of the given locale. The language and variant components of the locale are ignored. The result may vary over time, as countries change their currencies. For example, for the original member countries of the European Monetary Union, the method returns the old national currencies until December 31, 2001, and the Euro from January 1, 2002, local time of the respective countries. If the specified locale contains \"cu\" and/or \"rg\" Unicode extensions, the instance returned from this method reflects the values specified with those extensions. If both \"cu\" and \"rg\" are specified, the currency from the \"cu\" extension supersedes the implicit one from the \"rg\" extension. The method returns null for territories that don\u0027t have a currency, such as Antarctica.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elocale\u003c/code\u003e - the locale for whose country a \n\u003ccode\u003eCurrency\u003c/code\u003e instance is needed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elocale\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the country of the given \n\u003ccode\u003elocale\u003c/code\u003e is not a supported ISO 3166 country code."
        ],
        "return": [
          "the \n\u003ccode\u003eCurrency\u003c/code\u003e instance for the country of the given locale, or \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.util.Currency",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAvailableCurrencies",
      "comment": "Gets the set of available currencies. The returned set of currencies contains all of the available currencies, which may include currencies that represent obsolete ISO 4217 codes. The set can be modified without affecting the available currencies in the runtime.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the set of available currencies. If there is no currency available in the runtime, the returned set is empty."
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCurrencyCode",
      "comment": "Gets the ISO 4217 currency code of this currency.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the ISO 4217 currency code of this currency."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSymbol",
      "comment": "Gets the symbol of this currency for the default DISPLAY locale. For example, for the US Dollar, the symbol is \"$\" if the default locale is the US, while for other locales it may be \"US$\". If no symbol can be determined, the ISO 4217 currency code is returned. If the default DISPLAY locale contains \"rg\" (region override) Unicode extension, the symbol returned from this method reflects the value specified with that extension. This is equivalent to calling getSymbol(Locale.getDefault(Locale.Category.DISPLAY)).",
      "annotations": [],
      "tagMap": {
        "return": [
          "the symbol of this currency for the default \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.Category.html#DISPLAY\"\u003e\u003ccode\u003eDISPLAY\u003c/code\u003e\u003c/a\u003e locale"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "name": "locale",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSymbol",
      "comment": "Gets the symbol of this currency for the specified locale. For example, for the US Dollar, the symbol is \"$\" if the specified locale is the US, while for other locales it may be \"US$\". If no symbol can be determined, the ISO 4217 currency code is returned. If the specified locale contains \"rg\" (region override) Unicode extension, the symbol returned from this method reflects the value specified with that extension.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elocale\u003c/code\u003e - the locale for which a display name for this currency is needed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elocale\u003c/code\u003e is null"
        ],
        "return": [
          "the symbol of this currency for the specified locale"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDefaultFractionDigits",
      "comment": "Gets the default number of fraction digits used with this currency. Note that the number of fraction digits is the same as ISO 4217\u0027s minor unit for the currency. For example, the default number of fraction digits for the Euro is 2, while for the Japanese Yen it\u0027s 0. In the case of pseudo-currencies, such as IMF Special Drawing Rights, -1 is returned.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the default number of fraction digits used with this currency"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNumericCode",
      "comment": "Returns the ISO 4217 numeric code of this currency.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the ISO 4217 numeric code of this currency"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNumericCodeAsString",
      "comment": "Returns the 3 digit ISO 4217 numeric code of this currency as a String. Unlike getNumericCode(), which returns the numeric code as int, this method always returns the numeric code as a 3 digit string. e.g. a numeric value of 32 would be returned as \"032\", and a numeric value of 6 would be returned as \"006\".",
      "annotations": [],
      "tagMap": {
        "return": [
          "the 3 digit ISO 4217 numeric code of this currency as a \n\u003ccode\u003eString\u003c/code\u003e"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDisplayName",
      "comment": "Gets the name that is suitable for displaying this currency for the default DISPLAY locale. If there is no suitable display name found for the default locale, the ISO 4217 currency code is returned. This is equivalent to calling getDisplayName(Locale.getDefault(Locale.Category.DISPLAY)).",
      "annotations": [],
      "tagMap": {
        "return": [
          "the display name of this currency for the default \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.Category.html#DISPLAY\"\u003e\u003ccode\u003eDISPLAY\u003c/code\u003e\u003c/a\u003e locale"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "name": "locale",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDisplayName",
      "comment": "Gets the name that is suitable for displaying this currency for the specified locale. If there is no suitable display name found for the specified locale, the ISO 4217 currency code is returned.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elocale\u003c/code\u003e - the locale for which a display name for this currency is needed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elocale\u003c/code\u003e is null"
        ],
        "return": [
          "the display name of this currency for the specified locale"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns the ISO 4217 currency code of this currency.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the ISO 4217 currency code of this currency"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "java.util.Currency",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/math/BigDecimal.html\" title\u003d\"class in java.math\"\u003e\u003ccode\u003eBigDecimal\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.util.Currency\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}