{
  "packageName": "java.util.concurrent",
  "simpleName": "AbstractExecutorService",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.concurrent.RunnableFuture",
        "parameters": [
          {
            "name": "T",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Runnable",
            "type": "Class"
          },
          "field": {
            "name": "runnable"
          }
        },
        {
          "type": {
            "name": "T",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "newTaskFor",
      "comment": "Returns a RunnableFuture for the given runnable and default value.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the given value"
        ],
        "param": [
          "\u003ccode\u003erunnable\u003c/code\u003e - the runnable task being wrapped",
          "\u003ccode\u003evalue\u003c/code\u003e - the default value for the returned future"
        ],
        "return": [
          "a \n\u003ccode\u003eRunnableFuture\u003c/code\u003e which, when run, will run the underlying runnable and which, as a \n\u003ccode\u003eFuture\u003c/code\u003e, will yield the given value as its result and provide for cancellation of the underlying task"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.RunnableFuture",
        "parameters": [
          {
            "name": "T",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.concurrent.Callable",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "callable"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "newTaskFor",
      "comment": "Returns a RunnableFuture for the given callable task.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the callable\u0027s result"
        ],
        "param": [
          "\u003ccode\u003ecallable\u003c/code\u003e - the callable task being wrapped"
        ],
        "return": [
          "a \n\u003ccode\u003eRunnableFuture\u003c/code\u003e which, when run, will call the underlying callable and which, as a \n\u003ccode\u003eFuture\u003c/code\u003e, will yield the callable\u0027s result as its result and provide for cancellation of the underlying task"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.Future",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Runnable",
            "type": "Class"
          },
          "field": {
            "name": "task"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "submit",
      "comment": "Description copied from interface: ExecutorService",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutorService.html#submit(java.lang.Runnable)\"\u003esubmit\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutorService.html\" title\u003d\"interface in java.util.concurrent\"\u003eExecutorService\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etask\u003c/code\u003e - the task to submit"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/RejectedExecutionException.html\" title\u003d\"class in java.util.concurrent\"\u003eRejectedExecutionException\u003c/a\u003e\u003c/code\u003e - if the task cannot be scheduled for execution",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the task is null"
        ],
        "return": [
          "a Future representing pending completion of the task"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.Future",
        "parameters": [
          {
            "name": "T",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Runnable",
            "type": "Class"
          },
          "field": {
            "name": "task"
          }
        },
        {
          "type": {
            "name": "T",
            "type": "Class"
          },
          "field": {
            "name": "result"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "submit",
      "comment": "Description copied from interface: ExecutorService",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the result"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutorService.html#submit(java.lang.Runnable,T)\"\u003esubmit\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutorService.html\" title\u003d\"interface in java.util.concurrent\"\u003eExecutorService\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etask\u003c/code\u003e - the task to submit",
          "\u003ccode\u003eresult\u003c/code\u003e - the result to return"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/RejectedExecutionException.html\" title\u003d\"class in java.util.concurrent\"\u003eRejectedExecutionException\u003c/a\u003e\u003c/code\u003e - if the task cannot be scheduled for execution",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the task is null"
        ],
        "return": [
          "a Future representing pending completion of the task"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.Future",
        "parameters": [
          {
            "name": "T",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.concurrent.Callable",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "task"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "submit",
      "comment": "Description copied from interface: ExecutorService",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the task\u0027s result"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutorService.html#submit(java.util.concurrent.Callable)\"\u003esubmit\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutorService.html\" title\u003d\"interface in java.util.concurrent\"\u003eExecutorService\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etask\u003c/code\u003e - the task to submit"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/RejectedExecutionException.html\" title\u003d\"class in java.util.concurrent\"\u003eRejectedExecutionException\u003c/a\u003e\u003c/code\u003e - if the task cannot be scheduled for execution",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the task is null"
        ],
        "return": [
          "a Future representing pending completion of the task"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        },
        {
          "name": "java.util.concurrent.ExecutionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.util.Collection",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "java.util.concurrent.Callable",
                    "parameters": [
                      {
                        "name": "T",
                        "type": "Class"
                      }
                    ],
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "tasks"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "invokeAny",
      "comment": "Description copied from interface: ExecutorService",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the values returned from the tasks"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutorService.html#invokeAny(java.util.Collection)\"\u003einvokeAny\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutorService.html\" title\u003d\"interface in java.util.concurrent\"\u003eExecutorService\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etasks\u003c/code\u003e - the collection of tasks"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - if interrupted while waiting",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutionException.html\" title\u003d\"class in java.util.concurrent\"\u003eExecutionException\u003c/a\u003e\u003c/code\u003e - if no task successfully completes"
        ],
        "return": [
          "the result returned by one of the tasks"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        },
        {
          "name": "java.util.concurrent.ExecutionException",
          "type": "Class"
        },
        {
          "name": "java.util.concurrent.TimeoutException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.util.Collection",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "java.util.concurrent.Callable",
                    "parameters": [
                      {
                        "name": "T",
                        "type": "Class"
                      }
                    ],
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "tasks"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "timeout"
          }
        },
        {
          "type": {
            "name": "java.util.concurrent.TimeUnit",
            "type": "Class"
          },
          "field": {
            "name": "unit"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "invokeAny",
      "comment": "Description copied from interface: ExecutorService",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the values returned from the tasks"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutorService.html#invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit)\"\u003einvokeAny\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutorService.html\" title\u003d\"interface in java.util.concurrent\"\u003eExecutorService\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etasks\u003c/code\u003e - the collection of tasks",
          "\u003ccode\u003etimeout\u003c/code\u003e - the maximum time to wait",
          "\u003ccode\u003eunit\u003c/code\u003e - the time unit of the timeout argument"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - if interrupted while waiting",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutionException.html\" title\u003d\"class in java.util.concurrent\"\u003eExecutionException\u003c/a\u003e\u003c/code\u003e - if no task successfully completes",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/TimeoutException.html\" title\u003d\"class in java.util.concurrent\"\u003eTimeoutException\u003c/a\u003e\u003c/code\u003e - if the given timeout elapses before any task successfully completes"
        ],
        "return": [
          "the result returned by one of the tasks"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.util.concurrent.Future",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.util.Collection",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "java.util.concurrent.Callable",
                    "parameters": [
                      {
                        "name": "T",
                        "type": "Class"
                      }
                    ],
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "tasks"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "invokeAll",
      "comment": "Description copied from interface: ExecutorService",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the values returned from the tasks"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutorService.html#invokeAll(java.util.Collection)\"\u003einvokeAll\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutorService.html\" title\u003d\"interface in java.util.concurrent\"\u003eExecutorService\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etasks\u003c/code\u003e - the collection of tasks"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - if interrupted while waiting, in which case unfinished tasks are cancelled"
        ],
        "return": [
          "a list of Futures representing the tasks, in the same sequential order as produced by the iterator for the given task list, each of which has completed"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.util.concurrent.Future",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.util.Collection",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "java.util.concurrent.Callable",
                    "parameters": [
                      {
                        "name": "T",
                        "type": "Class"
                      }
                    ],
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "tasks"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "timeout"
          }
        },
        {
          "type": {
            "name": "java.util.concurrent.TimeUnit",
            "type": "Class"
          },
          "field": {
            "name": "unit"
          }
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "invokeAll",
      "comment": "Description copied from interface: ExecutorService",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the values returned from the tasks"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutorService.html#invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)\"\u003einvokeAll\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutorService.html\" title\u003d\"interface in java.util.concurrent\"\u003eExecutorService\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etasks\u003c/code\u003e - the collection of tasks",
          "\u003ccode\u003etimeout\u003c/code\u003e - the maximum time to wait",
          "\u003ccode\u003eunit\u003c/code\u003e - the time unit of the timeout argument"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - if interrupted while waiting, in which case unfinished tasks are cancelled"
        ],
        "return": [
          "a list of Futures representing the tasks, in the same sequential order as produced by the iterator for the given task list. If the operation did not time out, each task will have completed. If it did time out, some of these tasks will not have completed."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor for subclasses to call.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.util.concurrent.AbstractExecutorService",
  "comment": "Provides default implementations of \n\u003ca href\u003d\"ExecutorService.html\" title\u003d\"interface in java.util.concurrent\"\u003e\u003ccode\u003eExecutorService\u003c/code\u003e\u003c/a\u003e execution methods. This class implements the \n\u003ccode\u003esubmit\u003c/code\u003e, \n\u003ccode\u003einvokeAny\u003c/code\u003e and \n\u003ccode\u003einvokeAll\u003c/code\u003e methods using a \n\u003ca href\u003d\"RunnableFuture.html\" title\u003d\"interface in java.util.concurrent\"\u003e\u003ccode\u003eRunnableFuture\u003c/code\u003e\u003c/a\u003e returned by \n\u003ccode\u003enewTaskFor\u003c/code\u003e, which defaults to the \n\u003ca href\u003d\"FutureTask.html\" title\u003d\"class in java.util.concurrent\"\u003e\u003ccode\u003eFutureTask\u003c/code\u003e\u003c/a\u003e class provided in this package. For example, the implementation of \n\u003ccode\u003esubmit(Runnable)\u003c/code\u003e creates an associated \n\u003ccode\u003eRunnableFuture\u003c/code\u003e that is executed and returned. Subclasses may override the \n\u003ccode\u003enewTaskFor\u003c/code\u003e methods to return \n\u003ccode\u003eRunnableFuture\u003c/code\u003e implementations other than \n\u003ccode\u003eFutureTask\u003c/code\u003e. \n\u003cp\u003e\u003cb\u003eExtension example\u003c/b\u003e. Here is a sketch of a class that customizes \u003ca href\u003d\"ThreadPoolExecutor.html\" title\u003d\"class in java.util.concurrent\"\u003e\u003ccode\u003eThreadPoolExecutor\u003c/code\u003e\u003c/a\u003e to use a \u003ccode\u003eCustomTask\u003c/code\u003e class instead of the default \u003ccode\u003eFutureTask\u003c/code\u003e: \u003c/p\u003e\n\u003cpre\u003e \u003ccode\u003e\n public class CustomThreadPoolExecutor extends ThreadPoolExecutor {\n\n   static class CustomTask\u0026lt;V\u0026gt; implements RunnableFuture\u0026lt;V\u0026gt; {...}\n\n   protected \u0026lt;V\u0026gt; RunnableFuture\u0026lt;V\u0026gt; newTaskFor(Callable\u0026lt;V\u0026gt; c) {\n       return new CustomTask\u0026lt;V\u0026gt;(c);\n   }\n   protected \u0026lt;V\u0026gt; RunnableFuture\u0026lt;V\u0026gt; newTaskFor(Runnable r, V v) {\n       return new CustomTask\u0026lt;V\u0026gt;(r, v);\n   }\n   // ... add constructors, etc.\n }\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}