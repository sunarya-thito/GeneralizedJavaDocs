{
  "packageName": "java.util.concurrent",
  "simpleName": "Delayed",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Comparable",
    "parameters": [
      {
        "name": "java.util.concurrent.Delayed",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.concurrent.TimeUnit",
            "type": "Class"
          },
          "name": "unit",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getDelay",
      "comment": "Returns the remaining delay associated with this object, in the given time unit.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eunit\u003c/code\u003e - the time unit"
        ],
        "return": [
          "the remaining delay; zero or negative values indicate that the delay has already elapsed"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.util.concurrent.Delayed",
  "comment": "A mix-in style interface for marking objects that should be acted upon after a given delay. \n\u003cp\u003eAn implementation of this interface must define a \u003ccode\u003ecompareTo\u003c/code\u003e method that provides an ordering consistent with its \u003ccode\u003egetDelay\u003c/code\u003e method.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}