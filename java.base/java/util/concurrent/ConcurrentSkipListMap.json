{
  "packageName": "java.util.concurrent",
  "simpleName": "ConcurrentSkipListMap",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.AbstractMap",
    "parameters": [
      {
        "name": "K",
        "type": "Class"
      },
      {
        "name": "V",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.concurrent.ConcurrentSkipListMap",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Returns a shallow copy of this ConcurrentSkipListMap instance. (The keys and values themselves are not cloned.)",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a shallow copy of this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "containsKey",
      "comment": "Returns true if this map contains a mapping for the specified key.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#containsKey(java.lang.Object)\"\u003econtainsKey\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#containsKey(java.lang.Object)\"\u003econtainsKey\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key whose presence in this map is to be tested"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this map contains a mapping for the specified key"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "get",
      "comment": "Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key. More formally, if this map contains a mapping from a key k to a value v such that key compares equal to k according to the map\u0027s ordering, then this method returns v; otherwise it returns null. (There can be at most one such mapping.)",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#get(java.lang.Object)\"\u003eget\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#get(java.lang.Object)\"\u003eget\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key whose associated value is to be returned"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null"
        ],
        "return": [
          "the value to which the specified key is mapped, or \n\u003ccode\u003enull\u003c/code\u003e if this map contains no mapping for the key"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          },
          "name": "defaultValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOrDefault",
      "comment": "Returns the value to which the specified key is mapped, or the given defaultValue if this map contains no mapping for the key.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html#getOrDefault(java.lang.Object,V)\"\u003egetOrDefault\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#getOrDefault(java.lang.Object,V)\"\u003egetOrDefault\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key",
          "\u003ccode\u003edefaultValue\u003c/code\u003e - the value to return if this map contains no mapping for the given key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null"
        ],
        "return": [
          "the mapping for the key, if present; else the defaultValue"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "put",
      "comment": "Associates the specified value with the specified key in this map. If the map previously contained a mapping for the key, the old value is replaced.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#put(K,V)\"\u003eput\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#put(K,V)\"\u003eput\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which the specified value is to be associated",
          "\u003ccode\u003evalue\u003c/code\u003e - value to be associated with the specified key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key or value is null"
        ],
        "return": [
          "the previous value associated with the specified key, or \n\u003ccode\u003enull\u003c/code\u003e if there was no mapping for the key"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the mapping for the specified key from this map if present.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#remove(java.lang.Object)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#remove(java.lang.Object)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key for which mapping should be removed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null"
        ],
        "return": [
          "the previous value associated with the specified key, or \n\u003ccode\u003enull\u003c/code\u003e if there was no mapping for the key"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "containsValue",
      "comment": "Returns true if this map maps one or more keys to the specified value. This operation requires time linear in the map size. Additionally, it is possible for the map to change during execution of this method, in which case the returned result may be inaccurate.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#containsValue(java.lang.Object)\"\u003econtainsValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#containsValue(java.lang.Object)\"\u003econtainsValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - value whose presence in this map is to be tested"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified value is null"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if a mapping to \n\u003ccode\u003evalue\u003c/code\u003e exists; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "size",
      "comment": "Returns the number of key-value mappings in this map. If the map contains more than Integer.MAX_VALUE elements, returns Integer.MAX_VALUE.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#size()\"\u003esize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#size()\"\u003esize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "the number of key-value mappings in this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isEmpty",
      "comment": "Returns true if this map contains no key-value mappings.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#isEmpty()\"\u003eisEmpty\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#isEmpty()\"\u003eisEmpty\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this map contains no key-value mappings"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clear",
      "comment": "Removes all of the mappings from this map.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#clear()\"\u003eclear\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#clear()\"\u003eclear\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.function.Function",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "owner": "java.util.concurrent.ConcurrentSkipListMap",
                    "name": "K",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "upperBounds": [
                  {
                    "owner": "java.util.concurrent.ConcurrentSkipListMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "mappingFunction",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "computeIfAbsent",
      "comment": "If the specified key is not already associated with a value, attempts to compute its value using the given mapping function and enters it into this map unless null. The function is NOT guaranteed to be applied once atomically only if the value is not present.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html#computeIfAbsent(K,java.util.function.Function)\"\u003ecomputeIfAbsent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#computeIfAbsent(K,java.util.function.Function)\"\u003ecomputeIfAbsent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which the specified value is to be associated",
          "\u003ccode\u003emappingFunction\u003c/code\u003e - the function to compute a value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null or the mappingFunction is null"
        ],
        "return": [
          "the current (existing or computed) value associated with the specified key, or null if the computed value is null"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.function.BiFunction",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "owner": "java.util.concurrent.ConcurrentSkipListMap",
                    "name": "K",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "lowerBounds": [
                  {
                    "owner": "java.util.concurrent.ConcurrentSkipListMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "upperBounds": [
                  {
                    "owner": "java.util.concurrent.ConcurrentSkipListMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "remappingFunction",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "computeIfPresent",
      "comment": "If the value for the specified key is present, attempts to compute a new mapping given the key and its current mapped value. The function is NOT guaranteed to be applied once atomically.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html#computeIfPresent(K,java.util.function.BiFunction)\"\u003ecomputeIfPresent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#computeIfPresent(K,java.util.function.BiFunction)\"\u003ecomputeIfPresent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which a value may be associated",
          "\u003ccode\u003eremappingFunction\u003c/code\u003e - the function to compute a value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null or the remappingFunction is null"
        ],
        "return": [
          "the new value associated with the specified key, or null if none"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.function.BiFunction",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "owner": "java.util.concurrent.ConcurrentSkipListMap",
                    "name": "K",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "lowerBounds": [
                  {
                    "owner": "java.util.concurrent.ConcurrentSkipListMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "upperBounds": [
                  {
                    "owner": "java.util.concurrent.ConcurrentSkipListMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "remappingFunction",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "compute",
      "comment": "Attempts to compute a mapping for the specified key and its current mapped value (or null if there is no current mapping). The function is NOT guaranteed to be applied once atomically.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html#compute(K,java.util.function.BiFunction)\"\u003ecompute\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#compute(K,java.util.function.BiFunction)\"\u003ecompute\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which the specified value is to be associated",
          "\u003ccode\u003eremappingFunction\u003c/code\u003e - the function to compute a value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null or the remappingFunction is null"
        ],
        "return": [
          "the new value associated with the specified key, or null if none"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          },
          "name": "value",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.function.BiFunction",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "owner": "java.util.concurrent.ConcurrentSkipListMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "lowerBounds": [
                  {
                    "owner": "java.util.concurrent.ConcurrentSkipListMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "upperBounds": [
                  {
                    "owner": "java.util.concurrent.ConcurrentSkipListMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "remappingFunction",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "merge",
      "comment": "If the specified key is not already associated with a value, associates it with the given value. Otherwise, replaces the value with the results of the given remapping function, or removes if null. The function is NOT guaranteed to be applied once atomically.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html#merge(K,V,java.util.function.BiFunction)\"\u003emerge\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#merge(K,V,java.util.function.BiFunction)\"\u003emerge\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which the specified value is to be associated",
          "\u003ccode\u003evalue\u003c/code\u003e - the value to use if absent",
          "\u003ccode\u003eremappingFunction\u003c/code\u003e - the function to recompute a value if present"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key or value is null or the remappingFunction is null"
        ],
        "return": [
          "the new value associated with the specified key, or null if none"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.NavigableSet",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "keySet",
      "comment": "Returns a NavigableSet view of the keys contained in this map. The set\u0027s iterator returns the keys in ascending order. The set\u0027s spliterator additionally reports Spliterator.CONCURRENT, Spliterator.NONNULL, Spliterator.SORTED and Spliterator.ORDERED, with an encounter order that is ascending key order. The spliterator\u0027s comparator is null if the map\u0027s comparator is null. Otherwise, the spliterator\u0027s comparator is the same as or imposes the same total ordering as the map\u0027s comparator. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. The set supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Set.remove, removeAll, retainAll, and clear operations. It does not support the add or addAll operations. The view\u0027s iterators and spliterators are weakly consistent. This method is equivalent to method navigableKeySet.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#keySet()\"\u003ekeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html#keySet()\"\u003ekeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#keySet()\"\u003ekeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html#keySet()\"\u003ekeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html\" title\u003d\"interface in java.util\"\u003eSortedMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a navigable set view of the keys in this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.NavigableSet",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "navigableKeySet",
      "comment": "Description copied from interface: ConcurrentNavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html#navigableKeySet()\"\u003enavigableKeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#navigableKeySet()\"\u003enavigableKeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a navigable set view of the keys in this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Collection",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "values",
      "comment": "Returns a Collection view of the values contained in this map. The collection\u0027s iterator returns the values in ascending order of the corresponding keys. The collections\u0027s spliterator additionally reports Spliterator.CONCURRENT, Spliterator.NONNULL and Spliterator.ORDERED, with an encounter order that is ascending order of the corresponding keys. The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. The collection supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Collection.remove, removeAll, retainAll and clear operations. It does not support the add or addAll operations. The view\u0027s iterators and spliterators are weakly consistent.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#values()\"\u003evalues\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#values()\"\u003evalues\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html#values()\"\u003evalues\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html\" title\u003d\"interface in java.util\"\u003eSortedMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a collection view of the values contained in this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.util.Map$Entry",
            "parameters": [
              {
                "owner": "java.util.concurrent.ConcurrentSkipListMap",
                "name": "K",
                "type": "Variable"
              },
              {
                "owner": "java.util.concurrent.ConcurrentSkipListMap",
                "name": "V",
                "type": "Variable"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "entrySet",
      "comment": "Returns a Set view of the mappings contained in this map. The set\u0027s iterator returns the entries in ascending key order. The set\u0027s spliterator additionally reports Spliterator.CONCURRENT, Spliterator.NONNULL, Spliterator.SORTED and Spliterator.ORDERED, with an encounter order that is ascending key order. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. The set supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Set.remove, removeAll, retainAll and clear operations. It does not support the add or addAll operations. The view\u0027s iterators and spliterators are weakly consistent. The Map.Entry elements traversed by the iterator or spliterator do not support the setValue operation.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#entrySet()\"\u003eentrySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html#entrySet()\"\u003eentrySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html\" title\u003d\"interface in java.util\"\u003eSortedMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a set view of the mappings contained in this map, sorted in ascending key order"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.ConcurrentNavigableMap",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "descendingMap",
      "comment": "Description copied from interface: ConcurrentNavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html#descendingMap()\"\u003edescendingMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#descendingMap()\"\u003edescendingMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a reverse order view of this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.NavigableSet",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "descendingKeySet",
      "comment": "Description copied from interface: ConcurrentNavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html#descendingKeySet()\"\u003edescendingKeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#descendingKeySet()\"\u003edescendingKeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a reverse order navigable set view of the keys in this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "o",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares the specified object with this map for equality. Returns true if the given object is also a map and the two maps represent the same mappings. More formally, two maps m1 and m2 represent the same mappings if m1.entrySet().equals(m2.entrySet()). This operation may return misleading results if either map is concurrently modified during execution of this method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eo\u003c/code\u003e - object to be compared for equality with this map"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the specified object is equal to this map"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "putIfAbsent",
      "comment": "If the specified key is not already associated with a value, associates it with the given value. This is equivalent to, for this map:  \n if (!map.containsKey(key))\n   return map.put(key, value);\n else\n   return map.get(key); except that the action is performed atomically.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html#putIfAbsent(K,V)\"\u003eputIfAbsent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#putIfAbsent(K,V)\"\u003eputIfAbsent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which the specified value is to be associated",
          "\u003ccode\u003evalue\u003c/code\u003e - value to be associated with the specified key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key or value is null"
        ],
        "return": [
          "the previous value associated with the specified key, or \n\u003ccode\u003enull\u003c/code\u003e if there was no mapping for the key"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the entry for a key only if currently mapped to a given value. This is equivalent to, for this map:  \n if (map.containsKey(key)\n     \u0026\u0026 Objects.equals(map.get(key), value)) {\n   map.remove(key);\n   return true;\n } else {\n   return false;\n } except that the action is performed atomically.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html#remove(java.lang.Object,java.lang.Object)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#remove(java.lang.Object,java.lang.Object)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which the specified value is associated",
          "\u003ccode\u003evalue\u003c/code\u003e - value expected to be associated with the specified key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the value was removed"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          },
          "name": "oldValue",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          },
          "name": "newValue",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "replace",
      "comment": "Replaces the entry for a key only if currently mapped to a given value. This is equivalent to, for this map:  \n if (map.containsKey(key)\n     \u0026\u0026 Objects.equals(map.get(key), oldValue)) {\n   map.put(key, newValue);\n   return true;\n } else {\n   return false;\n } except that the action is performed atomically.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html#replace(K,V,V)\"\u003ereplace\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#replace(K,V,V)\"\u003ereplace\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which the specified value is associated",
          "\u003ccode\u003eoldValue\u003c/code\u003e - value expected to be associated with the specified key",
          "\u003ccode\u003enewValue\u003c/code\u003e - value to be associated with the specified key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any of the arguments are null"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the value was replaced"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "replace",
      "comment": "Replaces the entry for a key only if currently mapped to some value. This is equivalent to, for this map:  \n if (map.containsKey(key))\n   return map.put(key, value);\n else\n   return null; except that the action is performed atomically.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html#replace(K,V)\"\u003ereplace\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#replace(K,V)\"\u003ereplace\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which the specified value is associated",
          "\u003ccode\u003evalue\u003c/code\u003e - value to be associated with the specified key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key or value is null"
        ],
        "return": [
          "the previous value associated with the specified key, or \n\u003ccode\u003enull\u003c/code\u003e if there was no mapping for the key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Comparator",
        "parameters": [
          {
            "lowerBounds": [
              {
                "owner": "java.util.concurrent.ConcurrentSkipListMap",
                "name": "K",
                "type": "Variable"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "comparator",
      "comment": "Description copied from interface: SortedMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html#comparator()\"\u003ecomparator\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html\" title\u003d\"interface in java.util\"\u003eSortedMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "the comparator used to order the keys in this map, or \n\u003ccode\u003enull\u003c/code\u003e if this map uses the natural ordering of its keys"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "K",
        "type": "Variable"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "firstKey",
      "comment": "Description copied from interface: SortedMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html#firstKey()\"\u003efirstKey\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html\" title\u003d\"interface in java.util\"\u003eSortedMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NoSuchElementException.html\" title\u003d\"class in java.util\"\u003eNoSuchElementException\u003c/a\u003e\u003c/code\u003e - if this map is empty"
        ],
        "return": [
          "the first (lowest) key currently in this map"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "K",
        "type": "Variable"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "lastKey",
      "comment": "Description copied from interface: SortedMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html#lastKey()\"\u003elastKey\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html\" title\u003d\"interface in java.util\"\u003eSortedMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NoSuchElementException.html\" title\u003d\"class in java.util\"\u003eNoSuchElementException\u003c/a\u003e\u003c/code\u003e - if this map is empty"
        ],
        "return": [
          "the last (highest) key currently in this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.ConcurrentNavigableMap",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "fromKey",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "fromInclusive",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "toKey",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "toInclusive",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "subMap",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html#subMap(K,boolean,K,boolean)\"\u003esubMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#subMap(K,boolean,K,boolean)\"\u003esubMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efromKey\u003c/code\u003e - low endpoint of the keys in the returned map",
          "\u003ccode\u003efromInclusive\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the low endpoint is to be included in the returned view",
          "\u003ccode\u003etoKey\u003c/code\u003e - high endpoint of the keys in the returned map",
          "\u003ccode\u003etoInclusive\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the high endpoint is to be included in the returned view"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e and \n\u003ccode\u003etoKey\u003c/code\u003e cannot be compared to one another using this map\u0027s comparator (or, if the map has no comparator, using natural ordering). Implementations may, but are not required to, throw this exception if \n\u003ccode\u003efromKey\u003c/code\u003e or \n\u003ccode\u003etoKey\u003c/code\u003e cannot be compared to keys currently in the map.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e or \n\u003ccode\u003etoKey\u003c/code\u003e is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e is greater than \n\u003ccode\u003etoKey\u003c/code\u003e; or if this map itself has a restricted range, and \n\u003ccode\u003efromKey\u003c/code\u003e or \n\u003ccode\u003etoKey\u003c/code\u003e lies outside the bounds of the range"
        ],
        "return": [
          "a view of the portion of this map whose keys range from \n\u003ccode\u003efromKey\u003c/code\u003e to \n\u003ccode\u003etoKey\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.ConcurrentNavigableMap",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "toKey",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "inclusive",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "headMap",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html#headMap(K,boolean)\"\u003eheadMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#headMap(K,boolean)\"\u003eheadMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etoKey\u003c/code\u003e - high endpoint of the keys in the returned map",
          "\u003ccode\u003einclusive\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the high endpoint is to be included in the returned view"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etoKey\u003c/code\u003e is not compatible with this map\u0027s comparator (or, if the map has no comparator, if \n\u003ccode\u003etoKey\u003c/code\u003e does not implement \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eComparable\u003c/code\u003e\u003c/a\u003e). Implementations may, but are not required to, throw this exception if \n\u003ccode\u003etoKey\u003c/code\u003e cannot be compared to keys currently in the map.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etoKey\u003c/code\u003e is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this map itself has a restricted range, and \n\u003ccode\u003etoKey\u003c/code\u003e lies outside the bounds of the range"
        ],
        "return": [
          "a view of the portion of this map whose keys are less than (or equal to, if \n\u003ccode\u003einclusive\u003c/code\u003e is true) \n\u003ccode\u003etoKey\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.ConcurrentNavigableMap",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "fromKey",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "inclusive",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "tailMap",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html#tailMap(K,boolean)\"\u003etailMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#tailMap(K,boolean)\"\u003etailMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efromKey\u003c/code\u003e - low endpoint of the keys in the returned map",
          "\u003ccode\u003einclusive\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the low endpoint is to be included in the returned view"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e is not compatible with this map\u0027s comparator (or, if the map has no comparator, if \n\u003ccode\u003efromKey\u003c/code\u003e does not implement \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eComparable\u003c/code\u003e\u003c/a\u003e). Implementations may, but are not required to, throw this exception if \n\u003ccode\u003efromKey\u003c/code\u003e cannot be compared to keys currently in the map.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this map itself has a restricted range, and \n\u003ccode\u003efromKey\u003c/code\u003e lies outside the bounds of the range"
        ],
        "return": [
          "a view of the portion of this map whose keys are greater than (or equal to, if \n\u003ccode\u003einclusive\u003c/code\u003e is true) \n\u003ccode\u003efromKey\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.ConcurrentNavigableMap",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "fromKey",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "toKey",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "subMap",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html#subMap(K,K)\"\u003esubMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#subMap(K,K)\"\u003esubMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html#subMap(K,K)\"\u003esubMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html\" title\u003d\"interface in java.util\"\u003eSortedMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efromKey\u003c/code\u003e - low endpoint (inclusive) of the keys in the returned map",
          "\u003ccode\u003etoKey\u003c/code\u003e - high endpoint (exclusive) of the keys in the returned map"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e and \n\u003ccode\u003etoKey\u003c/code\u003e cannot be compared to one another using this map\u0027s comparator (or, if the map has no comparator, using natural ordering). Implementations may, but are not required to, throw this exception if \n\u003ccode\u003efromKey\u003c/code\u003e or \n\u003ccode\u003etoKey\u003c/code\u003e cannot be compared to keys currently in the map.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e or \n\u003ccode\u003etoKey\u003c/code\u003e is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e is greater than \n\u003ccode\u003etoKey\u003c/code\u003e; or if this map itself has a restricted range, and \n\u003ccode\u003efromKey\u003c/code\u003e or \n\u003ccode\u003etoKey\u003c/code\u003e lies outside the bounds of the range"
        ],
        "return": [
          "a view of the portion of this map whose keys range from \n\u003ccode\u003efromKey\u003c/code\u003e, inclusive, to \n\u003ccode\u003etoKey\u003c/code\u003e, exclusive"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.ConcurrentNavigableMap",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "toKey",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "headMap",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html#headMap(K)\"\u003eheadMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#headMap(K)\"\u003eheadMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html#headMap(K)\"\u003eheadMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html\" title\u003d\"interface in java.util\"\u003eSortedMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etoKey\u003c/code\u003e - high endpoint (exclusive) of the keys in the returned map"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etoKey\u003c/code\u003e is not compatible with this map\u0027s comparator (or, if the map has no comparator, if \n\u003ccode\u003etoKey\u003c/code\u003e does not implement \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eComparable\u003c/code\u003e\u003c/a\u003e). Implementations may, but are not required to, throw this exception if \n\u003ccode\u003etoKey\u003c/code\u003e cannot be compared to keys currently in the map.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etoKey\u003c/code\u003e is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this map itself has a restricted range, and \n\u003ccode\u003etoKey\u003c/code\u003e lies outside the bounds of the range"
        ],
        "return": [
          "a view of the portion of this map whose keys are strictly less than \n\u003ccode\u003etoKey\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.ConcurrentNavigableMap",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "fromKey",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "tailMap",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html#tailMap(K)\"\u003etailMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"interface in java.util.concurrent\"\u003eConcurrentNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#tailMap(K)\"\u003etailMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html#tailMap(K)\"\u003etailMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html\" title\u003d\"interface in java.util\"\u003eSortedMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efromKey\u003c/code\u003e - low endpoint (inclusive) of the keys in the returned map"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e is not compatible with this map\u0027s comparator (or, if the map has no comparator, if \n\u003ccode\u003efromKey\u003c/code\u003e does not implement \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eComparable\u003c/code\u003e\u003c/a\u003e). Implementations may, but are not required to, throw this exception if \n\u003ccode\u003efromKey\u003c/code\u003e cannot be compared to keys currently in the map.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this map itself has a restricted range, and \n\u003ccode\u003efromKey\u003c/code\u003e lies outside the bounds of the range"
        ],
        "return": [
          "a view of the portion of this map whose keys are greater than or equal to \n\u003ccode\u003efromKey\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map$Entry",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "lowerEntry",
      "comment": "Returns a key-value mapping associated with the greatest key strictly less than the given key, or null if there is no such key. The returned entry does not support the Entry.setValue method.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#lowerEntry(K)\"\u003elowerEntry\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null"
        ],
        "return": [
          "an entry with the greatest key less than \n\u003ccode\u003ekey\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if there is no such key"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "K",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "lowerKey",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#lowerKey(K)\"\u003elowerKey\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null"
        ],
        "return": [
          "the greatest key less than \n\u003ccode\u003ekey\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if there is no such key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map$Entry",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "floorEntry",
      "comment": "Returns a key-value mapping associated with the greatest key less than or equal to the given key, or null if there is no such key. The returned entry does not support the Entry.setValue method.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#floorEntry(K)\"\u003efloorEntry\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null"
        ],
        "return": [
          "an entry with the greatest key less than or equal to \n\u003ccode\u003ekey\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if there is no such key"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "K",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "floorKey",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#floorKey(K)\"\u003efloorKey\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null"
        ],
        "return": [
          "the greatest key less than or equal to \n\u003ccode\u003ekey\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if there is no such key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map$Entry",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "ceilingEntry",
      "comment": "Returns a key-value mapping associated with the least key greater than or equal to the given key, or null if there is no such entry. The returned entry does not support the Entry.setValue method.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#ceilingEntry(K)\"\u003eceilingEntry\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null"
        ],
        "return": [
          "an entry with the least key greater than or equal to \n\u003ccode\u003ekey\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if there is no such key"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "K",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "ceilingKey",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#ceilingKey(K)\"\u003eceilingKey\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null"
        ],
        "return": [
          "the least key greater than or equal to \n\u003ccode\u003ekey\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if there is no such key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map$Entry",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "higherEntry",
      "comment": "Returns a key-value mapping associated with the least key strictly greater than the given key, or null if there is no such key. The returned entry does not support the Entry.setValue method.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#higherEntry(K)\"\u003ehigherEntry\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null"
        ],
        "return": [
          "an entry with the least key greater than \n\u003ccode\u003ekey\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if there is no such key"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.ConcurrentSkipListMap",
        "name": "K",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "higherKey",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#higherKey(K)\"\u003ehigherKey\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the specified key cannot be compared with the keys currently in the map",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified key is null"
        ],
        "return": [
          "the least key greater than \n\u003ccode\u003ekey\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if there is no such key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map$Entry",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "firstEntry",
      "comment": "Returns a key-value mapping associated with the least key in this map, or null if the map is empty. The returned entry does not support the Entry.setValue method.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#firstEntry()\"\u003efirstEntry\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "an entry with the least key, or \n\u003ccode\u003enull\u003c/code\u003e if this map is empty"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map$Entry",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "lastEntry",
      "comment": "Returns a key-value mapping associated with the greatest key in this map, or null if the map is empty. The returned entry does not support the Entry.setValue method.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#lastEntry()\"\u003elastEntry\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "an entry with the greatest key, or \n\u003ccode\u003enull\u003c/code\u003e if this map is empty"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map$Entry",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "pollFirstEntry",
      "comment": "Removes and returns a key-value mapping associated with the least key in this map, or null if the map is empty. The returned entry does not support the Entry.setValue method.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#pollFirstEntry()\"\u003epollFirstEntry\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "the removed first entry of this map, or \n\u003ccode\u003enull\u003c/code\u003e if this map is empty"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map$Entry",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentSkipListMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "pollLastEntry",
      "comment": "Removes and returns a key-value mapping associated with the greatest key in this map, or null if the map is empty. The returned entry does not support the Entry.setValue method.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#pollLastEntry()\"\u003epollLastEntry\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\" title\u003d\"type parameter in ConcurrentSkipListMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "the removed last entry of this map, or \n\u003ccode\u003enull\u003c/code\u003e if this map is empty"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new, empty map, sorted according to the natural ordering of the keys.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Comparator",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "owner": "java.util.concurrent.ConcurrentSkipListMap",
                    "name": "K",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "comparator",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new, empty map, sorted according to the specified comparator.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecomparator\u003c/code\u003e - the comparator that will be used to order this map. If \n\u003ccode\u003enull\u003c/code\u003e, the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003enatural ordering\u003c/a\u003e of the keys will be used."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "java.util.concurrent.ConcurrentSkipListMap",
                    "name": "K",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "upperBounds": [
                  {
                    "owner": "java.util.concurrent.ConcurrentSkipListMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "m",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new map containing the same mappings as the given map, sorted according to the natural ordering of the keys.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003em\u003c/code\u003e - the map whose mappings are to be placed in this map"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the keys in \n\u003ccode\u003em\u003c/code\u003e are not \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eComparable\u003c/code\u003e\u003c/a\u003e, or are not mutually comparable",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified map or any of its keys or values are null"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.SortedMap",
            "parameters": [
              {
                "owner": "java.util.concurrent.ConcurrentSkipListMap",
                "name": "K",
                "type": "Variable"
              },
              {
                "upperBounds": [
                  {
                    "owner": "java.util.concurrent.ConcurrentSkipListMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "m",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new map containing the same mappings and using the same ordering as the specified sorted map.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003em\u003c/code\u003e - the sorted map whose mappings are to be placed in this map, and whose comparator is to be used to sort this map"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified sorted map or any of its keys or values are null"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "K",
      "type": "Variable"
    },
    {
      "name": "V",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.util.concurrent.ConcurrentSkipListMap",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.util.concurrent.ConcurrentSkipListMap\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}