{
  "packageName": "java.util.concurrent",
  "simpleName": "ConcurrentNavigableMap",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "interfaces": [
    {
      "name": "java.util.concurrent.ConcurrentMap",
      "parameters": [
        {
          "name": "K",
          "type": "Class"
        },
        {
          "name": "V",
          "type": "Class"
        }
      ],
      "type": "Class"
    },
    {
      "name": "java.util.NavigableMap",
      "parameters": [
        {
          "name": "K",
          "type": "Class"
        },
        {
          "name": "V",
          "type": "Class"
        }
      ],
      "type": "Class"
    }
  ],
  "members": [
    {
      "returnType": {
        "name": "java.util.concurrent.ConcurrentNavigableMap",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "subMap",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#subMap(K,boolean,K,boolean)\"\u003esubMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efromKey\u003c/code\u003e - low endpoint of the keys in the returned map",
          "\u003ccode\u003efromInclusive\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the low endpoint is to be included in the returned view",
          "\u003ccode\u003etoKey\u003c/code\u003e - high endpoint of the keys in the returned map",
          "\u003ccode\u003etoInclusive\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the high endpoint is to be included in the returned view"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e and \n\u003ccode\u003etoKey\u003c/code\u003e cannot be compared to one another using this map\u0027s comparator (or, if the map has no comparator, using natural ordering). Implementations may, but are not required to, throw this exception if \n\u003ccode\u003efromKey\u003c/code\u003e or \n\u003ccode\u003etoKey\u003c/code\u003e cannot be compared to keys currently in the map.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e or \n\u003ccode\u003etoKey\u003c/code\u003e is null and this map does not permit null keys",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e is greater than \n\u003ccode\u003etoKey\u003c/code\u003e; or if this map itself has a restricted range, and \n\u003ccode\u003efromKey\u003c/code\u003e or \n\u003ccode\u003etoKey\u003c/code\u003e lies outside the bounds of the range"
        ],
        "return": [
          "a view of the portion of this map whose keys range from \n\u003ccode\u003efromKey\u003c/code\u003e to \n\u003ccode\u003etoKey\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.ConcurrentNavigableMap",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "headMap",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#headMap(K,boolean)\"\u003eheadMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etoKey\u003c/code\u003e - high endpoint of the keys in the returned map",
          "\u003ccode\u003einclusive\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the high endpoint is to be included in the returned view"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etoKey\u003c/code\u003e is not compatible with this map\u0027s comparator (or, if the map has no comparator, if \n\u003ccode\u003etoKey\u003c/code\u003e does not implement \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eComparable\u003c/code\u003e\u003c/a\u003e). Implementations may, but are not required to, throw this exception if \n\u003ccode\u003etoKey\u003c/code\u003e cannot be compared to keys currently in the map.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etoKey\u003c/code\u003e is null and this map does not permit null keys",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this map itself has a restricted range, and \n\u003ccode\u003etoKey\u003c/code\u003e lies outside the bounds of the range"
        ],
        "return": [
          "a view of the portion of this map whose keys are less than (or equal to, if \n\u003ccode\u003einclusive\u003c/code\u003e is true) \n\u003ccode\u003etoKey\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.ConcurrentNavigableMap",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "tailMap",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#tailMap(K,boolean)\"\u003etailMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efromKey\u003c/code\u003e - low endpoint of the keys in the returned map",
          "\u003ccode\u003einclusive\u003c/code\u003e - \n\u003ccode\u003etrue\u003c/code\u003e if the low endpoint is to be included in the returned view"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e is not compatible with this map\u0027s comparator (or, if the map has no comparator, if \n\u003ccode\u003efromKey\u003c/code\u003e does not implement \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eComparable\u003c/code\u003e\u003c/a\u003e). Implementations may, but are not required to, throw this exception if \n\u003ccode\u003efromKey\u003c/code\u003e cannot be compared to keys currently in the map.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e is null and this map does not permit null keys",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this map itself has a restricted range, and \n\u003ccode\u003efromKey\u003c/code\u003e lies outside the bounds of the range"
        ],
        "return": [
          "a view of the portion of this map whose keys are greater than (or equal to, if \n\u003ccode\u003einclusive\u003c/code\u003e is true) \n\u003ccode\u003efromKey\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.ConcurrentNavigableMap",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "subMap",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#subMap(K,K)\"\u003esubMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html#subMap(K,K)\"\u003esubMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html\" title\u003d\"interface in java.util\"\u003eSortedMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efromKey\u003c/code\u003e - low endpoint (inclusive) of the keys in the returned map",
          "\u003ccode\u003etoKey\u003c/code\u003e - high endpoint (exclusive) of the keys in the returned map"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e and \n\u003ccode\u003etoKey\u003c/code\u003e cannot be compared to one another using this map\u0027s comparator (or, if the map has no comparator, using natural ordering). Implementations may, but are not required to, throw this exception if \n\u003ccode\u003efromKey\u003c/code\u003e or \n\u003ccode\u003etoKey\u003c/code\u003e cannot be compared to keys currently in the map.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e or \n\u003ccode\u003etoKey\u003c/code\u003e is null and this map does not permit null keys",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e is greater than \n\u003ccode\u003etoKey\u003c/code\u003e; or if this map itself has a restricted range, and \n\u003ccode\u003efromKey\u003c/code\u003e or \n\u003ccode\u003etoKey\u003c/code\u003e lies outside the bounds of the range"
        ],
        "return": [
          "a view of the portion of this map whose keys range from \n\u003ccode\u003efromKey\u003c/code\u003e, inclusive, to \n\u003ccode\u003etoKey\u003c/code\u003e, exclusive"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.ConcurrentNavigableMap",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "headMap",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#headMap(K)\"\u003eheadMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html#headMap(K)\"\u003eheadMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html\" title\u003d\"interface in java.util\"\u003eSortedMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etoKey\u003c/code\u003e - high endpoint (exclusive) of the keys in the returned map"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etoKey\u003c/code\u003e is not compatible with this map\u0027s comparator (or, if the map has no comparator, if \n\u003ccode\u003etoKey\u003c/code\u003e does not implement \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eComparable\u003c/code\u003e\u003c/a\u003e). Implementations may, but are not required to, throw this exception if \n\u003ccode\u003etoKey\u003c/code\u003e cannot be compared to keys currently in the map.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etoKey\u003c/code\u003e is null and this map does not permit null keys",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this map itself has a restricted range, and \n\u003ccode\u003etoKey\u003c/code\u003e lies outside the bounds of the range"
        ],
        "return": [
          "a view of the portion of this map whose keys are strictly less than \n\u003ccode\u003etoKey\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.ConcurrentNavigableMap",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "tailMap",
      "comment": "Description copied from interface: NavigableMap",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#tailMap(K)\"\u003etailMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html#tailMap(K)\"\u003etailMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html\" title\u003d\"interface in java.util\"\u003eSortedMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efromKey\u003c/code\u003e - low endpoint (inclusive) of the keys in the returned map"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e is not compatible with this map\u0027s comparator (or, if the map has no comparator, if \n\u003ccode\u003efromKey\u003c/code\u003e does not implement \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eComparable\u003c/code\u003e\u003c/a\u003e). Implementations may, but are not required to, throw this exception if \n\u003ccode\u003efromKey\u003c/code\u003e cannot be compared to keys currently in the map.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efromKey\u003c/code\u003e is null and this map does not permit null keys",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this map itself has a restricted range, and \n\u003ccode\u003efromKey\u003c/code\u003e lies outside the bounds of the range"
        ],
        "return": [
          "a view of the portion of this map whose keys are greater than or equal to \n\u003ccode\u003efromKey\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.ConcurrentNavigableMap",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "K",
            "type": "Variable"
          },
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "descendingMap",
      "comment": "Returns a reverse order view of the mappings contained in this map. The descending map is backed by this map, so changes to the map are reflected in the descending map, and vice-versa. The returned map has an ordering equivalent to Collections.reverseOrder(comparator()). The expression m.descendingMap().descendingMap() returns a view of m essentially equivalent to m.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#descendingMap()\"\u003edescendingMap\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a reverse order view of this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.NavigableSet",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "K",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "navigableKeySet",
      "comment": "Returns a NavigableSet view of the keys contained in this map. The set\u0027s iterator returns the keys in ascending order. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. The set supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Set.remove, removeAll, retainAll, and clear operations. It does not support the add or addAll operations. The view\u0027s iterators and spliterators are weakly consistent.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#navigableKeySet()\"\u003enavigableKeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a navigable set view of the keys in this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.NavigableSet",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "K",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "keySet",
      "comment": "Returns a NavigableSet view of the keys contained in this map. The set\u0027s iterator returns the keys in ascending order. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. The set supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Set.remove, removeAll, retainAll, and clear operations. It does not support the add or addAll operations. The view\u0027s iterators and spliterators are weakly consistent. This method is equivalent to method navigableKeySet.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#keySet()\"\u003ekeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html#keySet()\"\u003ekeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SortedMap.html\" title\u003d\"interface in java.util\"\u003eSortedMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a navigable set view of the keys in this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.NavigableSet",
        "parameters": [
          {
            "owner": "java.util.concurrent.ConcurrentNavigableMap",
            "name": "K",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "descendingKeySet",
      "comment": "Returns a reverse order NavigableSet view of the keys contained in this map. The set\u0027s iterator returns the keys in descending order. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. The set supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Set.remove, removeAll, retainAll, and clear operations. It does not support the add or addAll operations. The view\u0027s iterators and spliterators are weakly consistent.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html#descendingKeySet()\"\u003edescendingKeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/NavigableMap.html\" title\u003d\"interface in java.util\"\u003eNavigableMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ConcurrentNavigableMap.html\" title\u003d\"type parameter in ConcurrentNavigableMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a reverse order navigable set view of the keys in this map"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "K",
      "type": "Variable"
    },
    {
      "name": "V",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.util.concurrent.ConcurrentNavigableMap",
  "comment": "A \n\u003ca href\u003d\"ConcurrentMap.html\" title\u003d\"interface in java.util.concurrent\"\u003e\u003ccode\u003eConcurrentMap\u003c/code\u003e\u003c/a\u003e supporting \n\u003ca href\u003d\"../NavigableMap.html\" title\u003d\"interface in java.util\"\u003e\u003ccode\u003eNavigableMap\u003c/code\u003e\u003c/a\u003e operations, and recursively so for its navigable sub-maps. \n\u003cp\u003eThis interface is a member of the \u003ca href\u003d\"../../../../java.base/java/util/package-summary.html#CollectionsFramework\"\u003e Java Collections Framework\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.6"
    ]
  }
}