{
  "packageName": "java.util.concurrent",
  "simpleName": "CompletableFuture",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "supplyAsync",
      "comment": "Returns a new CompletableFuture that is asynchronously completed by a task running in the ForkJoinPool.commonPool() with the value obtained by calling the given Supplier.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the function\u0027s return type"
        ],
        "param": [
          "\u003ccode\u003esupplier\u003c/code\u003e - a function returning the value to be used to complete the returned CompletableFuture"
        ],
        "return": [
          "the new CompletableFuture"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "supplyAsync",
      "comment": "Returns a new CompletableFuture that is asynchronously completed by a task running in the given executor with the value obtained by calling the given Supplier.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the function\u0027s return type"
        ],
        "param": [
          "\u003ccode\u003esupplier\u003c/code\u003e - a function returning the value to be used to complete the returned CompletableFuture",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the executor to use for asynchronous execution"
        ],
        "return": [
          "the new CompletableFuture"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "runAsync",
      "comment": "Returns a new CompletableFuture that is asynchronously completed by a task running in the ForkJoinPool.commonPool() after it runs the given action.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erunnable\u003c/code\u003e - the action to run before completing the returned CompletableFuture"
        ],
        "return": [
          "the new CompletableFuture"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "runAsync",
      "comment": "Returns a new CompletableFuture that is asynchronously completed by a task running in the given executor after it runs the given action.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003erunnable\u003c/code\u003e - the action to run before completing the returned CompletableFuture",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the executor to use for asynchronous execution"
        ],
        "return": [
          "the new CompletableFuture"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "completedFuture",
      "comment": "Returns a new CompletableFuture that is already completed with the given value.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the type of the value"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the value"
        ],
        "return": [
          "the completed CompletableFuture"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isDone",
      "comment": "Returns true if completed in any fashion: normally, exceptionally, or via cancellation.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/Future.html#isDone()\"\u003eisDone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/Future.html\" title\u003d\"interface in java.util.concurrent\"\u003eFuture\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if completed"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.CompletableFuture",
        "name": "T",
        "type": "Variable"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "get",
      "comment": "Waits if necessary for this future to complete, and then returns its result.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/Future.html#get()\"\u003eget\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/Future.html\" title\u003d\"interface in java.util.concurrent\"\u003eFuture\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CancellationException.html\" title\u003d\"class in java.util.concurrent\"\u003eCancellationException\u003c/a\u003e\u003c/code\u003e - if this future was cancelled",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutionException.html\" title\u003d\"class in java.util.concurrent\"\u003eExecutionException\u003c/a\u003e\u003c/code\u003e - if this future completed exceptionally",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - if the current thread was interrupted while waiting"
        ],
        "return": [
          "the result value"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.CompletableFuture",
        "name": "T",
        "type": "Variable"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "get",
      "comment": "Waits if necessary for at most the given time for this future to complete, and then returns its result, if available.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/Future.html#get(long,java.util.concurrent.TimeUnit)\"\u003eget\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/Future.html\" title\u003d\"interface in java.util.concurrent\"\u003eFuture\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003etimeout\u003c/code\u003e - the maximum time to wait",
          "\u003ccode\u003eunit\u003c/code\u003e - the time unit of the timeout argument"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CancellationException.html\" title\u003d\"class in java.util.concurrent\"\u003eCancellationException\u003c/a\u003e\u003c/code\u003e - if this future was cancelled",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/ExecutionException.html\" title\u003d\"class in java.util.concurrent\"\u003eExecutionException\u003c/a\u003e\u003c/code\u003e - if this future completed exceptionally",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - if the current thread was interrupted while waiting",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/TimeoutException.html\" title\u003d\"class in java.util.concurrent\"\u003eTimeoutException\u003c/a\u003e\u003c/code\u003e - if the wait timed out"
        ],
        "return": [
          "the result value"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.CompletableFuture",
        "name": "T",
        "type": "Variable"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "join",
      "comment": "Returns the result value when complete, or throws an (unchecked) exception if completed exceptionally. To better conform with the use of common functional forms, if a computation involved in the completion of this CompletableFuture threw an exception, this method throws an (unchecked) CompletionException with the underlying exception as its cause.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CancellationException.html\" title\u003d\"class in java.util.concurrent\"\u003eCancellationException\u003c/a\u003e\u003c/code\u003e - if the computation was cancelled",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionException.html\" title\u003d\"class in java.util.concurrent\"\u003eCompletionException\u003c/a\u003e\u003c/code\u003e - if this future completed exceptionally or a completion computation threw an exception"
        ],
        "return": [
          "the result value"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.concurrent.CompletableFuture",
        "name": "T",
        "type": "Variable"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNow",
      "comment": "Returns the result value (or throws any encountered exception) if completed, else returns the given valueIfAbsent.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003evalueIfAbsent\u003c/code\u003e - the value to return if not completed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CancellationException.html\" title\u003d\"class in java.util.concurrent\"\u003eCancellationException\u003c/a\u003e\u003c/code\u003e - if the computation was cancelled",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionException.html\" title\u003d\"class in java.util.concurrent\"\u003eCompletionException\u003c/a\u003e\u003c/code\u003e - if this future completed exceptionally or a completion computation threw an exception"
        ],
        "return": [
          "the result value, if completed, else the given valueIfAbsent"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "complete",
      "comment": "If not already completed, sets the value returned by get() and related methods to the given value.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the result value"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this invocation caused this CompletableFuture to transition to a completed state, else \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "completeExceptionally",
      "comment": "If not already completed, causes invocations of get() and related methods to throw the given exception.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eex\u003c/code\u003e - the exception"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this invocation caused this CompletableFuture to transition to a completed state, else \n\u003ccode\u003efalse\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenApply",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the function\u0027s return type"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenApply(java.util.function.Function)\"\u003ethenApply\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute the value of the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenApplyAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the function\u0027s return type"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenApplyAsync(java.util.function.Function)\"\u003ethenApplyAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute the value of the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenApplyAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the function\u0027s return type"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenApplyAsync(java.util.function.Function,java.util.concurrent.Executor)\"\u003ethenApplyAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute the value of the returned CompletionStage",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the executor to use for asynchronous execution"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenAccept",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenAccept(java.util.function.Consumer)\"\u003ethenAccept\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenAcceptAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenAcceptAsync(java.util.function.Consumer)\"\u003ethenAcceptAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenAcceptAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenAcceptAsync(java.util.function.Consumer,java.util.concurrent.Executor)\"\u003ethenAcceptAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the executor to use for asynchronous execution"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenRun",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenRun(java.lang.Runnable)\"\u003ethenRun\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenRunAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenRunAsync(java.lang.Runnable)\"\u003ethenRunAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenRunAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenRunAsync(java.lang.Runnable,java.util.concurrent.Executor)\"\u003ethenRunAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the executor to use for asynchronous execution"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "V",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        },
        {
          "name": "V",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenCombine",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the type of the other CompletionStage\u0027s result",
          "\u003ccode\u003eV\u003c/code\u003e - the function\u0027s return type"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenCombine(java.util.concurrent.CompletionStage,java.util.function.BiFunction)\"\u003ethenCombine\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute the value of the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "V",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        },
        {
          "name": "V",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenCombineAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the type of the other CompletionStage\u0027s result",
          "\u003ccode\u003eV\u003c/code\u003e - the function\u0027s return type"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenCombineAsync(java.util.concurrent.CompletionStage,java.util.function.BiFunction)\"\u003ethenCombineAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute the value of the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "V",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        },
        {
          "name": "V",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenCombineAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the type of the other CompletionStage\u0027s result",
          "\u003ccode\u003eV\u003c/code\u003e - the function\u0027s return type"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenCombineAsync(java.util.concurrent.CompletionStage,java.util.function.BiFunction,java.util.concurrent.Executor)\"\u003ethenCombineAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute the value of the returned CompletionStage",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the executor to use for asynchronous execution"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenAcceptBoth",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the type of the other CompletionStage\u0027s result"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenAcceptBoth(java.util.concurrent.CompletionStage,java.util.function.BiConsumer)\"\u003ethenAcceptBoth\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenAcceptBothAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the type of the other CompletionStage\u0027s result"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenAcceptBothAsync(java.util.concurrent.CompletionStage,java.util.function.BiConsumer)\"\u003ethenAcceptBothAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenAcceptBothAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the type of the other CompletionStage\u0027s result"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenAcceptBothAsync(java.util.concurrent.CompletionStage,java.util.function.BiConsumer,java.util.concurrent.Executor)\"\u003ethenAcceptBothAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the executor to use for asynchronous execution"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "runAfterBoth",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#runAfterBoth(java.util.concurrent.CompletionStage,java.lang.Runnable)\"\u003erunAfterBoth\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "runAfterBothAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#runAfterBothAsync(java.util.concurrent.CompletionStage,java.lang.Runnable)\"\u003erunAfterBothAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "runAfterBothAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#runAfterBothAsync(java.util.concurrent.CompletionStage,java.lang.Runnable,java.util.concurrent.Executor)\"\u003erunAfterBothAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the executor to use for asynchronous execution"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "applyToEither",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the function\u0027s return type"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#applyToEither(java.util.concurrent.CompletionStage,java.util.function.Function)\"\u003eapplyToEither\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute the value of the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "applyToEitherAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the function\u0027s return type"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#applyToEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Function)\"\u003eapplyToEitherAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute the value of the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "applyToEitherAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the function\u0027s return type"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#applyToEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Function,java.util.concurrent.Executor)\"\u003eapplyToEitherAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute the value of the returned CompletionStage",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the executor to use for asynchronous execution"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "acceptEither",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#acceptEither(java.util.concurrent.CompletionStage,java.util.function.Consumer)\"\u003eacceptEither\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "acceptEitherAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#acceptEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Consumer)\"\u003eacceptEitherAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "acceptEitherAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#acceptEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Consumer,java.util.concurrent.Executor)\"\u003eacceptEitherAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the executor to use for asynchronous execution"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "runAfterEither",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#runAfterEither(java.util.concurrent.CompletionStage,java.lang.Runnable)\"\u003erunAfterEither\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "runAfterEitherAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#runAfterEitherAsync(java.util.concurrent.CompletionStage,java.lang.Runnable)\"\u003erunAfterEitherAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "runAfterEitherAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#runAfterEitherAsync(java.util.concurrent.CompletionStage,java.lang.Runnable,java.util.concurrent.Executor)\"\u003erunAfterEitherAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the other CompletionStage",
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform before completing the returned CompletionStage",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the executor to use for asynchronous execution"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenCompose",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the type of the returned CompletionStage\u0027s result"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenCompose(java.util.function.Function)\"\u003ethenCompose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute another CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenComposeAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the type of the returned CompletionStage\u0027s result"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenComposeAsync(java.util.function.Function)\"\u003ethenComposeAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute another CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "thenComposeAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the type of the returned CompletionStage\u0027s result"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#thenComposeAsync(java.util.function.Function,java.util.concurrent.Executor)\"\u003ethenComposeAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute another CompletionStage",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the executor to use for asynchronous execution"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "owner": "java.util.concurrent.CompletableFuture",
            "name": "T",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "whenComplete",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#whenComplete(java.util.function.BiConsumer)\"\u003ewhenComplete\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "owner": "java.util.concurrent.CompletableFuture",
            "name": "T",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "whenCompleteAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#whenCompleteAsync(java.util.function.BiConsumer)\"\u003ewhenCompleteAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "owner": "java.util.concurrent.CompletableFuture",
            "name": "T",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "whenCompleteAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)\"\u003ewhenCompleteAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to perform",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the executor to use for asynchronous execution"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "handle",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the function\u0027s return type"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#handle(java.util.function.BiFunction)\"\u003ehandle\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute the value of the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "handleAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the function\u0027s return type"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#handleAsync(java.util.function.BiFunction)\"\u003ehandleAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute the value of the returned CompletionStage"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "handleAsync",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the function\u0027s return type"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#handleAsync(java.util.function.BiFunction,java.util.concurrent.Executor)\"\u003ehandleAsync\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute the value of the returned CompletionStage",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the executor to use for asynchronous execution"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "owner": "java.util.concurrent.CompletableFuture",
            "name": "T",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toCompletableFuture",
      "comment": "Returns this CompletableFuture.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#toCompletableFuture()\"\u003etoCompletableFuture\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "this CompletableFuture"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "owner": "java.util.concurrent.CompletableFuture",
            "name": "T",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "exceptionally",
      "comment": "Description copied from interface: CompletionStage",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html#exceptionally(java.util.function.Function)\"\u003eexceptionally\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003eCompletionStage\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efn\u003c/code\u003e - the function to use to compute the value of the returned CompletionStage if this CompletionStage completed exceptionally"
        ],
        "return": [
          "the new CompletionStage"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Void",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "allOf",
      "comment": "Returns a new CompletableFuture that is completed when all of the given CompletableFutures complete. If any of the given CompletableFutures complete exceptionally, then the returned CompletableFuture also does so, with a CompletionException holding this exception as its cause. Otherwise, the results, if any, of the given CompletableFutures are not reflected in the returned CompletableFuture, but may be obtained by inspecting them individually. If no CompletableFutures are provided, returns a CompletableFuture completed with the value null. Among the applications of this method is to await completion of a set of independent CompletableFutures before continuing a program, as in: CompletableFuture.allOf(c1, c2, c3).join();.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecfs\u003c/code\u003e - the CompletableFutures"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the array or any of its elements are \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "a new CompletableFuture that is completed when all of the given CompletableFutures complete"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "java.lang.Object",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "anyOf",
      "comment": "Returns a new CompletableFuture that is completed when any of the given CompletableFutures complete, with the same result. Otherwise, if it completed exceptionally, the returned CompletableFuture also does so, with a CompletionException holding this exception as its cause. If no CompletableFutures are provided, returns an incomplete CompletableFuture.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecfs\u003c/code\u003e - the CompletableFutures"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the array or any of its elements are \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "a new CompletableFuture that is completed with the result or exception of any of the given CompletableFutures when one completes"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "cancel",
      "comment": "If not already completed, completes this CompletableFuture with a CancellationException. Dependent CompletableFutures that have not already completed will also complete exceptionally, with a CompletionException caused by this CancellationException.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/Future.html#cancel(boolean)\"\u003ecancel\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/Future.html\" title\u003d\"interface in java.util.concurrent\"\u003eFuture\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003emayInterruptIfRunning\u003c/code\u003e - this value has no effect in this implementation because interrupts are not used to control processing."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this task is now cancelled"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isCancelled",
      "comment": "Returns true if this CompletableFuture was cancelled before it completed normally.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/Future.html#isCancelled()\"\u003eisCancelled\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/Future.html\" title\u003d\"interface in java.util.concurrent\"\u003eFuture\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/concurrent/CompletableFuture.html\" title\u003d\"type parameter in CompletableFuture\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this CompletableFuture was cancelled before it completed normally"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isCompletedExceptionally",
      "comment": "Returns true if this CompletableFuture completed exceptionally, in any way. Possible causes include cancellation, explicit invocation of completeExceptionally, and abrupt termination of a CompletionStage action.",
      "annotations": [],
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this CompletableFuture completed exceptionally"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "obtrudeValue",
      "comment": "Forcibly sets or resets the value subsequently returned by method get() and related methods, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the completion value"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "obtrudeException",
      "comment": "Forcibly causes subsequent invocations of method get() and related methods to throw the given exception, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eex\u003c/code\u003e - the exception"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the exception is null"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getNumberOfDependents",
      "comment": "Returns the estimated number of CompletableFutures whose completions are awaiting completion of this CompletableFuture. This method is designed for use in monitoring system state, not for synchronization control.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the number of dependent CompletableFutures"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string identifying this CompletableFuture, as well as its completion state. The state, in brackets, contains the String \"Completed Normally\" or the String \"Completed Exceptionally\", or the String \"Not completed\" followed by the number of CompletableFutures dependent upon its completion, if any.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string identifying this CompletableFuture, as well as its state"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "newIncompleteFuture",
      "comment": "Returns a new incomplete CompletableFuture of the type to be returned by a CompletionStage method. Subclasses should normally override this method to return an instance of the same class as this CompletableFuture. The default implementation returns an instance of class CompletableFuture.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the type of the value"
        ],
        "return": [
          "a new CompletableFuture"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.Executor",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "defaultExecutor",
      "comment": "Returns the default Executor used for async methods that do not specify an Executor. This class uses the ForkJoinPool.commonPool() if it supports more than one parallel thread, or else an Executor using one thread per async task. This method may be overridden in subclasses to return an Executor that provides at least one independent thread.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the executor"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "owner": "java.util.concurrent.CompletableFuture",
            "name": "T",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "copy",
      "comment": "Returns a new CompletableFuture that is completed normally with the same value as this CompletableFuture when it completes normally. If this CompletableFuture completes exceptionally, then the returned CompletableFuture completes exceptionally with a CompletionException with this exception as cause. The behavior is equivalent to thenApply(x -\u003e x). This method may be useful as a form of \"defensive copying\", to prevent clients from completing, while still being able to arrange dependent actions.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the new CompletableFuture"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletionStage",
        "parameters": [
          {
            "owner": "java.util.concurrent.CompletableFuture",
            "name": "T",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "minimalCompletionStage",
      "comment": "Returns a new CompletionStage that is completed normally with the same value as this CompletableFuture when it completes normally, and cannot be independently completed or otherwise used in ways not defined by the methods of interface CompletionStage. If this CompletableFuture completes exceptionally, then the returned CompletionStage completes exceptionally with a CompletionException with this exception as cause. Unless overridden by a subclass, a new non-minimal CompletableFuture with all methods available can be obtained from a minimal CompletionStage via toCompletableFuture(). For example, completion of a minimal stage can be awaited by  minimalStage.toCompletableFuture().join();",
      "annotations": [],
      "tagMap": {
        "return": [
          "the new CompletionStage"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "owner": "java.util.concurrent.CompletableFuture",
            "name": "T",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "completeAsync",
      "comment": "Completes this CompletableFuture with the result of the given Supplier function invoked from an asynchronous task using the given executor.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003esupplier\u003c/code\u003e - a function returning the value to be used to complete this CompletableFuture",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the executor to use for asynchronous execution"
        ],
        "return": [
          "this CompletableFuture"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "owner": "java.util.concurrent.CompletableFuture",
            "name": "T",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "completeAsync",
      "comment": "Completes this CompletableFuture with the result of the given Supplier function invoked from an asynchronous task using the default executor.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003esupplier\u003c/code\u003e - a function returning the value to be used to complete this CompletableFuture"
        ],
        "return": [
          "this CompletableFuture"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "owner": "java.util.concurrent.CompletableFuture",
            "name": "T",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "orTimeout",
      "comment": "Exceptionally completes this CompletableFuture with a TimeoutException if not otherwise completed before the given timeout.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etimeout\u003c/code\u003e - how long to wait before completing exceptionally with a TimeoutException, in units of \n\u003ccode\u003eunit\u003c/code\u003e",
          "\u003ccode\u003eunit\u003c/code\u003e - a \n\u003ccode\u003eTimeUnit\u003c/code\u003e determining how to interpret the \n\u003ccode\u003etimeout\u003c/code\u003e parameter"
        ],
        "return": [
          "this CompletableFuture"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "owner": "java.util.concurrent.CompletableFuture",
            "name": "T",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "completeOnTimeout",
      "comment": "Completes this CompletableFuture with the given value if not otherwise completed before the given timeout.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the value to use upon timeout",
          "\u003ccode\u003etimeout\u003c/code\u003e - how long to wait before completing normally with the given value, in units of \n\u003ccode\u003eunit\u003c/code\u003e",
          "\u003ccode\u003eunit\u003c/code\u003e - a \n\u003ccode\u003eTimeUnit\u003c/code\u003e determining how to interpret the \n\u003ccode\u003etimeout\u003c/code\u003e parameter"
        ],
        "return": [
          "this CompletableFuture"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.Executor",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "delayedExecutor",
      "comment": "Returns a new Executor that submits a task to the given base executor after the given delay (or no delay if non-positive). Each delay commences upon invocation of the returned executor\u0027s execute method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edelay\u003c/code\u003e - how long to delay, in units of \n\u003ccode\u003eunit\u003c/code\u003e",
          "\u003ccode\u003eunit\u003c/code\u003e - a \n\u003ccode\u003eTimeUnit\u003c/code\u003e determining how to interpret the \n\u003ccode\u003edelay\u003c/code\u003e parameter",
          "\u003ccode\u003eexecutor\u003c/code\u003e - the base executor"
        ],
        "return": [
          "the new delayed executor"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.Executor",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "delayedExecutor",
      "comment": "Returns a new Executor that submits a task to the default executor after the given delay (or no delay if non-positive). Each delay commences upon invocation of the returned executor\u0027s execute method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edelay\u003c/code\u003e - how long to delay, in units of \n\u003ccode\u003eunit\u003c/code\u003e",
          "\u003ccode\u003eunit\u003c/code\u003e - a \n\u003ccode\u003eTimeUnit\u003c/code\u003e determining how to interpret the \n\u003ccode\u003edelay\u003c/code\u003e parameter"
        ],
        "return": [
          "the new delayed executor"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletionStage",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "completedStage",
      "comment": "Returns a new CompletionStage that is already completed with the given value and supports only those methods in interface CompletionStage.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the type of the value"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the value"
        ],
        "return": [
          "the completed CompletionStage"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletableFuture",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "failedFuture",
      "comment": "Returns a new CompletableFuture that is already completed exceptionally with the given exception.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the type of the value"
        ],
        "param": [
          "\u003ccode\u003eex\u003c/code\u003e - the exception"
        ],
        "return": [
          "the exceptionally completed CompletableFuture"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.CompletionStage",
        "parameters": [
          {
            "name": "U",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "U",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "failedStage",
      "comment": "Returns a new CompletionStage that is already completed exceptionally with the given exception and supports only those methods in interface CompletionStage.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eU\u003c/code\u003e - the type of the value"
        ],
        "param": [
          "\u003ccode\u003eex\u003c/code\u003e - the exception"
        ],
        "return": [
          "the exceptionally completed CompletionStage"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new incomplete CompletableFuture.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "innerClasses": [
    "java.util.concurrent.CompletableFuture$AsynchronousCompletionTask"
  ],
  "genericParameters": [
    {
      "name": "T",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.util.concurrent.CompletableFuture",
  "comment": "A \n\u003ca href\u003d\"Future.html\" title\u003d\"interface in java.util.concurrent\"\u003e\u003ccode\u003eFuture\u003c/code\u003e\u003c/a\u003e that may be explicitly completed (setting its value and status), and may be used as a \n\u003ca href\u003d\"CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003e\u003ccode\u003eCompletionStage\u003c/code\u003e\u003c/a\u003e, supporting dependent functions and actions that trigger upon its completion. \n\u003cp\u003eWhen two or more threads attempt to \u003ca href\u003d\"#complete(T)\"\u003e\u003ccode\u003ecomplete\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#completeExceptionally(java.lang.Throwable)\"\u003e\u003ccode\u003ecompleteExceptionally\u003c/code\u003e\u003c/a\u003e, or \u003ca href\u003d\"#cancel(boolean)\"\u003e\u003ccode\u003ecancel\u003c/code\u003e\u003c/a\u003e a CompletableFuture, only one of them succeeds. \u003c/p\u003e\n\u003cp\u003eIn addition to these and related methods for directly manipulating status and results, CompletableFuture implements interface \u003ca href\u003d\"CompletionStage.html\" title\u003d\"interface in java.util.concurrent\"\u003e\u003ccode\u003eCompletionStage\u003c/code\u003e\u003c/a\u003e with the following policies: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003eActions supplied for dependent completions of \u003cem\u003enon-async\u003c/em\u003e methods may be performed by the thread that completes the current CompletableFuture, or by any other caller of a completion method. \u003c/li\u003e\n \u003cli\u003eAll \u003cem\u003easync\u003c/em\u003e methods without an explicit Executor argument are performed using the \u003ca href\u003d\"ForkJoinPool.html#commonPool()\"\u003e\u003ccode\u003eForkJoinPool.commonPool()\u003c/code\u003e\u003c/a\u003e (unless it does not support a parallelism level of at least two, in which case, a new Thread is created to run each task). This may be overridden for non-static methods in subclasses by defining method \u003ca href\u003d\"#defaultExecutor()\"\u003e\u003ccode\u003edefaultExecutor()\u003c/code\u003e\u003c/a\u003e. To simplify monitoring, debugging, and tracking, all generated asynchronous tasks are instances of the marker interface \u003ca href\u003d\"CompletableFuture.AsynchronousCompletionTask.html\" title\u003d\"interface in java.util.concurrent\"\u003e\u003ccode\u003eCompletableFuture.AsynchronousCompletionTask\u003c/code\u003e\u003c/a\u003e. Operations with time-delays can use adapter methods defined in this class, for example: \u003ccode\u003esupplyAsync(supplier, delayedExecutor(timeout, timeUnit))\u003c/code\u003e. To support methods with delays and timeouts, this class maintains at most one daemon thread for triggering and cancelling actions, not for running them. \u003c/li\u003e\n \u003cli\u003eAll CompletionStage methods are implemented independently of other public methods, so the behavior of one method is not impacted by overrides of others in subclasses. \u003c/li\u003e\n \u003cli\u003eAll CompletionStage methods return CompletableFutures. To restrict usages to only those methods defined in interface CompletionStage, use method \u003ca href\u003d\"#minimalCompletionStage()\"\u003e\u003ccode\u003eminimalCompletionStage()\u003c/code\u003e\u003c/a\u003e. Or to ensure only that clients do not themselves modify a future, use method \u003ca href\u003d\"#copy()\"\u003e\u003ccode\u003ecopy()\u003c/code\u003e\u003c/a\u003e. \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eCompletableFuture also implements \u003ca href\u003d\"Future.html\" title\u003d\"interface in java.util.concurrent\"\u003e\u003ccode\u003eFuture\u003c/code\u003e\u003c/a\u003e with the following policies: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003eSince (unlike \u003ca href\u003d\"FutureTask.html\" title\u003d\"class in java.util.concurrent\"\u003e\u003ccode\u003eFutureTask\u003c/code\u003e\u003c/a\u003e) this class has no direct control over the computation that causes it to be completed, cancellation is treated as just another form of exceptional completion. Method \u003ca href\u003d\"#cancel(boolean)\"\u003e\u003ccode\u003ecancel\u003c/code\u003e\u003c/a\u003e has the same effect as \u003ccode\u003ecompleteExceptionally(new CancellationException())\u003c/code\u003e. Method \u003ca href\u003d\"#isCompletedExceptionally()\"\u003e\u003ccode\u003eisCompletedExceptionally()\u003c/code\u003e\u003c/a\u003e can be used to determine if a CompletableFuture completed in any exceptional fashion. \u003c/li\u003e\n \u003cli\u003eIn case of exceptional completion with a CompletionException, methods \u003ca href\u003d\"#get()\"\u003e\u003ccode\u003eget()\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"#get(long,java.util.concurrent.TimeUnit)\"\u003e\u003ccode\u003eget(long, TimeUnit)\u003c/code\u003e\u003c/a\u003e throw an \u003ca href\u003d\"ExecutionException.html\" title\u003d\"class in java.util.concurrent\"\u003e\u003ccode\u003eExecutionException\u003c/code\u003e\u003c/a\u003e with the same cause as held in the corresponding CompletionException. To simplify usage in most contexts, this class also defines methods \u003ca href\u003d\"#join()\"\u003e\u003ccode\u003ejoin()\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"#getNow(T)\"\u003e\u003ccode\u003egetNow(T)\u003c/code\u003e\u003c/a\u003e that instead throw the CompletionException directly in these cases. \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eArguments used to pass a completion result (that is, for parameters of type \u003ccode\u003eT\u003c/code\u003e) for methods accepting them may be null, but passing a null value for any other parameter will result in a \u003ca href\u003d\"../../lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eNullPointerException\u003c/code\u003e\u003c/a\u003e being thrown. \u003c/p\u003e\n\u003cp\u003eSubclasses of this class should normally override the \"virtual constructor\" method \u003ca href\u003d\"#newIncompleteFuture()\"\u003e\u003ccode\u003enewIncompleteFuture()\u003c/code\u003e\u003c/a\u003e, which establishes the concrete type returned by CompletionStage methods. For example, here is a class that substitutes a different default Executor and disables the \u003ccode\u003eobtrude\u003c/code\u003e methods: \u003c/p\u003e\n\u003cpre\u003e \u003ccode\u003e\n class MyCompletableFuture\u0026lt;T\u0026gt; extends CompletableFuture\u0026lt;T\u0026gt; {\n   static final Executor myExecutor \u003d ...;\n   public MyCompletableFuture() { }\n   public \u0026lt;U\u0026gt; CompletableFuture\u0026lt;U\u0026gt; newIncompleteFuture() {\n     return new MyCompletableFuture\u0026lt;U\u0026gt;(); }\n   public Executor defaultExecutor() {\n     return myExecutor; }\n   public void obtrudeValue(T value) {\n     throw new UnsupportedOperationException(); }\n   public void obtrudeException(Throwable ex) {\n     throw new UnsupportedOperationException(); }\n }\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.8"
    ]
  }
}