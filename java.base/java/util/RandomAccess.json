{
  "packageName": "java.util",
  "simpleName": "RandomAccess",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.util.RandomAccess",
  "comment": "Marker interface used by \n\u003ccode\u003eList\u003c/code\u003e implementations to indicate that they support fast (generally constant time) random access. The primary purpose of this interface is to allow generic algorithms to alter their behavior to provide good performance when applied to either random or sequential access lists. \n\u003cp\u003eThe best algorithms for manipulating random access lists (such as \u003ccode\u003eArrayList\u003c/code\u003e) can produce quadratic behavior when applied to sequential access lists (such as \u003ccode\u003eLinkedList\u003c/code\u003e). Generic list algorithms are encouraged to check whether the given list is an \u003ccode\u003einstanceof\u003c/code\u003e this interface before applying an algorithm that would provide poor performance if it were applied to a sequential access list, and to alter their behavior if necessary to guarantee acceptable performance. \u003c/p\u003e\n\u003cp\u003eIt is recognized that the distinction between random and sequential access is often fuzzy. For example, some \u003ccode\u003eList\u003c/code\u003e implementations provide asymptotically linear access times if they get huge, but constant access times in practice. Such a \u003ccode\u003eList\u003c/code\u003e implementation should generally implement this interface. As a rule of thumb, a \u003ccode\u003eList\u003c/code\u003e implementation should implement this interface if, for typical instances of the class, this loop: \u003c/p\u003e\n\u003cpre\u003e     for (int i\u003d0, n\u003dlist.size(); i \u0026lt; n; i++)\n         list.get(i);\n \u003c/pre\u003e runs faster than this loop: \n\u003cpre\u003e     for (Iterator i\u003dlist.iterator(); i.hasNext(); )\n         i.next();\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eThis interface is a member of the \u003ca href\u003d\"../../../java.base/java/util/package-summary.html#CollectionsFramework\"\u003e Java Collections Framework\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}