{
  "packageName": "java.util",
  "simpleName": "SimpleTimeZone",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.TimeZone",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "WALL_TIME",
      "comment": "Constant for a mode of start or end time specified as wall clock time. Wall clock time is standard time for the onset rule, and daylight time for the end rule.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.util.SimpleTimeZone.WALL_TIME\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "STANDARD_TIME",
      "comment": "Constant for a mode of start or end time specified as standard time.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.util.SimpleTimeZone.STANDARD_TIME\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "UTC_TIME",
      "comment": "Constant for a mode of start or end time specified as UTC. European Union rules are specified as UTC time, for example.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.util.SimpleTimeZone.UTC_TIME\"\u003eConstant Field Values\u003c/a\u003e"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "year"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setStartYear",
      "comment": "Sets the daylight saving time starting year.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eyear\u003c/code\u003e - The daylight saving starting year."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startMonth"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startDay"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startDayOfWeek"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startTime"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setStartRule",
      "comment": "Sets the daylight saving time start rule. For example, if daylight saving time starts on the first Sunday in April at 2 am in local wall clock time, you can set the start rule by calling: setStartRule(Calendar.APRIL, 1, Calendar.SUNDAY, 2*60*60*1000);",
      "tagMap": {
        "param": [
          "\u003ccode\u003estartMonth\u003c/code\u003e - The daylight saving time starting month. Month is a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONTH\"\u003e\u003ccode\u003eMONTH\u003c/code\u003e\u003c/a\u003e field value (0-based. e.g., 0 for January).",
          "\u003ccode\u003estartDay\u003c/code\u003e - The day of the month on which the daylight saving time starts. See the class description for the special cases of this parameter.",
          "\u003ccode\u003estartDayOfWeek\u003c/code\u003e - The daylight saving time starting day-of-week. See the class description for the special cases of this parameter.",
          "\u003ccode\u003estartTime\u003c/code\u003e - The daylight saving time starting time in local wall clock time, which is local standard time in this case."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003estartMonth\u003c/code\u003e, \n\u003ccode\u003estartDay\u003c/code\u003e, \n\u003ccode\u003estartDayOfWeek\u003c/code\u003e, or \n\u003ccode\u003estartTime\u003c/code\u003e parameters are out of range"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startMonth"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startDay"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startTime"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setStartRule",
      "comment": "Sets the daylight saving time start rule to a fixed date within a month. This method is equivalent to: setStartRule(startMonth, startDay, 0, startTime)",
      "tagMap": {
        "param": [
          "\u003ccode\u003estartMonth\u003c/code\u003e - The daylight saving time starting month. Month is a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONTH\"\u003e\u003ccode\u003eMONTH\u003c/code\u003e\u003c/a\u003e field value (0-based. e.g., 0 for January).",
          "\u003ccode\u003estartDay\u003c/code\u003e - The day of the month on which the daylight saving time starts.",
          "\u003ccode\u003estartTime\u003c/code\u003e - The daylight saving time starting time in local wall clock time, which is local standard time in this case. See the class description for the special cases of this parameter."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003estartMonth\u003c/code\u003e, \n\u003ccode\u003estartDayOfMonth\u003c/code\u003e, or \n\u003ccode\u003estartTime\u003c/code\u003e parameters are out of range"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startMonth"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startDay"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startDayOfWeek"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startTime"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "after"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setStartRule",
      "comment": "Sets the daylight saving time start rule to a weekday before or after the given date within a month, e.g., the first Monday on or after the 8th.",
      "tagMap": {
        "param": [
          "\u003ccode\u003estartMonth\u003c/code\u003e - The daylight saving time starting month. Month is a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONTH\"\u003e\u003ccode\u003eMONTH\u003c/code\u003e\u003c/a\u003e field value (0-based. e.g., 0 for January).",
          "\u003ccode\u003estartDay\u003c/code\u003e - The day of the month on which the daylight saving time starts.",
          "\u003ccode\u003estartDayOfWeek\u003c/code\u003e - The daylight saving time starting day-of-week.",
          "\u003ccode\u003estartTime\u003c/code\u003e - The daylight saving time starting time in local wall clock time, which is local standard time in this case.",
          "\u003ccode\u003eafter\u003c/code\u003e - If true, this rule selects the first \n\u003ccode\u003edayOfWeek\u003c/code\u003e on or \n\u003cem\u003eafter\u003c/em\u003e \n\u003ccode\u003edayOfMonth\u003c/code\u003e. If false, this rule selects the last \n\u003ccode\u003edayOfWeek\u003c/code\u003e on or \n\u003cem\u003ebefore\u003c/em\u003e \n\u003ccode\u003edayOfMonth\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003estartMonth\u003c/code\u003e, \n\u003ccode\u003estartDay\u003c/code\u003e, \n\u003ccode\u003estartDayOfWeek\u003c/code\u003e, or \n\u003ccode\u003estartTime\u003c/code\u003e parameters are out of range"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endMonth"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endDay"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endDayOfWeek"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endTime"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setEndRule",
      "comment": "Sets the daylight saving time end rule. For example, if daylight saving time ends on the last Sunday in October at 2 am in wall clock time, you can set the end rule by calling: setEndRule(Calendar.OCTOBER, -1, Calendar.SUNDAY, 2*60*60*1000);",
      "tagMap": {
        "param": [
          "\u003ccode\u003eendMonth\u003c/code\u003e - The daylight saving time ending month. Month is a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONTH\"\u003e\u003ccode\u003eMONTH\u003c/code\u003e\u003c/a\u003e field value (0-based. e.g., 9 for October).",
          "\u003ccode\u003eendDay\u003c/code\u003e - The day of the month on which the daylight saving time ends. See the class description for the special cases of this parameter.",
          "\u003ccode\u003eendDayOfWeek\u003c/code\u003e - The daylight saving time ending day-of-week. See the class description for the special cases of this parameter.",
          "\u003ccode\u003eendTime\u003c/code\u003e - The daylight saving ending time in local wall clock time, (in milliseconds within the day) which is local daylight time in this case."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eendMonth\u003c/code\u003e, \n\u003ccode\u003eendDay\u003c/code\u003e, \n\u003ccode\u003eendDayOfWeek\u003c/code\u003e, or \n\u003ccode\u003eendTime\u003c/code\u003e parameters are out of range"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endMonth"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endDay"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endTime"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setEndRule",
      "comment": "Sets the daylight saving time end rule to a fixed date within a month. This method is equivalent to: setEndRule(endMonth, endDay, 0, endTime)",
      "tagMap": {
        "param": [
          "\u003ccode\u003eendMonth\u003c/code\u003e - The daylight saving time ending month. Month is a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONTH\"\u003e\u003ccode\u003eMONTH\u003c/code\u003e\u003c/a\u003e field value (0-based. e.g., 9 for October).",
          "\u003ccode\u003eendDay\u003c/code\u003e - The day of the month on which the daylight saving time ends.",
          "\u003ccode\u003eendTime\u003c/code\u003e - The daylight saving ending time in local wall clock time, (in milliseconds within the day) which is local daylight time in this case."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - the \n\u003ccode\u003eendMonth\u003c/code\u003e, \n\u003ccode\u003eendDay\u003c/code\u003e, or \n\u003ccode\u003eendTime\u003c/code\u003e parameters are out of range"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endMonth"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endDay"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endDayOfWeek"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endTime"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "after"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setEndRule",
      "comment": "Sets the daylight saving time end rule to a weekday before or after the given date within a month, e.g., the first Monday on or after the 8th.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eendMonth\u003c/code\u003e - The daylight saving time ending month. Month is a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONTH\"\u003e\u003ccode\u003eMONTH\u003c/code\u003e\u003c/a\u003e field value (0-based. e.g., 9 for October).",
          "\u003ccode\u003eendDay\u003c/code\u003e - The day of the month on which the daylight saving time ends.",
          "\u003ccode\u003eendDayOfWeek\u003c/code\u003e - The daylight saving time ending day-of-week.",
          "\u003ccode\u003eendTime\u003c/code\u003e - The daylight saving ending time in local wall clock time, (in milliseconds within the day) which is local daylight time in this case.",
          "\u003ccode\u003eafter\u003c/code\u003e - If true, this rule selects the first \n\u003ccode\u003eendDayOfWeek\u003c/code\u003e on or \n\u003cem\u003eafter\u003c/em\u003e \n\u003ccode\u003eendDay\u003c/code\u003e. If false, this rule selects the last \n\u003ccode\u003eendDayOfWeek\u003c/code\u003e on or before \n\u003ccode\u003eendDay\u003c/code\u003e of the month."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - the \n\u003ccode\u003eendMonth\u003c/code\u003e, \n\u003ccode\u003eendDay\u003c/code\u003e, \n\u003ccode\u003eendDayOfWeek\u003c/code\u003e, or \n\u003ccode\u003eendTime\u003c/code\u003e parameters are out of range"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "date"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOffset",
      "comment": "Returns the offset of this time zone from UTC at the given time. If daylight saving time is in effect at the given time, the offset value is adjusted with the amount of daylight saving.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#ZONE_OFFSET\"\u003e\u003ccode\u003eCalendar.ZONE_OFFSET\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#DST_OFFSET\"\u003e\u003ccode\u003eCalendar.DST_OFFSET\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#getOffset(long)\"\u003egetOffset\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html\" title\u003d\"class in java.util\"\u003eTimeZone\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003edate\u003c/code\u003e - the time at which the time zone offset is found"
        ],
        "return": [
          "the amount of time in milliseconds to add to UTC to get local time."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "era"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "year"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "month"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "day"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dayOfWeek"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "millis"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOffset",
      "comment": "Returns the difference in milliseconds between local time and UTC, taking into account both the raw offset and the effect of daylight saving, for the specified date and time. This method assumes that the start and end month are distinct. It also uses a default GregorianCalendar object as its underlying calendar, such as for determining leap years. Do not use the result of this method with a calendar other than a default GregorianCalendar. Note: In general, clients should use Calendar.get(ZONE_OFFSET) + Calendar.get(DST_OFFSET) instead of calling this method.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#ZONE_OFFSET\"\u003e\u003ccode\u003eCalendar.ZONE_OFFSET\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#DST_OFFSET\"\u003e\u003ccode\u003eCalendar.DST_OFFSET\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#getOffset(int,int,int,int,int,int)\"\u003egetOffset\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html\" title\u003d\"class in java.util\"\u003eTimeZone\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eera\u003c/code\u003e - The era of the given date.",
          "\u003ccode\u003eyear\u003c/code\u003e - The year in the given date.",
          "\u003ccode\u003emonth\u003c/code\u003e - The month in the given date. Month is 0-based. e.g., 0 for January.",
          "\u003ccode\u003eday\u003c/code\u003e - The day-in-month of the given date.",
          "\u003ccode\u003edayOfWeek\u003c/code\u003e - The day-of-week of the given date.",
          "\u003ccode\u003emillis\u003c/code\u003e - The milliseconds in day in \n\u003cem\u003estandard\u003c/em\u003e local time."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - the \n\u003ccode\u003eera\u003c/code\u003e, \n\u003ccode\u003emonth\u003c/code\u003e, \n\u003ccode\u003eday\u003c/code\u003e, \n\u003ccode\u003edayOfWeek\u003c/code\u003e, or \n\u003ccode\u003emillis\u003c/code\u003e parameters are out of range"
        ],
        "return": [
          "The milliseconds to add to UTC to get local time."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRawOffset",
      "comment": "Gets the GMT offset for this time zone.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SimpleTimeZone.html#setRawOffset(int)\"\u003e\u003ccode\u003esetRawOffset(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#getRawOffset()\"\u003egetRawOffset\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html\" title\u003d\"class in java.util\"\u003eTimeZone\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the GMT offset value in milliseconds"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "offsetMillis"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setRawOffset",
      "comment": "Sets the base time zone offset to GMT. This is the offset to add to UTC to get local time.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SimpleTimeZone.html#getRawOffset()\"\u003e\u003ccode\u003egetRawOffset()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#setRawOffset(int)\"\u003esetRawOffset\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html\" title\u003d\"class in java.util\"\u003eTimeZone\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eoffsetMillis\u003c/code\u003e - the given base time zone offset to GMT."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "millisSavedDuringDST"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDSTSavings",
      "comment": "Sets the amount of time in milliseconds that the clock is advanced during daylight saving time.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SimpleTimeZone.html#getDSTSavings()\"\u003e\u003ccode\u003egetDSTSavings()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003emillisSavedDuringDST\u003c/code\u003e - the number of milliseconds the time is advanced with respect to standard time when the daylight saving time rules are in effect. A positive number, typically one hour (3600000)."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDSTSavings",
      "comment": "Returns the amount of time in milliseconds that the clock is advanced during daylight saving time.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SimpleTimeZone.html#setDSTSavings(int)\"\u003e\u003ccode\u003esetDSTSavings(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#getDSTSavings()\"\u003egetDSTSavings\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html\" title\u003d\"class in java.util\"\u003eTimeZone\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the number of milliseconds the time is advanced with respect to standard time when the daylight saving rules are in effect, or 0 (zero) if this time zone doesn\u0027t observe daylight saving time."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "useDaylightTime",
      "comment": "Queries if this time zone uses daylight saving time.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#inDaylightTime(java.util.Date)\"\u003e\u003ccode\u003eTimeZone.inDaylightTime(Date)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#DST_OFFSET\"\u003e\u003ccode\u003eCalendar.DST_OFFSET\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#useDaylightTime()\"\u003euseDaylightTime\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html\" title\u003d\"class in java.util\"\u003eTimeZone\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "true if this time zone uses daylight saving time; false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "observesDaylightTime",
      "comment": "Returns true if this SimpleTimeZone observes Daylight Saving Time. This method is equivalent to useDaylightTime().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#useDaylightTime()\"\u003e\u003ccode\u003eTimeZone.useDaylightTime()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#inDaylightTime(java.util.Date)\"\u003e\u003ccode\u003eTimeZone.inDaylightTime(Date)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#DST_OFFSET\"\u003e\u003ccode\u003eCalendar.DST_OFFSET\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#observesDaylightTime()\"\u003eobservesDaylightTime\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html\" title\u003d\"class in java.util\"\u003eTimeZone\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this \n\u003ccode\u003eSimpleTimeZone\u003c/code\u003e observes Daylight Saving Time; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Date",
            "type": "Class"
          },
          "field": {
            "name": "date"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "inDaylightTime",
      "comment": "Queries if the given date is in daylight saving time.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#inDaylightTime(java.util.Date)\"\u003einDaylightTime\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html\" title\u003d\"class in java.util\"\u003eTimeZone\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003edate\u003c/code\u003e - the given Date."
        ],
        "return": [
          "true if daylight saving time is in effective at the given date; false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Returns a clone of this SimpleTimeZone instance.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html\" title\u003d\"class in java.util\"\u003eTimeZone\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a clone of this instance."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Generates the hash code for the SimpleDateFormat object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the hash code for this object"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares the equality of two SimpleTimeZone objects.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - The \n\u003ccode\u003eSimpleTimeZone\u003c/code\u003e object to be compared with."
        ],
        "return": [
          "True if the given \n\u003ccode\u003eobj\u003c/code\u003e is the same as this \n\u003ccode\u003eSimpleTimeZone\u003c/code\u003e object; false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.TimeZone",
            "type": "Class"
          },
          "field": {
            "name": "other"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hasSameRules",
      "comment": "Returns true if this zone has the same rules and offset as another zone.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html#hasSameRules(java.util.TimeZone)\"\u003ehasSameRules\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html\" title\u003d\"class in java.util\"\u003eTimeZone\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the TimeZone object to be compared with"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the given zone is a SimpleTimeZone and has the same rules and offset as this one"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of this time zone.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this time zone."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "rawOffset"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "ID"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a SimpleTimeZone with the given base time zone offset from GMT and time zone ID with no daylight saving time schedule.",
      "tagMap": {
        "param": [
          "\u003ccode\u003erawOffset\u003c/code\u003e - The base time zone offset in milliseconds to GMT.",
          "\u003ccode\u003eID\u003c/code\u003e - The time zone name that is given to this instance."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "rawOffset"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "ID"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startMonth"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startDay"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startDayOfWeek"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startTime"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endMonth"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endDay"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endDayOfWeek"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endTime"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a SimpleTimeZone with the given base time zone offset from GMT, time zone ID, and rules for starting and ending the daylight time. Both startTime and endTime are specified to be represented in the wall clock time. The amount of daylight saving is assumed to be 3600000 milliseconds (i.e., one hour). This constructor is equivalent to: \n     SimpleTimeZone(rawOffset,\n                    ID,\n                    startMonth,\n                    startDay,\n                    startDayOfWeek,\n                    startTime,\n                    SimpleTimeZone.WALL_TIME,\n                    endMonth,\n                    endDay,\n                    endDayOfWeek,\n                    endTime,\n                    SimpleTimeZone.WALL_TIME,\n                    3600000)",
      "tagMap": {
        "param": [
          "\u003ccode\u003erawOffset\u003c/code\u003e - The given base time zone offset from GMT.",
          "\u003ccode\u003eID\u003c/code\u003e - The time zone ID which is given to this object.",
          "\u003ccode\u003estartMonth\u003c/code\u003e - The daylight saving time starting month. Month is a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONTH\"\u003e\u003ccode\u003eMONTH\u003c/code\u003e\u003c/a\u003e field value (0-based. e.g., 0 for January).",
          "\u003ccode\u003estartDay\u003c/code\u003e - The day of the month on which the daylight saving time starts. See the class description for the special cases of this parameter.",
          "\u003ccode\u003estartDayOfWeek\u003c/code\u003e - The daylight saving time starting day-of-week. See the class description for the special cases of this parameter.",
          "\u003ccode\u003estartTime\u003c/code\u003e - The daylight saving time starting time in local wall clock time (in milliseconds within the day), which is local standard time in this case.",
          "\u003ccode\u003eendMonth\u003c/code\u003e - The daylight saving time ending month. Month is a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONTH\"\u003e\u003ccode\u003eMONTH\u003c/code\u003e\u003c/a\u003e field value (0-based. e.g., 9 for October).",
          "\u003ccode\u003eendDay\u003c/code\u003e - The day of the month on which the daylight saving time ends. See the class description for the special cases of this parameter.",
          "\u003ccode\u003eendDayOfWeek\u003c/code\u003e - The daylight saving time ending day-of-week. See the class description for the special cases of this parameter.",
          "\u003ccode\u003eendTime\u003c/code\u003e - The daylight saving ending time in local wall clock time, (in milliseconds within the day) which is local daylight time in this case."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the month, day, dayOfWeek, or time parameters are out of range for the start or end rule"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "rawOffset"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "ID"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startMonth"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startDay"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startDayOfWeek"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startTime"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endMonth"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endDay"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endDayOfWeek"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endTime"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dstSavings"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a SimpleTimeZone with the given base time zone offset from GMT, time zone ID, and rules for starting and ending the daylight time. Both startTime and endTime are assumed to be represented in the wall clock time. This constructor is equivalent to: \n     SimpleTimeZone(rawOffset,\n                    ID,\n                    startMonth,\n                    startDay,\n                    startDayOfWeek,\n                    startTime,\n                    SimpleTimeZone.WALL_TIME,\n                    endMonth,\n                    endDay,\n                    endDayOfWeek,\n                    endTime,\n                    SimpleTimeZone.WALL_TIME,\n                    dstSavings)",
      "tagMap": {
        "param": [
          "\u003ccode\u003erawOffset\u003c/code\u003e - The given base time zone offset from GMT.",
          "\u003ccode\u003eID\u003c/code\u003e - The time zone ID which is given to this object.",
          "\u003ccode\u003estartMonth\u003c/code\u003e - The daylight saving time starting month. Month is a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONTH\"\u003e\u003ccode\u003eMONTH\u003c/code\u003e\u003c/a\u003e field value (0-based. e.g., 0 for January).",
          "\u003ccode\u003estartDay\u003c/code\u003e - The day of the month on which the daylight saving time starts. See the class description for the special cases of this parameter.",
          "\u003ccode\u003estartDayOfWeek\u003c/code\u003e - The daylight saving time starting day-of-week. See the class description for the special cases of this parameter.",
          "\u003ccode\u003estartTime\u003c/code\u003e - The daylight saving time starting time in local wall clock time, which is local standard time in this case.",
          "\u003ccode\u003eendMonth\u003c/code\u003e - The daylight saving time ending month. Month is a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONTH\"\u003e\u003ccode\u003eMONTH\u003c/code\u003e\u003c/a\u003e field value (0-based. e.g., 9 for October).",
          "\u003ccode\u003eendDay\u003c/code\u003e - The day of the month on which the daylight saving time ends. See the class description for the special cases of this parameter.",
          "\u003ccode\u003eendDayOfWeek\u003c/code\u003e - The daylight saving time ending day-of-week. See the class description for the special cases of this parameter.",
          "\u003ccode\u003eendTime\u003c/code\u003e - The daylight saving ending time in local wall clock time, which is local daylight time in this case.",
          "\u003ccode\u003edstSavings\u003c/code\u003e - The amount of time in milliseconds saved during daylight saving time."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the month, day, dayOfWeek, or time parameters are out of range for the start or end rule"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "rawOffset"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "ID"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startMonth"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startDay"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startDayOfWeek"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startTime"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "startTimeMode"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endMonth"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endDay"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endDayOfWeek"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endTime"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "endTimeMode"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "dstSavings"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a SimpleTimeZone with the given base time zone offset from GMT, time zone ID, and rules for starting and ending the daylight time. This constructor takes the full set of the start and end rules parameters, including modes of startTime and endTime. The mode specifies either wall time or standard time or UTC time.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SimpleTimeZone.html#WALL_TIME\"\u003e\u003ccode\u003eWALL_TIME\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SimpleTimeZone.html#STANDARD_TIME\"\u003e\u003ccode\u003eSTANDARD_TIME\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SimpleTimeZone.html#UTC_TIME\"\u003e\u003ccode\u003eUTC_TIME\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003erawOffset\u003c/code\u003e - The given base time zone offset from GMT.",
          "\u003ccode\u003eID\u003c/code\u003e - The time zone ID which is given to this object.",
          "\u003ccode\u003estartMonth\u003c/code\u003e - The daylight saving time starting month. Month is a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONTH\"\u003e\u003ccode\u003eMONTH\u003c/code\u003e\u003c/a\u003e field value (0-based. e.g., 0 for January).",
          "\u003ccode\u003estartDay\u003c/code\u003e - The day of the month on which the daylight saving time starts. See the class description for the special cases of this parameter.",
          "\u003ccode\u003estartDayOfWeek\u003c/code\u003e - The daylight saving time starting day-of-week. See the class description for the special cases of this parameter.",
          "\u003ccode\u003estartTime\u003c/code\u003e - The daylight saving time starting time in the time mode specified by \n\u003ccode\u003estartTimeMode\u003c/code\u003e.",
          "\u003ccode\u003estartTimeMode\u003c/code\u003e - The mode of the start time specified by startTime.",
          "\u003ccode\u003eendMonth\u003c/code\u003e - The daylight saving time ending month. Month is a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONTH\"\u003e\u003ccode\u003eMONTH\u003c/code\u003e\u003c/a\u003e field value (0-based. e.g., 9 for October).",
          "\u003ccode\u003eendDay\u003c/code\u003e - The day of the month on which the daylight saving time ends. See the class description for the special cases of this parameter.",
          "\u003ccode\u003eendDayOfWeek\u003c/code\u003e - The daylight saving time ending day-of-week. See the class description for the special cases of this parameter.",
          "\u003ccode\u003eendTime\u003c/code\u003e - The daylight saving ending time in time mode specified by \n\u003ccode\u003eendTimeMode\u003c/code\u003e.",
          "\u003ccode\u003eendTimeMode\u003c/code\u003e - The mode of the end time specified by endTime",
          "\u003ccode\u003edstSavings\u003c/code\u003e - The amount of time in milliseconds saved during daylight saving time."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the month, day, dayOfWeek, time more, or time parameters are out of range for the start or end rule, or if a time mode value is invalid."
        ],
        "since": [
          "1.4"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.util.SimpleTimeZone",
  "comment": "\u003ccode\u003eSimpleTimeZone\u003c/code\u003e is a concrete subclass of \n\u003ccode\u003eTimeZone\u003c/code\u003e that represents a time zone for use with a Gregorian calendar. The class holds an offset from GMT, called \n\u003cem\u003eraw offset\u003c/em\u003e, and start and end rules for a daylight saving time schedule. Since it only holds single values for each, it cannot handle historical changes in the offset from GMT and the daylight saving schedule, except that the \n\u003ca href\u003d\"#setStartYear(int)\"\u003e\u003ccode\u003esetStartYear\u003c/code\u003e\u003c/a\u003e method can specify the year when the daylight saving time schedule starts in effect. \n\u003cp\u003e To construct a \u003ccode\u003eSimpleTimeZone\u003c/code\u003e with a daylight saving time schedule, the schedule can be described with a set of rules, \u003cem\u003estart-rule\u003c/em\u003e and \u003cem\u003eend-rule\u003c/em\u003e. A day when daylight saving time starts or ends is specified by a combination of \u003cem\u003emonth\u003c/em\u003e, \u003cem\u003eday-of-month\u003c/em\u003e, and \u003cem\u003eday-of-week\u003c/em\u003e values. The \u003cem\u003emonth\u003c/em\u003e value is represented by a Calendar \u003ca href\u003d\"Calendar.html#MONTH\"\u003e\u003ccode\u003eMONTH\u003c/code\u003e\u003c/a\u003e field value, such as \u003ca href\u003d\"Calendar.html#MARCH\"\u003e\u003ccode\u003eCalendar.MARCH\u003c/code\u003e\u003c/a\u003e. The \u003cem\u003eday-of-week\u003c/em\u003e value is represented by a Calendar \u003ca href\u003d\"Calendar.html#DAY_OF_WEEK\"\u003e\u003ccode\u003eDAY_OF_WEEK\u003c/code\u003e\u003c/a\u003e value, such as \u003ca href\u003d\"Calendar.html#SUNDAY\"\u003e\u003ccode\u003eSUNDAY\u003c/code\u003e\u003c/a\u003e. The meanings of value combinations are as follows. \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e\u003cb\u003eExact day of month\u003c/b\u003e\u003cbr\u003e To specify an exact day of month, set the \u003cem\u003emonth\u003c/em\u003e and \u003cem\u003eday-of-month\u003c/em\u003e to an exact value, and \u003cem\u003eday-of-week\u003c/em\u003e to zero. For example, to specify March 1, set the \u003cem\u003emonth\u003c/em\u003e to \u003ca href\u003d\"Calendar.html#MARCH\"\u003e\u003ccode\u003eMARCH\u003c/code\u003e\u003c/a\u003e, \u003cem\u003eday-of-month\u003c/em\u003e to 1, and \u003cem\u003eday-of-week\u003c/em\u003e to 0.\u003c/li\u003e \n \u003cli\u003e\u003cb\u003eDay of week on or after day of month\u003c/b\u003e\u003cbr\u003e To specify a day of week on or after an exact day of month, set the \u003cem\u003emonth\u003c/em\u003e to an exact month value, \u003cem\u003eday-of-month\u003c/em\u003e to the day on or after which the rule is applied, and \u003cem\u003eday-of-week\u003c/em\u003e to a negative \u003ca href\u003d\"Calendar.html#DAY_OF_WEEK\"\u003e\u003ccode\u003eDAY_OF_WEEK\u003c/code\u003e\u003c/a\u003e field value. For example, to specify the second Sunday of April, set \u003cem\u003emonth\u003c/em\u003e to \u003ca href\u003d\"Calendar.html#APRIL\"\u003e\u003ccode\u003eAPRIL\u003c/code\u003e\u003c/a\u003e, \u003cem\u003eday-of-month\u003c/em\u003e to 8, and \u003cem\u003eday-of-week\u003c/em\u003e to \u003ccode\u003e-\u003c/code\u003e\u003ca href\u003d\"Calendar.html#SUNDAY\"\u003e\u003ccode\u003eSUNDAY\u003c/code\u003e\u003c/a\u003e.\u003c/li\u003e \n \u003cli\u003e\u003cb\u003eDay of week on or before day of month\u003c/b\u003e\u003cbr\u003e To specify a day of the week on or before an exact day of the month, set \u003cem\u003eday-of-month\u003c/em\u003e and \u003cem\u003eday-of-week\u003c/em\u003e to a negative value. For example, to specify the last Wednesday on or before the 21st of March, set \u003cem\u003emonth\u003c/em\u003e to \u003ca href\u003d\"Calendar.html#MARCH\"\u003e\u003ccode\u003eMARCH\u003c/code\u003e\u003c/a\u003e, \u003cem\u003eday-of-month\u003c/em\u003e is -21 and \u003cem\u003eday-of-week\u003c/em\u003e is \u003ccode\u003e-\u003c/code\u003e\u003ca href\u003d\"Calendar.html#WEDNESDAY\"\u003e\u003ccode\u003eWEDNESDAY\u003c/code\u003e\u003c/a\u003e. \u003c/li\u003e \n \u003cli\u003e\u003cb\u003eLast day-of-week of month\u003c/b\u003e\u003cbr\u003e To specify, the last day-of-week of the month, set \u003cem\u003eday-of-week\u003c/em\u003e to a \u003ca href\u003d\"Calendar.html#DAY_OF_WEEK\"\u003e\u003ccode\u003eDAY_OF_WEEK\u003c/code\u003e\u003c/a\u003e value and \u003cem\u003eday-of-month\u003c/em\u003e to -1. For example, to specify the last Sunday of October, set \u003cem\u003emonth\u003c/em\u003e to \u003ca href\u003d\"Calendar.html#OCTOBER\"\u003e\u003ccode\u003eOCTOBER\u003c/code\u003e\u003c/a\u003e, \u003cem\u003eday-of-week\u003c/em\u003e to \u003ca href\u003d\"Calendar.html#SUNDAY\"\u003e\u003ccode\u003eSUNDAY\u003c/code\u003e\u003c/a\u003e and \u003cem\u003eday-of-month\u003c/em\u003e to -1. \u003c/li\u003e \n\u003c/ul\u003e The time of the day at which daylight saving time starts or ends is specified by a millisecond value within the day. There are three kinds of \n\u003cem\u003emode\u003c/em\u003es to specify the time: \n\u003ca href\u003d\"#WALL_TIME\"\u003e\u003ccode\u003eWALL_TIME\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"#STANDARD_TIME\"\u003e\u003ccode\u003eSTANDARD_TIME\u003c/code\u003e\u003c/a\u003e and \n\u003ca href\u003d\"#UTC_TIME\"\u003e\u003ccode\u003eUTC_TIME\u003c/code\u003e\u003c/a\u003e. For example, if daylight saving time ends at 2:00 am in the wall clock time, it can be specified by 7200000 milliseconds in the \n\u003ca href\u003d\"#WALL_TIME\"\u003e\u003ccode\u003eWALL_TIME\u003c/code\u003e\u003c/a\u003e mode. In this case, the wall clock time for an \n\u003cem\u003eend-rule\u003c/em\u003e means the same thing as the daylight time. \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The following are examples of parameters for constructing time zone objects. \u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\n      // Base GMT offset: -8:00\n      // DST starts:      at 2:00am in standard time\n      //                  on the first Sunday in April\n      // DST ends:        at 2:00am in daylight time\n      //                  on the last Sunday in October\n      // Save:            1 hour\n      SimpleTimeZone(-28800000,\n                     \"America/Los_Angeles\",\n                     Calendar.APRIL, 1, -Calendar.SUNDAY,\n                     7200000,\n                     Calendar.OCTOBER, -1, Calendar.SUNDAY,\n                     7200000,\n                     3600000)\n\n      // Base GMT offset: +1:00\n      // DST starts:      at 1:00am in UTC time\n      //                  on the last Sunday in March\n      // DST ends:        at 1:00am in UTC time\n      //                  on the last Sunday in October\n      // Save:            1 hour\n      SimpleTimeZone(3600000,\n                     \"Europe/Paris\",\n                     Calendar.MARCH, -1, Calendar.SUNDAY,\n                     3600000, SimpleTimeZone.UTC_TIME,\n                     Calendar.OCTOBER, -1, Calendar.SUNDAY,\n                     3600000, SimpleTimeZone.UTC_TIME,\n                     3600000)\n \u003c/code\u003e\u003c/pre\u003e These parameter rules are also applicable to the set rule methods, such as \n\u003ccode\u003esetStartRule\u003c/code\u003e.\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eCalendar\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/GregorianCalendar.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eGregorianCalendar\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TimeZone.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eTimeZone\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.util.SimpleTimeZone\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}