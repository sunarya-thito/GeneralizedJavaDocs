{
  "packageName": "java.util.function",
  "simpleName": "BinaryOperator",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.util.function.BiFunction",
    "parameters": [
      {
        "name": "T",
        "type": "Class"
      },
      {
        "name": "T",
        "type": "Class"
      },
      {
        "name": "T",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.function.BinaryOperator",
        "parameters": [
          {
            "name": "T",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "minBy",
      "comment": "Returns a BinaryOperator which returns the lesser of two elements according to the specified Comparator.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the input arguments of the comparator"
        ],
        "param": [
          "\u003ccode\u003ecomparator\u003c/code\u003e - a \n\u003ccode\u003eComparator\u003c/code\u003e for comparing the two values"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the argument is null"
        ],
        "return": [
          "a \n\u003ccode\u003eBinaryOperator\u003c/code\u003e which returns the lesser of its operands, according to the supplied \n\u003ccode\u003eComparator\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.function.BinaryOperator",
        "parameters": [
          {
            "name": "T",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "maxBy",
      "comment": "Returns a BinaryOperator which returns the greater of two elements according to the specified Comparator.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the input arguments of the comparator"
        ],
        "param": [
          "\u003ccode\u003ecomparator\u003c/code\u003e - a \n\u003ccode\u003eComparator\u003c/code\u003e for comparing the two values"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the argument is null"
        ],
        "return": [
          "a \n\u003ccode\u003eBinaryOperator\u003c/code\u003e which returns the greater of its operands, according to the supplied \n\u003ccode\u003eComparator\u003c/code\u003e"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "T",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.util.function.BinaryOperator",
  "comment": "Represents an operation upon two operands of the same type, producing a result of the same type as the operands. This is a specialization of \n\u003ca href\u003d\"BiFunction.html\" title\u003d\"interface in java.util.function\"\u003e\u003ccode\u003eBiFunction\u003c/code\u003e\u003c/a\u003e for the case where the operands and the result are all of the same type. \n\u003cp\u003eThis is a \u003ca href\u003d\"package-summary.html\"\u003efunctional interface\u003c/a\u003e whose functional method is \u003ca href\u003d\"BiFunction.html#apply(T,U)\"\u003e\u003ccode\u003eBiFunction.apply(Object, Object)\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/function/BiFunction.html\" title\u003d\"interface in java.util.function\"\u003e\u003ccode\u003eBiFunction\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/function/UnaryOperator.html\" title\u003d\"interface in java.util.function\"\u003e\u003ccode\u003eUnaryOperator\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.8"
    ]
  }
}