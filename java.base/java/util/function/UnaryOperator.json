{
  "packageName": "java.util.function",
  "simpleName": "UnaryOperator",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.util.function.Function",
    "parameters": [
      {
        "name": "T",
        "type": "Class"
      },
      {
        "name": "T",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.function.UnaryOperator",
        "parameters": [
          {
            "name": "T",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "identity",
      "comment": "Returns a unary operator that always returns its input argument.",
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the input and output of the operator"
        ],
        "return": [
          "a unary operator that always returns its input argument"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "T",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.util.function.UnaryOperator",
  "comment": "Represents an operation on a single operand that produces a result of the same type as its operand. This is a specialization of \n\u003ccode\u003eFunction\u003c/code\u003e for the case where the operand and result are of the same type. \n\u003cp\u003eThis is a \u003ca href\u003d\"package-summary.html\"\u003efunctional interface\u003c/a\u003e whose functional method is \u003ca href\u003d\"Function.html#apply(T)\"\u003e\u003ccode\u003eFunction.apply(Object)\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/function/Function.html\" title\u003d\"interface in java.util.function\"\u003e\u003ccode\u003eFunction\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.8"
    ]
  }
}