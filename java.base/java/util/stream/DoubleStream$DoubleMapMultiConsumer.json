{
  "packageName": "java.util.stream",
  "simpleName": "DoubleMapMultiConsumer",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "double",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.function.DoubleConsumer",
            "type": "Class"
          },
          "name": "dc",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "accept",
      "comment": "Replaces the given value with zero or more values by feeding the mapped values to the dc consumer.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the double value coming from upstream",
          "\u003ccode\u003edc\u003c/code\u003e - a \n\u003ccode\u003eDoubleConsumer\u003c/code\u003e accepting the mapped values"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 521,
  "name": "java.util.stream.DoubleStream$DoubleMapMultiConsumer",
  "comment": "Represents an operation that accepts a \n\u003ccode\u003edouble\u003c/code\u003e-valued argument and a DoubleConsumer, and returns no result. This functional interface is used by \n\u003ca href\u003d\"DoubleStream.html#mapMulti(java.util.stream.DoubleStream.DoubleMapMultiConsumer)\"\u003e\u003ccode\u003eDoubleStream.mapMulti\u003c/code\u003e\u003c/a\u003e to replace a double value with zero or more double values. \n\u003cp\u003eThis is a \u003ca href\u003d\"../function/package-summary.html\"\u003efunctional interface\u003c/a\u003e whose functional method is \u003ca href\u003d\"#accept(double,java.util.function.DoubleConsumer)\"\u003e\u003ccode\u003eaccept(double, DoubleConsumer)\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/stream/DoubleStream.html#mapMulti(java.util.stream.DoubleStream.DoubleMapMultiConsumer)\"\u003e\u003ccode\u003eDoubleStream.mapMulti(DoubleMapMultiConsumer)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "16"
    ]
  }
}