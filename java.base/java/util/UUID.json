{
  "packageName": "java.util",
  "simpleName": "UUID",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.UUID",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "randomUUID",
      "comment": "Static factory to retrieve a type 4 (pseudo randomly generated) UUID. The UUID is generated using a cryptographically strong pseudo random number generator.",
      "tagMap": {
        "return": [
          "A randomly generated \n\u003ccode\u003eUUID\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.UUID",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "nameUUIDFromBytes",
      "comment": "Static factory to retrieve a type 3 (name based) UUID based on the specified byte array.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - A byte array to be used to construct a \n\u003ccode\u003eUUID\u003c/code\u003e"
        ],
        "return": [
          "A \n\u003ccode\u003eUUID\u003c/code\u003e generated from the specified array"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.UUID",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "fromString",
      "comment": "Creates a UUID from the string standard representation as described in the toString() method.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - A string that specifies a \n\u003ccode\u003eUUID\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If name does not conform to the string representation as described in \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/UUID.html#toString()\"\u003e\u003ccode\u003etoString()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "A \n\u003ccode\u003eUUID\u003c/code\u003e with the specified value"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLeastSignificantBits",
      "comment": "Returns the least significant 64 bits of this UUID\u0027s 128 bit value.",
      "tagMap": {
        "return": [
          "The least significant 64 bits of this UUID\u0027s 128 bit value"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMostSignificantBits",
      "comment": "Returns the most significant 64 bits of this UUID\u0027s 128 bit value.",
      "tagMap": {
        "return": [
          "The most significant 64 bits of this UUID\u0027s 128 bit value"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "version",
      "comment": "The version number associated with this UUID. The version number describes how this UUID was generated. The version number has the following meaning: 1 Time-based UUID 2 DCE security UUID 3 Name-based UUID 4 Randomly generated UUID",
      "tagMap": {
        "return": [
          "The version number of this \n\u003ccode\u003eUUID\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "variant",
      "comment": "The variant number associated with this UUID. The variant number describes the layout of the UUID. The variant number has the following meaning: 0 Reserved for NCS backward compatibility 2 IETF RFC 4122 (Leach-Salz), used by this class 6 Reserved, Microsoft Corporation backward compatibility 7 Reserved for future definition",
      "tagMap": {
        "return": [
          "The variant number of this \n\u003ccode\u003eUUID\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "timestamp",
      "comment": "The timestamp value associated with this UUID. The 60 bit timestamp value is constructed from the time_low, time_mid, and time_hi fields of this UUID. The resulting timestamp is measured in 100-nanosecond units since midnight, October 15, 1582 UTC. The timestamp value is only meaningful in a time-based UUID, which has version type 1. If this UUID is not a time-based UUID then this method throws UnsupportedOperationException.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If this UUID is not a version 1 UUID"
        ],
        "return": [
          "The timestamp of this \n\u003ccode\u003eUUID\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clockSequence",
      "comment": "The clock sequence value associated with this UUID. The 14 bit clock sequence value is constructed from the clock sequence field of this UUID. The clock sequence field is used to guarantee temporal uniqueness in a time-based UUID. The clockSequence value is only meaningful in a time-based UUID, which has version type 1. If this UUID is not a time-based UUID then this method throws UnsupportedOperationException.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If this UUID is not a version 1 UUID"
        ],
        "return": [
          "The clock sequence of this \n\u003ccode\u003eUUID\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "node",
      "comment": "The node value associated with this UUID. The 48 bit node value is constructed from the node field of this UUID. This field is intended to hold the IEEE 802 address of the machine that generated this UUID to guarantee spatial uniqueness. The node value is only meaningful in a time-based UUID, which has version type 1. If this UUID is not a time-based UUID then this method throws UnsupportedOperationException.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If this UUID is not a version 1 UUID"
        ],
        "return": [
          "The node value of this \n\u003ccode\u003eUUID\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a String object representing this UUID. The UUID string representation is as described by this BNF:  \n UUID                   \u003d \u003ctime_low\u003e \"-\" \u003ctime_mid\u003e \"-\"\n                          \u003ctime_high_and_version\u003e \"-\"\n                          \u003cvariant_and_sequence\u003e \"-\"\n                          \u003cnode\u003e\n time_low               \u003d 4*\u003chexOctet\u003e\n time_mid               \u003d 2*\u003chexOctet\u003e\n time_high_and_version  \u003d 2*\u003chexOctet\u003e\n variant_and_sequence   \u003d 2*\u003chexOctet\u003e\n node                   \u003d 6*\u003chexOctet\u003e\n hexOctet               \u003d \u003chexDigit\u003e\u003chexDigit\u003e\n hexDigit               \u003d\n       \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\"\n       | \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\"\n       | \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\"",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "A string representation of this \n\u003ccode\u003eUUID\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns a hash code for this UUID.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "A hash code value for this \n\u003ccode\u003eUUID\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares this object to the specified object. The result is true if and only if the argument is not null, is a UUID object, has the same variant, and contains the same value, bit for bit, as this UUID.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - The object to be compared"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the objects are the same; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.UUID",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "compareTo",
      "comment": "Compares this UUID with the specified UUID. The first of two UUIDs is greater than the second if the most significant field in which the UUIDs differ is greater for the first UUID.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html#compareTo(T)\"\u003ecompareTo\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003eComparable\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/UUID.html\" title\u003d\"class in java.util\"\u003eUUID\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eval\u003c/code\u003e - \n\u003ccode\u003eUUID\u003c/code\u003e to which this \n\u003ccode\u003eUUID\u003c/code\u003e is to be compared"
        ],
        "return": [
          "-1, 0 or 1 as this \n\u003ccode\u003eUUID\u003c/code\u003e is less than, equal to, or greater than \n\u003ccode\u003eval\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "mostSigBits"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "leastSigBits"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new UUID using the specified data. mostSigBits is used for the most significant 64 bits of the UUID and leastSigBits becomes the least significant 64 bits of the UUID.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emostSigBits\u003c/code\u003e - The most significant bits of the \n\u003ccode\u003eUUID\u003c/code\u003e",
          "\u003ccode\u003eleastSigBits\u003c/code\u003e - The least significant bits of the \n\u003ccode\u003eUUID\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "java.util.UUID",
  "comment": "A class that represents an immutable universally unique identifier (UUID). A UUID represents a 128-bit value. \n\u003cp\u003e There exist different variants of these global identifiers. The methods of this class are for manipulating the Leach-Salz variant, although the constructors allow the creation of any variant of UUID (described below). \u003c/p\u003e\n\u003cp\u003e The layout of a variant 2 (Leach-Salz) UUID is as follows: The most significant long consists of the following unsigned fields: \u003c/p\u003e\n\u003cpre\u003e 0xFFFFFFFF00000000 time_low\n 0x00000000FFFF0000 time_mid\n 0x000000000000F000 version\n 0x0000000000000FFF time_hi\n \u003c/pre\u003e The least significant long consists of the following unsigned fields: \n\u003cpre\u003e 0xC000000000000000 variant\n 0x3FFF000000000000 clock_seq\n 0x0000FFFFFFFFFFFF node\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The variant field contains a value which identifies the layout of the \u003ccode\u003eUUID\u003c/code\u003e. The bit layout described above is valid only for a \u003ccode\u003e UUID\u003c/code\u003e with a variant value of 2, which indicates the Leach-Salz variant. \u003c/p\u003e\n\u003cp\u003e The version field holds a value that describes the type of this \u003ccode\u003e UUID\u003c/code\u003e. There are four different basic types of UUIDs: time-based, DCE security, name-based, and randomly generated UUIDs. These types have a version value of 1, 2, 3 and 4, respectively. \u003c/p\u003e\n\u003cp\u003e For more information including algorithms used to create \u003ccode\u003eUUID\u003c/code\u003es, see \u003ca href\u003d\"http://www.ietf.org/rfc/rfc4122.txt\"\u003e \u003ci\u003eRFC\u0026nbsp;4122: A Universally Unique IDentifier (UUID) URN Namespace\u003c/i\u003e\u003c/a\u003e, section 4.2 \"Algorithms for Creating a Time-Based UUID\".\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.util.UUID\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}