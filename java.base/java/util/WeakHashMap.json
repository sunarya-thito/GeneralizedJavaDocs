{
  "packageName": "java.util",
  "simpleName": "WeakHashMap",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.AbstractMap",
    "parameters": [
      {
        "name": "K",
        "type": "Class"
      },
      {
        "name": "V",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "size",
      "comment": "Returns the number of key-value mappings in this map. This result is a snapshot, and may not reflect unprocessed entries that will be removed before next attempted access because they are no longer referenced.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#size()\"\u003esize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#size()\"\u003esize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "the number of key-value mappings in this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isEmpty",
      "comment": "Returns true if this map contains no key-value mappings. This result is a snapshot, and may not reflect unprocessed entries that will be removed before next attempted access because they are no longer referenced.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#isEmpty()\"\u003eisEmpty\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#isEmpty()\"\u003eisEmpty\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this map contains no key-value mappings"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.WeakHashMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "get",
      "comment": "Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key. More formally, if this map contains a mapping from a key k to a value v such that Objects.equals(key, k), then this method returns v; otherwise it returns null. (There can be at most one such mapping.) A return value of null does not necessarily indicate that the map contains no mapping for the key; it\u0027s also possible that the map explicitly maps the key to null. The containsKey operation may be used to distinguish these two cases.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html#put(K,V)\"\u003e\u003ccode\u003eput(Object, Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#get(java.lang.Object)\"\u003eget\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#get(java.lang.Object)\"\u003eget\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key whose associated value is to be returned"
        ],
        "return": [
          "the value to which the specified key is mapped, or \n\u003ccode\u003enull\u003c/code\u003e if this map contains no mapping for the key"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "containsKey",
      "comment": "Returns true if this map contains a mapping for the specified key.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#containsKey(java.lang.Object)\"\u003econtainsKey\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#containsKey(java.lang.Object)\"\u003econtainsKey\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - The key whose presence in this map is to be tested"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if there is a mapping for \n\u003ccode\u003ekey\u003c/code\u003e; \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.WeakHashMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "type": {
            "owner": "java.util.WeakHashMap",
            "name": "K",
            "type": "Variable"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "owner": "java.util.WeakHashMap",
            "name": "V",
            "type": "Variable"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "put",
      "comment": "Associates the specified value with the specified key in this map. If the map previously contained a mapping for this key, the old value is replaced.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#put(K,V)\"\u003eput\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#put(K,V)\"\u003eput\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which the specified value is to be associated.",
          "\u003ccode\u003evalue\u003c/code\u003e - value to be associated with the specified key."
        ],
        "return": [
          "the previous value associated with \n\u003ccode\u003ekey\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if there was no mapping for \n\u003ccode\u003ekey\u003c/code\u003e. (A \n\u003ccode\u003enull\u003c/code\u003e return can also indicate that the map previously associated \n\u003ccode\u003enull\u003c/code\u003e with \n\u003ccode\u003ekey\u003c/code\u003e.)"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "java.util.WeakHashMap",
                    "name": "K",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "upperBounds": [
                  {
                    "owner": "java.util.WeakHashMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "m"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "putAll",
      "comment": "Copies all of the mappings from the specified map to this map. These mappings will replace any mappings that this map had for any of the keys currently in the specified map.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#putAll(java.util.Map)\"\u003eputAll\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#putAll(java.util.Map)\"\u003eputAll\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003em\u003c/code\u003e - mappings to be stored in this map."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified map is null."
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.WeakHashMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the mapping for a key from this weak hash map if it is present. More formally, if this map contains a mapping from key k to value v such that (key\u003d\u003dnull ? k\u003d\u003dnull : key.equals(k)), that mapping is removed. (The map can contain at most one such mapping.) Returns the value to which this map previously associated the key, or null if the map contained no mapping for the key. A return value of null does not necessarily indicate that the map contained no mapping for the key; it\u0027s also possible that the map explicitly mapped the key to null. The map will not contain a mapping for the specified key once the call returns.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#remove(java.lang.Object)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#remove(java.lang.Object)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key whose mapping is to be removed from the map"
        ],
        "return": [
          "the previous value associated with \n\u003ccode\u003ekey\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if there was no mapping for \n\u003ccode\u003ekey\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clear",
      "comment": "Removes all of the mappings from this map. The map will be empty after this call returns.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#clear()\"\u003eclear\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#clear()\"\u003eclear\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "containsValue",
      "comment": "Returns true if this map maps one or more keys to the specified value.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#containsValue(java.lang.Object)\"\u003econtainsValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#containsValue(java.lang.Object)\"\u003econtainsValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - value whose presence in this map is to be tested"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this map maps one or more keys to the specified value"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "owner": "java.util.WeakHashMap",
            "name": "K",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "keySet",
      "comment": "Returns a Set view of the keys contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress (except through the iterator\u0027s own remove operation), the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Set.remove, removeAll, retainAll, and clear operations. It does not support the add or addAll operations.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#keySet()\"\u003ekeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#keySet()\"\u003ekeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a set view of the keys contained in this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Collection",
        "parameters": [
          {
            "owner": "java.util.WeakHashMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "values",
      "comment": "Returns a Collection view of the values contained in this map. The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. If the map is modified while an iteration over the collection is in progress (except through the iterator\u0027s own remove operation), the results of the iteration are undefined. The collection supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Collection.remove, removeAll, retainAll and clear operations. It does not support the add or addAll operations.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#values()\"\u003evalues\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#values()\"\u003evalues\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a collection view of the values contained in this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.util.Map$Entry",
            "parameters": [
              {
                "owner": "java.util.WeakHashMap",
                "name": "K",
                "type": "Variable"
              },
              {
                "owner": "java.util.WeakHashMap",
                "name": "V",
                "type": "Variable"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "entrySet",
      "comment": "Returns a Set view of the mappings contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress (except through the iterator\u0027s own remove operation, or through the setValue operation on a map entry returned by the iterator) the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Set.remove, removeAll, retainAll and clear operations. It does not support the add or addAll operations.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#entrySet()\"\u003eentrySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/WeakHashMap.html\" title\u003d\"type parameter in WeakHashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a set view of the mappings contained in this map"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "initialCapacity"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "loadFactor"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new, empty WeakHashMap with the given initial capacity and the given load factor.",
      "tagMap": {
        "param": [
          "\u003ccode\u003einitialCapacity\u003c/code\u003e - The initial capacity of the \n\u003ccode\u003eWeakHashMap\u003c/code\u003e",
          "\u003ccode\u003eloadFactor\u003c/code\u003e - The load factor of the \n\u003ccode\u003eWeakHashMap\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the initial capacity is negative, or if the load factor is nonpositive."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "initialCapacity"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new, empty WeakHashMap with the given initial capacity and the default load factor (0.75).",
      "tagMap": {
        "param": [
          "\u003ccode\u003einitialCapacity\u003c/code\u003e - The initial capacity of the \n\u003ccode\u003eWeakHashMap\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the initial capacity is negative"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new, empty WeakHashMap with the default initial capacity (16) and load factor (0.75).",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "java.util.WeakHashMap",
                    "name": "K",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "upperBounds": [
                  {
                    "owner": "java.util.WeakHashMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "m"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new WeakHashMap with the same mappings as the specified map. The WeakHashMap is created with the default load factor (0.75) and an initial capacity sufficient to hold the mappings in the specified map.",
      "tagMap": {
        "param": [
          "\u003ccode\u003em\u003c/code\u003e - the map whose mappings are to be placed in this map"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified map is null"
        ],
        "since": [
          "1.3"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "K",
      "type": "Variable"
    },
    {
      "name": "V",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.util.WeakHashMap",
  "comment": "Hash table based implementation of the \n\u003ccode\u003eMap\u003c/code\u003e interface, with \n\u003cem\u003eweak keys\u003c/em\u003e. An entry in a \n\u003ccode\u003eWeakHashMap\u003c/code\u003e will automatically be removed when its key is no longer in ordinary use. More precisely, the presence of a mapping for a given key will not prevent the key from being discarded by the garbage collector, that is, made finalizable, finalized, and then reclaimed. When a key has been discarded its entry is effectively removed from the map, so this class behaves somewhat differently from other \n\u003ccode\u003eMap\u003c/code\u003e implementations. \n\u003cp\u003e Both null values and the null key are supported. This class has performance characteristics similar to those of the \u003ccode\u003eHashMap\u003c/code\u003e class, and has the same efficiency parameters of \u003cem\u003einitial capacity\u003c/em\u003e and \u003cem\u003eload factor\u003c/em\u003e. \u003c/p\u003e\n\u003cp\u003e Like most collection classes, this class is not synchronized. A synchronized \u003ccode\u003eWeakHashMap\u003c/code\u003e may be constructed using the \u003ca href\u003d\"Collections.html#synchronizedMap(java.util.Map)\"\u003e\u003ccode\u003eCollections.synchronizedMap\u003c/code\u003e\u003c/a\u003e method. \u003c/p\u003e\n\u003cp\u003e This class is intended primarily for use with key objects whose \u003ccode\u003eequals\u003c/code\u003e methods test for object identity using the \u003ccode\u003e\u003d\u003d\u003c/code\u003e operator. Once such a key is discarded it can never be recreated, so it is impossible to do a lookup of that key in a \u003ccode\u003eWeakHashMap\u003c/code\u003e at some later time and be surprised that its entry has been removed. This class will work perfectly well with key objects whose \u003ccode\u003eequals\u003c/code\u003e methods are not based upon object identity, such as \u003ccode\u003eString\u003c/code\u003e instances. With such recreatable key objects, however, the automatic removal of \u003ccode\u003eWeakHashMap\u003c/code\u003e entries whose keys have been discarded may prove to be confusing. \u003c/p\u003e\n\u003cp\u003e The behavior of the \u003ccode\u003eWeakHashMap\u003c/code\u003e class depends in part upon the actions of the garbage collector, so several familiar (though not required) \u003ccode\u003eMap\u003c/code\u003e invariants do not hold for this class. Because the garbage collector may discard keys at any time, a \u003ccode\u003eWeakHashMap\u003c/code\u003e may behave as though an unknown thread is silently removing entries. In particular, even if you synchronize on a \u003ccode\u003eWeakHashMap\u003c/code\u003e instance and invoke none of its mutator methods, it is possible for the \u003ccode\u003esize\u003c/code\u003e method to return smaller values over time, for the \u003ccode\u003eisEmpty\u003c/code\u003e method to return \u003ccode\u003efalse\u003c/code\u003e and then \u003ccode\u003etrue\u003c/code\u003e, for the \u003ccode\u003econtainsKey\u003c/code\u003e method to return \u003ccode\u003etrue\u003c/code\u003e and later \u003ccode\u003efalse\u003c/code\u003e for a given key, for the \u003ccode\u003eget\u003c/code\u003e method to return a value for a given key but later return \u003ccode\u003enull\u003c/code\u003e, for the \u003ccode\u003eput\u003c/code\u003e method to return \u003ccode\u003enull\u003c/code\u003e and the \u003ccode\u003eremove\u003c/code\u003e method to return \u003ccode\u003efalse\u003c/code\u003e for a key that previously appeared to be in the map, and for successive examinations of the key set, the value collection, and the entry set to yield successively smaller numbers of elements. \u003c/p\u003e\n\u003cp\u003e Each key object in a \u003ccode\u003eWeakHashMap\u003c/code\u003e is stored indirectly as the referent of a weak reference. Therefore a key will automatically be removed only after the weak references to it, both inside and outside of the map, have been cleared by the garbage collector. \u003c/p\u003e\n\u003cp\u003e \u003cstrong\u003eImplementation note:\u003c/strong\u003e The value objects in a \u003ccode\u003eWeakHashMap\u003c/code\u003e are held by ordinary strong references. Thus care should be taken to ensure that value objects do not strongly refer to their own keys, either directly or indirectly, since that will prevent the keys from being discarded. Note that a value object may refer indirectly to its key via the \u003ccode\u003eWeakHashMap\u003c/code\u003e itself; that is, a value object may strongly refer to some other key object whose associated value object, in turn, strongly refers to the key of the first value object. If the values in the map do not rely on the map holding strong references to them, one way to deal with this is to wrap values themselves within \u003ccode\u003eWeakReferences\u003c/code\u003e before inserting, as in: \u003ccode\u003em.put(key, new WeakReference(value))\u003c/code\u003e, and then unwrapping upon each \u003ccode\u003eget\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003eThe iterators returned by the \u003ccode\u003eiterator\u003c/code\u003e method of the collections returned by all of this class\u0027s \"collection view methods\" are \u003ci\u003efail-fast\u003c/i\u003e: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator\u0027s own \u003ccode\u003eremove\u003c/code\u003e method, the iterator will throw a \u003ca href\u003d\"ConcurrentModificationException.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eConcurrentModificationException\u003c/code\u003e\u003c/a\u003e. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. \u003c/p\u003e\n\u003cp\u003eNote that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw \u003ccode\u003eConcurrentModificationException\u003c/code\u003e on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: \u003ci\u003ethe fail-fast behavior of iterators should be used only to detect bugs.\u003c/i\u003e \u003c/p\u003e\n\u003cp\u003eThis class is a member of the \u003ca href\u003d\"../../../java.base/java/util/package-summary.html#CollectionsFramework\"\u003e Java Collections Framework\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ref/WeakReference.html\" title\u003d\"class in java.lang.ref\"\u003e\u003ccode\u003eWeakReference\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}