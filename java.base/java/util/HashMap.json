{
  "packageName": "java.util",
  "simpleName": "HashMap",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.AbstractMap",
    "parameters": [
      {
        "name": "K",
        "type": "Class"
      },
      {
        "name": "V",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "size",
      "comment": "Returns the number of key-value mappings in this map.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#size()\"\u003esize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#size()\"\u003esize\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "the number of key-value mappings in this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isEmpty",
      "comment": "Returns true if this map contains no key-value mappings.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#isEmpty()\"\u003eisEmpty\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#isEmpty()\"\u003eisEmpty\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this map contains no key-value mappings"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.HashMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "get",
      "comment": "Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key. More formally, if this map contains a mapping from a key k to a value v such that (key\u003d\u003dnull ? k\u003d\u003dnull : key.equals(k)), then this method returns v; otherwise it returns null. (There can be at most one such mapping.) A return value of null does not necessarily indicate that the map contains no mapping for the key; it\u0027s also possible that the map explicitly maps the key to null. The containsKey operation may be used to distinguish these two cases.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html#put(K,V)\"\u003e\u003ccode\u003eput(Object, Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#get(java.lang.Object)\"\u003eget\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#get(java.lang.Object)\"\u003eget\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the key whose associated value is to be returned"
        ],
        "return": [
          "the value to which the specified key is mapped, or \n\u003ccode\u003enull\u003c/code\u003e if this map contains no mapping for the key"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "containsKey",
      "comment": "Returns true if this map contains a mapping for the specified key.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#containsKey(java.lang.Object)\"\u003econtainsKey\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#containsKey(java.lang.Object)\"\u003econtainsKey\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - The key whose presence in this map is to be tested"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this map contains a mapping for the specified key."
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.HashMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.HashMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "java.util.HashMap",
            "name": "V",
            "type": "Variable"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "put",
      "comment": "Associates the specified value with the specified key in this map. If the map previously contained a mapping for the key, the old value is replaced.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#put(K,V)\"\u003eput\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#put(K,V)\"\u003eput\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which the specified value is to be associated",
          "\u003ccode\u003evalue\u003c/code\u003e - value to be associated with the specified key"
        ],
        "return": [
          "the previous value associated with \n\u003ccode\u003ekey\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if there was no mapping for \n\u003ccode\u003ekey\u003c/code\u003e. (A \n\u003ccode\u003enull\u003c/code\u003e return can also indicate that the map previously associated \n\u003ccode\u003enull\u003c/code\u003e with \n\u003ccode\u003ekey\u003c/code\u003e.)"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "java.util.HashMap",
                    "name": "K",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "upperBounds": [
                  {
                    "owner": "java.util.HashMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "m",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "putAll",
      "comment": "Copies all of the mappings from the specified map to this map. These mappings will replace any mappings that this map had for any of the keys currently in the specified map.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#putAll(java.util.Map)\"\u003eputAll\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#putAll(java.util.Map)\"\u003eputAll\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003em\u003c/code\u003e - mappings to be stored in this map"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified map is null"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.HashMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the mapping for the specified key from this map if present.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#remove(java.lang.Object)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#remove(java.lang.Object)\"\u003eremove\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key whose mapping is to be removed from the map"
        ],
        "return": [
          "the previous value associated with \n\u003ccode\u003ekey\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if there was no mapping for \n\u003ccode\u003ekey\u003c/code\u003e. (A \n\u003ccode\u003enull\u003c/code\u003e return can also indicate that the map previously associated \n\u003ccode\u003enull\u003c/code\u003e with \n\u003ccode\u003ekey\u003c/code\u003e.)"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clear",
      "comment": "Removes all of the mappings from this map. The map will be empty after this call returns.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#clear()\"\u003eclear\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#clear()\"\u003eclear\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "containsValue",
      "comment": "Returns true if this map maps one or more keys to the specified value.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#containsValue(java.lang.Object)\"\u003econtainsValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#containsValue(java.lang.Object)\"\u003econtainsValue\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - value whose presence in this map is to be tested"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this map maps one or more keys to the specified value"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "owner": "java.util.HashMap",
            "name": "K",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "keySet",
      "comment": "Returns a Set view of the keys contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress (except through the iterator\u0027s own remove operation), the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Set.remove, removeAll, retainAll, and clear operations. It does not support the add or addAll operations.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#keySet()\"\u003ekeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#keySet()\"\u003ekeySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a set view of the keys contained in this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Collection",
        "parameters": [
          {
            "owner": "java.util.HashMap",
            "name": "V",
            "type": "Variable"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "values",
      "comment": "Returns a Collection view of the values contained in this map. The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. If the map is modified while an iteration over the collection is in progress (except through the iterator\u0027s own remove operation), the results of the iteration are undefined. The collection supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Collection.remove, removeAll, retainAll and clear operations. It does not support the add or addAll operations.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#values()\"\u003evalues\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#values()\"\u003evalues\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a view of the values contained in this map"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.util.Map$Entry",
            "parameters": [
              {
                "owner": "java.util.HashMap",
                "name": "K",
                "type": "Variable"
              },
              {
                "owner": "java.util.HashMap",
                "name": "V",
                "type": "Variable"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "entrySet",
      "comment": "Returns a Set view of the mappings contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress (except through the iterator\u0027s own remove operation, or through the setValue operation on a map entry returned by the iterator) the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Set.remove, removeAll, retainAll and clear operations. It does not support the add or addAll operations.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#entrySet()\"\u003eentrySet\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a set view of the mappings contained in this map"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.HashMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.HashMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.function.Function",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "owner": "java.util.HashMap",
                    "name": "K",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "upperBounds": [
                  {
                    "owner": "java.util.HashMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "mappingFunction",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "computeIfAbsent",
      "comment": "If the specified key is not already associated with a value (or is mapped to null), attempts to compute its value using the given mapping function and enters it into this map unless null. If the mapping function returns null, no mapping is recorded. If the mapping function itself throws an (unchecked) exception, the exception is rethrown, and no mapping is recorded. The most common usage is to construct a new object serving as an initial mapped value or memoized result, as in:  \n map.computeIfAbsent(key, k -\u003e new Value(f(k)));\n Or to implement a multi-value map, Map\u003cK,Collection\u003cV\u003e\u003e, supporting multiple values per key:  \n map.computeIfAbsent(key, k -\u003e new HashSet\u003cV\u003e()).add(v);\n The mapping function should not modify this map during computation. This method will, on a best-effort basis, throw a ConcurrentModificationException if it is detected that the mapping function modifies this map during computation.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#computeIfAbsent(K,java.util.function.Function)\"\u003ecomputeIfAbsent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which the specified value is to be associated",
          "\u003ccode\u003emappingFunction\u003c/code\u003e - the mapping function to compute a value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ConcurrentModificationException.html\" title\u003d\"class in java.util\"\u003eConcurrentModificationException\u003c/a\u003e\u003c/code\u003e - if it is detected that the mapping function modified this map"
        ],
        "return": [
          "the current (existing or computed) value associated with the specified key, or null if the computed value is null"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.HashMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.HashMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.function.BiFunction",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "owner": "java.util.HashMap",
                    "name": "K",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "lowerBounds": [
                  {
                    "owner": "java.util.HashMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "upperBounds": [
                  {
                    "owner": "java.util.HashMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "remappingFunction",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "computeIfPresent",
      "comment": "If the value for the specified key is present and non-null, attempts to compute a new mapping given the key and its current mapped value. If the remapping function returns null, the mapping is removed. If the remapping function itself throws an (unchecked) exception, the exception is rethrown, and the current mapping is left unchanged. The remapping function should not modify this map during computation. This method will, on a best-effort basis, throw a ConcurrentModificationException if it is detected that the remapping function modifies this map during computation.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#computeIfPresent(K,java.util.function.BiFunction)\"\u003ecomputeIfPresent\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which the specified value is to be associated",
          "\u003ccode\u003eremappingFunction\u003c/code\u003e - the remapping function to compute a value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ConcurrentModificationException.html\" title\u003d\"class in java.util\"\u003eConcurrentModificationException\u003c/a\u003e\u003c/code\u003e - if it is detected that the remapping function modified this map"
        ],
        "return": [
          "the new value associated with the specified key, or null if none"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.HashMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.HashMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.function.BiFunction",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "owner": "java.util.HashMap",
                    "name": "K",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "lowerBounds": [
                  {
                    "owner": "java.util.HashMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "upperBounds": [
                  {
                    "owner": "java.util.HashMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "remappingFunction",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "compute",
      "comment": "Attempts to compute a mapping for the specified key and its current mapped value (or null if there is no current mapping). For example, to either create or append a String msg to a value mapping:  \n map.compute(key, (k, v) -\u003e (v \u003d\u003d null) ? msg : v.concat(msg)) (Method merge() is often simpler to use for such purposes.) If the remapping function returns null, the mapping is removed (or remains absent if initially absent). If the remapping function itself throws an (unchecked) exception, the exception is rethrown, and the current mapping is left unchanged. The remapping function should not modify this map during computation. This method will, on a best-effort basis, throw a ConcurrentModificationException if it is detected that the remapping function modifies this map during computation.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#compute(K,java.util.function.BiFunction)\"\u003ecompute\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which the specified value is to be associated",
          "\u003ccode\u003eremappingFunction\u003c/code\u003e - the remapping function to compute a value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ConcurrentModificationException.html\" title\u003d\"class in java.util\"\u003eConcurrentModificationException\u003c/a\u003e\u003c/code\u003e - if it is detected that the remapping function modified this map"
        ],
        "return": [
          "the new value associated with the specified key, or null if none"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.util.HashMap",
        "name": "V",
        "type": "Variable"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "owner": "java.util.HashMap",
            "name": "K",
            "type": "Variable"
          },
          "name": "key",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "owner": "java.util.HashMap",
            "name": "V",
            "type": "Variable"
          },
          "name": "value",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.function.BiFunction",
            "parameters": [
              {
                "lowerBounds": [
                  {
                    "owner": "java.util.HashMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "lowerBounds": [
                  {
                    "owner": "java.util.HashMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "upperBounds": [
                  {
                    "owner": "java.util.HashMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "remappingFunction",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "merge",
      "comment": "If the specified key is not already associated with a value or is associated with null, associates it with the given non-null value. Otherwise, replaces the associated value with the results of the given remapping function, or removes if the result is null. This method may be of use when combining multiple mapped values for a key. For example, to either create or append a String msg to a value mapping:  \n map.merge(key, msg, String::concat)\n If the remapping function returns null, the mapping is removed. If the remapping function itself throws an (unchecked) exception, the exception is rethrown, and the current mapping is left unchanged. The remapping function should not modify this map during computation. This method will, on a best-effort basis, throw a ConcurrentModificationException if it is detected that the remapping function modifies this map during computation.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html#merge(K,V,java.util.function.BiFunction)\"\u003emerge\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003eMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - key with which the resulting value is to be associated",
          "\u003ccode\u003evalue\u003c/code\u003e - the non-null value to be merged with the existing value associated with the key or, if no existing value or a null value is associated with the key, to be associated with the key",
          "\u003ccode\u003eremappingFunction\u003c/code\u003e - the remapping function to recompute a value if present"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/ConcurrentModificationException.html\" title\u003d\"class in java.util\"\u003eConcurrentModificationException\u003c/a\u003e\u003c/code\u003e - if it is detected that the remapping function modified this map"
        ],
        "return": [
          "the new value associated with the specified key, or null if no value is associated with the key"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Returns a shallow copy of this HashMap instance: the keys and values themselves are not cloned.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/AbstractMap.html\" title\u003d\"class in java.util\"\u003eAbstractMap\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eK\u003c/a\u003e,​\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"type parameter in HashMap\"\u003eV\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "return": [
          "a shallow copy of this map"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "initialCapacity",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "float",
            "type": "Class"
          },
          "name": "loadFactor",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an empty HashMap with the specified initial capacity and load factor.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003einitialCapacity\u003c/code\u003e - the initial capacity",
          "\u003ccode\u003eloadFactor\u003c/code\u003e - the load factor"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the initial capacity is negative or the load factor is nonpositive"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "initialCapacity",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an empty HashMap with the specified initial capacity and the default load factor (0.75).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003einitialCapacity\u003c/code\u003e - the initial capacity."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the initial capacity is negative."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an empty HashMap with the default initial capacity (16) and the default load factor (0.75).",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "owner": "java.util.HashMap",
                    "name": "K",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "upperBounds": [
                  {
                    "owner": "java.util.HashMap",
                    "name": "V",
                    "type": "Variable"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "m",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new HashMap with the same mappings as the specified Map. The HashMap is created with default load factor (0.75) and an initial capacity sufficient to hold the mappings in the specified Map.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003em\u003c/code\u003e - the map whose mappings are to be placed in this map"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified map is null"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "K",
      "type": "Variable"
    },
    {
      "name": "V",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.util.HashMap",
  "comment": "Hash table based implementation of the \n\u003ccode\u003eMap\u003c/code\u003e interface. This implementation provides all of the optional map operations, and permits \n\u003ccode\u003enull\u003c/code\u003e values and the \n\u003ccode\u003enull\u003c/code\u003e key. (The \n\u003ccode\u003eHashMap\u003c/code\u003e class is roughly equivalent to \n\u003ccode\u003eHashtable\u003c/code\u003e, except that it is unsynchronized and permits nulls.) This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time. \n\u003cp\u003eThis implementation provides constant-time performance for the basic operations (\u003ccode\u003eget\u003c/code\u003e and \u003ccode\u003eput\u003c/code\u003e), assuming the hash function disperses the elements properly among the buckets. Iteration over collection views requires time proportional to the \"capacity\" of the \u003ccode\u003eHashMap\u003c/code\u003e instance (the number of buckets) plus its size (the number of key-value mappings). Thus, it\u0027s very important not to set the initial capacity too high (or the load factor too low) if iteration performance is important. \u003c/p\u003e\n\u003cp\u003eAn instance of \u003ccode\u003eHashMap\u003c/code\u003e has two parameters that affect its performance: \u003ci\u003einitial capacity\u003c/i\u003e and \u003ci\u003eload factor\u003c/i\u003e. The \u003ci\u003ecapacity\u003c/i\u003e is the number of buckets in the hash table, and the initial capacity is simply the capacity at the time the hash table is created. The \u003ci\u003eload factor\u003c/i\u003e is a measure of how full the hash table is allowed to get before its capacity is automatically increased. When the number of entries in the hash table exceeds the product of the load factor and the current capacity, the hash table is \u003ci\u003erehashed\u003c/i\u003e (that is, internal data structures are rebuilt) so that the hash table has approximately twice the number of buckets. \u003c/p\u003e\n\u003cp\u003eAs a general rule, the default load factor (.75) offers a good tradeoff between time and space costs. Higher values decrease the space overhead but increase the lookup cost (reflected in most of the operations of the \u003ccode\u003eHashMap\u003c/code\u003e class, including \u003ccode\u003eget\u003c/code\u003e and \u003ccode\u003eput\u003c/code\u003e). The expected number of entries in the map and its load factor should be taken into account when setting its initial capacity, so as to minimize the number of rehash operations. If the initial capacity is greater than the maximum number of entries divided by the load factor, no rehash operations will ever occur. \u003c/p\u003e\n\u003cp\u003eIf many mappings are to be stored in a \u003ccode\u003eHashMap\u003c/code\u003e instance, creating it with a sufficiently large capacity will allow the mappings to be stored more efficiently than letting it perform automatic rehashing as needed to grow the table. Note that using many keys with the same \u003ccode\u003ehashCode()\u003c/code\u003e is a sure way to slow down performance of any hash table. To ameliorate impact, when keys are \u003ca href\u003d\"../lang/Comparable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eComparable\u003c/code\u003e\u003c/a\u003e, this class may use comparison order among keys to help break ties. \u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNote that this implementation is not synchronized.\u003c/strong\u003e If multiple threads access a hash map concurrently, and at least one of the threads modifies the map structurally, it \u003ci\u003emust\u003c/i\u003e be synchronized externally. (A structural modification is any operation that adds or deletes one or more mappings; merely changing the value associated with a key that an instance already contains is not a structural modification.) This is typically accomplished by synchronizing on some object that naturally encapsulates the map. If no such object exists, the map should be \"wrapped\" using the \u003ca href\u003d\"Collections.html#synchronizedMap(java.util.Map)\"\u003e\u003ccode\u003eCollections.synchronizedMap\u003c/code\u003e\u003c/a\u003e method. This is best done at creation time, to prevent accidental unsynchronized access to the map:\u003c/p\u003e\n\u003cpre\u003e   Map m \u003d Collections.synchronizedMap(new HashMap(...));\u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003eThe iterators returned by all of this class\u0027s \"collection view methods\" are \u003ci\u003efail-fast\u003c/i\u003e: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator\u0027s own \u003ccode\u003eremove\u003c/code\u003e method, the iterator will throw a \u003ca href\u003d\"ConcurrentModificationException.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eConcurrentModificationException\u003c/code\u003e\u003c/a\u003e. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. \u003c/p\u003e\n\u003cp\u003eNote that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw \u003ccode\u003eConcurrentModificationException\u003c/code\u003e on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: \u003ci\u003ethe fail-fast behavior of iterators should be used only to detect bugs.\u003c/i\u003e \u003c/p\u003e\n\u003cp\u003eThis class is a member of the \u003ca href\u003d\"../../../java.base/java/util/package-summary.html#CollectionsFramework\"\u003e Java Collections Framework\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Collection.html\" title\u003d\"interface in java.util\"\u003e\u003ccode\u003eCollection\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Map.html\" title\u003d\"interface in java.util\"\u003e\u003ccode\u003eMap\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/TreeMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eTreeMap\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Hashtable.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashtable\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.util.HashMap\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}