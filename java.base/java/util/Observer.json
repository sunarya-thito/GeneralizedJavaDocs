{
  "packageName": "java.util",
  "simpleName": "Observer",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Observable",
            "type": "Class"
          },
          "field": {
            "name": "o"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "arg"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "update",
      "comment": "This method is called whenever the observed object is changed. An application calls an Observable object\u0027s notifyObservers method to have all the object\u0027s observers notified of the change.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eo\u003c/code\u003e - the observable object.",
          "\u003ccode\u003earg\u003c/code\u003e - an argument passed to the \n\u003ccode\u003enotifyObservers\u003c/code\u003e method."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.util.Observer",
  "comment": "A class can implement the \n\u003ccode\u003eObserver\u003c/code\u003e interface when it wants to be informed of changes in observable objects.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Observable.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eObservable\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.0"
    ]
  }
}