{
  "packageName": "java.text",
  "simpleName": "AttributedString",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.text.AttributedCharacterIterator$Attribute",
            "type": "Class"
          },
          "name": "attribute",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addAttribute",
      "comment": "Adds an attribute to the entire string.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eattribute\u003c/code\u003e - the attribute key",
          "\u003ccode\u003evalue\u003c/code\u003e - the value of the attribute; may be null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eattribute\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the AttributedString has length 0 (attributes cannot be applied to a 0-length range)."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.text.AttributedCharacterIterator$Attribute",
            "type": "Class"
          },
          "name": "attribute",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "beginIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "endIndex",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addAttribute",
      "comment": "Adds an attribute to a subrange of the string.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eattribute\u003c/code\u003e - the attribute key",
          "\u003ccode\u003evalue\u003c/code\u003e - The value of the attribute. May be null.",
          "\u003ccode\u003ebeginIndex\u003c/code\u003e - Index of the first character of the range.",
          "\u003ccode\u003eendIndex\u003c/code\u003e - Index of the character following the last character of the range."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eattribute\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if beginIndex is less than 0, endIndex is greater than the length of the string, or beginIndex and endIndex together don\u0027t define a non-empty subrange of the string."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "java.text.AttributedCharacterIterator$Attribute",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "attributes",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "beginIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "endIndex",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addAttributes",
      "comment": "Adds a set of attributes to a subrange of the string.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eattributes\u003c/code\u003e - The attributes to be added to the string.",
          "\u003ccode\u003ebeginIndex\u003c/code\u003e - Index of the first character of the range.",
          "\u003ccode\u003eendIndex\u003c/code\u003e - Index of the character following the last character of the range."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eattributes\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if beginIndex is less than 0, endIndex is greater than the length of the string, or beginIndex and endIndex together don\u0027t define a non-empty subrange of the string and the attributes parameter is not an empty Map."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.text.AttributedCharacterIterator",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIterator",
      "comment": "Creates an AttributedCharacterIterator instance that provides access to the entire contents of this string.",
      "annotations": [],
      "tagMap": {
        "return": [
          "An iterator providing access to the text and its attributes."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.text.AttributedCharacterIterator",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.text.AttributedCharacterIterator$Attribute",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "attributes",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIterator",
      "comment": "Creates an AttributedCharacterIterator instance that provides access to selected contents of this string. Information about attributes not listed in attributes that the implementor may have need not be made accessible through the iterator. If the list is null, all available attribute information should be made accessible.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eattributes\u003c/code\u003e - a list of attributes that the client is interested in"
        ],
        "return": [
          "an iterator providing access to the entire text and its selected attributes"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.text.AttributedCharacterIterator",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.text.AttributedCharacterIterator$Attribute",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "attributes",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "beginIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "endIndex",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIterator",
      "comment": "Creates an AttributedCharacterIterator instance that provides access to selected contents of this string. Information about attributes not listed in attributes that the implementor may have need not be made accessible through the iterator. If the list is null, all available attribute information should be made accessible.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eattributes\u003c/code\u003e - a list of attributes that the client is interested in",
          "\u003ccode\u003ebeginIndex\u003c/code\u003e - the index of the first character",
          "\u003ccode\u003eendIndex\u003c/code\u003e - the index of the character following the last character"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if beginIndex is less than 0, endIndex is greater than the length of the string, or beginIndex is greater than endIndex."
        ],
        "return": [
          "an iterator providing access to the text and its attributes"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "text",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an AttributedString instance with the given text.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - The text for this attributed string."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etext\u003c/code\u003e is null."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "text",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "java.text.AttributedCharacterIterator$Attribute",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              },
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "attributes",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an AttributedString instance with the given text and attributes.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - The text for this attributed string.",
          "\u003ccode\u003eattributes\u003c/code\u003e - The attributes that apply to the entire string."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etext\u003c/code\u003e or \n\u003ccode\u003eattributes\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the text has length 0 and the attributes parameter is not an empty Map (attributes cannot be applied to a 0-length range)."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.text.AttributedCharacterIterator",
            "type": "Class"
          },
          "name": "text",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an AttributedString instance with the given attributed text represented by AttributedCharacterIterator.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - The text for this attributed string."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etext\u003c/code\u003e is null."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.text.AttributedCharacterIterator",
            "type": "Class"
          },
          "name": "text",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "beginIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "endIndex",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an AttributedString instance with the subrange of the given attributed text represented by AttributedCharacterIterator. If the given range produces an empty text, all attributes will be discarded. Note that any attributes wrapped by an Annotation object are discarded for a subrange of the original attribute range.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/Annotation.html\" title\u003d\"class in java.text\"\u003e\u003ccode\u003eAnnotation\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - The text for this attributed string.",
          "\u003ccode\u003ebeginIndex\u003c/code\u003e - Index of the first character of the range.",
          "\u003ccode\u003eendIndex\u003c/code\u003e - Index of the character following the last character of the range."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etext\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the subrange given by beginIndex and endIndex is out of the text range."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.text.AttributedCharacterIterator",
            "type": "Class"
          },
          "name": "text",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "beginIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "endIndex",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.text.AttributedCharacterIterator$Attribute",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "attributes",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an AttributedString instance with the subrange of the given attributed text represented by AttributedCharacterIterator. Only attributes that match the given attributes will be incorporated into the instance. If the given range produces an empty text, all attributes will be discarded. Note that any attributes wrapped by an Annotation object are discarded for a subrange of the original attribute range.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/Annotation.html\" title\u003d\"class in java.text\"\u003e\u003ccode\u003eAnnotation\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etext\u003c/code\u003e - The text for this attributed string.",
          "\u003ccode\u003ebeginIndex\u003c/code\u003e - Index of the first character of the range.",
          "\u003ccode\u003eendIndex\u003c/code\u003e - Index of the character following the last character of the range.",
          "\u003ccode\u003eattributes\u003c/code\u003e - Specifies attributes to be extracted from the text. If null is specified, all available attributes will be used."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003etext\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the subrange given by beginIndex and endIndex is out of the text range."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.text.AttributedString",
  "comment": "An AttributedString holds text and related attribute information. It may be used as the actual data storage in some cases where a text reader wants to access attributed text through the AttributedCharacterIterator interface. \n\u003cp\u003e An attribute is a key/value pair, identified by the key. No two attributes on a given character can have the same key. \u003c/p\u003e\n\u003cp\u003eThe values for an attribute are immutable, or must not be mutated by clients or storage. They are always passed by reference, and not cloned.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/AttributedCharacterIterator.html\" title\u003d\"interface in java.text\"\u003e\u003ccode\u003eAttributedCharacterIterator\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/Annotation.html\" title\u003d\"class in java.text\"\u003e\u003ccode\u003eAnnotation\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}