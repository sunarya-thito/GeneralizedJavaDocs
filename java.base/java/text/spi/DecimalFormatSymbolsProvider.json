{
  "packageName": "java.text.spi",
  "simpleName": "DecimalFormatSymbolsProvider",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.util.spi.LocaleServiceProvider",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.text.DecimalFormatSymbols",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "name": "locale",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getInstance",
      "comment": "Returns a new DecimalFormatSymbols instance for the specified locale.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/DecimalFormatSymbols.html#getInstance(java.util.Locale)\"\u003e\u003ccode\u003eDecimalFormatSymbols.getInstance(java.util.Locale)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elocale\u003c/code\u003e - the desired locale"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elocale\u003c/code\u003e is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elocale\u003c/code\u003e isn\u0027t one of the locales returned from \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/spi/LocaleServiceProvider.html#getAvailableLocales()\"\u003e\u003ccode\u003egetAvailableLocales()\u003c/code\u003e\u003c/a\u003e."
        ],
        "return": [
          "a \n\u003ccode\u003eDecimalFormatSymbols\u003c/code\u003e instance."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Sole constructor. (For invocation by subclass constructors, typically implicit.)",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.text.spi.DecimalFormatSymbolsProvider",
  "comment": "An abstract class for service providers that provide instances of the \n\u003ca href\u003d\"../DecimalFormatSymbols.html\" title\u003d\"class in java.text\"\u003e\u003ccode\u003eDecimalFormatSymbols\u003c/code\u003e\u003c/a\u003e class. \n\u003cp\u003eThe requested \u003ccode\u003eLocale\u003c/code\u003e may contain an \u003ca href\u003d\"../../util/Locale.html#def_locale_extension\"\u003e extension\u003c/a\u003e for specifying the desired numbering system. For example, \u003ccode\u003e\"ar-u-nu-arab\"\u003c/code\u003e (in the BCP 47 language tag form) specifies Arabic with the Arabic-Indic digits and symbols, while \u003ccode\u003e\"ar-u-nu-latn\"\u003c/code\u003e specifies Arabic with the Latin digits and symbols. Refer to the \u003cem\u003eUnicode Locale Data Markup Language (LDML)\u003c/em\u003e specification for numbering systems.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.html#forLanguageTag(java.lang.String)\"\u003e\u003ccode\u003eLocale.forLanguageTag(String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.html#getExtension(char)\"\u003e\u003ccode\u003eLocale.getExtension(char)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.6"
    ]
  }
}