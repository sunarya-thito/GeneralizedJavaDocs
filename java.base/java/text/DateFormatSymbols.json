{
  "packageName": "java.text",
  "simpleName": "DateFormatSymbols",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.Locale",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getAvailableLocales",
      "comment": "Returns an array of all locales for which the getInstance methods of this class can return localized instances. The returned array represents the union of locales supported by the Java runtime and by installed DateFormatSymbolsProvider implementations. It must contain at least a Locale instance equal to Locale.US.",
      "annotations": [],
      "tagMap": {
        "return": [
          "An array of locales for which localized \n\u003ccode\u003eDateFormatSymbols\u003c/code\u003e instances are available."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.text.DateFormatSymbols",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 25,
      "name": "getInstance",
      "comment": "Gets the DateFormatSymbols instance for the default locale. This method provides access to DateFormatSymbols instances for locales supported by the Java runtime itself as well as for those supported by installed DateFormatSymbolsProvider implementations. This is equivalent to calling getInstance(Locale.getDefault(Locale.Category.FORMAT)).",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.html#getDefault(java.util.Locale.Category)\"\u003e\u003ccode\u003eLocale.getDefault(java.util.Locale.Category)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.Category.html#FORMAT\"\u003e\u003ccode\u003eLocale.Category.FORMAT\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eDateFormatSymbols\u003c/code\u003e instance."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.text.DateFormatSymbols",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "name": "locale",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 25,
      "name": "getInstance",
      "comment": "Gets the DateFormatSymbols instance for the specified locale. This method provides access to DateFormatSymbols instances for locales supported by the Java runtime itself as well as for those supported by installed DateFormatSymbolsProvider implementations.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elocale\u003c/code\u003e - the given locale."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003elocale\u003c/code\u003e is null"
        ],
        "return": [
          "a \n\u003ccode\u003eDateFormatSymbols\u003c/code\u003e instance."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getEras",
      "comment": "Gets era strings. For example: \"AD\" and \"BC\".",
      "annotations": [],
      "tagMap": {
        "return": [
          "the era strings."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "newEras",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setEras",
      "comment": "Sets era strings. For example: \"AD\" and \"BC\".",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enewEras\u003c/code\u003e - the new era strings."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMonths",
      "comment": "Gets month strings. For example: \"January\", \"February\", etc. An array with either 12 or 13 elements will be returned depending on whether or not Calendar.UNDECIMBER is supported. Use Calendar.JANUARY, Calendar.FEBRUARY, etc. to index the result array. If the language requires different forms for formatting and stand-alone usages, this method returns month names in the formatting form. For example, the preferred month name for January in the Czech language is ledna in the formatting form, while it is leden in the stand-alone form. This method returns \"ledna\" in this case. Refer to the Calendar Elements in the Unicode Locale Data Markup Language (LDML) specification for more details.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "This method returns 13 elements since \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#UNDECIMBER\"\u003e\u003ccode\u003eCalendar.UNDECIMBER\u003c/code\u003e\u003c/a\u003e is supported."
        ],
        "return": [
          "the month strings."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "newMonths",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setMonths",
      "comment": "Sets month strings. For example: \"January\", \"February\", etc.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enewMonths\u003c/code\u003e - the new month strings. The array should be indexed by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#JANUARY\"\u003e\u003ccode\u003eCalendar.JANUARY\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#FEBRUARY\"\u003e\u003ccode\u003eCalendar.FEBRUARY\u003c/code\u003e\u003c/a\u003e, etc."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getShortMonths",
      "comment": "Gets short month strings. For example: \"Jan\", \"Feb\", etc. An array with either 12 or 13 elements will be returned depending on whether or not Calendar.UNDECIMBER is supported. Use Calendar.JANUARY, Calendar.FEBRUARY, etc. to index the result array. If the language requires different forms for formatting and stand-alone usages, this method returns short month names in the formatting form. For example, the preferred abbreviation for January in the Catalan language is de gen. in the formatting form, while it is gen. in the stand-alone form. This method returns \"de gen.\" in this case. Refer to the Calendar Elements in the Unicode Locale Data Markup Language (LDML) specification for more details.",
      "annotations": [],
      "tagMap": {
        "implSpec": [
          "This method returns 13 elements since \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#UNDECIMBER\"\u003e\u003ccode\u003eCalendar.UNDECIMBER\u003c/code\u003e\u003c/a\u003e is supported."
        ],
        "return": [
          "the short month strings."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "newShortMonths",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setShortMonths",
      "comment": "Sets short month strings. For example: \"Jan\", \"Feb\", etc.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enewShortMonths\u003c/code\u003e - the new short month strings. The array should be indexed by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#JANUARY\"\u003e\u003ccode\u003eCalendar.JANUARY\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#FEBRUARY\"\u003e\u003ccode\u003eCalendar.FEBRUARY\u003c/code\u003e\u003c/a\u003e, etc."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getWeekdays",
      "comment": "Gets weekday strings. For example: \"Sunday\", \"Monday\", etc.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the weekday strings. Use \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#SUNDAY\"\u003e\u003ccode\u003eCalendar.SUNDAY\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONDAY\"\u003e\u003ccode\u003eCalendar.MONDAY\u003c/code\u003e\u003c/a\u003e, etc. to index the result array."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "newWeekdays",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setWeekdays",
      "comment": "Sets weekday strings. For example: \"Sunday\", \"Monday\", etc.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enewWeekdays\u003c/code\u003e - the new weekday strings. The array should be indexed by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#SUNDAY\"\u003e\u003ccode\u003eCalendar.SUNDAY\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONDAY\"\u003e\u003ccode\u003eCalendar.MONDAY\u003c/code\u003e\u003c/a\u003e, etc."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getShortWeekdays",
      "comment": "Gets short weekday strings. For example: \"Sun\", \"Mon\", etc.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the short weekday strings. Use \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#SUNDAY\"\u003e\u003ccode\u003eCalendar.SUNDAY\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONDAY\"\u003e\u003ccode\u003eCalendar.MONDAY\u003c/code\u003e\u003c/a\u003e, etc. to index the result array."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "newShortWeekdays",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setShortWeekdays",
      "comment": "Sets short weekday strings. For example: \"Sun\", \"Mon\", etc.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enewShortWeekdays\u003c/code\u003e - the new short weekday strings. The array should be indexed by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#SUNDAY\"\u003e\u003ccode\u003eCalendar.SUNDAY\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Calendar.html#MONDAY\"\u003e\u003ccode\u003eCalendar.MONDAY\u003c/code\u003e\u003c/a\u003e, etc."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAmPmStrings",
      "comment": "Gets ampm strings. For example: \"AM\" and \"PM\".",
      "annotations": [],
      "tagMap": {
        "return": [
          "the ampm strings."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "newAmpms",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setAmPmStrings",
      "comment": "Sets ampm strings. For example: \"AM\" and \"PM\".",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enewAmpms\u003c/code\u003e - the new ampm strings."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class",
        "arrayDimensions": 2
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getZoneStrings",
      "comment": "Gets time zone strings. Use of this method is discouraged; use TimeZone.getDisplayName() instead. The value returned is a two-dimensional array of strings of size n by m, where m is at least 5. Each of the n rows is an entry containing the localized names for a single TimeZone. Each such row contains (with i ranging from 0..n-1): zoneStrings[i][0] - time zone ID zoneStrings[i][1] - long name of zone in standard time zoneStrings[i][2] - short name of zone in standard time zoneStrings[i][3] - long name of zone in daylight saving time zoneStrings[i][4] - short name of zone in daylight saving time The zone ID is not localized; it\u0027s one of the valid IDs of the TimeZone class that are not custom IDs. All other entries are localized names. If a zone does not implement daylight saving time, the daylight saving time names should not be used. If setZoneStrings has been called on this DateFormatSymbols instance, then the strings provided by that call are returned. Otherwise, the returned array contains names provided by the Java runtime and by installed TimeZoneNameProvider implementations.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/DateFormatSymbols.html#setZoneStrings(java.lang.String%5B%5D%5B%5D)\"\u003e\u003ccode\u003esetZoneStrings(String[][])\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the time zone strings."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": 2
          },
          "name": "newZoneStrings",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setZoneStrings",
      "comment": "Sets time zone strings. The argument must be a two-dimensional array of strings of size n by m, where m is at least 5. Each of the n rows is an entry containing the localized names for a single TimeZone. Each such row contains (with i ranging from 0..n-1): zoneStrings[i][0] - time zone ID zoneStrings[i][1] - long name of zone in standard time zoneStrings[i][2] - short name of zone in standard time zoneStrings[i][3] - long name of zone in daylight saving time zoneStrings[i][4] - short name of zone in daylight saving time The zone ID is not localized; it\u0027s one of the valid IDs of the TimeZone class that are not custom IDs. All other entries are localized names.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/DateFormatSymbols.html#getZoneStrings()\"\u003e\u003ccode\u003egetZoneStrings()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003enewZoneStrings\u003c/code\u003e - the new time zone strings."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the length of any row in \n\u003ccode\u003enewZoneStrings\u003c/code\u003e is less than 5",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003enewZoneStrings\u003c/code\u003e is null"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLocalPatternChars",
      "comment": "Gets localized date-time pattern characters. For example: \u0027u\u0027, \u0027t\u0027, etc.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the localized date-time pattern characters."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "newLocalPatternChars",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setLocalPatternChars",
      "comment": "Sets localized date-time pattern characters. For example: \u0027u\u0027, \u0027t\u0027, etc.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003enewLocalPatternChars\u003c/code\u003e - the new localized date-time pattern characters."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Overrides Cloneable",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a clone of this instance."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Override hashCode. Generates a hash code for the DateFormatSymbols object.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code value for this object."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "obj",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Override equals",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the reference object with which to compare."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this object is the same as the obj argument; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a DateFormatSymbols object by loading format data from resources for the default FORMAT locale. This constructor can only construct instances for the locales supported by the Java runtime environment, not for those supported by installed DateFormatSymbolsProvider implementations. For full locale coverage, use the getInstance method. This is equivalent to calling DateFormatSymbols(Locale.getDefault(Locale.Category.FORMAT)).",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/DateFormatSymbols.html#getInstance()\"\u003e\u003ccode\u003egetInstance()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.html#getDefault(java.util.Locale.Category)\"\u003e\u003ccode\u003eLocale.getDefault(java.util.Locale.Category)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Locale.Category.html#FORMAT\"\u003e\u003ccode\u003eLocale.Category.FORMAT\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/MissingResourceException.html\" title\u003d\"class in java.util\"\u003eMissingResourceException\u003c/a\u003e\u003c/code\u003e - if the resources for the default locale cannot be found or cannot be loaded."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.util.Locale",
            "type": "Class"
          },
          "name": "locale",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct a DateFormatSymbols object by loading format data from resources for the given locale. This constructor can only construct instances for the locales supported by the Java runtime environment, not for those supported by installed DateFormatSymbolsProvider implementations. For full locale coverage, use the getInstance method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/DateFormatSymbols.html#getInstance(java.util.Locale)\"\u003e\u003ccode\u003egetInstance(Locale)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003elocale\u003c/code\u003e - the desired locale"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/MissingResourceException.html\" title\u003d\"class in java.util\"\u003eMissingResourceException\u003c/a\u003e\u003c/code\u003e - if the resources for the specified locale cannot be found or cannot be loaded."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.text.DateFormatSymbols",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/DateFormat.html\" title\u003d\"class in java.text\"\u003e\u003ccode\u003eDateFormat\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/SimpleDateFormat.html\" title\u003d\"class in java.text\"\u003e\u003ccode\u003eSimpleDateFormat\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/SimpleTimeZone.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eSimpleTimeZone\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.text.DateFormatSymbols\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}