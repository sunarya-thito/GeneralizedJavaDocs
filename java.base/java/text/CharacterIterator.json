{
  "packageName": "java.text",
  "simpleName": "CharacterIterator",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Cloneable",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "char",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 24,
      "name": "DONE",
      "comment": "Constant that is returned when the iterator has reached either the end or the beginning of the text. The value is \u0027\\\\uFFFF\u0027, the \"not a character\" value which should not occur in any valid Unicode string.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.text.CharacterIterator.DONE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "first",
      "comment": "Sets the position to getBeginIndex() and returns the character at that position.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/CharacterIterator.html#getBeginIndex()\"\u003e\u003ccode\u003egetBeginIndex()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the first character in the text, or DONE if the text is empty"
        ]
      }
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "last",
      "comment": "Sets the position to getEndIndex()-1 (getEndIndex() if the text is empty) and returns the character at that position.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/CharacterIterator.html#getEndIndex()\"\u003e\u003ccode\u003egetEndIndex()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the last character in the text, or DONE if the text is empty"
        ]
      }
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "current",
      "comment": "Gets the character at the current position (as returned by getIndex()).",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/CharacterIterator.html#getIndex()\"\u003e\u003ccode\u003egetIndex()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the character at the current position or DONE if the current position is off the end of the text."
        ]
      }
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "next",
      "comment": "Increments the iterator\u0027s index by one and returns the character at the new index. If the resulting index is greater or equal to getEndIndex(), the current index is reset to getEndIndex() and a value of DONE is returned.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the character at the new position or DONE if the new position is off the end of the text range."
        ]
      }
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "previous",
      "comment": "Decrements the iterator\u0027s index by one and returns the character at the new index. If the current index is getBeginIndex(), the index remains at getBeginIndex() and a value of DONE is returned.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the character at the new position or DONE if the current position is equal to getBeginIndex()."
        ]
      }
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "position",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setIndex",
      "comment": "Sets the position to the specified position in the text and returns that character.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eposition\u003c/code\u003e - the position within the text. Valid values range from getBeginIndex() to getEndIndex(). An IllegalArgumentException is thrown if an invalid value is supplied."
        ],
        "return": [
          "the character at the specified position or DONE if the specified position is equal to getEndIndex()"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getBeginIndex",
      "comment": "Returns the start index of the text.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the index at which the text begins."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getEndIndex",
      "comment": "Returns the end index of the text. This index is the index of the first character following the end of the text.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the index after the last character in the text"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getIndex",
      "comment": "Returns the current index.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the current index."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clone",
      "comment": "Create a copy of this iterator",
      "annotations": [],
      "tagMap": {
        "return": [
          "A copy of this"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.text.CharacterIterator",
  "comment": "This interface defines a protocol for bidirectional iteration over text. The iterator iterates over a bounded sequence of characters. Characters are indexed with values beginning with the value returned by getBeginIndex() and continuing through the value returned by getEndIndex()-1. \n\u003cp\u003e Iterators maintain a current character index, whose valid range is from getBeginIndex() to getEndIndex(); the value getEndIndex() is included to allow handling of zero-length text ranges and for historical reasons. The current index can be retrieved by calling getIndex() and set directly by calling setIndex(), first(), and last(). \u003c/p\u003e\n\u003cp\u003e The methods previous() and next() are used for iteration. They return DONE if they would move outside the range from getBeginIndex() to getEndIndex() -1, signaling that the iterator has reached the end of the sequence. DONE is also returned by other methods to indicate that the current index is outside this range. \u003c/p\u003e\n\u003cp\u003eExamples:\u003c/p\u003e\n\u003cp\u003e Traverse the text from start to finish \u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\n public void traverseForward(CharacterIterator iter) {\n     for(char c \u003d iter.first(); c !\u003d CharacterIterator.DONE; c \u003d iter.next()) {\n         processChar(c);\n     }\n }\n \u003c/code\u003e\u003c/pre\u003e Traverse the text backwards, from end to start \n\u003cpre\u003e\u003ccode\u003e\n public void traverseBackward(CharacterIterator iter) {\n     for(char c \u003d iter.last(); c !\u003d CharacterIterator.DONE; c \u003d iter.previous()) {\n         processChar(c);\n     }\n }\n \u003c/code\u003e\u003c/pre\u003e Traverse both forward and backward from a given position in the text. Calls to notBoundary() in this example represents some additional stopping criteria. \n\u003cpre\u003e\u003ccode\u003e\n public void traverseOut(CharacterIterator iter, int pos) {\n     for (char c \u003d iter.setIndex(pos);\n              c !\u003d CharacterIterator.DONE \u0026amp;\u0026amp; notBoundary(c);\n              c \u003d iter.next()) {\n     }\n     int end \u003d iter.getIndex();\n     for (char c \u003d iter.setIndex(pos);\n             c !\u003d CharacterIterator.DONE \u0026amp;\u0026amp; notBoundary(c);\n             c \u003d iter.previous()) {\n     }\n     int start \u003d iter.getIndex();\n     processSection(start, end);\n }\n \u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/StringCharacterIterator.html\" title\u003d\"class in java.text\"\u003e\u003ccode\u003eStringCharacterIterator\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/text/AttributedCharacterIterator.html\" title\u003d\"interface in java.text\"\u003e\u003ccode\u003eAttributedCharacterIterator\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}