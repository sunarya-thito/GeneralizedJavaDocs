{
  "packageName": "java.io",
  "simpleName": "GetField",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.io.ObjectStreamClass",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getObjectStreamClass",
      "comment": "Get the ObjectStreamClass that describes the fields in the stream.",
      "tagMap": {
        "return": [
          "the descriptor class that describes the serializable fields"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "defaulted",
      "comment": "Return true if the named field is defaulted and has no value in this stream.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the field"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if there are I/O errors while reading from the underlying \n\u003ccode\u003eInputStream\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e does not correspond to a serializable field"
        ],
        "return": [
          "true, if and only if the named field is defaulted"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "get",
      "comment": "Get the value of the named boolean field from the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the field",
          "\u003ccode\u003eval\u003c/code\u003e - the default value to use if \n\u003ccode\u003ename\u003c/code\u003e does not have a value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if there are I/O errors while reading from the underlying \n\u003ccode\u003eInputStream\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if type of \n\u003ccode\u003ename\u003c/code\u003e is not serializable or if the field type is incorrect"
        ],
        "return": [
          "the value of the named \n\u003ccode\u003eboolean\u003c/code\u003e field"
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "get",
      "comment": "Get the value of the named byte field from the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the field",
          "\u003ccode\u003eval\u003c/code\u003e - the default value to use if \n\u003ccode\u003ename\u003c/code\u003e does not have a value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if there are I/O errors while reading from the underlying \n\u003ccode\u003eInputStream\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if type of \n\u003ccode\u003ename\u003c/code\u003e is not serializable or if the field type is incorrect"
        ],
        "return": [
          "the value of the named \n\u003ccode\u003ebyte\u003c/code\u003e field"
        ]
      }
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "char",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "get",
      "comment": "Get the value of the named char field from the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the field",
          "\u003ccode\u003eval\u003c/code\u003e - the default value to use if \n\u003ccode\u003ename\u003c/code\u003e does not have a value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if there are I/O errors while reading from the underlying \n\u003ccode\u003eInputStream\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if type of \n\u003ccode\u003ename\u003c/code\u003e is not serializable or if the field type is incorrect"
        ],
        "return": [
          "the value of the named \n\u003ccode\u003echar\u003c/code\u003e field"
        ]
      }
    },
    {
      "returnType": {
        "name": "short",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "short",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "get",
      "comment": "Get the value of the named short field from the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the field",
          "\u003ccode\u003eval\u003c/code\u003e - the default value to use if \n\u003ccode\u003ename\u003c/code\u003e does not have a value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if there are I/O errors while reading from the underlying \n\u003ccode\u003eInputStream\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if type of \n\u003ccode\u003ename\u003c/code\u003e is not serializable or if the field type is incorrect"
        ],
        "return": [
          "the value of the named \n\u003ccode\u003eshort\u003c/code\u003e field"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "get",
      "comment": "Get the value of the named int field from the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the field",
          "\u003ccode\u003eval\u003c/code\u003e - the default value to use if \n\u003ccode\u003ename\u003c/code\u003e does not have a value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if there are I/O errors while reading from the underlying \n\u003ccode\u003eInputStream\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if type of \n\u003ccode\u003ename\u003c/code\u003e is not serializable or if the field type is incorrect"
        ],
        "return": [
          "the value of the named \n\u003ccode\u003eint\u003c/code\u003e field"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "get",
      "comment": "Get the value of the named long field from the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the field",
          "\u003ccode\u003eval\u003c/code\u003e - the default value to use if \n\u003ccode\u003ename\u003c/code\u003e does not have a value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if there are I/O errors while reading from the underlying \n\u003ccode\u003eInputStream\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if type of \n\u003ccode\u003ename\u003c/code\u003e is not serializable or if the field type is incorrect"
        ],
        "return": [
          "the value of the named \n\u003ccode\u003elong\u003c/code\u003e field"
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "get",
      "comment": "Get the value of the named float field from the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the field",
          "\u003ccode\u003eval\u003c/code\u003e - the default value to use if \n\u003ccode\u003ename\u003c/code\u003e does not have a value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if there are I/O errors while reading from the underlying \n\u003ccode\u003eInputStream\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if type of \n\u003ccode\u003ename\u003c/code\u003e is not serializable or if the field type is incorrect"
        ],
        "return": [
          "the value of the named \n\u003ccode\u003efloat\u003c/code\u003e field"
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "get",
      "comment": "Get the value of the named double field from the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the field",
          "\u003ccode\u003eval\u003c/code\u003e - the default value to use if \n\u003ccode\u003ename\u003c/code\u003e does not have a value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if there are I/O errors while reading from the underlying \n\u003ccode\u003eInputStream\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if type of \n\u003ccode\u003ename\u003c/code\u003e is not serializable or if the field type is incorrect"
        ],
        "return": [
          "the value of the named \n\u003ccode\u003edouble\u003c/code\u003e field"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "get",
      "comment": "Get the value of the named Object field from the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the field",
          "\u003ccode\u003eval\u003c/code\u003e - the default value to use if \n\u003ccode\u003ename\u003c/code\u003e does not have a value"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if there are I/O errors while reading from the underlying \n\u003ccode\u003eInputStream\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if type of \n\u003ccode\u003ename\u003c/code\u003e is not serializable or if the field type is incorrect"
        ],
        "return": [
          "the value of the named \n\u003ccode\u003eObject\u003c/code\u003e field"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor for subclasses to call.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1033,
  "name": "java.io.ObjectInputStream$GetField",
  "comment": "Provide access to the persistent fields read from the input stream.",
  "tagMap": {}
}