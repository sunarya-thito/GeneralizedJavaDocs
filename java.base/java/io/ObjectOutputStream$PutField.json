{
  "packageName": "java.io",
  "simpleName": "PutField",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "put",
      "comment": "Put the value of the named boolean field into the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the serializable field",
          "\u003ccode\u003eval\u003c/code\u003e - the value to assign to the field"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e does not match the name of a serializable field for the class whose fields are being written, or if the type of the named field is not \n\u003ccode\u003eboolean\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "byte",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "put",
      "comment": "Put the value of the named byte field into the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the serializable field",
          "\u003ccode\u003eval\u003c/code\u003e - the value to assign to the field"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e does not match the name of a serializable field for the class whose fields are being written, or if the type of the named field is not \n\u003ccode\u003ebyte\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "char",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "put",
      "comment": "Put the value of the named char field into the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the serializable field",
          "\u003ccode\u003eval\u003c/code\u003e - the value to assign to the field"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e does not match the name of a serializable field for the class whose fields are being written, or if the type of the named field is not \n\u003ccode\u003echar\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "short",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "put",
      "comment": "Put the value of the named short field into the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the serializable field",
          "\u003ccode\u003eval\u003c/code\u003e - the value to assign to the field"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e does not match the name of a serializable field for the class whose fields are being written, or if the type of the named field is not \n\u003ccode\u003eshort\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "put",
      "comment": "Put the value of the named int field into the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the serializable field",
          "\u003ccode\u003eval\u003c/code\u003e - the value to assign to the field"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e does not match the name of a serializable field for the class whose fields are being written, or if the type of the named field is not \n\u003ccode\u003eint\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "put",
      "comment": "Put the value of the named long field into the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the serializable field",
          "\u003ccode\u003eval\u003c/code\u003e - the value to assign to the field"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e does not match the name of a serializable field for the class whose fields are being written, or if the type of the named field is not \n\u003ccode\u003elong\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "float",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "put",
      "comment": "Put the value of the named float field into the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the serializable field",
          "\u003ccode\u003eval\u003c/code\u003e - the value to assign to the field"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e does not match the name of a serializable field for the class whose fields are being written, or if the type of the named field is not \n\u003ccode\u003efloat\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "double",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "put",
      "comment": "Put the value of the named double field into the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the serializable field",
          "\u003ccode\u003eval\u003c/code\u003e - the value to assign to the field"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e does not match the name of a serializable field for the class whose fields are being written, or if the type of the named field is not \n\u003ccode\u003edouble\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "val"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "put",
      "comment": "Put the value of the named Object field into the persistent field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the serializable field",
          "\u003ccode\u003eval\u003c/code\u003e - the value to assign to the field (which may be \n\u003ccode\u003enull\u003c/code\u003e)"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ename\u003c/code\u003e does not match the name of a serializable field for the class whose fields are being written, or if the type of the named field is not a reference type"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.ObjectOutput",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "write",
      "comment": "Write the data and fields to the specified ObjectOutput stream, which must be the same stream that produced this PutField object.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - the stream to write the data and fields to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if I/O errors occur while writing to the underlying stream",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified stream is not the same stream that produced this \n\u003ccode\u003ePutField\u003c/code\u003e object"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor for subclasses to call.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1033,
  "name": "java.io.ObjectOutputStream$PutField",
  "comment": "Provide programmatic access to the persistent fields to be written to ObjectOutput.",
  "tagMap": {
    "since": [
      "1.2"
    ]
  }
}