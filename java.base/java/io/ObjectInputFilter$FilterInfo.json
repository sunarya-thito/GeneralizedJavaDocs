{
  "packageName": "java.io",
  "simpleName": "FilterInfo",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Class",
        "parameters": [
          {
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "serialClass",
      "comment": "The class of an object being deserialized. For arrays, it is the array type. For example, the array class name of a 2 dimensional array of strings is \"[[Ljava.lang.String;\". To check the array\u0027s element type, iteratively use Class.getComponentType while the result is an array and then check the class. The serialClass is null in the case where a new object is not being created and to give the filter a chance to check the depth, number of references to existing objects, and the stream size.",
      "tagMap": {
        "return": [
          "class of an object being deserialized; may be null"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "arrayLength",
      "comment": "The number of array elements when deserializing an array of the class.",
      "tagMap": {
        "return": [
          "the non-negative number of array elements when deserializing an array of the class, otherwise -1"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "depth",
      "comment": "The current depth. The depth starts at 1 and increases for each nested object and decrements when each nested object returns.",
      "tagMap": {
        "return": [
          "the current depth"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "references",
      "comment": "The current number of object references.",
      "tagMap": {
        "return": [
          "the non-negative current number of object references"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "streamBytes",
      "comment": "The current number of bytes consumed.",
      "tagMap": {
        "implSpec": [
          "\u003ccode\u003estreamBytes\u003c/code\u003e is implementation specific and may not be directly related to the object in the stream that caused the callback."
        ],
        "return": [
          "the non-negative current number of bytes consumed"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 521,
  "name": "java.io.ObjectInputFilter$FilterInfo",
  "comment": "FilterInfo provides access to information about the current object being deserialized and the status of the \n\u003ca href\u003d\"ObjectInputStream.html\" title\u003d\"class in java.io\"\u003e\u003ccode\u003eObjectInputStream\u003c/code\u003e\u003c/a\u003e.",
  "tagMap": {
    "since": [
      "9"
    ]
  }
}