{
  "packageName": "java.io",
  "simpleName": "FileFilter",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "name": "pathname",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "accept",
      "comment": "Tests whether or not the specified abstract pathname should be included in a pathname list.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003epathname\u003c/code\u003e - The abstract pathname to be tested"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if and only if \n\u003ccode\u003epathname\u003c/code\u003e should be included"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.io.FileFilter",
  "annotations": [
    {
      "type": {
        "name": "FunctionalInterface",
        "type": "Class"
      }
    }
  ],
  "tagMap": {
    "since": [
      "1.2"
    ]
  }
}