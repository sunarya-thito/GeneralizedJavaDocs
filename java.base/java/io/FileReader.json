{
  "packageName": "java.io",
  "simpleName": "FileReader",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.io.InputStreamReader",
    "type": "Class"
  },
  "members": [
    {
      "throwsClasses": [
        {
          "name": "java.io.FileNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "fileName",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new FileReader, given the name of the file to read, using the platform\u0027s default charset.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efileName\u003c/code\u003e - the name of the file to read"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FileNotFoundException.html\" title\u003d\"class in java.io\"\u003eFileNotFoundException\u003c/a\u003e\u003c/code\u003e - if the named file does not exist, is a directory rather than a regular file, or for some other reason cannot be opened for reading."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.FileNotFoundException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "name": "file",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new FileReader, given the File to read, using the platform\u0027s default charset.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - the \n\u003ccode\u003eFile\u003c/code\u003e to read"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FileNotFoundException.html\" title\u003d\"class in java.io\"\u003eFileNotFoundException\u003c/a\u003e\u003c/code\u003e - if the file does not exist, is a directory rather than a regular file, or for some other reason cannot be opened for reading."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.FileDescriptor",
            "type": "Class"
          },
          "name": "fd",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new FileReader, given the FileDescriptor to read, using the platform\u0027s default charset.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efd\u003c/code\u003e - the \n\u003ccode\u003eFileDescriptor\u003c/code\u003e to read"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "fileName",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.nio.charset.Charset",
            "type": "Class"
          },
          "name": "charset",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new FileReader, given the name of the file to read and the charset.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efileName\u003c/code\u003e - the name of the file to read",
          "\u003ccode\u003echarset\u003c/code\u003e - the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/charset/Charset.html\" title\u003d\"class in java.nio.charset\"\u003echarset\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the named file does not exist, is a directory rather than a regular file, or for some other reason cannot be opened for reading."
        ],
        "since": [
          "11"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "name": "file",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.nio.charset.Charset",
            "type": "Class"
          },
          "name": "charset",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a new FileReader, given the File to read and the charset.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - the \n\u003ccode\u003eFile\u003c/code\u003e to read",
          "\u003ccode\u003echarset\u003c/code\u003e - the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/charset/Charset.html\" title\u003d\"class in java.nio.charset\"\u003echarset\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the file does not exist, is a directory rather than a regular file, or for some other reason cannot be opened for reading."
        ],
        "since": [
          "11"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.io.FileReader",
  "comment": "Reads text from character files using a default buffer size. Decoding from bytes to characters uses either a specified \n\u003ca href\u003d\"../nio/charset/Charset.html\" title\u003d\"class in java.nio.charset\"\u003echarset\u003c/a\u003e or the platform\u0027s \n\u003ca href\u003d\"../nio/charset/Charset.html#defaultCharset()\"\u003edefault charset\u003c/a\u003e. \n\u003cp\u003e The \u003ccode\u003eFileReader\u003c/code\u003e is meant for reading streams of characters. For reading streams of raw bytes, consider using a \u003ccode\u003eFileInputStream\u003c/code\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/InputStreamReader.html\" title\u003d\"class in java.io\"\u003e\u003ccode\u003eInputStreamReader\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FileInputStream.html\" title\u003d\"class in java.io\"\u003e\u003ccode\u003eFileInputStream\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}