{
  "packageName": "java.io",
  "simpleName": "DataInputStream",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.io.FilterInputStream",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "b"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "read",
      "comment": "Reads some number of bytes from the contained input stream and stores them into the buffer array b. The number of bytes actually read is returned as an integer. This method blocks until input data is available, end of file is detected, or an exception is thrown. If b is null, a NullPointerException is thrown. If the length of b is zero, then no bytes are read and 0 is returned; otherwise, there is an attempt to read at least one byte. If no byte is available because the stream is at end of file, the value -1 is returned; otherwise, at least one byte is read and stored into b. The first byte read is stored into element b[0], the next one into b[1], and so on. The number of bytes read is, at most, equal to the length of b. Let k be the number of bytes actually read; these bytes will be stored in elements b[0] through b[k-1], leaving elements b[k] through b[b.length-1] unaffected. The read(b) method has the same effect as:  read(b, 0, b.length)",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html#in\"\u003e\u003ccode\u003eFilterInputStream.in\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/InputStream.html#read(byte%5B%5D,int,int)\"\u003e\u003ccode\u003eInputStream.read(byte[], int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html#read(byte%5B%5D)\"\u003eread\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html\" title\u003d\"class in java.io\"\u003eFilterInputStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - the buffer into which the data is read."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the first byte cannot be read for any reason other than end of file, the stream has been closed and the underlying input stream does not support reading after close, or another I/O error occurs."
        ],
        "return": [
          "the total number of bytes read into the buffer, or \n\u003ccode\u003e-1\u003c/code\u003e if there is no more data because the end of the stream has been reached."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "off"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "len"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "read",
      "comment": "Reads up to len bytes of data from the contained input stream into an array of bytes. An attempt is made to read as many as len bytes, but a smaller number may be read, possibly zero. The number of bytes actually read is returned as an integer. This method blocks until input data is available, end of file is detected, or an exception is thrown. If len is zero, then no bytes are read and 0 is returned; otherwise, there is an attempt to read at least one byte. If no byte is available because the stream is at end of file, the value -1 is returned; otherwise, at least one byte is read and stored into b. The first byte read is stored into element b[off], the next one into b[off+1], and so on. The number of bytes read is, at most, equal to len. Let k be the number of bytes actually read; these bytes will be stored in elements b[off] through b[off+k-1], leaving elements b[off+k] through b[off+len-1] unaffected. In every case, elements b[0] through b[off] and elements b[off+len] through b[b.length-1] are unaffected.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html#in\"\u003e\u003ccode\u003eFilterInputStream.in\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/InputStream.html#read(byte%5B%5D,int,int)\"\u003e\u003ccode\u003eInputStream.read(byte[], int, int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html#read(byte%5B%5D,int,int)\"\u003eread\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html\" title\u003d\"class in java.io\"\u003eFilterInputStream\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - the buffer into which the data is read.",
          "\u003ccode\u003eoff\u003c/code\u003e - the start offset in the destination array \n\u003ccode\u003eb\u003c/code\u003e",
          "\u003ccode\u003elen\u003c/code\u003e - the maximum number of bytes read."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003eb\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003eoff\u003c/code\u003e is negative, \n\u003ccode\u003elen\u003c/code\u003e is negative, or \n\u003ccode\u003elen\u003c/code\u003e is greater than \n\u003ccode\u003eb.length - off\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the first byte cannot be read for any reason other than end of file, the stream has been closed and the underlying input stream does not support reading after close, or another I/O error occurs."
        ],
        "return": [
          "the total number of bytes read into the buffer, or \n\u003ccode\u003e-1\u003c/code\u003e if there is no more data because the end of the stream has been reached."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "b"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "readFully",
      "comment": "See the general contract of the readFully method of DataInput. Bytes for this operation are read from the contained input stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html#in\"\u003e\u003ccode\u003eFilterInputStream.in\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html#readFully(byte%5B%5D)\"\u003ereadFully\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html\" title\u003d\"interface in java.io\"\u003eDataInput\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - the buffer into which the data is read."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eb\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/EOFException.html\" title\u003d\"class in java.io\"\u003eEOFException\u003c/a\u003e\u003c/code\u003e - if this input stream reaches the end before reading all the bytes.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "b"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "off"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "len"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "readFully",
      "comment": "See the general contract of the readFully method of DataInput. Bytes for this operation are read from the contained input stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html#in\"\u003e\u003ccode\u003eFilterInputStream.in\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html#readFully(byte%5B%5D,int,int)\"\u003ereadFully\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html\" title\u003d\"interface in java.io\"\u003eDataInput\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eb\u003c/code\u003e - the buffer into which the data is read.",
          "\u003ccode\u003eoff\u003c/code\u003e - the start offset in the data array \n\u003ccode\u003eb\u003c/code\u003e.",
          "\u003ccode\u003elen\u003c/code\u003e - the number of bytes to read."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eb\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eoff\u003c/code\u003e is negative, \n\u003ccode\u003elen\u003c/code\u003e is negative, or \n\u003ccode\u003elen\u003c/code\u003e is greater than \n\u003ccode\u003eb.length - off\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/EOFException.html\" title\u003d\"class in java.io\"\u003eEOFException\u003c/a\u003e\u003c/code\u003e - if this input stream reaches the end before reading all the bytes.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "n"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "skipBytes",
      "comment": "See the general contract of the skipBytes method of DataInput. Bytes for this operation are read from the contained input stream.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html#skipBytes(int)\"\u003eskipBytes\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html\" title\u003d\"interface in java.io\"\u003eDataInput\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003en\u003c/code\u003e - the number of bytes to be skipped."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the contained input stream does not support seek, or the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs."
        ],
        "return": [
          "the actual number of bytes skipped."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "readBoolean",
      "comment": "See the general contract of the readBoolean method of DataInput. Bytes for this operation are read from the contained input stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html#in\"\u003e\u003ccode\u003eFilterInputStream.in\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html#readBoolean()\"\u003ereadBoolean\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html\" title\u003d\"interface in java.io\"\u003eDataInput\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/EOFException.html\" title\u003d\"class in java.io\"\u003eEOFException\u003c/a\u003e\u003c/code\u003e - if this input stream has reached the end.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs."
        ],
        "return": [
          "the \n\u003ccode\u003eboolean\u003c/code\u003e value read."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "readByte",
      "comment": "See the general contract of the readByte method of DataInput. Bytes for this operation are read from the contained input stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html#in\"\u003e\u003ccode\u003eFilterInputStream.in\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html#readByte()\"\u003ereadByte\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html\" title\u003d\"interface in java.io\"\u003eDataInput\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/EOFException.html\" title\u003d\"class in java.io\"\u003eEOFException\u003c/a\u003e\u003c/code\u003e - if this input stream has reached the end.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs."
        ],
        "return": [
          "the next byte of this input stream as a signed 8-bit \n\u003ccode\u003ebyte\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "readUnsignedByte",
      "comment": "See the general contract of the readUnsignedByte method of DataInput. Bytes for this operation are read from the contained input stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html#in\"\u003e\u003ccode\u003eFilterInputStream.in\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html#readUnsignedByte()\"\u003ereadUnsignedByte\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html\" title\u003d\"interface in java.io\"\u003eDataInput\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/EOFException.html\" title\u003d\"class in java.io\"\u003eEOFException\u003c/a\u003e\u003c/code\u003e - if this input stream has reached the end.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs."
        ],
        "return": [
          "the next byte of this input stream, interpreted as an unsigned 8-bit number."
        ]
      }
    },
    {
      "returnType": {
        "name": "short",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "readShort",
      "comment": "See the general contract of the readShort method of DataInput. Bytes for this operation are read from the contained input stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html#in\"\u003e\u003ccode\u003eFilterInputStream.in\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html#readShort()\"\u003ereadShort\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html\" title\u003d\"interface in java.io\"\u003eDataInput\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/EOFException.html\" title\u003d\"class in java.io\"\u003eEOFException\u003c/a\u003e\u003c/code\u003e - if this input stream reaches the end before reading two bytes.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs."
        ],
        "return": [
          "the next two bytes of this input stream, interpreted as a signed 16-bit number."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "readUnsignedShort",
      "comment": "See the general contract of the readUnsignedShort method of DataInput. Bytes for this operation are read from the contained input stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html#in\"\u003e\u003ccode\u003eFilterInputStream.in\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html#readUnsignedShort()\"\u003ereadUnsignedShort\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html\" title\u003d\"interface in java.io\"\u003eDataInput\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/EOFException.html\" title\u003d\"class in java.io\"\u003eEOFException\u003c/a\u003e\u003c/code\u003e - if this input stream reaches the end before reading two bytes.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs."
        ],
        "return": [
          "the next two bytes of this input stream, interpreted as an unsigned 16-bit integer."
        ]
      }
    },
    {
      "returnType": {
        "name": "char",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "readChar",
      "comment": "See the general contract of the readChar method of DataInput. Bytes for this operation are read from the contained input stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html#in\"\u003e\u003ccode\u003eFilterInputStream.in\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html#readChar()\"\u003ereadChar\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html\" title\u003d\"interface in java.io\"\u003eDataInput\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/EOFException.html\" title\u003d\"class in java.io\"\u003eEOFException\u003c/a\u003e\u003c/code\u003e - if this input stream reaches the end before reading two bytes.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs."
        ],
        "return": [
          "the next two bytes of this input stream, interpreted as a \n\u003ccode\u003echar\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "readInt",
      "comment": "See the general contract of the readInt method of DataInput. Bytes for this operation are read from the contained input stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html#in\"\u003e\u003ccode\u003eFilterInputStream.in\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html#readInt()\"\u003ereadInt\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html\" title\u003d\"interface in java.io\"\u003eDataInput\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/EOFException.html\" title\u003d\"class in java.io\"\u003eEOFException\u003c/a\u003e\u003c/code\u003e - if this input stream reaches the end before reading four bytes.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs."
        ],
        "return": [
          "the next four bytes of this input stream, interpreted as an \n\u003ccode\u003eint\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "readLong",
      "comment": "See the general contract of the readLong method of DataInput. Bytes for this operation are read from the contained input stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html#in\"\u003e\u003ccode\u003eFilterInputStream.in\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html#readLong()\"\u003ereadLong\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html\" title\u003d\"interface in java.io\"\u003eDataInput\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/EOFException.html\" title\u003d\"class in java.io\"\u003eEOFException\u003c/a\u003e\u003c/code\u003e - if this input stream reaches the end before reading eight bytes.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs."
        ],
        "return": [
          "the next eight bytes of this input stream, interpreted as a \n\u003ccode\u003elong\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "float",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "readFloat",
      "comment": "See the general contract of the readFloat method of DataInput. Bytes for this operation are read from the contained input stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInputStream.html#readInt()\"\u003e\u003ccode\u003ereadInt()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Float.html#intBitsToFloat(int)\"\u003e\u003ccode\u003eFloat.intBitsToFloat(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html#readFloat()\"\u003ereadFloat\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html\" title\u003d\"interface in java.io\"\u003eDataInput\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/EOFException.html\" title\u003d\"class in java.io\"\u003eEOFException\u003c/a\u003e\u003c/code\u003e - if this input stream reaches the end before reading four bytes.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs."
        ],
        "return": [
          "the next four bytes of this input stream, interpreted as a \n\u003ccode\u003efloat\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "double",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "readDouble",
      "comment": "See the general contract of the readDouble method of DataInput. Bytes for this operation are read from the contained input stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInputStream.html#readLong()\"\u003e\u003ccode\u003ereadLong()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Double.html#longBitsToDouble(long)\"\u003e\u003ccode\u003eDouble.longBitsToDouble(long)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html#readDouble()\"\u003ereadDouble\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html\" title\u003d\"interface in java.io\"\u003eDataInput\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/EOFException.html\" title\u003d\"class in java.io\"\u003eEOFException\u003c/a\u003e\u003c/code\u003e - if this input stream reaches the end before reading eight bytes.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs."
        ],
        "return": [
          "the next eight bytes of this input stream, interpreted as a \n\u003ccode\u003edouble\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "readLine",
      "comment": "See the general contract of the readLine method of DataInput. Bytes for this operation are read from the contained input stream.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/BufferedReader.html#readLine()\"\u003e\u003ccode\u003eBufferedReader.readLine()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/FilterInputStream.html#in\"\u003e\u003ccode\u003eFilterInputStream.in\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html#readLine()\"\u003ereadLine\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html\" title\u003d\"interface in java.io\"\u003eDataInput\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs."
        ],
        "return": [
          "the next line of text from this input stream."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "readUTF",
      "comment": "See the general contract of the readUTF method of DataInput. Bytes for this operation are read from the contained input stream.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInputStream.html#readUTF(java.io.DataInput)\"\u003e\u003ccode\u003ereadUTF(java.io.DataInput)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html#readUTF()\"\u003ereadUTF\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInput.html\" title\u003d\"interface in java.io\"\u003eDataInput\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/EOFException.html\" title\u003d\"class in java.io\"\u003eEOFException\u003c/a\u003e\u003c/code\u003e - if this input stream reaches the end before reading all the bytes.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/UTFDataFormatException.html\" title\u003d\"class in java.io\"\u003eUTFDataFormatException\u003c/a\u003e\u003c/code\u003e - if the bytes do not represent a valid modified UTF-8 encoding of a string."
        ],
        "return": [
          "a Unicode string."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.DataInput",
            "type": "Class"
          },
          "field": {
            "name": "in"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 25,
      "name": "readUTF",
      "comment": "Reads from the stream in a representation of a Unicode character string encoded in modified UTF-8 format; this string of characters is then returned as a String. The details of the modified UTF-8 representation are exactly the same as for the readUTF method of DataInput.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataInputStream.html#readUnsignedShort()\"\u003e\u003ccode\u003ereadUnsignedShort()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ein\u003c/code\u003e - a data input stream."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/EOFException.html\" title\u003d\"class in java.io\"\u003eEOFException\u003c/a\u003e\u003c/code\u003e - if the input stream reaches the end before all the bytes.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - the stream has been closed and the contained input stream does not support reading after close, or another I/O error occurs.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/UTFDataFormatException.html\" title\u003d\"class in java.io\"\u003eUTFDataFormatException\u003c/a\u003e\u003c/code\u003e - if the bytes do not represent a valid modified UTF-8 encoding of a Unicode string."
        ],
        "return": [
          "a Unicode string."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "field": {
            "name": "in"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a DataInputStream that uses the specified underlying InputStream.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ein\u003c/code\u003e - the specified input stream"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.io.DataInputStream",
  "comment": "A data input stream lets an application read primitive Java data types from an underlying input stream in a machine-independent way. An application uses a data output stream to write data that can later be read by a data input stream. \n\u003cp\u003e A DataInputStream is not safe for use by multiple concurrent threads. If a DataInputStream is to be used by more than one thread then access to the data input stream should be controlled by appropriate synchronization.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/DataOutputStream.html\" title\u003d\"class in java.io\"\u003e\u003ccode\u003eDataOutputStream\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.0"
    ]
  }
}