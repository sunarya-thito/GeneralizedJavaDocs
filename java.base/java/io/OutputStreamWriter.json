{
  "packageName": "java.io",
  "simpleName": "OutputStreamWriter",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.io.Writer",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getEncoding",
      "comment": "Returns the name of the character encoding being used by this stream. If the encoding has an historical name then that name is returned; otherwise the encoding\u0027s canonical name is returned. If this instance was created with the OutputStreamWriter(OutputStream, String) constructor then the returned name, being unique for the encoding, may differ from the name passed to the constructor. This method may return null if the stream has been closed.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/charset/Charset.html\" title\u003d\"class in java.nio.charset\"\u003e\u003ccode\u003eCharset\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "The historical name of this encoding, or possibly \n\u003ccode\u003enull\u003c/code\u003e if the stream has been closed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "c"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "write",
      "comment": "Writes a single character.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Writer.html#write(int)\"\u003ewrite\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Writer.html\" title\u003d\"class in java.io\"\u003eWriter\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - int specifying a character to be written"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "char",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "cbuf"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "off"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "len"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "write",
      "comment": "Writes a portion of an array of characters.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Writer.html#write(char%5B%5D,int,int)\"\u003ewrite\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Writer.html\" title\u003d\"class in java.io\"\u003eWriter\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecbuf\u003c/code\u003e - Buffer of characters",
          "\u003ccode\u003eoff\u003c/code\u003e - Offset from which to start writing characters",
          "\u003ccode\u003elen\u003c/code\u003e - Number of characters to write"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003eoff\u003c/code\u003e is negative, or \n\u003ccode\u003elen\u003c/code\u003e is negative, or \n\u003ccode\u003eoff + len\u003c/code\u003e is negative or greater than the length of the given array",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "str"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "off"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "len"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "write",
      "comment": "Writes a portion of a string.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Writer.html#write(java.lang.String,int,int)\"\u003ewrite\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Writer.html\" title\u003d\"class in java.io\"\u003eWriter\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003estr\u003c/code\u003e - A String",
          "\u003ccode\u003eoff\u003c/code\u003e - Offset from which to start writing characters",
          "\u003ccode\u003elen\u003c/code\u003e - Number of characters to write"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003eoff\u003c/code\u003e is negative, or \n\u003ccode\u003elen\u003c/code\u003e is negative, or \n\u003ccode\u003eoff + len\u003c/code\u003e is negative or greater than the length of the given string",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "flush",
      "comment": "Flushes the stream.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Flushable.html#flush()\"\u003eflush\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Flushable.html\" title\u003d\"interface in java.io\"\u003eFlushable\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Writer.html#flush()\"\u003eflush\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Writer.html\" title\u003d\"class in java.io\"\u003eWriter\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "close",
      "comment": "Description copied from class: Writer",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/AutoCloseable.html#close()\"\u003eclose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/AutoCloseable.html\" title\u003d\"interface in java.lang\"\u003eAutoCloseable\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Closeable.html#close()\"\u003eclose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Closeable.html\" title\u003d\"interface in java.io\"\u003eCloseable\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Writer.html#close()\"\u003eclose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Writer.html\" title\u003d\"class in java.io\"\u003eWriter\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.io.UnsupportedEncodingException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "charsetName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an OutputStreamWriter that uses the named charset.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - An OutputStream",
          "\u003ccode\u003echarsetName\u003c/code\u003e - The name of a supported \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/charset/Charset.html\" title\u003d\"class in java.nio.charset\"\u003e\u003ccode\u003echarset\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/UnsupportedEncodingException.html\" title\u003d\"class in java.io\"\u003eUnsupportedEncodingException\u003c/a\u003e\u003c/code\u003e - If the named encoding is not supported"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an OutputStreamWriter that uses the default character encoding.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - An OutputStream"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        },
        {
          "type": {
            "name": "java.nio.charset.Charset",
            "type": "Class"
          },
          "field": {
            "name": "cs"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an OutputStreamWriter that uses the given charset.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - An OutputStream",
          "\u003ccode\u003ecs\u003c/code\u003e - A charset"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "field": {
            "name": "out"
          }
        },
        {
          "type": {
            "name": "java.nio.charset.CharsetEncoder",
            "type": "Class"
          },
          "field": {
            "name": "enc"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an OutputStreamWriter that uses the given charset encoder.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eout\u003c/code\u003e - An OutputStream",
          "\u003ccode\u003eenc\u003c/code\u003e - A charset encoder"
        ],
        "since": [
          "1.4"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.io.OutputStreamWriter",
  "comment": "An OutputStreamWriter is a bridge from character streams to byte streams: Characters written to it are encoded into bytes using a specified \n\u003ca href\u003d\"../nio/charset/Charset.html\" title\u003d\"class in java.nio.charset\"\u003e\u003ccode\u003echarset\u003c/code\u003e\u003c/a\u003e. The charset that it uses may be specified by name or may be given explicitly, or the platform\u0027s default charset may be accepted. \n\u003cp\u003e Each invocation of a write() method causes the encoding converter to be invoked on the given character(s). The resulting bytes are accumulated in a buffer before being written to the underlying output stream. Note that the characters passed to the write() methods are not buffered. \u003c/p\u003e\n\u003cp\u003e For top efficiency, consider wrapping an OutputStreamWriter within a BufferedWriter so as to avoid frequent converter invocations. For example: \u003c/p\u003e\n\u003cpre\u003e Writer out\n   \u003d new BufferedWriter(new OutputStreamWriter(System.out));\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e A \u003ci\u003esurrogate pair\u003c/i\u003e is a character represented by a sequence of two \u003ccode\u003echar\u003c/code\u003e values: A \u003ci\u003ehigh\u003c/i\u003e surrogate in the range \u0027\\uD800\u0027 to \u0027\\uDBFF\u0027 followed by a \u003ci\u003elow\u003c/i\u003e surrogate in the range \u0027\\uDC00\u0027 to \u0027\\uDFFF\u0027. \u003c/p\u003e\n\u003cp\u003e A \u003ci\u003emalformed surrogate element\u003c/i\u003e is a high surrogate that is not followed by a low surrogate or a low surrogate that is not preceded by a high surrogate. \u003c/p\u003e\n\u003cp\u003e This class always replaces malformed surrogate elements and unmappable character sequences with the charset\u0027s default \u003ci\u003esubstitution sequence\u003c/i\u003e. The \u003ca href\u003d\"../nio/charset/CharsetEncoder.html\" title\u003d\"class in java.nio.charset\"\u003eCharsetEncoder\u003c/a\u003e class should be used when more control over the encoding process is required.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/BufferedWriter.html\" title\u003d\"class in java.io\"\u003e\u003ccode\u003eBufferedWriter\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/OutputStream.html\" title\u003d\"class in java.io\"\u003e\u003ccode\u003eOutputStream\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/charset/Charset.html\" title\u003d\"class in java.nio.charset\"\u003e\u003ccode\u003eCharset\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}