{
  "packageName": "java.io",
  "simpleName": "Config",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.io.ObjectInputFilter",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getSerialFilter",
      "comment": "Returns the system-wide serialization filter or null if not configured.",
      "tagMap": {
        "return": [
          "the system-wide serialization filter or \n\u003ccode\u003enull\u003c/code\u003e if not configured"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.io.ObjectInputFilter",
            "type": "Class"
          },
          "field": {
            "name": "filter"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "setSerialFilter",
      "comment": "Set the system-wide filter if it has not already been configured or set.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efilter\u003c/code\u003e - the serialization filter to set as the system-wide filter; not null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if there is security manager and the \n\u003ccode\u003eSerializablePermission(\"serialFilter\")\u003c/code\u003e is not granted",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the filter has already been set \n\u003ccode\u003enon-null\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.ObjectInputFilter",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "pattern"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "createFilter",
      "comment": "Returns an ObjectInputFilter from a string of patterns. Patterns are separated by \";\" (semicolon). Whitespace is significant and is considered part of the pattern. If a pattern includes an equals assignment, \"\u003d\" it sets a limit. If a limit appears more than once the last value is used. maxdepth\u003dvalue - the maximum depth of a graph maxrefs\u003dvalue - the maximum number of internal references maxbytes\u003dvalue - the maximum number of bytes in the input stream maxarray\u003dvalue - the maximum array length allowed Other patterns match or reject class or package name as returned from Class.getName() and if an optional module name is present class.getModule().getName(). Note that for arrays the element type is used in the pattern, not the array type. If the pattern starts with \"!\", the class is rejected if the remaining pattern is matched; otherwise the class is allowed if the pattern matches. If the pattern contains \"/\", the non-empty prefix up to the \"/\" is the module name; if the module name matches the module name of the class then the remaining pattern is matched with the class name. If there is no \"/\", the module name is not compared. If the pattern ends with \".**\" it matches any class in the package and all subpackages. If the pattern ends with \".*\" it matches any class in the package. If the pattern ends with \"*\", it matches any class with the pattern as a prefix. If the pattern is equal to the class name, it matches. Otherwise, the pattern is not matched. The resulting filter performs the limit checks and then tries to match the class, if any. If any of the limits are exceeded, the filter returns Status.REJECTED. If the class is an array type, the class to be matched is the element type. Arrays of any number of dimensions are treated the same as the element type. For example, a pattern of \"!example.Foo\", rejects creation of any instance or array of example.Foo. The first pattern that matches, working from left to right, determines the Status.ALLOWED or Status.REJECTED result. If the limits are not exceeded and no pattern matches the class, the result is Status.UNDECIDED.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epattern\u003c/code\u003e - the pattern string to parse; not null"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the pattern string is illegal or malformed and cannot be parsed. In particular, if any of the following is true: \n\u003cul\u003e \n \u003cli\u003e if a limit is missing the name or the name is not one of \"maxdepth\", \"maxrefs\", \"maxbytes\", or \"maxarray\" \u003c/li\u003e\n \u003cli\u003e if the value of the limit can not be parsed by \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Long.html#parseLong(java.lang.String,int)\"\u003e\u003ccode\u003eLong.parseLong\u003c/code\u003e\u003c/a\u003e or is negative \u003c/li\u003e\n \u003cli\u003e if the pattern contains \"/\" and the module name is missing or the remaining pattern is empty \u003c/li\u003e\n \u003cli\u003e if the package is missing for \".*\" and \".**\" \u003c/li\u003e\n\u003c/ul\u003e"
        ],
        "return": [
          "a filter to check a class being deserialized; \n\u003ccode\u003enull\u003c/code\u003e if no patterns"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 25,
  "name": "java.io.ObjectInputFilter$Config",
  "comment": "A utility class to set and get the system-wide filter or create a filter from a pattern string. If a system-wide filter is set, it will be used for each \n\u003ca href\u003d\"ObjectInputStream.html\" title\u003d\"class in java.io\"\u003e\u003ccode\u003eObjectInputStream\u003c/code\u003e\u003c/a\u003e that does not set its own filter. \n\u003cp\u003e When setting the filter, it should be stateless and idempotent, reporting the same result when passed the same arguments. \u003c/p\u003e\n\u003cp\u003e The filter is configured during the initialization of the \u003ccode\u003eObjectInputFilter.Config\u003c/code\u003e class. For example, by calling \u003ca href\u003d\"#getSerialFilter()\"\u003e\u003ccode\u003eConfig.getSerialFilter\u003c/code\u003e\u003c/a\u003e. If the Java virtual machine is started with the system property \u003ccode\u003e\u003cspan id\u003d\"jdk.serialFilter\" class\u003d\"search-tag-result\"\u003ejdk.serialFilter\u003c/span\u003e\u003c/code\u003e, its value is used to configure the filter. If the system property is not defined, and the \u003ca href\u003d\"../security/Security.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eSecurity\u003c/code\u003e\u003c/a\u003e property \u003ccode\u003ejdk.serialFilter\u003c/code\u003e is defined then it is used to configure the filter. Otherwise, the filter is not configured during initialization and can be set with \u003ca href\u003d\"#setSerialFilter(java.io.ObjectInputFilter)\"\u003e\u003ccode\u003eConfig.setSerialFilter\u003c/code\u003e\u003c/a\u003e. Setting the \u003ccode\u003ejdk.serialFilter\u003c/code\u003e with \u003ca href\u003d\"../lang/System.html#setProperty(java.lang.String,java.lang.String)\"\u003e\u003ccode\u003eSystem.setProperty\u003c/code\u003e\u003c/a\u003e \u003cem\u003edoes not set the filter\u003c/em\u003e. The syntax for each property is the same as for the \u003ca href\u003d\"#createFilter(java.lang.String)\"\u003e\u003ccode\u003ecreateFilter\u003c/code\u003e\u003c/a\u003e method.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "9"
    ]
  }
}