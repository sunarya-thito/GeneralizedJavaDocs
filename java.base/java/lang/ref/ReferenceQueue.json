{
  "packageName": "java.lang.ref",
  "simpleName": "ReferenceQueue",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.ref.Reference",
        "parameters": [
          {
            "upperBounds": [
              {
                "owner": "java.lang.ref.ReferenceQueue",
                "name": "T",
                "type": "Variable"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "poll",
      "comment": "Polls this queue to see if a reference object is available. If one is available without further delay then it is removed from the queue and returned. Otherwise this method immediately returns null.",
      "tagMap": {
        "return": [
          "A reference object, if one was immediately available, otherwise \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.ref.Reference",
        "parameters": [
          {
            "upperBounds": [
              {
                "owner": "java.lang.ref.ReferenceQueue",
                "name": "T",
                "type": "Variable"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.IllegalArgumentException",
          "type": "Class"
        },
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "timeout"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the next reference object in this queue, blocking until either one becomes available or the given timeout period expires. This method does not offer real-time guarantees: It schedules the timeout as if by invoking the Object.wait(long) method.",
      "tagMap": {
        "param": [
          "\u003ccode\u003etimeout\u003c/code\u003e - If positive, block for up to \n\u003ccode\u003etimeout\u003c/code\u003e milliseconds while waiting for a reference to be added to this queue. If zero, block indefinitely."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the value of the timeout argument is negative",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - If the timeout wait is interrupted"
        ],
        "return": [
          "A reference object, if one was available within the specified timeout period, otherwise \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.ref.Reference",
        "parameters": [
          {
            "upperBounds": [
              {
                "owner": "java.lang.ref.ReferenceQueue",
                "name": "T",
                "type": "Variable"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.InterruptedException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "remove",
      "comment": "Removes the next reference object in this queue, blocking until one becomes available.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/InterruptedException.html\" title\u003d\"class in java.lang\"\u003eInterruptedException\u003c/a\u003e\u003c/code\u003e - If the wait is interrupted"
        ],
        "return": [
          "A reference object, blocking until one becomes available"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new reference-object queue.",
      "tagMap": {}
    }
  ],
  "genericParameters": [
    {
      "name": "T",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.lang.ref.ReferenceQueue",
  "comment": "Reference queues, to which registered reference objects are appended by the garbage collector after the appropriate reachability changes are detected.",
  "tagMap": {
    "since": [
      "1.2"
    ]
  }
}