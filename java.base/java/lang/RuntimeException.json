{
  "packageName": "java.lang",
  "simpleName": "RuntimeException",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Exception",
    "type": "Class"
  },
  "members": [
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new runtime exception with null as its detail message. The cause is not initialized, and may subsequently be initialized by a call to Throwable.initCause(java.lang.Throwable).",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "message"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new runtime exception with the specified detail message. The cause is not initialized, and may subsequently be initialized by a call to Throwable.initCause(java.lang.Throwable).",
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - the detail message. The detail message is saved for later retrieval by the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html#getMessage()\"\u003e\u003ccode\u003eThrowable.getMessage()\u003c/code\u003e\u003c/a\u003e method."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "message"
          }
        },
        {
          "type": {
            "name": "java.lang.Throwable",
            "type": "Class"
          },
          "field": {
            "name": "cause"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new runtime exception with the specified detail message and cause. Note that the detail message associated with cause is not automatically incorporated in this runtime exception\u0027s detail message.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - the detail message (which is saved for later retrieval by the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html#getMessage()\"\u003e\u003ccode\u003eThrowable.getMessage()\u003c/code\u003e\u003c/a\u003e method).",
          "\u003ccode\u003ecause\u003c/code\u003e - the cause (which is saved for later retrieval by the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html#getCause()\"\u003e\u003ccode\u003eThrowable.getCause()\u003c/code\u003e\u003c/a\u003e method). (A \n\u003ccode\u003enull\u003c/code\u003e value is permitted, and indicates that the cause is nonexistent or unknown.)"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.Throwable",
            "type": "Class"
          },
          "field": {
            "name": "cause"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new runtime exception with the specified cause and a detail message of (cause\u003d\u003dnull ? null : cause.toString()) (which typically contains the class and detail message of cause). This constructor is useful for runtime exceptions that are little more than wrappers for other throwables.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecause\u003c/code\u003e - the cause (which is saved for later retrieval by the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html#getCause()\"\u003e\u003ccode\u003eThrowable.getCause()\u003c/code\u003e\u003c/a\u003e method). (A \n\u003ccode\u003enull\u003c/code\u003e value is permitted, and indicates that the cause is nonexistent or unknown.)"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "message"
          }
        },
        {
          "type": {
            "name": "java.lang.Throwable",
            "type": "Class"
          },
          "field": {
            "name": "cause"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "enableSuppression"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "writableStackTrace"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a new runtime exception with the specified detail message, cause, suppression enabled or disabled, and writable stack trace enabled or disabled.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - the detail message.",
          "\u003ccode\u003ecause\u003c/code\u003e - the cause. (A \n\u003ccode\u003enull\u003c/code\u003e value is permitted, and indicates that the cause is nonexistent or unknown.)",
          "\u003ccode\u003eenableSuppression\u003c/code\u003e - whether or not suppression is enabled or disabled",
          "\u003ccode\u003ewritableStackTrace\u003c/code\u003e - whether or not the stack trace should be writable"
        ],
        "since": [
          "1.7"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.lang.RuntimeException",
  "comment": "\u003ccode\u003eRuntimeException\u003c/code\u003e is the superclass of those exceptions that can be thrown during the normal operation of the Java Virtual Machine. \n\u003cp\u003e\u003ccode\u003eRuntimeException\u003c/code\u003e and its subclasses are \u003cem\u003eunchecked exceptions\u003c/em\u003e. Unchecked exceptions do \u003cem\u003enot\u003c/em\u003e need to be declared in a method or constructor\u0027s \u003ccode\u003ethrows\u003c/code\u003e clause if they can be thrown by the execution of the method or constructor and propagate outside the method or constructor boundary.\u003c/p\u003e",
  "tagMap": {
    "See Java Language Specification:": [
      "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-11.html#jls-11.2\"\u003e11.2 Compile-Time Checking of Exceptions\u003c/a\u003e\n\u003cbr\u003e"
    ],
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.lang.RuntimeException\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.0"
    ]
  }
}