{
  "packageName": "java.lang.reflect",
  "simpleName": "UndeclaredThrowableException",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.RuntimeException",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Throwable",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUndeclaredThrowable",
      "comment": "Returns the Throwable instance wrapped in this UndeclaredThrowableException, which may be null. This method predates the general-purpose exception chaining facility. The Throwable.getCause() method is now the preferred means of obtaining this information.",
      "tagMap": {
        "return": [
          "the undeclared checked exception that was thrown"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.Throwable",
            "type": "Class"
          },
          "field": {
            "name": "undeclaredThrowable"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an UndeclaredThrowableException with the specified Throwable.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eundeclaredThrowable\u003c/code\u003e - the undeclared checked exception that was thrown"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.Throwable",
            "type": "Class"
          },
          "field": {
            "name": "undeclaredThrowable"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an UndeclaredThrowableException with the specified Throwable and a detail message.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eundeclaredThrowable\u003c/code\u003e - the undeclared checked exception that was thrown",
          "\u003ccode\u003es\u003c/code\u003e - the detail message"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.lang.reflect.UndeclaredThrowableException",
  "comment": "Thrown by a method invocation on a proxy instance if its invocation handler\u0027s \n\u003ca href\u003d\"InvocationHandler.html#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)\"\u003e\u003ccode\u003einvoke\u003c/code\u003e\u003c/a\u003e method throws a checked exception (a \n\u003ccode\u003eThrowable\u003c/code\u003e that is not assignable to \n\u003ccode\u003eRuntimeException\u003c/code\u003e or \n\u003ccode\u003eError\u003c/code\u003e) that is not assignable to any of the exception types declared in the \n\u003ccode\u003ethrows\u003c/code\u003e clause of the method that was invoked on the proxy instance and dispatched to the invocation handler. \n\u003cp\u003eAn \u003ccode\u003eUndeclaredThrowableException\u003c/code\u003e instance contains the undeclared checked exception that was thrown by the invocation handler, and it can be retrieved with the \u003ccode\u003egetUndeclaredThrowable()\u003c/code\u003e method. \u003ccode\u003eUndeclaredThrowableException\u003c/code\u003e extends \u003ccode\u003eRuntimeException\u003c/code\u003e, so it is an unchecked exception that wraps a checked exception. \u003c/p\u003e\n\u003cp\u003eAs of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The \"undeclared checked exception that was thrown by the invocation handler\" that may be provided at construction time and accessed via the \u003ca href\u003d\"#getUndeclaredThrowable()\"\u003e\u003ccode\u003egetUndeclaredThrowable()\u003c/code\u003e\u003c/a\u003e method is now known as the \u003ci\u003ecause\u003c/i\u003e, and may be accessed via the \u003ca href\u003d\"../Throwable.html#getCause()\"\u003e\u003ccode\u003eThrowable.getCause()\u003c/code\u003e\u003c/a\u003e method, as well as the aforementioned \"legacy method.\"\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/reflect/InvocationHandler.html\" title\u003d\"interface in java.lang.reflect\"\u003e\u003ccode\u003eInvocationHandler\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.lang.reflect.UndeclaredThrowableException\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.3"
    ]
  }
}