{
  "packageName": "java.lang.reflect",
  "simpleName": "Modifier",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PUBLIC",
      "comment": "The int value representing the public modifier.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.lang.reflect.Modifier.PUBLIC\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PRIVATE",
      "comment": "The int value representing the private modifier.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.lang.reflect.Modifier.PRIVATE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "PROTECTED",
      "comment": "The int value representing the protected modifier.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.lang.reflect.Modifier.PROTECTED\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "STATIC",
      "comment": "The int value representing the static modifier.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.lang.reflect.Modifier.STATIC\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "FINAL",
      "comment": "The int value representing the final modifier.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.lang.reflect.Modifier.FINAL\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "SYNCHRONIZED",
      "comment": "The int value representing the synchronized modifier.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.lang.reflect.Modifier.SYNCHRONIZED\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "VOLATILE",
      "comment": "The int value representing the volatile modifier.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.lang.reflect.Modifier.VOLATILE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "TRANSIENT",
      "comment": "The int value representing the transient modifier.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.lang.reflect.Modifier.TRANSIENT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "NATIVE",
      "comment": "The int value representing the native modifier.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.lang.reflect.Modifier.NATIVE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "INTERFACE",
      "comment": "The int value representing the interface modifier.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.lang.reflect.Modifier.INTERFACE\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "ABSTRACT",
      "comment": "The int value representing the abstract modifier.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.lang.reflect.Modifier.ABSTRACT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "int",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "STRICT",
      "comment": "The int value representing the strictfp modifier.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/constant-values.html#java.lang.reflect.Modifier.STRICT\"\u003eConstant Field Values\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "mod"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isPublic",
      "comment": "Return true if the integer argument includes the public modifier, false otherwise.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emod\u003c/code\u003e - a set of modifiers"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003emod\u003c/code\u003e includes the \n\u003ccode\u003epublic\u003c/code\u003e modifier; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "mod"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isPrivate",
      "comment": "Return true if the integer argument includes the private modifier, false otherwise.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emod\u003c/code\u003e - a set of modifiers"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003emod\u003c/code\u003e includes the \n\u003ccode\u003eprivate\u003c/code\u003e modifier; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "mod"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isProtected",
      "comment": "Return true if the integer argument includes the protected modifier, false otherwise.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emod\u003c/code\u003e - a set of modifiers"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003emod\u003c/code\u003e includes the \n\u003ccode\u003eprotected\u003c/code\u003e modifier; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "mod"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isStatic",
      "comment": "Return true if the integer argument includes the static modifier, false otherwise.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emod\u003c/code\u003e - a set of modifiers"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003emod\u003c/code\u003e includes the \n\u003ccode\u003estatic\u003c/code\u003e modifier; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "mod"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isFinal",
      "comment": "Return true if the integer argument includes the final modifier, false otherwise.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emod\u003c/code\u003e - a set of modifiers"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003emod\u003c/code\u003e includes the \n\u003ccode\u003efinal\u003c/code\u003e modifier; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "mod"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isSynchronized",
      "comment": "Return true if the integer argument includes the synchronized modifier, false otherwise.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emod\u003c/code\u003e - a set of modifiers"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003emod\u003c/code\u003e includes the \n\u003ccode\u003esynchronized\u003c/code\u003e modifier; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "mod"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isVolatile",
      "comment": "Return true if the integer argument includes the volatile modifier, false otherwise.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emod\u003c/code\u003e - a set of modifiers"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003emod\u003c/code\u003e includes the \n\u003ccode\u003evolatile\u003c/code\u003e modifier; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "mod"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isTransient",
      "comment": "Return true if the integer argument includes the transient modifier, false otherwise.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emod\u003c/code\u003e - a set of modifiers"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003emod\u003c/code\u003e includes the \n\u003ccode\u003etransient\u003c/code\u003e modifier; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "mod"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isNative",
      "comment": "Return true if the integer argument includes the native modifier, false otherwise.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emod\u003c/code\u003e - a set of modifiers"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003emod\u003c/code\u003e includes the \n\u003ccode\u003enative\u003c/code\u003e modifier; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "mod"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isInterface",
      "comment": "Return true if the integer argument includes the interface modifier, false otherwise.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emod\u003c/code\u003e - a set of modifiers"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003emod\u003c/code\u003e includes the \n\u003ccode\u003einterface\u003c/code\u003e modifier; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "mod"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isAbstract",
      "comment": "Return true if the integer argument includes the abstract modifier, false otherwise.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emod\u003c/code\u003e - a set of modifiers"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003emod\u003c/code\u003e includes the \n\u003ccode\u003eabstract\u003c/code\u003e modifier; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "mod"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "isStrict",
      "comment": "Return true if the integer argument includes the strictfp modifier, false otherwise.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emod\u003c/code\u003e - a set of modifiers"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if \n\u003ccode\u003emod\u003c/code\u003e includes the \n\u003ccode\u003estrictfp\u003c/code\u003e modifier; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "mod"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "toString",
      "comment": "Return a string describing the access modifier flags in the specified modifier. For example:     public final synchronized strictfp\n The modifier names are returned in an order consistent with the suggested modifier orderings given in sections 8.1.1, 8.3.1, 8.4.3, 8.8.3, and 9.1.1 of The Java Language Specification. The full modifier ordering used by this method is: public protected private abstract static final transient volatile synchronized native strictfp interface The interface modifier discussed in this class is not a true modifier in the Java language and it appears after all other modifiers listed by this method. This method may return a string of modifiers that are not valid modifiers of a Java entity; in other words, no checking is done on the possible validity of the combination of modifiers represented by the input. Note that to perform such checking for a known kind of entity, such as a constructor or method, first AND the argument of toString with the appropriate mask from a method like constructorModifiers() or methodModifiers().",
      "tagMap": {
        "param": [
          "\u003ccode\u003emod\u003c/code\u003e - a set of modifiers"
        ],
        "return": [
          "a string representation of the set of modifiers represented by \n\u003ccode\u003emod\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "classModifiers",
      "comment": "Return an int value OR-ing together the source language modifiers that can be applied to a class.",
      "tagMap": {
        "See Java Language Specification:": [
          "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-8.1.1\"\u003e8.1.1 Class Modifiers\u003c/a\u003e\n\u003cbr\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eint\u003c/code\u003e value OR-ing together the source language modifiers that can be applied to a class."
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "interfaceModifiers",
      "comment": "Return an int value OR-ing together the source language modifiers that can be applied to an interface.",
      "tagMap": {
        "See Java Language Specification:": [
          "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-9.html#jls-9.1.1\"\u003e9.1.1 Interface Modifiers\u003c/a\u003e\n\u003cbr\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eint\u003c/code\u003e value OR-ing together the source language modifiers that can be applied to an interface."
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "constructorModifiers",
      "comment": "Return an int value OR-ing together the source language modifiers that can be applied to a constructor.",
      "tagMap": {
        "See Java Language Specification:": [
          "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-8.8.3\"\u003e8.8.3 Constructor Modifiers\u003c/a\u003e\n\u003cbr\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eint\u003c/code\u003e value OR-ing together the source language modifiers that can be applied to a constructor."
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "methodModifiers",
      "comment": "Return an int value OR-ing together the source language modifiers that can be applied to a method.",
      "tagMap": {
        "See Java Language Specification:": [
          "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-8.4.3\"\u003e8.4.3 Method Modifiers\u003c/a\u003e\n\u003cbr\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eint\u003c/code\u003e value OR-ing together the source language modifiers that can be applied to a method."
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "fieldModifiers",
      "comment": "Return an int value OR-ing together the source language modifiers that can be applied to a field.",
      "tagMap": {
        "See Java Language Specification:": [
          "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-8.3.1\"\u003e8.3.1 Field Modifiers\u003c/a\u003e\n\u003cbr\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eint\u003c/code\u003e value OR-ing together the source language modifiers that can be applied to a field."
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "parameterModifiers",
      "comment": "Return an int value OR-ing together the source language modifiers that can be applied to a parameter.",
      "tagMap": {
        "See Java Language Specification:": [
          "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-8.4.1\"\u003e8.4.1 Formal Parameters\u003c/a\u003e\n\u003cbr\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eint\u003c/code\u003e value OR-ing together the source language modifiers that can be applied to a parameter."
        ],
        "since": [
          "1.8"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.lang.reflect.Modifier",
  "comment": "The Modifier class provides \n\u003ccode\u003estatic\u003c/code\u003e methods and constants to decode class and member access modifiers. The sets of modifiers are represented as integers with distinct bit positions representing different modifiers. The values for the constants representing the modifiers are taken from the tables in sections \n\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-4.html#jls-4.1\"\u003e4.1\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-4.html#jls-4.4\"\u003e4.4\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-4.html#jls-4.5\"\u003e4.5\u003c/a\u003e, and \n\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-4.html#jls-4.7\"\u003e4.7\u003c/a\u003e of \n\u003ccite\u003eThe Java Virtual Machine Specification\u003c/cite\u003e.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Class.html#getModifiers()\"\u003e\u003ccode\u003eClass.getModifiers()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/reflect/Member.html#getModifiers()\"\u003e\u003ccode\u003eMember.getModifiers()\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}