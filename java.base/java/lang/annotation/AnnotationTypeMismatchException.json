{
  "packageName": "java.lang.annotation",
  "simpleName": "AnnotationTypeMismatchException",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.RuntimeException",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.reflect.Method",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "element",
      "comment": "Returns the Method object for the incorrectly typed element. The value may be unavailable if this exception has been serialized and then read back in.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eMethod\u003c/code\u003e object for the incorrectly typed element, or \n\u003ccode\u003enull\u003c/code\u003e if unavailable"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "foundType",
      "comment": "Returns the type of data found in the incorrectly typed element. The returned string may, but is not required to, contain the value as well. The exact format of the string is unspecified and the string may be null.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the type of data found in the incorrectly typed element"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.reflect.Method",
            "type": "Class"
          },
          "name": "element",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "foundType",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs an AnnotationTypeMismatchException for the specified annotation type element and found data type.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eelement\u003c/code\u003e - the \n\u003ccode\u003eMethod\u003c/code\u003e object for the annotation element, may be \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003efoundType\u003c/code\u003e - the (erroneous) type of data found in the annotation. This string may, but is not required to, contain the value as well. The exact format of the string is unspecified, may be \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.lang.annotation.AnnotationTypeMismatchException",
  "comment": "Thrown to indicate that a program has attempted to access an element of an annotation whose type has changed after the annotation was compiled (or serialized). This exception can be thrown by the \n\u003ca href\u003d\"../reflect/AnnotatedElement.html\" title\u003d\"interface in java.lang.reflect\"\u003eAPI used to read annotations reflectively\u003c/a\u003e.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/reflect/AnnotatedElement.html\" title\u003d\"interface in java.lang.reflect\"\u003e\u003ccode\u003eAnnotatedElement\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.lang.annotation.AnnotationTypeMismatchException\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}