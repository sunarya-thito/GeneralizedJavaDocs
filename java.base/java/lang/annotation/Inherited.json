{
  "packageName": "java.lang.annotation",
  "simpleName": "Inherited",
  "moduleName": "java.base",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.lang.annotation.Inherited",
  "comment": "Indicates that an annotation interface is automatically inherited. If an Inherited meta-annotation is present on an annotation interface declaration, and the user queries the annotation interface on a class declaration, and the class declaration has no annotation for this interface, then the class\u0027s superclass will automatically be queried for the annotation interface. This process will be repeated until an annotation for this interface is found, or the top of the class hierarchy (Object) is reached. If no superclass has an annotation for this interface, then the query will indicate that the class in question has no such annotation. \n\u003cp\u003eNote that this meta-annotation interface has no effect if the annotated interface is used to annotate anything other than a class. Note also that this meta-annotation only causes annotations to be inherited from superclasses; annotations on implemented interfaces have no effect.\u003c/p\u003e",
  "tagMap": {
    "See Java Language Specification:": [
      "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-9.html#jls-9.6.4.3\"\u003e9.6.4.3 @Inherited\u003c/a\u003e\n\u003cbr\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}