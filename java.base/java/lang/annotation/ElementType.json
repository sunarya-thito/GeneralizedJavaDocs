{
  "packageName": "java.lang.annotation",
  "simpleName": "ElementType",
  "moduleName": "java.base",
  "type": "ENUM",
  "superClass": {
    "name": "java.lang.Enum",
    "parameters": [
      {
        "name": "java.lang.annotation.ElementType",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.annotation.ElementType",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "values",
      "comment": "Returns an array containing the constants of this enum class, in the order they are declared.",
      "tagMap": {
        "return": [
          "an array containing the constants of this enum class, in the order they are declared"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.annotation.ElementType",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "valueOf",
      "comment": "Returns the enum constant of this class with the specified name. The string must match exactly an identifier used to declare an enum constant in this class. (Extraneous whitespace characters are not permitted.)",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the enum constant to be returned."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if this enum class has no constant with the specified name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the argument is null"
        ],
        "return": [
          "the enum constant with the specified name"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.lang.annotation.ElementType",
  "comment": "The constants of this enumerated class provide a simple classification of the syntactic locations where annotations may appear in a Java program. These constants are used in \n\u003ca href\u003d\"Target.html\" title\u003d\"annotation in java.lang.annotation\"\u003e\u003ccode\u003eTarget\u003c/code\u003e\u003c/a\u003e meta-annotations to specify where it is legal to write annotations of a given type. \n\u003cp\u003eThe syntactic locations where annotations may appear are split into \u003cem\u003edeclaration contexts\u003c/em\u003e, where annotations apply to declarations, and \u003cem\u003etype contexts\u003c/em\u003e, where annotations apply to types used in declarations and expressions. \u003c/p\u003e\n\u003cp\u003eThe constants \u003ca href\u003d\"#ANNOTATION_TYPE\"\u003e\u003ccode\u003eANNOTATION_TYPE\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#CONSTRUCTOR\"\u003e\u003ccode\u003eCONSTRUCTOR\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#FIELD\"\u003e\u003ccode\u003eFIELD\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#LOCAL_VARIABLE\"\u003e\u003ccode\u003eLOCAL_VARIABLE\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#METHOD\"\u003e\u003ccode\u003eMETHOD\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#PACKAGE\"\u003e\u003ccode\u003ePACKAGE\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#MODULE\"\u003e\u003ccode\u003eMODULE\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#PARAMETER\"\u003e\u003ccode\u003ePARAMETER\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#TYPE\"\u003e\u003ccode\u003eTYPE\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"#TYPE_PARAMETER\"\u003e\u003ccode\u003eTYPE_PARAMETER\u003c/code\u003e\u003c/a\u003e correspond to the declaration contexts in JLS 9.6.4.1. \u003c/p\u003e\n\u003cp\u003eFor example, an annotation whose interface is meta-annotated with \u003ccode\u003e@Target(ElementType.FIELD)\u003c/code\u003e may only be written as a modifier for a field declaration. \u003c/p\u003e\n\u003cp\u003eThe constant \u003ca href\u003d\"#TYPE_USE\"\u003e\u003ccode\u003eTYPE_USE\u003c/code\u003e\u003c/a\u003e corresponds to the type contexts in JLS 4.11, as well as to two declaration contexts: class and interface declarations (including annotation declarations) and type parameter declarations. \u003c/p\u003e\n\u003cp\u003eFor example, an annotation whose interface is meta-annotated with \u003ccode\u003e@Target(ElementType.TYPE_USE)\u003c/code\u003e may be written on the class or interface of a field (or within the class or interface of the field, if it is a nested or parameterized class or interface, or array class), and may also appear as a modifier for, say, a class declaration. \u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003eTYPE_USE\u003c/code\u003e constant includes class and interface declarations and type parameter declarations as a convenience for designers of type checkers which give semantics to annotation interfaces. For example, if the annotation interface \u003ccode\u003eNonNull\u003c/code\u003e is meta-annotated with \u003ccode\u003e@Target(ElementType.TYPE_USE)\u003c/code\u003e, then \u003ccode\u003e@NonNull\u003c/code\u003e \u003ccode\u003eclass C {...}\u003c/code\u003e could be treated by a type checker as indicating that all variables of class \u003ccode\u003eC\u003c/code\u003e are non-null, while still allowing variables of other classes to be non-null or not non-null based on whether \u003ccode\u003e@NonNull\u003c/code\u003e appears at the variable\u0027s declaration.\u003c/p\u003e",
  "tagMap": {
    "See Java Language Specification:": [
      "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-9.html#jls-9.6.4.1\"\u003e9.6.4.1 @Target\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-4.1\"\u003e4.1 The Kinds of Types and Values\u003c/a\u003e\n\u003cbr\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}