{
  "packageName": "java.lang.annotation",
  "simpleName": "Documented",
  "moduleName": "java.base",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.lang.annotation.Documented",
  "comment": "If the annotation \n\u003ccode\u003e@Documented\u003c/code\u003e is present on the declaration of an annotation interface \n\u003ci\u003eA\u003c/i\u003e, then any \n\u003ccode\u003e@A\u003c/code\u003e annotation on an element is considered part of the element\u0027s public contract. In more detail, when an annotation interface \n\u003ci\u003eA\u003c/i\u003e is annotated with \n\u003ccode\u003eDocumented\u003c/code\u003e, the presence and value of \n\u003ci\u003eA\u003c/i\u003e annotations are a part of the public contract of the elements \n\u003ci\u003eA\u003c/i\u003e annotates. Conversely, if an annotation interface \n\u003ci\u003eB\u003c/i\u003e is \n\u003cem\u003enot\u003c/em\u003e annotated with \n\u003ccode\u003eDocumented\u003c/code\u003e, the presence and value of \n\u003ci\u003eB\u003c/i\u003e annotations are \n\u003cem\u003enot\u003c/em\u003e part of the public contract of the elements \n\u003ci\u003eB\u003c/i\u003e annotates. Concretely, if an annotation interface is annotated with \n\u003ccode\u003eDocumented\u003c/code\u003e, by default a tool like javadoc will display annotations of that interface in its output while annotations of annotation interfaces without \n\u003ccode\u003eDocumented\u003c/code\u003e will not be displayed.",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}