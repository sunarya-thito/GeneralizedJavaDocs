{
  "packageName": "java.lang",
  "simpleName": "NullPointerException",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.RuntimeException",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMessage",
      "comment": "Returns the detail message string of this throwable. If a non-null message was supplied in a constructor it is returned. Otherwise, an implementation specific message or null is returned.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html#getMessage()\"\u003egetMessage\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html\" title\u003d\"class in java.lang\"\u003eThrowable\u003c/a\u003e\u003c/code\u003e"
        ],
        "implNote": [
          "If no explicit message was passed to the constructor, and as long as certain internal information is available, a verbose description of the null reference is returned. The internal information is not available in deserialized NullPointerExceptions."
        ],
        "return": [
          "the detail message string, which may be \n\u003ccode\u003enull\u003c/code\u003e."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a NullPointerException with no detail message.",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a NullPointerException with the specified detail message.",
      "tagMap": {
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the detail message."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.lang.NullPointerException",
  "comment": "Thrown when an application attempts to use \n\u003ccode\u003enull\u003c/code\u003e in a case where an object is required. These include: \n\u003cul\u003e \n \u003cli\u003eCalling the instance method of a \u003ccode\u003enull\u003c/code\u003e object. \u003c/li\u003e\n \u003cli\u003eAccessing or modifying the field of a \u003ccode\u003enull\u003c/code\u003e object. \u003c/li\u003e\n \u003cli\u003eTaking the length of \u003ccode\u003enull\u003c/code\u003e as if it were an array. \u003c/li\u003e\n \u003cli\u003eAccessing or modifying the slots of \u003ccode\u003enull\u003c/code\u003e as if it were an array. \u003c/li\u003e\n \u003cli\u003eThrowing \u003ccode\u003enull\u003c/code\u003e as if it were a \u003ccode\u003eThrowable\u003c/code\u003e value. \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e Applications should throw instances of this class to indicate other illegal uses of the \u003ccode\u003enull\u003c/code\u003e object. \u003ccode\u003eNullPointerException\u003c/code\u003e objects may be constructed by the virtual machine as if \u003ca href\u003d\"Throwable.html#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)\"\u003esuppression were disabled and/or the stack trace was not writable\u003c/a\u003e.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.lang.NullPointerException\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.0"
    ]
  }
}