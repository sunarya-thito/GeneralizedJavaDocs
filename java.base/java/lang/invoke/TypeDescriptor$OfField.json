{
  "packageName": "java.lang.invoke",
  "simpleName": "OfField",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.invoke.TypeDescriptor",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isArray",
      "comment": "Does this field descriptor describe an array type?",
      "tagMap": {
        "return": [
          "whether this field descriptor describes an array type"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isPrimitive",
      "comment": "Does this field descriptor describe a primitive type (including void.)",
      "tagMap": {
        "return": [
          "whether this field descriptor describes a primitive type"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.lang.invoke.TypeDescriptor$OfField",
        "name": "F",
        "type": "Variable"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "componentType",
      "comment": "If this field descriptor describes an array type, return a descriptor for its component type, otherwise return null.",
      "tagMap": {
        "return": [
          "the component type, or \n\u003ccode\u003enull\u003c/code\u003e if this field descriptor does not describe an array type"
        ]
      }
    },
    {
      "returnType": {
        "owner": "java.lang.invoke.TypeDescriptor$OfField",
        "name": "F",
        "type": "Variable"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "arrayType",
      "comment": "Return a descriptor for the array type whose component type is described by this descriptor",
      "tagMap": {
        "return": [
          "the descriptor for the array type"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "F",
      "upperBounds": [
        {
          "name": "TypeDescriptor.OfField",
          "parameters": [
            {
              "name": "F",
              "type": "Class"
            }
          ],
          "type": "Class"
        }
      ],
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 521,
  "name": "java.lang.invoke.TypeDescriptor$OfField",
  "comment": "An entity that has a field type descriptor. Field descriptors conforming to JVMS \n\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-4.html#jls-4.3.2\"\u003e4.3.2\u003c/a\u003e can be described nominally via \n\u003ca href\u003d\"../Class.html#describeConstable()\"\u003e\u003ccode\u003eClass::describeConstable\u003c/code\u003e\u003c/a\u003e; otherwise they cannot be described nominally.",
  "tagMap": {
    "See Java Virtual Machine Specification:": [
      "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-4.html#jls-4.3.2\"\u003e4.3.2 Field Descriptors\u003c/a\u003e\n\u003cbr\u003e"
    ],
    "since": [
      "12"
    ]
  }
}