{
  "packageName": "java.lang.invoke",
  "simpleName": "ConstantCallSite",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.invoke.CallSite",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.invoke.MethodHandle",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "getTarget",
      "comment": "Returns the target method of the call site, which behaves like a final field of the ConstantCallSite. That is, the target is always the original value passed to the constructor call which created this instance.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/ConstantCallSite.html\" title\u003d\"class in java.lang.invoke\"\u003e\u003ccode\u003eConstantCallSite\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/VolatileCallSite.html\" title\u003d\"class in java.lang.invoke\"\u003e\u003ccode\u003eVolatileCallSite\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/CallSite.html#setTarget(java.lang.invoke.MethodHandle)\"\u003e\u003ccode\u003eCallSite.setTarget(java.lang.invoke.MethodHandle)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/ConstantCallSite.html#getTarget()\"\u003e\u003ccode\u003egetTarget()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/MutableCallSite.html#getTarget()\"\u003e\u003ccode\u003eMutableCallSite.getTarget()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/VolatileCallSite.html#getTarget()\"\u003e\u003ccode\u003eVolatileCallSite.getTarget()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/CallSite.html#getTarget()\"\u003egetTarget\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/CallSite.html\" title\u003d\"class in java.lang.invoke\"\u003eCallSite\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eConstantCallSite\u003c/code\u003e constructor has not completed"
        ],
        "return": [
          "the immutable linkage state of this call site, a constant method handle"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "setTarget",
      "comment": "Always throws an UnsupportedOperationException. This kind of call site cannot change its target.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/CallSite.html#getTarget()\"\u003e\u003ccode\u003eCallSite.getTarget()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/ConstantCallSite.html#setTarget(java.lang.invoke.MethodHandle)\"\u003e\u003ccode\u003esetTarget(java.lang.invoke.MethodHandle)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/MutableCallSite.html#setTarget(java.lang.invoke.MethodHandle)\"\u003e\u003ccode\u003eMutableCallSite.setTarget(java.lang.invoke.MethodHandle)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/VolatileCallSite.html#setTarget(java.lang.invoke.MethodHandle)\"\u003e\u003ccode\u003eVolatileCallSite.setTarget(java.lang.invoke.MethodHandle)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/CallSite.html#setTarget(java.lang.invoke.MethodHandle)\"\u003esetTarget\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/CallSite.html\" title\u003d\"class in java.lang.invoke\"\u003eCallSite\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eignore\u003c/code\u003e - a new target proposed for the call site, which is ignored"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - because this kind of call site cannot change its target"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.invoke.MethodHandle",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "dynamicInvoker",
      "comment": "Returns this call site\u0027s permanent target. Since that target will never change, this is a correct implementation of CallSite.dynamicInvoker.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/CallSite.html#dynamicInvoker()\"\u003edynamicInvoker\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/CallSite.html\" title\u003d\"class in java.lang.invoke\"\u003eCallSite\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003eConstantCallSite\u003c/code\u003e constructor has not completed"
        ],
        "return": [
          "the immutable linkage state of this call site, a constant method handle"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.invoke.MethodHandle",
            "type": "Class"
          },
          "name": "target",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a call site with a permanent target.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etarget\u003c/code\u003e - the target to be permanently associated with this call site"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the proposed target is null"
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.lang.Throwable",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.invoke.MethodType",
            "type": "Class"
          },
          "name": "targetType",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.invoke.MethodHandle",
            "type": "Class"
          },
          "name": "createTargetHook",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Creates a call site with a permanent target, possibly bound to the call site itself. During construction of the call site, the createTargetHook is invoked to produce the actual target, as if by a call of the form (MethodHandle) createTargetHook.invoke(this). Note that user code cannot perform such an action directly in a subclass constructor, since the target must be fixed before the ConstantCallSite constructor returns. The hook is said to bind the call site to a target method handle, and a typical action would be someTarget.bindTo(this). However, the hook is free to take any action whatever, including ignoring the call site and returning a constant target. The result returned by the hook must be a method handle of exactly the same type as the call site. While the hook is being called, the new ConstantCallSite object is in a partially constructed state. In this state, a call to getTarget, or any other attempt to use the target, will result in an IllegalStateException. It is legal at all times to obtain the call site\u0027s type using the type method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etargetType\u003c/code\u003e - the type of the method handle to be permanently associated with this call site",
          "\u003ccode\u003ecreateTargetHook\u003c/code\u003e - a method handle to invoke (on the call site) to produce the call site\u0027s target"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/WrongMethodTypeException.html\" title\u003d\"class in java.lang.invoke\"\u003eWrongMethodTypeException\u003c/a\u003e\u003c/code\u003e - if the hook cannot be invoked on the required arguments, or if the target returned by the hook is not of the given \n\u003ccode\u003etargetType\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the hook returns a null value",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the hook returns something other than a \n\u003ccode\u003eMethodHandle\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html\" title\u003d\"class in java.lang\"\u003eThrowable\u003c/a\u003e\u003c/code\u003e - anything else thrown by the hook function"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.lang.invoke.ConstantCallSite",
  "comment": "A \n\u003ccode\u003eConstantCallSite\u003c/code\u003e is a \n\u003ca href\u003d\"CallSite.html\" title\u003d\"class in java.lang.invoke\"\u003e\u003ccode\u003eCallSite\u003c/code\u003e\u003c/a\u003e whose target is permanent, and can never be changed. An \n\u003ccode\u003einvokedynamic\u003c/code\u003e instruction linked to a \n\u003ccode\u003eConstantCallSite\u003c/code\u003e is permanently bound to the call site\u0027s target.",
  "tagMap": {
    "since": [
      "1.7"
    ]
  }
}