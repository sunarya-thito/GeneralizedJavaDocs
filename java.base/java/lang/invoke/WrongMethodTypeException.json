{
  "packageName": "java.lang.invoke",
  "simpleName": "WrongMethodTypeException",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.RuntimeException",
    "type": "Class"
  },
  "members": [
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a WrongMethodTypeException with no detail message.",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "s"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a WrongMethodTypeException with the specified detail message.",
      "tagMap": {
        "param": [
          "\u003ccode\u003es\u003c/code\u003e - the detail message."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.lang.invoke.WrongMethodTypeException",
  "comment": "Thrown to indicate that code has attempted to call a method handle via the wrong method type. As with the bytecode representation of normal Java method calls, method handle calls are strongly typed to a specific type descriptor associated with a call site. \n\u003cp\u003e This exception may also be thrown when two method handles are composed, and the system detects that their types cannot be matched up correctly. This amounts to an early evaluation of the type mismatch, at method handle construction time, instead of when the mismatched method handle is called.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.lang.invoke.WrongMethodTypeException\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.7"
    ]
  }
}