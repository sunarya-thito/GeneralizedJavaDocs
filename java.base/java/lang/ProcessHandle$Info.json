{
  "packageName": "java.lang",
  "simpleName": "Info",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.Optional",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "command",
      "comment": "Returns the executable pathname of the process.",
      "tagMap": {
        "return": [
          "an \n\u003ccode\u003eOptional\u0026lt;String\u0026gt;\u003c/code\u003e of the executable pathname of the process"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Optional",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "commandLine",
      "comment": "Returns the command line of the process. If command() and arguments() return non-empty optionals, this is simply a convenience method which concatenates the values of the two functions separated by spaces. Otherwise it will return a best-effort, platform dependent representation of the command line.",
      "tagMap": {
        "apiNote": [
          "Note that the returned executable pathname and the arguments may be truncated on some platforms due to system limitations. \n\u003cp\u003e The executable pathname may contain only the name of the executable without the full path information. It is undecideable whether white space separates different arguments or is part of a single argument.\u003c/p\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eOptional\u0026lt;String\u0026gt;\u003c/code\u003e of the command line of the process"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Optional",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "arguments",
      "comment": "Returns an array of Strings of the arguments of the process.",
      "tagMap": {
        "apiNote": [
          "On some platforms, native applications are free to change the arguments array after startup and this method may only show the changed values."
        ],
        "return": [
          "an \n\u003ccode\u003eOptional\u0026lt;String[]\u0026gt;\u003c/code\u003e of the arguments of the process"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Optional",
        "parameters": [
          {
            "name": "java.time.Instant",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "startInstant",
      "comment": "Returns the start time of the process.",
      "tagMap": {
        "return": [
          "an \n\u003ccode\u003eOptional\u0026lt;Instant\u0026gt;\u003c/code\u003e of the start time of the process"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Optional",
        "parameters": [
          {
            "name": "java.time.Duration",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "totalCpuDuration",
      "comment": "Returns the total cputime accumulated of the process.",
      "tagMap": {
        "return": [
          "an \n\u003ccode\u003eOptional\u0026lt;Duration\u0026gt;\u003c/code\u003e for the accumulated total cputime"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Optional",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "user",
      "comment": "Return the user of the process.",
      "tagMap": {
        "return": [
          "an \n\u003ccode\u003eOptional\u0026lt;String\u0026gt;\u003c/code\u003e for the user of the process"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 521,
  "name": "java.lang.ProcessHandle$Info",
  "comment": "Information snapshot about the process. The attributes of a process vary by operating system and are not available in all implementations. Information about processes is limited by the operating system privileges of the process making the request. The return types are \n\u003ccode\u003eOptional\u0026lt;T\u0026gt;\u003c/code\u003e allowing explicit tests and actions if the value is available.",
  "tagMap": {
    "since": [
      "9"
    ]
  }
}