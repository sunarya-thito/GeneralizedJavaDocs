{
  "packageName": "java.lang.constant",
  "simpleName": "Constable",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.Optional",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "java.lang.constant.ConstantDesc",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "describeConstable",
      "comment": "Returns an Optional containing the nominal descriptor for this instance, if one can be constructed, or an empty Optional if one cannot be constructed.",
      "annotations": [],
      "tagMap": {
        "return": [
          "An \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Optional.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eOptional\u003c/code\u003e\u003c/a\u003e containing the resulting nominal descriptor, or an empty \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/Optional.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eOptional\u003c/code\u003e\u003c/a\u003e if one cannot be constructed."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.lang.constant.Constable",
  "comment": "Represents a type which is \n\u003cem\u003econstable\u003c/em\u003e. A constable type is one whose values are constants that can be represented in the constant pool of a Java classfile as described in JVMS 4.4, and whose instances can describe themselves nominally as a \n\u003ca href\u003d\"ConstantDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eConstantDesc\u003c/code\u003e\u003c/a\u003e. \n\u003cp\u003eSome constable types have a native representation in the constant pool: \u003ca href\u003d\"../String.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eString\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../Integer.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eInteger\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../Long.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eLong\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../Float.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eFloat\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../Double.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eDouble\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../Class.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eClass\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../invoke/MethodType.html\" title\u003d\"class in java.lang.invoke\"\u003e\u003ccode\u003eMethodType\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"../invoke/MethodHandle.html\" title\u003d\"class in java.lang.invoke\"\u003e\u003ccode\u003eMethodHandle\u003c/code\u003e\u003c/a\u003e. The types \u003ca href\u003d\"../String.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eString\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../Integer.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eInteger\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../Long.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eLong\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../Float.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eFloat\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"../Double.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eDouble\u003c/code\u003e\u003c/a\u003e serve as their own nominal descriptors; \u003ca href\u003d\"../Class.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eClass\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../invoke/MethodType.html\" title\u003d\"class in java.lang.invoke\"\u003e\u003ccode\u003eMethodType\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"../invoke/MethodHandle.html\" title\u003d\"class in java.lang.invoke\"\u003e\u003ccode\u003eMethodHandle\u003c/code\u003e\u003c/a\u003e have corresponding nominal descriptors \u003ca href\u003d\"ClassDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eClassDesc\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"MethodTypeDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eMethodTypeDesc\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"MethodHandleDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eMethodHandleDesc\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003eOther reference types can be constable if their instances can describe themselves in nominal form as a \u003ca href\u003d\"ConstantDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eConstantDesc\u003c/code\u003e\u003c/a\u003e. Examples in the Java SE Platform API are types that support Java language features such as \u003ca href\u003d\"../Enum.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eEnum\u003c/code\u003e\u003c/a\u003e, and runtime support classes such as \u003ca href\u003d\"../invoke/VarHandle.html\" title\u003d\"class in java.lang.invoke\"\u003e\u003ccode\u003eVarHandle\u003c/code\u003e\u003c/a\u003e. These are typically described with a \u003ca href\u003d\"DynamicConstantDesc.html\" title\u003d\"class in java.lang.constant\"\u003e\u003ccode\u003eDynamicConstantDesc\u003c/code\u003e\u003c/a\u003e, which describes dynamically generated constants (JVMS 4.4.10). \u003c/p\u003e\n\u003cp\u003eThe nominal form of an instance of a constable type is obtained via \u003ca href\u003d\"#describeConstable()\"\u003e\u003ccode\u003edescribeConstable()\u003c/code\u003e\u003c/a\u003e. A \u003ca href\u003d\"Constable.html\" title\u003d\"interface in java.lang.constant\"\u003eConstable\u003c/a\u003e need not be able to (or may choose not to) describe all its instances in the form of a \u003ca href\u003d\"ConstantDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eConstantDesc\u003c/code\u003e\u003c/a\u003e; this method returns an \u003ca href\u003d\"../../util/Optional.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eOptional\u003c/code\u003e\u003c/a\u003e that can be empty to indicate that a nominal descriptor could not be created for an instance. (For example, \u003ca href\u003d\"../invoke/MethodHandle.html\" title\u003d\"class in java.lang.invoke\"\u003e\u003ccode\u003eMethodHandle\u003c/code\u003e\u003c/a\u003e will produce nominal descriptors for direct method handles, but not necessarily those produced by method handle combinators.)\u003c/p\u003e",
  "tagMap": {
    "See Java Virtual Machine Specification:": [
      "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-4.html#jls-4.4\"\u003e4.4 The Constant Pool\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-4.html#jls-4.4.10\"\u003e4.4.10 The \u003ccode\u003eCONSTANT_Dynamic_info\u003c/code\u003e and \u003ccode\u003eCONSTANT_InvokeDynamic_info\u003c/code\u003e Structures\u003c/a\u003e\n\u003cbr\u003e"
    ],
    "since": [
      "12"
    ]
  }
}