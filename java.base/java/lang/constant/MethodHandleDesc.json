{
  "packageName": "java.lang.constant",
  "simpleName": "MethodHandleDesc",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.constant.ConstantDesc",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.constant.DirectMethodHandleDesc",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.constant.DirectMethodHandleDesc$Kind",
            "type": "Class"
          },
          "field": {
            "name": "kind"
          }
        },
        {
          "type": {
            "name": "java.lang.constant.ClassDesc",
            "type": "Class"
          },
          "field": {
            "name": "owner"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "lookupDescriptor"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "of",
      "comment": "Creates a MethodHandleDesc corresponding to an invocation of a declared method, invocation of a constructor, or access to a field. The lookup descriptor string has the same format as for the various variants of CONSTANT_MethodHandle_info and for the lookup methods on MethodHandles.Lookup. For a method or constructor invocation, it is interpreted as a method type descriptor; for field access, it is interpreted as a field descriptor. If kind is CONSTRUCTOR, the name parameter is ignored and the return type of the lookup descriptor must be void. If kind corresponds to a virtual method invocation, the lookup type includes the method parameters but not the receiver type.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekind\u003c/code\u003e - The kind of method handle to be described",
          "\u003ccode\u003eowner\u003c/code\u003e - a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/ClassDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eClassDesc\u003c/code\u003e\u003c/a\u003e describing the class containing the method, constructor, or field",
          "\u003ccode\u003ename\u003c/code\u003e - the unqualified name of the method or field (ignored if \n\u003ccode\u003ekind\u003c/code\u003e is \n\u003ccode\u003eCONSTRUCTOR\u003c/code\u003e)",
          "\u003ccode\u003elookupDescriptor\u003c/code\u003e - a method descriptor string the lookup type, if the request is for a method invocation, or describing the invocation type, if the request is for a field or constructor"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any of the non-ignored arguments are null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the descriptor string is not a valid method or field descriptor"
        ],
        "See Java Virtual Machine Specification:": [
          "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-4.html#jls-4.4.8\"\u003e4.4.8 The CONSTANT_MethodHandle_info Structure\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-4.html#jls-4.2.2\"\u003e4.2.2 Unqualified Names\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-4.html#jls-4.3.2\"\u003e4.3.2 Field Descriptors\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-4.html#jls-4.3.3\"\u003e4.3.3 Method Descriptors\u003c/a\u003e\n\u003cbr\u003e"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/MethodHandleDesc.html\" title\u003d\"interface in java.lang.constant\"\u003eMethodHandleDesc\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.constant.DirectMethodHandleDesc",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.constant.DirectMethodHandleDesc$Kind",
            "type": "Class"
          },
          "field": {
            "name": "kind"
          }
        },
        {
          "type": {
            "name": "java.lang.constant.ClassDesc",
            "type": "Class"
          },
          "field": {
            "name": "owner"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "java.lang.constant.MethodTypeDesc",
            "type": "Class"
          },
          "field": {
            "name": "lookupMethodType"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "ofMethod",
      "comment": "Creates a MethodHandleDesc corresponding to an invocation of a declared method or constructor. The lookup descriptor string has the same format as for the lookup methods on MethodHandles.Lookup. If kind is CONSTRUCTOR, the name is ignored and the return type of the lookup type must be void. If kind corresponds to a virtual method invocation, the lookup type includes the method parameters but not the receiver type.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekind\u003c/code\u003e - The kind of method handle to be described; must be one of \n\u003ccode\u003eSPECIAL, VIRTUAL, STATIC, INTERFACE_SPECIAL, INTERFACE_VIRTUAL, INTERFACE_STATIC, CONSTRUCTOR\u003c/code\u003e",
          "\u003ccode\u003eowner\u003c/code\u003e - a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/ClassDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eClassDesc\u003c/code\u003e\u003c/a\u003e describing the class containing the method or constructor",
          "\u003ccode\u003ename\u003c/code\u003e - the unqualified name of the method (ignored if \n\u003ccode\u003ekind\u003c/code\u003e is \n\u003ccode\u003eCONSTRUCTOR\u003c/code\u003e)",
          "\u003ccode\u003elookupMethodType\u003c/code\u003e - a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/MethodTypeDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eMethodTypeDesc\u003c/code\u003e\u003c/a\u003e describing the lookup type"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any non-ignored arguments are null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003ename\u003c/code\u003e has the incorrect format, or the kind is invalid"
        ],
        "See Java Virtual Machine Specification:": [
          "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-4.html#jls-4.2.2\"\u003e4.2.2 Unqualified Names\u003c/a\u003e\n\u003cbr\u003e"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/MethodHandleDesc.html\" title\u003d\"interface in java.lang.constant\"\u003eMethodHandleDesc\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.constant.DirectMethodHandleDesc",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.constant.DirectMethodHandleDesc$Kind",
            "type": "Class"
          },
          "field": {
            "name": "kind"
          }
        },
        {
          "type": {
            "name": "java.lang.constant.ClassDesc",
            "type": "Class"
          },
          "field": {
            "name": "owner"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "fieldName"
          }
        },
        {
          "type": {
            "name": "java.lang.constant.ClassDesc",
            "type": "Class"
          },
          "field": {
            "name": "fieldType"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "ofField",
      "comment": "Creates a MethodHandleDesc corresponding to a method handle that accesses a field.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekind\u003c/code\u003e - the kind of the method handle to be described; must be one of \n\u003ccode\u003eGETTER\u003c/code\u003e, \n\u003ccode\u003eSETTER\u003c/code\u003e, \n\u003ccode\u003eSTATIC_GETTER\u003c/code\u003e, or \n\u003ccode\u003eSTATIC_SETTER\u003c/code\u003e",
          "\u003ccode\u003eowner\u003c/code\u003e - a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/ClassDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eClassDesc\u003c/code\u003e\u003c/a\u003e describing the class containing the field",
          "\u003ccode\u003efieldName\u003c/code\u003e - the unqualified name of the field",
          "\u003ccode\u003efieldType\u003c/code\u003e - a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/ClassDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eClassDesc\u003c/code\u003e\u003c/a\u003e describing the type of the field"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any of the arguments are null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003ekind\u003c/code\u003e is not one of the valid values or if the field name is not valid"
        ],
        "See Java Virtual Machine Specification:": [
          "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-4.html#jls-4.2.2\"\u003e4.2.2 Unqualified Names\u003c/a\u003e\n\u003cbr\u003e"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/MethodHandleDesc.html\" title\u003d\"interface in java.lang.constant\"\u003eMethodHandleDesc\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.constant.DirectMethodHandleDesc",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.constant.ClassDesc",
            "type": "Class"
          },
          "field": {
            "name": "owner"
          }
        },
        {
          "type": {
            "name": "java.lang.constant.ClassDesc",
            "type": "Class"
          },
          "field": {
            "name": "paramTypes"
          },
          "varArgs": {}
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 8,
      "name": "ofConstructor",
      "comment": "Returns a MethodHandleDesc corresponding to invocation of a constructor",
      "tagMap": {
        "param": [
          "\u003ccode\u003eowner\u003c/code\u003e - a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/ClassDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eClassDesc\u003c/code\u003e\u003c/a\u003e describing the class containing the constructor",
          "\u003ccode\u003eparamTypes\u003c/code\u003e - \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/ClassDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eClassDesc\u003c/code\u003e\u003c/a\u003es describing the parameter types of the constructor"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if any argument or its contents is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/MethodHandleDesc.html\" title\u003d\"interface in java.lang.constant\"\u003eMethodHandleDesc\u003c/a\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.constant.MethodHandleDesc",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.constant.MethodTypeDesc",
            "type": "Class"
          },
          "field": {
            "name": "type"
          }
        }
      ],
      "isDefaultMethod": true,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "asType",
      "comment": "Returns a MethodHandleDesc that describes this method handle adapted to a different type, as if by MethodHandle.asType(MethodType).",
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/MethodHandleDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eMethodHandleDesc\u003c/code\u003e\u003c/a\u003e describing the new method type"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the argument is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/MethodHandleDesc.html\" title\u003d\"interface in java.lang.constant\"\u003eMethodHandleDesc\u003c/a\u003e for the adapted method handle"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.constant.MethodTypeDesc",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "invocationType",
      "comment": "Returns a MethodTypeDesc describing the invocation type of the method handle described by this nominal descriptor. The invocation type describes the full set of stack values that are consumed by the invocation (including the receiver, if any).",
      "tagMap": {
        "return": [
          "a \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/MethodHandleDesc.html\" title\u003d\"interface in java.lang.constant\"\u003eMethodHandleDesc\u003c/a\u003e describing the method handle type"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "o"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "equals",
      "comment": "Compares the specified object with this descriptor for equality. Returns true if and only if the specified object is also a MethodHandleDesc, and both encode the same nominal description of a method handle.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eo\u003c/code\u003e - the other object"
        ],
        "return": [
          "whether this descriptor is equal to the other object"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.lang.constant.MethodHandleDesc",
  "comment": "A \n\u003ca href\u003d\"package-summary.html#nominal\"\u003enominal descriptor\u003c/a\u003e for a \n\u003ca href\u003d\"../invoke/MethodHandle.html\" title\u003d\"class in java.lang.invoke\"\u003e\u003ccode\u003eMethodHandle\u003c/code\u003e\u003c/a\u003e constant.",
  "tagMap": {
    "apiNote": [
      "In the future, if the Java language permits, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/MethodHandleDesc.html\" title\u003d\"interface in java.lang.constant\"\u003eMethodHandleDesc\u003c/a\u003e may become a \n\u003ccode\u003esealed\u003c/code\u003e interface, which would prohibit subclassing except by explicitly permitted types. Non-platform classes should not implement \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/MethodHandleDesc.html\" title\u003d\"interface in java.lang.constant\"\u003eMethodHandleDesc\u003c/a\u003e directly."
    ],
    "since": [
      "12"
    ]
  }
}