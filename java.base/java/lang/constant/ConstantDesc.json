{
  "packageName": "java.lang.constant",
  "simpleName": "ConstantDesc",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.lang.ReflectiveOperationException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.invoke.MethodHandles$Lookup",
            "type": "Class"
          },
          "field": {
            "name": "lookup"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "resolveConstantDesc",
      "comment": "Resolves this descriptor reflectively, emulating the resolution behavior of JVMS 5.4.3 and the access control behavior of JVMS 5.4.4. The resolution and access control context is provided by the MethodHandles.Lookup parameter. No caching of the resulting value is performed.",
      "tagMap": {
        "apiNote": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/MethodTypeDesc.html\" title\u003d\"interface in java.lang.constant\"\u003eMethodTypeDesc\u003c/a\u003e can represent method type descriptors that are not representable by \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/MethodType.html\" title\u003d\"class in java.lang.invoke\"\u003eMethodType\u003c/a\u003e, such as methods with more than 255 parameter slots, so attempts to resolve these may result in errors."
        ],
        "param": [
          "\u003ccode\u003elookup\u003c/code\u003e - The \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/invoke/MethodHandles.Lookup.html\" title\u003d\"class in java.lang.invoke\"\u003e\u003ccode\u003eMethodHandles.Lookup\u003c/code\u003e\u003c/a\u003e to provide name resolution and access control context"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ReflectiveOperationException.html\" title\u003d\"class in java.lang\"\u003eReflectiveOperationException\u003c/a\u003e\u003c/code\u003e - if a class, method, or field could not be reflectively resolved in the course of resolution",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/LinkageError.html\" title\u003d\"class in java.lang\"\u003eLinkageError\u003c/a\u003e\u003c/code\u003e - if a linkage error occurs"
        ],
        "See Java Virtual Machine Specification:": [
          "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-5.html#jls-5.4.3\"\u003e5.4.3 Resolution\u003c/a\u003e\n\u003cbr\u003e\n\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-5.html#jls-5.4.4\"\u003e5.4.4 Access Control\u003c/a\u003e\n\u003cbr\u003e"
        ],
        "return": [
          "the resolved constant value"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.lang.constant.ConstantDesc",
  "comment": "A \n\u003ca href\u003d\"package-summary.html#nominal\"\u003enominal descriptor\u003c/a\u003e for a loadable constant value, as defined in JVMS 4.4. Such a descriptor can be resolved via \n\u003ca href\u003d\"#resolveConstantDesc(java.lang.invoke.MethodHandles.Lookup)\"\u003e\u003ccode\u003eresolveConstantDesc(MethodHandles.Lookup)\u003c/code\u003e\u003c/a\u003e to yield the constant value itself. \n\u003cp\u003eClass names in a nominal descriptor, like class names in the constant pool of a classfile, must be interpreted with respect to a particular class loader, which is not part of the nominal descriptor. \u003c/p\u003e\n\u003cp\u003eStatic constants that are expressible natively in the constant pool (\u003ca href\u003d\"../String.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eString\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../Integer.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eInteger\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../Long.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eLong\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../Float.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eFloat\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"../Double.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eDouble\u003c/code\u003e\u003c/a\u003e) implement \u003ca href\u003d\"ConstantDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eConstantDesc\u003c/code\u003e\u003c/a\u003e, and serve as nominal descriptors for themselves. Native linkable constants (\u003ca href\u003d\"../Class.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eClass\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../invoke/MethodType.html\" title\u003d\"class in java.lang.invoke\"\u003e\u003ccode\u003eMethodType\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"../invoke/MethodHandle.html\" title\u003d\"class in java.lang.invoke\"\u003e\u003ccode\u003eMethodHandle\u003c/code\u003e\u003c/a\u003e) have counterpart \u003ca href\u003d\"ConstantDesc.html\" title\u003d\"interface in java.lang.constant\"\u003eConstantDesc\u003c/a\u003e types: \u003ca href\u003d\"ClassDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eClassDesc\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"MethodTypeDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eMethodTypeDesc\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"MethodHandleDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eMethodHandleDesc\u003c/code\u003e\u003c/a\u003e. Other constants are represented by subtypes of \u003ca href\u003d\"DynamicConstantDesc.html\" title\u003d\"class in java.lang.constant\"\u003e\u003ccode\u003eDynamicConstantDesc\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003eAPIs that perform generation or parsing of bytecode are encouraged to use \u003ca href\u003d\"ConstantDesc.html\" title\u003d\"interface in java.lang.constant\"\u003eConstantDesc\u003c/a\u003e to describe the operand of an \u003ccode\u003eldc\u003c/code\u003e instruction (including dynamic constants), the static bootstrap arguments of dynamic constants and \u003ccode\u003einvokedynamic\u003c/code\u003e instructions, and other bytecodes or classfile structures that make use of the constant pool. \u003c/p\u003e\n\u003cp\u003eConstants describing various common constants (such as \u003ca href\u003d\"ClassDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eClassDesc\u003c/code\u003e\u003c/a\u003e instances for platform types) can be found in \u003ca href\u003d\"ConstantDescs.html\" title\u003d\"class in java.lang.constant\"\u003e\u003ccode\u003eConstantDescs\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003eImplementations of \u003ca href\u003d\"ConstantDesc.html\" title\u003d\"interface in java.lang.constant\"\u003eConstantDesc\u003c/a\u003e should be immutable and their behavior should not rely on object identity. \u003c/p\u003e\n\u003cp\u003eNon-platform classes should not implement \u003ca href\u003d\"ConstantDesc.html\" title\u003d\"interface in java.lang.constant\"\u003eConstantDesc\u003c/a\u003e directly. Instead, they should extend \u003ca href\u003d\"DynamicConstantDesc.html\" title\u003d\"class in java.lang.constant\"\u003e\u003ccode\u003eDynamicConstantDesc\u003c/code\u003e\u003c/a\u003e (as \u003ca href\u003d\"../Enum.EnumDesc.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eEnum.EnumDesc\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"../invoke/VarHandle.VarHandleDesc.html\" title\u003d\"class in java.lang.invoke\"\u003e\u003ccode\u003eVarHandle.VarHandleDesc\u003c/code\u003e\u003c/a\u003e do.) \u003c/p\u003e\n\u003cp\u003eNominal descriptors should be compared using the \u003ca href\u003d\"../Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(Object)\u003c/code\u003e\u003c/a\u003e method. There is no guarantee that any particular entity will always be represented by the same descriptor instance.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/Constable.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eConstable\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/ConstantDescs.html\" title\u003d\"class in java.lang.constant\"\u003e\u003ccode\u003eConstantDescs\u003c/code\u003e\u003c/a\u003e"
    ],
    "apiNote": [
      "In the future, if the Java language permits, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/ConstantDesc.html\" title\u003d\"interface in java.lang.constant\"\u003eConstantDesc\u003c/a\u003e may become a \n\u003ccode\u003esealed\u003c/code\u003e interface, which would prohibit subclassing except by explicitly permitted types. Clients can assume that the following set of subtypes is exhaustive: \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/String.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eString\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Integer.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eInteger\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Long.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eLong\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Float.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eFloat\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Double.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eDouble\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/ClassDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eClassDesc\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/MethodTypeDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eMethodTypeDesc\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/MethodHandleDesc.html\" title\u003d\"interface in java.lang.constant\"\u003e\u003ccode\u003eMethodHandleDesc\u003c/code\u003e\u003c/a\u003e, and \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/constant/DynamicConstantDesc.html\" title\u003d\"class in java.lang.constant\"\u003e\u003ccode\u003eDynamicConstantDesc\u003c/code\u003e\u003c/a\u003e; this list may be extended to reflect future changes to the constant pool format as defined in JVMS 4.4."
    ],
    "See Java Virtual Machine Specification:": [
      "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-4.html#jls-4.4\"\u003e4.4 The Constant Pool\u003c/a\u003e\n\u003cbr\u003e"
    ],
    "since": [
      "12"
    ]
  }
}