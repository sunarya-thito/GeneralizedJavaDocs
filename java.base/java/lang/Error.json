{
  "packageName": "java.lang",
  "simpleName": "Error",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Throwable",
    "type": "Class"
  },
  "members": [
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new error with null as its detail message. The cause is not initialized, and may subsequently be initialized by a call to Throwable.initCause(java.lang.Throwable).",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new error with the specified detail message. The cause is not initialized, and may subsequently be initialized by a call to Throwable.initCause(java.lang.Throwable).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - the detail message. The detail message is saved for later retrieval by the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html#getMessage()\"\u003e\u003ccode\u003eThrowable.getMessage()\u003c/code\u003e\u003c/a\u003e method."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Throwable",
            "type": "Class"
          },
          "name": "cause",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new error with the specified detail message and cause. Note that the detail message associated with cause is not automatically incorporated in this error\u0027s detail message.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - the detail message (which is saved for later retrieval by the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html#getMessage()\"\u003e\u003ccode\u003eThrowable.getMessage()\u003c/code\u003e\u003c/a\u003e method).",
          "\u003ccode\u003ecause\u003c/code\u003e - the cause (which is saved for later retrieval by the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html#getCause()\"\u003e\u003ccode\u003eThrowable.getCause()\u003c/code\u003e\u003c/a\u003e method). (A \n\u003ccode\u003enull\u003c/code\u003e value is permitted, and indicates that the cause is nonexistent or unknown.)"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Throwable",
            "type": "Class"
          },
          "name": "cause",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new error with the specified cause and a detail message of (cause\u003d\u003dnull ? null : cause.toString()) (which typically contains the class and detail message of cause). This constructor is useful for errors that are little more than wrappers for other throwables.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecause\u003c/code\u003e - the cause (which is saved for later retrieval by the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html#getCause()\"\u003e\u003ccode\u003eThrowable.getCause()\u003c/code\u003e\u003c/a\u003e method). (A \n\u003ccode\u003enull\u003c/code\u003e value is permitted, and indicates that the cause is nonexistent or unknown.)"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "message",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Throwable",
            "type": "Class"
          },
          "name": "cause",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "enableSuppression",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "writableStackTrace",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a new error with the specified detail message, cause, suppression enabled or disabled, and writable stack trace enabled or disabled.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emessage\u003c/code\u003e - the detail message.",
          "\u003ccode\u003ecause\u003c/code\u003e - the cause. (A \n\u003ccode\u003enull\u003c/code\u003e value is permitted, and indicates that the cause is nonexistent or unknown.)",
          "\u003ccode\u003eenableSuppression\u003c/code\u003e - whether or not suppression is enabled or disabled",
          "\u003ccode\u003ewritableStackTrace\u003c/code\u003e - whether or not the stack trace should be writable"
        ],
        "since": [
          "1.7"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.lang.Error",
  "comment": "An \n\u003ccode\u003eError\u003c/code\u003e is a subclass of \n\u003ccode\u003eThrowable\u003c/code\u003e that indicates serious problems that a reasonable application should not try to catch. Most such errors are abnormal conditions. The \n\u003ccode\u003eThreadDeath\u003c/code\u003e error, though a \"normal\" condition, is also a subclass of \n\u003ccode\u003eError\u003c/code\u003e because most applications should not try to catch it. \n\u003cp\u003e A method is not required to declare in its \u003ccode\u003ethrows\u003c/code\u003e clause any subclasses of \u003ccode\u003eError\u003c/code\u003e that might be thrown during the execution of the method but not caught, since these errors are abnormal conditions that should never occur. That is, \u003ccode\u003eError\u003c/code\u003e and its subclasses are regarded as unchecked exceptions for the purposes of compile-time checking of exceptions.\u003c/p\u003e",
  "tagMap": {
    "See Java Language Specification:": [
      "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-11.html#jls-11.2\"\u003e11.2 Compile-Time Checking of Exceptions\u003c/a\u003e\n\u003cbr\u003e"
    ],
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ThreadDeath.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eThreadDeath\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.lang.Error\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.0"
    ]
  }
}