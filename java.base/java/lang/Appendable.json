{
  "packageName": "java.lang",
  "simpleName": "Appendable",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Appendable",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "append",
      "comment": "Appends the specified character sequence to this Appendable. Depending on which class implements the character sequence csq, the entire sequence may not be appended. For instance, if csq is a CharBuffer then the subsequence to append is defined by the buffer\u0027s position and limit.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecsq\u003c/code\u003e - The character sequence to append. If \n\u003ccode\u003ecsq\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, then the four characters \n\u003ccode\u003e\"null\"\u003c/code\u003e are appended to this Appendable."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "A reference to this \n\u003ccode\u003eAppendable\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Appendable",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "append",
      "comment": "Appends a subsequence of the specified character sequence to this Appendable. An invocation of this method of the form out.append(csq, start, end) when csq is not null, behaves in exactly the same way as the invocation      out.append(csq.subSequence(start, end))",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecsq\u003c/code\u003e - The character sequence from which a subsequence will be appended. If \n\u003ccode\u003ecsq\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e, then characters will be appended as if \n\u003ccode\u003ecsq\u003c/code\u003e contained the four characters \n\u003ccode\u003e\"null\"\u003c/code\u003e.",
          "\u003ccode\u003estart\u003c/code\u003e - The index of the first character in the subsequence",
          "\u003ccode\u003eend\u003c/code\u003e - The index of the character following the last character in the subsequence"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003estart\u003c/code\u003e or \n\u003ccode\u003eend\u003c/code\u003e are negative, \n\u003ccode\u003estart\u003c/code\u003e is greater than \n\u003ccode\u003eend\u003c/code\u003e, or \n\u003ccode\u003eend\u003c/code\u003e is greater than \n\u003ccode\u003ecsq.length()\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "A reference to this \n\u003ccode\u003eAppendable\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Appendable",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "append",
      "comment": "Appends the specified character to this Appendable.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ec\u003c/code\u003e - The character to append"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "A reference to this \n\u003ccode\u003eAppendable\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.lang.Appendable",
  "comment": "An object to which \n\u003ccode\u003echar\u003c/code\u003e sequences and values can be appended. The \n\u003ccode\u003eAppendable\u003c/code\u003e interface must be implemented by any class whose instances are intended to receive formatted output from a \n\u003ca href\u003d\"../util/Formatter.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eFormatter\u003c/code\u003e\u003c/a\u003e. \n\u003cp\u003e The characters to be appended should be valid Unicode characters as described in \u003ca href\u003d\"Character.html#unicode\"\u003eUnicode Character Representation\u003c/a\u003e. Note that supplementary characters may be composed of multiple 16-bit \u003ccode\u003echar\u003c/code\u003e values. \u003c/p\u003e\n\u003cp\u003e Appendables are not necessarily safe for multithreaded access. Thread safety is the responsibility of classes that extend and implement this interface. \u003c/p\u003e\n\u003cp\u003e Since this interface may be implemented by existing classes with different styles of error handling there is no guarantee that errors will be propagated to the invoker.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}