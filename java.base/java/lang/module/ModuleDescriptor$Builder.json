{
  "packageName": "java.lang.module",
  "simpleName": "Builder",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.module.ModuleDescriptor$Requires",
            "type": "Class"
          },
          "field": {
            "name": "req"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "requires",
      "comment": "Adds a dependence on a module.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ereq\u003c/code\u003e - The dependence"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the dependence is on the module that this builder was initialized to build",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the dependence on the module has already been declared or this builder is for an automatic module"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.lang.module.ModuleDescriptor$Requires$Modifier",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "ms"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "mn"
          }
        },
        {
          "type": {
            "name": "java.lang.module.ModuleDescriptor$Version",
            "type": "Class"
          },
          "field": {
            "name": "compiledVersion"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "requires",
      "comment": "Adds a dependence on a module with the given (and possibly empty) set of modifiers. The dependence includes the version of the module that was recorded at compile-time.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ems\u003c/code\u003e - The set of modifiers",
          "\u003ccode\u003emn\u003c/code\u003e - The module name",
          "\u003ccode\u003ecompiledVersion\u003c/code\u003e - The version of the module recorded at compile-time"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the module name is \n\u003ccode\u003enull\u003c/code\u003e, is not a legal module name, or is equal to the module name that this builder was initialized to build",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the dependence on the module has already been declared or this builder is for an automatic module"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.lang.module.ModuleDescriptor$Requires$Modifier",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "ms"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "mn"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "requires",
      "comment": "Adds a dependence on a module with the given (and possibly empty) set of modifiers.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ems\u003c/code\u003e - The set of modifiers",
          "\u003ccode\u003emn\u003c/code\u003e - The module name"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the module name is \n\u003ccode\u003enull\u003c/code\u003e, is not a legal module name, or is equal to the module name that this builder was initialized to build",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the dependence on the module has already been declared or this builder is for an automatic module"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "mn"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "requires",
      "comment": "Adds a dependence on a module with an empty set of modifiers.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emn\u003c/code\u003e - The module name"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the module name is \n\u003ccode\u003enull\u003c/code\u003e, is not a legal module name, or is equal to the module name that this builder was initialized to build",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the dependence on the module has already been declared or this builder is for an automatic module"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.module.ModuleDescriptor$Exports",
            "type": "Class"
          },
          "field": {
            "name": "e"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "exports",
      "comment": "Adds an exported package.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ee\u003c/code\u003e - The export"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/module/ModuleDescriptor.Exports.html#source()\"\u003e\u003ccode\u003epackage\u003c/code\u003e\u003c/a\u003e is already declared as exported or this builder is for an automatic module"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.lang.module.ModuleDescriptor$Exports$Modifier",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "ms"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "pn"
          }
        },
        {
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "targets"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "exports",
      "comment": "Adds an exported package with the given (and possibly empty) set of modifiers. The package is exported to a set of target modules.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ems\u003c/code\u003e - The set of modifiers",
          "\u003ccode\u003epn\u003c/code\u003e - The package name",
          "\u003ccode\u003etargets\u003c/code\u003e - The set of target modules names"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the package name is \n\u003ccode\u003enull\u003c/code\u003e or is not a legal package name, the set of target modules is empty, or the set of target modules contains a name that is not a legal module name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the package is already declared as exported or this builder is for an automatic module"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.lang.module.ModuleDescriptor$Exports$Modifier",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "ms"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "pn"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "exports",
      "comment": "Adds an exported package with the given (and possibly empty) set of modifiers. The package is exported to all modules.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ems\u003c/code\u003e - The set of modifiers",
          "\u003ccode\u003epn\u003c/code\u003e - The package name"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the package name is \n\u003ccode\u003enull\u003c/code\u003e or is not a legal package name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the package is already declared as exported or this builder is for an automatic module"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "pn"
          }
        },
        {
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "targets"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "exports",
      "comment": "Adds an exported package. The package is exported to a set of target modules.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epn\u003c/code\u003e - The package name",
          "\u003ccode\u003etargets\u003c/code\u003e - The set of target modules names"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the package name is \n\u003ccode\u003enull\u003c/code\u003e or is not a legal package name, the set of target modules is empty, or the set of target modules contains a name that is not a legal module name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the package is already declared as exported or this builder is for an automatic module"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "pn"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "exports",
      "comment": "Adds an exported package. The package is exported to all modules.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epn\u003c/code\u003e - The package name"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the package name is \n\u003ccode\u003enull\u003c/code\u003e or is not a legal package name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the package is already declared as exported or this builder is for an automatic module"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.module.ModuleDescriptor$Opens",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "opens",
      "comment": "Adds an open package.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - The \n\u003ccode\u003eOpens\u003c/code\u003e object"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the package is already declared as open, or this is a builder for an open module or automatic module"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.lang.module.ModuleDescriptor$Opens$Modifier",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "ms"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "pn"
          }
        },
        {
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "targets"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "opens",
      "comment": "Adds an open package with the given (and possibly empty) set of modifiers. The package is open to a set of target modules.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ems\u003c/code\u003e - The set of modifiers",
          "\u003ccode\u003epn\u003c/code\u003e - The package name",
          "\u003ccode\u003etargets\u003c/code\u003e - The set of target modules names"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the package name is \n\u003ccode\u003enull\u003c/code\u003e or is not a legal package name, the set of target modules is empty, or the set of target modules contains a name that is not a legal module name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the package is already declared as open, or this is a builder for an open module or automatic module"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.lang.module.ModuleDescriptor$Opens$Modifier",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "ms"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "pn"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "opens",
      "comment": "Adds an open package with the given (and possibly empty) set of modifiers. The package is open to all modules.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ems\u003c/code\u003e - The set of modifiers",
          "\u003ccode\u003epn\u003c/code\u003e - The package name"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the package name is \n\u003ccode\u003enull\u003c/code\u003e or is not a legal package name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the package is already declared as open, or this is a builder for an open module or automatic module"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "pn"
          }
        },
        {
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "targets"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "opens",
      "comment": "Adds an open package. The package is open to a set of target modules.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epn\u003c/code\u003e - The package name",
          "\u003ccode\u003etargets\u003c/code\u003e - The set of target modules names"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the package name is \n\u003ccode\u003enull\u003c/code\u003e or is not a legal package name, the set of target modules is empty, or the set of target modules contains a name that is not a legal module name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the package is already declared as open, or this is a builder for an open module or automatic module"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "pn"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "opens",
      "comment": "Adds an open package. The package is open to all modules.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epn\u003c/code\u003e - The package name"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the package name is \n\u003ccode\u003enull\u003c/code\u003e or is not a legal package name",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the package is already declared as open, or this is a builder for an open module or automatic module"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "service"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "uses",
      "comment": "Adds a service dependence.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eservice\u003c/code\u003e - The service type"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the service type is \n\u003ccode\u003enull\u003c/code\u003e or not a qualified name of a class in a named package",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If a dependency on the service type has already been declared or this is a builder for an automatic module"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.module.ModuleDescriptor$Provides",
            "type": "Class"
          },
          "field": {
            "name": "p"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "provides",
      "comment": "Provides a service with one or more implementations. The package for each provider (or provider factory) is added to the module if not already added.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ep\u003c/code\u003e - The provides"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the providers for the service type have already been declared"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "service"
          }
        },
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "providers"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "provides",
      "comment": "Provides implementations of a service. The package for each provider (or provider factory) is added to the module if not already added.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eservice\u003c/code\u003e - The service type",
          "\u003ccode\u003eproviders\u003c/code\u003e - The list of provider or provider factory class names"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the service type or any of the provider class names is \n\u003ccode\u003enull\u003c/code\u003e or not a qualified name of a class in a named package, or the list of provider class names is empty",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - If the providers for the service type have already been declared"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "pns"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "packages",
      "comment": "Adds packages to the module. All packages in the set of package names that are not in the module are added to module.",
      "tagMap": {
        "param": [
          "\u003ccode\u003epns\u003c/code\u003e - The (possibly empty) set of package names"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If any of the package names is \n\u003ccode\u003enull\u003c/code\u003e or is not a legal package name"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.module.ModuleDescriptor$Version",
            "type": "Class"
          },
          "field": {
            "name": "v"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "version",
      "comment": "Sets the module version.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ev\u003c/code\u003e - The version"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "vs"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "version",
      "comment": "Sets the module version.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/module/ModuleDescriptor.Version.html#parse(java.lang.String)\"\u003e\u003ccode\u003eModuleDescriptor.Version.parse(String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003evs\u003c/code\u003e - The version string to parse"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003evs\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or cannot be parsed as a version string"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "mc"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "mainClass",
      "comment": "Sets the module main class. The package for the main class is added to the module if not already added. In other words, this method is equivalent to first invoking this builder\u0027s packages method to add the package name of the main class.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emc\u003c/code\u003e - The module main class"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If \n\u003ccode\u003emainClass\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e or not a qualified name of a class in a named package"
        ],
        "return": [
          "This builder"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.module.ModuleDescriptor",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "build",
      "comment": "Builds and returns a ModuleDescriptor from its components. The module will require \"java.base\" even if the dependence has not been declared (the exception is when building a module named \"java.base\" as it cannot require itself). The dependence on \"java.base\" will have the MANDATED modifier if the dependence was not declared.",
      "tagMap": {
        "return": [
          "The module descriptor"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 25,
  "name": "java.lang.module.ModuleDescriptor$Builder",
  "comment": "A builder for building \n\u003ca href\u003d\"ModuleDescriptor.html\" title\u003d\"class in java.lang.module\"\u003e\u003ccode\u003eModuleDescriptor\u003c/code\u003e\u003c/a\u003e objects. \n\u003cp\u003e \u003ccode\u003eModuleDescriptor\u003c/code\u003e defines the \u003ca href\u003d\"ModuleDescriptor.html#newModule(java.lang.String,java.util.Set)\"\u003e\u003ccode\u003enewModule\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"ModuleDescriptor.html#newOpenModule(java.lang.String)\"\u003e\u003ccode\u003enewOpenModule\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"ModuleDescriptor.html#newAutomaticModule(java.lang.String)\"\u003e\u003ccode\u003enewAutomaticModule\u003c/code\u003e\u003c/a\u003e methods to create builders for building \u003cem\u003enormal\u003c/em\u003e, open, and automatic modules. \u003c/p\u003e \n\u003cp\u003e The set of packages in the module are accumulated by the \u003ccode\u003e Builder\u003c/code\u003e as the \u003ca href\u003d\"#exports(java.lang.String)\"\u003e\u003ccode\u003eexports\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#opens(java.lang.String)\"\u003e\u003ccode\u003eopens\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#packages(java.util.Set)\"\u003e\u003ccode\u003epackages\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#provides(java.lang.String,java.util.List)\"\u003e\u003ccode\u003eprovides\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"#mainClass(java.lang.String)\"\u003e\u003ccode\u003emainClass\u003c/code\u003e\u003c/a\u003e methods are invoked. \u003c/p\u003e \n\u003cp\u003e The module names, package names, and class names that are parameters specified to the builder methods are the module names, package names, and qualified names of classes (in named packages) as defined in the \u003ccite\u003eThe Java Language Specification\u003c/cite\u003e. \u003c/p\u003e \n\u003cp\u003e Example usage: \u003c/p\u003e \n\u003cpre\u003e\u003ccode\u003e   ModuleDescriptor descriptor \u003d ModuleDescriptor.newModule(\"stats.core\")\n         .requires(\"java.base\")\n         .exports(\"org.acme.stats.core.clustering\")\n         .exports(\"org.acme.stats.core.regression\")\n         .packages(Set.of(\"org.acme.stats.core.internal\"))\n         .build();\n \u003c/code\u003e\u003c/pre\u003e",
  "tagMap": {
    "apiNote": [
      "A \n\u003ccode\u003eBuilder\u003c/code\u003e checks the components and invariants as components are added to the builder. The rationale for this is to detect errors as early as possible and not defer all validation to the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/module/ModuleDescriptor.Builder.html#build()\"\u003e\u003ccode\u003ebuild\u003c/code\u003e\u003c/a\u003e method."
    ],
    "since": [
      "9"
    ]
  }
}