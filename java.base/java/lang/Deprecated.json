{
  "packageName": "java.lang",
  "simpleName": "Deprecated",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.lang.Deprecated",
  "annotations": [
    {
      "type": {
        "name": "Documented",
        "type": "Class"
      }
    },
    {
      "type": {
        "name": "Retention",
        "type": "Class"
      },
      "values": [
        {
          "name": "value",
          "value": {
            "type": "Unknown",
            "object": "RUNTIME"
          }
        }
      ]
    },
    {
      "type": {
        "name": "Target",
        "type": "Class"
      },
      "values": [
        {
          "name": "value",
          "value": [
            {
              "type": "Unknown",
              "object": "CONSTRUCTOR"
            },
            {
              "type": "Unknown",
              "object": "IELD"
            },
            {
              "type": "Unknown",
              "object": "OCAL_VARIABLE"
            },
            {
              "type": "Unknown",
              "object": "METHOD"
            },
            {
              "type": "Unknown",
              "object": "PACKAGE"
            },
            {
              "type": "Unknown",
              "object": "MODULE"
            },
            {
              "type": "Unknown",
              "object": "PARAMETER"
            },
            {
              "type": "Unknown",
              "object": "TYPE"
            }
          ]
        }
      ]
    }
  ],
  "tagMap": {
    "See Java Language Specification:": [
      "\u003ca href\u003d\"https://docs.oracle.com/javase/specs/jls/se16/html/jls-9.html#jls-9.6.4.6\"\u003e9.6.4.6 @Deprecated\u003c/a\u003e\n\u003cbr\u003e"
    ],
    "apiNote": [
      "It is strongly recommended that the reason for deprecating a program element be explained in the documentation, using the \n\u003ccode\u003e@deprecated\u003c/code\u003e javadoc tag. The documentation should also suggest and link to a recommended replacement API, if applicable. A replacement API often has subtly different semantics, so such issues should be discussed as well. \n\u003cp\u003eIt is recommended that a \u003ccode\u003esince\u003c/code\u003e value be provided with all newly annotated program elements. Note that \u003ccode\u003esince\u003c/code\u003e cannot be mandatory, as there are many existing annotations that lack this element value. \u003c/p\u003e\n\u003cp\u003eThere is no defined order among annotation elements. As a matter of style, the \u003ccode\u003esince\u003c/code\u003e element should be placed first. \u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003e@Deprecated\u003c/code\u003e annotation should always be present if the \u003ccode\u003e@deprecated\u003c/code\u003e javadoc tag is present, and vice-versa.\u003c/p\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}