{
  "packageName": "java.lang",
  "simpleName": "InheritableThreadLocal",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.ThreadLocal",
    "parameters": [
      {
        "name": "T",
        "type": "Class"
      }
    ],
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "owner": "java.lang.InheritableThreadLocal",
        "name": "T",
        "type": "Variable"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "childValue",
      "comment": "Computes the child\u0027s initial value for this inheritable thread-local variable as a function of the parent\u0027s value at the time the child thread is created. This method is called from within the parent thread before the child is started. This method merely returns its input argument, and should be overridden if a different behavior is desired.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eparentValue\u003c/code\u003e - the parent thread\u0027s value"
        ],
        "return": [
          "the child thread\u0027s initial value"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an inheritable thread local variable.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "genericParameters": [
    {
      "name": "T",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.lang.InheritableThreadLocal",
  "comment": "This class extends \n\u003ccode\u003eThreadLocal\u003c/code\u003e to provide inheritance of values from parent thread to child thread: when a child thread is created, the child receives initial values for all inheritable thread-local variables for which the parent has values. Normally the child\u0027s values will be identical to the parent\u0027s; however, the child\u0027s value can be made an arbitrary function of the parent\u0027s by overriding the \n\u003ccode\u003echildValue\u003c/code\u003e method in this class. \n\u003cp\u003eInheritable thread-local variables are used in preference to ordinary thread-local variables when the per-thread-attribute being maintained in the variable (e.g., User ID, Transaction ID) must be automatically transmitted to any child threads that are created. \u003c/p\u003e\n\u003cp\u003eNote: During the creation of a new \u003ca href\u003d\"Thread.html#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long,boolean)\"\u003e\u003ccode\u003ethread\u003c/code\u003e\u003c/a\u003e, it is possible to \u003ci\u003eopt out\u003c/i\u003e of receiving initial values for inheritable thread-local variables.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ThreadLocal.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eThreadLocal\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}