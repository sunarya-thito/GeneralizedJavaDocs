{
  "packageName": "java.math",
  "simpleName": "MathContext",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.math.MathContext",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "UNLIMITED",
      "comment": "A MathContext object whose settings have the values required for unlimited precision arithmetic. The values of the settings are: precision\u003d0 roundingMode\u003dHALF_UP",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.math.MathContext",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DECIMAL32",
      "comment": "A MathContext object with a precision setting matching the IEEE 754R Decimal32 format, 7 digits, and a rounding mode of HALF_EVEN, the IEEE 754R default.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.math.MathContext",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DECIMAL64",
      "comment": "A MathContext object with a precision setting matching the IEEE 754R Decimal64 format, 16 digits, and a rounding mode of HALF_EVEN, the IEEE 754R default.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.math.MathContext",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "DECIMAL128",
      "comment": "A MathContext object with a precision setting matching the IEEE 754R Decimal128 format, 34 digits, and a rounding mode of HALF_EVEN, the IEEE 754R default.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPrecision",
      "comment": "Returns the precision setting. This value is always non-negative.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an \n\u003ccode\u003eint\u003c/code\u003e which is the value of the \n\u003ccode\u003eprecision\u003c/code\u003e setting"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.math.RoundingMode",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRoundingMode",
      "comment": "Returns the roundingMode setting. This will be one of RoundingMode.CEILING, RoundingMode.DOWN, RoundingMode.FLOOR, RoundingMode.HALF_DOWN, RoundingMode.HALF_EVEN, RoundingMode.HALF_UP, RoundingMode.UNNECESSARY, or RoundingMode.UP.",
      "annotations": [],
      "tagMap": {
        "return": [
          "a \n\u003ccode\u003eRoundingMode\u003c/code\u003e object which is the value of the \n\u003ccode\u003eroundingMode\u003c/code\u003e setting"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "x",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares this MathContext with the specified Object for equality.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ex\u003c/code\u003e - \n\u003ccode\u003eObject\u003c/code\u003e to which this \n\u003ccode\u003eMathContext\u003c/code\u003e is to be compared."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if and only if the specified \n\u003ccode\u003eObject\u003c/code\u003e is a \n\u003ccode\u003eMathContext\u003c/code\u003e object which has exactly the same settings as this object"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns the hash code for this MathContext.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "hash code for this \n\u003ccode\u003eMathContext\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns the string representation of this MathContext. The String returned represents the settings of the MathContext object as two space-delimited words (separated by a single space character, \u0027\\u0020\u0027, and with no leading or trailing white space), as follows: The string \"precision\u003d\", immediately followed by the value of the precision setting as a numeric string as if generated by the Integer.toString method. The string \"roundingMode\u003d\", immediately followed by the value of the roundingMode setting as a word. This word will be the same as the name of the corresponding public constant in the RoundingMode enum. For example:  precision\u003d9 roundingMode\u003dHALF_UP\n Additional words may be appended to the result of toString in the future if more properties are added to this class.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a \n\u003ccode\u003eString\u003c/code\u003e representing the context settings"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "setPrecision",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new MathContext with the specified precision and the HALF_UP rounding mode.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003esetPrecision\u003c/code\u003e - The non-negative \n\u003ccode\u003eint\u003c/code\u003e precision setting."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003esetPrecision\u003c/code\u003e parameter is less than zero."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "setPrecision",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.RoundingMode",
            "type": "Class"
          },
          "name": "setRoundingMode",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new MathContext with a specified precision and rounding mode.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003esetPrecision\u003c/code\u003e - The non-negative \n\u003ccode\u003eint\u003c/code\u003e precision setting.",
          "\u003ccode\u003esetRoundingMode\u003c/code\u003e - The rounding mode to use."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the \n\u003ccode\u003esetPrecision\u003c/code\u003e parameter is less than zero.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the rounding mode argument is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "val",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new MathContext from a string. The string must be in the same format as that produced by the toString() method. An IllegalArgumentException is thrown if the precision section of the string is out of range (\u003c 0) or the string is not in the format created by the toString() method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eval\u003c/code\u003e - The string to be parsed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the precision section is out of range or of incorrect format",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the argument is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "java.math.MathContext",
  "comment": "Immutable objects which encapsulate the context settings which describe certain rules for numerical operators, such as those implemented by the \n\u003ca href\u003d\"BigDecimal.html\" title\u003d\"class in java.math\"\u003e\u003ccode\u003eBigDecimal\u003c/code\u003e\u003c/a\u003e class. \n\u003cp\u003eThe base-independent settings are: \u003c/p\u003e\n\u003col\u003e \n \u003cli\u003e\u003ccode\u003eprecision\u003c/code\u003e: the number of digits to be used for an operation; results are rounded to this precision \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003eroundingMode\u003c/code\u003e: a \u003ca href\u003d\"RoundingMode.html\" title\u003d\"enum class in java.math\"\u003e\u003ccode\u003eRoundingMode\u003c/code\u003e\u003c/a\u003e object which specifies the algorithm to be used for rounding. \u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/math/BigDecimal.html\" title\u003d\"class in java.math\"\u003e\u003ccode\u003eBigDecimal\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/math/RoundingMode.html\" title\u003d\"enum class in java.math\"\u003e\u003ccode\u003eRoundingMode\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.math.MathContext\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}