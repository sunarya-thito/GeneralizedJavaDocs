{
  "packageName": "java.security",
  "simpleName": "PrivateKeyEntry",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.security.PrivateKey",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPrivateKey",
      "comment": "Gets the PrivateKey from this entry.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003ePrivateKey\u003c/code\u003e from this entry"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.cert.Certificate",
        "type": "Class",
        "arrayDimensions": 1
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCertificateChain",
      "comment": "Gets the Certificate chain from this entry. The stored chain is cloned before being returned.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an array of \n\u003ccode\u003eCertificate\u003c/code\u003es corresponding to the certificate chain for the public key. If the certificates are of type X.509, the runtime type of the returned array is \n\u003ccode\u003eX509Certificate[]\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.cert.Certificate",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCertificate",
      "comment": "Gets the end entity Certificate from the certificate chain in this entry.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the end entity \n\u003ccode\u003eCertificate\u003c/code\u003e (at index 0) from the certificate chain in this entry. If the certificate is of type X.509, the runtime type of the returned certificate is \n\u003ccode\u003eX509Certificate\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.security.KeyStore$Entry$Attribute",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAttributes",
      "comment": "Retrieves the attributes associated with an entry.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/KeyStore.Entry.html#getAttributes()\"\u003egetAttributes\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/KeyStore.Entry.html\" title\u003d\"interface in java.security\"\u003eKeyStore.Entry\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "an unmodifiable \n\u003ccode\u003eSet\u003c/code\u003e of attributes, possibly empty"
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of this PrivateKeyEntry.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this PrivateKeyEntry."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.PrivateKey",
            "type": "Class"
          },
          "name": "privateKey",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.cert.Certificate",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "chain",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a PrivateKeyEntry with a PrivateKey and corresponding certificate chain. The specified chain is cloned before it is stored in the new PrivateKeyEntry object.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eprivateKey\u003c/code\u003e - the \n\u003ccode\u003ePrivateKey\u003c/code\u003e",
          "\u003ccode\u003echain\u003c/code\u003e - an array of \n\u003ccode\u003eCertificate\u003c/code\u003es representing the certificate chain. The chain must be ordered and contain a \n\u003ccode\u003eCertificate\u003c/code\u003e at index 0 corresponding to the private key."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eprivateKey\u003c/code\u003e or \n\u003ccode\u003echain\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified chain has a length of 0, if the specified chain does not contain \n\u003ccode\u003eCertificate\u003c/code\u003es of the same type, or if the \n\u003ccode\u003ePrivateKey\u003c/code\u003e algorithm does not match the algorithm of the \n\u003ccode\u003ePublicKey\u003c/code\u003e in the end entity \n\u003ccode\u003eCertificate\u003c/code\u003e (at index 0)"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.PrivateKey",
            "type": "Class"
          },
          "name": "privateKey",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.cert.Certificate",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "chain",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.security.KeyStore$Entry$Attribute",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "attributes",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a PrivateKeyEntry with a PrivateKey and corresponding certificate chain and associated entry attributes. The specified chain and attributes are cloned before they are stored in the new PrivateKeyEntry object.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eprivateKey\u003c/code\u003e - the \n\u003ccode\u003ePrivateKey\u003c/code\u003e",
          "\u003ccode\u003echain\u003c/code\u003e - an array of \n\u003ccode\u003eCertificate\u003c/code\u003es representing the certificate chain. The chain must be ordered and contain a \n\u003ccode\u003eCertificate\u003c/code\u003e at index 0 corresponding to the private key.",
          "\u003ccode\u003eattributes\u003c/code\u003e - the attributes"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003eprivateKey\u003c/code\u003e, \n\u003ccode\u003echain\u003c/code\u003e or \n\u003ccode\u003eattributes\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the specified chain has a length of 0, if the specified chain does not contain \n\u003ccode\u003eCertificate\u003c/code\u003es of the same type, or if the \n\u003ccode\u003ePrivateKey\u003c/code\u003e algorithm does not match the algorithm of the \n\u003ccode\u003ePublicKey\u003c/code\u003e in the end entity \n\u003ccode\u003eCertificate\u003c/code\u003e (at index 0)"
        ],
        "since": [
          "1.8"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 25,
  "name": "java.security.KeyStore$PrivateKeyEntry",
  "comment": "A \n\u003ccode\u003eKeyStore\u003c/code\u003e entry that holds a \n\u003ccode\u003ePrivateKey\u003c/code\u003e and corresponding certificate chain.",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}