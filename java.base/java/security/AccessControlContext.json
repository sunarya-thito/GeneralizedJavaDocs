{
  "packageName": "java.security",
  "simpleName": "AccessControlContext",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.security.DomainCombiner",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDomainCombiner",
      "comment": "Get the DomainCombiner associated with this AccessControlContext.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager is installed and the caller does not have the \"getDomainCombiner\" \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/SecurityPermission.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eSecurityPermission\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the \n\u003ccode\u003eDomainCombiner\u003c/code\u003e associated with this \n\u003ccode\u003eAccessControlContext\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if there is none."
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.AccessControlException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.security.Permission",
            "type": "Class"
          },
          "field": {
            "name": "perm"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "checkPermission",
      "comment": "Determines whether the access request indicated by the specified permission should be allowed or denied, based on the security policy currently in effect, and the context in this object. The request is allowed only if every ProtectionDomain in the context implies the permission. Otherwise the request is denied. This method quietly returns if the access request is permitted, or throws a suitable AccessControlException otherwise.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eperm\u003c/code\u003e - the requested permission."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessControlException.html\" title\u003d\"class in java.security\"\u003eAccessControlException\u003c/a\u003e\u003c/code\u003e - if the specified permission is not permitted, based on the current security policy and the context encapsulated by this object.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the permission to check for is null."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Checks two AccessControlContext objects for equality. Checks that obj is an AccessControlContext and has the same set of ProtectionDomains as this context.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object we are testing for equality with this object."
        ],
        "return": [
          "true if \n\u003ccode\u003eobj\u003c/code\u003e is an AccessControlContext, and has the same set of ProtectionDomains as this context, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns the hash code value for this context. The hash code is computed by exclusive or-ing the hash code of all the protection domains in the context together.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code value for this context."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.security.ProtectionDomain",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "context"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create an AccessControlContext with the given array of ProtectionDomains. Context must not be null. Duplicate domains will be removed from the context.",
      "tagMap": {
        "param": [
          "\u003ccode\u003econtext\u003c/code\u003e - the ProtectionDomains associated with this context. The non-duplicate domains are copied from the array. Subsequent changes to the array will not affect this AccessControlContext."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003econtext\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.security.AccessControlContext",
            "type": "Class"
          },
          "field": {
            "name": "acc"
          }
        },
        {
          "type": {
            "name": "java.security.DomainCombiner",
            "type": "Class"
          },
          "field": {
            "name": "combiner"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Create a new AccessControlContext with the given AccessControlContext and DomainCombiner. This constructor associates the provided DomainCombiner with the provided AccessControlContext.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eacc\u003c/code\u003e - the \n\u003ccode\u003eAccessControlContext\u003c/code\u003e associated with the provided \n\u003ccode\u003eDomainCombiner\u003c/code\u003e.",
          "\u003ccode\u003ecombiner\u003c/code\u003e - the \n\u003ccode\u003eDomainCombiner\u003c/code\u003e to be associated with the provided \n\u003ccode\u003eAccessControlContext\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the provided \n\u003ccode\u003econtext\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager is installed and the caller does not have the \"createAccessControlContext\" \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/SecurityPermission.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eSecurityPermission\u003c/code\u003e\u003c/a\u003e"
        ],
        "since": [
          "1.3"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "java.security.AccessControlContext",
  "comment": "An AccessControlContext is used to make system resource access decisions based on the context it encapsulates. \n\u003cp\u003eMore specifically, it encapsulates a context and has a single method, \u003ccode\u003echeckPermission\u003c/code\u003e, that is equivalent to the \u003ccode\u003echeckPermission\u003c/code\u003e method in the AccessController class, with one difference: The AccessControlContext \u003ccode\u003echeckPermission\u003c/code\u003e method makes access decisions based on the context it encapsulates, rather than that of the current execution thread. \u003c/p\u003e\n\u003cp\u003eThus, the purpose of AccessControlContext is for those situations where a security check that should be made within a given context actually needs to be done from within a \u003ci\u003edifferent\u003c/i\u003e context (for example, from within a worker thread). \u003c/p\u003e\n\u003cp\u003e An AccessControlContext is created by calling the \u003ccode\u003eAccessController.getContext\u003c/code\u003e method. The \u003ccode\u003egetContext\u003c/code\u003e method takes a \"snapshot\" of the current calling context, and places it in an AccessControlContext object, which it returns. A sample call is the following: \u003c/p\u003e\n\u003cpre\u003e   AccessControlContext acc \u003d AccessController.getContext()\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e Code within a different context can subsequently call the \u003ccode\u003echeckPermission\u003c/code\u003e method on the previously-saved AccessControlContext object. A sample call is the following: \u003c/p\u003e\n\u003cpre\u003e   acc.checkPermission(permission)\n \u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eAccessController\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}