{
  "packageName": "java.security",
  "simpleName": "AccessController",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.PrivilegedAction",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "action",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "doPrivileged",
      "comment": "Performs the specified PrivilegedAction with privileges enabled. The action is performed with all of the permissions possessed by the caller\u0027s protection domain. If the action\u0027s run method throws an (unchecked) exception, it will propagate through this method. Note that any DomainCombiner associated with the current AccessControlContext will be ignored while the action is performed.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the value returned by the PrivilegedAction\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedAction,AccessControlContext)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedExceptionAction)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedExceptionAction)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivilegedWithCombiner(java.security.PrivilegedAction)\"\u003e\u003ccode\u003edoPrivilegedWithCombiner(PrivilegedAction)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/DomainCombiner.html\" title\u003d\"interface in java.security\"\u003e\u003ccode\u003eDomainCombiner\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to be performed."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the action is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the value returned by the action\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.PrivilegedAction",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "action",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "doPrivilegedWithCombiner",
      "comment": "Performs the specified PrivilegedAction with privileges enabled. The action is performed with all of the permissions possessed by the caller\u0027s protection domain. If the action\u0027s run method throws an (unchecked) exception, it will propagate through this method. This method preserves the current AccessControlContext\u0027s DomainCombiner (which may be null) while the action is performed.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the value returned by the PrivilegedAction\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedAction)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedAction)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/DomainCombiner.html\" title\u003d\"interface in java.security\"\u003e\u003ccode\u003eDomainCombiner\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to be performed."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the action is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the value returned by the action\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.PrivilegedAction",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "action",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.AccessControlContext",
            "type": "Class"
          },
          "name": "context",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "doPrivileged",
      "comment": "Performs the specified PrivilegedAction with privileges enabled and restricted by the specified AccessControlContext. The action is performed with the intersection of the permissions possessed by the caller\u0027s protection domain, and those possessed by the domains represented by the specified AccessControlContext. If the action\u0027s run method throws an (unchecked) exception, it will propagate through this method. If a security manager is installed and the specified AccessControlContext was not created by system code and the caller\u0027s ProtectionDomain has not been granted the \"createAccessControlContext\" SecurityPermission, then the action is performed with no permissions.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the value returned by the PrivilegedAction\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedAction)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedAction)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedExceptionAction,AccessControlContext)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to be performed.",
          "\u003ccode\u003econtext\u003c/code\u003e - an \n\u003ci\u003eaccess control context\u003c/i\u003e representing the restriction to be applied to the caller\u0027s domain\u0027s privileges before performing the specified action. If the context is \n\u003ccode\u003enull\u003c/code\u003e, then no additional restriction is applied."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the action is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the value returned by the action\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.PrivilegedAction",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "action",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.AccessControlContext",
            "type": "Class"
          },
          "name": "context",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.Permission",
            "type": "Class"
          },
          "name": "perms",
          "varargs": true
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "doPrivileged",
      "comment": "Performs the specified PrivilegedAction with privileges enabled and restricted by the specified AccessControlContext and with a privilege scope limited by specified Permission arguments. The action is performed with the intersection of the permissions possessed by the caller\u0027s protection domain, and those possessed by the domains represented by the specified AccessControlContext. If the action\u0027s run method throws an (unchecked) exception, it will propagate through this method. If a security manager is installed and the specified AccessControlContext was not created by system code and the caller\u0027s ProtectionDomain has not been granted the \"createAccessControlContext\" SecurityPermission, then the action is performed with no permissions.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the value returned by the PrivilegedAction\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedAction)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedAction)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedExceptionAction,AccessControlContext)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to be performed.",
          "\u003ccode\u003econtext\u003c/code\u003e - an \n\u003ci\u003eaccess control context\u003c/i\u003e representing the restriction to be applied to the caller\u0027s domain\u0027s privileges before performing the specified action. If the context is \n\u003ccode\u003enull\u003c/code\u003e, then no additional restriction is applied.",
          "\u003ccode\u003eperms\u003c/code\u003e - the \n\u003ccode\u003ePermission\u003c/code\u003e arguments which limit the scope of the caller\u0027s privileges. The number of arguments is variable."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if action or perms or any element of perms is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the value returned by the action\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.PrivilegedAction",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "action",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.AccessControlContext",
            "type": "Class"
          },
          "name": "context",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.Permission",
            "type": "Class"
          },
          "name": "perms",
          "varargs": true
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "doPrivilegedWithCombiner",
      "comment": "Performs the specified PrivilegedAction with privileges enabled and restricted by the specified AccessControlContext and with a privilege scope limited by specified Permission arguments. The action is performed with the intersection of the permissions possessed by the caller\u0027s protection domain, and those possessed by the domains represented by the specified AccessControlContext. If the action\u0027s run method throws an (unchecked) exception, it will propagate through this method. This method preserves the current AccessControlContext\u0027s DomainCombiner (which may be null) while the action is performed. If a security manager is installed and the specified AccessControlContext was not created by system code and the caller\u0027s ProtectionDomain has not been granted the \"createAccessControlContext\" SecurityPermission, then the action is performed with no permissions.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the value returned by the PrivilegedAction\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedAction)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedAction)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedExceptionAction,AccessControlContext)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/DomainCombiner.html\" title\u003d\"interface in java.security\"\u003e\u003ccode\u003eDomainCombiner\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to be performed.",
          "\u003ccode\u003econtext\u003c/code\u003e - an \n\u003ci\u003eaccess control context\u003c/i\u003e representing the restriction to be applied to the caller\u0027s domain\u0027s privileges before performing the specified action. If the context is \n\u003ccode\u003enull\u003c/code\u003e, then no additional restriction is applied.",
          "\u003ccode\u003eperms\u003c/code\u003e - the \n\u003ccode\u003ePermission\u003c/code\u003e arguments which limit the scope of the caller\u0027s privileges. The number of arguments is variable."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if action or perms or any element of perms is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the value returned by the action\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.PrivilegedActionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.PrivilegedExceptionAction",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "action",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "doPrivileged",
      "comment": "Performs the specified PrivilegedExceptionAction with privileges enabled. The action is performed with all of the permissions possessed by the caller\u0027s protection domain. If the action\u0027s run method throws an unchecked exception, it will propagate through this method. Note that any DomainCombiner associated with the current AccessControlContext will be ignored while the action is performed.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the value returned by the PrivilegedExceptionAction\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedAction)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedAction)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedExceptionAction,AccessControlContext)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivilegedWithCombiner(java.security.PrivilegedExceptionAction)\"\u003e\u003ccode\u003edoPrivilegedWithCombiner(PrivilegedExceptionAction)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/DomainCombiner.html\" title\u003d\"interface in java.security\"\u003e\u003ccode\u003eDomainCombiner\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to be performed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/PrivilegedActionException.html\" title\u003d\"class in java.security\"\u003ePrivilegedActionException\u003c/a\u003e\u003c/code\u003e - if the specified action\u0027s \n\u003ccode\u003erun\u003c/code\u003e method threw a \n\u003ci\u003echecked\u003c/i\u003e exception",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the action is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the value returned by the action\u0027s \n\u003ccode\u003erun\u003c/code\u003e method"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.PrivilegedActionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.PrivilegedExceptionAction",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "action",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "doPrivilegedWithCombiner",
      "comment": "Performs the specified PrivilegedExceptionAction with privileges enabled. The action is performed with all of the permissions possessed by the caller\u0027s protection domain. If the action\u0027s run method throws an unchecked exception, it will propagate through this method. This method preserves the current AccessControlContext\u0027s DomainCombiner (which may be null) while the action is performed.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the value returned by the PrivilegedExceptionAction\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedAction)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedAction)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedExceptionAction,AccessControlContext)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/DomainCombiner.html\" title\u003d\"interface in java.security\"\u003e\u003ccode\u003eDomainCombiner\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to be performed."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/PrivilegedActionException.html\" title\u003d\"class in java.security\"\u003ePrivilegedActionException\u003c/a\u003e\u003c/code\u003e - if the specified action\u0027s \n\u003ccode\u003erun\u003c/code\u003e method threw a \n\u003ci\u003echecked\u003c/i\u003e exception",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the action is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the value returned by the action\u0027s \n\u003ccode\u003erun\u003c/code\u003e method"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.PrivilegedActionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.PrivilegedExceptionAction",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "action",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.AccessControlContext",
            "type": "Class"
          },
          "name": "context",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "doPrivileged",
      "comment": "Performs the specified PrivilegedExceptionAction with privileges enabled and restricted by the specified AccessControlContext. The action is performed with the intersection of the permissions possessed by the caller\u0027s protection domain, and those possessed by the domains represented by the specified AccessControlContext. If the action\u0027s run method throws an unchecked exception, it will propagate through this method. If a security manager is installed and the specified AccessControlContext was not created by system code and the caller\u0027s ProtectionDomain has not been granted the \"createAccessControlContext\" SecurityPermission, then the action is performed with no permissions.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the value returned by the PrivilegedExceptionAction\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedAction)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedAction)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedAction,AccessControlContext)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to be performed",
          "\u003ccode\u003econtext\u003c/code\u003e - an \n\u003ci\u003eaccess control context\u003c/i\u003e representing the restriction to be applied to the caller\u0027s domain\u0027s privileges before performing the specified action. If the context is \n\u003ccode\u003enull\u003c/code\u003e, then no additional restriction is applied."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/PrivilegedActionException.html\" title\u003d\"class in java.security\"\u003ePrivilegedActionException\u003c/a\u003e\u003c/code\u003e - if the specified action\u0027s \n\u003ccode\u003erun\u003c/code\u003e method threw a \n\u003ci\u003echecked\u003c/i\u003e exception",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the action is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the value returned by the action\u0027s \n\u003ccode\u003erun\u003c/code\u003e method"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.PrivilegedActionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.PrivilegedExceptionAction",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "action",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.AccessControlContext",
            "type": "Class"
          },
          "name": "context",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.Permission",
            "type": "Class"
          },
          "name": "perms",
          "varargs": true
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "doPrivileged",
      "comment": "Performs the specified PrivilegedExceptionAction with privileges enabled and restricted by the specified AccessControlContext and with a privilege scope limited by specified Permission arguments. The action is performed with the intersection of the permissions possessed by the caller\u0027s protection domain, and those possessed by the domains represented by the specified AccessControlContext. If the action\u0027s run method throws an (unchecked) exception, it will propagate through this method. If a security manager is installed and the specified AccessControlContext was not created by system code and the caller\u0027s ProtectionDomain has not been granted the \"createAccessControlContext\" SecurityPermission, then the action is performed with no permissions.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the value returned by the PrivilegedExceptionAction\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedAction)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedAction)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedAction,AccessControlContext)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to be performed.",
          "\u003ccode\u003econtext\u003c/code\u003e - an \n\u003ci\u003eaccess control context\u003c/i\u003e representing the restriction to be applied to the caller\u0027s domain\u0027s privileges before performing the specified action. If the context is \n\u003ccode\u003enull\u003c/code\u003e, then no additional restriction is applied.",
          "\u003ccode\u003eperms\u003c/code\u003e - the \n\u003ccode\u003ePermission\u003c/code\u003e arguments which limit the scope of the caller\u0027s privileges. The number of arguments is variable."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/PrivilegedActionException.html\" title\u003d\"class in java.security\"\u003ePrivilegedActionException\u003c/a\u003e\u003c/code\u003e - if the specified action\u0027s \n\u003ccode\u003erun\u003c/code\u003e method threw a \n\u003ci\u003echecked\u003c/i\u003e exception",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if action or perms or any element of perms is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the value returned by the action\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.PrivilegedActionException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.PrivilegedExceptionAction",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "action",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.AccessControlContext",
            "type": "Class"
          },
          "name": "context",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.Permission",
            "type": "Class"
          },
          "name": "perms",
          "varargs": true
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "doPrivilegedWithCombiner",
      "comment": "Performs the specified PrivilegedExceptionAction with privileges enabled and restricted by the specified AccessControlContext and with a privilege scope limited by specified Permission arguments. The action is performed with the intersection of the permissions possessed by the caller\u0027s protection domain, and those possessed by the domains represented by the specified AccessControlContext. If the action\u0027s run method throws an (unchecked) exception, it will propagate through this method. This method preserves the current AccessControlContext\u0027s DomainCombiner (which may be null) while the action is performed. If a security manager is installed and the specified AccessControlContext was not created by system code and the caller\u0027s ProtectionDomain has not been granted the \"createAccessControlContext\" SecurityPermission, then the action is performed with no permissions.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - the type of the value returned by the PrivilegedExceptionAction\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedAction)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedAction)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessController.html#doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)\"\u003e\u003ccode\u003edoPrivileged(PrivilegedAction,AccessControlContext)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/DomainCombiner.html\" title\u003d\"interface in java.security\"\u003e\u003ccode\u003eDomainCombiner\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eaction\u003c/code\u003e - the action to be performed.",
          "\u003ccode\u003econtext\u003c/code\u003e - an \n\u003ci\u003eaccess control context\u003c/i\u003e representing the restriction to be applied to the caller\u0027s domain\u0027s privileges before performing the specified action. If the context is \n\u003ccode\u003enull\u003c/code\u003e, then no additional restriction is applied.",
          "\u003ccode\u003eperms\u003c/code\u003e - the \n\u003ccode\u003ePermission\u003c/code\u003e arguments which limit the scope of the caller\u0027s privileges. The number of arguments is variable."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/PrivilegedActionException.html\" title\u003d\"class in java.security\"\u003ePrivilegedActionException\u003c/a\u003e\u003c/code\u003e - if the specified action\u0027s \n\u003ccode\u003erun\u003c/code\u003e method threw a \n\u003ci\u003echecked\u003c/i\u003e exception",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if action or perms or any element of perms is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "return": [
          "the value returned by the action\u0027s \n\u003ccode\u003erun\u003c/code\u003e method."
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.AccessControlContext",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getContext",
      "comment": "This method takes a \"snapshot\" of the current calling context, which includes the current Thread\u0027s inherited AccessControlContext and any limited privilege scope, and places it in an AccessControlContext object. This context may then be checked at a later point, possibly in another thread.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessControlContext.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eAccessControlContext\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the AccessControlContext based on the current context."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.AccessControlException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.Permission",
            "type": "Class"
          },
          "name": "perm",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "checkPermission",
      "comment": "Determines whether the access request indicated by the specified permission should be allowed or denied, based on the current AccessControlContext and security policy. This method quietly returns if the access request is permitted, or throws an AccessControlException otherwise. The getPermission method of the AccessControlException returns the perm Permission object instance.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eperm\u003c/code\u003e - the requested permission."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessControlException.html\" title\u003d\"class in java.security\"\u003eAccessControlException\u003c/a\u003e\u003c/code\u003e - if the specified permission is not permitted, based on the current security policy.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if the specified permission is \n\u003ccode\u003enull\u003c/code\u003e and is checked based on the security policy currently in effect."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "java.security.AccessController",
  "annotations": [],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/AccessControlContext.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eAccessControlContext\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}