{
  "packageName": "java.security.interfaces",
  "simpleName": "EdECPublicKey",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "interfaces": [
    {
      "name": "java.security.interfaces.EdECKey",
      "type": "Class"
    },
    {
      "name": "java.security.PublicKey",
      "type": "Class"
    }
  ],
  "members": [
    {
      "returnType": {
        "name": "java.security.spec.EdECPoint",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPoint",
      "comment": "Get the point representing the public key.",
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eEdECPoint\u003c/code\u003e representing the public key."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.security.interfaces.EdECPublicKey",
  "comment": "An interface for an elliptic curve public key as defined by \n\u003ca href\u003d\"https://tools.ietf.org/html/rfc8032\"\u003eRFC 8032: Edwards-Curve Digital Signature Algorithm (EdDSA)\u003c/a\u003e. These keys are distinct from the keys represented by \n\u003ccode\u003eECPublicKey\u003c/code\u003e, and they are intended for use with algorithms based on RFC 8032 such as the EdDSA \n\u003ccode\u003eSignature\u003c/code\u003e algorithm. \n\u003cp\u003e An Edwards-Curve public key is a point on the curve, which is represented using an EdECPoint.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "15"
    ]
  }
}