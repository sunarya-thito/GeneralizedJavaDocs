{
  "packageName": "java.security.spec",
  "simpleName": "EllipticCurve",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.security.spec.ECField",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getField",
      "comment": "Returns the finite field field that this elliptic curve is over.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the field \n\u003ccode\u003efield\u003c/code\u003e that this curve is over."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.math.BigInteger",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getA",
      "comment": "Returns the first coefficient a of the elliptic curve.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the first coefficient \n\u003ccode\u003ea\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.math.BigInteger",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getB",
      "comment": "Returns the second coefficient b of the elliptic curve.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the second coefficient \n\u003ccode\u003eb\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": 1
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSeed",
      "comment": "Returns the seeding bytes seed used during curve generation. May be null if not specified.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the seeding bytes \n\u003ccode\u003eseed\u003c/code\u003e. A new array is returned each time this method is called."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "name": "obj",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares this elliptic curve for equality with the specified object.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to be compared."
        ],
        "return": [
          "true if \n\u003ccode\u003eobj\u003c/code\u003e is an instance of EllipticCurve and the field, A, and B match, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns a hash code value for this elliptic curve.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a hash code value computed from the hash codes of the field, A, and B, as follows: \n\u003cpre\u003e\u003ccode\u003e\n     (field.hashCode() \u0026lt;\u0026lt; 6) + (a.hashCode() \u0026lt;\u0026lt; 4) + (b.hashCode() \u0026lt;\u0026lt; 2)\n \u003c/code\u003e\u003c/pre\u003e"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.spec.ECField",
            "type": "Class"
          },
          "name": "field",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "a",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "b",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an elliptic curve with the specified elliptic field field and the coefficients a and b.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efield\u003c/code\u003e - the finite field that this elliptic curve is over.",
          "\u003ccode\u003ea\u003c/code\u003e - the first coefficient of this elliptic curve.",
          "\u003ccode\u003eb\u003c/code\u003e - the second coefficient of this elliptic curve."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efield\u003c/code\u003e, \n\u003ccode\u003ea\u003c/code\u003e, or \n\u003ccode\u003eb\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ea\u003c/code\u003e or \n\u003ccode\u003eb\u003c/code\u003e is not null and not in \n\u003ccode\u003efield\u003c/code\u003e."
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.spec.ECField",
            "type": "Class"
          },
          "name": "field",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "a",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "name": "b",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "seed",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates an elliptic curve with the specified elliptic field field, the coefficients a and b, and the seed used for curve generation.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efield\u003c/code\u003e - the finite field that this elliptic curve is over.",
          "\u003ccode\u003ea\u003c/code\u003e - the first coefficient of this elliptic curve.",
          "\u003ccode\u003eb\u003c/code\u003e - the second coefficient of this elliptic curve.",
          "\u003ccode\u003eseed\u003c/code\u003e - the bytes used during curve generation for later validation. Contents of this array are copied to protect against subsequent modification."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003efield\u003c/code\u003e, \n\u003ccode\u003ea\u003c/code\u003e, or \n\u003ccode\u003eb\u003c/code\u003e is null.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ea\u003c/code\u003e or \n\u003ccode\u003eb\u003c/code\u003e is not null and not in \n\u003ccode\u003efield\u003c/code\u003e."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.security.spec.EllipticCurve",
  "comment": "This immutable class holds the necessary values needed to represent an elliptic curve.",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/spec/ECField.html\" title\u003d\"interface in java.security.spec\"\u003e\u003ccode\u003eECField\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/spec/ECFieldFp.html\" title\u003d\"class in java.security.spec\"\u003e\u003ccode\u003eECFieldFp\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/spec/ECFieldF2m.html\" title\u003d\"class in java.security.spec\"\u003e\u003ccode\u003eECFieldF2m\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}