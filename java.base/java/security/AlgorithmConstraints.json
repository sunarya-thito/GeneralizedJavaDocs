{
  "packageName": "java.security",
  "simpleName": "AlgorithmConstraints",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "permits",
      "comment": "Determines whether an algorithm is granted permission for the specified cryptographic primitives.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eprimitives\u003c/code\u003e - a set of cryptographic primitives",
          "\u003ccode\u003ealgorithm\u003c/code\u003e - the algorithm name",
          "\u003ccode\u003eparameters\u003c/code\u003e - the algorithm parameters, or null if no additional parameters"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if primitives or algorithm is null or empty"
        ],
        "return": [
          "true if the algorithm is permitted and can be used for all of the specified cryptographic primitives"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "permits",
      "comment": "Determines whether a key is granted permission for the specified cryptographic primitives. This method is usually used to check key size and key usage.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eprimitives\u003c/code\u003e - a set of cryptographic primitives",
          "\u003ccode\u003ekey\u003c/code\u003e - the key"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if primitives is null or empty, or the key is null"
        ],
        "return": [
          "true if the key can be used for all of the specified cryptographic primitives"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "permits",
      "comment": "Determines whether an algorithm and the corresponding key are granted permission for the specified cryptographic primitives.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eprimitives\u003c/code\u003e - a set of cryptographic primitives",
          "\u003ccode\u003ealgorithm\u003c/code\u003e - the algorithm name",
          "\u003ccode\u003ekey\u003c/code\u003e - the key",
          "\u003ccode\u003eparameters\u003c/code\u003e - the algorithm parameters, or null if no additional parameters"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if primitives or algorithm is null or empty, or the key is null"
        ],
        "return": [
          "true if the key and the algorithm can be used for all of the specified cryptographic primitives"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.security.AlgorithmConstraints",
  "comment": "This interface specifies constraints for cryptographic algorithms, keys (key sizes), and other algorithm parameters. \n\u003cp\u003e \u003ccode\u003eAlgorithmConstraints\u003c/code\u003e objects are immutable. An implementation of this interface should not provide methods that can change the state of an instance once it has been created. \u003c/p\u003e\n\u003cp\u003e Note that \u003ccode\u003eAlgorithmConstraints\u003c/code\u003e can be used to represent the restrictions described by the security properties \u003ccode\u003ejdk.certpath.disabledAlgorithms\u003c/code\u003e and \u003ccode\u003ejdk.tls.disabledAlgorithms\u003c/code\u003e, or could be used by a concrete \u003ccode\u003ePKIXCertPathChecker\u003c/code\u003e to check whether a specified certificate in the certification path contains the required algorithm constraints.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLParameters.html#getAlgorithmConstraints()\"\u003e\u003ccode\u003eSSLParameters.getAlgorithmConstraints()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/SSLParameters.html#setAlgorithmConstraints(java.security.AlgorithmConstraints)\"\u003e\u003ccode\u003eSSLParameters.setAlgorithmConstraints(AlgorithmConstraints)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.7"
    ]
  }
}