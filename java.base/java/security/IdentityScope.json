{
  "packageName": "java.security",
  "simpleName": "IdentityScope",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.security.Identity",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.security.IdentityScope",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getSystemScope",
      "comment": "Returns the system\u0027s identity scope.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/IdentityScope.html#setSystemScope(java.security.IdentityScope)\"\u003e\u003ccode\u003esetSystemScope(java.security.IdentityScope)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the system\u0027s identity scope, or \n\u003ccode\u003enull\u003c/code\u003e if none has been set."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.IdentityScope",
            "type": "Class"
          },
          "name": "scope",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 12,
      "name": "setSystemScope",
      "comment": "Sets the system\u0027s identity scope. First, if there is a security manager, its checkSecurityAccess method is called with \"setSystemScope\" as its argument to see if it\u0027s ok to set the identity scope.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/IdentityScope.html#getSystemScope()\"\u003e\u003ccode\u003egetSystemScope()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkSecurityAccess(java.lang.String)\"\u003e\u003ccode\u003eSecurityManager.checkSecurityAccess(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003escope\u003c/code\u003e - the scope to set."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and its \n\u003ccode\u003echeckSecurityAccess\u003c/code\u003e method doesn\u0027t allow setting the identity scope."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "size",
      "comment": "Returns the number of identities within this identity scope.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the number of identities within this identity scope."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.Identity",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getIdentity",
      "comment": "Returns the identity in this scope with the specified name (if any).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the identity to be retrieved."
        ],
        "return": [
          "the identity named \n\u003ccode\u003ename\u003c/code\u003e, or null if there are no identities named \n\u003ccode\u003ename\u003c/code\u003e in this scope."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.Identity",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.Principal",
            "type": "Class"
          },
          "name": "principal",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIdentity",
      "comment": "Retrieves the identity whose name is the same as that of the specified principal. (Note: Identity implements Principal.)",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eprincipal\u003c/code\u003e - the principal corresponding to the identity to be retrieved."
        ],
        "return": [
          "the identity whose name is the same as that of the principal, or null if there are no identities of the same name in this scope."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.Identity",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.PublicKey",
            "type": "Class"
          },
          "name": "key",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getIdentity",
      "comment": "Retrieves the identity with the specified public key.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the public key for the identity to be returned."
        ],
        "return": [
          "the identity with the given key, or null if there are no identities in this scope with that key."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.KeyManagementException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.Identity",
            "type": "Class"
          },
          "name": "identity",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "addIdentity",
      "comment": "Adds an identity to this identity scope.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eidentity\u003c/code\u003e - the identity to be added."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/KeyManagementException.html\" title\u003d\"class in java.security\"\u003eKeyManagementException\u003c/a\u003e\u003c/code\u003e - if the identity is not valid, a name conflict occurs, another identity has the same public key as the identity being added, or another exception occurs."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.KeyManagementException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.Identity",
            "type": "Class"
          },
          "name": "identity",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "removeIdentity",
      "comment": "Removes an identity from this identity scope.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eidentity\u003c/code\u003e - the identity to be removed."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/KeyManagementException.html\" title\u003d\"class in java.security\"\u003eKeyManagementException\u003c/a\u003e\u003c/code\u003e - if the identity is missing, or another exception occurs."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Enumeration",
        "parameters": [
          {
            "name": "java.security.Identity",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "identities",
      "comment": "Returns an enumeration of all identities in this identity scope.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an enumeration of all identities in this identity scope."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string representation of this identity scope, including its name, its scope name, and the number of identities in this identity scope.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkSecurityAccess(java.lang.String)\"\u003e\u003ccode\u003eSecurityManager.checkSecurityAccess(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Identity.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Identity.html\" title\u003d\"class in java.security\"\u003eIdentity\u003c/a\u003e\u003c/code\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Principal.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Principal.html\" title\u003d\"interface in java.security\"\u003ePrincipal\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this identity scope."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "This constructor is used for serialization only and should not be used by subclasses.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new identity scope with the specified name.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the scope name."
        ]
      }
    },
    {
      "throwsClasses": [
        {
          "name": "java.security.KeyManagementException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.IdentityScope",
            "type": "Class"
          },
          "name": "scope",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructs a new identity scope with the specified name and scope.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the scope name.",
          "\u003ccode\u003escope\u003c/code\u003e - the scope for the new identity scope."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/KeyManagementException.html\" title\u003d\"class in java.security\"\u003eKeyManagementException\u003c/a\u003e\u003c/code\u003e - if there is already an identity with the same name in the scope."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.security.IdentityScope",
  "comment": "\u003cp\u003eThis class represents a scope for identities. It is an Identity itself, and therefore has a name and can have a scope. It can also optionally have a public key and associated certificates. \u003c/p\u003e\n\u003cp\u003eAn IdentityScope can contain Identity objects of all kinds, including Signers. All types of Identity objects can be retrieved, added, and removed using the same methods. Note that it is possible, and in fact expected, that different types of identity scopes will apply different policies for their various operations on the various types of Identities. \u003c/p\u003e\n\u003cp\u003eThere is a one-to-one mapping between keys and identities, and there can only be one copy of one key per scope. For example, suppose \u003cb\u003eAcme Software, Inc\u003c/b\u003e is a software publisher known to a user. Suppose it is an Identity, that is, it has a public key, and a set of associated certificates. It is named in the scope using the name \"Acme Software\". No other named Identity in the scope has the same public key. Of course, none has the same name as well.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Identity.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eIdentity\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Signer.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eSigner\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Principal.html\" title\u003d\"interface in java.security\"\u003e\u003ccode\u003ePrincipal\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Key.html\" title\u003d\"interface in java.security\"\u003e\u003ccode\u003eKey\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.security.IdentityScope\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}