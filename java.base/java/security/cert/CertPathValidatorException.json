{
  "packageName": "java.security.cert",
  "simpleName": "CertPathValidatorException",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.security.GeneralSecurityException",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.security.cert.CertPath",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getCertPath",
      "comment": "Returns the certification path that was being validated when the exception was thrown.",
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003eCertPath\u003c/code\u003e that was being validated when the exception was thrown (or \n\u003ccode\u003enull\u003c/code\u003e if not specified)"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIndex",
      "comment": "Returns the index of the certificate in the certification path that caused the exception to be thrown. Note that the list of certificates in a CertPath is zero based. If no index has been set, -1 is returned.",
      "tagMap": {
        "return": [
          "the index that has been set, or -1 if none has been set"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.cert.CertPathValidatorException$Reason",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getReason",
      "comment": "Returns the reason that the validation failed. The reason is associated with the index of the certificate returned by getIndex().",
      "tagMap": {
        "return": [
          "the reason that the validation failed, or \n\u003ccode\u003eBasicReason.UNSPECIFIED\u003c/code\u003e if a reason has not been specified"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a CertPathValidatorException with no detail message.",
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "msg"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a CertPathValidatorException with the given detail message. A detail message is a String that describes this particular exception.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emsg\u003c/code\u003e - the detail message"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.Throwable",
            "type": "Class"
          },
          "field": {
            "name": "cause"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a CertPathValidatorException that wraps the specified throwable. This allows any exception to be converted into a CertPathValidatorException, while retaining information about the wrapped exception, which may be useful for debugging. The detail message is set to (cause\u003d\u003dnull ? null : cause.toString()) (which typically contains the class and detail message of cause).",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecause\u003c/code\u003e - the cause (which is saved for later retrieval by the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html#getCause()\"\u003e\u003ccode\u003egetCause()\u003c/code\u003e\u003c/a\u003e method). (A \n\u003ccode\u003enull\u003c/code\u003e value is permitted, and indicates that the cause is nonexistent or unknown.)"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "msg"
          }
        },
        {
          "type": {
            "name": "java.lang.Throwable",
            "type": "Class"
          },
          "field": {
            "name": "cause"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a CertPathValidatorException with the specified detail message and cause.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emsg\u003c/code\u003e - the detail message",
          "\u003ccode\u003ecause\u003c/code\u003e - the cause (which is saved for later retrieval by the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html#getCause()\"\u003e\u003ccode\u003egetCause()\u003c/code\u003e\u003c/a\u003e method). (A \n\u003ccode\u003enull\u003c/code\u003e value is permitted, and indicates that the cause is nonexistent or unknown.)"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "msg"
          }
        },
        {
          "type": {
            "name": "java.lang.Throwable",
            "type": "Class"
          },
          "field": {
            "name": "cause"
          }
        },
        {
          "type": {
            "name": "java.security.cert.CertPath",
            "type": "Class"
          },
          "field": {
            "name": "certPath"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a CertPathValidatorException with the specified detail message, cause, certification path, and index.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emsg\u003c/code\u003e - the detail message (or \n\u003ccode\u003enull\u003c/code\u003e if none)",
          "\u003ccode\u003ecause\u003c/code\u003e - the cause (or \n\u003ccode\u003enull\u003c/code\u003e if none)",
          "\u003ccode\u003ecertPath\u003c/code\u003e - the certification path that was in the process of being validated when the error was encountered",
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the certificate in the certification path that caused the error (or -1 if not applicable). Note that the list of certificates in a \n\u003ccode\u003eCertPath\u003c/code\u003e is zero based."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the index is out of range \n\u003ccode\u003e(index \u0026lt; -1 || (certPath !\u003d null \u0026amp;\u0026amp; index \u0026gt;\u003d certPath.getCertificates().size()) \u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ecertPath\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e and \n\u003ccode\u003eindex\u003c/code\u003e is not -1"
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "msg"
          }
        },
        {
          "type": {
            "name": "java.lang.Throwable",
            "type": "Class"
          },
          "field": {
            "name": "cause"
          }
        },
        {
          "type": {
            "name": "java.security.cert.CertPath",
            "type": "Class"
          },
          "field": {
            "name": "certPath"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        },
        {
          "type": {
            "name": "java.security.cert.CertPathValidatorException$Reason",
            "type": "Class"
          },
          "field": {
            "name": "reason"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a CertPathValidatorException with the specified detail message, cause, certification path, index, and reason.",
      "tagMap": {
        "param": [
          "\u003ccode\u003emsg\u003c/code\u003e - the detail message (or \n\u003ccode\u003enull\u003c/code\u003e if none)",
          "\u003ccode\u003ecause\u003c/code\u003e - the cause (or \n\u003ccode\u003enull\u003c/code\u003e if none)",
          "\u003ccode\u003ecertPath\u003c/code\u003e - the certification path that was in the process of being validated when the error was encountered",
          "\u003ccode\u003eindex\u003c/code\u003e - the index of the certificate in the certification path that caused the error (or -1 if not applicable). Note that the list of certificates in a \n\u003ccode\u003eCertPath\u003c/code\u003e is zero based.",
          "\u003ccode\u003ereason\u003c/code\u003e - the reason the validation failed"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IndexOutOfBoundsException.html\" title\u003d\"class in java.lang\"\u003eIndexOutOfBoundsException\u003c/a\u003e\u003c/code\u003e - if the index is out of range \n\u003ccode\u003e(index \u0026lt; -1 || (certPath !\u003d null \u0026amp;\u0026amp; index \u0026gt;\u003d certPath.getCertificates().size()) \u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ecertPath\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e and \n\u003ccode\u003eindex\u003c/code\u003e is not -1",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if \n\u003ccode\u003ereason\u003c/code\u003e is \n\u003ccode\u003enull\u003c/code\u003e"
        ],
        "since": [
          "1.7"
        ]
      }
    }
  ],
  "innerClasses": [
    "java.security.cert.CertPathValidatorException$BasicReason",
    "java.security.cert.CertPathValidatorException$Reason"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.security.cert.CertPathValidatorException",
  "comment": "An exception indicating one of a variety of problems encountered when validating a certification path. \n\u003cp\u003e A \u003ccode\u003eCertPathValidatorException\u003c/code\u003e provides support for wrapping exceptions. The \u003ca href\u003d\"../../lang/Throwable.html#getCause()\"\u003e\u003ccode\u003egetCause\u003c/code\u003e\u003c/a\u003e method returns the throwable, if any, that caused this exception to be thrown. \u003c/p\u003e\n\u003cp\u003e A \u003ccode\u003eCertPathValidatorException\u003c/code\u003e may also include the certification path that was being validated when the exception was thrown, the index of the certificate in the certification path that caused the exception to be thrown, and the reason that caused the failure. Use the \u003ca href\u003d\"#getCertPath()\"\u003e\u003ccode\u003egetCertPath\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#getIndex()\"\u003e\u003ccode\u003egetIndex\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"#getReason()\"\u003e\u003ccode\u003egetReason\u003c/code\u003e\u003c/a\u003e methods to retrieve this information. \u003c/p\u003e\n\u003cp\u003e \u003cb\u003eConcurrent Access\u003c/b\u003e \u003c/p\u003e\n\u003cp\u003e Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertPathValidator.html\" title\u003d\"class in java.security.cert\"\u003e\u003ccode\u003eCertPathValidator\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.security.cert.CertPathValidatorException\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}