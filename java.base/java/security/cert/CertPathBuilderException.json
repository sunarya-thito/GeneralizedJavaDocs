{
  "packageName": "java.security.cert",
  "simpleName": "CertPathBuilderException",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.security.GeneralSecurityException",
    "type": "Class"
  },
  "members": [
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a CertPathBuilderException with null as its detail message.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "msg",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a CertPathBuilderException with the given detail message. The detail message is a String that describes this particular exception in more detail.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emsg\u003c/code\u003e - the detail message"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Throwable",
            "type": "Class"
          },
          "name": "cause",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a CertPathBuilderException that wraps the specified throwable. This allows any exception to be converted into a CertPathBuilderException, while retaining information about the wrapped exception, which may be useful for debugging. The detail message is set to (cause\u003d\u003dnull ? null : cause.toString()) (which typically contains the class and detail message of cause).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecause\u003c/code\u003e - the cause (which is saved for later retrieval by the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html#getCause()\"\u003e\u003ccode\u003egetCause()\u003c/code\u003e\u003c/a\u003e method). (A \n\u003ccode\u003enull\u003c/code\u003e value is permitted, and indicates that the cause is nonexistent or unknown.)"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "msg",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Throwable",
            "type": "Class"
          },
          "name": "cause",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a CertPathBuilderException with the specified detail message and cause.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003emsg\u003c/code\u003e - the detail message",
          "\u003ccode\u003ecause\u003c/code\u003e - the cause (which is saved for later retrieval by the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Throwable.html#getCause()\"\u003e\u003ccode\u003egetCause()\u003c/code\u003e\u003c/a\u003e method). (A \n\u003ccode\u003enull\u003c/code\u003e value is permitted, and indicates that the cause is nonexistent or unknown.)"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.security.cert.CertPathBuilderException",
  "comment": "An exception indicating one of a variety of problems encountered when building a certification path with a \n\u003ccode\u003eCertPathBuilder\u003c/code\u003e. \n\u003cp\u003e A \u003ccode\u003eCertPathBuilderException\u003c/code\u003e provides support for wrapping exceptions. The \u003ca href\u003d\"../../lang/Throwable.html#getCause()\"\u003e\u003ccode\u003egetCause\u003c/code\u003e\u003c/a\u003e method returns the throwable, if any, that caused this exception to be thrown. \u003c/p\u003e\n\u003cp\u003e \u003cb\u003eConcurrent Access\u003c/b\u003e \u003c/p\u003e\n\u003cp\u003e Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertPathBuilder.html\" title\u003d\"class in java.security.cert\"\u003e\u003ccode\u003eCertPathBuilder\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.security.cert.CertPathBuilderException\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}