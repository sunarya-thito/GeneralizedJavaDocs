{
  "packageName": "java.security.cert",
  "simpleName": "CertPathChecker",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.cert.CertPathValidatorException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "forward",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "init",
      "comment": "Initializes the internal state of this CertPathChecker. The forward flag specifies the order that certificates will be passed to the check method (forward or reverse).",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eforward\u003c/code\u003e - the order that certificates are presented to the \n\u003ccode\u003echeck\u003c/code\u003e method. If \n\u003ccode\u003etrue\u003c/code\u003e, certificates are presented from target to trust anchor (forward); if \n\u003ccode\u003efalse\u003c/code\u003e, from trust anchor to target (reverse)."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertPathValidatorException.html\" title\u003d\"class in java.security.cert\"\u003eCertPathValidatorException\u003c/a\u003e\u003c/code\u003e - if this \n\u003ccode\u003eCertPathChecker\u003c/code\u003e is unable to check certificates in the specified order"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isForwardCheckingSupported",
      "comment": "Indicates if forward checking is supported. Forward checking refers to the ability of the CertPathChecker to perform its checks when certificates are presented to the check method in the forward direction (from target to trust anchor).",
      "annotations": [],
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if forward checking is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.cert.CertPathValidatorException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.cert.Certificate",
            "type": "Class"
          },
          "name": "cert",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "check",
      "comment": "Performs the check(s) on the specified certificate using its internal state. The certificates are presented in the order specified by the init method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ecert\u003c/code\u003e - the \n\u003ccode\u003eCertificate\u003c/code\u003e to be checked"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertPathValidatorException.html\" title\u003d\"class in java.security.cert\"\u003eCertPathValidatorException\u003c/a\u003e\u003c/code\u003e - if the specified certificate does not pass the check"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.security.cert.CertPathChecker",
  "annotations": [],
  "tagMap": {
    "since": [
      "1.8"
    ]
  }
}