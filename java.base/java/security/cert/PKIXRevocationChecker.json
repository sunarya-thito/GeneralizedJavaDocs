{
  "packageName": "java.security.cert",
  "simpleName": "PKIXRevocationChecker",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.security.cert.PKIXCertPathChecker",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.net.URI",
            "type": "Class"
          },
          "field": {
            "name": "uri"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOcspResponder",
      "comment": "Sets the URI that identifies the location of the OCSP responder. This overrides the ocsp.responderURL security property and any responder specified in a certificate\u0027s Authority Information Access Extension, as defined in RFC 5280.",
      "tagMap": {
        "param": [
          "\u003ccode\u003euri\u003c/code\u003e - the responder URI"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.URI",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOcspResponder",
      "comment": "Gets the URI that identifies the location of the OCSP responder. This overrides the ocsp.responderURL security property. If this parameter or the ocsp.responderURL property is not set, the location is determined from the certificate\u0027s Authority Information Access Extension, as defined in RFC 5280.",
      "tagMap": {
        "return": [
          "the responder URI, or \n\u003ccode\u003enull\u003c/code\u003e if not set"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.security.cert.X509Certificate",
            "type": "Class"
          },
          "field": {
            "name": "cert"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOcspResponderCert",
      "comment": "Sets the OCSP responder\u0027s certificate. This overrides the ocsp.responderCertSubjectName, ocsp.responderCertIssuerName, and ocsp.responderCertSerialNumber security properties.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecert\u003c/code\u003e - the responder\u0027s certificate"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.cert.X509Certificate",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOcspResponderCert",
      "comment": "Gets the OCSP responder\u0027s certificate. This overrides the ocsp.responderCertSubjectName, ocsp.responderCertIssuerName, and ocsp.responderCertSerialNumber security properties. If this parameter or the aforementioned properties are not set, then the responder\u0027s certificate is determined as specified in RFC 2560.",
      "tagMap": {
        "return": [
          "the responder\u0027s certificate, or \n\u003ccode\u003enull\u003c/code\u003e if not set"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "java.security.cert.Extension",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "extensions"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOcspExtensions",
      "comment": "Sets the optional OCSP request extensions.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eextensions\u003c/code\u003e - a list of extensions. The list is copied to protect against subsequent modification."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.security.cert.Extension",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOcspExtensions",
      "comment": "Gets the optional OCSP request extensions.",
      "tagMap": {
        "return": [
          "an unmodifiable list of extensions. The list is empty if no extensions have been specified."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.security.cert.X509Certificate",
                "type": "Class"
              },
              {
                "name": "byte",
                "type": "Class",
                "arrayDimensions": [
                  {}
                ]
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "responses"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOcspResponses",
      "comment": "Sets the OCSP responses. These responses are used to determine the revocation status of the specified certificates when OCSP is used.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eresponses\u003c/code\u003e - a map of OCSP responses. Each key is an \n\u003ccode\u003eX509Certificate\u003c/code\u003e that maps to the corresponding DER-encoded OCSP response for that certificate. A deep copy of the map is performed to protect against subsequent modification."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map",
        "parameters": [
          {
            "name": "java.security.cert.X509Certificate",
            "type": "Class"
          },
          {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOcspResponses",
      "comment": "Gets the OCSP responses. These responses are used to determine the revocation status of the specified certificates when OCSP is used.",
      "tagMap": {
        "return": [
          "a map of OCSP responses. Each key is an \n\u003ccode\u003eX509Certificate\u003c/code\u003e that maps to the corresponding DER-encoded OCSP response for that certificate. A deep copy of the map is returned to protect against subsequent modification. Returns an empty map if no responses have been specified."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.security.cert.PKIXRevocationChecker$Option",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "options"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setOptions",
      "comment": "Sets the revocation options.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eoptions\u003c/code\u003e - a set of revocation options. The set is copied to protect against subsequent modification."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.security.cert.PKIXRevocationChecker$Option",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOptions",
      "comment": "Gets the revocation options.",
      "tagMap": {
        "return": [
          "an unmodifiable set of revocation options. The set is empty if no options have been specified."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.security.cert.CertPathValidatorException",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getSoftFailExceptions",
      "comment": "Returns a list containing the exceptions that are ignored by the revocation checker when the SOFT_FAIL option is set. The list is cleared each time init is called. The list is ordered in ascending order according to the certificate index returned by getIndex method of each entry. An implementation of PKIXRevocationChecker is responsible for adding the ignored exceptions to the list.",
      "tagMap": {
        "return": [
          "an unmodifiable list containing the ignored exceptions. The list is empty if no exceptions have been ignored."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.cert.PKIXRevocationChecker",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Description copied from class: PKIXCertPathChecker",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/PKIXCertPathChecker.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/PKIXCertPathChecker.html\" title\u003d\"class in java.security.cert\"\u003ePKIXCertPathChecker\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a copy of this \n\u003ccode\u003ePKIXCertPathChecker\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Default constructor.",
      "tagMap": {}
    }
  ],
  "innerClasses": [
    "java.security.cert.PKIXRevocationChecker$Option"
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.security.cert.PKIXRevocationChecker",
  "comment": "A \n\u003ccode\u003ePKIXCertPathChecker\u003c/code\u003e for checking the revocation status of certificates with the PKIX algorithm. \n\u003cp\u003eA \u003ccode\u003ePKIXRevocationChecker\u003c/code\u003e checks the revocation status of certificates with the Online Certificate Status Protocol (OCSP) or Certificate Revocation Lists (CRLs). OCSP is described in RFC 2560 and is a network protocol for determining the status of a certificate. A CRL is a time-stamped list identifying revoked certificates, and RFC 5280 describes an algorithm for determining the revocation status of certificates using CRLs. \u003c/p\u003e\n\u003cp\u003eEach \u003ccode\u003ePKIXRevocationChecker\u003c/code\u003e must be able to check the revocation status of certificates with OCSP and CRLs. By default, OCSP is the preferred mechanism for checking revocation status, with CRLs as the fallback mechanism. However, this preference can be switched to CRLs with the \u003ca href\u003d\"PKIXRevocationChecker.Option.html#PREFER_CRLS\"\u003e\u003ccode\u003ePREFER_CRLS\u003c/code\u003e\u003c/a\u003e option. In addition, the fallback mechanism can be disabled with the \u003ca href\u003d\"PKIXRevocationChecker.Option.html#NO_FALLBACK\"\u003e\u003ccode\u003eNO_FALLBACK\u003c/code\u003e\u003c/a\u003e option. \u003c/p\u003e\n\u003cp\u003eA \u003ccode\u003ePKIXRevocationChecker\u003c/code\u003e is obtained by calling the \u003ca href\u003d\"CertPathValidator.html#getRevocationChecker()\"\u003e\u003ccode\u003egetRevocationChecker\u003c/code\u003e\u003c/a\u003e method of a PKIX \u003ccode\u003eCertPathValidator\u003c/code\u003e. Additional parameters and options specific to revocation can be set (by calling the \u003ca href\u003d\"#setOcspResponder(java.net.URI)\"\u003e\u003ccode\u003esetOcspResponder\u003c/code\u003e\u003c/a\u003e method for instance). The \u003ccode\u003ePKIXRevocationChecker\u003c/code\u003e is added to a \u003ccode\u003ePKIXParameters\u003c/code\u003e object using the \u003ca href\u003d\"PKIXParameters.html#addCertPathChecker(java.security.cert.PKIXCertPathChecker)\"\u003e\u003ccode\u003eaddCertPathChecker\u003c/code\u003e\u003c/a\u003e or \u003ca href\u003d\"PKIXParameters.html#setCertPathCheckers(java.util.List)\"\u003e\u003ccode\u003esetCertPathCheckers\u003c/code\u003e\u003c/a\u003e method, and then the \u003ccode\u003ePKIXParameters\u003c/code\u003e is passed along with the \u003ccode\u003eCertPath\u003c/code\u003e to be validated to the \u003ca href\u003d\"CertPathValidator.html#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)\"\u003e\u003ccode\u003evalidate\u003c/code\u003e\u003c/a\u003e method of a PKIX \u003ccode\u003eCertPathValidator\u003c/code\u003e. When supplying a revocation checker in this manner, it will be used to check revocation irrespective of the setting of the \u003ca href\u003d\"PKIXParameters.html#isRevocationEnabled()\"\u003e\u003ccode\u003eRevocationEnabled\u003c/code\u003e\u003c/a\u003e flag. Similarly, a \u003ccode\u003ePKIXRevocationChecker\u003c/code\u003e may be added to a \u003ccode\u003ePKIXBuilderParameters\u003c/code\u003e object for use with a PKIX \u003ccode\u003eCertPathBuilder\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003eNote that when a \u003ccode\u003ePKIXRevocationChecker\u003c/code\u003e is added to \u003ccode\u003ePKIXParameters\u003c/code\u003e, it clones the \u003ccode\u003ePKIXRevocationChecker\u003c/code\u003e; thus any subsequent modifications to the \u003ccode\u003ePKIXRevocationChecker\u003c/code\u003e have no effect. \u003c/p\u003e\n\u003cp\u003eAny parameter that is not set (or is set to \u003ccode\u003enull\u003c/code\u003e) will be set to the default value for that parameter. \u003c/p\u003e\n\u003cp\u003e\u003cb\u003eConcurrent Access\u003c/b\u003e \u003c/p\u003e\n\u003cp\u003eUnless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"http://www.ietf.org/rfc/rfc2560.txt\"\u003e\u003ci\u003eRFC\u0026nbsp;2560: X.509 Internet Public Key Infrastructure Online Certificate Status Protocol - OCSP\u003c/i\u003e\u003c/a\u003e, \n\u003cbr\u003e\n\u003ca href\u003d\"http://www.ietf.org/rfc/rfc5280.txt\"\u003e\u003ci\u003eRFC\u0026nbsp;5280: Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\u003c/i\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.8"
    ]
  }
}