{
  "packageName": "java.security.cert",
  "simpleName": "PKIXCertPathChecker",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.cert.CertPathValidatorException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "forward"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "init",
      "comment": "Initializes the internal state of this PKIXCertPathChecker. The forward flag specifies the order that certificates will be passed to the check method (forward or reverse). A PKIXCertPathChecker must support reverse checking and may support forward checking.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertPathChecker.html#init(boolean)\"\u003einit\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertPathChecker.html\" title\u003d\"interface in java.security.cert\"\u003eCertPathChecker\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eforward\u003c/code\u003e - the order that certificates are presented to the \n\u003ccode\u003echeck\u003c/code\u003e method. If \n\u003ccode\u003etrue\u003c/code\u003e, certificates are presented from target to most-trusted CA (forward); if \n\u003ccode\u003efalse\u003c/code\u003e, from most-trusted CA to target (reverse)."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertPathValidatorException.html\" title\u003d\"class in java.security.cert\"\u003eCertPathValidatorException\u003c/a\u003e\u003c/code\u003e - if this \n\u003ccode\u003ePKIXCertPathChecker\u003c/code\u003e is unable to check certificates in the specified order; it should never be thrown if the forward flag is false since reverse checking must be supported"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "isForwardCheckingSupported",
      "comment": "Indicates if forward checking is supported. Forward checking refers to the ability of the PKIXCertPathChecker to perform its checks when certificates are presented to the check method in the forward direction (from target to most-trusted CA).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertPathChecker.html#isForwardCheckingSupported()\"\u003eisForwardCheckingSupported\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertPathChecker.html\" title\u003d\"interface in java.security.cert\"\u003eCertPathChecker\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if forward checking is supported, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getSupportedExtensions",
      "comment": "Returns an immutable Set of X.509 certificate extensions that this PKIXCertPathChecker supports (i.e. recognizes, is able to process), or null if no extensions are supported. Each element of the set is a String representing the Object Identifier (OID) of the X.509 extension that is supported. The OID is represented by a set of nonnegative integers separated by periods. All X.509 certificate extensions that a PKIXCertPathChecker might possibly be able to process should be included in the set.",
      "tagMap": {
        "return": [
          "an immutable \n\u003ccode\u003eSet\u003c/code\u003e of X.509 extension OIDs (in \n\u003ccode\u003eString\u003c/code\u003e format) supported by this \n\u003ccode\u003ePKIXCertPathChecker\u003c/code\u003e, or \n\u003ccode\u003enull\u003c/code\u003e if no extensions are supported"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.cert.CertPathValidatorException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.security.cert.Certificate",
            "type": "Class"
          },
          "field": {
            "name": "cert"
          }
        },
        {
          "type": {
            "name": "java.util.Collection",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "unresolvedCritExts"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "check",
      "comment": "Performs the check(s) on the specified certificate using its internal state and removes any critical extensions that it processes from the specified collection of OID strings that represent the unresolved critical extensions. The certificates are presented in the order specified by the init method.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecert\u003c/code\u003e - the \n\u003ccode\u003eCertificate\u003c/code\u003e to be checked",
          "\u003ccode\u003eunresolvedCritExts\u003c/code\u003e - a \n\u003ccode\u003eCollection\u003c/code\u003e of OID strings representing the current set of unresolved critical extensions"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertPathValidatorException.html\" title\u003d\"class in java.security.cert\"\u003eCertPathValidatorException\u003c/a\u003e\u003c/code\u003e - if the specified certificate does not pass the check"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.cert.CertPathValidatorException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.security.cert.Certificate",
            "type": "Class"
          },
          "field": {
            "name": "cert"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "check",
      "comment": "Performs the check(s) on the specified certificate using its internal state. The certificates are presented in the order specified by the init method. This implementation calls check(cert, java.util.Collections.\u003cString\u003eemptySet()).",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertPathChecker.html#check(java.security.cert.Certificate)\"\u003echeck\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertPathChecker.html\" title\u003d\"interface in java.security.cert\"\u003eCertPathChecker\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ecert\u003c/code\u003e - the \n\u003ccode\u003eCertificate\u003c/code\u003e to be checked"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertPathValidatorException.html\" title\u003d\"class in java.security.cert\"\u003eCertPathValidatorException\u003c/a\u003e\u003c/code\u003e - if the specified certificate does not pass the check"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "clone",
      "comment": "Returns a clone of this object. Calls the Object.clone() method. All subclasses which maintain state must support and override this method, if necessary.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Cloneable.html\" title\u003d\"interface in java.lang\"\u003e\u003ccode\u003eCloneable\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#clone()\"\u003eclone\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a copy of this \n\u003ccode\u003ePKIXCertPathChecker\u003c/code\u003e"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Default constructor.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.security.cert.PKIXCertPathChecker",
  "comment": "An abstract class that performs one or more checks on an \n\u003ccode\u003eX509Certificate\u003c/code\u003e. \n\u003cp\u003eA concrete implementation of the \u003ccode\u003ePKIXCertPathChecker\u003c/code\u003e class can be created to extend the PKIX certification path validation algorithm. For example, an implementation may check for and process a critical private extension of each certificate in a certification path. \u003c/p\u003e\n\u003cp\u003eInstances of \u003ccode\u003ePKIXCertPathChecker\u003c/code\u003e are passed as parameters using the \u003ca href\u003d\"PKIXParameters.html#setCertPathCheckers(java.util.List)\"\u003e\u003ccode\u003esetCertPathCheckers\u003c/code\u003e\u003c/a\u003e or \u003ca href\u003d\"PKIXParameters.html#addCertPathChecker(java.security.cert.PKIXCertPathChecker)\"\u003e\u003ccode\u003eaddCertPathChecker\u003c/code\u003e\u003c/a\u003e methods of the \u003ccode\u003ePKIXParameters\u003c/code\u003e and \u003ccode\u003ePKIXBuilderParameters\u003c/code\u003e class. Each of the \u003ccode\u003ePKIXCertPathChecker\u003c/code\u003es \u003ca href\u003d\"#check(java.security.cert.Certificate,java.util.Collection)\"\u003e\u003ccode\u003echeck\u003c/code\u003e\u003c/a\u003e methods will be called, in turn, for each certificate processed by a PKIX \u003ccode\u003eCertPathValidator\u003c/code\u003e or \u003ccode\u003eCertPathBuilder\u003c/code\u003e implementation. \u003c/p\u003e\n\u003cp\u003eA \u003ccode\u003ePKIXCertPathChecker\u003c/code\u003e may be called multiple times on successive certificates in a certification path. Concrete subclasses are expected to maintain any internal state that may be necessary to check successive certificates. The \u003ca href\u003d\"#init(boolean)\"\u003e\u003ccode\u003einit\u003c/code\u003e\u003c/a\u003e method is used to initialize the internal state of the checker so that the certificates of a new certification path may be checked. A stateful implementation \u003cb\u003emust\u003c/b\u003e override the \u003ca href\u003d\"#clone()\"\u003e\u003ccode\u003eclone\u003c/code\u003e\u003c/a\u003e method if necessary in order to allow a PKIX \u003ccode\u003eCertPathBuilder\u003c/code\u003e to efficiently backtrack and try other paths. In these situations, the \u003ccode\u003eCertPathBuilder\u003c/code\u003e is able to restore prior path validation states by restoring the cloned \u003ccode\u003ePKIXCertPathChecker\u003c/code\u003es. \u003c/p\u003e\n\u003cp\u003eThe order in which the certificates are presented to the \u003ccode\u003ePKIXCertPathChecker\u003c/code\u003e may be either in the forward direction (from target to most-trusted CA) or in the reverse direction (from most-trusted CA to target). A \u003ccode\u003ePKIXCertPathChecker\u003c/code\u003e implementation \u003cb\u003emust\u003c/b\u003e support reverse checking (the ability to perform its checks when it is presented with certificates in the reverse direction) and \u003cb\u003emay\u003c/b\u003e support forward checking (the ability to perform its checks when it is presented with certificates in the forward direction). The \u003ca href\u003d\"#isForwardCheckingSupported()\"\u003e\u003ccode\u003eisForwardCheckingSupported\u003c/code\u003e\u003c/a\u003e method indicates whether forward checking is supported. \u003c/p\u003e\n\u003cp\u003e Additional input parameters required for executing the check may be specified through constructors of concrete implementations of this class. \u003c/p\u003e\n\u003cp\u003e \u003cb\u003eConcurrent Access\u003c/b\u003e \u003c/p\u003e\n\u003cp\u003e Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/PKIXParameters.html\" title\u003d\"class in java.security.cert\"\u003e\u003ccode\u003ePKIXParameters\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/PKIXBuilderParameters.html\" title\u003d\"class in java.security.cert\"\u003e\u003ccode\u003ePKIXBuilderParameters\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}