{
  "packageName": "java.security.cert",
  "simpleName": "CertStoreParameters",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Cloneable",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clone",
      "comment": "Makes a copy of this CertStoreParameters. The precise meaning of \"copy\" may depend on the class of the CertStoreParameters object. A typical implementation performs a \"deep copy\" of this object, but this is not an absolute requirement. Some implementations may perform a \"shallow copy\" of some or all of the fields of this object. Note that the CertStore.getInstance methods make a copy of the specified CertStoreParameters. A deep copy implementation of clone is safer and more robust, as it prevents the caller from corrupting a shared CertStore by subsequently modifying the contents of its initialization parameters. However, a shallow copy implementation of clone is more appropriate for applications that need to hold a reference to a parameter contained in the CertStoreParameters. For example, a shallow copy clone allows an application to release the resources of a particular CertStore initialization parameter immediately, rather than waiting for the garbage collection mechanism. This should be done with the utmost care, since the CertStore may still be in use by other threads. Each subclass should state the precise behavior of this method so that users and developers know what to expect.",
      "annotations": [],
      "tagMap": {
        "return": [
          "a copy of this \n\u003ccode\u003eCertStoreParameters\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.security.cert.CertStoreParameters",
  "comment": "A specification of \n\u003ccode\u003eCertStore\u003c/code\u003e parameters. \n\u003cp\u003e The purpose of this interface is to group (and provide type safety for) all \u003ccode\u003eCertStore\u003c/code\u003e parameter specifications. All \u003ccode\u003eCertStore\u003c/code\u003e parameter specifications must implement this interface. \u003c/p\u003e\n\u003cp\u003e Typically, a \u003ccode\u003eCertStoreParameters\u003c/code\u003e object is passed as a parameter to one of the \u003ca href\u003d\"CertStore.html#getInstance(java.lang.String,java.security.cert.CertStoreParameters)\"\u003e\u003ccode\u003eCertStore.getInstance\u003c/code\u003e\u003c/a\u003e methods. The \u003ccode\u003egetInstance\u003c/code\u003e method returns a \u003ccode\u003eCertStore\u003c/code\u003e that is used for retrieving \u003ccode\u003eCertificate\u003c/code\u003es and \u003ccode\u003eCRL\u003c/code\u003es. The \u003ccode\u003eCertStore\u003c/code\u003e that is returned is initialized with the specified parameters. The type of parameters needed may vary between different types of \u003ccode\u003eCertStore\u003c/code\u003es.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertStore.html#getInstance(java.lang.String,java.security.cert.CertStoreParameters)\"\u003e\u003ccode\u003eCertStore.getInstance(java.lang.String, java.security.cert.CertStoreParameters)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}