{
  "packageName": "java.security.cert",
  "simpleName": "CRLSelector",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Cloneable",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.security.cert.CRL",
            "type": "Class"
          },
          "field": {
            "name": "crl"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "match",
      "comment": "Decides whether a CRL should be selected.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecrl\u003c/code\u003e - the \n\u003ccode\u003eCRL\u003c/code\u003e to be checked"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the \n\u003ccode\u003eCRL\u003c/code\u003e should be selected, \n\u003ccode\u003efalse\u003c/code\u003e otherwise"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "clone",
      "comment": "Makes a copy of this CRLSelector. Changes to the copy will not affect the original and vice versa.",
      "tagMap": {
        "return": [
          "a copy of this \n\u003ccode\u003eCRLSelector\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.security.cert.CRLSelector",
  "comment": "A selector that defines a set of criteria for selecting \n\u003ccode\u003eCRL\u003c/code\u003es. Classes that implement this interface are often used to specify which \n\u003ccode\u003eCRL\u003c/code\u003es should be retrieved from a \n\u003ccode\u003eCertStore\u003c/code\u003e. \n\u003cp\u003e \u003cb\u003eConcurrent Access\u003c/b\u003e \u003c/p\u003e\n\u003cp\u003e Unless otherwise specified, the methods defined in this interface are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CRL.html\" title\u003d\"class in java.security.cert\"\u003e\u003ccode\u003eCRL\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertStore.html\" title\u003d\"class in java.security.cert\"\u003e\u003ccode\u003eCertStore\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertStore.html#getCRLs(java.security.cert.CRLSelector)\"\u003e\u003ccode\u003eCertStore.getCRLs(java.security.cert.CRLSelector)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}