{
  "packageName": "java.security.cert",
  "simpleName": "X509CRL",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.security.cert.CRL",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "other"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares this CRL for equality with the given object. If the other object is an instanceof X509CRL, then its encoded form is retrieved and compared with the encoded form of this CRL.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003e\u003ccode\u003eObject.hashCode()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/util/HashMap.html\" title\u003d\"class in java.util\"\u003e\u003ccode\u003eHashMap\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003eother\u003c/code\u003e - the object to test for equality with this CRL."
        ],
        "return": [
          "true iff the encoded forms of the two CRLs match, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "hashCode",
      "comment": "Returns a hashcode value for this CRL from its encoded form.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003e\u003ccode\u003eObject.equals(java.lang.Object)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#identityHashCode(java.lang.Object)\"\u003e\u003ccode\u003eSystem.identityHashCode(java.lang.Object)\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#hashCode()\"\u003ehashCode\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the hashcode value."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "throwsClasses": [
        {
          "name": "java.security.cert.CRLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getEncoded",
      "comment": "Returns the ASN.1 DER-encoded form of this CRL.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CRLException.html\" title\u003d\"class in java.security.cert\"\u003eCRLException\u003c/a\u003e\u003c/code\u003e - if an encoding error occurs."
        ],
        "return": [
          "the encoded form of this certificate"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.cert.CRLException",
          "type": "Class"
        },
        {
          "name": "java.security.NoSuchAlgorithmException",
          "type": "Class"
        },
        {
          "name": "java.security.InvalidKeyException",
          "type": "Class"
        },
        {
          "name": "java.security.NoSuchProviderException",
          "type": "Class"
        },
        {
          "name": "java.security.SignatureException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.security.PublicKey",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "verify",
      "comment": "Verifies that this CRL was signed using the private key that corresponds to the given public key.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the PublicKey used to carry out the verification."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchAlgorithmException.html\" title\u003d\"class in java.security\"\u003eNoSuchAlgorithmException\u003c/a\u003e\u003c/code\u003e - on unsupported signature algorithms.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/InvalidKeyException.html\" title\u003d\"class in java.security\"\u003eInvalidKeyException\u003c/a\u003e\u003c/code\u003e - on incorrect key.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchProviderException.html\" title\u003d\"class in java.security\"\u003eNoSuchProviderException\u003c/a\u003e\u003c/code\u003e - if there\u0027s no default provider.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/SignatureException.html\" title\u003d\"class in java.security\"\u003eSignatureException\u003c/a\u003e\u003c/code\u003e - on signature errors.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CRLException.html\" title\u003d\"class in java.security.cert\"\u003eCRLException\u003c/a\u003e\u003c/code\u003e - on encoding errors."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.cert.CRLException",
          "type": "Class"
        },
        {
          "name": "java.security.NoSuchAlgorithmException",
          "type": "Class"
        },
        {
          "name": "java.security.InvalidKeyException",
          "type": "Class"
        },
        {
          "name": "java.security.NoSuchProviderException",
          "type": "Class"
        },
        {
          "name": "java.security.SignatureException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.security.PublicKey",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "sigProvider"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "verify",
      "comment": "Verifies that this CRL was signed using the private key that corresponds to the given public key. This method uses the signature verification engine supplied by the given provider.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the PublicKey used to carry out the verification.",
          "\u003ccode\u003esigProvider\u003c/code\u003e - the name of the signature provider."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchAlgorithmException.html\" title\u003d\"class in java.security\"\u003eNoSuchAlgorithmException\u003c/a\u003e\u003c/code\u003e - on unsupported signature algorithms.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/InvalidKeyException.html\" title\u003d\"class in java.security\"\u003eInvalidKeyException\u003c/a\u003e\u003c/code\u003e - on incorrect key.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchProviderException.html\" title\u003d\"class in java.security\"\u003eNoSuchProviderException\u003c/a\u003e\u003c/code\u003e - on incorrect provider.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/SignatureException.html\" title\u003d\"class in java.security\"\u003eSignatureException\u003c/a\u003e\u003c/code\u003e - on signature errors.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CRLException.html\" title\u003d\"class in java.security.cert\"\u003eCRLException\u003c/a\u003e\u003c/code\u003e - on encoding errors."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.cert.CRLException",
          "type": "Class"
        },
        {
          "name": "java.security.NoSuchAlgorithmException",
          "type": "Class"
        },
        {
          "name": "java.security.InvalidKeyException",
          "type": "Class"
        },
        {
          "name": "java.security.SignatureException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.security.PublicKey",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.security.Provider",
            "type": "Class"
          },
          "field": {
            "name": "sigProvider"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "verify",
      "comment": "Verifies that this CRL was signed using the private key that corresponds to the given public key. This method uses the signature verification engine supplied by the given provider. Note that the specified Provider object does not have to be registered in the provider list. This method was added to version 1.8 of the Java Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method is not abstract and it provides a default implementation.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the PublicKey used to carry out the verification.",
          "\u003ccode\u003esigProvider\u003c/code\u003e - the signature provider."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/NoSuchAlgorithmException.html\" title\u003d\"class in java.security\"\u003eNoSuchAlgorithmException\u003c/a\u003e\u003c/code\u003e - on unsupported signature algorithms.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/InvalidKeyException.html\" title\u003d\"class in java.security\"\u003eInvalidKeyException\u003c/a\u003e\u003c/code\u003e - on incorrect key.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/SignatureException.html\" title\u003d\"class in java.security\"\u003eSignatureException\u003c/a\u003e\u003c/code\u003e - on signature errors.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CRLException.html\" title\u003d\"class in java.security.cert\"\u003eCRLException\u003c/a\u003e\u003c/code\u003e - on encoding errors."
        ],
        "since": [
          "1.8"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getVersion",
      "comment": "Gets the version (version number) value from the CRL. The ASN.1 definition for this is:  version    Version OPTIONAL,\n             -- if present, must be v2\n\n Version  ::\u003d  INTEGER  {  v1(0), v2(1), v3(2)  }\n             -- v3 does not apply to CRLs but appears for consistency\n             -- with definition of Version for certs",
      "tagMap": {
        "return": [
          "the version number, i.e. 1 or 2."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.Principal",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getIssuerDN",
      "comment": "Gets the issuer (issuer distinguished name) value from the CRL. The issuer name identifies the entity that signed (and issued) the CRL. The issuer name field contains an X.500 distinguished name (DN). The ASN.1 definition for this is:  issuer    Name\n\n Name ::\u003d CHOICE { RDNSequence }\n RDNSequence ::\u003d SEQUENCE OF RelativeDistinguishedName\n RelativeDistinguishedName ::\u003d\n     SET OF AttributeValueAssertion\n\n AttributeValueAssertion ::\u003d SEQUENCE {\n                               AttributeType,\n                               AttributeValue }\n AttributeType ::\u003d OBJECT IDENTIFIER\n AttributeValue ::\u003d ANY\n The Name describes a hierarchical name composed of attributes, such as country name, and corresponding values, such as US. The type of the AttributeValue component is determined by the AttributeType; in general it will be a directoryString. A directoryString is usually one of PrintableString, TeletexString or UniversalString.",
      "annotations": [
        {
          "type": "Deprecated",
          "values": [
            {
              "name": "since",
              "value": "16"
            }
          ]
        }
      ],
      "tagMap": {
        "return": [
          "a Principal whose name is the issuer distinguished name."
        ]
      }
    },
    {
      "returnType": {
        "name": "javax.security.auth.x500.X500Principal",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIssuerX500Principal",
      "comment": "Returns the issuer (issuer distinguished name) value from the CRL as an X500Principal. It is recommended that subclasses override this method.",
      "tagMap": {
        "return": [
          "an \n\u003ccode\u003eX500Principal\u003c/code\u003e representing the issuer distinguished name"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Date",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getThisUpdate",
      "comment": "Gets the thisUpdate date from the CRL. The ASN.1 definition for this is:  thisUpdate   ChoiceOfTime\n ChoiceOfTime ::\u003d CHOICE {\n     utcTime        UTCTime,\n     generalTime    GeneralizedTime }",
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003ethisUpdate\u003c/code\u003e date from the CRL."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Date",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getNextUpdate",
      "comment": "Gets the nextUpdate date from the CRL.",
      "tagMap": {
        "return": [
          "the \n\u003ccode\u003enextUpdate\u003c/code\u003e date from the CRL, or null if not present."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.cert.X509CRLEntry",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.math.BigInteger",
            "type": "Class"
          },
          "field": {
            "name": "serialNumber"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getRevokedCertificate",
      "comment": "Gets the CRL entry, if any, with the given certificate serialNumber.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/X509CRLEntry.html\" title\u003d\"class in java.security.cert\"\u003e\u003ccode\u003eX509CRLEntry\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eserialNumber\u003c/code\u003e - the serial number of the certificate for which a CRL entry is to be looked up"
        ],
        "return": [
          "the entry with the given serial number, or null if no such entry exists in this CRL."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.cert.X509CRLEntry",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.security.cert.X509Certificate",
            "type": "Class"
          },
          "field": {
            "name": "certificate"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRevokedCertificate",
      "comment": "Get the CRL entry, if any, for the given certificate. This method can be used to lookup CRL entries in indirect CRLs, that means CRLs that contain entries from issuers other than the CRL issuer. The default implementation will only return entries for certificates issued by the CRL issuer. Subclasses that wish to support indirect CRLs should override this method.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ecertificate\u003c/code\u003e - the certificate for which a CRL entry is to be looked up"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if certificate is null"
        ],
        "return": [
          "the entry for the given certificate, or null if no such entry exists in this CRL."
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "upperBounds": [
              {
                "name": "java.security.cert.X509CRLEntry",
                "type": "Class"
              }
            ],
            "type": "Wildcard"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getRevokedCertificates",
      "comment": "Gets all the entries from this CRL. This returns a Set of X509CRLEntry objects.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/X509CRLEntry.html\" title\u003d\"class in java.security.cert\"\u003e\u003ccode\u003eX509CRLEntry\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "all the entries or null if there are none present."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "throwsClasses": [
        {
          "name": "java.security.cert.CRLException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getTBSCertList",
      "comment": "Gets the DER-encoded CRL information, the tbsCertList from this CRL. This can be used to verify the signature independently.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CRLException.html\" title\u003d\"class in java.security.cert\"\u003eCRLException\u003c/a\u003e\u003c/code\u003e - if an encoding error occurs."
        ],
        "return": [
          "the DER-encoded CRL information."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getSignature",
      "comment": "Gets the signature value (the raw signature bits) from the CRL. The ASN.1 definition for this is:  signature     BIT STRING",
      "tagMap": {
        "return": [
          "the signature."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getSigAlgName",
      "comment": "Gets the signature algorithm name for the CRL signature algorithm. An example is the string \"SHA256withRSA\". The ASN.1 definition for this is:  signatureAlgorithm   AlgorithmIdentifier\n\n AlgorithmIdentifier  ::\u003d  SEQUENCE  {\n     algorithm               OBJECT IDENTIFIER,\n     parameters              ANY DEFINED BY algorithm OPTIONAL  }\n                             -- contains a value of the type\n                             -- registered for use with the\n                             -- algorithm object identifier value\n The algorithm name is determined from the algorithm OID string.",
      "tagMap": {
        "return": [
          "the signature algorithm name."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getSigAlgOID",
      "comment": "Gets the signature algorithm OID string from the CRL. An OID is represented by a set of nonnegative whole numbers separated by periods. For example, the string \"1.2.840.10040.4.3\" identifies the SHA-1 with DSA signature algorithm defined in RFC 3279: Algorithms and Identifiers for the Internet X.509 Public Key Infrastructure Certificate and CRL Profile. See getSigAlgName for relevant ASN.1 definitions.",
      "tagMap": {
        "return": [
          "the signature algorithm OID string."
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getSigAlgParams",
      "comment": "Gets the DER-encoded signature algorithm parameters from this CRL\u0027s signature algorithm. In most cases, the signature algorithm parameters are null; the parameters are usually supplied with the public key. If access to individual parameter values is needed then use AlgorithmParameters and instantiate with the name returned by getSigAlgName. See getSigAlgName for relevant ASN.1 definitions.",
      "tagMap": {
        "return": [
          "the DER-encoded signature algorithm parameters, or null if no parameters are present."
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructor for X.509 CRLs.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.security.cert.X509CRL",
  "comment": "\u003cp\u003e Abstract class for an X.509 Certificate Revocation List (CRL). A CRL is a time-stamped list identifying revoked certificates. It is signed by a Certificate Authority (CA) and made freely available in a public repository. \u003c/p\u003e\n\u003cp\u003eEach revoked certificate is identified in a CRL by its certificate serial number. When a certificate-using system uses a certificate (e.g., for verifying a remote user\u0027s digital signature), that system not only checks the certificate signature and validity but also acquires a suitably- recent CRL and checks that the certificate serial number is not on that CRL. The meaning of \"suitably-recent\" may vary with local policy, but it usually means the most recently-issued CRL. A CA issues a new CRL on a regular periodic basis (e.g., hourly, daily, or weekly). Entries are added to CRLs as revocations occur, and an entry may be removed when the certificate expiration date is reached. \u003c/p\u003e\n\u003cp\u003e The X.509 v2 CRL format is described below in ASN.1: \u003c/p\u003e\n\u003cpre\u003e CertificateList  ::\u003d  SEQUENCE  {\n     tbsCertList          TBSCertList,\n     signatureAlgorithm   AlgorithmIdentifier,\n     signature            BIT STRING  }\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e More information can be found in \u003ca href\u003d\"http://tools.ietf.org/html/rfc5280\"\u003eRFC 5280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e The ASN.1 definition of \u003ccode\u003etbsCertList\u003c/code\u003e is: \u003c/p\u003e\n\u003cpre\u003e TBSCertList  ::\u003d  SEQUENCE  {\n     version                 Version OPTIONAL,\n                             -- if present, must be v2\n     signature               AlgorithmIdentifier,\n     issuer                  Name,\n     thisUpdate              ChoiceOfTime,\n     nextUpdate              ChoiceOfTime OPTIONAL,\n     revokedCertificates     SEQUENCE OF SEQUENCE  {\n         userCertificate         CertificateSerialNumber,\n         revocationDate          ChoiceOfTime,\n         crlEntryExtensions      Extensions OPTIONAL\n                                 -- if present, must be v2\n         }  OPTIONAL,\n     crlExtensions           [0]  EXPLICIT Extensions OPTIONAL\n                                  -- if present, must be v2\n     }\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e CRLs are instantiated using a certificate factory. The following is an example of how to instantiate an X.509 CRL: \u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\n try (InputStream inStream \u003d new FileInputStream(\"fileName-of-crl\")) {\n     CertificateFactory cf \u003d CertificateFactory.getInstance(\"X.509\");\n     X509CRL crl \u003d (X509CRL)cf.generateCRL(inStream);\n }\n \u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CRL.html\" title\u003d\"class in java.security.cert\"\u003e\u003ccode\u003eCRL\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/CertificateFactory.html\" title\u003d\"class in java.security.cert\"\u003e\u003ccode\u003eCertificateFactory\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/X509Extension.html\" title\u003d\"interface in java.security.cert\"\u003e\u003ccode\u003eX509Extension\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}