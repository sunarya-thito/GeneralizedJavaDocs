{
  "packageName": "java.security",
  "simpleName": "KeyRep",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.ObjectStreamException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "readResolve",
      "comment": "Resolve the Key object. This method supports three Type/format combinations: Type.SECRET/\"RAW\" - returns a SecretKeySpec object constructed using encoded key bytes and algorithm Type.PUBLIC/\"X.509\" - gets a KeyFactory instance for the key algorithm, constructs an X509EncodedKeySpec with the encoded key bytes, and generates a public key from the spec Type.PRIVATE/\"PKCS#8\" - gets a KeyFactory instance for the key algorithm, constructs a PKCS8EncodedKeySpec with the encoded key bytes, and generates a private key from the spec",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/ObjectStreamException.html\" title\u003d\"class in java.io\"\u003eObjectStreamException\u003c/a\u003e\u003c/code\u003e - if the Type/format combination is unrecognized, if the algorithm, key format, or encoded key bytes are unrecognized/invalid, of if the resolution of the key fails for any reason"
        ],
        "return": [
          "the resolved Key object"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.KeyRep$Type",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "algorithm",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "format",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "byte",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "encoded",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Construct the alternate Key class.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - either one of Type.SECRET, Type.PUBLIC, or Type.PRIVATE",
          "\u003ccode\u003ealgorithm\u003c/code\u003e - the algorithm returned from \n\u003ccode\u003eKey.getAlgorithm()\u003c/code\u003e",
          "\u003ccode\u003eformat\u003c/code\u003e - the encoding format returned from \n\u003ccode\u003eKey.getFormat()\u003c/code\u003e",
          "\u003ccode\u003eencoded\u003c/code\u003e - the encoded bytes returned from \n\u003ccode\u003eKey.getEncoded()\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if type is \n\u003ccode\u003enull\u003c/code\u003e, if algorithm is \n\u003ccode\u003enull\u003c/code\u003e, if format is \n\u003ccode\u003enull\u003c/code\u003e, or if encoded is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    }
  ],
  "innerClasses": [
    "java.security.KeyRep$Type"
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.security.KeyRep",
  "comment": "Standardized representation for serialized Key objects. \n\u003cp\u003e Note that a serialized Key may contain sensitive information which should not be exposed in untrusted environments. See the \u003ca href\u003d\"../../../../specs/serialization/security.html\"\u003e Security Appendix\u003c/a\u003e of the Serialization Specification for more information.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Key.html\" title\u003d\"interface in java.security\"\u003e\u003ccode\u003eKey\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/KeyFactory.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eKeyFactory\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/crypto/spec/SecretKeySpec.html\" title\u003d\"class in javax.crypto.spec\"\u003e\u003ccode\u003eSecretKeySpec\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/spec/X509EncodedKeySpec.html\" title\u003d\"class in java.security.spec\"\u003e\u003ccode\u003eX509EncodedKeySpec\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/spec/PKCS8EncodedKeySpec.html\" title\u003d\"class in java.security.spec\"\u003e\u003ccode\u003ePKCS8EncodedKeySpec\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/serialized-form.html#java.security.KeyRep\"\u003eSerialized Form\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}