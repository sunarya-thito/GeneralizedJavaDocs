{
  "packageName": "java.security",
  "simpleName": "Builder",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.security.KeyStore",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.KeyStoreException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getKeyStore",
      "comment": "Returns the KeyStore described by this object.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/KeyStoreException.html\" title\u003d\"class in java.security\"\u003eKeyStoreException\u003c/a\u003e\u003c/code\u003e - if an error occurred during the operation, for example if the KeyStore could not be instantiated or loaded"
        ],
        "return": [
          "the \n\u003ccode\u003eKeyStore\u003c/code\u003e described by this object"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.KeyStore$ProtectionParameter",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.KeyStoreException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "alias",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getProtectionParameter",
      "comment": "Returns the ProtectionParameters that should be used to obtain the Entry with the given alias. The getKeyStore method must be invoked before this method may be called.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ealias\u003c/code\u003e - the alias of the KeyStore entry"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if alias is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/KeyStoreException.html\" title\u003d\"class in java.security\"\u003eKeyStoreException\u003c/a\u003e\u003c/code\u003e - if an error occurred during the operation",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if the getKeyStore method has not been invoked prior to calling this method"
        ],
        "return": [
          "the ProtectionParameters that should be used to obtain the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/KeyStore.Entry.html\" title\u003d\"interface in java.security\"\u003e\u003ccode\u003eEntry\u003c/code\u003e\u003c/a\u003e with the given alias."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.KeyStore$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.security.KeyStore",
            "type": "Class"
          },
          "name": "keyStore",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.KeyStore$ProtectionParameter",
            "type": "Class"
          },
          "name": "protectionParameter",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newInstance",
      "comment": "Returns a new Builder that encapsulates the given KeyStore. The getKeyStore() method of the returned object will return keyStore, the getProtectionParameter() method will return protectionParameters. This is useful if an existing KeyStore object needs to be used with Builder-based APIs.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ekeyStore\u003c/code\u003e - the KeyStore to be encapsulated",
          "\u003ccode\u003eprotectionParameter\u003c/code\u003e - the ProtectionParameter used to protect the KeyStore entries"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if keyStore or protectionParameters is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the keyStore has not been initialized"
        ],
        "return": [
          "a new Builder object"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.KeyStore$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.Provider",
            "type": "Class"
          },
          "name": "provider",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "name": "file",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.KeyStore$ProtectionParameter",
            "type": "Class"
          },
          "name": "protection",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newInstance",
      "comment": "Returns a new Builder object. The first call to the getKeyStore() method on the returned builder will create a KeyStore of type type and call its load() method. The inputStream argument is constructed from file. If protection is a PasswordProtection, the password is obtained by calling the getPassword method. Otherwise, if protection is a CallbackHandlerProtection, the password is obtained by invoking the CallbackHandler. Subsequent calls to getKeyStore() return the same object as the initial call. If the initial call failed with a KeyStoreException, subsequent calls also throw a KeyStoreException. The KeyStore is instantiated from provider if non-null. Otherwise, all installed providers are searched. Calls to getProtectionParameter() will return a PasswordProtection object encapsulating the password that was used to invoke the load method. Note that the getKeyStore() method is executed within the AccessControlContext of the code invoking this method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the type of KeyStore to be constructed",
          "\u003ccode\u003eprovider\u003c/code\u003e - the provider from which the KeyStore is to be instantiated (or null)",
          "\u003ccode\u003efile\u003c/code\u003e - the File that contains the KeyStore data",
          "\u003ccode\u003eprotection\u003c/code\u003e - the ProtectionParameter securing the KeyStore data"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if type, file or protection is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if protection is not an instance of either PasswordProtection or CallbackHandlerProtection; or if file does not exist or does not refer to a normal file"
        ],
        "return": [
          "a new Builder object"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.KeyStore$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.File",
            "type": "Class"
          },
          "name": "file",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.KeyStore$ProtectionParameter",
            "type": "Class"
          },
          "name": "protection",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newInstance",
      "comment": "Returns a new Builder object. The first call to the getKeyStore() method on the returned builder will create a KeyStore using file to detect the keystore type and then call its load() method. It uses the same algorithm to determine the keystore type as described in KeyStore.getInstance(File, LoadStoreParameter). The inputStream argument is constructed from file. If protection is a PasswordProtection, the password is obtained by calling the getPassword method. Otherwise, if protection is a CallbackHandlerProtection, the password is obtained by invoking the CallbackHandler. Subsequent calls to getKeyStore() return the same object as the initial call. If the initial call failed with a KeyStoreException, subsequent calls also throw a KeyStoreException. Calls to getProtectionParameter() will return a PasswordProtection object encapsulating the password that was used to invoke the load method. Note that the getKeyStore() method is executed within the AccessControlContext of the code invoking this method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - the File that contains the KeyStore data",
          "\u003ccode\u003eprotection\u003c/code\u003e - the ProtectionParameter securing the KeyStore data"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if file or protection is null",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if protection is not an instance of either PasswordProtection or CallbackHandlerProtection; or if file does not exist or does not refer to a normal file"
        ],
        "return": [
          "a new Builder object"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.KeyStore$Builder",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "name": "type",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.Provider",
            "type": "Class"
          },
          "name": "provider",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.security.KeyStore$ProtectionParameter",
            "type": "Class"
          },
          "name": "protection",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "newInstance",
      "comment": "Returns a new Builder object. Each call to the getKeyStore() method on the returned builder will return a new KeyStore object of type type. Its load() method is invoked using a LoadStoreParameter that encapsulates protection. The KeyStore is instantiated from provider if non-null. Otherwise, all installed providers are searched. Calls to getProtectionParameter() will return protection. Note that the getKeyStore() method is executed within the AccessControlContext of the code invoking this method.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003etype\u003c/code\u003e - the type of KeyStore to be constructed",
          "\u003ccode\u003eprovider\u003c/code\u003e - the provider from which the KeyStore is to be instantiated (or null)",
          "\u003ccode\u003eprotection\u003c/code\u003e - the ProtectionParameter securing the Keystore"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if type or protection is null"
        ],
        "return": [
          "a new Builder object"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Construct a new Builder.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1033,
  "name": "java.security.KeyStore$Builder",
  "comment": "A description of a to-be-instantiated KeyStore object. \n\u003cp\u003eAn instance of this class encapsulates the information needed to instantiate and initialize a KeyStore object. That process is triggered when the \u003ca href\u003d\"#getKeyStore()\"\u003egetKeyStore()\u003c/a\u003e method is called. \u003c/p\u003e\n\u003cp\u003eThis makes it possible to decouple configuration from KeyStore object creation and e.g. delay a password prompt until it is needed.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/KeyStore.html\" title\u003d\"class in java.security\"\u003e\u003ccode\u003eKeyStore\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/javax/net/ssl/KeyStoreBuilderParameters.html\" title\u003d\"class in javax.net.ssl\"\u003e\u003ccode\u003eKeyStoreBuilderParameters\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.5"
    ]
  }
}