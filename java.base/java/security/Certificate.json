{
  "packageName": "java.security",
  "simpleName": "Certificate",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.security.Principal",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getGuarantor",
      "comment": "Returns the guarantor of the certificate, that is, the principal guaranteeing that the public key associated with this certificate is that of the principal associated with this certificate. For X.509 certificates, the guarantor will typically be a Certificate Authority (such as the United States Postal Service or Verisign, Inc.).",
      "annotations": [],
      "tagMap": {
        "return": [
          "the guarantor which guaranteed the principal-key binding."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.Principal",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPrincipal",
      "comment": "Returns the principal of the principal-key pair being guaranteed by the guarantor.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the principal to which this certificate is bound."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.PublicKey",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getPublicKey",
      "comment": "Returns the key of the principal-key pair being guaranteed by the guarantor.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the public key that this certificate certifies belongs to a particular principal."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.KeyException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.OutputStream",
            "type": "Class"
          },
          "name": "stream",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "encode",
      "comment": "Encodes the certificate to an output stream in a format that can be decoded by the decode method.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Certificate.html#decode(java.io.InputStream)\"\u003e\u003ccode\u003edecode(java.io.InputStream)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Certificate.html#getFormat()\"\u003e\u003ccode\u003egetFormat()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the output stream to which to encode the certificate."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/KeyException.html\" title\u003d\"class in java.security\"\u003eKeyException\u003c/a\u003e\u003c/code\u003e - if the certificate is not properly initialized, or data is missing, etc.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if a stream exception occurs while trying to output the encoded certificate to the output stream."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.security.KeyException",
          "type": "Class"
        },
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "name": "stream",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "decode",
      "comment": "Decodes a certificate from an input stream. The format should be that returned by getFormat and produced by encode.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Certificate.html#encode(java.io.OutputStream)\"\u003e\u003ccode\u003eencode(java.io.OutputStream)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/Certificate.html#getFormat()\"\u003e\u003ccode\u003egetFormat()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003estream\u003c/code\u003e - the input stream from which to fetch the data being decoded."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/KeyException.html\" title\u003d\"class in java.security\"\u003eKeyException\u003c/a\u003e\u003c/code\u003e - if the certificate is not properly initialized, or data is missing, etc.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an exception occurs while trying to input the encoded certificate from the input stream."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getFormat",
      "comment": "Returns the name of the coding format. This is used as a hint to find an appropriate parser. It could be \"X.509\", \"PGP\", etc. This is the format produced and understood by the encode and decode methods.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the name of the coding format."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "name": "detailed",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "toString",
      "comment": "Returns a string that represents the contents of the certificate.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003edetailed\u003c/code\u003e - whether or not to give detailed information about the certificate"
        ],
        "return": [
          "a string representing the contents of the certificate"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.security.Certificate",
  "annotations": [
    {
      "type": {
        "name": "Deprecated",
        "type": "Class"
      },
      "values": [
        {
          "name": "since",
          "value": "1.2"
        },
        {
          "name": "orRemoval",
          "value": true
        }
      ]
    }
  ],
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/security/cert/Certificate.html\" title\u003d\"class in java.security.cert\"\u003e\u003ccode\u003eCertificate\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.1"
    ]
  }
}