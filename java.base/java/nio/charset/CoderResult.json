{
  "packageName": "java.nio.charset",
  "simpleName": "CoderResult",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.nio.charset.CoderResult",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "UNDERFLOW",
      "comment": "Result object indicating underflow, meaning that either the input buffer has been completely consumed or, if the input buffer is not yet empty, that additional input is required.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "java.nio.charset.CoderResult",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 25,
      "name": "OVERFLOW",
      "comment": "Result object indicating overflow, meaning that there is insufficient room in the output buffer.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a string describing this coder result.",
      "annotations": [],
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "A descriptive string"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isUnderflow",
      "comment": "Tells whether or not this object describes an underflow condition.",
      "annotations": [],
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if, and only if, this object denotes underflow"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isOverflow",
      "comment": "Tells whether or not this object describes an overflow condition.",
      "annotations": [],
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if, and only if, this object denotes overflow"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isError",
      "comment": "Tells whether or not this object describes an error condition.",
      "annotations": [],
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if, and only if, this object denotes either a malformed-input error or an unmappable-character error"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isMalformed",
      "comment": "Tells whether or not this object describes a malformed-input error.",
      "annotations": [],
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if, and only if, this object denotes a malformed-input error"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isUnmappable",
      "comment": "Tells whether or not this object describes an unmappable-character error.",
      "annotations": [],
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if, and only if, this object denotes an unmappable-character error"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "length",
      "comment": "Returns the length of the erroneous input described by this object (optional operation).",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If this object does not describe an error condition, that is, if the \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/charset/CoderResult.html#isError()\"\u003e\u003ccode\u003eisError\u003c/code\u003e\u003c/a\u003e does not return \n\u003ccode\u003etrue\u003c/code\u003e"
        ],
        "return": [
          "The length of the erroneous input, a positive integer"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.charset.CoderResult",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "length",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "malformedForLength",
      "comment": "Static factory method that returns the unique object describing a malformed-input error of the given length.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elength\u003c/code\u003e - The given length"
        ],
        "return": [
          "The requested coder-result object"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.charset.CoderResult",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "length",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "unmappableForLength",
      "comment": "Static factory method that returns the unique result object describing an unmappable-character error of the given length.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elength\u003c/code\u003e - The given length"
        ],
        "return": [
          "The requested coder-result object"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.nio.charset.CharacterCodingException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "throwException",
      "comment": "Throws an exception appropriate to the result described by this object.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/BufferUnderflowException.html\" title\u003d\"class in java.nio\"\u003eBufferUnderflowException\u003c/a\u003e\u003c/code\u003e - If this object is \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/charset/CoderResult.html#UNDERFLOW\"\u003e\u003ccode\u003eUNDERFLOW\u003c/code\u003e\u003c/a\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/BufferOverflowException.html\" title\u003d\"class in java.nio\"\u003eBufferOverflowException\u003c/a\u003e\u003c/code\u003e - If this object is \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/charset/CoderResult.html#OVERFLOW\"\u003e\u003ccode\u003eOVERFLOW\u003c/code\u003e\u003c/a\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/charset/MalformedInputException.html\" title\u003d\"class in java.nio.charset\"\u003eMalformedInputException\u003c/a\u003e\u003c/code\u003e - If this object represents a malformed-input error; the exception\u0027s length value will be that of this object",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/charset/UnmappableCharacterException.html\" title\u003d\"class in java.nio.charset\"\u003eUnmappableCharacterException\u003c/a\u003e\u003c/code\u003e - If this object represents an unmappable-character error; the exceptions length value will be that of this object",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/charset/CharacterCodingException.html\" title\u003d\"class in java.nio.charset\"\u003eCharacterCodingException\u003c/a\u003e\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.nio.charset.CoderResult",
  "comment": "A description of the result state of a coder. \n\u003cp\u003e A charset coder, that is, either a decoder or an encoder, consumes bytes (or characters) from an input buffer, translates them, and writes the resulting characters (or bytes) to an output buffer. A coding process terminates for one of four categories of reasons, which are described by instances of this class: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e\u003cp\u003e \u003ci\u003eUnderflow\u003c/i\u003e is reported when there is no more input to be processed, or there is insufficient input and additional input is required. This condition is represented by the unique result object \u003ca href\u003d\"#UNDERFLOW\"\u003e\u003ccode\u003eUNDERFLOW\u003c/code\u003e\u003c/a\u003e, whose \u003ca href\u003d\"#isUnderflow()\"\u003e\u003ccode\u003eisUnderflow\u003c/code\u003e\u003c/a\u003e method returns \u003ccode\u003etrue\u003c/code\u003e. \u003c/p\u003e\u003c/li\u003e \n \u003cli\u003e\u003cp\u003e \u003ci\u003eOverflow\u003c/i\u003e is reported when there is insufficient room remaining in the output buffer. This condition is represented by the unique result object \u003ca href\u003d\"#OVERFLOW\"\u003e\u003ccode\u003eOVERFLOW\u003c/code\u003e\u003c/a\u003e, whose \u003ca href\u003d\"#isOverflow()\"\u003e\u003ccode\u003eisOverflow\u003c/code\u003e\u003c/a\u003e method returns \u003ccode\u003etrue\u003c/code\u003e. \u003c/p\u003e\u003c/li\u003e \n \u003cli\u003e\u003cp\u003e A \u003ci\u003emalformed-input error\u003c/i\u003e is reported when a sequence of input units is not well-formed. Such errors are described by instances of this class whose \u003ca href\u003d\"#isMalformed()\"\u003e\u003ccode\u003eisMalformed\u003c/code\u003e\u003c/a\u003e method returns \u003ccode\u003etrue\u003c/code\u003e and whose \u003ca href\u003d\"#length()\"\u003e\u003ccode\u003elength\u003c/code\u003e\u003c/a\u003e method returns the length of the malformed sequence. There is one unique instance of this class for all malformed-input errors of a given length. \u003c/p\u003e\u003c/li\u003e \n \u003cli\u003e\u003cp\u003e An \u003ci\u003eunmappable-character error\u003c/i\u003e is reported when a sequence of input units denotes a character that cannot be represented in the output charset. Such errors are described by instances of this class whose \u003ca href\u003d\"#isUnmappable()\"\u003e\u003ccode\u003eisUnmappable\u003c/code\u003e\u003c/a\u003e method returns \u003ccode\u003etrue\u003c/code\u003e and whose \u003ca href\u003d\"#length()\"\u003e\u003ccode\u003elength\u003c/code\u003e\u003c/a\u003e method returns the length of the input sequence denoting the unmappable character. There is one unique instance of this class for all unmappable-character errors of a given length. \u003c/p\u003e\u003c/li\u003e \n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e For convenience, the \u003ca href\u003d\"#isError()\"\u003e\u003ccode\u003eisError\u003c/code\u003e\u003c/a\u003e method returns \u003ccode\u003etrue\u003c/code\u003e for result objects that describe malformed-input and unmappable-character errors but \u003ccode\u003efalse\u003c/code\u003e for those that describe underflow or overflow conditions. \u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}