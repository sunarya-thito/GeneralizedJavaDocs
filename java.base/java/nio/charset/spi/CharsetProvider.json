{
  "packageName": "java.nio.charset.spi",
  "simpleName": "CharsetProvider",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.util.Iterator",
        "parameters": [
          {
            "name": "java.nio.charset.Charset",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "charsets",
      "comment": "Creates an iterator that iterates over the charsets supported by this provider. This method is used in the implementation of the Charset.availableCharsets method.",
      "tagMap": {
        "return": [
          "The new iterator"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.charset.Charset",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "charsetName"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "charsetForName",
      "comment": "Retrieves a charset for the given charset name.",
      "tagMap": {
        "param": [
          "\u003ccode\u003echarsetName\u003c/code\u003e - The name of the requested charset; may be either a canonical name or an alias"
        ],
        "return": [
          "A charset object for the named charset, or \n\u003ccode\u003enull\u003c/code\u003e if the named charset is not supported by this provider"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Initializes a new charset provider.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and it denies \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimePermission.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eRuntimePermission\u003c/code\u003e\u003c/a\u003e\n\u003ccode\u003e(\"charsetProvider\")\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.nio.charset.spi.CharsetProvider",
  "comment": "Charset service-provider class. \n\u003cp\u003e A charset provider is a concrete subclass of this class that has a zero-argument constructor and some number of associated charset implementation classes. Charset providers may be installed in an instance of the Java platform as extensions. Providers may also be made available by adding them to the applet or application class path or by some other platform-specific means. Charset providers are looked up via the current thread\u0027s \u003ca href\u003d\"../../../lang/Thread.html#getContextClassLoader()\"\u003e\u003ccode\u003econtext class loader\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e A charset provider identifies itself with a provider-configuration file named \u003ccode\u003ejava.nio.charset.spi.CharsetProvider\u003c/code\u003e in the resource directory \u003ccode\u003eMETA-INF/services\u003c/code\u003e. The file should contain a list of fully-qualified concrete charset-provider class names, one per line. A line is terminated by any one of a line feed (\u003ccode\u003e\u0027\\n\u0027\u003c/code\u003e), a carriage return (\u003ccode\u003e\u0027\\r\u0027\u003c/code\u003e), or a carriage return followed immediately by a line feed. Space and tab characters surrounding each name, as well as blank lines, are ignored. The comment character is \u003ccode\u003e\u0027#\u0027\u003c/code\u003e (\u003ccode\u003e\u0027\\u0023\u0027\u003c/code\u003e); on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8. \u003c/p\u003e\n\u003cp\u003e If a particular concrete charset provider class is named in more than one configuration file, or is named in the same configuration file more than once, then the duplicates will be ignored. The configuration file naming a particular provider need not be in the same jar file or other distribution unit as the provider itself. The provider must be accessible from the same class loader that was initially queried to locate the configuration file; this is not necessarily the class loader that loaded the file. \u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/charset/Charset.html\" title\u003d\"class in java.nio.charset\"\u003e\u003ccode\u003eCharset\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.4"
    ]
  }
}