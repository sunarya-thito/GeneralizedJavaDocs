{
  "packageName": "java.nio.channels",
  "simpleName": "AsynchronousServerSocketChannel",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.nio.channels.spi.AsynchronousChannelProvider",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "provider",
      "comment": "Returns the provider that created this channel.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The provider that created this channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.AsynchronousServerSocketChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.nio.channels.AsynchronousChannelGroup",
            "type": "Class"
          },
          "name": "group",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "open",
      "comment": "Opens an asynchronous server-socket channel. The new channel is created by invoking the openAsynchronousServerSocketChannel method on the AsynchronousChannelProvider object that created the given group. If the group parameter is null then the resulting channel is created by the system-wide default provider, and bound to the default group.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003egroup\u003c/code\u003e - The group to which the newly constructed channel should be bound, or \n\u003ccode\u003enull\u003c/code\u003e for the default group"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ShutdownChannelGroupException.html\" title\u003d\"class in java.nio.channels\"\u003eShutdownChannelGroupException\u003c/a\u003e\u003c/code\u003e - If the channel group is shutdown",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "A new asynchronous server socket channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.AsynchronousServerSocketChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "open",
      "comment": "Opens an asynchronous server-socket channel. This method returns an asynchronous server socket channel that is bound to the default group. This method is equivalent to evaluating the expression:  open((AsynchronousChannelGroup)null);",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "A new asynchronous server socket channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.AsynchronousServerSocketChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.SocketAddress",
            "type": "Class"
          },
          "name": "local",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "bind",
      "comment": "Binds the channel\u0027s socket to a local address and configures the socket to listen for connections. An invocation of this method is equivalent to the following:  bind(local, 0);",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NetworkChannel.html#getLocalAddress()\"\u003e\u003ccode\u003eNetworkChannel.getLocalAddress()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NetworkChannel.html#bind(java.net.SocketAddress)\"\u003ebind\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NetworkChannel.html\" title\u003d\"interface in java.nio.channels\"\u003eNetworkChannel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003elocal\u003c/code\u003e - The local address to bind the socket, or \n\u003ccode\u003enull\u003c/code\u003e to bind to an automatically assigned socket address"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AlreadyBoundException.html\" title\u003d\"class in java.nio.channels\"\u003eAlreadyBoundException\u003c/a\u003e\u003c/code\u003e - If the socket is already bound",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/UnsupportedAddressTypeException.html\" title\u003d\"class in java.nio.channels\"\u003eUnsupportedAddressTypeException\u003c/a\u003e\u003c/code\u003e - If the type of the given address is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager is installed and it denies an unspecified permission. An implementation of this interface should specify any required permissions.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If the channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "This channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.AsynchronousServerSocketChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.SocketAddress",
            "type": "Class"
          },
          "name": "local",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "int",
            "type": "Class"
          },
          "name": "backlog",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "bind",
      "comment": "Binds the channel\u0027s socket to a local address and configures the socket to listen for connections. This method is used to establish an association between the socket and a local address. Once an association is established then the socket remains bound until the associated channel is closed. The backlog parameter is the maximum number of pending connections on the socket. Its exact semantics are implementation specific. In particular, an implementation may impose a maximum length or may choose to ignore the parameter altogther. If the backlog parameter has the value 0, or a negative value, then an implementation specific default is used.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003elocal\u003c/code\u003e - The local address to bind the socket, or \n\u003ccode\u003enull\u003c/code\u003e to bind to an automatically assigned socket address",
          "\u003ccode\u003ebacklog\u003c/code\u003e - The maximum number of pending connections"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AlreadyBoundException.html\" title\u003d\"class in java.nio.channels\"\u003eAlreadyBoundException\u003c/a\u003e\u003c/code\u003e - If the socket is already bound",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/UnsupportedAddressTypeException.html\" title\u003d\"class in java.nio.channels\"\u003eUnsupportedAddressTypeException\u003c/a\u003e\u003c/code\u003e - If the type of the given address is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkListen(int)\"\u003e\u003ccode\u003echeckListen\u003c/code\u003e\u003c/a\u003e method denies the operation",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If the channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "This channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.AsynchronousServerSocketChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.SocketOption",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "name",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "T",
            "type": "Class"
          },
          "name": "value",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "setOption",
      "comment": "Description copied from interface: NetworkChannel",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - The type of the socket option value"
        ],
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/StandardSocketOptions.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003eStandardSocketOptions\u003c/code\u003e\u003c/a\u003e"
        ],
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NetworkChannel.html#setOption(java.net.SocketOption,T)\"\u003esetOption\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NetworkChannel.html\" title\u003d\"interface in java.nio.channels\"\u003eNetworkChannel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The socket option",
          "\u003ccode\u003evalue\u003c/code\u003e - The value of the socket option. A value of \n\u003ccode\u003enull\u003c/code\u003e may be a valid value for some socket options."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the value is not a valid value for this socket option",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "This channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "A",
            "type": "Class"
          },
          "name": "attachment",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.nio.channels.CompletionHandler",
            "parameters": [
              {
                "name": "java.nio.channels.AsynchronousSocketChannel",
                "type": "Class"
              },
              {
                "lowerBounds": [
                  {
                    "name": "A",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "handler",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "A",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "accept",
      "comment": "Accepts a connection. This method initiates an asynchronous operation to accept a connection made to this channel\u0027s socket. The handler parameter is a completion handler that is invoked when a connection is accepted (or the operation fails). The result passed to the completion handler is the AsynchronousSocketChannel to the new connection. When a new connection is accepted then the resulting AsynchronousSocketChannel will be bound to the same AsynchronousChannelGroup as this channel. If the group is shutdown and a connection is accepted, then the connection is closed, and the operation completes with an IOException and cause ShutdownChannelGroupException. To allow for concurrent handling of new connections, the completion handler is not invoked directly by the initiating thread when a new connection is accepted immediately (see Threading). If a security manager has been installed then it verifies that the address and port number of the connection\u0027s remote endpoint are permitted by the security manager\u0027s checkAccept method. The permission check is performed with privileges that are restricted by the calling context of this method. If the permission check fails then the connection is closed and the operation completes with a SecurityException.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eA\u003c/code\u003e - The type of the attachment"
        ],
        "param": [
          "\u003ccode\u003eattachment\u003c/code\u003e - The object to attach to the I/O operation; can be \n\u003ccode\u003enull\u003c/code\u003e",
          "\u003ccode\u003ehandler\u003c/code\u003e - The handler for consuming the result"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AcceptPendingException.html\" title\u003d\"class in java.nio.channels\"\u003eAcceptPendingException\u003c/a\u003e\u003c/code\u003e - If an accept operation is already in progress on this channel",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NotYetBoundException.html\" title\u003d\"class in java.nio.channels\"\u003eNotYetBoundException\u003c/a\u003e\u003c/code\u003e - If this channel\u0027s socket has not yet been bound",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ShutdownChannelGroupException.html\" title\u003d\"class in java.nio.channels\"\u003eShutdownChannelGroupException\u003c/a\u003e\u003c/code\u003e - If the channel group has terminated"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.concurrent.Future",
        "parameters": [
          {
            "name": "java.nio.channels.AsynchronousSocketChannel",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "accept",
      "comment": "Accepts a connection. This method initiates an asynchronous operation to accept a connection made to this channel\u0027s socket. The method behaves in exactly the same manner as the accept(Object, CompletionHandler) method except that instead of specifying a completion handler, this method returns a Future representing the pending result. The Future\u0027s get method returns the AsynchronousSocketChannel to the new connection on successful completion.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AcceptPendingException.html\" title\u003d\"class in java.nio.channels\"\u003eAcceptPendingException\u003c/a\u003e\u003c/code\u003e - If an accept operation is already in progress on this channel",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NotYetBoundException.html\" title\u003d\"class in java.nio.channels\"\u003eNotYetBoundException\u003c/a\u003e\u003c/code\u003e - If this channel\u0027s socket has not yet been bound"
        ],
        "return": [
          "a \n\u003ccode\u003eFuture\u003c/code\u003e object representing the pending result"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.SocketAddress",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getLocalAddress",
      "comment": "Returns the socket address that this channel\u0027s socket is bound to. Where the channel is bound to an Internet Protocol socket address then the return value from this method is of type InetSocketAddress. If there is a security manager set, its checkConnect method is called with the local address and -1 as its arguments to see if the operation is allowed. If the operation is not allowed, a SocketAddress representing the loopback address and the local port of the channel\u0027s socket is returned.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NetworkChannel.html#getLocalAddress()\"\u003egetLocalAddress\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NetworkChannel.html\" title\u003d\"interface in java.nio.channels\"\u003eNetworkChannel\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If the channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "The \n\u003ccode\u003eSocketAddress\u003c/code\u003e that the socket is bound to, or the \n\u003ccode\u003eSocketAddress\u003c/code\u003e representing the loopback address if denied by the security manager, or \n\u003ccode\u003enull\u003c/code\u003e if the channel\u0027s socket is not bound"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.nio.channels.spi.AsynchronousChannelProvider",
            "type": "Class"
          },
          "name": "provider",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Initializes a new instance of this class.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eprovider\u003c/code\u003e - The provider that created this channel"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.nio.channels.AsynchronousServerSocketChannel",
  "annotations": [],
  "tagMap": {
    "since": [
      "1.7"
    ]
  }
}