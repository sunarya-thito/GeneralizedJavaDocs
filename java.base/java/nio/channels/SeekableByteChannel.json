{
  "packageName": "java.nio.channels",
  "simpleName": "SeekableByteChannel",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.nio.channels.ByteChannel",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.nio.ByteBuffer",
            "type": "Class"
          },
          "field": {
            "name": "dst"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "read",
      "comment": "Reads a sequence of bytes from this channel into the given buffer. Bytes are read starting at this channel\u0027s current position, and then the position is updated with the number of bytes actually read. Otherwise this method behaves exactly as specified in the ReadableByteChannel interface.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ReadableByteChannel.html#read(java.nio.ByteBuffer)\"\u003eread\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ReadableByteChannel.html\" title\u003d\"interface in java.nio.channels\"\u003eReadableByteChannel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003edst\u003c/code\u003e - The buffer into which bytes are to be transferred"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AsynchronousCloseException.html\" title\u003d\"class in java.nio.channels\"\u003eAsynchronousCloseException\u003c/a\u003e\u003c/code\u003e - If another thread closes this channel while the read operation is in progress",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedByInterruptException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedByInterruptException\u003c/a\u003e\u003c/code\u003e - If another thread interrupts the current thread while the read operation is in progress, thereby closing the channel and setting the current thread\u0027s interrupt status",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "The number of bytes read, possibly zero, or \n\u003ccode\u003e-1\u003c/code\u003e if the channel has reached end-of-stream"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.nio.ByteBuffer",
            "type": "Class"
          },
          "field": {
            "name": "src"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "write",
      "comment": "Writes a sequence of bytes to this channel from the given buffer. Bytes are written starting at this channel\u0027s current position, unless the channel is connected to an entity such as a file that is opened with the APPEND option, in which case the position is first advanced to the end. The entity to which the channel is connected is grown, if necessary, to accommodate the written bytes, and then the position is updated with the number of bytes actually written. Otherwise this method behaves exactly as specified by the WritableByteChannel interface.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/WritableByteChannel.html#write(java.nio.ByteBuffer)\"\u003ewrite\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/WritableByteChannel.html\" title\u003d\"interface in java.nio.channels\"\u003eWritableByteChannel\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003esrc\u003c/code\u003e - The buffer from which bytes are to be retrieved"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/AsynchronousCloseException.html\" title\u003d\"class in java.nio.channels\"\u003eAsynchronousCloseException\u003c/a\u003e\u003c/code\u003e - If another thread closes this channel while the write operation is in progress",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedByInterruptException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedByInterruptException\u003c/a\u003e\u003c/code\u003e - If another thread interrupts the current thread while the write operation is in progress, thereby closing the channel and setting the current thread\u0027s interrupt status",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "The number of bytes written, possibly zero"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "position",
      "comment": "Returns this channel\u0027s position.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "This channel\u0027s position, a non-negative integer counting the number of bytes from the beginning of the entity to the current position"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.SeekableByteChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "newPosition"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "position",
      "comment": "Sets this channel\u0027s position. Setting the position to a value that is greater than the current size is legal but does not change the size of the entity. A later attempt to read bytes at such a position will immediately return an end-of-file indication. A later attempt to write bytes at such a position will cause the entity to grow to accommodate the new bytes; the values of any bytes between the previous end-of-file and the newly-written bytes are unspecified. Setting the channel\u0027s position is not recommended when connected to an entity, typically a file, that is opened with the APPEND option. When opened for append, the position is first advanced to the end before writing.",
      "tagMap": {
        "param": [
          "\u003ccode\u003enewPosition\u003c/code\u003e - The new position, a non-negative integer counting the number of bytes from the beginning of the entity"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the new position is negative",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "This channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "size",
      "comment": "Returns the current size of entity to which this channel is connected.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "The current size, measured in bytes"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.SeekableByteChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "size"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "truncate",
      "comment": "Truncates the entity, to which this channel is connected, to the given size. If the given size is less than the current size then the entity is truncated, discarding any bytes beyond the new end. If the given size is greater than or equal to the current size then the entity is not modified. In either case, if the current position is greater than the given size then it is set to that size. An implementation of this interface may prohibit truncation when connected to an entity, typically a file, opened with the APPEND option.",
      "tagMap": {
        "param": [
          "\u003ccode\u003esize\u003c/code\u003e - The new size, a non-negative byte count"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/NonWritableChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eNonWritableChannelException\u003c/a\u003e\u003c/code\u003e - If this channel was not opened for writing",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ClosedChannelException.html\" title\u003d\"class in java.nio.channels\"\u003eClosedChannelException\u003c/a\u003e\u003c/code\u003e - If this channel is closed",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - If the new size is negative",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If some other I/O error occurs"
        ],
        "return": [
          "This channel"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.nio.channels.SeekableByteChannel",
  "comment": "A byte channel that maintains a current \n\u003ci\u003eposition\u003c/i\u003e and allows the position to be changed. \n\u003cp\u003e A seekable byte channel is connected to an entity, typically a file, that contains a variable-length sequence of bytes that can be read and written. The current position can be \u003ca href\u003d\"#position()\"\u003e\u003ccode\u003e\u003ci\u003equeried\u003c/i\u003e\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"#position(long)\"\u003e\u003ccode\u003e\u003ci\u003emodified\u003c/i\u003e\u003c/code\u003e\u003c/a\u003e. The channel also provides access to the current \u003ci\u003esize\u003c/i\u003e of the entity to which the channel is connected. The size increases when bytes are written beyond its current size; the size decreases when it is \u003ca href\u003d\"#truncate(long)\"\u003e\u003ccode\u003e\u003ci\u003etruncated\u003c/i\u003e\u003c/code\u003e\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003e The \u003ca href\u003d\"#position(long)\"\u003e\u003ccode\u003eposition\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"#truncate(long)\"\u003e\u003ccode\u003etruncate\u003c/code\u003e\u003c/a\u003e methods which do not otherwise have a value to return are specified to return the channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/Files.html#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)\"\u003e\u003ccode\u003eFiles.newByteChannel(java.nio.file.Path, java.util.Set\u0026lt;? extends java.nio.file.OpenOption\u0026gt;, java.nio.file.attribute.FileAttribute\u0026lt;?\u0026gt;...)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.7"
    ]
  }
}