{
  "packageName": "java.nio.channels.spi",
  "simpleName": "SelectorProvider",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.nio.channels.spi.SelectorProvider",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "provider",
      "comment": "Returns the system-wide default selector provider for this invocation of the Java virtual machine. The first invocation of this method locates the default provider object as follows: If the system property java.nio.channels.spi.SelectorProvider is defined then it is taken to be the fully-qualified name of a concrete provider class. The class is loaded and instantiated; if this process fails then an unspecified error is thrown. If a provider class has been installed in a jar file that is visible to the system class loader, and that jar file contains a provider-configuration file named java.nio.channels.spi.SelectorProvider in the resource directory META-INF/services, then the first class name specified in that file is taken. The class is loaded and instantiated; if this process fails then an unspecified error is thrown. Finally, if no provider has been specified by any of the above means then the system-default provider class is instantiated and the result is returned. Subsequent invocations of this method return the provider that was returned by the first invocation.",
      "tagMap": {
        "return": [
          "The system-wide default selector provider"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.DatagramChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "openDatagramChannel",
      "comment": "Opens a datagram channel.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "The new channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.DatagramChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.ProtocolFamily",
            "type": "Class"
          },
          "field": {
            "name": "family"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "openDatagramChannel",
      "comment": "Opens a datagram channel.",
      "tagMap": {
        "param": [
          "\u003ccode\u003efamily\u003c/code\u003e - The protocol family"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If the specified protocol family is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "A new datagram channel"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.Pipe",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "openPipe",
      "comment": "Opens a pipe.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "The new pipe"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.spi.AbstractSelector",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "openSelector",
      "comment": "Opens a selector.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "The new selector"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.ServerSocketChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "openServerSocketChannel",
      "comment": "Opens a server-socket channel.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "The new channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.SocketChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "openSocketChannel",
      "comment": "Opens a socket channel.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "The new channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.Channel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "inheritedChannel",
      "comment": "Returns the channel inherited from the entity that created this Java virtual machine. On many operating systems a process, such as a Java virtual machine, can be started in a manner that allows the process to inherit a channel from the entity that created the process. The manner in which this is done is system dependent, as are the possible entities to which the channel may be connected. For example, on UNIX systems, the Internet services daemon (inetd) is used to start programs to service requests when a request arrives on an associated network port. In this example, the process that is started, inherits a channel representing a network socket. In cases where the inherited channel is for an Internet protocol socket then the Channel type returned by this method is determined as follows: If the inherited channel is for a stream-oriented connected socket then a SocketChannel is returned. The socket channel is, at least initially, in blocking mode, bound to a socket address, and connected to a peer. If the inherited channel is for a stream-oriented listening socket then a ServerSocketChannel is returned. The server-socket channel is, at least initially, in blocking mode, and bound to a socket address. If the inherited channel is a datagram-oriented socket then a DatagramChannel is returned. The datagram channel is, at least initially, in blocking mode, and bound to a socket address. In cases where the inherited channel is for a Unix domain socket then the Channel type returned is the same as for Internet protocol sockets as described above, except that datagram-oriented sockets are not supported. In addition to the two types of socket just described, this method may return other types in the future. The first invocation of this method creates the channel that is returned. Subsequent invocations of this method return the same channel.",
      "tagMap": {
        "implSpec": [
          "The default implementation of this method returns \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and it denies \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimePermission.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eRuntimePermission\u003c/code\u003e\u003c/a\u003e\n\u003ccode\u003e(\"inheritedChannel\")\u003c/code\u003e"
        ],
        "return": [
          "The inherited channel, if any, otherwise \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.SocketChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.ProtocolFamily",
            "type": "Class"
          },
          "field": {
            "name": "family"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "openSocketChannel",
      "comment": "Opens a socket channel.",
      "tagMap": {
        "implSpec": [
          "The default implementation of this method first checks that the given protocol \n\u003ccode\u003efamily\u003c/code\u003e is not \n\u003ccode\u003enull\u003c/code\u003e, then throws \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eUnsupportedOperationException\u003c/code\u003e\u003c/a\u003e."
        ],
        "param": [
          "\u003ccode\u003efamily\u003c/code\u003e - The protocol family"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If the specified protocol family is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "The new channel"
        ],
        "since": [
          "15"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.ServerSocketChannel",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.ProtocolFamily",
            "type": "Class"
          },
          "field": {
            "name": "family"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "openServerSocketChannel",
      "comment": "Opens a server-socket channel.",
      "tagMap": {
        "implSpec": [
          "The default implementation of this method first checks that the given protocol \n\u003ccode\u003efamily\u003c/code\u003e is not \n\u003ccode\u003enull\u003c/code\u003e, then throws \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eUnsupportedOperationException\u003c/code\u003e\u003c/a\u003e."
        ],
        "param": [
          "\u003ccode\u003efamily\u003c/code\u003e - The protocol family"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/UnsupportedOperationException.html\" title\u003d\"class in java.lang\"\u003eUnsupportedOperationException\u003c/a\u003e\u003c/code\u003e - If the specified protocol family is not supported",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "The new channel"
        ],
        "since": [
          "15"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Initializes a new instance of this class.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and it denies \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimePermission.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eRuntimePermission\u003c/code\u003e\u003c/a\u003e\n\u003ccode\u003e(\"selectorProvider\")\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.nio.channels.spi.SelectorProvider",
  "comment": "Service-provider class for selectors and selectable channels. \n\u003cp\u003e A selector provider is a concrete subclass of this class that has a zero-argument constructor and implements the abstract methods specified below. A given invocation of the Java virtual machine maintains a single system-wide default provider instance, which is returned by the \u003ca href\u003d\"#provider()\"\u003e\u003ccode\u003eprovider\u003c/code\u003e\u003c/a\u003e method. The first invocation of that method will locate the default provider as specified below. \u003c/p\u003e\n\u003cp\u003e The system-wide default provider is used by the static \u003ccode\u003eopen\u003c/code\u003e methods of the \u003ca href\u003d\"../DatagramChannel.html#open()\"\u003e\u003ccode\u003eDatagramChannel\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../Pipe.html#open()\"\u003e\u003ccode\u003ePipe\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../Selector.html#open()\"\u003e\u003ccode\u003eSelector\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"../ServerSocketChannel.html#open()\"\u003e\u003ccode\u003eServerSocketChannel\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"../SocketChannel.html#open()\"\u003e\u003ccode\u003eSocketChannel\u003c/code\u003e\u003c/a\u003e classes. It is also used by the \u003ca href\u003d\"../../../lang/System.html#inheritedChannel()\"\u003e\u003ccode\u003eSystem.inheritedChannel()\u003c/code\u003e\u003c/a\u003e method. A program may make use of a provider other than the default provider by instantiating that provider and then directly invoking the \u003ccode\u003eopen\u003c/code\u003e methods defined in this class. \u003c/p\u003e\n\u003cp\u003e All of the methods in this class are safe for use by multiple concurrent threads. \u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}