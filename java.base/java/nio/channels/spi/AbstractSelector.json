{
  "packageName": "java.nio.channels.spi",
  "simpleName": "AbstractSelector",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.nio.channels.Selector",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "close",
      "comment": "Closes this selector. If the selector has already been closed then this method returns immediately. Otherwise it marks the selector as closed and then invokes the implCloseSelector method in order to complete the close operation.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/AutoCloseable.html#close()\"\u003eclose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/AutoCloseable.html\" title\u003d\"interface in java.lang\"\u003eAutoCloseable\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Closeable.html#close()\"\u003eclose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/Closeable.html\" title\u003d\"interface in java.io\"\u003eCloseable\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/Selector.html#close()\"\u003eclose\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/Selector.html\" title\u003d\"class in java.nio.channels\"\u003eSelector\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1028,
      "name": "implCloseSelector",
      "comment": "Closes this selector. This method is invoked by the close method in order to perform the actual work of closing the selector. This method is only invoked if the selector has not yet been closed, and it is never invoked more than once. An implementation of this method must arrange for any other thread that is blocked in a selection operation upon this selector to return immediately as if by invoking the wakeup method.",
      "annotations": [],
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs while closing the selector"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "isOpen",
      "comment": "Description copied from class: Selector",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/Selector.html#isOpen()\"\u003eisOpen\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/Selector.html\" title\u003d\"class in java.nio.channels\"\u003eSelector\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if, and only if, this selector is open"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.spi.SelectorProvider",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 17,
      "name": "provider",
      "comment": "Returns the provider that created this channel.",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/Selector.html#provider()\"\u003eprovider\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/Selector.html\" title\u003d\"class in java.nio.channels\"\u003eSelector\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "The provider that created this channel"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.nio.channels.SelectionKey",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "cancelledKeys",
      "comment": "Retrieves this selector\u0027s cancelled-key set. This set should only be used while synchronized upon it.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The cancelled-key set"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.channels.SelectionKey",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1028,
      "name": "register",
      "comment": "Registers the given channel with this selector. This method is invoked by a channel\u0027s register method in order to perform the actual work of registering the channel with this selector.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ech\u003c/code\u003e - The channel to be registered",
          "\u003ccode\u003eops\u003c/code\u003e - The initial interest set, which must be valid",
          "\u003ccode\u003eatt\u003c/code\u003e - The initial attachment for the resulting key"
        ],
        "return": [
          "A new key representing the registration of the given channel with this selector"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "deregister",
      "comment": "Removes the given key from its channel\u0027s key set. This method must be invoked by the selector for each channel that it deregisters.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - The selection key to be removed"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "begin",
      "comment": "Marks the beginning of an I/O operation that might block indefinitely. This method should be invoked in tandem with the end method, using a try ... finally block as shown above, in order to implement interruption for this selector. Invoking this method arranges for the selector\u0027s wakeup method to be invoked if a thread\u0027s interrupt method is invoked while the thread is blocked in an I/O operation upon the selector.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "end",
      "comment": "Marks the end of an I/O operation that might block indefinitely. This method should be invoked in tandem with the begin method, using a try ... finally block as shown above, in order to implement interruption for this selector.",
      "annotations": [],
      "tagMap": {}
    },
    {
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.nio.channels.spi.SelectorProvider",
            "type": "Class"
          },
          "name": "provider",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Initializes a new instance of this class.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eprovider\u003c/code\u003e - The provider that created this selector"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.nio.channels.spi.AbstractSelector",
  "comment": "Base implementation class for selectors. \n\u003cp\u003e This class encapsulates the low-level machinery required to implement the interruption of selection operations. A concrete selector class must invoke the \u003ca href\u003d\"#begin()\"\u003e\u003ccode\u003ebegin\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"#end()\"\u003e\u003ccode\u003eend\u003c/code\u003e\u003c/a\u003e methods before and after, respectively, invoking an I/O operation that might block indefinitely. In order to ensure that the \u003ca href\u003d\"#end()\"\u003e\u003ccode\u003eend\u003c/code\u003e\u003c/a\u003e method is always invoked, these methods should be used within a \u003ccode\u003etry\u003c/code\u003e\u0026nbsp;...\u0026nbsp;\u003ccode\u003efinally\u003c/code\u003e block: \u003c/p\u003e\n\u003cblockquote\u003e\n \u003cpre id\u003d\"be\"\u003e try {\n     begin();\n     // Perform blocking I/O operation here\n     ...\n } finally {\n     end();\n }\u003c/pre\u003e\n\u003c/blockquote\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e This class also defines methods for maintaining a selector\u0027s cancelled-key set and for removing a key from its channel\u0027s key set, and declares the abstract \u003ca href\u003d\"#register(java.nio.channels.spi.AbstractSelectableChannel,int,java.lang.Object)\"\u003e\u003ccode\u003eregister\u003c/code\u003e\u003c/a\u003e method that is invoked by a selectable channel\u0027s \u003ca href\u003d\"AbstractSelectableChannel.html#register(java.nio.channels.Selector,int,java.lang.Object)\"\u003e\u003ccode\u003eregister\u003c/code\u003e\u003c/a\u003e method in order to perform the actual work of registering a channel. \u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}