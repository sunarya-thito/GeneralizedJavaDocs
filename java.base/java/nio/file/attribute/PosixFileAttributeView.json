{
  "packageName": "java.nio.file.attribute",
  "simpleName": "PosixFileAttributeView",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "interfaces": [
    {
      "name": "java.nio.file.attribute.BasicFileAttributeView",
      "type": "Class"
    },
    {
      "name": "java.nio.file.attribute.FileOwnerAttributeView",
      "type": "Class"
    }
  ],
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "name",
      "comment": "Returns the name of the attribute view. Attribute views of this type have the name \"posix\".",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/AttributeView.html#name()\"\u003ename\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/AttributeView.html\" title\u003d\"interface in java.nio.file.attribute\"\u003eAttributeView\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/BasicFileAttributeView.html#name()\"\u003ename\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/BasicFileAttributeView.html\" title\u003d\"interface in java.nio.file.attribute\"\u003eBasicFileAttributeView\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/FileOwnerAttributeView.html#name()\"\u003ename\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/FileOwnerAttributeView.html\" title\u003d\"interface in java.nio.file.attribute\"\u003eFileOwnerAttributeView\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the name of the attribute view"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.file.attribute.PosixFileAttributes",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "readAttributes",
      "comment": "Description copied from interface: BasicFileAttributeView",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/BasicFileAttributeView.html#readAttributes()\"\u003ereadAttributes\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/BasicFileAttributeView.html\" title\u003d\"interface in java.nio.file.attribute\"\u003eBasicFileAttributeView\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - In the case of the default provider, a security manager is installed, and it denies \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimePermission.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eRuntimePermission\u003c/code\u003e\u003c/a\u003e\n\u003ccode\u003e(\"accessUserInformation\")\u003c/code\u003e or its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkRead(java.lang.String)\"\u003e\u003ccode\u003echeckRead\u003c/code\u003e\u003c/a\u003e method denies read access to the file."
        ],
        "return": [
          "the file attributes"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.nio.file.attribute.PosixFilePermission",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "perms"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setPermissions",
      "comment": "Updates the file permissions.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eperms\u003c/code\u003e - the new set of permissions"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the sets contains elements that are not of type \n\u003ccode\u003e PosixFilePermission\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - In the case of the default provider, a security manager is installed, and it denies \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimePermission.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eRuntimePermission\u003c/code\u003e\u003c/a\u003e\n\u003ccode\u003e(\"accessUserInformation\")\u003c/code\u003e or its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkWrite(java.lang.String)\"\u003e\u003ccode\u003echeckWrite\u003c/code\u003e\u003c/a\u003e method denies write access to the file."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.nio.file.attribute.GroupPrincipal",
            "type": "Class"
          },
          "field": {
            "name": "group"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setGroup",
      "comment": "Updates the file group-owner.",
      "tagMap": {
        "param": [
          "\u003ccode\u003egroup\u003c/code\u003e - the new file group-owner"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - In the case of the default provider, and a security manager is installed, it denies \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/RuntimePermission.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eRuntimePermission\u003c/code\u003e\u003c/a\u003e\n\u003ccode\u003e(\"accessUserInformation\")\u003c/code\u003e or its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkWrite(java.lang.String)\"\u003e\u003ccode\u003echeckWrite\u003c/code\u003e\u003c/a\u003e method denies write access to the file."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.nio.file.attribute.PosixFileAttributeView",
  "comment": "A file attribute view that provides a view of the file attributes commonly associated with files on file systems used by operating systems that implement the Portable Operating System Interface (POSIX) family of standards. \n\u003cp\u003e Operating systems that implement the \u003ca href\u003d\"http://www.opengroup.org\"\u003e POSIX\u003c/a\u003e family of standards commonly use file systems that have a file \u003cem\u003eowner\u003c/em\u003e, \u003cem\u003egroup-owner\u003c/em\u003e, and related \u003cem\u003eaccess permissions\u003c/em\u003e. This file attribute view provides read and write access to these attributes. \u003c/p\u003e\n\u003cp\u003e The \u003ca href\u003d\"#readAttributes()\"\u003e\u003ccode\u003ereadAttributes\u003c/code\u003e\u003c/a\u003e method is used to read the file\u0027s attributes. The file \u003ca href\u003d\"PosixFileAttributes.html#owner()\"\u003e\u003ccode\u003eowner\u003c/code\u003e\u003c/a\u003e is represented by a \u003ca href\u003d\"UserPrincipal.html\" title\u003d\"interface in java.nio.file.attribute\"\u003e\u003ccode\u003eUserPrincipal\u003c/code\u003e\u003c/a\u003e that is the identity of the file owner for the purposes of access control. The \u003ca href\u003d\"PosixFileAttributes.html#group()\"\u003e\u003ccode\u003egroup-owner\u003c/code\u003e\u003c/a\u003e, represented by a \u003ca href\u003d\"GroupPrincipal.html\" title\u003d\"interface in java.nio.file.attribute\"\u003e\u003ccode\u003eGroupPrincipal\u003c/code\u003e\u003c/a\u003e, is the identity of the group owner, where a group is an identity created for administrative purposes so as to determine the access rights for the members of the group. \u003c/p\u003e\n\u003cp\u003e The \u003ca href\u003d\"PosixFileAttributes.html#permissions()\"\u003e\u003ccode\u003epermissions\u003c/code\u003e\u003c/a\u003e attribute is a set of access permissions. This file attribute view provides access to the nine permission bits defined by the \u003ca href\u003d\"PosixFilePermission.html\" title\u003d\"enum class in java.nio.file.attribute\"\u003e\u003ccode\u003ePosixFilePermission\u003c/code\u003e\u003c/a\u003e class. These nine permission bits determine the \u003cem\u003eread\u003c/em\u003e, \u003cem\u003ewrite\u003c/em\u003e, and \u003cem\u003eexecute\u003c/em\u003e access for the file owner, group, and others (others meaning identities other than the owner and members of the group). Some operating systems and file systems may provide additional permission bits but access to these other bits is not defined by this class in this release. \u003c/p\u003e\n\u003cp\u003e \u003cb\u003eUsage Example:\u003c/b\u003e Suppose we need to print out the owner and access permissions of a file: \u003c/p\u003e\n\u003cpre\u003e     Path file \u003d ...\n     PosixFileAttributes attrs \u003d Files.getFileAttributeView(file, PosixFileAttributeView.class)\n         .readAttributes();\n     System.out.format(\"%s %s%n\",\n         attrs.owner().getName(),\n         PosixFilePermissions.toString(attrs.permissions()));\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003ch2\u003e Dynamic Access \u003c/h2\u003e \n\u003cp\u003e Where dynamic access to file attributes is required, the attributes supported by this attribute view are as defined by \u003ca href\u003d\"BasicFileAttributeView.html\" title\u003d\"interface in java.nio.file.attribute\"\u003e\u003ccode\u003eBasicFileAttributeView\u003c/code\u003e\u003c/a\u003e and \u003ca href\u003d\"FileOwnerAttributeView.html\" title\u003d\"interface in java.nio.file.attribute\"\u003e\u003ccode\u003eFileOwnerAttributeView\u003c/code\u003e\u003c/a\u003e, and in addition, the following attributes are supported: \u003c/p\u003e\n\u003cblockquote\u003e \n \u003ctable class\u003d\"striped\"\u003e \n  \u003ccaption style\u003d\"display:none\"\u003e\n   Supported attributes\n  \u003c/caption\u003e \n  \u003cthead\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"col\"\u003e Name \u003c/th\u003e \n    \u003cth scope\u003d\"col\"\u003e Type \u003c/th\u003e \n   \u003c/tr\u003e \n  \u003c/thead\u003e \n  \u003ctbody\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \"permissions\" \u003c/th\u003e \n    \u003ctd\u003e \u003ca href\u003d\"../../../util/Set.html\" title\u003d\"interface in java.util\"\u003e\u003ccode\u003eSet\u003c/code\u003e\u003c/a\u003e\u0026lt;\u003ca href\u003d\"PosixFilePermission.html\" title\u003d\"enum class in java.nio.file.attribute\"\u003e\u003ccode\u003ePosixFilePermission\u003c/code\u003e\u003c/a\u003e\u0026gt; \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e \"group\" \u003c/th\u003e \n    \u003ctd\u003e \u003ca href\u003d\"GroupPrincipal.html\" title\u003d\"interface in java.nio.file.attribute\"\u003e\u003ccode\u003eGroupPrincipal\u003c/code\u003e\u003c/a\u003e \u003c/td\u003e \n   \u003c/tr\u003e \n  \u003c/tbody\u003e \n \u003c/table\u003e \n\u003c/blockquote\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The \u003ca href\u003d\"../Files.html#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)\"\u003e\u003ccode\u003egetAttribute\u003c/code\u003e\u003c/a\u003e method may be used to read any of these attributes, or any of the attributes defined by \u003ca href\u003d\"BasicFileAttributeView.html\" title\u003d\"interface in java.nio.file.attribute\"\u003e\u003ccode\u003eBasicFileAttributeView\u003c/code\u003e\u003c/a\u003e as if by invoking the \u003ca href\u003d\"#readAttributes()\"\u003e\u003ccode\u003ereadAttributes()\u003c/code\u003e\u003c/a\u003e method. \u003c/p\u003e\n\u003cp\u003e The \u003ca href\u003d\"../Files.html#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)\"\u003e\u003ccode\u003esetAttribute\u003c/code\u003e\u003c/a\u003e method may be used to update the file\u0027s last modified time, last access time or create time attributes as defined by \u003ca href\u003d\"BasicFileAttributeView.html\" title\u003d\"interface in java.nio.file.attribute\"\u003e\u003ccode\u003eBasicFileAttributeView\u003c/code\u003e\u003c/a\u003e. It may also be used to update the permissions, owner, or group-owner as if by invoking the \u003ca href\u003d\"#setPermissions(java.util.Set)\"\u003e\u003ccode\u003esetPermissions\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"FileOwnerAttributeView.html#setOwner(java.nio.file.attribute.UserPrincipal)\"\u003e\u003ccode\u003esetOwner\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"#setGroup(java.nio.file.attribute.GroupPrincipal)\"\u003e\u003ccode\u003esetGroup\u003c/code\u003e\u003c/a\u003e methods respectively. \u003c/p\u003e\n\u003ch2\u003e Setting Initial Permissions \u003c/h2\u003e \n\u003cp\u003e Implementations supporting this attribute view may also support setting the initial permissions when creating a file or directory. The initial permissions are provided to the \u003ca href\u003d\"../Files.html#createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)\"\u003e\u003ccode\u003ecreateFile\u003c/code\u003e\u003c/a\u003e or \u003ca href\u003d\"../Files.html#createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)\"\u003e\u003ccode\u003ecreateDirectory\u003c/code\u003e\u003c/a\u003e methods as a \u003ca href\u003d\"FileAttribute.html\" title\u003d\"interface in java.nio.file.attribute\"\u003e\u003ccode\u003eFileAttribute\u003c/code\u003e\u003c/a\u003e with \u003ca href\u003d\"FileAttribute.html#name()\"\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/a\u003e \u003ccode\u003e\"posix:permissions\"\u003c/code\u003e and a \u003ca href\u003d\"FileAttribute.html#value()\"\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/a\u003e that is the set of permissions. The following example uses the \u003ca href\u003d\"PosixFilePermissions.html#asFileAttribute(java.util.Set)\"\u003e\u003ccode\u003easFileAttribute\u003c/code\u003e\u003c/a\u003e method to construct a \u003ccode\u003eFileAttribute\u003c/code\u003e when creating a file: \u003c/p\u003e\n\u003cpre\u003e     Path path \u003d ...\n     Set\u0026lt;PosixFilePermission\u0026gt; perms \u003d\n         EnumSet.of(OWNER_READ, OWNER_WRITE, OWNER_EXECUTE, GROUP_READ);\n     Files.createFile(path, PosixFilePermissions.asFileAttribute(perms));\n \u003c/pre\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e When the access permissions are set at file creation time then the actual value of the permissions may differ from the value of the attribute object. The reasons for this are implementation specific. On UNIX systems, for example, a process has a \u003cem\u003eumask\u003c/em\u003e that impacts the permission bits of newly created files. Where an implementation supports the setting of the access permissions, and the underlying file system supports access permissions, then it is required that the value of the actual access permissions will be equal or less than the value of the attribute provided to the \u003ca href\u003d\"../Files.html#createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)\"\u003e\u003ccode\u003ecreateFile\u003c/code\u003e\u003c/a\u003e or \u003ca href\u003d\"../Files.html#createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)\"\u003e\u003ccode\u003ecreateDirectory\u003c/code\u003e\u003c/a\u003e methods. In other words, the file may be more secure than requested.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.7"
    ]
  }
}