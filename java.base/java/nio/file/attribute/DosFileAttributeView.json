{
  "packageName": "java.nio.file.attribute",
  "simpleName": "DosFileAttributeView",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.nio.file.attribute.BasicFileAttributeView",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "name",
      "comment": "Returns the name of the attribute view. Attribute views of this type have the name \"dos\".",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/AttributeView.html#name()\"\u003ename\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/AttributeView.html\" title\u003d\"interface in java.nio.file.attribute\"\u003eAttributeView\u003c/a\u003e\u003c/code\u003e",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/BasicFileAttributeView.html#name()\"\u003ename\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/BasicFileAttributeView.html\" title\u003d\"interface in java.nio.file.attribute\"\u003eBasicFileAttributeView\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "the name of the attribute view"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.file.attribute.DosFileAttributes",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "readAttributes",
      "comment": "Description copied from interface: BasicFileAttributeView",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/BasicFileAttributeView.html#readAttributes()\"\u003ereadAttributes\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/BasicFileAttributeView.html\" title\u003d\"interface in java.nio.file.attribute\"\u003eBasicFileAttributeView\u003c/a\u003e\u003c/code\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - In the case of the default provider, a security manager is installed, its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkRead(java.lang.String)\"\u003e\u003ccode\u003echeckRead\u003c/code\u003e\u003c/a\u003e method is invoked to check read access to the file"
        ],
        "return": [
          "the file attributes"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setReadOnly",
      "comment": "Updates the value of the read-only attribute. It is implementation specific if the attribute can be updated as an atomic operation with respect to other file system operations. An implementation may, for example, require to read the existing value of the DOS attribute in order to update this attribute.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the new value of the attribute"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - In the case of the default, and a security manager is installed, its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkWrite(java.lang.String)\"\u003e\u003ccode\u003echeckWrite\u003c/code\u003e\u003c/a\u003e method is invoked to check write access to the file"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setHidden",
      "comment": "Updates the value of the hidden attribute. It is implementation specific if the attribute can be updated as an atomic operation with respect to other file system operations. An implementation may, for example, require to read the existing value of the DOS attribute in order to update this attribute.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the new value of the attribute"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - In the case of the default, and a security manager is installed, its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkWrite(java.lang.String)\"\u003e\u003ccode\u003echeckWrite\u003c/code\u003e\u003c/a\u003e method is invoked to check write access to the file"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setSystem",
      "comment": "Updates the value of the system attribute. It is implementation specific if the attribute can be updated as an atomic operation with respect to other file system operations. An implementation may, for example, require to read the existing value of the DOS attribute in order to update this attribute.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the new value of the attribute"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - In the case of the default, and a security manager is installed, its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkWrite(java.lang.String)\"\u003e\u003ccode\u003echeckWrite\u003c/code\u003e\u003c/a\u003e method is invoked to check write access to the file"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "setArchive",
      "comment": "Updates the value of the archive attribute. It is implementation specific if the attribute can be updated as an atomic operation with respect to other file system operations. An implementation may, for example, require to read the existing value of the DOS attribute in order to update this attribute.",
      "tagMap": {
        "param": [
          "\u003ccode\u003evalue\u003c/code\u003e - the new value of the attribute"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - In the case of the default, and a security manager is installed, its \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkWrite(java.lang.String)\"\u003e\u003ccode\u003echeckWrite\u003c/code\u003e\u003c/a\u003e method is invoked to check write access to the file"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "java.nio.file.attribute.DosFileAttributeView",
  "comment": "A file attribute view that provides a view of the legacy \"DOS\" file attributes. These attributes are supported by file systems such as the File Allocation Table (FAT) format commonly used in \n\u003cem\u003econsumer devices\u003c/em\u003e. \n\u003cp\u003e A \u003ccode\u003eDosFileAttributeView\u003c/code\u003e is a \u003ca href\u003d\"BasicFileAttributeView.html\" title\u003d\"interface in java.nio.file.attribute\"\u003e\u003ccode\u003eBasicFileAttributeView\u003c/code\u003e\u003c/a\u003e that additionally supports access to the set of DOS attribute flags that are used to indicate if the file is read-only, hidden, a system file, or archived. \u003c/p\u003e\n\u003cp\u003e Where dynamic access to file attributes is required, the attributes supported by this attribute view are as defined by \u003ccode\u003e BasicFileAttributeView\u003c/code\u003e, and in addition, the following attributes are supported: \u003c/p\u003e\n\u003cblockquote\u003e \n \u003ctable class\u003d\"striped\"\u003e \n  \u003ccaption style\u003d\"display:none\"\u003e\n   Supported attributes\n  \u003c/caption\u003e \n  \u003cthead\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"col\"\u003e Name \u003c/th\u003e \n    \u003cth scope\u003d\"col\"\u003e Type \u003c/th\u003e \n   \u003c/tr\u003e \n  \u003c/thead\u003e \n  \u003ctbody\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e readonly \u003c/th\u003e \n    \u003ctd\u003e \u003ca href\u003d\"../../../lang/Boolean.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/a\u003e \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e hidden \u003c/th\u003e \n    \u003ctd\u003e \u003ca href\u003d\"../../../lang/Boolean.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/a\u003e \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e system \u003c/th\u003e \n    \u003ctd\u003e \u003ca href\u003d\"../../../lang/Boolean.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/a\u003e \u003c/td\u003e \n   \u003c/tr\u003e \n   \u003ctr\u003e \n    \u003cth scope\u003d\"row\"\u003e archive \u003c/th\u003e \n    \u003ctd\u003e \u003ca href\u003d\"../../../lang/Boolean.html\" title\u003d\"class in java.lang\"\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/a\u003e \u003c/td\u003e \n   \u003c/tr\u003e \n  \u003c/tbody\u003e \n \u003c/table\u003e \n\u003c/blockquote\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The \u003ca href\u003d\"../Files.html#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)\"\u003e\u003ccode\u003egetAttribute\u003c/code\u003e\u003c/a\u003e method may be used to read any of these attributes, or any of the attributes defined by \u003ca href\u003d\"BasicFileAttributeView.html\" title\u003d\"interface in java.nio.file.attribute\"\u003e\u003ccode\u003eBasicFileAttributeView\u003c/code\u003e\u003c/a\u003e as if by invoking the \u003ca href\u003d\"#readAttributes()\"\u003e\u003ccode\u003ereadAttributes()\u003c/code\u003e\u003c/a\u003e method. \u003c/p\u003e\n\u003cp\u003e The \u003ca href\u003d\"../Files.html#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)\"\u003e\u003ccode\u003esetAttribute\u003c/code\u003e\u003c/a\u003e method may be used to update the file\u0027s last modified time, last access time or create time attributes as defined by \u003ca href\u003d\"BasicFileAttributeView.html\" title\u003d\"interface in java.nio.file.attribute\"\u003e\u003ccode\u003eBasicFileAttributeView\u003c/code\u003e\u003c/a\u003e. It may also be used to update the DOS attributes as if by invoking the \u003ca href\u003d\"#setReadOnly(boolean)\"\u003e\u003ccode\u003esetReadOnly\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#setHidden(boolean)\"\u003e\u003ccode\u003esetHidden\u003c/code\u003e\u003c/a\u003e, \u003ca href\u003d\"#setSystem(boolean)\"\u003e\u003ccode\u003esetSystem\u003c/code\u003e\u003c/a\u003e, and \u003ca href\u003d\"#setArchive(boolean)\"\u003e\u003ccode\u003esetArchive\u003c/code\u003e\u003c/a\u003e methods respectively.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.7"
    ]
  }
}