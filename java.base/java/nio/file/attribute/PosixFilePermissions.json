{
  "packageName": "java.nio.file.attribute",
  "simpleName": "PosixFilePermissions",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.nio.file.attribute.PosixFilePermission",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "perms"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "toString",
      "comment": "Returns the String representation of a set of permissions. It is guaranteed that the returned String can be parsed by the fromString(java.lang.String) method. If the set contains null or elements that are not of type PosixFilePermission then these elements are ignored.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eperms\u003c/code\u003e - the set of permissions"
        ],
        "return": [
          "the string representation of the permission set"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Set",
        "parameters": [
          {
            "name": "java.nio.file.attribute.PosixFilePermission",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "perms"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "fromString",
      "comment": "Returns the set of permissions corresponding to a given String representation. The perms parameter is a String representing the permissions. It has 9 characters that are interpreted as three sets of three. The first set refers to the owner\u0027s permissions; the next to the group permissions and the last to others. Within each set, the first character is \u0027r\u0027 to indicate permission to read, the second character is \u0027w\u0027 to indicate permission to write, and the third character is \u0027x\u0027 for execute permission. Where a permission is not set then the corresponding character is set to \u0027-\u0027. Usage Example: Suppose we require the set of permissions that indicate the owner has read, write, and execute permissions, the group has read and execute permissions and others have none.    Set\u003cPosixFilePermission\u003e perms \u003d PosixFilePermissions.fromString(\"rwxr-x---\");",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/PosixFilePermissions.html#toString(java.util.Set)\"\u003e\u003ccode\u003etoString(Set)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eperms\u003c/code\u003e - string representing a set of permissions"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the string cannot be converted to a set of permissions"
        ],
        "return": [
          "the resulting set of permissions"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.file.attribute.FileAttribute",
        "parameters": [
          {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.nio.file.attribute.PosixFilePermission",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.util.Set",
            "parameters": [
              {
                "name": "java.nio.file.attribute.PosixFilePermission",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "perms"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "asFileAttribute",
      "comment": "Creates a FileAttribute, encapsulating a copy of the given file permissions, suitable for passing to the createFile or createDirectory methods.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eperms\u003c/code\u003e - the set of permissions"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/ClassCastException.html\" title\u003d\"class in java.lang\"\u003eClassCastException\u003c/a\u003e\u003c/code\u003e - if the set contains elements that are not of type \n\u003ccode\u003e PosixFilePermission\u003c/code\u003e"
        ],
        "return": [
          "an attribute encapsulating the given file permissions with \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/attribute/FileAttribute.html#name()\"\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/a\u003e \n\u003ccode\u003e\"posix:permissions\"\u003c/code\u003e"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "java.nio.file.attribute.PosixFilePermissions",
  "comment": "This class consists exclusively of static methods that operate on sets of \n\u003ca href\u003d\"PosixFilePermission.html\" title\u003d\"enum class in java.nio.file.attribute\"\u003e\u003ccode\u003ePosixFilePermission\u003c/code\u003e\u003c/a\u003e objects.",
  "tagMap": {
    "since": [
      "1.7"
    ]
  }
}