{
  "packageName": "java.nio.file",
  "simpleName": "SimpleFileVisitor",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.nio.file.FileVisitResult",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "owner": "java.nio.file.SimpleFileVisitor",
            "name": "T",
            "type": "Variable"
          },
          "field": {
            "name": "dir"
          }
        },
        {
          "type": {
            "name": "java.nio.file.attribute.BasicFileAttributes",
            "type": "Class"
          },
          "field": {
            "name": "attrs"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "preVisitDirectory",
      "comment": "Invoked for a directory before entries in the directory are visited. Unless overridden, this method returns CONTINUE.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/FileVisitor.html#preVisitDirectory(T,java.nio.file.attribute.BasicFileAttributes)\"\u003epreVisitDirectory\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/FileVisitor.html\" title\u003d\"interface in java.nio.file\"\u003eFileVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/SimpleFileVisitor.html\" title\u003d\"type parameter in SimpleFileVisitor\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003edir\u003c/code\u003e - a reference to the directory",
          "\u003ccode\u003eattrs\u003c/code\u003e - the directory\u0027s basic attributes"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs"
        ],
        "return": [
          "the visit result"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.file.FileVisitResult",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "owner": "java.nio.file.SimpleFileVisitor",
            "name": "T",
            "type": "Variable"
          },
          "field": {
            "name": "file"
          }
        },
        {
          "type": {
            "name": "java.nio.file.attribute.BasicFileAttributes",
            "type": "Class"
          },
          "field": {
            "name": "attrs"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitFile",
      "comment": "Invoked for a file in a directory. Unless overridden, this method returns CONTINUE.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/FileVisitor.html#visitFile(T,java.nio.file.attribute.BasicFileAttributes)\"\u003evisitFile\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/FileVisitor.html\" title\u003d\"interface in java.nio.file\"\u003eFileVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/SimpleFileVisitor.html\" title\u003d\"type parameter in SimpleFileVisitor\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - a reference to the file",
          "\u003ccode\u003eattrs\u003c/code\u003e - the file\u0027s basic attributes"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs"
        ],
        "return": [
          "the visit result"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.file.FileVisitResult",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "owner": "java.nio.file.SimpleFileVisitor",
            "name": "T",
            "type": "Variable"
          },
          "field": {
            "name": "file"
          }
        },
        {
          "type": {
            "name": "java.io.IOException",
            "type": "Class"
          },
          "field": {
            "name": "exc"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "visitFileFailed",
      "comment": "Invoked for a file that could not be visited. Unless overridden, this method re-throws the I/O exception that prevented the file from being visited.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/FileVisitor.html#visitFileFailed(T,java.io.IOException)\"\u003evisitFileFailed\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/FileVisitor.html\" title\u003d\"interface in java.nio.file\"\u003eFileVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/SimpleFileVisitor.html\" title\u003d\"type parameter in SimpleFileVisitor\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003efile\u003c/code\u003e - a reference to the file",
          "\u003ccode\u003eexc\u003c/code\u003e - the I/O exception that prevented the file from being visited"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs"
        ],
        "return": [
          "the visit result"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.nio.file.FileVisitResult",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "owner": "java.nio.file.SimpleFileVisitor",
            "name": "T",
            "type": "Variable"
          },
          "field": {
            "name": "dir"
          }
        },
        {
          "type": {
            "name": "java.io.IOException",
            "type": "Class"
          },
          "field": {
            "name": "exc"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "postVisitDirectory",
      "comment": "Invoked for a directory after entries in the directory, and all of their descendants, have been visited. Unless overridden, this method returns CONTINUE if the directory iteration completes without an I/O exception; otherwise this method re-throws the I/O exception that caused the iteration of the directory to terminate prematurely.",
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/FileVisitor.html#postVisitDirectory(T,java.io.IOException)\"\u003epostVisitDirectory\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in interface\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/FileVisitor.html\" title\u003d\"interface in java.nio.file\"\u003eFileVisitor\u003c/a\u003e\u0026lt;\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/file/SimpleFileVisitor.html\" title\u003d\"type parameter in SimpleFileVisitor\"\u003eT\u003c/a\u003e\u0026gt;\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003edir\u003c/code\u003e - a reference to the directory",
          "\u003ccode\u003eexc\u003c/code\u003e - \n\u003ccode\u003enull\u003c/code\u003e if the iteration of the directory completes without an error; otherwise the I/O exception that caused the iteration of the directory to complete prematurely"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs"
        ],
        "return": [
          "the visit result"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Initializes a new instance of this class.",
      "tagMap": {}
    }
  ],
  "genericParameters": [
    {
      "name": "T",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1,
  "name": "java.nio.file.SimpleFileVisitor",
  "comment": "A simple visitor of files with default behavior to visit all files and to re-throw I/O errors. \n\u003cp\u003e Methods in this class may be overridden subject to their general contract.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.7"
    ]
  }
}