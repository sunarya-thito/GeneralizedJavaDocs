{
  "packageName": "java.nio.file",
  "simpleName": "Filter",
  "moduleName": "java.base",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "accept",
      "comment": "Decides if the given directory entry should be accepted or filtered.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eentry\u003c/code\u003e - the directory entry to be tested"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs"
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the directory entry should be accepted"
        ]
      }
    }
  ],
  "genericParameters": [
    {
      "name": "T",
      "type": "Variable"
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 521,
  "name": "java.nio.file.DirectoryStream$Filter",
  "comment": "An interface that is implemented by objects that decide if a directory entry should be accepted or filtered. A \n\u003ccode\u003eFilter\u003c/code\u003e is passed as the parameter to the \n\u003ca href\u003d\"Files.html#newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream.Filter)\"\u003e\u003ccode\u003eFiles.newDirectoryStream(Path,DirectoryStream.Filter)\u003c/code\u003e\u003c/a\u003e method when opening a directory to iterate over the entries in the directory.",
  "tagMap": {
    "since": [
      "1.7"
    ]
  }
}