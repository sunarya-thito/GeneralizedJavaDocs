{
  "packageName": "java.net",
  "simpleName": "ContentHandler",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.URLConnection",
            "type": "Class"
          },
          "name": "urlc",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "getContent",
      "comment": "Given a URL connect stream positioned at the beginning of the representation of an object, this method reads that stream and creates an object from it.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eurlc\u003c/code\u003e - a URL connection."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs while reading the object."
        ],
        "return": [
          "the object read by the \n\u003ccode\u003eContentHandler\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "annotations": [],
          "type": {
            "name": "java.net.URLConnection",
            "type": "Class"
          },
          "name": "urlc",
          "varargs": false
        },
        {
          "annotations": [],
          "type": {
            "name": "java.lang.Class",
            "type": "Class",
            "arrayDimensions": 1
          },
          "name": "classes",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getContent",
      "comment": "Given a URL connect stream positioned at the beginning of the representation of an object, this method reads that stream and creates an object that matches one of the types specified. The default implementation of this method should call getContent(URLConnection) and screen the return type for a match of the suggested types.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eurlc\u003c/code\u003e - a URL connection.",
          "\u003ccode\u003eclasses\u003c/code\u003e - an array of types requested"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs while reading the object."
        ],
        "return": [
          "the object read by the \n\u003ccode\u003eContentHandler\u003c/code\u003e that is the first match of the suggested types or \n\u003ccode\u003enull\u003c/code\u003e if none of the requested are supported."
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor for subclasses to call.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.net.ContentHandler",
  "comment": "The abstract class \n\u003ccode\u003eContentHandler\u003c/code\u003e is the superclass of all classes that read an \n\u003ccode\u003eObject\u003c/code\u003e from a \n\u003ccode\u003eURLConnection\u003c/code\u003e. \n\u003cp\u003e An application does not generally call the \u003ccode\u003egetContent\u003c/code\u003e method in this class directly. Instead, an application calls the \u003ccode\u003egetContent\u003c/code\u003e method in class \u003ccode\u003eURL\u003c/code\u003e or in \u003ccode\u003eURLConnection\u003c/code\u003e. The application\u0027s content handler factory (an instance of a class that implements the interface \u003ccode\u003eContentHandlerFactory\u003c/code\u003e set up by a call to \u003ca href\u003d\"URLConnection.html#setContentHandlerFactory(java.net.ContentHandlerFactory)\"\u003e\u003ccode\u003esetContentHandlerFactory\u003c/code\u003e\u003c/a\u003e is called with a \u003ccode\u003eString\u003c/code\u003e giving the MIME type of the object being received on the socket. The factory returns an instance of a subclass of \u003ccode\u003eContentHandler\u003c/code\u003e, and its \u003ccode\u003egetContent\u003c/code\u003e method is called to create the object. \u003c/p\u003e\n\u003cp\u003e If no content handler could be \u003ca href\u003d\"URLConnection.html#getContent()\"\u003efound\u003c/a\u003e, URLConnection will look for a content handler in a user-definable set of places. Users can define a vertical-bar delimited set of class prefixes to search through by defining the \u003ci\u003e\"java.content.handler.pkgs\"\u003c/i\u003e property. The class name must be of the form: \u003c/p\u003e\n\u003cblockquote\u003e \n \u003ci\u003e{package-prefix}.{major}.{minor}\u003c/i\u003e \n \u003cp\u003e where \u003ci\u003e{major}.{minor}\u003c/i\u003e is formed by taking the content-type string, replacing all slash characters with a \u003ccode\u003eperiod\u003c/code\u003e (\u0027.\u0027), and all other non-alphanumeric characters with the underscore character \u0027\u003ccode\u003e_\u003c/code\u003e\u0027. The alphanumeric characters are specifically the 26 uppercase ASCII letters \u0027\u003ccode\u003eA\u003c/code\u003e\u0027 through \u0027\u003ccode\u003eZ\u003c/code\u003e\u0027, the 26 lowercase ASCII letters \u0027\u003ccode\u003ea\u003c/code\u003e\u0027 through \u0027\u003ccode\u003ez\u003c/code\u003e\u0027, and the 10 ASCII digits \u0027\u003ccode\u003e0\u003c/code\u003e\u0027 through \u0027\u003ccode\u003e9\u003c/code\u003e\u0027. \u003c/p\u003e\n \u003cp\u003e e.g. YoyoDyne.experimental.text.plain \u003c/p\u003e\n\u003c/blockquote\u003e If no user-defined content handler is found, then the system tries to load a specific \n\u003ci\u003econtent-type\u003c/i\u003e handler from one of the built-in handlers, if one exists. \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e If the loading of the content handler class would be performed by a classloader that is outside of the delegation chain of the caller, the JVM will need the RuntimePermission \"getClassLoader\".\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/ContentHandler.html#getContent(java.net.URLConnection)\"\u003e\u003ccode\u003egetContent(java.net.URLConnection)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/ContentHandlerFactory.html\" title\u003d\"interface in java.net\"\u003e\u003ccode\u003eContentHandlerFactory\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URL.html#getContent()\"\u003e\u003ccode\u003eURL.getContent()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003eURLConnection\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getContent()\"\u003e\u003ccode\u003eURLConnection.getContent()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setContentHandlerFactory(java.net.ContentHandlerFactory)\"\u003e\u003ccode\u003eURLConnection.setContentHandlerFactory(java.net.ContentHandlerFactory)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.0"
    ]
  }
}