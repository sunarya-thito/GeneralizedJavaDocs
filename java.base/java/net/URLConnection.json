{
  "packageName": "java.net",
  "simpleName": "URLConnection",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "java.net.URL",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "url",
      "comment": "The URL represents the remote object on the World Wide Web to which this connection is opened. The value of this field can be accessed by the getURL method. The default value of this variable is the value of the URL argument in the URLConnection constructor.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getURL()\"\u003e\u003ccode\u003egetURL()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#url\"\u003e\u003ccode\u003eurl\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "doInput",
      "comment": "This variable is set by the setDoInput method. Its value is returned by the getDoInput method. A URL connection can be used for input and/or output. Setting the doInput flag to true indicates that the application intends to read data from the URL connection. The default value of this field is true.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getDoInput()\"\u003e\u003ccode\u003egetDoInput()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setDoInput(boolean)\"\u003e\u003ccode\u003esetDoInput(boolean)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "doOutput",
      "comment": "This variable is set by the setDoOutput method. Its value is returned by the getDoOutput method. A URL connection can be used for input and/or output. Setting the doOutput flag to true indicates that the application intends to write data to the URL connection. The default value of this field is false.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getDoOutput()\"\u003e\u003ccode\u003egetDoOutput()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setDoOutput(boolean)\"\u003e\u003ccode\u003esetDoOutput(boolean)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "allowUserInteraction",
      "comment": "If true, this URL is being examined in a context in which it makes sense to allow user interactions such as popping up an authentication dialog. If false, then no user interaction is allowed. The value of this field can be set by the setAllowUserInteraction method. Its value is returned by the getAllowUserInteraction method. Its default value is the value of the argument in the last invocation of the setDefaultAllowUserInteraction method.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getAllowUserInteraction()\"\u003e\u003ccode\u003egetAllowUserInteraction()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setAllowUserInteraction(boolean)\"\u003e\u003ccode\u003esetAllowUserInteraction(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setDefaultAllowUserInteraction(boolean)\"\u003e\u003ccode\u003esetDefaultAllowUserInteraction(boolean)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "useCaches",
      "comment": "If true, the protocol is allowed to use caching whenever it can. If false, the protocol must always try to get a fresh copy of the object. This field is set by the setUseCaches method. Its value is returned by the getUseCaches method. Its default value is the value given in the last invocation of the setDefaultUseCaches method. The default setting may be overridden per protocol with setDefaultUseCaches(String,boolean).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setUseCaches(boolean)\"\u003e\u003ccode\u003esetUseCaches(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getUseCaches()\"\u003e\u003ccode\u003egetUseCaches()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setDefaultUseCaches(boolean)\"\u003e\u003ccode\u003esetDefaultUseCaches(boolean)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "long",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "ifModifiedSince",
      "comment": "Some protocols support skipping the fetching of the object unless the object has been modified more recently than a certain time. A nonzero value gives a time as the number of milliseconds since January 1, 1970, GMT. The object is fetched only if it has been modified more recently than that time. This variable is set by the setIfModifiedSince method. Its value is returned by the getIfModifiedSince method. The default value of this field is 0, indicating that the fetching must always occur.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getIfModifiedSince()\"\u003e\u003ccode\u003egetIfModifiedSince()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setIfModifiedSince(long)\"\u003e\u003ccode\u003esetIfModifiedSince(long)\u003c/code\u003e\u003c/a\u003e"
        ]
      }
    },
    {
      "type": {
        "name": "boolean",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "connected",
      "comment": "If false, this connection object has not created a communications link to the specified URL. If true, the communications link has been established.",
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "java.net.FileNameMap",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getFileNameMap",
      "comment": "Loads filename map (a mimetable) from a data file. It will first try to load the user-specific table, defined by \"content.types.user.table\" property. If that fails, it tries to load the default built-in table.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setFileNameMap(java.net.FileNameMap)\"\u003e\u003ccode\u003esetFileNameMap(java.net.FileNameMap)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the FileNameMap"
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.net.FileNameMap",
            "type": "Class"
          },
          "field": {
            "name": "map"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "setFileNameMap",
      "comment": "Sets the FileNameMap. If there is a security manager, this method first calls the security manager\u0027s checkSetFactory method to ensure the operation is allowed. This could result in a SecurityException.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkSetFactory()\"\u003e\u003ccode\u003eSecurityManager.checkSetFactory()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getFileNameMap()\"\u003e\u003ccode\u003egetFileNameMap()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003emap\u003c/code\u003e - the FileNameMap to be set"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and its \n\u003ccode\u003echeckSetFactory\u003c/code\u003e method doesn\u0027t allow the operation."
        ],
        "since": [
          "1.2"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "connect",
      "comment": "Opens a communications link to the resource referenced by this URL, if such a connection has not already been established. If the connect method is called when the connection has already been opened (indicated by the connected field having the value true), the call is ignored. URLConnection objects go through two phases: first they are created, then they are connected. After being created, and before being connected, various options can be specified (e.g., doInput and UseCaches). After connecting, it is an error to try to set them. Operations that depend on being connected, like getContentLength, will implicitly perform the connection, if necessary.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#connected\"\u003e\u003ccode\u003econnected\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getConnectTimeout()\"\u003e\u003ccode\u003egetConnectTimeout()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setConnectTimeout(int)\"\u003e\u003ccode\u003esetConnectTimeout(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/SocketTimeoutException.html\" title\u003d\"class in java.net\"\u003eSocketTimeoutException\u003c/a\u003e\u003c/code\u003e - if the timeout expires before the connection can be established",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs while opening the connection."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "timeout"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setConnectTimeout",
      "comment": "Sets a specified timeout value, in milliseconds, to be used when opening a communications link to the resource referenced by this URLConnection. If the timeout expires before the connection can be established, a java.net.SocketTimeoutException is raised. A timeout of zero is interpreted as an infinite timeout. Some non-standard implementation of this method may ignore the specified timeout. To see the connect timeout set, please call getConnectTimeout().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getConnectTimeout()\"\u003e\u003ccode\u003egetConnectTimeout()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#connect()\"\u003e\u003ccode\u003econnect()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etimeout\u003c/code\u003e - an \n\u003ccode\u003eint\u003c/code\u003e that specifies the connect timeout value in milliseconds"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the timeout parameter is negative"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getConnectTimeout",
      "comment": "Returns setting for connect timeout. 0 return implies that the option is disabled (i.e., timeout of infinity).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setConnectTimeout(int)\"\u003e\u003ccode\u003esetConnectTimeout(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#connect()\"\u003e\u003ccode\u003econnect()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eint\u003c/code\u003e that indicates the connect timeout value in milliseconds"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "timeout"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setReadTimeout",
      "comment": "Sets the read timeout to a specified timeout, in milliseconds. A non-zero value specifies the timeout when reading from Input stream when a connection is established to a resource. If the timeout expires before there is data available for read, a java.net.SocketTimeoutException is raised. A timeout of zero is interpreted as an infinite timeout. Some non-standard implementation of this method ignores the specified timeout. To see the read timeout set, please call getReadTimeout().",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getReadTimeout()\"\u003e\u003ccode\u003egetReadTimeout()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/InputStream.html#read()\"\u003e\u003ccode\u003eInputStream.read()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003etimeout\u003c/code\u003e - an \n\u003ccode\u003eint\u003c/code\u003e that specifies the timeout value to be used in milliseconds"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the timeout parameter is negative"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getReadTimeout",
      "comment": "Returns setting for read timeout. 0 return implies that the option is disabled (i.e., timeout of infinity).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setReadTimeout(int)\"\u003e\u003ccode\u003esetReadTimeout(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/InputStream.html#read()\"\u003e\u003ccode\u003eInputStream.read()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an \n\u003ccode\u003eint\u003c/code\u003e that indicates the read timeout value in milliseconds"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.URL",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getURL",
      "comment": "Returns the value of this URLConnection\u0027s URL field.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#url\"\u003e\u003ccode\u003eurl\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the value of this \n\u003ccode\u003eURLConnection\u003c/code\u003e\u0027s \n\u003ccode\u003eURL\u003c/code\u003e field."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getContentLength",
      "comment": "Returns the value of the content-length header field. Note: getContentLengthLong() should be preferred over this method, since it returns a long instead and is therefore more portable.",
      "tagMap": {
        "return": [
          "the content length of the resource that this connection\u0027s URL references, \n\u003ccode\u003e-1\u003c/code\u003e if the content length is not known, or if the content length is greater than Integer.MAX_VALUE."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getContentLengthLong",
      "comment": "Returns the value of the content-length header field as a long.",
      "tagMap": {
        "return": [
          "the content length of the resource that this connection\u0027s URL references, or \n\u003ccode\u003e-1\u003c/code\u003e if the content length is not known."
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getContentType",
      "comment": "Returns the value of the content-type header field.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getHeaderField(java.lang.String)\"\u003e\u003ccode\u003egetHeaderField(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the content type of the resource that the URL references, or \n\u003ccode\u003enull\u003c/code\u003e if not known."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getContentEncoding",
      "comment": "Returns the value of the content-encoding header field.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getHeaderField(java.lang.String)\"\u003e\u003ccode\u003egetHeaderField(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the content encoding of the resource that the URL references, or \n\u003ccode\u003enull\u003c/code\u003e if not known."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getExpiration",
      "comment": "Returns the value of the expires header field.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getHeaderField(java.lang.String)\"\u003e\u003ccode\u003egetHeaderField(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the expiration date of the resource that this URL references, or 0 if not known. The value is the number of milliseconds since January 1, 1970 GMT."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDate",
      "comment": "Returns the value of the date header field.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getHeaderField(java.lang.String)\"\u003e\u003ccode\u003egetHeaderField(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the sending date of the resource that the URL references, or \n\u003ccode\u003e0\u003c/code\u003e if not known. The value returned is the number of milliseconds since January 1, 1970 GMT."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getLastModified",
      "comment": "Returns the value of the last-modified header field. The result is the number of milliseconds since January 1, 1970 GMT.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getHeaderField(java.lang.String)\"\u003e\u003ccode\u003egetHeaderField(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the date the resource referenced by this \n\u003ccode\u003eURLConnection\u003c/code\u003e was last modified, or 0 if not known."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHeaderField",
      "comment": "Returns the value of the named header field. If called on a connection that sets the same header multiple times with possibly different values, only the last value is returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of a header field."
        ],
        "return": [
          "the value of the named header field, or \n\u003ccode\u003enull\u003c/code\u003e if there is no such field in the header."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          },
          {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHeaderFields",
      "comment": "Returns an unmodifiable Map of the header fields. The Map keys are Strings that represent the response-header field names. Each Map value is an unmodifiable List of Strings that represents the corresponding field values.",
      "tagMap": {
        "return": [
          "a Map of header fields"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "Default"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHeaderFieldInt",
      "comment": "Returns the value of the named field parsed as a number. This form of getHeaderField exists because some connection types (e.g., http-ng) have pre-parsed headers. Classes for that connection type can override this method and short-circuit the parsing.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the header field.",
          "\u003ccode\u003eDefault\u003c/code\u003e - the default value."
        ],
        "return": [
          "the value of the named field, parsed as an integer. The \n\u003ccode\u003eDefault\u003c/code\u003e value is returned if the field is missing or malformed."
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "Default"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHeaderFieldLong",
      "comment": "Returns the value of the named field parsed as a number. This form of getHeaderField exists because some connection types (e.g., http-ng) have pre-parsed headers. Classes for that connection type can override this method and short-circuit the parsing.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the header field.",
          "\u003ccode\u003eDefault\u003c/code\u003e - the default value."
        ],
        "return": [
          "the value of the named field, parsed as a long. The \n\u003ccode\u003eDefault\u003c/code\u003e value is returned if the field is missing or malformed."
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        },
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "Default"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHeaderFieldDate",
      "comment": "Returns the value of the named field parsed as date. The result is the number of milliseconds since January 1, 1970 GMT represented by the named field. This form of getHeaderField exists because some connection types (e.g., http-ng) have pre-parsed headers. Classes for that connection type can override this method and short-circuit the parsing.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - the name of the header field.",
          "\u003ccode\u003eDefault\u003c/code\u003e - a default value."
        ],
        "return": [
          "the value of the field, parsed as a date. The value of the \n\u003ccode\u003eDefault\u003c/code\u003e argument is returned if the field is missing or malformed."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "n"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHeaderFieldKey",
      "comment": "Returns the key for the nth header field. Some implementations may treat the 0th header field as special, in which case, getHeaderField(0) may return some value, but getHeaderFieldKey(0) returns null. For n \u003e 0 it returns null if there are fewer than n+1 fields.",
      "tagMap": {
        "param": [
          "\u003ccode\u003en\u003c/code\u003e - an index, where \n\u003ccode\u003en\u0026gt;\u003d0\u003c/code\u003e"
        ],
        "return": [
          "the key for the \n\u003ccode\u003en\u003c/code\u003e\n\u003csup\u003eth\u003c/sup\u003e header field, or \n\u003ccode\u003enull\u003c/code\u003e if there are fewer than \n\u003ccode\u003en+1\u003c/code\u003e fields when \n\u003ccode\u003en \u0026gt; 0\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "n"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHeaderField",
      "comment": "Returns the value for the nth header field. It returns null if there are fewer than n+1 fields. This method can be used in conjunction with the getHeaderFieldKey method to iterate through all the headers in the message.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getHeaderFieldKey(int)\"\u003e\u003ccode\u003egetHeaderFieldKey(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003en\u003c/code\u003e - an index, where \n\u003ccode\u003en\u0026gt;\u003d0\u003c/code\u003e"
        ],
        "return": [
          "the value of the \n\u003ccode\u003en\u003c/code\u003e\n\u003csup\u003eth\u003c/sup\u003e header field or \n\u003ccode\u003enull\u003c/code\u003e if there are fewer than \n\u003ccode\u003en+1\u003c/code\u003e fields"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getContent",
      "comment": "Retrieves the contents of this URL connection. This method first determines the content type of the object by calling the getContentType method. If this is the first time that the application has seen that specific content type, a content handler for that content type is created. This is done as follows: If the application has set up a content handler factory instance using the setContentHandlerFactory method, the createContentHandler method of that instance is called with the content type as an argument; the result is a content handler for that content type. If no ContentHandlerFactory has yet been set up, or if the factory\u0027s createContentHandler method returns null, then the ServiceLoader mechanism is used to locate ContentHandlerFactory implementations using the system class loader. The order that factories are located is implementation specific, and an implementation is free to cache the located factories. A ServiceConfigurationError, Error or RuntimeException thrown from the createContentHandler, if encountered, will be propagated to the calling thread. The createContentHandler method of each factory, if instantiated, is invoked, with the content type, until a factory returns non-null, or all factories have been exhausted. Failing that, this method tries to load a content handler class as defined by ContentHandler. If the class does not exist, or is not a subclass of ContentHandler, then an UnknownServiceException is thrown.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/ContentHandlerFactory.html#createContentHandler(java.lang.String)\"\u003e\u003ccode\u003eContentHandlerFactory.createContentHandler(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getContentType()\"\u003e\u003ccode\u003egetContentType()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setContentHandlerFactory(java.net.ContentHandlerFactory)\"\u003e\u003ccode\u003esetContentHandlerFactory(java.net.ContentHandlerFactory)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs while getting the content.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/UnknownServiceException.html\" title\u003d\"class in java.net\"\u003eUnknownServiceException\u003c/a\u003e\u003c/code\u003e - if the protocol does not support the content type."
        ],
        "return": [
          "the object fetched. The \n\u003ccode\u003einstanceof\u003c/code\u003e operator should be used to determine the specific kind of object returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.Object",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.Class",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class",
            "arrayDimensions": [
              {}
            ]
          },
          "field": {
            "name": "classes"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getContent",
      "comment": "Retrieves the contents of this URL connection.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getContent()\"\u003e\u003ccode\u003egetContent()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/ContentHandlerFactory.html#createContentHandler(java.lang.String)\"\u003e\u003ccode\u003eContentHandlerFactory.createContentHandler(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getContent(java.lang.Class%5B%5D)\"\u003e\u003ccode\u003egetContent(java.lang.Class[])\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setContentHandlerFactory(java.net.ContentHandlerFactory)\"\u003e\u003ccode\u003esetContentHandlerFactory(java.net.ContentHandlerFactory)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eclasses\u003c/code\u003e - the \n\u003ccode\u003eClass\u003c/code\u003e array indicating the requested types"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs while getting the content.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/UnknownServiceException.html\" title\u003d\"class in java.net\"\u003eUnknownServiceException\u003c/a\u003e\u003c/code\u003e - if the protocol does not support the content type."
        ],
        "return": [
          "the object fetched that is the first match of the type specified in the classes array. null if none of the requested types are supported. The \n\u003ccode\u003einstanceof\u003c/code\u003e operator should be used to determine the specific kind of object returned."
        ],
        "since": [
          "1.3"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.security.Permission",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getPermission",
      "comment": "Returns a permission object representing the permission necessary to make the connection represented by this object. This method returns null if no permission is required to make the connection. By default, this method returns java.security.AllPermission. Subclasses should override this method and return the permission that best represents the permission required to make a connection to the URL. For example, a URLConnection representing a file: URL would return a java.io.FilePermission object. The permission returned may dependent upon the state of the connection. For example, the permission before connecting may be different from that after connecting. For example, an HTTP sever, say foo.com, may redirect the connection to a different host, say bar.com. Before connecting the permission returned by the connection will represent the permission needed to connect to foo.com, while the permission returned after connecting will be to bar.com. Permissions are generally used for two purposes: to protect caches of objects obtained through URLConnections, and to check the right of a recipient to learn about a particular URL. In the first case, the permission should be obtained after the object has been obtained. For example, in an HTTP connection, this will represent the permission to connect to the host from which the data was ultimately fetched. In the second case, the permission should be obtained and tested before connecting.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if the computation of the permission requires network or file I/O and an exception occurs while computing it."
        ],
        "return": [
          "the permission object representing the permission necessary to make the connection represented by this URLConnection."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.InputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getInputStream",
      "comment": "Returns an input stream that reads from this open connection. A SocketTimeoutException can be thrown when reading from the returned input stream if the read timeout expires before data is available for read.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setReadTimeout(int)\"\u003e\u003ccode\u003esetReadTimeout(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getReadTimeout()\"\u003e\u003ccode\u003egetReadTimeout()\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs while creating the input stream.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/UnknownServiceException.html\" title\u003d\"class in java.net\"\u003eUnknownServiceException\u003c/a\u003e\u003c/code\u003e - if the protocol does not support input."
        ],
        "return": [
          "an input stream that reads from this open connection."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.io.OutputStream",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getOutputStream",
      "comment": "Returns an output stream that writes to this connection.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs while creating the output stream.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/UnknownServiceException.html\" title\u003d\"class in java.net\"\u003eUnknownServiceException\u003c/a\u003e\u003c/code\u003e - if the protocol does not support output."
        ],
        "return": [
          "an output stream that writes to this connection."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "toString",
      "comment": "Returns a String representation of this URL connection.",
      "tagMap": {
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#toString()\"\u003etoString\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "return": [
          "a string representation of this \n\u003ccode\u003eURLConnection\u003c/code\u003e."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "doinput"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDoInput",
      "comment": "Sets the value of the doInput field for this URLConnection to the specified value. A URL connection can be used for input and/or output. Set the doInput flag to true if you intend to use the URL connection for input, false if not. The default is true.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#doInput\"\u003e\u003ccode\u003edoInput\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getDoInput()\"\u003e\u003ccode\u003egetDoInput()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edoinput\u003c/code\u003e - the new value."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if already connected"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDoInput",
      "comment": "Returns the value of this URLConnection\u0027s doInput flag.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setDoInput(boolean)\"\u003e\u003ccode\u003esetDoInput(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the value of this \n\u003ccode\u003eURLConnection\u003c/code\u003e\u0027s \n\u003ccode\u003edoInput\u003c/code\u003e flag."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "dooutput"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDoOutput",
      "comment": "Sets the value of the doOutput field for this URLConnection to the specified value. A URL connection can be used for input and/or output. Set the doOutput flag to true if you intend to use the URL connection for output, false if not. The default is false.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getDoOutput()\"\u003e\u003ccode\u003egetDoOutput()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edooutput\u003c/code\u003e - the new value."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if already connected"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDoOutput",
      "comment": "Returns the value of this URLConnection\u0027s doOutput flag.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setDoOutput(boolean)\"\u003e\u003ccode\u003esetDoOutput(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the value of this \n\u003ccode\u003eURLConnection\u003c/code\u003e\u0027s \n\u003ccode\u003edoOutput\u003c/code\u003e flag."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "allowuserinteraction"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setAllowUserInteraction",
      "comment": "Set the value of the allowUserInteraction field of this URLConnection.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getAllowUserInteraction()\"\u003e\u003ccode\u003egetAllowUserInteraction()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eallowuserinteraction\u003c/code\u003e - the new value."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if already connected"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getAllowUserInteraction",
      "comment": "Returns the value of the allowUserInteraction field for this object.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setAllowUserInteraction(boolean)\"\u003e\u003ccode\u003esetAllowUserInteraction(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the value of the \n\u003ccode\u003eallowUserInteraction\u003c/code\u003e field for this object."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "defaultallowuserinteraction"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "setDefaultAllowUserInteraction",
      "comment": "Sets the default value of the allowUserInteraction field for all future URLConnection objects to the specified value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getDefaultAllowUserInteraction()\"\u003e\u003ccode\u003egetDefaultAllowUserInteraction()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edefaultallowuserinteraction\u003c/code\u003e - the new value."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getDefaultAllowUserInteraction",
      "comment": "Returns the default value of the allowUserInteraction field. This default is \"sticky\", being a part of the static state of all URLConnections. This flag applies to the next, and all following URLConnections that are created.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setDefaultAllowUserInteraction(boolean)\"\u003e\u003ccode\u003esetDefaultAllowUserInteraction(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the default value of the \n\u003ccode\u003eallowUserInteraction\u003c/code\u003e field."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "usecaches"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setUseCaches",
      "comment": "Sets the value of the useCaches field of this URLConnection to the specified value. Some protocols do caching of documents. Occasionally, it is important to be able to \"tunnel through\" and ignore the caches (e.g., the \"reload\" button in a browser). If the UseCaches flag on a connection is true, the connection is allowed to use whatever caches it can. If false, caches are to be ignored. The default value comes from defaultUseCaches, which defaults to true. A default value can also be set per-protocol using setDefaultUseCaches(String,boolean).",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getUseCaches()\"\u003e\u003ccode\u003egetUseCaches()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eusecaches\u003c/code\u003e - a \n\u003ccode\u003eboolean\u003c/code\u003e indicating whether or not to allow caching"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if already connected"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getUseCaches",
      "comment": "Returns the value of this URLConnection\u0027s useCaches field.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setUseCaches(boolean)\"\u003e\u003ccode\u003esetUseCaches(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the value of this \n\u003ccode\u003eURLConnection\u003c/code\u003e\u0027s \n\u003ccode\u003euseCaches\u003c/code\u003e field."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "long",
            "type": "Class"
          },
          "field": {
            "name": "ifmodifiedsince"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setIfModifiedSince",
      "comment": "Sets the value of the ifModifiedSince field of this URLConnection to the specified value.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getIfModifiedSince()\"\u003e\u003ccode\u003egetIfModifiedSince()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eifmodifiedsince\u003c/code\u003e - the new value."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if already connected"
        ]
      }
    },
    {
      "returnType": {
        "name": "long",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIfModifiedSince",
      "comment": "Returns the value of this object\u0027s ifModifiedSince field.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setIfModifiedSince(long)\"\u003e\u003ccode\u003esetIfModifiedSince(long)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the value of this object\u0027s \n\u003ccode\u003eifModifiedSince\u003c/code\u003e field."
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDefaultUseCaches",
      "comment": "Returns the default value of a URLConnection\u0027s useCaches flag. This default is \"sticky\", being a part of the static state of all URLConnections. This flag applies to the next, and all following URLConnections that are created. This default value can be over-ridden per protocol using setDefaultUseCaches(String,boolean)",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setDefaultUseCaches(boolean)\"\u003e\u003ccode\u003esetDefaultUseCaches(boolean)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the default value of a \n\u003ccode\u003eURLConnection\u003c/code\u003e\u0027s \n\u003ccode\u003euseCaches\u003c/code\u003e flag."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "defaultusecaches"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setDefaultUseCaches",
      "comment": "Sets the default value of the useCaches field to the specified value. This default value can be over-ridden per protocol using setDefaultUseCaches(String,boolean)",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getDefaultUseCaches()\"\u003e\u003ccode\u003egetDefaultUseCaches()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003edefaultusecaches\u003c/code\u003e - the new value."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "protocol"
          }
        },
        {
          "type": {
            "name": "boolean",
            "type": "Class"
          },
          "field": {
            "name": "defaultVal"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "setDefaultUseCaches",
      "comment": "Sets the default value of the useCaches field for the named protocol to the given value. This value overrides any default setting set by setDefaultUseCaches(boolean) for the given protocol. Successive calls to this method change the setting and affect the default value for all future connections of that protocol. The protocol name is case insensitive.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprotocol\u003c/code\u003e - the protocol to set the default for",
          "\u003ccode\u003edefaultVal\u003c/code\u003e - whether caching is enabled by default for the given protocol"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "protocol"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getDefaultUseCaches",
      "comment": "Returns the default value of the useCaches flag for the given protocol. If setDefaultUseCaches(String,boolean) was called for the given protocol, then that value is returned. Otherwise, if setDefaultUseCaches(boolean) was called, then that value is returned. If neither method was called, the return value is true. The protocol name is case insensitive.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eprotocol\u003c/code\u003e - the protocol whose defaultUseCaches setting is required"
        ],
        "return": [
          "the default value of the \n\u003ccode\u003euseCaches\u003c/code\u003e flag for the given protocol."
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "setRequestProperty",
      "comment": "Sets the general request property. If a property with the key already exists, overwrite its value with the new value. NOTE: HTTP requires all request properties which can legally have multiple instances with the same key to use a comma-separated list syntax which enables multiple properties to be appended into a single property.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getRequestProperty(java.lang.String)\"\u003e\u003ccode\u003egetRequestProperty(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the keyword by which the request is known (e.g., \"\n\u003ccode\u003eAccept\u003c/code\u003e\").",
          "\u003ccode\u003evalue\u003c/code\u003e - the value associated with it."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if already connected",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if key is \n\u003ccode\u003enull\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "addRequestProperty",
      "comment": "Adds a general request property specified by a key-value pair. This method will not overwrite existing values associated with the same key.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getRequestProperties()\"\u003e\u003ccode\u003egetRequestProperties()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the keyword by which the request is known (e.g., \"\n\u003ccode\u003eAccept\u003c/code\u003e\").",
          "\u003ccode\u003evalue\u003c/code\u003e - the value associated with it."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if already connected",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - if key is null"
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRequestProperty",
      "comment": "Returns the value of the named general request property for this connection.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setRequestProperty(java.lang.String,java.lang.String)\"\u003e\u003ccode\u003esetRequestProperty(java.lang.String, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the keyword by which the request is known (e.g., \"Accept\")."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if already connected"
        ],
        "return": [
          "the value of the named general request property for this connection. If key is null, then null is returned."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          },
          {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getRequestProperties",
      "comment": "Returns an unmodifiable Map of general request properties for this connection. The Map keys are Strings that represent the request-header field names. Each Map value is a unmodifiable List of Strings that represents the corresponding field values.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalStateException.html\" title\u003d\"class in java.lang\"\u003eIllegalStateException\u003c/a\u003e\u003c/code\u003e - if already connected"
        ],
        "return": [
          "a Map of the general request properties for this connection."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        },
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "value"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "setDefaultRequestProperty",
      "comment": "Sets the default value of a general request property. When a URLConnection is created, it is initialized with these properties.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setRequestProperty(java.lang.String,java.lang.String)\"\u003e\u003ccode\u003esetRequestProperty(java.lang.String,java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getDefaultRequestProperty(java.lang.String)\"\u003e\u003ccode\u003egetDefaultRequestProperty(java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the keyword by which the request is known (e.g., \"\n\u003ccode\u003eAccept\u003c/code\u003e\").",
          "\u003ccode\u003evalue\u003c/code\u003e - the value associated with the key."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "key"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getDefaultRequestProperty",
      "comment": "Returns the value of the default request property. Default request properties are set for every connection.",
      "annotations": [
        {
          "type": "Deprecated"
        }
      ],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getRequestProperty(java.lang.String)\"\u003e\u003ccode\u003egetRequestProperty(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setDefaultRequestProperty(java.lang.String,java.lang.String)\"\u003e\u003ccode\u003esetDefaultRequestProperty(java.lang.String, java.lang.String)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ekey\u003c/code\u003e - the keyword by which the request is known (e.g., \"Accept\")."
        ],
        "return": [
          "the value of the default request property for the specified key."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.net.ContentHandlerFactory",
            "type": "Class"
          },
          "field": {
            "name": "fac"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "setContentHandlerFactory",
      "comment": "Sets the ContentHandlerFactory of an application. It can be called at most once by an application. The ContentHandlerFactory instance is used to construct a content handler from a content type. If there is a security manager, this method first calls the security manager\u0027s checkSetFactory method to ensure the operation is allowed. This could result in a SecurityException.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/ContentHandlerFactory.html\" title\u003d\"interface in java.net\"\u003e\u003ccode\u003eContentHandlerFactory\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getContent()\"\u003e\u003ccode\u003egetContent()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkSetFactory()\"\u003e\u003ccode\u003eSecurityManager.checkSetFactory()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003efac\u003c/code\u003e - the desired factory."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Error.html\" title\u003d\"class in java.lang\"\u003eError\u003c/a\u003e\u003c/code\u003e - if the factory has already been defined.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and its \n\u003ccode\u003echeckSetFactory\u003c/code\u003e method doesn\u0027t allow the operation."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "fname"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "guessContentTypeFromName",
      "comment": "Tries to determine the content type of an object, based on the specified \"file\" component of a URL. This is a convenience method that can be used by subclasses that override the getContentType method.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getContentType()\"\u003e\u003ccode\u003egetContentType()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003efname\u003c/code\u003e - a filename."
        ],
        "return": [
          "a guess as to what the content type of the object is, based upon its file name."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.io.InputStream",
            "type": "Class"
          },
          "field": {
            "name": "is"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "guessContentTypeFromStream",
      "comment": "Tries to determine the type of an input stream based on the characters at the beginning of the input stream. This method can be used by subclasses that override the getContentType method. Ideally, this routine would not be needed. But many http servers return the incorrect content type; in addition, there are many nonstandard extensions. Direct inspection of the bytes to determine the content type is often more accurate than believing the content type claimed by the http server.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/InputStream.html#mark(int)\"\u003e\u003ccode\u003eInputStream.mark(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/InputStream.html#markSupported()\"\u003e\u003ccode\u003eInputStream.markSupported()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getContentType()\"\u003e\u003ccode\u003egetContentType()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eis\u003c/code\u003e - an input stream that supports marks."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs while reading the input stream."
        ],
        "return": [
          "a guess at the content type, or \n\u003ccode\u003enull\u003c/code\u003e if none can be determined."
        ]
      }
    },
    {
      "parameters": [
        {
          "type": {
            "name": "java.net.URL",
            "type": "Class"
          },
          "field": {
            "name": "url"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 4,
      "comment": "Constructs a URL connection to the specified URL. A connection to the object referenced by the URL is not created.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eurl\u003c/code\u003e - the specified URL."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.net.URLConnection",
  "comment": "The abstract class \n\u003ccode\u003eURLConnection\u003c/code\u003e is the superclass of all classes that represent a communications link between the application and a URL. Instances of this class can be used both to read from and to write to the resource referenced by the URL. \n\u003cp\u003e In general, creating a connection to a URL is a multistep process: \u003c/p\u003e\n\u003col\u003e \n \u003cli\u003eThe connection object is created by invoking the \u003ca href\u003d\"URL.html#openConnection()\"\u003e\u003ccode\u003eopenConnection\u003c/code\u003e\u003c/a\u003e method on a URL. \u003c/li\u003e\n \u003cli\u003eThe setup parameters and general request properties are manipulated. \u003c/li\u003e\n \u003cli\u003eThe actual connection to the remote object is made, using the \u003ca href\u003d\"#connect()\"\u003e\u003ccode\u003econnect\u003c/code\u003e\u003c/a\u003e method. \u003c/li\u003e\n \u003cli\u003eThe remote object becomes available. The header fields and the contents of the remote object can be accessed. \u003c/li\u003e\n\u003c/ol\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e The setup parameters are modified using the following methods: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e\u003ccode\u003esetAllowUserInteraction\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003esetDoInput\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003esetDoOutput\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003esetIfModifiedSince\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003esetUseCaches\u003c/code\u003e \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e and the general request properties are modified using the method: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e\u003ccode\u003esetRequestProperty\u003c/code\u003e \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e Default values for the \u003ccode\u003eAllowUserInteraction\u003c/code\u003e and \u003ccode\u003eUseCaches\u003c/code\u003e parameters can be set using the methods \u003ccode\u003esetDefaultAllowUserInteraction\u003c/code\u003e and \u003ccode\u003esetDefaultUseCaches\u003c/code\u003e. \u003c/p\u003e\n\u003cp\u003e Each of the above \u003ccode\u003eset\u003c/code\u003e methods has a corresponding \u003ccode\u003eget\u003c/code\u003e method to retrieve the value of the parameter or general request property. The specific parameters and general request properties that are applicable are protocol specific. \u003c/p\u003e\n\u003cp\u003e The following methods are used to access the header fields and the contents after the connection is made to the remote object: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e\u003ccode\u003egetContent\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003egetHeaderField\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003egetInputStream\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003egetOutputStream\u003c/code\u003e \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e Certain header fields are accessed frequently. The methods: \u003c/p\u003e\n\u003cul\u003e \n \u003cli\u003e\u003ccode\u003egetContentEncoding\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003egetContentLength\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003egetContentType\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003egetDate\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003egetExpiration\u003c/code\u003e \u003c/li\u003e\n \u003cli\u003e\u003ccode\u003egetLastModified\u003c/code\u003e \u003c/li\u003e\n\u003c/ul\u003e \n\u003cp\u003e\u003c/p\u003e\n\u003cp\u003e provide convenient access to these fields. The \u003ccode\u003egetContentType\u003c/code\u003e method is used by the \u003ccode\u003egetContent\u003c/code\u003e method to determine the type of the remote object; subclasses may find it convenient to override the \u003ccode\u003egetContentType\u003c/code\u003e method. \u003c/p\u003e\n\u003cp\u003e In the common case, all of the pre-connection parameters and general request properties can be ignored: the pre-connection parameters and request properties default to sensible values. For most clients of this interface, there are only two interesting methods: \u003ccode\u003egetInputStream\u003c/code\u003e and \u003ccode\u003egetContent\u003c/code\u003e, which are mirrored in the \u003ccode\u003eURL\u003c/code\u003e class by convenience methods. \u003c/p\u003e\n\u003cp\u003e More information on the request properties and header fields of an \u003ccode\u003ehttp\u003c/code\u003e connection can be found at: \u003c/p\u003e\n\u003cblockquote\u003e\n \u003cpre\u003e \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2616.txt\"\u003ehttp://www.ietf.org/rfc/rfc2616.txt\u003c/a\u003e\n \u003c/pre\u003e\n\u003c/blockquote\u003e Invoking the \n\u003ccode\u003eclose()\u003c/code\u003e methods on the \n\u003ccode\u003eInputStream\u003c/code\u003e or \n\u003ccode\u003eOutputStream\u003c/code\u003e of an \n\u003ccode\u003eURLConnection\u003c/code\u003e after a request may free network resources associated with this instance, unless particular protocol specifications specify different behaviours for it.\n\u003cp\u003e\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URL.html#openConnection()\"\u003e\u003ccode\u003eURL.openConnection()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#connect()\"\u003e\u003ccode\u003econnect()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getContent()\"\u003e\u003ccode\u003egetContent()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getContentEncoding()\"\u003e\u003ccode\u003egetContentEncoding()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getContentLength()\"\u003e\u003ccode\u003egetContentLength()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getContentType()\"\u003e\u003ccode\u003egetContentType()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getDate()\"\u003e\u003ccode\u003egetDate()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getExpiration()\"\u003e\u003ccode\u003egetExpiration()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getHeaderField(int)\"\u003e\u003ccode\u003egetHeaderField(int)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getHeaderField(java.lang.String)\"\u003e\u003ccode\u003egetHeaderField(java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getInputStream()\"\u003e\u003ccode\u003egetInputStream()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getLastModified()\"\u003e\u003ccode\u003egetLastModified()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#getOutputStream()\"\u003e\u003ccode\u003egetOutputStream()\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setAllowUserInteraction(boolean)\"\u003e\u003ccode\u003esetAllowUserInteraction(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setDefaultUseCaches(boolean)\"\u003e\u003ccode\u003esetDefaultUseCaches(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setDoInput(boolean)\"\u003e\u003ccode\u003esetDoInput(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setDoOutput(boolean)\"\u003e\u003ccode\u003esetDoOutput(boolean)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setIfModifiedSince(long)\"\u003e\u003ccode\u003esetIfModifiedSince(long)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setRequestProperty(java.lang.String,java.lang.String)\"\u003e\u003ccode\u003esetRequestProperty(java.lang.String, java.lang.String)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URLConnection.html#setUseCaches(boolean)\"\u003e\u003ccode\u003esetUseCaches(boolean)\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.0"
    ]
  }
}