{
  "packageName": "java.net",
  "simpleName": "NetworkInterface",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getName",
      "comment": "Get the name of this network interface.",
      "tagMap": {
        "return": [
          "the name of this network interface"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Enumeration",
        "parameters": [
          {
            "name": "java.net.InetAddress",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getInetAddresses",
      "comment": "Get an Enumeration with all or a subset of the InetAddresses bound to this network interface. If there is a security manager, its checkConnect method is called for each InetAddress. Only InetAddresses where the checkConnect doesn\u0027t throw a SecurityException will be returned in the Enumeration. However, if the caller has the NetPermission(\"getNetworkInformation\") permission, then all InetAddresses are returned.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetworkInterface.html#inetAddresses()\"\u003e\u003ccode\u003einetAddresses()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an Enumeration object with all or a subset of the InetAddresses bound to this network interface"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.stream.Stream",
        "parameters": [
          {
            "name": "java.net.InetAddress",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "inetAddresses",
      "comment": "Get a Stream of all or a subset of the InetAddresses bound to this network interface. If there is a security manager, its checkConnect method is called for each InetAddress. Only InetAddresses where the checkConnect doesn\u0027t throw a SecurityException will be returned in the Stream. However, if the caller has the NetPermission(\"getNetworkInformation\") permission, then all InetAddresses are returned.",
      "tagMap": {
        "return": [
          "a Stream object with all or a subset of the InetAddresses bound to this network interface"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.net.InterfaceAddress",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getInterfaceAddresses",
      "comment": "Get a List of all or a subset of the InterfaceAddresses of this network interface. If there is a security manager, its checkConnect method is called with the InetAddress for each InterfaceAddress. Only InterfaceAddresses where the checkConnect doesn\u0027t throw a SecurityException will be returned in the List.",
      "tagMap": {
        "return": [
          "a \n\u003ccode\u003eList\u003c/code\u003e object with all or a subset of the InterfaceAddress of this network interface"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Enumeration",
        "parameters": [
          {
            "name": "java.net.NetworkInterface",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getSubInterfaces",
      "comment": "Get an Enumeration with all the subinterfaces (also known as virtual interfaces) attached to this network interface. For instance eth0:1 will be a subinterface to eth0.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetworkInterface.html#subInterfaces()\"\u003e\u003ccode\u003esubInterfaces()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "an Enumeration object with all of the subinterfaces of this network interface"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.stream.Stream",
        "parameters": [
          {
            "name": "java.net.NetworkInterface",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "subInterfaces",
      "comment": "Get a Stream of all subinterfaces (also known as virtual interfaces) attached to this network interface.",
      "tagMap": {
        "return": [
          "a Stream object with all of the subinterfaces of this network interface"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.NetworkInterface",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getParent",
      "comment": "Returns the parent NetworkInterface of this interface if this is a subinterface, or null if it is a physical (non virtual) interface or has no parent.",
      "tagMap": {
        "return": [
          "The \n\u003ccode\u003eNetworkInterface\u003c/code\u003e this interface is attached to."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getIndex",
      "comment": "Returns the index of this network interface. The index is an integer greater or equal to zero, or -1 for unknown. This is a system specific value and interfaces with the same name can have different indexes on different machines.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetworkInterface.html#getByIndex(int)\"\u003e\u003ccode\u003egetByIndex(int)\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the index of this network interface or \n\u003ccode\u003e-1\u003c/code\u003e if the index is unknown"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getDisplayName",
      "comment": "Get the display name of this network interface. A display name is a human readable String describing the network device.",
      "tagMap": {
        "return": [
          "a non-empty string representing the display name of this network interface, or null if no display name is available."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.NetworkInterface",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.net.SocketException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.lang.String",
            "type": "Class"
          },
          "field": {
            "name": "name"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getByName",
      "comment": "Searches for the network interface with the specified name.",
      "tagMap": {
        "param": [
          "\u003ccode\u003ename\u003c/code\u003e - The name of the network interface."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/SocketException.html\" title\u003d\"class in java.net\"\u003eSocketException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - If the specified name is \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "return": [
          "A \n\u003ccode\u003eNetworkInterface\u003c/code\u003e with the specified name, or \n\u003ccode\u003enull\u003c/code\u003e if there is no network interface with the specified name."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.NetworkInterface",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.net.SocketException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "int",
            "type": "Class"
          },
          "field": {
            "name": "index"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getByIndex",
      "comment": "Get a network interface given its index.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetworkInterface.html#getIndex()\"\u003e\u003ccode\u003egetIndex()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eindex\u003c/code\u003e - an integer, the index of the interface"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/SocketException.html\" title\u003d\"class in java.net\"\u003eSocketException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if index has a negative value"
        ],
        "return": [
          "the NetworkInterface obtained from its index, or \n\u003ccode\u003enull\u003c/code\u003e if there is no interface with such an index on the system"
        ],
        "since": [
          "1.7"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.NetworkInterface",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.net.SocketException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.InetAddress",
            "type": "Class"
          },
          "field": {
            "name": "addr"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getByInetAddress",
      "comment": "Convenience method to search for a network interface that has the specified Internet Protocol (IP) address bound to it. If the specified IP address is bound to multiple network interfaces it is not defined which network interface is returned.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eaddr\u003c/code\u003e - The \n\u003ccode\u003eInetAddress\u003c/code\u003e to search with."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/SocketException.html\" title\u003d\"class in java.net\"\u003eSocketException\u003c/a\u003e\u003c/code\u003e - If an I/O error occurs.",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/NullPointerException.html\" title\u003d\"class in java.lang\"\u003eNullPointerException\u003c/a\u003e\u003c/code\u003e - If the specified address is \n\u003ccode\u003enull\u003c/code\u003e."
        ],
        "return": [
          "A \n\u003ccode\u003eNetworkInterface\u003c/code\u003e or \n\u003ccode\u003enull\u003c/code\u003e if there is no network interface with the specified IP address."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Enumeration",
        "parameters": [
          {
            "name": "java.net.NetworkInterface",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.net.SocketException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getNetworkInterfaces",
      "comment": "Returns an Enumeration of all the interfaces on this machine. The Enumeration contains at least one element, possibly representing a loopback interface that only supports communication between entities on this machine.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetworkInterface.html#networkInterfaces()\"\u003e\u003ccode\u003enetworkInterfaces()\u003c/code\u003e\u003c/a\u003e"
        ],
        "apiNote": [
          "this method can be used in combination with \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetworkInterface.html#getInetAddresses()\"\u003e\u003ccode\u003egetInetAddresses()\u003c/code\u003e\u003c/a\u003e to obtain all IP addresses for this node"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/SocketException.html\" title\u003d\"class in java.net\"\u003eSocketException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs, or if the platform does not have at least one configured network interface."
        ],
        "return": [
          "an Enumeration of NetworkInterfaces found on this machine"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.stream.Stream",
        "parameters": [
          {
            "name": "java.net.NetworkInterface",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.net.SocketException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "networkInterfaces",
      "comment": "Returns a Stream of all the interfaces on this machine. The Stream contains at least one interface, possibly representing a loopback interface that only supports communication between entities on this machine.",
      "tagMap": {
        "apiNote": [
          "this method can be used in combination with \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetworkInterface.html#inetAddresses()\"\u003e\u003ccode\u003einetAddresses()\u003c/code\u003e\u003c/a\u003e} to obtain a stream of all IP addresses for this node, for example: \n\u003cpre\u003e \u003ccode\u003e\n Stream\u0026lt;InetAddress\u0026gt; addrs \u003d NetworkInterface.networkInterfaces()\n     .flatMap(NetworkInterface::inetAddresses);\n \u003c/code\u003e\u003c/pre\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/SocketException.html\" title\u003d\"class in java.net\"\u003eSocketException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs, or if the platform does not have at least one configured network interface."
        ],
        "return": [
          "a Stream of NetworkInterfaces found on this machine"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.net.SocketException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isUp",
      "comment": "Returns whether a network interface is up and running.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/SocketException.html\" title\u003d\"class in java.net\"\u003eSocketException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the interface is up and running."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.net.SocketException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isLoopback",
      "comment": "Returns whether a network interface is a loopback interface.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/SocketException.html\" title\u003d\"class in java.net\"\u003eSocketException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the interface is a loopback interface."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.net.SocketException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isPointToPoint",
      "comment": "Returns whether a network interface is a point to point interface. A typical point to point interface would be a PPP connection through a modem.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/SocketException.html\" title\u003d\"class in java.net\"\u003eSocketException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the interface is a point to point interface."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.net.SocketException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "supportsMulticast",
      "comment": "Returns whether a network interface supports multicasting or not.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/SocketException.html\" title\u003d\"class in java.net\"\u003eSocketException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the interface supports Multicasting."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "byte",
        "type": "Class",
        "arrayDimensions": [
          {}
        ]
      },
      "throwsClasses": [
        {
          "name": "java.net.SocketException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getHardwareAddress",
      "comment": "Returns the hardware address (usually MAC) of the interface if it has one and if it can be accessed given the current privileges. If a security manager is set, then the caller must have the permission NetPermission(\"getNetworkInformation\").",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/SocketException.html\" title\u003d\"class in java.net\"\u003eSocketException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs."
        ],
        "return": [
          "a byte array containing the address, or \n\u003ccode\u003enull\u003c/code\u003e if the address doesn\u0027t exist, is not accessible or a security manager is set and the caller does not have the permission NetPermission(\"getNetworkInformation\")"
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.net.SocketException",
          "type": "Class"
        }
      ],
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getMTU",
      "comment": "Returns the Maximum Transmission Unit (MTU) of this interface.",
      "tagMap": {
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/SocketException.html\" title\u003d\"class in java.net\"\u003eSocketException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs."
        ],
        "return": [
          "the value of the MTU for that interface."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "isVirtual",
      "comment": "Returns whether this interface is a virtual interface (also called subinterface). Virtual interfaces are, on some systems, interfaces created as a child of a physical interface and given different settings (like address or MTU). Usually the name of the interface will the name of the parent followed by a colon (:) and a number identifying the child since there can be several virtual interfaces attached to a single physical interface.",
      "tagMap": {
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if this interface is a virtual interface."
        ],
        "since": [
          "1.6"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.lang.Object",
            "type": "Class"
          },
          "field": {
            "name": "obj"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "equals",
      "comment": "Compares this object against the specified object. The result is true if and only if the argument is not null and it represents the same NetworkInterface as this object. Two instances of NetworkInterface represent the same NetworkInterface if both the name and the set of InetAddresses bound to the interfaces are equal.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/InetAddress.html#getAddress()\"\u003e\u003ccode\u003eInetAddress.getAddress()\u003c/code\u003e\u003c/a\u003e"
        ],
        "Overrides:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html#equals(java.lang.Object)\"\u003eequals\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/Object.html\" title\u003d\"class in java.lang\"\u003eObject\u003c/a\u003e\u003c/code\u003e"
        ],
        "apiNote": [
          "two \n\u003ccode\u003eNetworkInterface\u003c/code\u003e objects referring to the same underlying interface may not compare equal if the addresses of the underlying interface are being dynamically updated by the system."
        ],
        "param": [
          "\u003ccode\u003eobj\u003c/code\u003e - the object to compare against."
        ],
        "return": [
          "\u003ccode\u003etrue\u003c/code\u003e if the objects are the same; \n\u003ccode\u003efalse\u003c/code\u003e otherwise."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 17,
  "name": "java.net.NetworkInterface",
  "comment": "This class represents a Network Interface made up of a name, and a list of IP addresses assigned to this interface. It is used to identify the local interface on which a multicast group is joined. Interfaces are normally known by names such as \"le0\".",
  "tagMap": {
    "since": [
      "1.4"
    ]
  }
}