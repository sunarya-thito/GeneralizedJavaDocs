{
  "packageName": "java.net",
  "simpleName": "CookieHandler",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.net.CookieHandler",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getDefault",
      "comment": "Gets the system-wide cookie handler.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/CookieHandler.html#setDefault(java.net.CookieHandler)\"\u003e\u003ccode\u003esetDefault(CookieHandler)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and it denies \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetPermission.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003eNetPermission\u003c/code\u003e\u003c/a\u003e\n\u003ccode\u003e(\"getCookieHandler\")\u003c/code\u003e"
        ],
        "return": [
          "the system-wide cookie handler; A null return means there is no system-wide cookie handler currently set."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.net.CookieHandler",
            "type": "Class"
          },
          "field": {
            "name": "cHandler"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "setDefault",
      "comment": "Sets (or unsets) the system-wide cookie handler. Note: non-standard http protocol handlers may ignore this setting.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/CookieHandler.html#getDefault()\"\u003e\u003ccode\u003egetDefault()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ecHandler\u003c/code\u003e - The HTTP cookie handler, or \n\u003ccode\u003enull\u003c/code\u003e to unset."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and it denies \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetPermission.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003eNetPermission\u003c/code\u003e\u003c/a\u003e\n\u003ccode\u003e(\"setCookieHandler\")\u003c/code\u003e"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.Map",
        "parameters": [
          {
            "name": "java.lang.String",
            "type": "Class"
          },
          {
            "name": "java.util.List",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.URI",
            "type": "Class"
          },
          "field": {
            "name": "uri"
          }
        },
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "name": "java.util.List",
                "parameters": [
                  {
                    "name": "java.lang.String",
                    "type": "Class"
                  }
                ],
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "requestHeaders"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "get",
      "comment": "Gets all the applicable cookies from a cookie cache for the specified uri in the request header. The URI passed as an argument specifies the intended use for the cookies. In particular the scheme should reflect whether the cookies will be sent over http, https or used in another context like javascript. The host part should reflect either the destination of the cookies or their origin in the case of javascript. It is up to the implementation to take into account the URI and the cookies attributes and security settings to determine which ones should be returned. HTTP protocol implementers should make sure that this method is called after all request headers related to choosing cookies are added, and before the request is sent.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/CookieHandler.html#put(java.net.URI,java.util.Map)\"\u003e\u003ccode\u003eput(URI, Map)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003euri\u003c/code\u003e - a \n\u003ccode\u003eURI\u003c/code\u003e representing the intended use for the cookies",
          "\u003ccode\u003erequestHeaders\u003c/code\u003e - - a Map from request header field names to lists of field values representing the current request headers"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if either argument is null"
        ],
        "return": [
          "an immutable map from state management headers, with field names \"Cookie\" or \"Cookie2\" to a list of cookies containing state information"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "throwsClasses": [
        {
          "name": "java.io.IOException",
          "type": "Class"
        }
      ],
      "parameters": [
        {
          "type": {
            "name": "java.net.URI",
            "type": "Class"
          },
          "field": {
            "name": "uri"
          }
        },
        {
          "type": {
            "name": "java.util.Map",
            "parameters": [
              {
                "name": "java.lang.String",
                "type": "Class"
              },
              {
                "name": "java.util.List",
                "parameters": [
                  {
                    "name": "java.lang.String",
                    "type": "Class"
                  }
                ],
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "field": {
            "name": "responseHeaders"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "put",
      "comment": "Sets all the applicable cookies, examples are response header fields that are named Set-Cookie2, present in the response headers into a cookie cache.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/CookieHandler.html#get(java.net.URI,java.util.Map)\"\u003e\u003ccode\u003eget(URI, Map)\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003euri\u003c/code\u003e - a \n\u003ccode\u003eURI\u003c/code\u003e where the cookies come from",
          "\u003ccode\u003eresponseHeaders\u003c/code\u003e - an immutable map from field names to lists of field values representing the response header fields returned"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/io/IOException.html\" title\u003d\"class in java.io\"\u003eIOException\u003c/a\u003e\u003c/code\u003e - if an I/O error occurs",
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if either argument is null"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor for subclasses to call.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.net.CookieHandler",
  "comment": "A CookieHandler object provides a callback mechanism to hook up a HTTP state management policy implementation into the HTTP protocol handler. The HTTP state management mechanism specifies a way to create a stateful session with HTTP requests and responses. \n\u003cp\u003e A system-wide CookieHandler to be used by the \u003ca href\u003d\"HttpURLConnection.html\" title\u003d\"class in java.net\"\u003eHTTP URL stream protocol handler\u003c/a\u003e can be registered by doing a CookieHandler.setDefault(CookieHandler). The currently registered CookieHandler can be retrieved by calling CookieHandler.getDefault(). For more information on HTTP state management, see \u003ca href\u003d\"http://www.ietf.org/rfc/rfc2965.txt\"\u003e\u003ci\u003eRFC\u0026nbsp;2965: HTTP State Management Mechanism\u003c/i\u003e\u003c/a\u003e\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}