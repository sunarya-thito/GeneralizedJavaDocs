{
  "packageName": "java.net",
  "simpleName": "ProxySelector",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "java.net.ProxySelector",
        "type": "Class"
      },
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getDefault",
      "comment": "Gets the system-wide proxy selector.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/ProxySelector.html#setDefault(java.net.ProxySelector)\"\u003e\u003ccode\u003esetDefault(ProxySelector)\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and it denies \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetPermission.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003eNetPermission\u003c/code\u003e\u003c/a\u003e\n\u003ccode\u003e(\"getProxySelector\")\u003c/code\u003e"
        ],
        "return": [
          "the system-wide \n\u003ccode\u003eProxySelector\u003c/code\u003e"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.net.ProxySelector",
            "type": "Class"
          },
          "field": {
            "name": "ps"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "setDefault",
      "comment": "Sets (or unsets) the system-wide proxy selector. Note: non-standard protocol handlers may ignore this setting.",
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/ProxySelector.html#getDefault()\"\u003e\u003ccode\u003egetDefault()\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eps\u003c/code\u003e - The HTTP proxy selector, or \n\u003ccode\u003enull\u003c/code\u003e to unset the proxy selector."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - If a security manager has been installed and it denies \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetPermission.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003eNetPermission\u003c/code\u003e\u003c/a\u003e\n\u003ccode\u003e(\"setProxySelector\")\u003c/code\u003e"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.util.List",
        "parameters": [
          {
            "name": "java.net.Proxy",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.net.URI",
            "type": "Class"
          },
          "field": {
            "name": "uri"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "select",
      "comment": "Selects all the applicable proxies based on the protocol to access the resource with and a destination address to access the resource at. The format of the URI is defined as follow: http URI for http connections https URI for https connections socket://host:port for tcp client sockets connections",
      "tagMap": {
        "param": [
          "\u003ccode\u003euri\u003c/code\u003e - The URI that a connection is required to"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if the argument is null or if the protocol or host cannot be determined from the provided \n\u003ccode\u003euri\u003c/code\u003e"
        ],
        "return": [
          "a List of Proxies. Each element in the List is of type \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/Proxy.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003eProxy\u003c/code\u003e\u003c/a\u003e; when no proxy is available, the list will contain one element of type \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/Proxy.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003eProxy\u003c/code\u003e\u003c/a\u003e that represents a direct connection."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.net.URI",
            "type": "Class"
          },
          "field": {
            "name": "uri"
          }
        },
        {
          "type": {
            "name": "java.net.SocketAddress",
            "type": "Class"
          },
          "field": {
            "name": "sa"
          }
        },
        {
          "type": {
            "name": "java.io.IOException",
            "type": "Class"
          },
          "field": {
            "name": "ioe"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "connectFailed",
      "comment": "Called to indicate that a connection could not be established to a proxy/socks server. An implementation of this method can temporarily remove the proxies or reorder the sequence of proxies returned by select(URI), using the address and the IOException caught when trying to connect.",
      "tagMap": {
        "param": [
          "\u003ccode\u003euri\u003c/code\u003e - The URI that the proxy at sa failed to serve.",
          "\u003ccode\u003esa\u003c/code\u003e - The socket address of the proxy/SOCKS server",
          "\u003ccode\u003eioe\u003c/code\u003e - The I/O exception thrown when the connect failed."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/IllegalArgumentException.html\" title\u003d\"class in java.lang\"\u003eIllegalArgumentException\u003c/a\u003e\u003c/code\u003e - if either argument is null"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.ProxySelector",
        "type": "Class"
      },
      "parameters": [
        {
          "type": {
            "name": "java.net.InetSocketAddress",
            "type": "Class"
          },
          "field": {
            "name": "proxyAddress"
          }
        }
      ],
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "of",
      "comment": "Returns a ProxySelector which uses the given proxy address for all HTTP and HTTPS requests. If proxy is null then proxying is disabled.",
      "tagMap": {
        "param": [
          "\u003ccode\u003eproxyAddress\u003c/code\u003e - The address of the proxy"
        ],
        "return": [
          "a ProxySelector"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "parameters": [],
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor for subclasses to call.",
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.net.ProxySelector",
  "comment": "Selects the proxy server to use, if any, when connecting to the network resource referenced by a URL. A proxy selector is a concrete sub-class of this class and is registered by invoking the \n\u003ca href\u003d\"#setDefault(java.net.ProxySelector)\"\u003e\u003ccode\u003esetDefault\u003c/code\u003e\u003c/a\u003e method. The currently registered proxy selector can be retrieved by calling \n\u003ca href\u003d\"#getDefault()\"\u003e\u003ccode\u003egetDefault\u003c/code\u003e\u003c/a\u003e method. \n\u003cp\u003e When a proxy selector is registered, for instance, a subclass of URLConnection class should call the \u003ca href\u003d\"#select(java.net.URI)\"\u003e\u003ccode\u003eselect\u003c/code\u003e\u003c/a\u003e method for each URL request so that the proxy selector can decide if a direct, or proxied connection should be used. The \u003ca href\u003d\"#select(java.net.URI)\"\u003e\u003ccode\u003eselect\u003c/code\u003e\u003c/a\u003e method returns an iterator over a collection with the preferred connection approach. \u003c/p\u003e\n\u003cp\u003e If a connection cannot be established to a proxy (PROXY or SOCKS) servers then the caller should call the proxy selector\u0027s \u003ca href\u003d\"#connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)\"\u003e\u003ccode\u003econnectFailed\u003c/code\u003e\u003c/a\u003e method to notify the proxy selector that the proxy server is unavailable. \u003c/p\u003e \n\u003cp\u003eThe default proxy selector does enforce a \u003ca href\u003d\"doc-files/net-properties.html#Proxies\"\u003eset of System Properties\u003c/a\u003e related to proxy settings.\u003c/p\u003e",
  "tagMap": {
    "since": [
      "1.5"
    ]
  }
}