{
  "packageName": "java.net",
  "simpleName": "Authenticator",
  "moduleName": "java.base",
  "type": "CLASS",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "setDefault",
      "comment": "Sets the authenticator that will be used by the networking code when a proxy or an HTTP server asks for authentication. First, if there is a security manager, its checkPermission method is called with a NetPermission(\"setDefaultAuthenticator\") permission. This may result in a java.lang.SecurityException.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkPermission(java.security.Permission)\"\u003e\u003ccode\u003eSecurityManager.checkPermission(java.security.Permission)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetPermission.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003eNetPermission\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ea\u003c/code\u003e - The authenticator to be set. If a is \n\u003ccode\u003enull\u003c/code\u003e then any previously set authenticator is removed."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and its \n\u003ccode\u003echeckPermission\u003c/code\u003e method doesn\u0027t allow setting the default authenticator."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.Authenticator",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "getDefault",
      "comment": "Gets the default authenticator. First, if there is a security manager, its checkPermission method is called with a NetPermission(\"requestPasswordAuthentication\") permission. This may result in a java.lang.SecurityException. Then the default authenticator, if set, is returned. Otherwise, null is returned.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkPermission(java.security.Permission)\"\u003e\u003ccode\u003eSecurityManager.checkPermission(java.security.Permission)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetPermission.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003eNetPermission\u003c/code\u003e\u003c/a\u003e"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and its \n\u003ccode\u003echeckPermission\u003c/code\u003e method doesn\u0027t allow requesting password authentication."
        ],
        "return": [
          "The default authenticator, if set, \n\u003ccode\u003enull\u003c/code\u003e otherwise."
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.PasswordAuthentication",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "requestPasswordAuthentication",
      "comment": "Ask the authenticator that has been registered with the system for a password. First, if there is a security manager, its checkPermission method is called with a NetPermission(\"requestPasswordAuthentication\") permission. This may result in a java.lang.SecurityException.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkPermission(java.security.Permission)\"\u003e\u003ccode\u003eSecurityManager.checkPermission(java.security.Permission)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetPermission.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003eNetPermission\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eaddr\u003c/code\u003e - The InetAddress of the site requesting authorization, or null if not known.",
          "\u003ccode\u003eport\u003c/code\u003e - the port for the requested connection",
          "\u003ccode\u003eprotocol\u003c/code\u003e - The protocol that\u0027s requesting the connection (\n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/Authenticator.html#getRequestingProtocol()\"\u003e\u003ccode\u003egetRequestingProtocol()\u003c/code\u003e\u003c/a\u003e)",
          "\u003ccode\u003eprompt\u003c/code\u003e - A prompt string for the user",
          "\u003ccode\u003escheme\u003c/code\u003e - The authentication scheme"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and its \n\u003ccode\u003echeckPermission\u003c/code\u003e method doesn\u0027t allow the password authentication request."
        ],
        "return": [
          "The username/password, or null if one can\u0027t be gotten."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.PasswordAuthentication",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "requestPasswordAuthentication",
      "comment": "Ask the authenticator that has been registered with the system for a password. This is the preferred method for requesting a password because the hostname can be provided in cases where the InetAddress is not available. First, if there is a security manager, its checkPermission method is called with a NetPermission(\"requestPasswordAuthentication\") permission. This may result in a java.lang.SecurityException.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkPermission(java.security.Permission)\"\u003e\u003ccode\u003eSecurityManager.checkPermission(java.security.Permission)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetPermission.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003eNetPermission\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ehost\u003c/code\u003e - The hostname of the site requesting authentication.",
          "\u003ccode\u003eaddr\u003c/code\u003e - The InetAddress of the site requesting authentication, or null if not known.",
          "\u003ccode\u003eport\u003c/code\u003e - the port for the requested connection.",
          "\u003ccode\u003eprotocol\u003c/code\u003e - The protocol that\u0027s requesting the connection (\n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/Authenticator.html#getRequestingProtocol()\"\u003e\u003ccode\u003egetRequestingProtocol()\u003c/code\u003e\u003c/a\u003e)",
          "\u003ccode\u003eprompt\u003c/code\u003e - A prompt string for the user which identifies the authentication realm.",
          "\u003ccode\u003escheme\u003c/code\u003e - The authentication scheme"
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and its \n\u003ccode\u003echeckPermission\u003c/code\u003e method doesn\u0027t allow the password authentication request."
        ],
        "return": [
          "The username/password, or null if one can\u0027t be gotten."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.PasswordAuthentication",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "requestPasswordAuthentication",
      "comment": "Ask the authenticator that has been registered with the system for a password. First, if there is a security manager, its checkPermission method is called with a NetPermission(\"requestPasswordAuthentication\") permission. This may result in a java.lang.SecurityException.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkPermission(java.security.Permission)\"\u003e\u003ccode\u003eSecurityManager.checkPermission(java.security.Permission)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetPermission.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003eNetPermission\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003ehost\u003c/code\u003e - The hostname of the site requesting authentication.",
          "\u003ccode\u003eaddr\u003c/code\u003e - The InetAddress of the site requesting authorization, or null if not known.",
          "\u003ccode\u003eport\u003c/code\u003e - the port for the requested connection",
          "\u003ccode\u003eprotocol\u003c/code\u003e - The protocol that\u0027s requesting the connection (\n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/Authenticator.html#getRequestingProtocol()\"\u003e\u003ccode\u003egetRequestingProtocol()\u003c/code\u003e\u003c/a\u003e)",
          "\u003ccode\u003eprompt\u003c/code\u003e - A prompt string for the user",
          "\u003ccode\u003escheme\u003c/code\u003e - The authentication scheme",
          "\u003ccode\u003eurl\u003c/code\u003e - The requesting URL that caused the authentication",
          "\u003ccode\u003ereqType\u003c/code\u003e - The type (server or proxy) of the entity requesting authentication."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and its \n\u003ccode\u003echeckPermission\u003c/code\u003e method doesn\u0027t allow the password authentication request."
        ],
        "return": [
          "The username/password, or null if one can\u0027t be gotten."
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.PasswordAuthentication",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 9,
      "name": "requestPasswordAuthentication",
      "comment": "Ask the given authenticator for a password. If the given authenticator is null, the authenticator, if any, that has been registered with the system using setDefault is used. First, if there is a security manager, its checkPermission method is called with a NetPermission(\"requestPasswordAuthentication\") permission. This may result in a java.lang.SecurityException.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityManager.html#checkPermission(java.security.Permission)\"\u003e\u003ccode\u003eSecurityManager.checkPermission(java.security.Permission)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/NetPermission.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003eNetPermission\u003c/code\u003e\u003c/a\u003e"
        ],
        "param": [
          "\u003ccode\u003eauthenticator\u003c/code\u003e - the authenticator, or \n\u003ccode\u003enull\u003c/code\u003e.",
          "\u003ccode\u003ehost\u003c/code\u003e - The hostname of the site requesting authentication.",
          "\u003ccode\u003eaddr\u003c/code\u003e - The InetAddress of the site requesting authorization, or null if not known.",
          "\u003ccode\u003eport\u003c/code\u003e - the port for the requested connection",
          "\u003ccode\u003eprotocol\u003c/code\u003e - The protocol that\u0027s requesting the connection (\n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/Authenticator.html#getRequestingProtocol()\"\u003e\u003ccode\u003egetRequestingProtocol()\u003c/code\u003e\u003c/a\u003e)",
          "\u003ccode\u003eprompt\u003c/code\u003e - A prompt string for the user",
          "\u003ccode\u003escheme\u003c/code\u003e - The authentication scheme",
          "\u003ccode\u003eurl\u003c/code\u003e - The requesting URL that caused the authentication",
          "\u003ccode\u003ereqType\u003c/code\u003e - The type (server or proxy) of the entity requesting authentication."
        ],
        "throws": [
          "\u003ccode\u003e\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/SecurityException.html\" title\u003d\"class in java.lang\"\u003eSecurityException\u003c/a\u003e\u003c/code\u003e - if a security manager exists and its \n\u003ccode\u003echeckPermission\u003c/code\u003e method doesn\u0027t allow the password authentication request."
        ],
        "return": [
          "The username/password, or \n\u003ccode\u003enull\u003c/code\u003e if one can\u0027t be gotten."
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.PasswordAuthentication",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "requestPasswordAuthenticationInstance",
      "comment": "Ask this authenticator for a password.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003ehost\u003c/code\u003e - The hostname of the site requesting authentication.",
          "\u003ccode\u003eaddr\u003c/code\u003e - The InetAddress of the site requesting authorization, or null if not known.",
          "\u003ccode\u003eport\u003c/code\u003e - the port for the requested connection",
          "\u003ccode\u003eprotocol\u003c/code\u003e - The protocol that\u0027s requesting the connection (\n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/Authenticator.html#getRequestingProtocol()\"\u003e\u003ccode\u003egetRequestingProtocol()\u003c/code\u003e\u003c/a\u003e)",
          "\u003ccode\u003eprompt\u003c/code\u003e - A prompt string for the user",
          "\u003ccode\u003escheme\u003c/code\u003e - The authentication scheme",
          "\u003ccode\u003eurl\u003c/code\u003e - The requesting URL that caused the authentication",
          "\u003ccode\u003ereqType\u003c/code\u003e - The type (server or proxy) of the entity requesting authentication."
        ],
        "return": [
          "The username/password, or null if one can\u0027t be gotten"
        ],
        "since": [
          "9"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "getRequestingHost",
      "comment": "Gets the hostname of the site or proxy requesting authentication, or null if not available.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the hostname of the connection requiring authentication, or null if it\u0027s not available."
        ],
        "since": [
          "1.4"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.InetAddress",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "getRequestingSite",
      "comment": "Gets the InetAddress of the site requesting authorization, or null if not available.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the InetAddress of the site requesting authorization, or null if it\u0027s not available."
        ]
      }
    },
    {
      "returnType": {
        "name": "int",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "getRequestingPort",
      "comment": "Gets the port number for the requested connection.",
      "annotations": [],
      "tagMap": {
        "return": [
          "an \n\u003ccode\u003eint\u003c/code\u003e indicating the port for the requested connection."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "getRequestingProtocol",
      "comment": "Give the protocol that\u0027s requesting the connection. Often this will be based on a URL, but in a future JDK it could be, for example, \"SOCKS\" for a password-protected SOCKS5 firewall.",
      "annotations": [],
      "tagMap": {
        "see": [
          "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/URL.html#getProtocol()\"\u003e\u003ccode\u003eURL.getProtocol()\u003c/code\u003e\u003c/a\u003e"
        ],
        "return": [
          "the protocol, optionally followed by \"/version\", where version is a version number."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "getRequestingPrompt",
      "comment": "Gets the prompt string given by the requestor.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the prompt string given by the requestor (realm for http requests)"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.lang.String",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 20,
      "name": "getRequestingScheme",
      "comment": "Gets the scheme of the requestor (the HTTP scheme for an HTTP firewall, for example).",
      "annotations": [],
      "tagMap": {
        "return": [
          "the scheme of the requestor"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.PasswordAuthentication",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getPasswordAuthentication",
      "comment": "Called when password authorization is needed. Subclasses should override the default implementation, which returns null.",
      "annotations": [],
      "tagMap": {
        "return": [
          "The PasswordAuthentication collected from the user, or null if none is provided."
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.URL",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getRequestingURL",
      "comment": "Returns the URL that resulted in this request for authentication.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the requesting URL"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "returnType": {
        "name": "java.net.Authenticator$RequestorType",
        "type": "Class"
      },
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "getRequestorType",
      "comment": "Returns whether the requestor is a Proxy or a Server.",
      "annotations": [],
      "tagMap": {
        "return": [
          "the authentication type of the requestor"
        ],
        "since": [
          "1.5"
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Constructor for subclasses to call.",
      "annotations": [],
      "tagMap": {}
    }
  ],
  "innerClasses": [
    "java.net.Authenticator$RequestorType"
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "java.net.Authenticator",
  "comment": "The class Authenticator represents an object that knows how to obtain authentication for a network connection. Usually, it will do this by prompting the user for information. \n\u003cp\u003e Applications use this class by overriding \u003ca href\u003d\"#getPasswordAuthentication()\"\u003e\u003ccode\u003egetPasswordAuthentication()\u003c/code\u003e\u003c/a\u003e in a sub-class. This method will typically use the various getXXX() accessor methods to get information about the entity requesting authentication. It must then acquire a username and password either by interacting with the user or through some other non-interactive means. The credentials are then returned as a \u003ca href\u003d\"PasswordAuthentication.html\" title\u003d\"class in java.net\"\u003e\u003ccode\u003ePasswordAuthentication\u003c/code\u003e\u003c/a\u003e return value. \u003c/p\u003e\n\u003cp\u003e An instance of this concrete sub-class is then registered with the system by calling \u003ca href\u003d\"#setDefault(java.net.Authenticator)\"\u003e\u003ccode\u003esetDefault(Authenticator)\u003c/code\u003e\u003c/a\u003e. When authentication is required, the system will invoke one of the requestPasswordAuthentication() methods which in turn will call the getPasswordAuthentication() method of the registered object. \u003c/p\u003e\n\u003cp\u003e All methods that request authentication have a default implementation that fails.\u003c/p\u003e",
  "tagMap": {
    "see": [
      "\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/Authenticator.html#setDefault(java.net.Authenticator)\"\u003e\u003ccode\u003esetDefault(java.net.Authenticator)\u003c/code\u003e\u003c/a\u003e, \n\u003ca href\u003d\"https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/Authenticator.html#getPasswordAuthentication()\"\u003e\u003ccode\u003egetPasswordAuthentication()\u003c/code\u003e\u003c/a\u003e"
    ],
    "since": [
      "1.2"
    ]
  }
}