{
  "packageName": "org.bukkit.plugin",
  "simpleName": "ServicesManager",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "service",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "T",
            "type": "Class"
          },
          "name": "provider",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.plugin.Plugin",
            "type": "Class"
          },
          "name": "plugin",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "ServicePriority",
            "type": "Class"
          },
          "name": "priority",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "register",
      "comment": "Register a provider of a service.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - Provider"
        ],
        "param": [
          "\u003ccode\u003eservice\u003c/code\u003e - service class",
          "\u003ccode\u003eprovider\u003c/code\u003e - provider to register",
          "\u003ccode\u003eplugin\u003c/code\u003e - plugin with the provider",
          "\u003ccode\u003epriority\u003c/code\u003e - priority of the provider"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.plugin.Plugin",
            "type": "Class"
          },
          "name": "plugin",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "unregisterAll",
      "comment": "Unregister all the providers registered by a particular plugin.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eplugin\u003c/code\u003e - The plugin"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "Class",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "service",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "Object",
            "type": "Class"
          },
          "name": "provider",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "unregister",
      "comment": "Unregister a particular provider for a particular service.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eservice\u003c/code\u003e - The service interface",
          "\u003ccode\u003eprovider\u003c/code\u003e - The service provider implementation"
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "Object",
            "type": "Class"
          },
          "name": "provider",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "unregister",
      "comment": "Unregister a particular provider.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eprovider\u003c/code\u003e - The service provider implementation"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "service",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "load",
      "comment": "Queries for a provider. This may return null if no provider has been registered for a service. The highest priority provider is returned.",
      "annotations": [
        {
          "type": {
            "name": "Nullable",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - The service interface"
        ],
        "param": [
          "\u003ccode\u003eservice\u003c/code\u003e - The service interface"
        ],
        "return": [
          "provider or null"
        ]
      }
    },
    {
      "returnType": {
        "name": "org.bukkit.plugin.RegisteredServiceProvider",
        "parameters": [
          {
            "name": "T",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "service",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getRegistration",
      "comment": "Queries for a provider registration. This may return null if no provider has been registered for a service.",
      "annotations": [
        {
          "type": {
            "name": "Nullable",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - The service interface"
        ],
        "param": [
          "\u003ccode\u003eservice\u003c/code\u003e - The service interface"
        ],
        "return": [
          "provider registration or null"
        ]
      }
    },
    {
      "returnType": {
        "name": "List",
        "parameters": [
          {
            "name": "org.bukkit.plugin.RegisteredServiceProvider",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.plugin.Plugin",
            "type": "Class"
          },
          "name": "plugin",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getRegistrations",
      "comment": "Get registrations of providers for a plugin.",
      "annotations": [
        {
          "type": {
            "name": "NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eplugin\u003c/code\u003e - The plugin"
        ],
        "return": [
          "provider registrations"
        ]
      }
    },
    {
      "returnType": {
        "name": "Collection",
        "parameters": [
          {
            "name": "org.bukkit.plugin.RegisteredServiceProvider",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "service",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getRegistrations",
      "comment": "Get registrations of providers for a service. The returned list is unmodifiable.",
      "annotations": [
        {
          "type": {
            "name": "NotNull",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - The service interface"
        ],
        "param": [
          "\u003ccode\u003eservice\u003c/code\u003e - The service interface"
        ],
        "return": [
          "list of registrations"
        ]
      }
    },
    {
      "returnType": {
        "name": "Collection",
        "parameters": [
          {
            "name": "Class",
            "parameters": [
              {
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "getKnownServices",
      "comment": "Get a list of known services. A service is known if it has registered providers for it.",
      "annotations": [
        {
          "type": {
            "name": "NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "list of known services"
        ]
      }
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "Class",
            "parameters": [
              {
                "name": "T",
                "type": "Class"
              }
            ],
            "type": "Class"
          },
          "name": "service",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "isProvidedFor",
      "comment": "Returns whether a provider has been registered for a service. Do not check this first only to call load(service) later, as that would be a non-thread safe situation.",
      "annotations": [],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - service"
        ],
        "param": [
          "\u003ccode\u003eservice\u003c/code\u003e - service to check"
        ],
        "return": [
          "whether there has been a registered provider"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.plugin.ServicesManager",
  "annotations": [],
  "tagMap": {}
}