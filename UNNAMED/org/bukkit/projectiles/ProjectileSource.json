{
  "packageName": "org.bukkit.projectiles",
  "simpleName": "ProjectileSource",
  "type": "INTERFACE",
  "superClass": {
    "name": "java.lang.Object",
    "type": "Class"
  },
  "members": [
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "Class",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "T",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "projectile",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "upperBounds": [
            {
              "name": "org.bukkit.entity.Projectile",
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "launchProjectile",
      "comment": "Launches a Projectile from the ProjectileSource.",
      "annotations": [
        {
          "type": {
            "name": "NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - a projectile subclass"
        ],
        "param": [
          "\u003ccode\u003eprojectile\u003c/code\u003e - class of the projectile to launch"
        ],
        "return": [
          "the launched projectile"
        ]
      }
    },
    {
      "returnType": {
        "name": "T",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "Class",
            "parameters": [
              {
                "upperBounds": [
                  {
                    "name": "T",
                    "type": "Class"
                  }
                ],
                "type": "Wildcard"
              }
            ],
            "type": "Class"
          },
          "name": "projectile",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "Nullable",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.util.Vector",
            "type": "Class"
          },
          "name": "velocity",
          "varargs": false
        }
      ],
      "genericParameters": [
        {
          "name": "T",
          "upperBounds": [
            {
              "name": "org.bukkit.entity.Projectile",
              "type": "Class"
            }
          ],
          "type": "Variable"
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 0,
      "name": "launchProjectile",
      "comment": "Launches a Projectile from the ProjectileSource with an initial velocity.",
      "annotations": [
        {
          "type": {
            "name": "NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "Type Parameters:": [
          "\u003ccode\u003eT\u003c/code\u003e - a projectile subclass"
        ],
        "param": [
          "\u003ccode\u003eprojectile\u003c/code\u003e - class of the projectile to launch",
          "\u003ccode\u003evelocity\u003c/code\u003e - the velocity with which to launch"
        ],
        "return": [
          "the launched projectile"
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 513,
  "name": "org.bukkit.projectiles.ProjectileSource",
  "annotations": [],
  "tagMap": {}
}