{
  "packageName": "org.bukkit.conversations",
  "simpleName": "FixedSetPrompt",
  "type": "CLASS",
  "superClass": {
    "name": "org.bukkit.conversations.ValidatingPrompt",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "List",
        "parameters": [
          {
            "name": "String",
            "type": "Class"
          }
        ],
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "fixedSet",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.conversations.ConversationContext",
            "type": "Class"
          },
          "name": "context",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "String",
            "type": "Class"
          },
          "name": "input",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "isInputValid",
      "comment": "Description copied from class: ValidatingPrompt",
      "annotations": [],
      "tagMap": {
        "Specified by:": [
          "\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/conversations/ValidatingPrompt.html#isInputValid(org.bukkit.conversations.ConversationContext,java.lang.String)\"\u003eisInputValid\u003c/a\u003e\u003c/code\u003e\u0026nbsp;in class\u0026nbsp;\n\u003ccode\u003e\u003ca href\u003d\"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/conversations/ValidatingPrompt.html\" title\u003d\"class in org.bukkit.conversations\"\u003eValidatingPrompt\u003c/a\u003e\u003c/code\u003e"
        ],
        "param": [
          "\u003ccode\u003econtext\u003c/code\u003e - Context information about the conversation.",
          "\u003ccode\u003einput\u003c/code\u003e - The player\u0027s raw console input."
        ],
        "return": [
          "True or false depending on the validity of the input."
        ]
      }
    },
    {
      "returnType": {
        "name": "String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "formatFixedSet",
      "comment": "Utility function to create a formatted string containing all the options declared in the constructor.",
      "annotations": [
        {
          "type": {
            "name": "NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "the options formatted like \"[bar, cheese, panda]\" if bar, cheese, and panda were the options used"
        ]
      }
    },
    {
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "String",
            "type": "Class"
          },
          "name": "fixedSet",
          "varargs": true
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "comment": "Creates a FixedSetPrompt from a set of strings. foo \u003d new FixedSetPrompt(\"bar\", \"cheese\", \"panda\");",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003efixedSet\u003c/code\u003e - A fixed set of strings, one of which the user must type."
        ]
      }
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "org.bukkit.conversations.FixedSetPrompt",
  "annotations": [],
  "tagMap": {}
}