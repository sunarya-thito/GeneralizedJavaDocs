{
  "packageName": "org.bukkit.help",
  "simpleName": "HelpTopic",
  "type": "CLASS",
  "superClass": {
    "name": "Object",
    "type": "Class"
  },
  "members": [
    {
      "type": {
        "name": "String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "name",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "shortText",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "fullText",
      "annotations": [],
      "tagMap": {}
    },
    {
      "type": {
        "name": "String",
        "type": "Class"
      },
      "memberType": "JavaField",
      "modifiers": 4,
      "name": "amendedPermission",
      "annotations": [],
      "tagMap": {}
    },
    {
      "returnType": {
        "name": "boolean",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.command.CommandSender",
            "type": "Class"
          },
          "name": "player",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1025,
      "name": "canSee",
      "comment": "Determines if a Player is allowed to see this help topic. HelpTopic implementations should take server administrator wishes into account as set by the amendCanSee(String) function.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eplayer\u003c/code\u003e - The Player in question."
        ],
        "return": [
          "True of the Player can see this help topic, false otherwise."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "Nullable",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "String",
            "type": "Class"
          },
          "name": "amendedPermission",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "amendCanSee",
      "comment": "Allows the server administrator to override the permission required to see a help topic. HelpTopic implementations should take this into account when determining topic visibility on the canSee(org.bukkit.command.CommandSender) function.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eamendedPermission\u003c/code\u003e - The permission node the server administrator wishes to apply to this topic."
        ]
      }
    },
    {
      "returnType": {
        "name": "String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getName",
      "comment": "Returns the name of this help topic.",
      "annotations": [
        {
          "type": {
            "name": "NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "The topic name."
        ]
      }
    },
    {
      "returnType": {
        "name": "String",
        "type": "Class"
      },
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getShortText",
      "comment": "Returns a brief description that will be displayed in the topic index.",
      "annotations": [
        {
          "type": {
            "name": "NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "return": [
          "A brief topic description."
        ]
      }
    },
    {
      "returnType": {
        "name": "String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "org.bukkit.command.CommandSender",
            "type": "Class"
          },
          "name": "forWho",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "getFullText",
      "comment": "Returns the full description of this help topic that is displayed when the user requests this topic\u0027s details. The result will be paginated to properly fit the user\u0027s client.",
      "annotations": [
        {
          "type": {
            "name": "NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003eforWho\u003c/code\u003e - The player or console requesting the full text. Useful for further security trimming the command\u0027s full text based on sub-permissions in custom implementations."
        ],
        "return": [
          "A full topic description."
        ]
      }
    },
    {
      "returnType": {
        "name": "void",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "Nullable",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "String",
            "type": "Class"
          },
          "name": "amendedShortText",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "Nullable",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "String",
            "type": "Class"
          },
          "name": "amendedFullText",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "name": "amendTopic",
      "comment": "Allows the server admin (or another plugin) to add or replace the contents of a help topic. A null in either parameter will leave that part of the topic unchanged. In either amending parameter, the string \u003ctext\u003e is replaced with the existing contents in the help topic. Use this to append or prepend additional content into an automatically generated help topic.",
      "annotations": [],
      "tagMap": {
        "param": [
          "\u003ccode\u003eamendedShortText\u003c/code\u003e - The new topic short text to use, or null to leave alone.",
          "\u003ccode\u003eamendedFullText\u003c/code\u003e - The new topic full text to use, or null to leave alone."
        ]
      }
    },
    {
      "returnType": {
        "name": "String",
        "type": "Class"
      },
      "parameters": [
        {
          "annotations": [
            {
              "type": {
                "name": "NotNull",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "String",
            "type": "Class"
          },
          "name": "baseText",
          "varargs": false
        },
        {
          "annotations": [
            {
              "type": {
                "name": "Nullable",
                "type": "Class"
              }
            }
          ],
          "type": {
            "name": "String",
            "type": "Class"
          },
          "name": "amendment",
          "varargs": false
        }
      ],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 4,
      "name": "applyAmendment",
      "comment": "Developers implementing their own custom HelpTopic implementations can use this utility method to ensure their implementations comply with the expected behavior of the amendTopic(String, String) method.",
      "annotations": [
        {
          "type": {
            "name": "NotNull",
            "type": "Class"
          }
        }
      ],
      "tagMap": {
        "param": [
          "\u003ccode\u003ebaseText\u003c/code\u003e - The existing text of the help topic.",
          "\u003ccode\u003eamendment\u003c/code\u003e - The amending text from the amendTopic() method."
        ],
        "return": [
          "The application of the amending text to the existing text, according to the expected rules of amendTopic()."
        ]
      }
    },
    {
      "parameters": [],
      "isDefaultMethod": false,
      "memberType": "JavaMethod",
      "modifiers": 1,
      "annotations": [],
      "tagMap": {}
    }
  ],
  "memberType": "JavaClass",
  "modifiers": 1025,
  "name": "org.bukkit.help.HelpTopic",
  "annotations": [],
  "tagMap": {}
}